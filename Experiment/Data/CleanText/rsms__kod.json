{
    "rsms": "Thanks. I usually keep these common patterns in my global gitignore. Right now I'm out traveling w/ only my phone, but will merge later tonight. I will however need you to sign a CLA (will send instructions later).\n. Merged\n. Thanks.\n. Nice work! Landed in master.\n. I believe this closed Ticket 34.\n. I'd prefer to leave src/NSString-editdistance.m unmodified, but resetting groupSize is obviously unnecessary. But please forgive me as I just did that small change in a different branch and will ignore this patch. :)\n. Not having a \"New tab\" button is obviously by design. Also, kassert(tabStripController_); should not be removed. I will instead add this:\nself.showsNewTabButton = kconf_bool(@\"window/newTabButton/enable\", NO);\nThanks though.\n. Nice. Just a few things related to style and performance:\n- Please follow the over-all style of Kod source and write } else { instead of }else{ please.\n- Avoid unnecessary objective-c calls in functions which are called often and block the UI. For instance, instead of calling this self.textStorage.delegate several times in the same scope, put the result on the stack and use that (i.e. KDocument *doc = self.textStorage.delegate)\n- rangeOfLineIndentationAtLineNumber is very inefficient (NSString's characterAtIndex: in particular). Better to use rangeOfCharacterFromSet: with [NSCharacterSet whitespaceCharacterSet]\n- [[self selectedRanges] objectAtIndex:0] involves creating a temporary NSArray just to throw it away afterwards. Prefer to use selectedRange instead.\n- locationOfLineAtLineNumber: seems a bit unnecessary to me when you can use the equally \"explanative\" but slightly faster rangeOfLineAtLineNumber:].location\n- In indentLine:, don't call super's implementation of setSelectedRange: and insertText: -- you should call self's implementation (super is a special keyword and not a variable in objective-c, btw).\nI'm very sorry if I'm a bastard, but I want to keep Kod fast and its code consistent.\nAlso, I just pushed a rather extensive update to master -- you might want to pull & merge that before fixing the quirks.\nThanks!\n. Many thanks! Landed in master.\n. Thanks. Merged.\n. The font will be changeable in the style sheet. It's currently hard-coded since I've not yet come up with the final internal design for fonts. See Ticket 80\n. Thanks. Closes Ticket 120\n. Nice. Would you please mind signing the CLA first?\nhttp://kodapp.com/cla.html\nIt's for our own protection and mentioned in the README. Thanks.\n. Thanks. Closed ticket 124\n. Closes ticket 84\n. Thanks. Landed in rsms/kod@6c0a819e907e1bd5f3e9919523a0147c6e9b27be\n. Would you please ping me on IRC when you see me? (Or send me a message here on github)\n. Thanks. Would you please sign the CLA? http://kodapp.com/cla.html\n. I'm getting this:\n$ git pull https://github.com/jurriaan/kod.git 932ce19\nfatal: Couldn't find remote ref 932ce19\n. Pretty! Nice work.\n\n. Closes Ticket 80 (ticket comments include instructions on usage)\n. Nice. Would you mind adding support for when the style is reloaded too? Have a look at https://github.com/rsms/kod/blob/dc86414c0ab/src/KMetaRulerView.mm#L65 for some inspiration (you can basically copy-paste from that one). And don't forget to unregister in dealloc.\n. When Kod is running, open Kod.app/Contents/Resources/style/default.css and modify it. Kod will know it's the same style it's using and issue a reload of it.\n. Closes Ticket 1\n. Line 3 of pull.sh seems to be invalid/broken? Also, if you change it to use upstream by default (a good idea!) then maybe adding a line or two about how to make it work in the README (i.e. git remote add upstream ...)?\nWhile at it, would you please mind fixing some sanitary stuff:\n- NO tab characters in the source code. Please use two spaces as dictated by http://google-styleguide.googlecode.com/svn/trunk/objcguide.xml?showone=Spaces_vs._Tabs#Spaces_vs._Tabs (which is linked to from https://github.com/rsms/kod/wiki/Code-style-guide)\n- Double space (or tab) in }  else if should be single space\n- Method call at line 1433 of src/KDocument.mm should be correctly wrapped (see the code guideline if unsure of how)\nThanks\n. Can I close this now? (since I pulled in the other one which seemed to contain the same stuff)\n. BTW, why are you not hanging out in irc://irc.freenode.net/#kod?\n. Seems like it didn't quite get solved:\n\n. Already fixed in https://github.com/rsms/kod/commit/c5743e04cfb09b19447252b25665f1acac6e363f#diff-4\n. Thanks. Landed in master after some tab-to-space love.\n. Nice work! Closes ticket 47\n. Nice work. Closes ticket 19\n. Quite a nice feature. Would you mind moving the UnclutterView into its own file and name it something that's a little more self-explanatory? For instance KWindowBackgroundCoverView (that relates to what the feature is called/named in the interface). Also, would you make the background window hide when Kod is deactivated? I think it's as easy as sending setHidesOnDeactivate:YES to the NSWindow.\nAnd then there's the code \"rumsrenhet\":\nPlease follow the Google Objective-C code style guidelines (link and info in the wiki), thus:\n- (IBAction)coverBackground:(id)sender\n{\nBecome:\n- (IBAction)coverBackground:(id)sender {\nAnd -[KAppDelegate coverBackground:] is placed under the \"NSServices\" group of the source file. It should probably move to the \"Actions\" group.\n. Regarding setHidesOnDeactivate:YES: Well, leave it as NO then. I guess this is a very \"narrow\" feature. I mean, OS X already provides a convention for \"clean up all this mess!\" (Cmd+Alt+H), so I imagine not many people will use this. But as it doesn't impact the default user interface nor performance or code clutter, I guess an extra menu item won't hurt :)\nLook in kconf.h for the interface to the prefs. For instance, reading the value:\nBOOL isActive = kconf_bool(@\"window/backgroundCover/enabled\", NO);\nAnd setting it:\nkconf_set_bool(@\"window/backgroundCover/enabled\", isActive);\nNote: Setting and getting is very cheap, so no need to defer setting.\n. Nice work. Landed in rsms/kod@9e6efacc0b7d31c7b3cfc51160f236244c3e4db6\n. Please also sign the CLA: http://kodapp.com/cla.html\n. Weird... I can't find you in the data spreadsheet: http://d.pr/SpaZ (I'm assuming your name is \"Sasha Koss\"  as stated on https://github.com/kossnocorp)\n. I found an entry by a \"Aleksandr Kostyutchenko\" pointing to your github URL. Is that you? For legal reasons, this need to be your real name and so should the entry in AUTHORS.md be. (Sorry for any inconvenience)\n. It's ok. I'll update the AUTHORS.md to reflect the name used to sign the CLA.\n. Nice work.\n. Nice. But I would prefer that we use the AppKit/NSDocument autosave interface since there is one. See http://developer.apple.com/library/mac/documentation/Cocoa/Reference/ApplicationKit/Classes/NSDocument_Class/Reference/Reference.html#//apple_ref/occ/instm/NSDocument/autosaveDocumentWithDelegate:didAutosaveSelector:contextInfo:\n. I see, but what I would want us to do is to use the autosave mechanics (except from the interval triggering part). When the app loses focus, simply:\nNSDocumentController *docController = [NSDocumentController sharedController];\nif ([docController hasEditedDocuments]) {\n  for (KDocument *doc in docController.documents) {\n    if ([doc hasUnautosavedChanges])\n      [doc autosaveDocumentWithDelegate:didAutosaveSelector:contextInfo:...\n  }\n}\nI'd like us to avoid re-inventing a wheel which has already been invented. :)\n. After trying this out I realized what actually happened \u2014 no \"really print? ok, how...\" dialog and an implicit but visible postscript-to-pdf conversion. I think this might better off as a js plugin rather than to replace the OS standard printing. What should be done is rather to setup the to-be-printed view with a bright color scheme and suiting font size, hooking into the standard printing system.\n. Appreciated.\n. Ah, that's just some debug stuff that made it into upstream. Sorry.\n. Thanks @kc5nra and @scrod \u2014 landed in master\n. Thanks. I haven't had the opportunity to test this myself though, but it works for Xcode 3. Xcode 4 users; please let me know if you're still experiencing issues.\n. Thank you, but since the parser is re-written the new canonical stylesheet will be very different structurally speaking (since there's now a notion of structure which the previous parser/editor didn't have).\n. Please put this into the xcconfig files rather than as part of the xcode project itself.\n. ",
    "bryanjswift": "I got rid of my repository to start from a clean slate because so much work had been done on the build process (including many of these steps) while I was in transit and couldn't be working on this.\n. ",
    "zachriggle": "+1 on pulling this in.  I did most of these things on my local copy (git submodule, README.md for Homebrew) but since there's already a pull request open, I'll just vote this one up.\n. ",
    "KieranP": "This has already been pulled in, or fixed up some other way, as the install process is much cleaner now.\nSo this pull request could be closed now.\n. ",
    "Swizec": "Realised there's a bug in my code and a missing basic functionality.\nClosing this for now and will reopen or make a new pull request when I fix the problems.\n. Actually I just realised there is likely a nasty bug in the way I maintain indentation when going to a new line.\nPlease refrain from merging until I figure this one out, shouldn't take more than a day or so :)\n. Thanks for the helpful pointers, as stated, being a complete objC novice I have no idea about a lot of these things :)\n. The new commits address some of the performance issues you mentioned and fix all known bugs.\nSome of your suggestions I couldn't quite implement. Namely the \n- locationOfLineAtLineNumber had to stay because otherwise I kept getting EXC_BAD_ACCESS errors\n- the rangeOfCharacterFromSet didn't really seem more efficient since it can only give the range of a single character at a time, so if I wanted to find the range of a chunk of characters I would have to keep substringing the whole line and that seems wasteful. Maybe I'm thinking about it wrong?\nCheers\n~Swizec\n. Just noticed another ticket was opened about this #70\n. Yeah sorry I had to get some sleep, had been up for two days :)\nAnyway, could you just tell me what you did to get that screenshot? I'll try fixing it more.\n. ",
    "puls": "Okay, the CLA is in.\n. ",
    "codykrieger": "Ignore this one...broke closing tabs that are not dirty. 2 minutes...\n. ",
    "lucsky": "Oh, right, sorry I forgot about the CLA.\nSigned.\n. ",
    "jurriaan": "Whoops, I just saw my work on the lang files was unnecessary because you're working on a new textparser. But the rest of it is still useable:)\n. Added save after losing focus feature\n. I think I wasn't clear, but from reading the autosave interface docs I understand it's purpose is to save a file every x seconds, when my patch is about saving focus after cmd-tabbing away from the app.\nIt's a feature I use every day when I'm doing webdevelopment using Textmate\n. Well, ok, I understand your reasons for using autosave, but I still think it's not the best way to do it, because if a document isn't saved it'll save it to a temporary location (which is not wanted I think).\nYes, I can also check if the document  has a URL like this:\nif ([doc hasUnautosavedChanges] && doc.url  )\nBut to me it feels like abusing the auto save feature :) \n. ",
    "robholland": "Done.\n. ",
    "agos": "Related ticket: http://hunch.lighthouseapp.com/projects/66522/tickets/80-font-face-and-size-choice-not-retained\n. Sure, I'm working on this right now. A question for testing purposes: which is the easiest way to trigger that notification?\n. I got it to correctly change all the colors, but can't get it to change the font. Should I setFont on KTextView or on KTextStorage? Or both? Is asking setViewsNeedDisplay enough to redraw it afterwards? I think it should be. Maybe I'm not really using the a different NSFont, but I suck at GDB and can't find a way to inspect it.\n. Finally got it working! I was looking everywhere, minus the right place.\n. I found some more XCode4 issues, but I think they're all pretty easy to fix. Will investigate and make pull request if I can fix that.\n. @tylermwashburn: please refer to ticket #52, I managed to build and posted the two things I needed to do there. If it still doesn't work for you, please post any error there, and I'll look into it.\n. Ok! I didn't know about that file, but it makes a lot of sense.\n. ",
    "mmichelli": "My bad, just ignore this. \n. ",
    "epatel": "oh yes. I should add that the feature is available from the View menu.\n. Sure can do. I get to discover the finer details of the project. \nAbout the setHidesOnDeactivate:YES. I tried that first but thought it made my display flicker a little to much when going back and forth between Kod and the Terminal. With setHidesOnDeactivate:NO (default) a Terminal window can stay up front together with the Kod windows. But, I have enabled setHidesOnDeactivate:YES so you can try it.\n. I'll have a look to save the state in the preferences too.\n. Moved the stuff a little and made a little renaming. I noticed the little \"_\" last in your members. Also added it to the preferences as you described above.\n. I saw some mentioning about a 80 chars guide line so I figured I'll try to add that. I added a drawRect: method of the KTextView and a small calculation of the necessary width in refreshStyle\n. Sure, and as I have been writing, this is a 10 line hack that will give \"some\" usable output while we wait for the real implementation. \nYes, it will format the sources and output it as postscript that is shown in Preview which then can be printed. Personally I like enscript for printing and often use that than many editors own print feature. But a native implementation is certainly better than this hack :) As for js plugins I'm not the guy to help you there. Need to learn some js first :) \nCheer!\nEdward\n. ",
    "kossnocorp": "I did it before send pull request.\n. Aleksandr Kostyutchenko is my full real name. Aleksandr is same name as Sasha, but Koss is my pseudonym. Should I do something?\n. ",
    "partheseas": "Does this happen to fix this issue?\n\n\nCreate a new file.\nSave the file.\nChange the file and save again.\n\n\nWhere it says the file doesn't exist and it forces you into a save as prompt?\n. Please Rasmus, do it. I ditched Xcode 3 and now I can't build with my updates. :(\n. Build still fails for me. :(\n. Well when 0.0.4 comes out, I'll gladly update to match. :)\n. ",
    "rafaelzlisboa": "\"Make UPPER CASE\" and \"Make lower case\" are better if left unchanged, no?\n. ",
    "benbscholz": "It can go either way, I think I chose 'Upper Case' & 'Lower Case' because I saw it on another Mac app.\n. ",
    "wolovezheng": "ok. "
}