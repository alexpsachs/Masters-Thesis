{
    "RamonGilabert": "Failing... :smile: \n. So, should I merge? :smile: \n. \ud83c\udf63 \n. ",
    "vadymmarkov": "I've changed travis configuration, so #yolo\n. Let's wait for @zenangst :smile: \n. @zenangst I think it's kinda nice.\n. @zenangst Here you go.\n. A new version in Swift 3.0 is released.\n. @zenangst Hm..might be something in the project configuration, because usually we don't add header manually, right?\n. @onmyway133 Do you mean color(at: function?. Then it's probably @zenangst who implemented that.. Do we use Sugar here?\n. :+1: \n. I don't know, but I think I agree that function is better for autocompletion. Will change a bit later today.\n. Not related to this PR, but it looks more like a struct for me.. ",
    "zenangst": "Yay, such success!\n. @vadymmarkov fan-bloddy-tastic! :rainbow: :horse: :dizzy: \n. @vadymmarkov \n\n. Hey @catalandres, Hue hasn't been released yet so you'll have to specify to use master in your Cartfile.\ngithub \"hyperoslo/Hue\" \"master\"\nLet us know if that helps.\n. @catalandres no worries mate, glad we could help!\n. Awesome, thanks mate!\n. @delba this is super great, thanks for contributing and supporting Hue!\n\n. Hey @tielur, we don't aim to support Objective-C with this library. We just feel that if we start doing that it is gonna be hard draw a line where Objective-C support ends and Swift enhancement begins. Hope that made sense for anyone else reading this because it made sense in my head :sunglasses: \ntl;dr\nAdding Objective-C support is holding back development with Swift.\n. Fixed thanks! :grin: \n. This is amazeballs! I think we could just go ahead and merge it and fix the tests afterwards. I'm gonna have a look!\nThanks for contributing to Hue, you are awesome!\n. @mttrd thanks buddy! :grin: \n. @bcylin thanks mate! :grin: \n. @kumapo cheers mate!\n. Hey @OptTrader, if you orientation changes then we need to redraw the layer with a new frame. I think we could fix this by implementing a redraw method in viewWillTransitionToSize.\n. Sorry for the late response btw \ud83d\ude01 \n. @xaanimus thanks for contributing to Hue, this looks ace so I'm just gonna go-head and merge it \ud83d\ude01 \n. Hey @userna, we don't have a Swift 2.3 version of Hue. Seeing as Apple will drop support for that version in the next Xcode, we felt that it was a \"bad\" investment for us, but if you want, we can make a branch that you can make a PR towards to make it support Swift 2.3. However, this issue is a bit old so I'm just gonna close it. Keep us posted if you are still using Swift 2.3 and would like to use Hue.. Found this in the Xcode 8.2 release notes. I think it's time to start migrating to Swift 3.0.\n\nXcode 8.2 is the last release that will support Swift 2.3.  Please migrate your projects to Swift 2.3 code to Swift 3 syntax by opening the project and choosing Edit > Convert > To Current Swift Syntax.. Hey @mohpor, PR are totally welcome here, we love PR's! \ud83d\ude01 We would go as far as to say that we encourage them.\n\nHowever, we like to keep master as a development branch for the current stable release of Swift.\nI made a branch for you called swift3 so if you make a new pull request towards that branch we will gladly review your PR \ud83d\ude0e \n. Migrating current implementations is just a search and replace:\nUIColor.hex(\nUIColor(hex:\n. @mohpor this is really ace! Still scratching my head about the macOS tests, I need to take a closer look at that. But that shouldn't be a showstopper for merging this I think, I vaguely remember that there were some issues with that previously as well.\n. @mohpor this is great, thanks you for contributing to Hue\n\n. Sweet! \ud83d\ude01 \n. @Iyuna thank you for the PR, this is great! \ud83d\ude80 \n. I just found this in the Xcode release notes. You might want to migrate your source code to Swift 3.\n\nXcode 8.2 is the last release that will support Swift 2.3.  Please migrate your projects to Swift 2.3 code to Swift 3 syntax by opening the project and choosing Edit > Convert > To Current Swift Syntax.. Hey @think-dev, I haven't seen this before. Will look into and get back to you (sorry for the delayed response).\n. @think-dev aww thanks man! So I looked into it, could you try the add/umbrella-header branch to see if that fixes the issue?\n. Fixed by updating to new version of Carthage.\nSorry for the delay! It seems that updating Carthage to 0.18.1 solves the problem, so you can close this issue.\n\nReference: #35 \n. @vadymmarkov I'm unsure, I found a similar issue on CryptoSwift https://github.com/krzyzanowskim/CryptoSwift/issues/169\nSo I made the same for Hue in hopes that it would fix our issue as well \ud83d\ude01 \n. Let's just hold off until @think-dev has tested to see if this fixes the issue.\n. @bcylin that is interesting, thanks for sharing \ud83d\ude0e \n. @think-dev did you get around to test this? \ud83d\ude01 \n. Travis is complaining that the label is missing.\nSource/iOS/UIImage+Hue.swift:109:57: missing argument label 'minSaturation:' in call\n. @ZhipingYang, yup but it is removed in your PR :)\n. @ZhipingYang awesome, thanks mate!\n. Yeah I think we will do that eventually but it is not really something that we will be focusing on ourselves as we use Carthage and/or Cocoapods at Hyper. But feel free to make a PR \ud83d\ude0e \n. @ffittschen this is ace! thanks for contributing to Hue, keep rocking \ud83c\udfb8 \n. Hey @robertodias180, which version of Hue and which version of Swift are you using?\nSeems odd to me but the snippet that you shared should work.\nCould you share anything more from your implementation?. ping @robertodias180. @robertodias180 oh, nice that you found the issue and that we weren't at fault \ud83d\ude0e\nCheers mate \ud83c\udf7b . Could this be solved by using the module namespace?. @ko0f sorry for this taking so long! Awesome job man, kudos and cheers \ud83c\udf7a . Hey @Domsware, we never made a Swift 2.3 version as we jumped directly to Swift 3.0. We tend to just support what we need ourselves out of the box and have the community contribute with anything else that might be needed. This way we are in \"front\". Also, seeing that 2.3 will be deprecated soon, we didn't feel that it was worth the investment.\n\nXcode 8.2 is the last release that will support Swift 2.3.  Please migrate your projects to Swift 2.3 code to Swift 3 syntax by opening the project and choosing Edit > Convert > To Current Swift Syntax.\n\nWhat you can do to get support for Swift 2.3 is to fork the repo, checkout version 1.3.0 or the commit just before 2.0.0 was merged. And then migrate the source code to Swift 2.3. It shouldn't be that much to change.\nClosing this issue now.. @onmyway133 \n\n. But then again, I don't think we have a test for this \ud83e\udd14 . @onmyway133 Well we do... what is travis up to? \ud83e\udd14 I'll look into this!. Updated the tests now!. Hey @HanksHu,\nSorry for the delay. However, I do have some good news, I've taken over maintenance and further development of Hue and will continue to push things forward from here on end.\nAgain, sorry for the lack of responses here.. Also, I've made a PR #60 to fix this issue.. @Injazz ace, thanks you for the contribution! :). @andy1247008998 stellar, thank you!. @jiangpengyun thanks a lot mate! :). Nope, I don't see any reference to Sugar in the source :sunglasses: \n. Why subscripting instead of a function? \ud83d\ude01 \n. Is there a reason behind setting the SWIFT_OPTIMIZATION_LEVEL to -Owholemodule ? :)\n. Does it still work if we drop as Any ?\n. Oh neat, didn't know about fileprivate\n. Mind removing this whitespace? \ud83d\ude0e \n. This shouldn't be here right? \ud83d\ude0e \n. I was just curious, but now that you mention it I think they talked about that in the Xcode debugging session this WWDC \ud83d\ude0e \n. I see I see, let's just leave it then ^^\n. I agree :). ",
    "catalandres": "It totally does.\nSorry for following the instructions a bit too literally! #newb :)\n. ",
    "tielur": "So after digging a little bit more I've found that tuples are not supported in ObjC.\n. ",
    "bcylin": ":beers: \n. @think-dev could you please share the Carthage version you're using?\nI don't have the warning when I install the master branch using Carthage 0.18.1 with Xcode 8 on macOS Sierra.\n. ",
    "mention-bot": "By analyzing the blame information on this pull request, we identified @zenangst to be a potential reviewer\n. @mohpor, thanks for your PR! By analyzing the annotation information on this pull request, we identified @zenangst to be a potential reviewer\n. @mohpor, thanks for your PR! By analyzing the annotation information on this pull request, we identified @zenangst to be a potential reviewer\n. @vadymmarkov, thanks for your PR! By analyzing the annotation information on this pull request, we identified @zenangst to be a potential reviewer\n. @Iyuna, thanks for your PR! By analyzing the annotation information on this pull request, we identified @zenangst to be a potential reviewer\n. @WU3110, thanks for your PR! By analyzing the annotation information on this pull request, we identified @zenangst to be a potential reviewer\n. @zenangst, thanks for your PR! By analyzing the history of the files in this pull request, we identified @rikchilvers, @xaanimus and @vadymmarkov to be potential reviewers.\n. @zenangst, thanks for your PR! By analyzing the history of the files in this pull request, we identified @vadymmarkov, @rikchilvers and @bcylin to be potential reviewers.\n. @ZhipingYang, thanks for your PR! By analyzing the history of the files in this pull request, we identified @zenangst, @mohpor and @vadymmarkov to be potential reviewers.\n. @zenangst, thanks for your PR! By analyzing the history of the files in this pull request, we identified @rikchilvers to be a potential reviewer.\n. @ffittschen, thanks for your PR! By analyzing the history of the files in this pull request, we identified @zenangst, @mohpor and @xaanimus to be potential reviewers.\n. @ko0f, thanks for your PR! By analyzing the history of the files in this pull request, we identified @zenangst, @vadymmarkov and @mohpor to be potential reviewers.. @onmyway133, thanks for your PR! By analyzing the history of the files in this pull request, we identified @zenangst to be a potential reviewer.. ",
    "mjarvis": "To note: For some reason some tests are failing when run in xcode 8 against iOS 10.0.\nIt would be prudent to figure out why this is occuring before merging / using this fork\n. Last tests to fix here are UIColorTests.testBlending() and NSImageTests.testImageColors(). I don't have enough understanding of the colour systems or these tests to be able to identify the causes of the test failures for these. Help would be appreciated.\n. ",
    "mohpor": "@zenangst \nRebased this PR to fix the conflicts with master.\nAre PRs welcome around here?\nI wish there was a swift3 branch (a develop branch would nicely do too).\nThis is not a good idea to merge a Beta version with master, but then again, I'm developing my project in Swift 3 because it wouldn't be finished before Swift 3 is released and I don't want to migrate after the fact.\nIf you ever decided to have a develop branch or a swift3 branch, let me know.\nSincerely,\nM.\n. Yeah! That's the way to do it!\nThanks\n. Travis doesn't test the macOS target, currently image tests on macOS are failing. values returned from assessments are different from constants in the test case.\nI'm not sure why, @zenangst would love to read your review.\n. Thanks @zenangst \nI will update/rebase the PR to meet the fine tunings you mentioned.\nAbout the macOS test, I think it relies too much on the Color profiles and that makes it hard to test. I'm probably wrong because the tests show a huge difference between expected results and actual results.\n. @zenangst Fine tuning is done. Ready to be (hopefully) merged.\n. Couldn't be happier!\n. It's been updated by Xcode's Migrator. I haven't changed the value. If there is a disadvantage to this, I can remove it.\n. Nope, because it will complain that the type is valid and the test will always succeed. We should either remove the test or use it as is.\n. Yeah, that's a burden, you'll get a lot o not defined methods and variable just to know that they have been define private that doesn't mean a file-private anymore!\n. I sure don't \ud83d\ude09 \n. Yeah, I kept it for the sake of the argument, will remove the commented out line too. \ud83d\ude09 \n. Yeah, the migration process is a pretty invasive approach, but I can't complain, they sure show you all the changes (except when they update the Project's setting, including this very change)\n. ",
    "onmyway133": "\ud83c\udf89 \n. @zenangst if this is the problem, then our other frameworks will have problems too. But they are not?\n. @ghecho Hi, yours seems not related to this issue topic, which is asking for SPM support. However, you can join the discussion at https://github.com/hyperoslo/Lightbox/issues/109. This is super cooool \ud83d\udc4d . @damirstuhec @avjinder Hi, I think this problem arose during swift 3 transition. Mind making a PR \ud83d\ude09 . @skull-man Hi, thanks for your issue. This https://github.com/hyperoslo/Hue/pull/46 fixes it. @vadymmarkov I mean UIImage.colors function. @zenangst does the test pass ?. @frederik-jacques Hi, many thanks for the PR. This is \ud83d\udc4d . @boherna Hi, many thanks for the PR. I made some comments. @boherna Looking good to me. Thanks again for the PR \ud83d\ude80 . @gmlwhdtjd Why do you prefer self in this case?. @gmlwhdtjd Ah I see. I think self.getRed() is due to historical reasons. Now I think just getRed and getHue are more preferrable. @gmlwhdtjd Looks good to me \ud83d\ude80 . @pushchris thanks for the PR \ud83d\ude80 . This is nice. Should we move the same hex -> r g b parsing in UIColor, NSColor into a common function?\n. Can we use CGRectContainsPoint ?\n. Can you remove the space before the : to match our convention?. It is computed property, I don't think you need get here. Can you use 2 spaces indentation?. ",
    "andreamazz": "Check out the branch swift3 \n. ",
    "jorgej-ramos": "Thank you @zenangst. Hue is a must on any project! \n. Ok I'll try this weekend and will be back with the report. Thank you @zenangst \n. @bcylin Carthage version 0.18 using xCode 8 and macOS Sierra... Maybe 0.18.1 works and 0.18 not? I'll try this weekend.\n. @zenangst Sorry for the delay! It seems that updating Carthage to 0.18.1 solves the problem, so you can close this issue. \nThank you all!\n. ",
    "ZhipingYang": "@zenangst yeah I know, but this is required in swift3. may xcbuild should update?\n. ",
    "ghecho": "I would also want this, however, It's not currently possible since the Swift Package Manager only compiles for host platforms, this means that only macOS and Linux are supported.\nI just stumbled upon an issue with Carthage, it all goes well until you submit the app to the App Store, it throws the following errors when you are uploading the archive to the store via Xcode:\nITMS-90685 CFBundleIdentifier Collision:\nCache\nHue\nITMS-90205 Invalid Bundle:\nImaginary\nLightbox\nITMS-90206 Invalid Bundle:\nImaginary\nLightbox\nMy Cartfile only contains this:\ngithub \"hyperoslo/Lightbox\"\ngithub \"hyperoslo/Imaginary\"\nApparently I'm not the only one with this issue, as far as I can understand, this person is also having the same issue https://github.com/hyperoslo/Lightbox/issues/109 \nIMPORTANT: This is not an issue with Hue as far as I know because if you only use Hue it al goes well in the submission, the error arises when you include Lightbox (which has a dependency on Hue) and then it throws those errors.\nI tried to add support to SPM to Hue, Lightbox, Imaginary, etc. because of that issue but after some time I realized that it was not possible at the moment due to the host-platform-only issue.\n. ",
    "robertodias180": "Sorry for the delay. Ended up find the issue, some other library had an internal method with the same name. And due to swift global imports gave me conflict.. @guoyingtao since some other lib already had the same methods I just removed Hue from the project. @guoyingtao I had this issue also with Spring.. ",
    "guoyingtao": "@robertodias180 I met the same problem. How did you fix it? Thanks.. I am using Spring and Hue. It seems these two library have some conflicts. Thanks for your answer, I might as well remove Hue also.. ",
    "ko0f": "Swift FTW :)\nFixed an issue when adding too much HSB or RGB components, added checks to make sure the new values are between 0 and 1.. ",
    "avjinder": "Same here, all the colors returned are white except the background color. \nI printed the colors which were white and all of them had this value:\nUIExtendedSRGBColorSpace 1 1 1 1\n\n. ",
    "frederik-jacques": "No problem! Glad to help :-). ",
    "Injazz": "+1 to this. . ",
    "boherna": "How does it look now? As a bonus I fixed also the redComponent, greenComponent and blueComponent to follow the requested coding style.. That's funny because I never leave that space but left it following the coding convention on the same extension you used for redComponent.. The same as before, I know you don't need the get, but left it following the coding convention on the same extension you used for redComponent.. I think my Xcode defaults to 4 spaces indentation. I'll check.. ",
    "gmlwhdtjd": "@onmyway133 In fact, it doesn't have an important meaning. Just, I matched the code of the other components. That use self.getRed() to get the value. So I think self.getHue() is better that getHue().. Yes, I think so too. It doesn't need self at all.\nHow about this code?. ",
    "codecov-io": "Codecov Report\n\n:exclamation: No coverage uploaded for pull request base (master@117bff4). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster      #59   +/-\n=========================================\n  Coverage          ?   46.93%         \n=========================================\n  Files             ?        4         \n  Lines             ?      539         \n  Branches          ?        0         \n=========================================\n  Hits              ?      253         \n  Misses            ?      286         \n  Partials          ?        0\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| Tests/iOS+tvOS/UIImageTests.swift | 0% <\u00f8> (\u00f8) | |\n| Source/iOS+tvOS/UIImage+Hue.swift | 97.88% <\u00f8> (\u00f8) | |\n| Source/iOS+tvOS/UIColor+Hue.swift | 77.02% <\u00f8> (\u00f8) | |\n| Tests/iOS+tvOS/UIColorTests.swift | 0% <\u00f8> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 117bff4...e03b338. Read the comment docs.\n. # Codecov Report\nMerging #60 into master will not change coverage.\nThe diff coverage is 100%.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster      #60   +/-\n=======================================\n  Coverage   46.93%   46.93%         \n=======================================\n  Files           4        4         \n  Lines         539      539         \n=======================================\n  Hits          253      253         \n  Misses        286      286\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| Source/iOS+tvOS/UIImage+Hue.swift | 97.88% <100%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e082044...40ee792. Read the comment docs.\n. # Codecov Report\nMerging #61 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster      #61   +/-\n=======================================\n  Coverage   46.93%   46.93%         \n=======================================\n  Files           4        4         \n  Lines         539      539         \n=======================================\n  Hits          253      253         \n  Misses        286      286\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 32f48b5...1cf4448. Read the comment docs.\n. \n"
}