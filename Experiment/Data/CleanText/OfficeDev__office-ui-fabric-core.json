{
    "Jahnp": "Love these changes! Excited to have a more robust, composable build. Thanks John!\n. This looks awesome and should be good to go!\n. Looks great! I'd call this one good to go.\n. This looks really great! I'd call this good to go if we can pick a default variant.\n. This looks great! Could you also remove the comment block at the bottom of the z-index file? Kind of irrelevant at this point. Thanks!\n. Looks great! But, this fix should be applied to secondaryText too--the same bug will occur there as well.\n. Looks great--go ahead and merge this in.\n. Looks great!\n. 2 things:\n1. It's hard to tell from all the changed/new HTML files if any of there are any actual changes to Persona HTML--do you know if there are any? If so, we should document that so folks upgrading are aware.\n2. This looks REALLY, REALLY good. Seriously--what an improvement! Thanks Phil!\n. Looks great! Approved.\n. Approved\n. This looks great! Aside from the one comment, consider this Approved.\n. This looks good! Please remove the title attribute in PersonaCard.html--otherwise consider this approved.\n. Looks really, really great. Just a few formatting/naming tweaks, then consider this Approved.\n. This looks great! Could you just remove the images for the video portal? They aren't actually used. Thanks! Otherwise, Approved :)\n. Approved\n. There's still quite a few icons that need to be removed--I sent you mail about it John. Thanks!\n. Approved!\n. Approved\n. Other than a small whitespace change we discussed offline, this looks great. Approved!\n. Approved\n. Looks great!\n. Approved\n. Approved\n. Approved\n. Agreed--call the folder Icons and we're good :) Approved!\n. Approved\n. Looks great! Approved. I'll go ahead and merge this in.\n. Works great--thanks for this! Approved.\n. Approved!\n. Banners look great! Thanks--feel free to merge when you're ready\n. Approved\n. This would be a pretty big change, but we do see the value in supporting SASS/SCSS in some way. We aren't in a position to fully replat our styles any time soon, but like @CuddleBunny mentions, I could see spinning up parallel versions at some point.\nTidbit for the sake of curiosity: we originally started with LESS because it had pretty broad adoption across product teams at Microsoft.\n. Oops! Great catch, thank you! Those have been added now.\n. @andrewconnell  The sample site had to be removed, at least temporarily--though there's clearly a  need for it or something similar.\nIn the meantime, try running gulp, then check under dist/samples to view several example pages. These include a sample form, a \"video portal\" mock application, an icons demo page, and individual samples for each component.\n@rstormsf , oops! Good catch :) We were previously using BrowserSync for testing. We'll likely add it or a similar tool back in some way soon.\n. Great call! We'll add a note soon. Thanks for calling this out!\n. This has now been added! Thanks again for the suggestion.\n. Approved\n. Approved\n. Approved\n. Thanks for calling this out! We're working on getting things deployed right now.\n. A fix has been deployed--though we won't be updated link in 1.0 itself, we now have a redirect set up to handle the incorrect link. I'll close this issue, since the license should now be accessible. Thanks!\n. Hehe thanks, done.\n. This is awesome, thanks so much for this! One thing--and we should totally document this convention--could you actually re-open this against the develop branch? We use that one to capture pre-release changes. Thanks!\n. Great catch, thanks. I think this is actually an issue with the template used for component samples, which expects a JS file for a component even if one doesn't exist, hence the 404s. We will clean that up.\n. Thanks again for flagging this. I'll reactivate this issue for now until we've resolved it--we don't have an ETA yet but I want to be sure it's clear we're aware of it :)\n. Looks great!\n. Looks great! Approved\n. Hey @iJebus , thanks for taking the time to fix this! However, it looks like this PR is actually related to this issue--long story short, it's a bug with the template we use to generate these demo files. The problem is that the HTML template expects component JS files, but not all components require JS files, hence the 404s. \nWe're working on a fix in our build, and when it's ready all the demo files in dist will have accurate links. In the meantime, I'll close this Pull Request since it modifies our compiled bits. \n. Just a heads-up that this has been fixed and will be available in the next release, which we hope to have out this week.\n. Looks great, thank you!\n. Very keen eye :) Our conventions actually follow very similar patterns to those in SUIT CSS, with some of the more information-dense \"core\" classes (e.g. ms-fontColor-white) being the sole intentional deviations. We should probably publish those conventions so folks know what to snap to when contributing.\nWe chose SUIT's conventions for its scalable, namespaced, component-oriented approach--it lends itself very well to large projects and toolkits. It's also being used by several other MS web products (partially because of Fabric)--you'll notice OneDrive follows it as well.\n. Yep, this was intentional and has been fixed for the next release. Basically, there were a number of brand-related icons we couldn't include for the release, but which were still used to test with internally. References to those icons have since been removed from the sample icons page. Thanks for the heads-up!\n. Looks good, approved!\n. This fixes #80 .\n. Ah, good catch. Though looking at it now, I realize that we likely don't need a postinstall for Bower at the moment, since we don't actually have any Bower deps; we had previously been using a few libs before trimming down for GitHub. I'll merge this in the meantime, but we'll probably want to remove that bit in the future.\n. @adjohnson916 If you have time and can test to make sure things are still golden after removing the line, that'd be great! I'd be happy to merge it in then. I think it might be related to this issue, too, so that might be something to watch for.\nThanks again!\n. Nice catch, thank you!\n. Great catches, thank you! I'll merge these in.\n. Thanks for this! This issue is probably because there isn't actually anything to install. Before moving to GitHub, we were consuming some external libs via Bower, but removed those deps while cleaning house; seems we forgot to also remove the postinstall script. This will be fixed soon.\n. We don't have a firm ETA yet (we're still in the middle of adapting some of our processes for GitHub :)), but I would expect something within the next few weeks. \n. Looks great! Approved\n. Ah, that's pretty ugly. Thanks for the report. What OS/browser did you see this in?\n. Thanks! We'll look into this. It may be an issue with the plugin powering the Date Picker.\n. Looks really great! Approved\n. Approved! Looks great.\n. That's pretty gross. Thanks for the tip, we'll look into this.\n. That's a great catch. Thanks Andrew, I'll merge this in. Sorry for the delay!\n. Given that pickadate.js has been split out from Jquery.DatePicker.js as of https://github.com/OfficeDev/Office-UI-Fabric/pull/137, this change should be unnecessary now. Thanks for watching out for this, though--we appreciate the diligence!\n. You're totally right, this (and the grid in general) should be better documented. Thanks for the catch--we'll get on it asap!\n. Awesome, approved!\n. Wow--this is really cool, and is very much in line with our aspirations and plans for extending Fabric. Thanks for getting this started--keep it up! We're looking into how MS could start to prop up or support similar efforts, but have no concrete ETA yet. This will help kickstart and add fuel to those conversations.\n. Hey @anasnakawa , this is because of https://github.com/OfficeDev/Office-UI-Fabric/issues/67. Basically, the template used for component demo HTML pages always has a reference to <Component>.js and Jquery.<Component>.js, even if those don't exist. We're working on a fix for this that should be ready soon; I'll close the issue for now since the work for it is already being tracked. Thanks for catching this! \n. Ah, I see, I must have misunderstood. There actually have never been JS for Dialog--the references above are a bit misleading in that sense--but would it be fair to say the issue is that there should be? I could see us including JS to demo how to open/close specific dialogs.\n. Nope, I think you've got it. This sounds like what the issue in https://github.com/OfficeDev/Office-UI-Fabric/issues/67 is describing. The problem is that those demo files are generated automatically from a template, and that template includes hard-coded references to component scripts, even if those files don't exist, since not every component has or requires JS to work. You'll notice the same issue for List, ListItem, Callout, and a few others in addition to Dialog. \nWe know this is pretty confusing, so we'll make sure to update the build & template to only include references to JS files if they exist. \nDoes this help?\n. Thanks! This is actually a known issue: https://github.com/OfficeDev/Office-UI-Fabric/issues/67 . We're working on a fix for it now.\nBasically, the template used for component demo HTML pages has a hard-coded reference to <Component>.js and Jquery.<Component>.js, even if those files don't exist. Since several components, like the ones you mentioned and a few others, do not require JavaScript to function, those files don't exist--hence the errors. \nThe fix for this should be ready soon, and will be available in our next release. I'll close this issue for now since the work for it is already being tracked, unless I'm missing something. Thanks for catching this!\n. Yep, this makes lots of sense, and will be a given as we dig deeper into JS support for components. I would expect to see TypeScript as an essential part of our longer-term JS story, especially as we extend into support for other frameworks & libraries. \nThough, to be honest, the jQuery plugins have been demonstration-only and not necessarily production-ready--not to say that couldn't change at some point--but because of that, I'm not sure definitions would be immediately useful. Would you still want d.ts files for those as well?\n. Hi @robi26 , thanks so much for this and apologies for the delay in reviewing it! Sorry for the further hassle, but could you please re-open this against the master branch? We've made some changes to our branches to simplify pull requests; develop has now been merged into master, but we need to clear out all PRs that have been opened against develop so we can delete it to make things even simpler. \nFor the moment, I'm going to close this so we can finish #145 , but feel free to re-open it at your convenience--we'll make sure to shortlist the review at that time. Thanks again!\n. Yep--could you add gulp-debug to package.json?\n. Alright, made some small adjustments. Looks great--feel free to merge!\n. We'll update this link to point to the latest after we've pushed out our next release.\n. Yes! We absolutely plan to do this--both in Bower and NPM eventually. Initially we'll do this manually, but the plan is to use Travis to automate the deployment and publish process.\nIn the meantime, you can actually still install Fabric via Bower by linking directly to the repo:\nbower install \u2018git://github.com/OfficeDev/Office-UI-Fabric#1.0.0\u2019\nAnd in bower.json:\njavascript\n{\n  \"dependencies\": {\n    \"Office-UI-Fabric\": \"git://github.com/OfficeDev/Office-UI-Fabric#1.0.0\"\n  }\n}\nDoes this help? Thanks!\n. Alright, installing by Bower and NPM should work now. Try running npm i office-ui-fabric or bower i office-ui-fabric and let us know if there any kinks. Thanks!\n. Awesome! I'll go ahead and close this, then. Cheers!\n. Nice, this is a great catch. I'll go ahead and merge this in. Thanks Andrew!\n. Good catch! This seems to have been fixed on our develop branch (which will soon be merged into master), but is not yet included in a release. Try building off of develop and see if that gives you what you'd expect.\nNote that we do plan to have a 1.1 release out shortly--most likely this week or early next week at the absolute latest--so expect to see this fixed there for sure. Thanks again for catching this!\n. We're now published to Nuget.org, thanks to @zkoehne and #164 ! Thanks for the PR! I'll go ahead and close this now. Thanks for your patience!\n. Good catch--thanks for this! \n. Thanks for catching this @rolandoldengarm and for the fix @casvaniersel ! Indeed, the develop branch will be merged into master shortly--most likely tomorrow--and a new release with the fix should be available later this week or early next week at the latest. \n. This merge is complete as of https://github.com/OfficeDev/Office-UI-Fabric/issues/146. develop will be deleted shortly.\nAs a reminder, all pull requests should now be opened against master. Thanks!\n. This looks great! Approved.\n. This works really great--thanks for this! Approved.\n. This looks great! Thanks for this, @robi26 --I'll go ahead and merge this in. Cheers!\n. Great catch! I've added the release notes from the 1.1.0 release. We'll likely transition to solely using GitHub releases for changelog management, but in the meantime we'll keep both since there links pointing to the changelog elsewhere. Thanks! I'll close for now.\n. Looks awesome, approved!\n. I believe this should be fixed as of https://github.com/OfficeDev/Office-UI-Fabric/pull/153 thanks to @robi26 --try building off of master and modifying the demo NavBar HTML. Thanks!\n. Definitely! Like I mention in https://github.com/OfficeDev/Office-UI-Fabric/issues/135, we'll be publishing to both NPM and Bower shortly. We also intend to have Travis set up to automate the publishing of new releases soon.\nThough 135 speaks to this issue as well, I'll keep this open in the meantime--the more incentive the better :) Thanks!\n. I think we're good for now, but thank you for the offer! We have the Travis work is slotted for the next few weeks, so there will be that to look forward to.\nIn the meantime, we just published to NPM and Bower--try running npm i office-ui-fabric or bower i office-ui-fabric and let us know if there any kinks! \n. Good catch--we still have a bower install postinstall command from when we were using some external packages prior to 1.0. It's definitely not necessary anymore, so we can do a quick release asap to remove that step.\n. Ok, this should be fixed now as of #170 , which is included in the 1.1.3 release. Thanks for helping keep the house clean!\n. This is really fantastic! Thanks so much for doing this. I had one question regarding packaged content--after that I'm happy to merge this in and get Fabric published on nuget.org. Cheers!\n. Looks awesome! I'll go ahead and merge this in. Thank you!\n. This looks great, thank you! I'll go ahead and merge this in.\nre: this branch: As of https://github.com/OfficeDev/Office-UI-Fabric/issues/145, there is no more develop branch, so you should definitely use master for pull requests. \n. Looks great, works great! Approved.\n. This looks like a bug with with either this add-in or the JS for the Office Add-in Fabric Sample, not with Fabric itself. The specific error you're seeing looks like it's coming from Office.js, which is a separate project from Office UI Fabric.\nPlease consider opening an issue on the issues page for the Office Add-in Fabric Sample with any relevant details or repro steps. Thank you!\n. Looks great! Tested in Chrome, Edge, and FF. Approved!\n. Totally makes sense - we're actually tracking this already with #131 :) We'll update 131 with any news on this feature. Thanks!\n. Which version are you experiencing this on? Have you tried the latest on the master branch to see if this still repros? There's been a fair bit of work on DatePicker since the last release, especially https://github.com/OfficeDev/Office-UI-Fabric/pull/184, which sounds like it may fix the issue.\n. Approved, feel free to merge.\n. Looks great, and good catch--go ahead and merge!\n. This is correct. There is no need for separate RTL versions of either Fabric.Components.less or individual component LESS file, since the build step handles all the necessary RTL conversions for Components. \nBy contrast, core bits like icons and animations need to be manually flipped with separate RTL files, since:\n1. Not every icon or animation needs to be flipped for RTL, and \n2. The techniques for these modules can differ from what the build tool will automate. For example, RTL icons are flipped using transform: scaleX(-1), which effectively \"mirrors\" them across the x-axis. \nThis is why we have separate RTL files for those modules, and why we don't need them for, say, the Grid, which is also flipped automatically, like the components.\nDoes that help? Is there a reason you'd like an RTL LESS file for components? I want to make sure we're not missing a useful scenario here. Thanks!\n. Makes sense, good catch. Approved.\n. Looks great, approved.\n. After discussing with the team, we decided that this component doesn't make sense right now. We can revisit the Carousel if there's a future need.\n. Short and sweet--approved.\n. This is unbelievably awesome to see, Harry! We'll need to make sure components are updated to SCSS before we do a full release with them, but this seriously accelerates that work. Thanks so much! \n. This makes sense. Thanks @StfBauer --we've gone ahead and merged your fix in. Closing for now.\n. This has been addressed with @StfBauer 's fix in #252--closing for now. Thanks for bringing this to our attention, @thephoenics!\n. This is awesome! Thanks @StfBauer !\n. This looks great! Approved. Feel free to merge when ready.\n. To solve this:\n1. gulp nuke\n2. gulp watch\n3. ???\n4. Profit\n. Looks great! Excited to merge this in.\n. Looks great--approved! Side note--it will be so nice when we only need to work on the SASS files :)\n. Looks solid for the most part--there's just one small nit. Feel free to merge when that's been addressed!\n. Have you checked out the copy/build steps in FabricBuild.js? Since you've removed the LESS dependencies but not the tasks that use them, those tasks will fail (hence the failing build).\n. Overall, looks really good. Biggest issue I can see is a lack of SASS linting/error reporting now that LESS is no longer part of the build at all. \nAlso, this probably doesn't need to be addressed in this PR, we should consider whether we need some of the leftover config bits from supporting 2 preprocessors, e.g. running a task for setting SassMode explicitly (it's the only mode now) and the sassExtension prop in Config.js.\n. Also, please remove component-manifest-template.less--that's no longer needed either.\n. Looks good to me!\n. Looks good!\n. Looks great to me!\n. This has been fixed on master and will be included in the 3.0.0 release.\n. Love it! But, please remove the LESS files since those won't be included in the next release. Otherwise, approved.\n. Looks great!\n. Looks great! Feel free to merge.\n. Love it. Approved!\n. Fantastic--looks great! Approved.\n. Makes sense. Looks good--approved.\n. Looks solid. Approved.\n. Agreed--looks good.\n. Looks great!\n. Minor nit--we have $ms-zIndex-back for representing values of 0, but I could go either way on this one. Otherwise approved!\n. We definitely need to double-check with design around specific directions, but there are styles we can draw from:\nAn actual slider In Settings:\n\nThe scrubber in Movies & TV (though this would be better-suited for a audio/video component):\n\nIn either case, I think that moving forward, there are reference we can pull from.\n. Yep! Just tested myself--looks great.\n. Both of these make sense and are pretty low-hanging fruit.\n. Looks good to me as well! Approved :)\nIt is worth noting that csssnano uses aggressive optimizations by default (see the readme on the original module's repo), which can actually merge common selectors and rebase z-indices. As a result, .min.css files can have unexpectedly different output from the sources. I think this is ok, since it actually saves an appreciable amount of space and seems to be the recommended path for minification, but worth noting in case any discrepancies related to these changes come up. This explains the difference you'd see when you do a diff of the old vs new .min.css files.\n. When testing this, I noticed the animationLayerOne becomes hidden (gets the is-hidden class) and doesn't reappear in some circumstances. It seems like this happens when the carousel \"switches direction\", e.g. you've clicked next two times to view the last item and it resets to display the first one.\n. Were you planning to add slideshow functionality, e.g. auto-start/stop/next/previous?\n. Yep! In fact, in this PR I've included documentation in ghdocs/BUNDLING.md that we can port straight over to the site.The PR notes are pretty much a duplicate of those.\n. Makes sense! For now, I'll go ahead and merge. Thanks for reviewing!\n. These were each fixed in #326 and #335, which were merged after the 2.0.1 release. They will be included in the 2.1.0 release, however, at which point the CDN will be updated with the changes.\n. Documentation for component usage will be tracked separately--like @mikewheaton said, for now, the disabled state for CommandBar buttons has been approved.\n. Looks great! Approved.\n. Agreed, this looks great. Consider it approved--except...\nWe should hold off on merging it in to master until we're ready for a major release, since this is a pretty significant breaking change from the default package. We should keep this and related branches up to date--or just merge all the language-related updates together--until the next major release is due. \nIn the future, it could also be useful to consider adding a bundle definition matching the old output, e.g. fabric.css in addition to language overrides, or even standalone language overrides.\n. Looks great! Approved.\n. Great catch--thanks for calling this out! Looks like it didn't get added to Fabric.Components.scss. We have a fix for this in #412 right now, and it'll definitely be included in the next release.\n. This has been fixed for 3.0.\n. This is awesome! Great work--I'm super excited to dig in here.\n. Looks awesome! Thanks for fixing this, @chrisahhh :) We'll go ahead and merge this in.\n. Hey @chrisahhh, thanks so much for your contribution! Just wanted to follow up on this PR, because we'd like to include the fix in an upcoming release of Fabric. Do you think you could address Mike's feedback when convenient? We're happy to merge this in after that adjustment has been made. Thanks!\n. Looks great, thanks for the fix! Approved.\n. Looks solid--approved.\n. Looks great! Approved.\n. Looks great! Approved.\n. Fabric 3.0: WackyTabascy\n. Looks great! Stoked to get these methods in. Approved!\n. Approved, with a few suggestions around spacing and variable naming. Otherwise, looks great--excited to have this in! Thanks!\n. Awesome. Looks great--approved!\n. This looks great--approved!\n. Diggin' it. Approved.\n. Nice work! Though I agree with Mike's point that the overall system for Panels is already pretty complicated, and this doesn't really help. But, it's a valid scenario, and if we want to pare down the system in the future, we can revisit this piece then. For now, consider this approved. \n. Awesome--approved.\n. Hey @s-KaiNet, sorry for the delay. I know it's been awhile, but I'd like to address each of your issues:\n1. This is a duplicate of #638, which we are targeting to have fixed in 3.0.\n2. This functionality has been deprecated from the PeoplePicker and will be removed in 3.0.\n3. Good catch--we should be consistent here. This will be fixed in 3.0.\n4. We'll be providing better usage guidelines for affordances such as this with the 3.0 release. While I can't guarantee that this specific functionality will be addressed, know that it's a high priority for us to address moving forward.\n5. To be clear, do you mean a disabled state for the TextField that the PeoplePicker is invoked from? If so, that should follow that same pattern as TextField. Since that doesn't exist right now we'll open a separate bug to track those styles.\n6. See the answer to question 1--this should be fixed in 3.0.\n7. The MemberList variant of the PeoplePicker has been deprecated in 3.0 in favor of the FacePile component.\n8. Same as 7--MemberList has been deprecated.\nThanks again so much for your feedback here!\n. This is great--thanks Mike! Approved.\n. Looks great! I left small formatting feedback and a note about rendering icons in HTML rather than CSS, but the biggest concern is around removing a variable/class that should probably be deprecated for the next release. Once those are addressed, consider this approved. Thanks!\n. Awesome--thanks for picking this up, @philworthington! Looks great. Looks like there might still be some merge conflicts to resolve--otherwise this looks ready to go. Consider it approved.\n. Looks great! Approved. Echoing Mike's feedback around doc updates, though.\n. Looks great! Approved.\n. Approved!\n. This looks awesome--approved!\n. Looks great! Once the casing for ms-u-sr-only has been switched to camelCase, consider this approved. \n. This is really, really cool, @wdo3650! Super excited for these additions. Approved. \nAt some point--I don't want to block on this right now--one thing I'd love us to do is think about how we document these additions. I'm thinking on the documentation site, in the .md files under ghdocs, and in-code (e.g. JSDoc). We should include guidance for where, how, and when to use these methods, ideally with demonstrational examples.\n. This is awesome!! Killer work, @battletoilet!\n. Awesome! Approved\n. Approved.\n\n. Looks great! Approved\n. Approved\n\n. Approved\n\n. Approved\n\n. Approved\nAmazing work, all! \n\n. Approved\n\n. Approved\nThanks @lixonic !\n\n. Approved\n\n. Approved\n\n. This has been fixed for 3.0.\n. This has been fixed for 3.0.\n. Approved \ud83c\udf35 \nI left one small comment about using mixins instead of hard-coded Unicode values, and it looks like there are a bunch of merge conflicts since some things have been checked in since this has opened. Once those are addressed feel free to merge this in--looks great!\n\n. Approved\n\n. Approved\n\n. Should the SCSS be updated to add the appropriate styles if the disabled attribute is added?\n. Approved\n\n. Thanks @mikewheaton!\n. Approved\n\n. Approved\n\n. @battletoilet: was that causing it to fail? The parens were intentional to make sure the value from that function was assigned immediately.\n. Approved :cactus: \n\n. Approved\n\n. Approved\n\n. Approved\n\n. Approved! Looks great.\n\n. Thanks for fixing this, @pkbullock! Closing via #698.\n. Approved \ud83d\udc24 \nI pulled down and built your fork, and it works great. Thanks for catching & fixing this issue, @pkbullock!\n\n. Approved \ud83c\udfb1 \n\n. Approved \ud83d\udc85 \nWith a few suggestions. I tested your code locally--looks & works well.\n\n. Approved :package: \n\n. Approved \ud83d\udc83 \nShould the 3.0 release be amended to include these? If you've already published to NPM, we may need to publish a 3.0.1 patch to account for this change.\n\n. Gotcha--perfect! Just making sure :)\n. Approved :hear_no_evil: \n\n. Approved \ud83c\udf6d \n\n. We actually should remove the colors from the classes as well\u2014it\u2019d be confusing for designer/developer communication if the properties of same-named classes and mixins differ that drastically.\n. Yes--where the discussion netted out was that it would make more sense for the classes to match the mixins, but recommend or provide a mechanism (e.g. a .ms-Fabric class like in Fabric-React) for setting a base text color at the document level. That was the original spirit of including color in the classes: to ensure that there was an intentional, designed baseline text color that all elements of the type ramp snap to. Setting a document-level text color would do away with the override issues affecting SP theming while still ensuring the right colors are used for plain text.\nThis would definitely need to be reflected on the site--probably both in the typography section as well as the starter template.\n. Oops--didn't see that @leddie24 already fixed this. Closing.\n. Approved \ud83d\udc56 \n\n. Approved \ud83c\udf68 \n\n. Approved :zap: \n\n. Approved :cake: \nGreat work @leddie24!\n\n. Approved :icecream: \n\n. Approved :cactus: \n\n. Approved\n\n. Approved \ud83c\udf77 \n\n. Approved \u263a\ufe0f \n\n. Approved \u00ae\ufe0f \n\n. Approved \ud83d\udc29 \n\n. Approved \ud83c\udf40 \n\n. I'll take a look at this.\n. I can't repro this from a fresh clone of 2.6.1 using Node 4.2.6 and npm 3.10.7. @ericthompson, did this error crop up on a fresh clone? What versions of Node/npm are you running?\n. So wait--did the error still occur after downgrading to Node 4.6.0? Was this on a Mac or Windows? Chances are you won't be the only one to hit this issue--I'd like to repro so it can be fixed. It could be a configuration or syntax issue. \nOr did downgrading solve the problem?\n. Gotcha. In that case, I'd rather take a crack at a patch rather than forcing users to snap to an older version of Node :) Let's update the docs in the short term, but I'll try to get a fix out today or tomorrow if possible.\n. Totally agreed on both fronts. I'll try to get that patch out soon.\n. I don't think we need TypeScript (or many of the dependencies that were for the components) anymore for the Core bits. @battletoilet @mikewheaton feels like we should just clean up those deps. Any objections?\n. Approved. My mistake, TypeScript is used for animation and responsive utilities.\n\n. Approved \u267b\ufe0f \n\n. Approved\nThough this is gonna be fixed very soon :)\n\n. Approved. Super super cool--thanks for the contribution @lafe! It does look like there are conflicts with master now, though--once those have been resolved we'd be happy to merge this in.\n\n. Strange, that didn't seem to resolve the conflicts that GH was reporting. I've updated the PR and verified that your changes are all still there, so once CI finishes I'll go ahead and merge this in. Thanks again for the contribution @lafe!\n. Approved \ud83d\udc4d \n\n. Hi @manndave, 2.6.2 was a patch for the 2.6.1 release, since we found a previously-undiscovered bug in that version that prevented compilation in new versions of Node. Since there are some users still using 2.6, we want to make sure they can at least build to view the local docs site :) We'll be getting back to our regularly-scheduled 4.x releases from here out.\n. Yep, you've hit the nail on the head. The current \"serial-only\" system for releases is a bit confusing--would make a great feature request for GitHub. In the meantime, I've updated the release text for 2.6.2 to make it abundantly clear that this is just a patch release for 2.6.1--hopefully that will help clarify the intent.\nIf you don't mind, I'm going to go ahead and close this issue for now. Thanks again for calling this to our attention!\n. Approved \n\n. Ah, we must have missed that when publishing the release. There is no difference in the output between 2.6.1 and 2.6.2, but for the sake of dependency resolution (and common sense) we'll publish 2.6.2 to NuGet as well. Stay tuned--we'll update this issue when we have that fixed. Thanks for filing @rolandoldengarm!\n. 2.6.2 has now been published to NuGet, so closing for now. Please let me know if you run into any further issues.\n. Approved\nAwesome! Thanks so much @lijunle! Looks great now.\n\n. Approved\nAwesome! Thanks @mikewheaton!\n\n. Approved \ud83d\udc4d \n\n. Approved\n\n. Approved\n\n. Yes, completely agreed on consistency--thanks for being proactive here. I know that we were consistent for some time on this and even scheduled work to do so, but seems we've fallen off a little. I'd be fine sticking with camelCase since that's a little more prevalent than kebab-case, but I don't feel super strongly about it.\n. Approved :zambia: \n. Approved\n\n. Approved\nWith gusto!\n\n. Approved\n\n. Approved\nThis is super cool. I didn't know the CDN allowed that. Thanks for this @mikewheaton!\n\n. Approved\n\n. Approved \ud83d\udde1 \n. Approved \ud83d\udcd7 \n. Approved. Approved\nMaybe this time?\n. Weird... that totally worked.. As discussed, this link should point to the .txt version. Otherwise, looks good.. Approved!\n. @gautamsi Yeah, given Selawik's license, you should be fine to bundle or host the files yourself. I will follow up with our font contact to double-check on this, as well as if there is any planned further development on Selawik (e.g. expanding character sets to match Segoe).\nAgreed with @mikewheaton around concerns for substituting the OSS symbol font. Hypothetically it should be fine for cases where there are overlaps, but there's potential for bugs with sizing and positioning. While adding first-class CSS support would take some work, you should feel free to try using them--we'd love to know how they work for you. . Hi @lafe: So sorry for the delay, I must've missed this question earlier. We've been working with our legal team on updating the documentation around the license to clarify these use cases. I don't have a timeline (we're working at the Speed of Legal), but believe us, we'd like this out soon :)\n@showenx: We're looking into ways to support this scenario; I know it's a big deal from an engineering standpoint. Unfortunately, it's a bit challenging from a legal perspective due to the usage of these assets as part of Microsoft's brand, so I can't promise anything, but know that we want to enable this. We should have some news to share here before too long.. Hi @LarsKemmann , sorry for the delay, I must have missed your original question. To confirm, yes, your app does indeed fall under the acceptable use cases described by the updated license verbiage. Fabric can indeed be used by web apps that live within, connect to, or build on Microsoft developer platforms and APIs. That was actually the motivation we had for going back to our legal team to revisit the agreement. \nAgreed that this could definitely be made more clear, though. Though I can't commit to specifics right now, I would expect to see us clarify this usage at an upcoming conference.\n@manishgarg1 for visibility.. Approved\n. I'm going to go ahead and close this for now to\u00a0deal with some of the cleanup required from merging with master. Will reopen soon.. Approved\nSorry for the delay!\n. Approved. This would be a GREAT improvement! I'm especially a fan of the second proposal, using lang on html, since this maps to how most apps in our ecosystems are used today. Providing both as options would be great as well.. Agreed, it's useful to distinguish filenames when doing fuzzy search in editors: \n\nOr in open tabs:\n\n. Thanks for doing this @mikewheaton! I'll pull down your branch to check out your changes soon. So excited to finally get these cleaned up! Things were starting to get huge and crusty.. @mikewheaton: I see--so it prevents there from being a Grid.css file being generated, but doesn't preclude a _Grid.css file from still producing output. Makes sense, I had forgotten that distinction.. @mikewheaton I also hear you on the reasoning behind the naming of _References.scss. My only \"concern\" would be that \"Common\" seems to be a, well, common name for files that import mixins and variables used across a project. I see this internally and externally on a number of projects, but if I'm honest, I don't think it's a big deal.\nI think the biggest thing would be to just make sure we call out the breaking change, because I know there are many projects that would be affected by this.. Approved\nThanks again for doing this @mikewheaton!\n. Approved\n:(\n. This is done now as of 6.0, right?. @mikewheaton Thanks for the feedback! Great points.\n\nRE: Scoping keyframs: That's a really good point, I hadn't considered that. Since they wouldn't affect classes, the \"interface\" for developers wouldn't be affected either. I'll go ahead and make this change.\nRE: Scoped icons on the CDN--definitely. I'll try to get to this today. I'd generally prefer waiting on CDN inclusion before merging, but since this is a new/currently-unused feature, I'm a little less concerned about that. . @mikewheaton @micahgodbolt: Alright, I've added version scoping to @keyframes definitions and their uses within the mixins. However, I didn't change the mixin names--that seems unnecessary at this stage (and is actually impossible as of right now without re-defining  versions). \n\nMy solution generates output like this:\n```css\n// @keyframes definitions\n@keyframes fadeIn--v5-1-0 {\n  from {\n    opacity: 0;\n    animation-timing-function: cubic-bezier(0.1, 0.25, 0.75, 0.9);\n  }\nto {\n    opacity: 1;\n  }\n}\n@keyframes slideRightIn10--v5-1-0 {\n  from {\n    transform: translate3d(-10px, 0px, 0px);\n  }\nto {\n    transform: translate3d(0px, 0px, 0px);\n  }\n}\n// Scoped animation classes\n.ms-Fabric--v5-1-0 .ms-u-slideRightIn10 {\n  animation-name: fadeIn--v5-1-0, slideRightIn10--v5-1-0;\n  animation-duration: 0.367s;\n  animation-timing-function: cubic-bezier(0.1, 0.9, 0.2, 1);\n  animation-fill-mode: both;\n}\n```\nLet me know what you think of the approach. I'll get started on getting the versioned icons on the CDN next.\nAlso--huge thanks to @micahgodbolt for the suggestions on how to resolve, well, my variable resolution issues!. I think this can be closed since #910 has been merged.. Approved\nThanks for this, @mikewheaton.\n. This sounds reasonable. I know those classes were used in the OWA Calendar view to pick up the user theme, but I'm not sure if they're still in use, or if that will continue to be the case. I'm also not sure that they're even using Fabric as a direct dependency, meaning this change might not affect them. \nI'd say as long as we follow up with them to make sure they can plan for this, we should be fine to remove them.. Approved\n. Approved\n. Hi @panigrah, sorry for the delay. Just checking--are you still seeing this issue? Also, since you mention office-ui-fabric-react, did you intend for this to be opened in the repo for that project? This repo is for tracking issues for Fabric's Core styles, not the React components.. I don't recall when these were added or what they were added for, but changing font-weight on hover seems... not great. I also believe that in general, we aren't using this pattern in product. I'd be inclined to deprecate in the next minor/patch release and remove in 7.0.. I believe these were added by @battletoilet some time ago when we wanted to add \"reset\" styles. For the most part, I don't think they were really ever broadly used. It's probably safe to just remove most of them outright.. Makes sense to me. Let's gut it!. Approved\nThis is awesome work @mikewheaton!! Super excited for these improvements--Fabric's support for non-West European languages has left much to be desired for quite some time now. With this PR, that changes from \"opt-in\" afterthought to first-class citizen. \n. Approved\n. Approved\n. Approved \ud83d\ude00 \n. Makes sense to me. . This is totally righteous. The ms- prefixes just add noise in this context and make it hard to separate from the global values we expose. Yes, they should definitely go for parameters & local definitions.. Approved\nLove it. Makes total sense. This is exactly what we have the .ms-Fabric wrapper for--to start setting opt-in, app-wide optimizations. Thanks @mikewheaton!\n. Hey @ganeshprabhun, so sorry for the delay here. This is something we're working on and should have news to share before long. Thanks!. Wanted to give a quick update here: we're actively working on these, but have a lot of legal hurdles related to the assets that we're trying to wrangle. Watch this space--we'll keep it updated when we have some news.. Hi @geekpulp, there is a Sketch toolkit now! https://developer.microsoft.com/en-us/fabric#/resources. Hi @clechner77, sorry for the delay here!\nYou should be able to do this today in one of several ways:\n\n\nYou can use the ms-Icon classes documented here directly in your HTML. This is the recommended approach here, since this guarantees that you're always using the correct character even if for some reason the Unicode value were to change down the line. Here's an example of this: \nhtml\n<i class=\"ms-Icon ms-Icon--MapPin\" aria-hidden=\"true\"></i>\n\n\nIf you're using SCSS, you can use the Icon mixins to inject the glyph you want on ::before or ::after pseudo elements. We actually use these to populate the ms-Icon classes.  An example of this might be:\nscss\n.my-Icon::before { @include ms-Icon--MapPin; }\n\n\nIf you're just using CSS and you know the Unicode value of the icon you want, you can just use those values directly like below:\ncss\n.my-Icon::before {\n  content: '\\E707'; /* Unicode for ms-Icon--MapPin */\n}\n\n\nAll approaches are valid and will work, but I'd recommend either the first or second.\nI'll go ahead and close this for now, but feel free to reopen if this doesn't address your needs. Thanks!. Approved\n. Approved \n. Approved\n. Approved\n. Approved\n. Hi @ujavai2s, it sounds like you're having an issue with the Fabric React List component. Did you intend to open this in that repo? If so, would you mind re-opening there? I'll go ahead and close this for now, but feel free to re-open if I got that wrong.. Hi @artemsaveliev, to be clear, are you talking about the Button component from Fabric React or Fabric JS?\nAlso, could you expand a little on the issue you're seeing? I'm not sure I fully understand what you're trying to accomplish and what exact issue you're seeing with button styles. In general, Fabric component class names (e.g. ms-Button) are not intended to be scoped under the ms-Fabric wrapper class.. Gotcha. There might be some options for you based on current and upcoming work but I'd want to know the specifics of your situation before recommending a particular path. I didn't realize you were a MS employee--I'll follow up offline about your specific scenario and we can report back here once resolved.. Approved\n. Hi @prabirshrestha, thanks for filing this! But, it looks like you intended to open this in the Fabric-React issues. Would you mind re-opening this in that repo? Thanks so much! I'll go ahead and close this for now if you don't mind.. Hi @lszomoru, this should exist right now as of Fabric Core 6.0 with ms-Icon--Italic.  I just checked this on the Fabric site here: http://dev.office.com/fabric#/styles/icons.\nAre you not seeing this in the current set you're using? Which version of Fabric are you on?. Approved\n. Approved\n. Approved\n. Hi @prashkan90, sorry for the delay, but could you re-open this issue there? This repo is for tracking issues related to Fabric Core styles, not the Fabric React components. The devs triaging issues there won't have visibility into this. Thanks! . Approved\n. Approved\n. Approved\n. Approved\n. Approved\n. Approved\n. Approved\n. Approved\n. Approved \ud83c\udf68 \ud83c\udf68 \n. Still approved. Approved\n. Approved\n. Approved\nCool solution--thanks for demoing the behavior.\n. Approved\n. Approved\n. Closed via #971 . Approved\n. Approved\n. Approved\n. Hey @ultrawebsites , so sorry for the delay on following up on this! This has been resolved on the website--closing for now.. Approved\n. Approved\n. Approved\n. Approved\n. Appr... wait a minute.... Closing since this user appears to have deleted their account, and since the issue would seem to make more sense in Fabric React. If this still repros, feel free to open a new issue in that repo.. Hey @BrandoIsNotASword, so sorry for the delay here. It looks like this is meant for Fabric React, not Fabric Core (this repo). If that's the case, would you mind re-opening this issue there? I'll go ahead and close this one in the meantime. Thanks!. Whoa--sorry for the delay here @ThatCarterMcBride. Thanks for opening this issue in the React repo. I'll go ahead and close this one in the meantime.. Hi @LarsLiden, it looks like this issue is a duplicate of https://github.com/OfficeDev/office-ui-fabric-react/issues/2128, and doesn't apply to Fabric Core; I'll close this for now.. Hey @chadradams, thanks! This is one of a few known documentation issues we'll be addressing very soon--we're working on a bunch of updates that should be rolling out over the next month or so. Though the code for the website is in the Fabric-React repo, I'll keep this issue open here since it concerns Fabric Core's grid class names.. Ah--I think I misunderstood this issue the first time through. The class names you list as \"incorrect\" are actually correct as of Fabric Core 6.0. What version are you using @chadradams? And, just to be clear, is this issue meant for Fabric Core (vs Fabric React)? . Fabric Core's latest version is 7.2.0--you can see the releases here: https://github.com/OfficeDev/office-ui-fabric-core/releases. Sorry for the confusion! This is a known issue that's logged in the Fabric-React repo (where the website's source is located).\nWe know that the docs site in general needs some love--we're starting a big push on fixing the site (bugs, documentation, visualizations, etc.), so expect to see lots of changes here over the next few months.. Hey @LarsLiden, is this meant for Fabric Core or Fabric React? If the latter, would you mind opening this issue there? https://github.com/OfficeDev/office-ui-fabric-react. Hey @ravalibusetty1991, sorry for the delay here. It looks like this is related to Fabric-React, not Fabric-Core. If this still repros for you with the latest release (4.31.0 as of this writing), would you mind opening this issue in that repo? I'll go ahead and close this in the meantime. Thanks! . Hey @kollster, thanks! Not to sound like a broken record, but this is one of a few known documentation issues we'll be addressing very soon--we're working on a bunch of updates that should be rolling out over the next month or so. Though the code for the website is in the Fabric-React repo, I'll keep this issue open here since it concerns Fabric Core's grid class names.. Ah, sorry for the delay here! First and foremost, I'll be the first to note that our docs are not the most clear on this subject. I'll make a work item on us to clear some of this up.\nA few clarifications:\n- We do not currently provide nor plan to support static SVGs for the \"monoline\" icons. Those are provided to the Fabric team as a webfont from a core icons team within Microsoft, and I don't believe they plan to distribute those either. \n- I think it's down now as of this writing, but the site shared by @brannmar hosts a very old set of icons that use a mix of the \"MDL1\"/Metro design language and MDL2. Also, as far as I know, it is not actively maintained. In either case, I wouldn't look to this for a reliable, official icon resource.\n  - I am working on an external version of the icon subsetting tool used to generate Fabric React's icons, which allow you to create custom webfont subsets and which are compatible with Fabric Core's icons. I can't commit to a specific timeline for this work, but the work is near complete. See https://github.com/OfficeDev/office-ui-fabric-react/issues/3218.\n- @anied: You may have already noticed this, but the line about providing both SVG and PNG refers specifically to the brand and file type icons instead of the monoline icons. Those are available in both static SVG and PNG files, and have actually been both updated with new visuals and consolidated into the @uifabric/file-type-icons package in Fabric React. However, as I call out in #1088, these aren't reflected on the Fabric site right now--but it's on our backlog to fix this.\n  - If you just need to grab specific SVG assets for the new icons, you can do so following this URL pattern, substituting icon_name with one of the names from the ]File Type Icon map](https://github.com/OfficeDev/office-ui-fabric-react/blob/master/packages/file-type-icons/src/FileTypeIconMap.ts): https://static2.sharepointonline.com/files/fabric/assets/brand-icons/product/svg/{icon_name}_16x1.svg\n    - Do know that you'll still need to include the assets license agreement to comply with the terms of using the icons.\nI'm going to go ahead and close this issue for now, since we don't plan on addressing the core question of providing static SVGs for the icons. . Hey @BKLee-MS, which version of Fabric Core are you using? I notice you're using className to add the icon names--are you using Fabric React, or Fabric Core directly?. For what it's worth, I'm able to get both to render using Fabric Core 7.2.0. Here's a CodePen to illustrate: https://codepen.io/jahnp/pen/prKxox. Hey @johannes-z, sorry for the delay! This is a great question. Yes, framework ports of any Fabric project are totally supported and encouraged. We'd love to see these kinds of projects take off since it's not certain we'd have bandwidth to drive them ourselves. \nI'm not a lawyer, but to expand on the licensing question a little: the only constraint to be aware of is the Fabric assets license, which covers scenarios and proper usage of Fabric's fonts and icons. Creating & publishing framework code that could deliver these assets like ng-officeuifabric is fine under the licensing agreement, since projects like that could be used to create Office Add-ins, SharePoint web parts, or other Office integrations. It's publishing and marketing the apps that would use those assets via a project like this that would fall under the scope of the license agreement.\nDoes that make sense?. Indeed, sorry I missed your PR @Koopakiller! Didn't realize we were touching the same files. Really appreciate the contribution!. Hi @geogikk92, it looks like this issue is for Office UI Fabric React. Would you mind re-opening this issue there?\nAnd, just to confirm, are you asking if there is a property that allows you to specify that a user can only select one person from the list of people, rather than multiple as you can today? If that's the case, while it may not be ideal, you could likely build this scenario yourself by toggling the disabled prop when the items count is greater than 0. You may be able to use onChange or onItemSelected to start this.\nThat said, this seems like a reasonable behavior to support, so it's possible that other Fabric React users would have a need for it as part of the contract.\nIn the short-term, I'm going to close this issue here since it belongs in the Fabric React repo. Thanks!. @Danny-Engelman that's a fair suggestion and probably reflects the largest majority of developer scenarios. I'll go ahead and do that when I update this section on the site (hopefully making the code change today). Thanks for the reminder!\nFor some context around why I actually didn't want to use body initially: Internally within Microsoft, there are many many cases where product teams need to onboard an existing application to Fabric/Fabric React. The ms-Fabric class allows those teams to incrementally \"Fabricize\" portions of their app, e.g. a sidebar or header portion, without making sweeping global changes. Making changes to how fonts are loaded & applied can be quite disruptive to a complex app. \nThat said, I get that for a large percentage of developers using Fabric Core, that scenario probably won't be as common :) So I'll just keep it simple and use body as you suggest.. That's correct, good catch. We'll be updating the iconography soon--I'd expect a fix out within the next week or so (barring Thanksgiving interruptions).. Looks like there's some cleanup to do, both to fix the build and remove another logo I missed the first time around. Will update as soon as I can--disembarking for a long flight shortly.. Hey @StfBauer, the Fabric team doesn't actually draw these icons--they're distributed from a centralized team based in the Windows group--but I'm happy to pass the feedback along to the team that does. Are you having trouble with the icons in general throughout Office 365, in your own apps/add-ins, or somewhere else?. Hi @russgove, this issue queue is for Fabric Core, which doesn't have UI components--just design language fundamentals (type, colors, icons, animations, etc.) I assume this is meant for Fabric React--can you open this in that repo? Thanks!. Hey @cmk128, that's a good question. Can you give an example of how that plugin will be used, e.g. what kind of scenarios it will be used for? My sense is that that usage is fine (especially if you aren't using any of the assets), but I can check with our legal contacts to make sure.. Hi @nero120, I can forward this request along to the team that designs the monoline icons, but I doubt they'll want to support this as the MDL2 design language generally favors the stroke-based icons we have now.\nGenerally, when we want to overlay icons on top of more visually-complex backgrounds--or when we just want an icon to stand out--we would recommend leaving them white/reversed and putting them in a darker box that will stand out. You can see an example of this in the authoring experience of a SharePoint page, when I want to modify properties of the header section:\n\nIn the meantime, I'll go ahead and close this, but please let me know if this doesn't resolve your issue. . Build failed--queued another.. The builds ended up needing to be kicked a few more times to start passing. All green now!. Hey @nero120, funny enough, there is actually an updated version of the PDF icon that's currently available in the @uifabric/file-type-icons package.\nIt looks like this:\n.\nAnd you can access this specific PDF icon (intended to be used at 48px) here. If you don't mind looking at code, you can also see the full list of base icon types and the file type extensions they map to here.\nIt's a part of a much larger set of refreshed file-type icons that we actually use in OneDrive files experiences and SharePoint Document Libraries, among others.\nHowever, as you point out, this set of icons is not currently available in Fabric Core, nor is it documented particularly well. I've opened #1088 to track this larger project, and will keep this specific one open in the meantime until we've updated Fabric Core and the website to include those icons.. Hey @larnera, the website is currently a little bit behind the latest release of Fabric Core. We're working through some deployment snags that have been preventing us from updating the site recently, but we're aiming to have that resolved as soon as possible. There are other fixes & improvements to the site we want to get out, so believe me, we're pushing on it!. Generally, yes, this should be allowable--but so we know a little more about the scenario, what kind of apps are you building/do you have in mind? Commercial apps distributed on a store? LOB apps running on-prem?\nAs far as I know, this usage is not prohibited according to the Fabric assets license agreement. What is important is that 1.) the license is included alongside the icon file, and 2.) usage of the icons in the app adheres to the guidelines called out in the later section of the license. \nI'm going to go ahead and close this for now, but feel free to let us know if you need more information.. Sorry for the delay @blendsdk , and thanks for the clarification. That's a pretty different question from one concerning the toolkit itself :) \nCould you expand on the intended usage of the framework you plan to build? Is it an implementation of Fabric in another JS library, though still used to target Microsoft platforms? e.g. office-ui-fabric-vue?\nThe usage you describe might still be covered by the license. See #1019. Here's the important bit (emphasis mine):\n\n...the only constraint to be aware of is the Fabric assets license, which covers scenarios and proper usage of Fabric's fonts and icons. Creating & publishing framework code that could deliver these assets like ng-officeuifabric is fine under the licensing agreement, since projects like that could be used to create Office Add-ins, SharePoint web parts, or other Office integrations. It's publishing and marketing the apps that would use those assets via a project like this that would fall under the scope of the license agreement.\n\nEssentially, it's the branded elements like the fonts and icons which are covered by the license.\nDoes this make sense?. Just a general thought: There are a few renames here (Animation --> Motion, Animation --> Animation.MDL2) that will break downstream consumers if they're looking for those files. Even though we don't document them explicitly, we know they're often used this way. We should be careful about renames on branches we know are in active use.\nWe should consider re-exporting the new variable names from files with the old names (e.g. retaining the _Animation files) until we've done a major release containing the change.. These look good to me, but I'd just want to make sure the changes (e.g. sharedRed30 --> sharedRed20) don't impact @leddie24's Fluent work. @leddie24 can you take a look when you have a chance?. Hi @StfBauer ! Thanks for the request! So we're actively working on these and plan to have them released within the next 1-2 months. What we're working on right now is\n\nFinalizing details of the final set of assets--there will be more available than just what was announced in December (e.g. monoline, layered, and multi-color SVG)\nUpdated branding & legal guidance for the new assets\n\nWe're cranking as hard as we can to get these in your hands :) We'll share more when they're ready!. nit: whitespace could be reduced\n. nit: space before parens ()\n. nit: whitespace\n. dupe of distComponents? also, some of these props have Path but some don't; we should probably be consistent with the naming\n. I love that these tasks are being separated out!\n. nit: whitespace?\n. this comment could be more informative, e.g. \"Build Components LESS files.\"\n. probably want to remove \"and Components\" since that's in a separate task now\n. this should probably just say \"Build full and minified CSS for each Component\"\n. this should probably just say \"Build full and minified RTL CSS for each Component\"\n. this could have a comment explaining that it builds individual HTML examples for each Component\n. please capitalize Fabric :)\n. the default task should probably just build Fabric rather than kick off a watch\n. we should double check that the samples directory bit is accurate when those are in :) \nalso, small copy edits to the message itself:\n\"TIP: To test changes to Fabric source, check under /samples for demo HTML files of each Component.\"\nthoughts?\n. we didn't actually change the variable names with the new clases--might want to change these back\n. this should go back to m-plus\n. Like we talked about, it'd be good to have one of these variants be a default--probably the version with text above--so a user isn't required to add a variant class as a baseline for the component.\n. Love this!\n. Style nit: Not sure if there should be a newline here\n. Could you also please take out the bit about the Component Picker?\n. Totally, that wording sounds great. I just meant the specific bit about the picker :)\n. Good point, will do.\n. Helps for scanning--that value is the only bit that changed from the previous code sample, so it helps highlight it more.\n. Should these be mixins? Looks like they're used quite a bit throughout here.\n. Missing % sign on 100\n. I think you're right--this sentence originally read to me somewhat excited, but now that you mention it I don't think it matches the rest of the tutorial's tone. Back to a period.\n. Won't this affect non-unseen, selectable items?\n. I don't think we use titles like this anywhere else. Is there a reason you've added one here?\n. This section, below ms-ListItem-itemIcon, can probably go, but I think most of this modifier should stay. I believe other components may use this in some way.\n. nit: add a newline above :focus\n. Could you add a banner to this like the other LESS files? It could probably just say \"Command Bar styles\". Also, this is super small, but I noticed that this file uses tabs, not spaces, which is what we use everywhere else. Could you convert this to use 2 spaces instead?\n. This should be something like is-hidden\n. nit: should be a newline before &\nshould this be something like is-open, is-visible or something like that?\n. nit: newline before &:before\n. I feel like something like .ms-CommandBarSearch or .ms-CommandBar-search would be more appropriate\n. There are conventions for defining/commenting modifiers; Components should be paired with their modifiers, e.g. .ms-CommandSearch.ms-CommandSearch--active, and should have a comment above them. Check out Button.less for examples of this.\n. nit: add a new line above for\n. nit: add a newline above if\n. nit: newline above if\n. nit: newline above comment\n. nit: newline above for, space before/after = \n. nit: indent this section\n. I think you mentioned this, but as a reminder, Controls -> Components :)\n. This looks like it should be a modifier\n. Does add-in need to be capitalized?\n. Cool, then I'll merge this in. Thanks!\n. @ms-zIndex-front\n. is .ms-CommandbarSearch-input supposed to be a child? & is usually used for adjoining classes/states--you might not need it here\n. super tiny nit: space before (\n. tiny nit: newline space after }\n. Excellent catch! Always better to avoid type coercion :) Also, tiny nit: space before (\n. Love it!\n. Is it possible to add some of the other folders from \"dist\" in the package? For example, we also publish demos and individual CSS files for each component, which would be useful to distribute here as well. Thanks!\n. Can you also add a \"title\" prop with value of \"Office UI Fabric\"?\n. No worries--we can update that bit manually until the package is fixed. Thanks!\n. Please remove rather than leave commented-out.\n. Interesting--is there no linting for SASS built in that we can switch to? We definitely want that included, very soon if not right now in this PR. I realize that's scope creep but it's an important aspect of development we shouldn't lose.\n. Nitpick, but mind the indentation--looks like a spaces/tabs diff issue\n. Same as above: even if we aren't adding SASS linting here, it's super important that we do add it shortly.\n. Same as above--these should probably be be <button> or <a> elements.\n. These should probably be <button> or <a> elements to support keyboarding.\n. nit: newline before\n. same as above--newline before\n. same as above--newline before\n. Same as above--newline before. Also, should this be a class instead, something like ms-Carousel-title (or -header) or ms-Carousel-staticHeader?\n. same as above--newline before\n. nit: this is totally fine, but it could be nested under -paginationButton for organization.\n. Same as above--this could be nested under the parent paginationButton definition above\n. nit: newline before\n. nit: this could be included in the non :hover styles above\n. nit: newline before\n. nit: newline before\n. nit: newline before\n. Styling all of these elements makes sense, but we should maintain the opt-in spirit of Fabric by prefixing the selectors with .ms-Table, e.g. ms-Table tr.\n. Good point. I've removed the html requirement.\n. The overrides can become a little tricky in some specific inheritance scenarios, but I agree. Following up with some eng partners who helped make this in the first place.\n. I like the idea of namespacing these, and changing the name to RTL. i18n, while fun to say, is not terribly intuitive. I think longer-term we'll want to move partials into a partials subfolder, but for now I'll rename it to _Fabric.Mixins.RTL.scss.\n. This looks like an unnecessary indentation. Please revert.\n. Woohoo!\n. This looks indented one space too far.\n. Please leave this space.\n. Super small, but it feels like this should be more descriptive, e.g. $ms-font-family-base or something like that.\n. It might be helpful to have a small comment explaining what this is used for.\n. Oh, I see--good catch!\n. I'm assuming this will be either revised or removed at some point--we shouldn't leave commented-out blocks of code in PRs if possible.\n. Same feedback as above--is there a reason this is commented out? The code looks like it's been cleaned up.\n. It looks like this converts spaces to tabs. Generally we use 2 spaces per indent. Could you revert this section's spacing adjustments?\n. Typically these kinds of variables take the form $ComponentProperty-value, e.g. $PersonaSize-tiny (see SearchBox's variables for an example). I realize that this convention is not documented--I'll fix that soon--but in the meantime, could you patch these up to conform to that pattern? Thanks!\n. Same feedback as above--love the indenting, but it should be 2 spaces instead of a 4-space tab.\n. Reindent.\n. Alignment here is pretty wonky, please reindent.\n. Bonkers indenting here. Please clean up.\n. This should be moved into the HTML as <i class=\"ms-Icon ms-Icon--infoCircle\"></i>\n. By convention, modifiers should be joined with their root class, e.g. .ms-MessageBar.ms-MessageBar--info and preceded by a helpful comment following this form:\nscss\n//== Modifier: Informational content\n//\n.ms-MessageBar.ms-MessageBar--info {\n  ...\n}\n. Same as above--this should be moved to the HTML\n. Same as above--this should be moved to the HTML\n. Same as above--this should be moved to the HTML\n. Same as above--this should be moved to the HTML\n. Thanks for cleaning this file up! I'll approve these changes for this pull request, but in the future, it'd be good to keep changes scoped to just what's in the current review. Preferably, there would be a second PR for the changes in this file, so that these changes can be tracked separately of the MessageBar work.\n. This is a breaking change. For now, can you add ms-fontColor-warning and mark ms-fontColor-alert and its variables as deprecated without removing them?\n. Small nit: \"command bar\" -> \"CommandBar\"\n. The tabbing for these two arrays could be normalized and aligned w/the statics below\n. Since it's so close, can you just use $ms-duration2?\n. Same here--I won't block approval on this, but I'm wondering if we should just use one of $ms-ease1 or $ms-ease2.\nOtherwise, we should probably either:\n1. Capture this as a local variable for Toggle.scss (probably the safest for now), or\n2. Check with design and incorporate this as a global animation\n. Is this ok for high contrast mode? Are the border styles here enough?\n. We should be using the icon mixins here instead of hard-coded Unicode values, e.g. @include ms-Icon--CheckMark\n. Spelling: Should be neutralQuaternary :)\nAlso, Quaternary/QuaternaryAlt should be flipped--typically the dark colors are declared before their lighter \"alt\" versions.\n. Feels like this should be a const as well.\n. Just making a note that in the future, it'd be good for us to have JSDoc comments explaining these properties. \n. I don't think this name will be accurate for very long, right?\n. Misspelling: Fabrc React\n. > \"For documentation...\" \"... for more info\"\nSuper small nit, but I'm not sure the second bit is necessary.\n. In this context, it may be helpful to specifically say something like \"UI components\" for the first instance instead of just \"Components\"--new readers may not know exactly what we mean (you could argue that \"typography\" is a \"component\" of Fabric).\n. nit: Maybe capitalize Contributing?\n. Gotcha. Nope, I don't feel strongly one way or another--just checking to see if it's intentional :)\n. I'm not sure we want to set this just yet. What was the reason for including it here now?\n. Totally agreed. The only reason I'm questioning it now is that some teams consuming Fabric right now use separate definitions/font family names for Segoe than what Fabric currently provides, so this would produce work for them to override. Happy to discuss though--this definitely moves us in the right direction.\n. Thanks @mikewheaton. Like I said, I think it's absolutely the right thing to add, and you're absolutely right--this will accrue even greater benefits to other aspects of the project. My concern is that since this will be potentially broadly-impacting, I want to be sure we're careful about which properties we add when and that the appropriate consumers are alerted to the change and can plan accordingly.\n. Is there a reason there aren't mixins for these classes as well? If we're removing the higher-order media queries, these should be accounted for as well.\n. These demo files will probably need to be cleaned up/refactored a bit, since I'd rather not provide a separate file to \"mock\" potential conflicts.. Indeed, that's the goal of this page. I'll be cleaning it up, expanding the documentation, and adding local \"spoofed\" scope classes to validate the concept. Just wanted to get this up here in the short term.. Totally understand the motivation here and agree that the original name/value mismatch for these was confusing, but I'm quite sure at the time the values were intentional/by design. While it's probably fine to change them to make more sense, please check with motion design to verify. \nFrankly, I'd prefer we use simple, predictable durations in sensible increments like you've proposed here.. Ah yes, good\u00a0catch--I'll change this. And I agree, I'd really love to stick with single-word filenames as much as possible, but not sure how else to split this out.. @mikewheaton super pedantic preference: would you prefer Definition or Definitions for the Icon file? There's\u00a0technically only one\u00a0definition\u00a0:/ I'm inclined to use the\u00a0latter\u00a0for pure consistency and flexibility but don't feel strongly about it.. Hmm... this is going to cause a lot of upgrade pain. Are we confident this is the right change to make?. I realize the intent here is to be as consistent as possible across the library and to prevent any potential conflicts when using other SASS libraries, but the names of the directionality mixins were meant to match the CSS properties they affect to make their usage as transparent as possible. I won't block on this right now, but I again do worry that this will be a painful upgrade for a lot of users.. We aren't doing this elsewhere--please remove.. Could you expand this to say something along the lines of \"$FabricVersion becomes a SASS list like [1,2,3] on build\". Remove?. Yeah, removing icons from the JSON will hide them on the site. I think it's the right thing to do in the absence of documenting deprecated icons--though I wonder if we should look into supporting those at some point as well (e.g. with something like deprecated-icons.json or something along those lines).. nit: the protocol/domain part of the URL could be pulled into something like a baseUrl variable to minimize repetition.. Remove external logos. Just thinking out loud--should there be a legacyName value or something like that capturing the old name these map to?. \ud83d\udc4d. I know it's implied by the filename, but we should add a comment in the file that these are now deprecated. @mikewheaton just confirmed that removing this will break a scenario @leddie24 is working on. Let's work to address this offline before publishing a new version.. ",
    "jonahkirangi": "Good call. Padding added to secondaryText as well.\n. Modified code to only change the is-unseen pseudo-element. This should avoid a potential states conflict.\n. Dropdowns now auto-close when another dropdown is opened. Resolved in pull request https://github.com/OfficeDev/Office-UI-Fabric/pull/176.\n. The upload menu item \"fall out\" issue has been resolved in pull request https://github.com/OfficeDev/Office-UI-Fabric/pull/173. The layering issue has been resolved in pull request https://github.com/OfficeDev/Office-UI-Fabric/pull/175.\n. PersonaCard overflow issue has been resolved in pull request https://github.com/OfficeDev/Office-UI-Fabric/pull/177\n. ",
    "philworthington": "Looks good! Approved\n. Great catch. Pull request #98 should fix the issue.\n. @richjbrowne Good catch and thanks for the heads up. It looks like you're looking at our master branch which currently does not include the variant classes as you have pointed out. \nThere was a change made earlier in the week to our develop branch, which as of right now includes all of our latest changes, along with all of the dialog variant classes in their applicable template files.\nYou can find them here: https://github.com/OfficeDev/Office-UI-Fabric/tree/develop/src/components/Dialog\nThanks again, master will be updated with the latest from develop on our next release.\n. Excellent catch. Updated and fixed.\n. Looks great! Tested and seems to be working really well. Just a few really trivial style things called out. \n. Approved - looking good to go ahead and merge\n. Hey Andrew, thanks for looking into this. After reviewing the component and your codepen it looks like the way we're handling presence in the persona control can also be applied to the persona within the persona card. \nSince .ms-Persona can take a modifier to indicate presence (e.g. .ms-Persona--busy), we can actually apply that modifier directly to the .ms-Persona within the persona card as a method to indicate presence.\nCheck out this codepen: http://codepen.io/anon/pen/yYVYoW\nAlso, it looks like your persona card markup and styles are a little out of date. There were several updates made that are currently on master and should be available soon in the next release as well. \nThanks again!\n. Looking pretty good. There are a few things I noticed though:\n- The transition on the searchfield looks a little slow. When reducing the browser size the 'new' button sometimes overlaps the searchfield text. Also when on mobile, the other buttons show too quickly when the searchfield is collapsing back to 50px causing some overlap.\n- After entering text in the searchfield and clicking 'x', sometimes the searchfield will keep focus and stay editable and after entering text it will not go back to the 'is-active' state unless it is clicked into again. \n- When tabbing into the searchfield, the searchfield will not go to the 'is-active' state. Tabbing out will clear the entered search text.\n- The ellipsis for overflow commands starts to get overlapped by the sideCommands at about 720px.\n. Looks good and approved, just a few minor things but this definitely fixes the primary issues we were having.\n. Really nice work and clean code. Just had a few comments on things. Looking good though.\n. This is looking great, I just called out a few small spacing things that are related to our conventions. After that you can just merge this in. Nice updates!\n. Nice work, looks great! approved\n. Looks good however the commanding seems broken and not selectable on small screens. Probably a pointer events issue. We might want to add some space between the buttons on small screens as well.\n. The only issue here seems to be what we were saying in scrum earlier: There's a flicker when you click the close button. Also I noticed that the event for close button is 'mousedown'. Seems like it should just be a click or mouseup. Haven't tested it but this might contribute to the flicker.\n. Looks good, approved\n. Looks good, approved\n. JS issue fixed.\n. The header text is within the absolutely positioned contentInner causing it to scroll out of view. This is what we've had by default and how we see panels built in other experiences. It's also safer to remove the height and add padding which I've done in my latest commit to PR #322 . Closing issue.\n. Polish updates from design need to be made, hold off on review\n. @mikewheaton The small left aligned and small light dismiss panels are only to be used for Left Nav and the contextual menu on mobile respectively. The LeftNav or contextual menu would replace the contentInner and there would be no commands for this panel. This isn't apparent in the templates right now because we don't have a LeftNav component and any contextual menu updates should be a separate item.\nUnfortunately we don't have a better way to view the panel in the sample page right now - using the buttons on the page to change the variants is just adding/removing classes in the default panel template, not actually using a different template and markup for each variant altogether. \nThe important part was getting the variant size classes correct across breakpoints and making them available so that they could be consumed in other experiences. We should make updates to these panel templates when a leftnav and contextual menu are ready.\n. Looks great\n. Good stuff. Approval granted.\n. Almost too good. Only a couple nits - one of them is noted above and another is on line 47 and 87 - we could be using $ms-font-s. I'm unable to check or select an item in the table on the demo page as well. It also looks like line-height is causing the row to be 31px instead of 30px. Other than that, this looks good.\n. Approved and we can close out the issue\n. Nice, approved\n. Looks good, approved\n. Looking good, approved\n. Yeah all of the functionality had to be rewritten, this includes the remove button functionality.\n. Yeah there wasn't a bug out there for Link so it wasn't looked at but this is a great catch. I've updated Link with the correct colors and it should be fixed now.\n. Updates made to the high contrast link color so it's visible in high contrast #1. Fixes for textfield made for all display modes and states. Translate appropriate files (choicefield.scss, persona.scss) from tabs to spaces.\n. Yeah we most likely need guidance around things like animation for the toggle. The mdl2 branch includes an animation inspired by the one used for checkboxes also. There's been no input from design as to what these animations should actually look like however.\n. These changes have been added to beta/3.0.0. Closing this PR.\n. These changes have been added to beta/3.0.0. Closing this PR.\n. I'm sure this meets the spec, but the behavior of the background color for alerts across screen sizes is getting a little complex, no? We should see if we can simplify this.\n. The scss has been cleaned up to include modifier comments, correct ordering, and icons were moved out of styling with correct classes added to template markup for each variant. Alert color added back with deprecation note in applicable files.\n. Approved\n\n. Approved\n\n. The checkmark not showing should be fixed. We are moving forward with the radio button as separate and not inheriting from check box as these are considered to be two separate components. This PR is ready to be reviewed.\n. Approved \ud83d\udcdf \n. Approved\n\n. Approved. Daring changes. \u26a1 \u26a1 \u26a1 \n\n. The white box was part of the design when an underline textfield is being used in an environment where edit and read only modes are shown such as in the details pane. The white background makes it clear that the textfield is in edit mode versus a read only mode with a transparent background. I'm not sure if we want our textfields being placed on any background color due to accessibility issues as well.\n. Approved \ud83d\udc24 \n\n. Approved\n\n. Approved \n\n. Approved. We got it sorted.\n\n. Approved \u274c \n\n. Approved\n\n. Approved\n\n. Approved\n\n. Approved\n\n. Approved\n\n. Add copyright, header comment that we normally use on the top of a less file.\n. Nit: style thing: normally leave an empty line at the end of every file\n. Nit: same as less file: add space at the bottom of the file.\n. Join commandText and chevronDown here\n. @ms-font-size-l\n. @ms-font-size-m\n. Looks like we have two margin-rights\n. I'm wondering if we can just add a class to the chevronButton container to make it visible and have it display none by default instead of relying on js setting inline styles. Something like:\n.ms-ErrorBanner-expand {\n  display: none;\n&.is-visible {\n    display: inline-block;\n  }\n}\nand\nvar _onResize = function(event) {\n        _clientWidth = _errorBanner.offsetWidth;\n        if ((_clientWidth - _bufferSize) > _initTextWidth && _initTextWidth < _textContainerMaxWidth) {\n            _textWidth = \"auto\";\n            _chevronButton.className = \"ms-ErrorBanner-expand\";\n            _collapse();\n        } else {\n            _textWidth = Math.min((_clientWidth - _bufferSize), _textContainerMaxWidth) + \"px\";\n            _chevronButton.className += \" is-visible\";\n        }\n        _clipper.style.width = _textWidth;\n    };\n. Sometimes we like to put mixins like this at the top (above position: relative) to make it a little cleaner and easier to parse but this is probably just a preference thing.\n. This should probably be a button so that it's keyboard accessible like the ms-ErrorBanner-expand button. \n. Devastating misspelling of the word 'message'. Jk\n. Please remove. This is moving the panel-main off the screen to the right by 40px.\n. Maybe js-panelOpen as the classname for the js hook to make it clearer.\n. Looks like js-togglePanel can be removed. Classname js-panelClose.\n. nit: should probably be 340px. Then just @ms-Panel-mdWidth + 1 down on line 138 for ms-Panel-main width if it has to be 341px.\n. Remove space between class selector and nested selector here.\n. Remove space\n. Give another line of space to further separate the media query visually\n. Add a new line at the end of the file\n. There are new redlines for Pivot that were implemented here along with the high contrast pass. 40px height are a part of the new design along with the indicator at the bottom and an update to the colors being used.\n. nit: remove empty space\n. Looks like line-height being set to 30px is making the computed row height 31px. I'm not sure if we need the line-height in there but if not, we should remove it.\n. Convert to spaces\n. Convert to spaces\n. The outline was going around the label area of the toggle which would not be the appropriate high contrast style. We might have to do another high contrast pass of all of the components after the mdl2 updates have been made.\n. Yeah I like the idea of having a base class, ChoiceField. RadioButton extending CheckBox may be dry but requiring checkbox every time you want to use radiobutton seemed like an unnecessary coupling. ChoiceField could also hold common styles between the two as well, like how it was originally implemented. We should hold off from reviewing this, looks like there needs to be some exploration / extra work done here to implement ChoiceField.\n. I believe the pattern is to lowercase variable names.\n$ms-icon-12\n$ms-icon-16\n$ms-icon-20\n. Also, we should be using $ms-icon-s, $ms-icon-m, $ms-icon-l since we are prescribing a ramp.\n. Good call, this has been updated.\n. Getting this in next PR. It's going to be fantastic. \ud83d\udd34 \ud83c\udfa9 \n. Scope creep. \u270b \n. \"...address, ask for, or add...\" \ud83d\udc6e\n. ",
    "notandrew": "Approved\n. \ud83d\udc4d\n. looks good  \ud83d\udc4d\n. looks amazing\n. approved\n. approved -- it works\n. This font exists for a couple of reasons:\n1) It's the font that Microsoft uses for 'East European' text (not only used in Fabric.)  We also have subsets for Vietnamese, Thai, Cyrillic, etc.\n2) It exists for keeping font downloads small.  We could create one giant font which has all the smaller subsets included, but the time it takes for the font download would be noticeable.\nThe way many products/websites work at Microsoft is to identify the users' language and then supply the localized text with the correct font and font stack. \nIf one were to use the Segoe UI Regular West European font to show a character specific to the East European character set, the resulting character may be shown in a fallback font rather than in a Segoe variant.\nHope this helps.\n. looks great!\n. Thanks for making this change -- our team has a pending pull-request (#103) that has similar changes.  That change also includes the latest designs and updates to the presence indicator.  I'm going to close this for now.  Again, thanks for taking the time to fix this.\n. Approved - nice clean-up, too\n. The bigger issue here is that we need to separate the pickadate js from our presentational js file.  Thanks for finding this.\n. In just checking the samples, it looks like the descenders are getting cut off due to a small Height.\n\n. Actually, would you mind removing the entire class?  It was originally for demo purposes, but should have been removed.  Thanks!\n. looks good.  I'll merge it shortly.\nThanks\n. I'm getting build errors in your branch but not in master: cannot find module 'gulp-debug' \nI tried two machines, and errors in both.\n. approved\n. Looks good.  I tried changing to a bunch of dates and everything looks like it's working. :)\n. I'm looking into this -- I'm not sure of any time frames just yet though.\n. looks great!\n. looks good. thanks!\n. looks good. thanks!\n. looks good\n. looks good to me\n. looks good to me (I didn't build it, but the code looks right.)\n. looks good\n. Looks good\n. Tested and verified. Nice job!\n. approved -- looks great!\n. Same as the Textfield -- @tomaon can you tell us the problem you're fixing? Thanks!\n. @tomaon - the change looks pretty straight-forward, but can you tell us the problem you're fixing? Thanks!\n. We're still discussing it.  No ETA on when we'd be able to come to a decision on this as there's a lot of moving parts on our side.\n. We have made changes to our deployment process, decreasing the time between release and when the files appear on the CDN.  At this time, we don't have plans to switch CDN providers.\n. Can you remove ms-Icon--classNotebook from the Icon sample page, too?  Thanks!\n. For the MDL2 icons, that's the plan -- we should have a workitem for that, together with auto-subsetting. \n. Yeah, it's probably better to use display: none for this.\nIt's evident in this repro: Go to the persona card component test page and modify 'ms-Persona ms-Persona--sm' to 'ms-Persona ms-Persona--tiny'\nGo ahead and merge.  :)\n. Looks good to me.\n. Looks good.\n. This issue repros with your changes.  We should probably remove the height property and add padding.\n. Please see https://github.com/OfficeDev/Office-UI-Fabric/issues/320\n. I don't see any regressions.  Approved!\n. It's weird either way.  Having two border classes (one to set up the size and style and one to set color) seems like overkill but otherwise it would be easy to assume that you're going to get a border by applying the color class. \nBaking in the 1px solid border for color classes seems okay since that's what the design language calls for in most places...\n. On second-thought, it's a color class that should probably not impact border/style. Hadn't thought that one through.\n. :yellow_heart: looks great!\n. Cool beans!  Approved with gusto. :fireworks: \n. Sweet deal!  Approved :sweet_potato: \n. Does this affect any components?\n. That's a good point -- I'll add table, tr, and td properties too.\n. Looks great!\n. looks good\n. We have a typo.  We are using ch-ZHS instead of cn.  This should fix it for this release of Fabric.  I'll make a fix tonight so it point to cn-ZHS.  I just noticed other teams use zh-cn. I'll investigate which language codes we should be using.\n. Microsoft has its own lcid codes: https://msdn.microsoft.com/en-us/library/cc233982.aspx\n. Right, that's the typo, we have ch-ZHS in Fabric.\n. OneDrive uses the Microsoft lcid codes that I referenced above, but those match language/region instead of just language, which we're probably more interested in...\n. @kennywangjin Are you applying our font classes to the containers? Here's what the Fabric CSS looks like -- so any of these font classes should be applied:\n[lang='ch-ZHS'] .ms-font-mi,\n[lang='ch-ZHS'] .ms-font-xs,\n[lang='ch-ZHS'] .ms-font-s,\n[lang='ch-ZHS'] .ms-font-s-plus,\n[lang='ch-ZHS'] .ms-font-m,\n[lang='ch-ZHS'] .ms-font-m-plus,\n[lang='ch-ZHS'] .ms-font-l,\n[lang='ch-ZHS'] .ms-font-xl,\n[lang='ch-ZHS'] .ms-font-xxl,\n[lang='ch-ZHS'] .ms-font-su,\n[lang='ch-ZHS'] .ms-fontWeight-light,\n[lang='ch-ZHS'] .ms-fontWeight-light-hover:hover,\n[lang='ch-ZHS'] .ms-fontWeight-semilight,\n[lang='ch-ZHS'] .ms-fontWeight-semilight-hover:hover,\n[lang='ch-ZHS'] .ms-fontWeight-regular,\n[lang='ch-ZHS'] .ms-fontWeight-regular-hover:hover,\n[lang='ch-ZHS'] .ms-fontWeight-semibold,\n[lang='ch-ZHS'] .ms-fontWeight-semibold-hover:hover {\n  font-family: 'Microsoft Yahei', Verdana, Simsun, 'Segoe UI', Tahoma, Arial, sans-serif;\n}\n. Oh, I see this too:\n.ms-Breadcrumb-itemLink {\n  color: #333333;\n  font-family: 'Segoe UI Light WestEuropean', 'Segoe UI Light', 'Segoe UI', Tahoma, Arial, sans-serif;\n  font-size: 21px;\n  font-weight: normal;\n....\n}\nsrc:\n.ms-Breadcrumb-itemLink {\n  @include ms-font-xl();\n  display: inline-block;\nWe should definitely find a different way to do this since it breaks localization scenarios.  Maybe we apply the ms-font-xl class in markup instead of the SCSS.\n. looks good ;). Looks great!\n. approved :cake: \n. looks wonderful!\n. Looks fantastic. :trophy: \n. :fireworks: \n. Looks super! :sunflower: \n. Verified it works as expected - nice.\n. It looks good to me, but Link doesn't appear with any visual effects -- were you going to fix that one too?\n. Yep -- looks good to me too.  Thanks\n. Thanks!\n. This icon update looks :+1: \n. Looks amazing! Approved :green_apple: \n. Looks very great! Approved. :apple: \n. piri piri :fire: \n. Looks super!\n. Looks good, thanks! \ud83d\udc40 \ud83d\udc4d \n. Wouldn't it make more sense to change the variable names, too?\n. I think it's good to have something there.  Maybe this \"We generally recommend against doing this, since the code is not extensively tested and is used only for demonstration purposes in our documentation.\"\n. maybe expand O365 -> Office 365\n. What's this comment for?\n. missed one\n. there's an extra space before 'storedFiles'\n. Would you mind adding some spaces to the for, if, and brackets?  Also, new lines for the jstag lines, please.  :)\n. We should have alt text here and on all img tags.\n. sp: maximum\n. We're using a lot of hard-coded 5s.  Would it make sense to put this into a variable?\n. can this be changed to margin-bottom or is there a reason to keep the other coordinates? (same with the padding)\n. Maybe:\nYou can test and work with Fabric locally, using any of the tasks listed below.\n. Capitalize Fabric\n. no apostrophe for dialogs.\n. Tab this over\n. We typically have a space after 'if', would you mind adding a space here and in the other instances?\n. There's an extra space after the 'gulpif(' here but not on line 49 -- not sure what your pattern is for gulpif, but it could probably be more consistent.\n. Is this being used anywhere?\n. extra m in commonly\n. this space is off\n. this space is off\n. this space is off\n. Of shouldn't be uppercased\n. Up shouldn't be uppercased\n. successful\n. successful\n. occurred\n. Removing all these !importants makes me a little nervous, but I tested them, and didn't see any regressions!\n. Should this be in a variable instead?\n. The successBackground & errorBackground (not shown in the above code snippit)\n. There can be, but it's best to use th in thead.  I'd be okay removing this line.\n. done\n. I'm removing height but keeping line-height...\n. sp: user\"s\n. Can you file a bug with this comment (it can be generic -- enable 'use strict' and remove TODO comments)\n. It was only one space instead of two.  This fixes it to be consistent with the rest of the include rules.\n. fixed\n. Normally, that's what I'd do, but the nice thing about the way I built it is that we can switch the MessageBar type based on the main class.  Change ms-MessageBar--info to ms-MessageBar--error and you get the icon, color, and background switching automatically.  \nI can go either way, but what do you think?\n. Should that be 'Segoe UI West European'?\n. Is this intentionally tabbed out like 8 spaces per tab? Or is it the github viewer that is making look gigantic?. No, 'Segoe UI' is the local system font ($ms-font-system-base fonts are all local system fonts). 'Segoe UI West European' is the friendly name for the web font. Not sure why it's 'WestEuropean' here (unless I missed something in the last several months.). oops.  nevermind.. ",
    "battletoilet": "This looks good, i tested it out and it works great, other than the Brand icons, i would say its approved.\n. Looks good! Approved!\n. We will definitely take a look at that. Thanks for your input.\n. We have some fixes for this that will be released very soon.\n. In your codepen the icon isn't showing up at all.\n. That's a great point. The original intention was for the commands to only have an icon in Small-Medium screen sizes. We will look into adding a modifier for keeping the command text at all times.\n. We have fixed up our tutorial and addressed these issues. Here is a completed pull request with the changes. Let us know if you find anything else! Thank you!\nPull Request #242\n. THIS IS APPROVED, PULL REQUEST CAN BE COMPLETED IF USER DESIRES THIS RESULT. THANK YOU FOR YOUR WORK, MAY TEH FORCE BE WITH YOU.\n. APPPROOVEDZZZZ\n. Hey @StfBauer  we currently run Gulp Autoprefixer  to auto-prefix our less files. We were wondering if you are referring to replacing our current autoprefixer? Or suggesting we add this to our build in addition to our Gulp autoprefixer?\n. Actually when you tab onto the Ellipsis and hit enter, it doesn't open the contextual menu. If this is a 4+ hour task lets not worry about it but if it's simple lets try and get it in.\n. Looking at your application code we noticed a bug in our documentation in how we were referencing the CDN. We just fixed the documentation, can you update your project URL's to the updated path and see if that fixes it? The problem was the link was missing the http: before the CDN Path. \n. Tested works great, merging in now.\n. Looks good, lets get it in.\n. Fixed in PR  #368\n. Looks awesome, please merge in. Tested it locally and in your example.\n. This looks pretty good, i tested it and it works great. Not sure if there is supposed to be content inside of the smallest panel. Also i left a comment about command bar but otherwise I LIKE WHAT YOU GOT.\n. @Jahnp Good point, i'm actually going to spend some more time testing before i pull this in.\n. Alright i tested out everything i could, styles, colors, type, components using the minified version here but haven't found any issues so i am going pull this in.\n. Closing this due to a new pattern for Carousel we are introducing that will make this into a component. \n. Anchor links are invisible in HC #1\n\n. HC Persona doesnt really have a specific color.\n\n. It looks like bottom field is kinda funky.\n\n. approved\n. Its gooodz im pulling it in.\n. This looks great, thanks for fixing these man!\n. Approved\n. Approved\n. Approved\n. Approved\n\n. Approved\n\n. Approved\n\n. Approved\n\n. Approved\n\n. Approved\n\n. Approved\n\n. Approved\n\n. Approved\n\n. Although we will want to add a bit more functionality to the dialog but this is good.\n. Approved\n\n. Fix your SASS linting errors first and then its good to go.\n. Approved\n\n. Approved\n\n. Approved\n\n. Approved\n\n. Approved\n\n. Approved\n\n. Approved\n\n. Approved\n\n. Approved\nWe finally made it.\n\n. Approved\n\n. Looks super good mike\n. Approved\n\n. Approved I had to update some dependencies to support node 6 and fix a weird issue in bundling where there was an extra (). Looks really good man thanks for getting this done.\n\n. Yes, it was causing a failure.\n. Hey @Brian-Ding apologies for the delayed response.\n1. Currently there is now way to just re-render the contextual menu inside the CommandBar manually. You will probably  have to Re-render the command bar for now until we can add more helpful public methods on CommandBar.\n2. If you don't want the ContextualMenu the command bar will only understand it's absense if you remove the entire ContextualMenu component not just the li's.\n3. Right now ContextualMenu  doesn't have have a callback for each item, we should have a method like this in a future release. For now you will need to attach your own events to ContextualMenu items in the CommandBar.\nI hope that helps! Let me know if you have anymore questions.\n. Approved\n\n. Approved\n\n. There is an issue when scrolling but that's an issue with Panel itself. I opened an issue for this #683. Otherwise looks great.\n. It looks like we would still need to add the implementation code snippets for all the components.\n. I went through and removed the rest of the component build code and the samples. I can back out the sample deletion but i think it would make sense to just get full documentation going with colors, type ramp, icons etc. \n. Approved\n\n. Approved\n\n. Approved\n\n. Approved\n\n. Approved Bro\n\n. Approved.\n. Approved\n. Approved\n. Approved\nAgreed that this should go into 7.0.0\n. Not sure if this should have an exclamation or not.\n. Did you add Tanya Pierce back? The name should be Alton Lafferty.\n. Is this file suppose to be indented with spaces not Tabs? Right now it looks like tabs.\n. It looks like the brand icons need to be removed from this page.\n. Actually, to follow the pattern of the samples, we should probably rename icons to Icons.\n. Maybe we should put a custom class like .ms-Breadcrumb-chevron or something just in case someone in the future wanted to use the chevron class inside the breadcrumb. Thoughts?\n. Same thought as comment below.\n. Use mixin @ms-zindex-front ? or the back version.\n. Extra white space here.\n. Instead of restarting the count, you have to continue the count so \n{0} Panel {1} and {0} Dialog {1} would become {0} Panel {1} and {2} Dialog {3}\n. Need a space between License and here\n. containg is spelled wrong.\n. Which less file? \n. Open?\n. You forgot to close this div, there is one ending div missing.\n. Make sure we remove this and our conflict resolution changes are in.\n. <div> Cannot be used inside of <button>\n. Same comment as Above, <div> cannot be used inside of a <button>\n. Same comment as Above, <div> cannot be used inside of a <button>\n. Same comment as Above, <div> cannot be used inside of a <button>\n. Same comment as Above, <div> cannot be used inside of a <button>\n. Same comment as Above, <div> cannot be used inside of a <button>\n. Same goes for the rest of the buttons.\n. It looks like all these image tags don't have an Alt attribute and also src=\"\" cannot be empty, we should have a fallback image at least if we are waiting to load one in.\n. Adding it back right now\n. Is there a reason for removing Command Bar? \n. nit: Extra space\n. Tabs?\n. The Tabbing is weird here.\n. Tabbing is weird, looks like a mix between tabs and spaces.\n. It will be when we continue working on the JS again.\n. Instead of setting an exact pixel value for centering the Dialog, let's make this happen in css. You can add this code below on the Dialog and you can remove the all the JS specific positioning pieces.\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\n. Yeah we should eventually just have ContextualHost do the positioning.\n. nit: extra line and if we are not using this anymore let's remove it.. Same here let's remove this if it's not being used.. ",
    "IvanJosipovic": "+1\n. ",
    "martindr": "+1\n. ",
    "pascalberger": "+1\n. +1\n. I think this is the same issue as #73\n. Icons are now generally shown, but there are quite a lot missing. I've opened #79 for this\n. http://officeuifabric.com is a community based site, the issue/PR should therefore be opened at https://github.com/ngOfficeUIFabric/officeuifabric.github.io\n. ",
    "rstormsf": "React Components! \nmaterial-ui.com\n. @andrewconnell\njust ran gulp watch and I don't see any server spinning on :2020 port :-( \n. ```\n\nFabric Message: All Fabric parts built successfully, you may now celebrate and dance!\nTIP: To test changes to Fabric source, check under /samples for demo HTML files of each Component.\n```\nand there is no samples folder :-( \nalso there is no log that some locahost server is running :-(\n. I also can see there is browserSync dependency but it's not used anywhere. :-( \ngulp/fabric.js\n26:var browserSync = require('browser-sync').create();\n. check PR for the small output fix to remove dev's confusion when reading gulp output\n. ",
    "ahmad-hamade": "+1\n. ",
    "davidlitmark": "+1\n. ",
    "bstenberg64": "+1\n. ",
    "sergeluca": "+1\n. ",
    "colinrippey": "+1\n. ",
    "LezaMax": "While we are certainly evaluating additions on this space we would love to see community specific projects that add this capability.  Both angular directives and react would be awesome community contributions. \n. Is this better? https://msdn.microsoft.com/EN-US/library/office/mt450443.aspx if so we can update other docs to follow the pattern. \n. In the meantime, here is the correct link: http://aka.ms/fabric-font-license\n. Thanks for letting us know. We are working on it. It does seem to be the same issue as 75\n. Thanks for letting us know. We are working on it. \n. @pascalberger are you still seeing issues?  I've tried a couple of times on different environments and fonts seem to be downloading fine.  Wondering if when you tried some configs were still propagating. Please let us know if things are working for you. \n. Seems this issue is closed now. Thanks @Jahnp for the details. \n. Working on it. I think icons that are not actually part of the release weren't removed from the CSS file. we will correct that soon. \n. There is a chrome control for Office 365 apps in the roadmap yes. It will be part of the JS controls that are built on top of fabric. Once released we'll let the community know but it will be part of its own repo most likely.  Here is the link to the 365 controls currently published: https://msdn.microsoft.com/en-us/office/office365/howto/javascript-controls\n. Thanks @casvaniersel, we'll take a look. \n. Thanks @johnnliu. Do you have a list of the icons you need? We can take a look and see if we can incorporate them.  Doubt we will have .ms-Icon-beer but how knows :) \n. Hi @git-sdavidpaul. All Fabric assets distributed via GitHub are licensed under the MIT license which means you can use them on any projects provided you follow the MIT license. Specifically for the fonts, as stated by their license, you can use them only on Office Add-Ins. In this context Office Add-Ins include any web applications that extend the Office User Experience including: Office Add-Ins (previously known as Apps for Office), SharePoint Add-Ins (previously known ad Apps for SharePoint) and Office 365 Apps (those launched from within the Office launcher).\n. I believe my latest answer addresses the question. Please let me know if it doesn't and we can reopen. Thanks!\n. I think is fine if its all lower case\n. ",
    "andrewconnell": "OK... I'll be happy to take this on... I've created a repo and will start flushing it out with community contribution guidelines: https://github.com/andrewconnell/ng-office-ui-fabric\n. ... and just to beat the horse a bit more, here's a followup and details on future plans: http://www.andrewconnell.com/blog/introducing-ng-officeuifabric-angular-directives-for-office-ui-fabric\n. :+1: :+1: \n. @matthew-dean by comparing SASS to Zune you have just made enemies with web developers at large! :smiley: \n. Awesome update! How soon can we expect to this to be in the CDN?\n. Reason I ask \u2013 next week we will have our first release of the Angular Directives for Office UI Fabric and our demos reference the CDN links\u2026 we\u2019d love to point to the latest stuff\u2026\n. @SharePointOscar just FYI... we shipped the first drop of http://ngofficeuifabric.com, Angular directives for Office UI Fabric\n. Np\u2026 planning another drop sometime early next week with at least one more directive\u2026\n. The change does help.\n. @stuaxo did you check out the gulp task watch? It builds the whole project and creates a sample site on http://localhost:2020 where you can see running samples.\n. This might be of interest (disclaimer, I kicked off the project, but it's open source and community driven):\nhttp://officeuifabric.com/\nMore info on it:\nhttp://www.andrewconnell.com/blog/introducing-officeuifabric-com-demos-and-reference-samples-for-office-ui-fabric\n. Looks like there are a few referenced in the CSS file that aren't there (seems the ones mentioned by @pascalberger were from the pre-1.0 release). The others I've found are: \n- ms-Icon--dynamicsMarketing\n- ms-Icon--msn\n- ms-Icon--sway\n. Check out how the Angular Material guys do it (http://github.com/angular/material). This is how we\u2019re modeling our CD with https://github.com/ngOfficeUIFabric/ng-officeuifabric. I\u2019m doing it for ngofficeuifabric\u2026 it\u2019s a WIP now and somewhat automated locally with scripts that will eventually get added to the main project.\nWhen we do a push to the master branch (only on master), on a green build in travis, a script will run that tags the current version with the version in package.json, builds the library (minified & unminified), updates the repo we use for deployment to npm/bower/cdnjs/nuget & tags it with the version & then publishes to npm/nuget.\nAll that\u2019s required is a green build push to mater that triggers everything else in an automated way.\n. Could we get a little clarification on what the syntax should be? I've got a Plunker that demonstrates how one would expect it works... but definitely have something wrong.\nhttp://plnkr.co/edit/Yej1sF16nCsK7Wv5zzbY\n. LGTM\n. This is actually on the plans for the table that we're building in the angular directives we're working on. Hope to have a initial release of a few directives in the first drop... sortable tables won't be in it, but it's definitely in the plans: ngofficeuifabric.com.\n. We have sortable table now with the http://ngofficeuifabric.com. You can grab our library from npm, bower or nuget.\nYou can see it in action here: \nhttp://ngofficeuifabric.com/demos/uifTable\n. @johnnyongesa Sorting isn't in the Office UI Fabric component\u2026 there isn\u2019t functionality per-say within the components. \nHowever the Angular port of Office UI Fabric, ngOfficeUiFabric does have column sorting as well as selectable rows in the table implementation. Check out a demo here: http://ngofficeuifabric.com/demos/uifTable/\n. @mikewheaton will the TypeScript additions that you are \"releasing\" also going to be in the CDN releases or like they are today where only CSS is in the CDN but JS is something you have to add to the project?\n. Great news\u2026 will the time from a release to getting it up on the CDN shorten as well? Right now looks like it\u2019s a 2 month + delay from a new release to it showing up on the CDN.\n. To pile on, if you use this method to only include the compiled CSS, you can add the following to your .gitignore to commit the compiled CSS in that release to your source.\n!bower_components/\nbower_components/*\n!bower_components/Office-UI-Fabric/\nbower_components/Office-UI-Fabric/*\n!bower_components/Office-UI-Fabric/dist/\nbower_components/Office-UI-Fabric/dist/*\n!bower_components/Office-UI-Fabric/dist/css/\nYou can see how I've referenced it in my bower.json & how I've setup my .gitignore file so that I only have the compiled CSS committed to my source: https://github.com/ngOfficeUIFabric/officeuifabric.github.io/tree/master/bower_components/Office-UI-Fabric/dist/css\n. SWEET!!!!!\n\n. Ah\u2026 that makes sense\u2026 better to reuse the persona ones for presence. I\u2019ll close this PR out.\nThe codepen\u2019s I\u2019m creating are for v1.0\u2026 When you guys ship a new version, I\u2019ll tweak them for 1.1. Lots of changes since 1.0 that I haven\u2019t incorporated (like the date picker).\n. You used my demo site in your repo... LOL... sweet!!! \n\n. :+1: Awesome to see you guys are moving away from the jQuery dependency! We did the same with ngOfficeUiFabric and using Angular + vanilla JavaScript and if necessary, Angular's jqLite to handle these cases.\n. How does this impact the date picker & pickadate.js?\n. :+1: \n. :+1: \n. OR... you could get added to CDNJS. This repo passes their criteria (100+ stars). Once you get submitted, you can include a bit in your config that will have their system include your library in a hourly crawl they do. If it sees you did a new drop (using tags in github repos), it will create a new version, suck in the files you specify and make them available in the directory. So worst case, you are in a public CDN within an hour or so of tagging & pushing a new release => master.\nThis is what we did for ngOfficeUiFabric: https://cdnjs.com/libraries/ngOfficeUiFabric\nHappy to assist with this... just ping me. We have a separate repo we use for distro of our libraries => NPM / bower / NuGet and CDNJS pulls from that (https://github.com/ngOfficeUIFabric/package-ngofficeuifabric) not where all dev is going on (https://github.com/ngOfficeUIFabric/ng-officeuifabric).\n. :+1: happy to jump in a chat to discuss (v-aconn)... we are going to see how the auto-update part goes in the next few days as I'm merging 4+ PR's and cutting a new patch release\n. Just piling on... we cut a new release of ngOfficeUiFabric... we updated the version number in our bower.json and package.json in the repo that we use for distros... sure enough, within the hour the CDNJS saw the change and sucked in our packaged library into their CDN, preserving the old versions.\nhttps://cdnjs.com/libraries/ngOfficeUiFabric\n. That's what I did for the http://officeuifabric.com site, here's the list: http://officeuifabric.com/components/list/\nI find it MUCH easier to demo the components than the way they are currently demo'd on the http://dev.office.com/fabric site (the markup is very hard to read & consume).\n. Disappointing, but thanks for the transparency & roadmap\n. Same seems to be true with the command bar: http://dev.office.com/fabric/components/commandbar. Clicking doesn't do anything with the search or any demo of the dropdown.\n. :+1: \n. :+1: \n. Makes most sense on the README as that's how other projects do it... great idea!\n. We have a slightly similar problem in Angular 1.4.9 as well... \n\nFor a live demo, you can scroll to the bottom of the page to see how it's rendered both as a <button> and <a>: http://ngofficeuifabric.com/demos/uifButton/\n. @kasajian The \"old site\" is something I built separate from Microsoft... I did it as a community thing. I've since handed the domain over to Microsoft who can change where it points. The site lives in a GitHub repo (https://github.com/ngOfficeUIFabric/officeuifabric.github.io) for another project the community is working on (http://ngofficeuifabric.com).\nFWIW, we have no plans to remove the \"old site\"... you can always get to it even after Microsoft decides to redirect the domain to their site by using the repo link.\n. IMHO, it\u2019s JS first, then TS.\nIf you write TS, you can understand JS, but the opposite might not be true. What WOULD be nice is if you do create JS libraries for your components, is if you provide type definitions for them one for each or one for all, just like you added bundles recently.\n. I don't want to get into pointing fingers here, but I do want to mention that all jQuery plugins referenced in the http://OfficeUiFabric.com site & those codepens referenced in were all created from JS I got form the Office UI Fabric downloads in the initial release. I didn't write any of those.\n. @kasajian any chance you are using Angular? The our <uif-table> directive implementation of the Office UI Fabric table includes not only selectable rows by also sortable columns:\nhttp://ngofficeuifabric.com/demos/uifTable/\n. Posted this elsewhere, but putting it here for transparency\u2026 this is disappointing.\nIMHO that seems very self serving for Office\u2026 what about if I was building a CRM system and wanted to use an icon to log a note on their account, or a currency symbol to see the status of their account balance & invoices or ms-icon\u2014bookmark or ms-icon\u2014star to follow them.\nEven if those 4 specific actions are what it\u2019s intended for, you \u200bknow people will simply use other icons to solve their business problem.\n. :+1: \n. Actually there is a forum\u2026 OfficeDev has a Slack team with a dedicated channel on fabric. See https://github.com/OfficeDev/Office-UI-Fabric/pull/342\n. While fixed in current versions of fabric, any thoughts to going back and applying the CSS fix to the 2.6.2 release? Many folks didn't update to the latest MDL2 implementation of the library yet.. WHOA... that's an epic list of commits & issues fixed. Congrats guys. You planning a post / writeup somewhere that explains what the big v2.x => v3.x changes are? We are close to a v1 release for ngOfficeUIFabric and want to work against the latest version of you guys so the timing is good. A writeup will help others (see: us) in taking a closer look on what we should keep an eye out for.\n. ",
    "donatj": ":+1:\n. ",
    "una": ":+1: :+1: :+1: \n. ",
    "Diablo-D3": ":+1: \n. ",
    "CuddleBunny": "I personally prefer LESS, perhaps maintaining both wouldn't be out of the question.\n. +1\n. Good answer. I've never seen SUIT CSS and have never thought of CSS as particularly scalable in the first place. This makes much more sense now. \n. ",
    "mrmckeb": "Agreed. Less is no longer the standard, as Sass has gotten much larger traction and a bigger following.\n. ",
    "tidg": "\ud83d\udc4d +1 \ud83d\udc4d\n. ",
    "matthew-dean": "They're used by different groups for different reasons.\nLESS is easier to learn as its a intentionally tight feature set to cover the vast majority of use cases, but not all.\nLike CSS, LESS is declarative. SASS is imperative. So that also makes it a more familiar concept to web developers. For instance, LESS had concepts like block scoping and cascading values that SASS does not have. So it's more like CSS+ and SASS is more like PHP or Ruby with CSS-like syntax.\nSo LESS doesn't try to be the standard but a solution to a different set of problems as priority. We (core Less users) regularly suggest Sass when people need a more programming-language-like imperative construct. Basically, Less is the iPod and Sass is the Zune, so, yup, Sass has way more features. :-) \nUse what suits your project!\n. @andrewconnell lol a low blow, I know. But sometimes I hear \"Sass is better than Less because it has more features.\" Which is pretty much exactly the same as saying, \"Zune is better than the iPod because it has more features.\" Fewer features sometimes makes for faster adoption, less confusion, and easier onboarding for new devs, so that's the reason I bring up the comparison.\n. I mentioned this thread in this post, if you're curious: http://getcrunch.co/2015/10/08/less-the-worlds-most-misunderstood-css-pre-processor/\n. > since it seems that tool is moving quickly into becoming the most popular one\nSorry, but under what metric have people determined that Sass is more popular than Less?\nhttps://twitter.com/matthewdeaners/status/693228336814817280\n. > For us it's not a question of the features of LESS vs Sass or the wider popularity or trendiness of either one \u2013 what we've heard from our users, both inside and outside of Microsoft, is that Sass is preferred. \nThat's a good answer, and makes sense.\n. ",
    "SandHilt": "Look this : https://css-tricks.com/sass-vs-less/\n. ",
    "StfBauer": "I think many web developer switched from LESS to SASS. Support both will be a good option for those who still use less.\n. :+1: \n. It would be also nice to have more of the default office 365 icons in the font. I created a small documentation on the following web site. http://lab.n8d.at/o365glyph/index.html\n. I think this also matches to the media query definition. Now they are included but the haven't been there in the early first release.\n. The table implementation is in general not recommended. You can use the same css classes and assign it to the table related HTML Elements.\nColumn span can only be applied directly on td and th elements but there is no equivalent to columns span available in CSS.\nThis will never work with the current implementation.\n. The same effect could be achieved with tables too because they are only effected by the display properties:\ntable ..... display: table\ntr ........... display: table-row\ntd .......... display: table-cell\nThose properties can always be changed to other display behaviors like block, inline-block, inline and so on. While there was a lack on browser support on older browser using div based table looked like to be good an alternative to tables.\nAlternatively a table can always be embedded in a div element that allows scrolling through overflow.\nThe benefit is that the data kept together but doesn't break the mobile design.\n. @mikewheaton From my side a blog post concerning this issue is coming up tomorrow. How responsive pattern can be applied to the table or at least in general how you can deal with table it in responsive scenarios.\n. @mikewheaton Spotted and documented some issues and maybe improvements.\nhttp://www.n8d.at/blog/how-to-handle-table-component-of-office-ui-fabric/\n. Thanks for the update.\n. Somehow I look into an old version. Now i've seen that this is currently implemented. The other thing I've are legacy fallbacks in the LESS files. Will you remove this in a future release?\n. There were some when I last checked the less files. Might recheck the style sheet again but close it for now.\n. Created a pull request for this issue and added the main section in the bower.json myself.\n. Well yes you can use it but there is currently a missing option that make the bower package a real useful extension. Documented in issue #245\n. No problem. Glad I could help!\n. :+1: Great and understandable. \nI was not really surprised by this behavior because all the css does is to build a table but with the wrong elements and only applies display values for table, table-row, table-cell.\nI found out that in most cases for larger table a surrounding div that allows horizontal scroll works great on mobile device.\n. :+1: Thank you for your clarification. To be honest never even heard of SuitCSS but mainly because it is not so broadly used as OOCSS, BEM or SMACSS.\nNo offend but from my perspective it looks pretty strange at first look and event harder to read. With camel case i have to read. with hyphens I can faster read an scan through the styles.\nWhen you are used to read c# code it looks familiar but I doubt that that many front end developer use Suite.\n. I checked the control in SharePoint because the same thing is already implemented there. Looks like the same issue is there too. The font-weight bold shifting exists there as well.\nI spotted another bug in the current Office UI Fabric implementation of the pivot.\nWhen you click on the bubbles the selection will be removed. In SharePoint the selection won't be removed because just by clicking the bubbles you just show the extended options and don't make a new selection.\n. @mikewheaton Honestly I would rather recommend to use proper UL / LI definition than replace the opening UL with divs. There is a reason why different HTML tags exist for different purposes. When something is named list people would expect to have a list. Otherwise HTML doesn't make sense at all W3C could have said here are your div elements and build whatever you want.\nIt was the same with the tables too.\nOn the other hand you might save a lot of additional CSS definitions by using proper element.\n. :+1: \n. The current state indeed is pretty confusing, I asked a similar question to this previously in issue #216 .\nMIT License says that I can do whatever I like to do with Office UI Fabric as long as I include the MIT License and mention it is built upon Office UI Fabric. That is what GITHub says and then you have other license information like the one @VesaJuvonen mentioned.\nWhen you take a look at the license statement here on Github for example it say first \"All rights reserved\" which basically means \"Don't touch it\" but then you have the MIT License terms. Which basically say do whatever you want with Office UI Fabric as long as you mention Office UI Fabric. You are event allowed to sell software based on Office UI Fabric and can use a different license than MIT.\nThis leads to a license information conflict because \"No rights reserved\" and \"All rights reserved\" won't match together.\nWeb fonts are always a problem. Segeo UI font is copyright protected which means you cannot use it under MIT License and you are definitly not allowed to distribute it as a web fonts together with Office UI Fabric.\nSimilar issue exists with the icon font included in the Office UI Fabric or Office 365. This font is basically not part of Segeo UI font. I guess this font is copyright protected too but never found an copyright notice on that. Actually someone at Microsoft used a tool named icomoon to generate a web font out of those icons.\nWhat will I do if I like create a node.js application that might run on a client and use the same look and feel as Office for convenience. In this case I might not be able to use Office UI Fabric. It's no problem for Windows user because they have the fonts installed but I won't be able to create cross platform applications that way or use a different font.\n@ericthompson Would be great if the same licenses will be used in all available source. Looking up what information you got. Thank you for your effort.\n. Wouldn't it be better to have table-layout: fixed in this case ?\n. No you are right. When you use table-layout: fixed the table renders on first row and not when the table have been fully loaded.\nWhat I ment was I you have table columns that shouldn't wrap it might make more sense to have it on a higher level rather than specify it on columns individually.\n```\ntable.fixed{\n    table-layout: fixed;\ntd{\n       white-space: nowrap;\n   }\n}\n```\nJust maybe.\n. @mikewheaton I converted the Office Icon font a couple of month ago to a svg symbol set. I can add it if needed.\nBrowser support is not a big issue anymore as seen in: http://caniuse.com/#search=svg\nActually to use icon fonts is really bad practice these days and propramatical especially in matter of usabiliy.\nThis was actually the reason my I switch to svg rather than use an icon font.\nReason Number One was this article: Seriously don't use icon fonts\nReason Number Two was this video: Seren Davies: Death to icon fonts\n. Make it simple to use an icon\nThat one is easy simply define:\n.icon{\n    display: block;\n    background: url('../images/icons.svg#icon-office365') no-repeat;\n    width: 128px;\n    height: 64px;\n}\nAllow Subset and reduce download time\nAll svg icons use currently 217kb. Well they size can be reduced by simple remove sections of the svg file. I makes it pretty handy because all icons are stored in just a single file. More icons are more complex than others. For example the Office 365 logo will be drawn more complex and therefore use more space. If gzip compression is activated on the server the file size will be reduced to 53kb.\nSo it won't use more than a regualar image. The fact that all is stored in a simple text file gives a lot of benefit of this kind of compressen.\nReduce HTTP Request\nIcon font use one http request. SVG icons use just one http request. So there is nothing to do on this side.\nCustom colors\nThe easiest way to apply custom colors is to embed it like an images:\n<svg class=\"icon2\">\n            <use xlink:href=\"images/icons.svg#icon-office365\" />\n        </svg>\nIn this case you can apply a custom color easy in css:\n.icon2{\n    fill: yellow;\n    &:hover{\n        fill: red;\n    }\n}\nSince the SVG is not part of the DOM document you cannot pass custom colors to it. You can if the svg will be served together with the HTML. (Will reduce a HTTP Request). This will slow down the loading process.\nWhat can be done in the SVG file is to have the same icon and pass in different color. In this case this needs to be done directly in the SVG file.\nAnother posibility is to use a mask-image and defile the color via background-color but this is definitly something for the future because IE doesn't support it at all. The other browser still have some issues with this.\nTo be honest while writing this comment. I started to doubt if it somehting the framework should consider now since the technological limitations seem way to hard for a regular developer to get it done without specific web development skill.\nMaybe there are some gulp plugins out there that helps to get things done faster or better. What might can be done is to add it as an optional part. Maybe document how to use svg icons and last but not least why they should be considered. Similar to what I've written here. \n. True will help you with languages too. Instead of referencing different font names you can simply use throughout the css just the default font-weight.\nJust in case the browser cannot find the exact font file, the font will be replaced with the next matching font. I guess it will be great enhancement and overall the font handling will be more fail safe.\n. Just stumbled upon this issue.\nI would recommend to remove the javascript completely because it is not required to create such simple spinner and might cause more problems like this.\nInstead use CSS3 for the rotation and propably a fallback as animated gif for older browsers if needed.\nThe spinner icon itself might be useful to be part of the icon font or will be served as SVG background image.\nIn general javascript should be avoided for such things because it can cause exceptions in browser and probably stop other more relevant scripts from working.\nWith CSS you don't have such issue and it simply work or doesn't work but in any case it won't break other code.\n. I don't like to be a show stopper but bringing Office UI to SharePoint currently doesn't actually make sense at all. The user experience is currently different now and most of the styles are redeveloped with other style sheet classes.\nSharePoint on the other hand currently provides well working controls that can be used.\nWhat we have seen this week are some great improvements toward Office UI Fabric in case of the new view of document libraries in SharePoint. Where some fimiliary components show up directly in SharePoint.\nFrom a development perspective I would suggest to use Office UI Fabric only for Office Add-ins and Provider Hosted Add-ins, such. Things that currently don't have any kind of Office like UI and don't interfere with the current user experience in SharePoint.\nI think fixing bugs like these are only time consuming at the moment and there are things that might are more important.\nAs I said previously. I don't like to be a show stopper but the usage scenarious for now should be tightened a bit and a focusing on the core functionalities for Office Add-ins and standalone SharePoint Add-ins should be done for now. \nIt is the same with SharePoint and Bootstrap. Just because I can doesn't always make sense from an architectural perspective.\nI really appreachiate the work you do :+1: \nI think usage scenarios on when to use Office UI Fabric will give people a good guidance!!! \n. You cannot disable a text field by assigning a css class only you need to place the property:\ndisabled='true' directly on the input field.\nThe css lass 'is-disabled' only provides the design of a disable input field.\n. As always thank you for your feedback. In additon I have a couple of remarks to your feedback.\nI know it is a common issue when graphic designer define how web design have to be implemented by web designer/web developer.\nIn addition with a proper viewport meta tag and iPhone would render 16px as 16pixels which is pretty tiny on devices with higher pixel density. A thing not covered by Office UI Fabric.\nTo be honest the calculation from pixel to em is not that complicated. Ever browser has 16px as the default text size define. Base on this you can easily calculate relative values. Especially when you use SASS.\nPixel values on the other hand are against the web accessibility guide lines too: see http://www.w3.org/WAI/GL/WCAG20-TECHS/css.html#C14\nYou really tend to support IE9. This leaves me a bit confused because Microsoft official droped the support for browser versions older than IE11. The support have been dropped on 12th of January this year. In addition the global browser use of IE9 is down to approximate 2%\nhttps://www.netmarketshare.com/browser-market-share.aspx?qprid=2&qpcustomd=0\nSo why do you still support such old browser?\nIn addition Office 365 only supports the latest browser see:\nhttps://products.office.com/en/office-system-requirements\nI guess this won't be tested with Office 365 Products such as SharePoint, Outlook and so on. I'm sure you will get more information on that internally.\nRegarding to Zooming: This works well when you have a full browser window but not when use Office UI Fabric in an Office Add-in. There is no way to trigger zoom. In this case you need to add a control that allows the user to resize the text. A thing that won't be used for ages now.\n. Thank you. \ud83d\udc4d   Wasn't aware of the dimished experience.\nLet's hope this support will be dropped soon.\n. Thanks. The problem I see is as long as you support it there will be a use for it. Even when other surrounding systems already dropped the support for that.\nIn case of the current 'dimished experience' it is understandable.\n. Can you please make the lines of the icons a little bit thicker. They doesn't look good on the web and Office 365. Help logo for example is so thing that you just barely see it as a question mark the 1px dot is not really optimal after the hairline thing upper part. Could be dust on the screen to ;)\n\nThis applies to nearly any icon currently in Office UI Fabric. They look nice at a large size but doesn't#t work that well on a smaller scale.. @Jahnp I know. \ud83d\udc4d but you are the only one to address this when it comes to web.\nThe problem with such thin icons is that they doesn't scale that good on small sizes and are hardly to recognise.\nThe icons on the suite bar for example are currently 17px. \nThe smallest icons I screen-shoted icon on Windows are 20px - 22px.\nBelow this size they are pretty hard to recognise plus on Windows they mostly companioned by a text.\nTo make a test I changed the font size first to 32px:\n\nChanged it then to 20px:\n\nAn these are the actual ones:\n\nWith the current icons it is just a small difference but it certainly makes a difference which font-size you use. I also know there are many ways around this issue but I guess for a regular developer out there should be at least provided some guidance or maybe alternatively filled icons for smaller sizes.\nGood to know that these icons are coming directly from Windows. Sometimes things on the web slightly behave a little bit different.. No problem to me cause I know there are still some small design challenges to take right now. The only problem is more in official communication. \nThere are at the moment as SVG icons available on the Office portal, And as they are SVG download and use them in presentations and so on. So at the moment, it is a bit unclear if they are final or not final, release or not release or coming but this is the official timeline. \nIMO it would have been better from a communication strategy to release them only when they are available everywhere. Otherwise, People think they are already final and currently have a wrong impression.. ",
    "timschoch": "+1\n. It would be very helpful if the masks could be localized to accomodate for different local styles. (eg currencies are written differently in Germany and in Switzerland)\n. ",
    "ericthompson": "Hi all! Looping back here to mention to everyone that our latest version, 1.2.0, includes the beginnings of our conversion to SASS - check it out! We've still got work to do, but we're open to hearing opinions/feedback.\n. @andrewconnell - we're currently pushing to get our CDN updated asap. I don't have a timeframe yet, but we're hoping for the next week or 2.\n. Agreed, @stuaxo. We'll update the README to more explicitly call this out. \n. Closing this due to #191 raising this to the top of the FAQ on the main README. More updates to come very soon!\n. @digglek - #274 should help with the JS for the Dialog. We've also included an example of a blocking dialog for extra completeness.\n@weshackett - we'll get the examples up on the site asap for both the Spinner and the Dialog.\n. Hey @adjohnson916 - thanks for contributing! Can you please sign the Contribution License Agreement located here?\nThanks!\n. Thanks, @adjohnson916! \n. The fix is in Master, let us know if you still have trouble and we can reopen. This will definitely be bundled with the next release (soon!).\n. Just validated and it looks like it's fixed.\n. You've got it, @dkreitz! We've got our official interactive documentation site up that includes an image to help explain it. If this is still a bit lacking, let us know. Thanks!\n. Reopening so we can track it.\n. Hey @casvaniersel - thanks for contributing! Can you please sign the Contribution License Agreement located here?\nThanks!\n. Thanks, @casvaniersel! \n. Definitely good to know what kinds of icons you'd need @johnnliu. We get our icons from the official sets used within Office/O365/Microsoft, so we'll need to work with those teams directly. Once I get your list, I can pass it along and see. I, for one, can find a lot of uses for a .ms-Icon--beer :beer: \n. Sorry about the delay on this one - we're looking into it!\n. Good catches - we'll look into this asap!\n. Editing this after going back and re-reading the thread - sorry bout that!\nWe aren't tracking a separate issue for the search field problem @aremes noted above. It seems like he has a fix that would work. If one of you sent out a pull request we wouldn't mind reviewing it!\n. \n(tm)\n. :+1: \n. You're right - currently we only have the horizontal one. We're looking into the vertical one! Switching between the layouts is an interesting idea...\n. Sorry for the delay, David - still looking into this one. I'm escalating it so we can get an answer asap.\n. Looking into this!\n. Good question - I'll work with the team to see what we can do.\n. Since Fabric is currently focused on styling, we're looking into what \"sorting\" would look like for the table. Adding richer table interactions aren't immediately on our roadmap, but we'll leave this open so we can be sure to track it as the project grows.\n. Unfortunately, not yet. We'll comment back if there are any updates.\n. @johnnyongesa - we'll make a note for the work item on our end.\n. We don't currently have plans for this, but it's a really good idea. We could imagine something like this as a variant of the SearchBox or TextField with a contextual menu for the \"searching feature.\"\n. Thanks for the extra example, @ichpuchtli!\n. Makes sense - thanks. Currently don't have a design pattern for it, but we'll look into adding it.\n. Interesting... could you elaborate on what this might look like?\n. Makes sense - thanks for the clarification. There aren't any patterns for this at the moment on our side, so this would probably get looked at a bit further out. We'll keep it open and let you know when it comes up.\n. In what form do you think this would make sense? JS or additional styles for current components?\n. After poking around, this is an interesting one for us. Not something we had originally thought of doing, but we'll keep it open.\n. This is an interesting request - we'd need to look into what would be involved with doing something like this. \nWhat kind of component would you want from this? We can see ourselves having styling for something like this, but would want to know what you're looking for.\n. This has been fixed - closing for now!\n. Still borked - we're working on it.\n. Definitely a good and useful one. We're actually doing work on this side to bring one in, but we don't have an ETA yet.\nI'm curious - can you give me some examples of the two sizes? It would be great for us to know as we think through the designs on our side.\n. Let us check with our Design team and get back to you!\n. Checked with some of our Designers and you're right - although the List Item is responsive, it's not terribly touch friendly. We'll keep this issue open as a placeholder and put an item on our backlog to address making the List Item touch friendly.\n. Correct, @pascalberger! We have our own site in the works, but opening an issue at the other repo is the right way to go - @andrewconnell can help you out! Closing.\n. This is a good idea, but it isn't on our immediate roadmap. We'd love to see what you've got, and would be happy to incorporate it if it makes sense.\n. Hi @oising - I think the crux of my response about it \"making sense\" is geared towards the scope of the Office UI Fabric project. It looks like the core of our misunderstanding centers around this, and I should have been clearer :-)\nWhen it comes to the scope of Office UI Fabric at this stage, we're taking a primary focus on the styling. We explain this in our documentation and in our responses to other issues. We absolutely don't want to rule out our growth into more robust JS, but, for now, our team focuses on the skin. There's plenty of work when it comes to the styling, and this is where we can add the most value as a group of design developers seated in a MS design studio.\nMany of the products we support also don't use jQuery and don't want to take a dependency on it. For this reason, we've abstracted Fabric away and only built up the \"presentational\" JS necessary to show the intended behavior. Sometimes, we use jQuery just to show intended behavior given how powerful and ubiquitous it is even though many of our consumers decide to remove/replace it with their own tech. Building out additional functionality beyond what the designs call for would take time away from our other obligations. We absolutely encourage the community to help us expand the toolkit beyond what we can just support - this is the reasoning behind why we didn't close this issue.\nIf you've got ideas on how to expand the toolkit, please feel free to open a PR or file some issues so we can keep tabs on it (saw your other issues!). We think it's great to see folks helping out, and will look over any and all PRs - especially those that help make the toolkit even more powerful!\n. Thanks for your feedback, @seriewe. The team talked and decided to revert the DatePicker to help deal with issues like yours. You can check out the response in #71.\nTo answer your question, yes - we use pickadate to prop up our Date Picker. Closing for now!\n. Good catch - your fix looks great. Submit a PR and we'll review it!\n. Merged in, closing!\n. #179 reverts DatePicker back to its original state. Closing for now, but let us know if you're still having trouble.\n. Great feedback and good tutorial bugs - we'll work on this and fix it up. Thanks for finding them!\n. Good catch - we're on it to add truncation to the name text.\n. @unindented - gotcha and noted. Agreed!\n. Good catch - we should totally fix this. Probably because of a specifically set height. Looking into it!\n. This is great - thanks for catching it and proposing a solution. Would you mind making a pull request with your fix so we can review it?\n. Closed with @ericivarsson's pull request #182.\n. Looks good, approved!\n. Thanks for the feedback, @martellaj! Right now, the text inside the button being greyed out is the way that the Design Language currently indicates a disabled state, so what you're seeing is per the design. We'll be mindful of your feedback as the design evolves. \n. You're correct about the colors for the background/border colors staying the same across states, but, currently, the Design Language takes the text color as the signal for the enabled/disabled state. This is especially relevant for the default button that only has a change in the text color from dark grey to light grey. It's probably easiest if you compare them side-by-side.\nHere are the 5 Fabric buttons in their enabled state:\n\nHere are the same 5 buttons in their disabled state:\n\n. This is a great idea and we're happy to make the presentational JS in the toolkit more usable. The only caveat we have to make is that the design language currently doesn't support all of the functionality in pickadate.js's robust API, so we can't take on any bugs resulting from the API's many options or the visualizations of those options.\nTo that end, we'll definitely look into supporting more of the functionality provided by pickadate.js (e.g. disabled days, formatting options, etc.) and open an issue on ourselves to keep tabs on the fact that we're missing these. Thanks for contributing and improving the toolkit for everyone!\n. Thanks for this @aremes! This is directly in reference to issue #185.\nJust to reiterate from the same issue I'm closing... the design language currently doesn't support all of the functionality in pickadate.js's robust API, so we can't take on any bugs resulting from the API's many options or the visualizations of those options.\nTo that end, we'll definitely look into supporting more of the functionality provided by pickadate.js (e.g. disabled days, formatting options, etc.) and we opened an issue on ourselves - #188 - to track this.\n. We'll look into it, @aremes - thanks for bringing it up.\n. Interesting request - could you show us what you'd like to see? It's especially helpful if we could see it in the context of a web part.\nThanks!\n. Thanks for showing us this - it was great to see what you're trying to do. We can pass the feedback for the need for a more \"compact\" list item along to our design team. We'll let you know when we've got updates!\nEdit - I realized I didn't complete answer your question. The current ListItem is built in such a way that it is dependent on the layout provided by the design, so removing the primaryText will inevitably throw off the alignment with the metaText. I think the right thing to do here is get back to you with the complete design perspective/suggestion so you can be sure you're using the most Office-y list item possible :-)\n. Ah, I see. The ListItem you're using is intended to be a hero component (e.g. the primary component on the page/app/add-in), so I can understand how the large size of the primaryText could throw off your visual hierarchy.\nI still wonder if a compact variant of the ListItem where the text is smaller would help - especially if it's the same/closer in size to the secondaryText.\n. The request makes sense. We don't have an ETA, but we'll work with our design partners and provide an update as soon as we can.\n. I think what @jedunn is getting at is a screenshot showing the list items in the greater context of the overall page. This would allow us to get a sense of how the list item sits in comparison to other elements on the page.\n. Good catch - we'll look into it!\n. Looks like this one was fixed by #229! Let us know if you notice anything else!\n. Are you using the sample jQuery code? It might be conflicting with whatever script is being set by ASP.\n. Great catch. Merging!\n. Hi @vzaidman - I added a comment into the DatePicker's html file specifying the version and a link to the github documentation for that version.\n. We'll look into this one - seems like a good request.\nOther than changing the type, what kinds of design details are you looking for / thinking about?\n. Ah, interesting then this is more of an increment/decrement component. I think, on our end, a numeric input component would be more akin to a textbox with special alignment and an input mask.\nFor our bookkeeping, I'll rename this to reflect how we're thinking about it and what you've asked for. We'll loop back when we've got updates to share.\nThanks! \n. Right now, the license only allows the fonts to be pulled from the CDN, and the font files cannot be distributed on their own (i.e. download locally and then distribute).\n. OK - we're not seeing this error anymore on our end. Please reping if you notice it again.\n. Great catches - thanks!\n. Interesting... we're actually not getting that exact bug, but we're seeing that the placeholder text blocks selection of the SearchBox.\nWhat versions of IE and Edge are you currently using?\n. Thanks for the extra info - we'll look into this one.\n. You're right to set the line-height back to normal, @ryankmcintyre. Since office.css is not a part of Fabric, please file an issue against that repo so they're aware. Thanks!\n. After thinking about it some more, this seems easy enough to include and it is important for us to work well with office.css. We'll get something out as soon as possible. Thanks!\n. OK - let us know if you still have any trouble, but #230 should fix it for you!\n. We have some classes you can use generally to help out with alerts, errors, info, and success states:\n``` css\n// Utility colors\n.ms-fontColor-error, \n.ms-fontColor-error--hover:hover {\n  color: @ms-color-error;\n}\n.ms-fontColor-alert, \n.ms-fontColor-alert--hover:hover {\n  color: @ms-color-alert;\n}\n.ms-fontColor-info, \n.ms-fontColor-info--hover:hover {\n  color: @ms-color-info;\n}\n.ms-fontColor-success, \n.ms-fontColor-success--hover:hover {\n  color: @ms-color-success;\n}\n```\nThese were designed to help out with validation scenarios in mind. Does this help?\n. Let us know if you still have other questions! Otherwise I'm going to go on ahead and close for now.\n. Ah, I see. The way that our RTL styles work right now is that they're separate files that can be swapped out depending on what's needed - they shouldn't be used at the same time. However, we recognize the need for combining them into one file, and we'll put it on our backlog. No ETA, unfortunately, but we can loop back when we have an update.\n. Completely our bad - we've been lagging behind as our team has worked on a bunch of big projects (like the site). We just made our big 1.2.0 release, and we plan to move to a 2 week cadence with absolutely nothing waiting longer than a month. We apologize for the pretty extreme delay in this release!\n. It can be a bit confusing! Actually, the License and the copyright don't conflict since Microsoft owns the code but licenses it under an MIT license. Hope this helps!\n. OK - we actually think we know what's happening here. It looks like the CMS might be ripping that line of code out. Ouch!\nGood find - we'll put it on the backlog and scan the rest of the components as well to see if it did something similar. Thanks!\n. OK - we fixed up the documentation so that we don't get these tags dropped! Let us know if you notice more problems.\n. @brannmar - good catch. We've actually got a PR out that should fix this - we'll need to test to to confirm. I'll leave this open until we get a chance to test it, and get it merged in. If not, we'll address it in a different PR. Thanks!\n. Looks like #209 fixed this for ie10. We're looking at the problem for ie9 - I'm not even seeing the button to trigger the panel :-/\n. Thanks for finding this one - looking into it!\n. Soon... very soon... I'll leave this open until we've got it in so you'll be aware!\n. @battletoilet worked on this one and we're still working towards design approval before pulling in. \n. I think this gets to the heart of the issue of our response in #159 - relying heavily on certain tools empowers some folks and slows down others. The right thing to do here is for us to leave this issue open with a help wanted tag, and recommend a community-driven fork of the project to help make the truly jQuery-focused flavor of the toolkit available for others.\nWe're currently evaluating paths forward that would allow us to reduce our dependencies, and we can provide an update as soon as we have a more concrete answer.\n. Hi @oising,\nHave you seen this People Control? These are official JavaScript Office Controls that come pre-skinned with Fabric. I can reference you to one of my colleagues, @zholi, who may also be able to help. I know this isn't exactly the OOTB SPO/2013 People Picker, but it might be a good start.\nLet me know if this is at all helpful - if not, I'll go on ahead and ping other folks who may be able to assist you.\nCheers!\n. Gotcha and I can totally understand your frustration.\nCurrently, Fabric can be used with SharePoint, but it's not something that's deeply supported for the existing UX (see here for the more official statement). As things progress on our side, you can expect for it to be a lot easier to style the OOTB SP People Picker.\nIn order to get you help though, I would definitely recommend that you check out the Office Dev Center User Voice site and file an ask there. I'm sure other folks are facing your same dilemma, and this is the best place to get your question posed to the right folks.\n. Completely understood! Have you tried perusing the Fabric site? There are samples for each of the components and if you click on the HTML tab (included for each component), you can copy/paste the markup from there. This is a super common use case here in the Studio.\nAre these the types of snippets you're looking for?\n. Sorry about the delay here! We recently updated our bower package registry, and just double checked - it looks OK on our end. We're seeing the same CSS on both the CDN and the Bower package. Please let me know if they're still different for you.\n. This is a great catch - your fix finds the correct card. This is a pretty gnarly scoping issue, and your fix is exactly what we would do. Would you mind submitting a pull request with this fix in it?\n. Thanks for the help, @TBag! \n. Hi Alex! We didn't have this on our backlog, but we'll add it and start looking for other patterns within Office / Office 365.\nThere is a pattern for folder hierarchies within OneDrive that seems inline with TreeView that we could look into getting built out, but the closest thing we have to TreeList is Fabric's OrgChart component. Unfortunately, OrgChart doesn't have the nice nesting indentation that the TreeList does.\nHere's the folder hierarchy within OneDrive:\n\nI'll mark this one and we'll update you when we've got something!\n. Oh man - that's no good. OK, it seems to work on our end, so there might be something finicky happening with the CDN.\nJust to make sure we hone in on the problem, could you hit the URL http://appsforoffice.microsoft.com/fabric/1.0/fabric.css in your browser window and see if it brings up the CSS?\n. OK - then this means there is something funky going on with the CDN. We're escalating now - sorry about the inconvenience!\n. Hey, @elegault -  could you reset the napa project to have the StartPage be Home.html for us? We want to check through and see what's going wrong. Thanks!\n. Awesome - thank you!\n. @elegault - It may seem like we're trying everything, but can you also try referencing the CDN via a https url?\n. Haha - no worries! Let us know if it comes back up.\n. Made the adjustments - merged!\n. Woah - thanks for bringing this to our attention, @andrewconnell!\nWe're working to fix this and get everything on the CDN right now. \n. Awesome, approved on my end!\n. Thanks, Mike :+1: \n. Looks good to me!\n. I'm only seeing is-selected is-selectable which brings up the checkbox for a selectable item. I'm seeing the same in my local builds as well.\n\nClosing, but please reopen if I've missed something.\n. Looks good - go on ahead and merge.\n. Whoops! Looking into this now - thanks for bringing it to our attention!\n. This is really neat - thanks for bringing this to our attention! I'm curious about the team's overall thoughts.\n. I totally hear you on this one, @waldekmastykarz. We actually provide samples, but we're in dire need of updating our documentation to explain how to actually access them. We'll be doing this very, very soon.\nIn the meantime, I can walk you (and other folks who see this issue) through how to build, access, and even play around with the sample Form and Video Portal app:\n1. Follow the instructions to clone, install dependencies, and build the repo.\n2. You can use either gulp or gulp watch depending on whether you would like to just build the samples once, or you would like to build the samples and then watch the code so you can have it auto-rebuild  as you play with it.\n3. Once you've got things built, open the index.html file under [Fabric's root]\\dist\\samples to view a list of all of the samples Fabric provides. This includes all of the components and the more specific samples at the bottom of the page (Form or VideoPortal).\n4. Remember, to play with the code and see your updates live (assuming you're using gulp watch) be sure you make your edits to the source files for the samples under [Fabric's root]\\src\\samples\\[desired sample].\nAs you mentioned, these don't actually do anything, but should give you an idea of how folks on the Fabric team leverage the toolkit. We'll get this info up on our docs site asap. Sorry for the inconvenience here!\n. No problem! Let us know if it isn't what you were looking for and we can investigate some alternatives. \n. Thanks, @SteenMolberg! We're passing this along and we'll get back to you as soon as we can.\n. Hi @VesaJuvonen - all Fabric assets distributed via GitHub are licensed under the MIT license which means you can use them on any projects provided you follow the MIT license. Specifically for the fonts, as stated by their license, you can use them only on Office Add-Ins. In this context Office Add-Ins include any web applications that extend the Office User Experience including: Office Add-Ins (previously known as Apps for Office), SharePoint Add-Ins (previously known as Apps for SharePoint) and Office 365 Apps (those launched from within the Office launcher).\nAll of this in mind, I'm going to reach out to contacts on my side to see if we can change the wording here to make it less confusing. Leaving open for now as I dig in!\n. OK! So I apologize for it being a little while, but legal matters can sometimes be confusing and take time for me to iron out.\nI've worked with legal on our side to get the license that goes alongside the fonts (icons and Segoe UI) to better reflect the intended usage of those assets: extending the Office/Office 365 User Experience. It also more clearly calls out that the CSS is not the intended \"target\" of the license for the fonts.\nThe fonts included with Fabric (that are up on the CDN) are a part of the Segoe UI family and are, therefore, covered by the above linked license. My hope is that the newly updated license helps make it clearer that you can use it for the purposes @VesaJuvonen asked about.\nThe MIT License, on the other hand, covers the code in the repository and does not include the fonts (Segoe UI and iconography). The two licenses are quite different, and I hope the wording changes prevent confusion about their possible overlap.\nI hope this helps!\n. Thanks, @waldekmastykarz!  I think I know what's happening here - our components aren't updated in the samples :disappointed:\n143 fixed the DatePicker bug... if I remember correctly. We can take a look and see if that's actually issue\n/armchairBugFixing\n. @waldekmastykarz - what version of Fabric are you using?\n. Oh no! OK, just checking - I'll try to repro it on some other machines asap.\n. Well, I'm on 9.0.3 like @mikewheaton and not able to repro:\n\nNot quite sure what could be happening... might want to try a fresh clone?\n. Approved!\n. Totally true that we host the CSS, but our focus is mostly in this area. We'll add it to our roadmap as something that has been requested so we can track it, but I'm afraid it's not on the immediate horizon (for now).\n. Hi @padewitte!\nWe provide the \"reply\" icon which is actually used across Microsoft Office properties:\n\nYou can see it in the Outlook Web App for the undo metaphor:\n\n...and the Word app for both undo and redo:\n\nFor redo, you can simply flip the icon along the vertical axis to where it points in the opposite direction. Let us know if you have any questions!\n. Thanks for the suggestion, @lagivan - we're actually in the process of looking at this right now but don't have a timeframe. I just added it to the roadmap!\n. Hi @oozoo-solutions - the components have been moved out of the core repository (this one) and into a new repository called Office UI Fabric JS which has its own Trello board. I assure you, your request is alive and well :smile: \nFor now, we're focusing our efforts on the Fabric React project, but we're watching the Trello boards/Issue trackers closely. Please vote up to help us see what folks are looking for.\n. Uh oh - that's not good. I'm not seeing it in my local build of 2.4.1, but I'll put a bug on us to see if we can investigate and understand what's happening.\n. Closed via this commit.\n. @StfBauer - we totally hear you. As @mikewheaton said, we're still seeing some usage (last time we checked). We'll kick off the discussions on our end and report back if there are any updates.\n. This is awesome - good work, @mikewheaton! \n. @JasonWeise - any specific examples you're looking at?\n. Thanks, @ArnonEilat. We've added this to the roadmap, so we'll close the issue for now. \n@JasonWeise - feel free to pile on if you have specific examples you're looking at. The ones provided by @ArnonEilat are pretty varied, so it would be good to see what you were thinking as well.\nThanks all!\n. Could you send us a screenshot of how this button appears in your add-ins? This would help us understand what you're shooting for and how our current pattern doesn't fit.\n. @andrewconnell - yes! we will be working on a big 'ol blog post that helps call out the changes and how some of the new work can be used. Definitely look forward to this in the near future!\n. Agreed - I think this makes sense. \n. Thank you for filing this, @MartinSSeifert! Now that we've got it in our issues list, I've gone ahead and added it to our roadmap's icon request section.\n. Approved\n\n. I'm good to move forward with what he wrote.\nOn Jul 10, 2016, at 10:44 AM, Mike Wheaton notifications@github.com<mailto:notifications@github.com> wrote:\n@tyrasmhttps://github.com/tyrasm: Any preference on calling it a tail or beak? We can always merge this in and change the terminology later on.\n\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHubhttps://github.com/OfficeDev/office-ui-fabric/pull/672#issuecomment-231601294, or mute the threadhttps://github.com/notifications/unsubscribe/ABWuNh693I-_9GVZB7D8hXZ2ZE6V-gqCks5qUS9rgaJpZM4I4EMP.\n. Hey folks - since it's a part of our roadmap, we'll be closing this one. Thanks for all the input and screenshots!\n. Thanks for this suggestion, @pkbullock - we've added it to our roadmap!\n. Hi, @johnnyongesa!  When you refer to the \"old\" people picker, are you referring to a Fabric one or this people picker (or maybe something different)?\n. Good suggestion - this is on our roadmap as something we'd like to pursue in the future.\nCould you provide a screenshot of what you have in mind (or how you'd like to use it)?\n. Thanks for the extra context, @rakheejain. We'll go on ahead and close since we're tracking this, but the example helps us understand your intended use and expected behavior/appearance.\n. We've gotten requests for sorting (which are on our roadmap), but we could also look into filtering. It's now added to our roadmap, so closing for now.\n. Thanks for noting this, @Etheryte. Filed!\n. Good point - filed!\n. The template.ts file is actually intended for the new 3.0.0 beta that's currently on master - not the 2.6.1 (last stable release). If you're following those instructions be sure that you're using 2.6.1.\n. These are great questions - not nitpicky at all IMO :-)\nWe'll get this in front of our Design team asap and loop back when we here more.\n. HI, @tavorazo - did it give any specific errors/guidance? I don't believe that anyone the team has tried running parts of the toolkit through this.\n. Approved\n\n. Approved\n\n. Approved\n\n. I agree - documentation is key as the ms-color-neutralPrimary is a part of the design language.\n. Hi @simibac,\nThanks for the request. Unfortunately, the document you linked to is correct in that Fabric, at the moment, doesn't support SharePoint themes. I'm curious where you read that documentation about theming working with the suite navigation for Fabric. It would be good to see the context.\n. Going to close for now as the documentation states that Fabric doesn't currently support SharePoint themes:\n\nWe certainly hope to support them in the future, but currently do not have a timeframe. Please let us know if you find the documentation that explains otherwise so we can update it. Thanks!\n. Thanks for pointing this out, @KTITS-Tom - I've got #800 to rectify this.\nWe're looking into hooking into theming more broadly, and can provide updates when this is set up.\n. Approved\n\n. Looking into this now to see if we can repro.\n. We tested this out and didn't have it repro. Are you still seeing this issue?\n. Please let us know if there are more details and I can reopen.\n. @patrickabel and @Chethansannju - What versions of Fabric are you both using? Just trying to narrow down between the latest and the older set.\nThanks for any info!\n. @Chethansannju and @patrickabel - could you let us know what versions of macOS, Safari, and Fabric you're using?\n. We're going to go on ahead and close this, but let us know if you have more info - we're not able to repro.\n. Thanks for dropping a note, @simkessy, but this Issue is related to one of the components that is now contained in the Office UI Fabric JS repo.\nI can still answer your question, though :smile: \nWe use the pickadate input picker to power ours - the API is available through Amsul's site. Feel free to file more issues in the JS repo if you have further questions.\n. Hi, @davidjohnbell - the components have moved over to the Office UI Fabric JS repository. There you can find extensive documentation for each component.\nSorry for the confusion here - we're in the final steps of building out and updating our site which should be available in the next 1-2 weeks :smile: \n. Thank you!! Hoping to make even more great stuff available soon!\n. Fixed on our end, just waiting for the CDN to update now!\n. Approved\n\n. Hi @vcgupta - could you send us a screenshot and description of your scenario?\n. Without any extra info, we're going to go on ahead and close this. If you'd like to reopen, please do so in the Fabric JS repo as this is where all of the components that used to be a part of this project are now located.\n. At the moment, we don't have a clear picture of how the Fabric projects interact with SharePoint theming. We've started down the path of supporting this for Fabric React, but we're still in the early stages of bringing this together.\nWe're looking into this, and hope to provide an update.\nI've also added a card to the Trello board to track this.\n. Approved\n\n. We're currently looking into some server issues and will be trying to get improvements going soon. Unfortunately, we're a bit limited at the moment since, as @mikewheaton said, we can't provide a copy of the font for download.\nPlease expect improvements within the next month, and we apologize for the inconvenience!\n. Hmm - just did a fresh clone myself, npm i, and I'm still seeing the failure.\nI ended up running Node v6.2.2 and npm 3.10.7 when I tried at first. I downgraded to the latest stable version of Node, v4.6.0, did a fresh clone, a jump to the new branch (without building with the old dependencies), npm i, and then gulp watch and it worked!\nLet me leave this issue open while update the V2 documentation to reflect this process.\n. Sorry about the confusion - updated my comment. It did end up working once I downgraded, so I just submitted a PR to update the V2 docs to explain the need for this version of Node.\n. Sounds good. Really looks like we should update some of these docs to explain how to view the localhost docs in a more primary way as this is the only way to see the live samples. I agree with you - let's get the updated docs in now to unblock folks now, and then get a patch in soon. Thanks for your help!\n. Fixed by this release - 2.6.2. I'll go in and revert my statement in the md file and we can call this closed \ud83d\ude04 \n. Thank you for the request, @JyotsnaWadhwani. I've put a card on the Trello board to reflect it. Please give it an upvote so we can track what folks want.\nThanks!\n. @JyotsnaWadhwani - I've added the request to the Fabric JS Trello board - this is the board that tracks requests for the component set that used to be a part of this project (Fabric JS). Is this the component set you are asking for this to be included in or were you hoping that this be a part of the Fabric React (React-based) component set?\n. Gotcha - thanks!\n. Thanks for the providing some pointers, @sjclemmy!\nThe Fabric sub-projects are split between:\n- Fabric Core - the core, JS framework independent set of base styles (colors, icons type, the grid, and more)\n- Fabric JS - the presentation-focused, simpler components that don't use a framework, but do use TypeScript that compiles down to vanilla JS\n- Fabric React - React-based implementation of our components that is being used across multiple teams\n- Fabric iOS - Native Swift implementation of some core styling and components\nA few months ago, we split the components out from the Fabric repository making Fabric JS (since there are now multiple implementations of the components). The Fabric JS project has already had other releases since splitting it off, so, although most of our work will be going to Fabric React for now, we'll continue to monitor the project, look at PRs, and see what sorts of usage the project gets. I would expect significantly more momentum behind the Fabric React project for a while as it continues to be used by modern SharePoint and other teams throughout the company.\nAt the moment, there are no plans to \"port\" new components like the DetailsList over to Fabric JS, but, if you have a request, please file an issue in the Fabric JS repo and it will be added to the Fabric JS Trello board so we can track what folks want/need.\nThe last stable version of Fabric that included the components is Fabric 2.6.1 which you can still use (even if you're referencing the CDN). We have some documentation that can help you get started with this version too. We're also looking into how to improve the documentation that @sjclemmy so nicely pointed you to \ud83d\ude04 \n. Approved\n\n. Hi, @mimisasouvanh - the site currently shows the new iconography available in the latest versions of Core, JS, and React implementations. For the previous version of the iconography, you can follow these instructions to build and host the 2.6.X documentation site where you can see all of the icons and their appropriate class names:\n1. Clone the the Core project\n2. Checkout the branch for the 2.6.1 release: git checkout release/2.6.1 from the command line\n3. Navigate to the folder that contains the gulpfile.js file (Fabric's root)\n4. npm install\n5. gulp watch\nNavigating to localhost:2020, you can check out this page:\n\n. We've actually removed all mirrored icons in favor of using flipping to accommodate our RTL scenarios - you can see the work in this pull request. We had a subsequent PR that fixed some of these still appearing in the SCSS.\nThis is a bit easier, allows us to remove a good number of icons (for less bloat), and doesn't degrade the quality as these icons were exactly mirror images (vs. being redrawn specifically for RTL).\nIt definitely looks like these are still showing up on the site - we'll look into getting this updated asap.\n. This is now fixed in the newest version of the site - please do a hard refresh if you're still seeing the old icons.\n. You are quite right! This is actually in the process of being fixed at the moment, and is just taking some time to make it to our CDN.\nGood catch \ud83d\ude04 \n. Approved (bad form, I know :stuck_out_tongue_winking_eye:)\n\n. Hmm... I've seen some that may work. Would this just be a for a generic file? Also, do you have a specific metaphor in mind?\nThe one that I've seen (that's generic) is this:\n\nThat would signify checked out with the \"checked in\" version being:\n\n. Yep, that's not currently in our icon set, but I've just filed a request for it to be added. I'll also look into a \"checked in\" version too. Keeping this open until we get font file up.\n. I may be jumping on this a bit early, but where did we want the documentation for this to go? Just under /ghdocs?\n. @leddie24 - sorry, forgot about the site! No worries, I'll take a look at there - just missed the notification \ud83d\ude2a \n. Approved!\n\n. I've created one card for each of the two requests.\nDo you have any examples of metaphors that would work for you?\n. @Abrissirba - we meant from the materials link. It's tough to find a metaphor that works as a monochrome symbol.\nSome examples exist in standard Office apps, but they utilize multi-color to be recognizable (along with labels):\n\nJust wanted to get a sense of what kinds of metaphors you're looking for or that work for you.\n. After poking around, we've found a paintbrush that you could then use in conjunction with other symbols/text. Would this suffice?\n\n. Approved!\n\n. This could also be done at the same time as #349.\n. Approved \ud83d\ude38 \n\n. Since this is actually an intrinsic part of how the icons work, I'm going to go on ahead and close the issue here, but open another issue in Fabric React for us to address when the component cleanup work occurs.\n. After checking with our icon team, almost all icons are optimized for 16px (with a few exceptions that are called out in the friendly name).\nAdding new hints is not something they're currently planning to do, so we should be massaging the sizes to find what works best.\n. Approved\n\n. @gregdegruy - you can absolutely report edits/bugs here. They'd be much appreciated \ud83d\udc4d \nI'd love to know what areas of documentation you were thinking about making suggestions for:\n- Core Styles (icons, typography, colors, etc.)\n- Fabric React components\n- Fabric JS components\n- General info like Getting started or the Resources section\nThanks!\n. Cool! Thanks for the extra info. We've discussed making the documentation open source, but currently haven't been able to schedule that. This is very helpful in pushing us to do this \ud83d\ude04 \nIn the end, though, moving to the wiki isn't on our roadmap (since we'd just go open source instead), so closing for now.\n. Approved\n\n. Approved!\n. Approved\n. Thanks for the extra info, @gautamsi. Let me reach out to some folks on my end and connect you with them to see if there are other options.. @sompylasar - is this a question about components in the Fabric React project?. No worries \ud83d\ude04 . @chiubacca - is this a question about components in the Fabric React project?. Gotcha. Could you please file an issue in the Fabric React repository?\nThis repository is the Core which includes all of the main styling (colors, grid, icons, fonts, etc.).. Approved! \ud83d\udc83 \n. Approved!\n. It looks like you forgot to remove this line.\n. I would rephrase this to:\n\"Go here to download the latest .zip of Fabric, and then extract the contents. Then go into /dist/css and copy fabric.css and fabric.components.css into your todo/css/ project folder. Then add the following lines to the <head> section of your index.html document:\"\n. Nit time! It's \"style sheet\" not \"styles sheet\", technically :-)\n. I would bold the directory for todo/css/\n. Missing a closing > from the span.\n. I would pick to capitalize First Column if you plan to capitalize Second Column for consistency's sake.\n. I'd rephrase to:\n\"Now we should have a simple title inside a white strip.\"\n. I think the last sentence is supposed to look a bit different than  \"_Your app.css file should...\"\n. Missing a period at the end of this sentence.\n. Totally a preference, but I'd drop the curly braces from the inline code block.\n. I'd rephrase to:\n\"But now we'd really like to tweak our component by adding a title and a description along with icons for an x and a checkmark. Since we don't need the paper clip and flag, go ahead and remove all <div class=\"ms-ListItem is-selectable\"></div> elements except the first one** so we have one element to work with.\"\n. I'd rephrase to:\n\"Then change the icons to the x and the check: replace ms-Icon ms-Icon--flag with ms-Icon ms-Icon--x and ms-Icon ms-Icon--pinLeft with ms-Icon ms-Icon--check. Our new list HTML should look like the following: \"\n. I'd rephrase to:\n\"Now let's copy this new list item code and paste it at least 10 times inside of <ul class=\u201dms-List\u201d></ul> to fill out the UI of the app. With this final step, you just completed the tutorial! Below is the complete HTML and CSS:\"\n. One last thing - I'd mention \"Go here to download the latest .zip of Fabric (the first zip \"office-ui-fabrc-[version].zip\")...\"\n. I think just the \"index.html\" should be bolded.\n. Also, why should we remove the description if I just updated it?\n. Same thing here with the bolding.\n. This should be a part of the code block styling...\n. Let's add some punctuation (exclamation point) at the end of this.\n. Probably want to mention that you remove the \"Meeting Notes\" part and you're also including the \"is-unread\" class.\n. I'd do \"Builds and watches everything, but\"\n. Same as above.\n. I'd do \"Builds and watches\" and \"...files are in the pipe. This will be helpful...\"\nI think you've got a spare apostrophe in your get in \"on get's picked up\"\n. I would change to: \"Shows the user's current location in a hierarchy and provides a means of navigating up or down.\"\n. With the change, I'd probably move to \"to\" instead of \"into our app.\"\n. I would probably call it a \"product tour.\"\n. Would we want to make a comment about how this differs from a toggle?\n. Generally speaking, these sub sections are about the component's dependencies on other components, not on, say, jQuery?\n. This section is worded differently than the others. I would recommend calling out its use of pickadate.\n. I would include: \"It is primarily used for confirmation tasks, light-weight creation/edit tasks, and simple management tasks.\"\n. Not sure the comma is needed.\n. Not sure about this comma either.\nIs it worthwhile to mention where the label typically goes (all of them)?\nThis would be:\n- Choice fields (checkbox, radio button)\n- Textfield\n- Dropdown\n- People Picker\n- Toggle\n. Ah, I get that you're commenting on the list and not the nuances of the individual list items.\n. It might be worth noting, possibly in the associated variants, the history of the ListItem begin tied to email/OWA.\n. It may be worth mentioning that this component, specifically, is not particularly well suited for touch (almost all other components are, but this is an exception).\n. It might be worth mentioning that these can be errors, updates, or alerts (just to help explain what types of messages can go here).\n. Typo: \"within\"\nI would also add the note about the collapsing of the nav to a hamburger menu on smaller screens (just to be explicit).\n. I would consider:\n\"Displays multiple Persona components in groups with headers in order to show the hierarchy of an organization or team.\"\n. Should this just be Persona?\n. I would add - \"Partially obscures the page to create a modal experience and focus the user's attention.\"\n. Panels are interesting in how they compare to other potentially viable containers such as Dialogs or Panes. I'd be a bit more verbose/explicit:\n\"Containers used in experiences that do not require explicit context for heavy-weight creation/edit/management tasks such as settings, multi-field forms, and permissions. For containers used for complex tasks that requires context, use a separate Pane alongside the existing experience such as a List/Details layout.\"\n. I believe it also utilizes the Spinner for its searching/loading state, but I may be mistaken.\n. We should be moving to the Initials, but it may be worth noting the fallback behavior when a user's image is unavailable.\n. I would be a bit more verbose here to help explain usage:\n\"The visualization of details of an individual including Skype contact details, email, location information, and location within the hierarchy of an organization. Within Office 365, PersonaCards often appear when a user hovers, taps, or clicks on a Persona.\"\n. I believe it also uses the OrgChart.\n. This should say something more along the lines of:\n\"A layout component that allows a user to switch between different sets of content or filters on the content currently visible. This is in contrast to a purely navigational UI element such as NavBar or a commanding element such as CommandBar. An example would be Read vs. Unread items in the Outlook Web App.\"\n. Why would someone use Tabs over the purely typographic Pivots?\n. I would also say that this is the \"determinate\" progress indicator (in contrast to the Spinner being indeterminate).\n. Same as the ProgressIndicator on the usage of the term indeterminate.\n. It may be worth mentioning that, although this component is responsive to an extent, it is not completely responsive (e.g. collapsing columns into single items for maximum readability).\n. It might be worthwhile to mention where/why this would be used.\n. I would mention that this is best suited for simple, singular configuration (e.g. application level settings) whereas the checkbox is better suited when there is a longer list of individual choices or in a form (e.g. signing up for different newsletters during registration for an event).\n. OK - I'd say we go on ahead and pull this in but flag it is an issue for Design to loop back on and provide us with the documentation.\n. Did we want to call it a \"tail\" or a \"beak\"?\n. Same - tail/beak\n. why?\n. Good catch, fixed.\nFrom: Phil Worthington [mailto:notifications@github.com]\nSent: Monday, July 25, 2016 12:34 PM\nTo: OfficeDev/office-ui-fabric office-ui-fabric@noreply.github.com\nCc: Eric Thompson boot@microsoft.com; Author author@noreply.github.com\nSubject: Re: [OfficeDev/office-ui-fabric] Updates CONTRIBUTING.md with proper labels (#741)\nIn ghdocs/CONTRIBUTING.mdhttps://github.com/OfficeDev/office-ui-fabric/pull/741#discussion_r72129155:\n\n-- browser - Issues that pertain to a specific browser. Screenshots and details are much appreciated!\n-- docs - Issues pertaining to our documentation.\n-- feature - Issues requesting a new feature to be added or extended from an existing feature.\n-- gulp - Issues related to our gulp build process.\n-- js - Issues that result from the example JavaScript referenced or included.\n-- meta - issues with the overall project or the Github repository.\n-- components - Issues specific to our CSS components.\n-- grid - Issues pertaining to the responsive grid.\n-- type - Issues pertaining to our typography and related classes.\n-- icons - Issues pertaining to our iconography and icon related classes.\n- - accessibility - Issues or PRs that pertain to keyboard support, high contrast mode, screen reader support, etc.\n- - bug - Issues or PRs that address unexpected behavior or broken components.\n- - build-system - Issues and PRs related to the build process.\n- - documentation - Issues and PRs that pertain to the documentation included with the repository.\n- - enhancement - Issues or PRs that address potential improvements to components.\n- - feature-request - Issues or PRs that address ask for or add a major piece of functionality.\n\n\"...address, ask for, or add...\" \ud83d\udc6e\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/OfficeDev/office-ui-fabric/pull/741/files/d3501ec1fd2f64bc305c59a224042784781d2da4#r72129155, or mute the threadhttps://github.com/notifications/unsubscribe-auth/ABWuNnSStXv0gxeqFwZVtGPTgufKPlYSks5qZQ-rgaJpZM4JTtgJ.\n. Fixed!\n. I'm fine with this - fixed.\n. I went through and lowercased all of the references to the sections. I'm willing to go either way, but I was just trying to make them consistent. Let me know if you feel strongly one way or the other.\n. ",
    "SharePointOscar": "Oh nice now we're really up to par with Bootstrap, since it has AngularJS directives as well.\nStoked, can't wait to integrate them into my boilerplate MEANS open source project http://github.com/SharePointOscar/MEANS\nSent from my 6S\nOn Jan 8, 2016, at 11:43 AM, Andrew Connell notifications@github.com<mailto:notifications@github.com> wrote:\nReason I ask - next week we will have our first release of the Angular Directives for Office UI Fabric and our demos reference the CDN links... we'd love to point to the latest stuff...\n\nReply to this email directly or view it on GitHubhttps://github.com/OfficeDev/Office-UI-Fabric/issues/56#issuecomment-170104046.\n. Yummy!  Time to start integrating them into my MEANS boilerplate project!  Thanks for the heads up AC!\nFrom: Andrew Connell\nReply-To: OfficeDev/Office-UI-Fabric\nDate: Friday, January 15, 2016 at 10:39 AM\nTo: OfficeDev/Office-UI-Fabric\nCc: Oscar Medina\nSubject: Re: [Office-UI-Fabric] Transform styles LESS to SASS (#56)\n@SharePointOscarhttps://github.com/SharePointOscar just FYI... we shipped the first drop of http://ngofficeuifabric.com, Angular directives for Office UI Fabric\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/OfficeDev/Office-UI-Fabric/issues/56#issuecomment-172046676.\n. I see that the office dev site actually has the carousel component, guess the version on Bower is just not the latest....\nThank you\n\nFrom: Eric Thompson notifications@github.com\nSent: Wednesday, November 25, 2015 8:12:57 AM\nTo: OfficeDev/Office-UI-Fabric\nSubject: Re: [Office-UI-Fabric] Panel animation ie9 (#219)\nThanks for finding this one - looking into it!\n\nReply to this email directly or view it on GitHubhttps://github.com/OfficeDev/Office-UI-Fabric/issues/219#issuecomment-159658319.\n. Awesome thanks Eric!  At one point I'll start contributing on the repo as well.\nCheers,\nOscar\n\nFrom: Eric Thompson notifications@github.com\nSent: Wednesday, November 25, 2015 8:14:43 AM\nTo: OfficeDev/Office-UI-Fabric\nCc: Oscar Medina\nSubject: Re: [Office-UI-Fabric] Carousel Component? (#220)\nSoon... very soon... I'll leave this open until we've got it in so you'll be aware!\n\nReply to this email directly or view it on GitHubhttps://github.com/OfficeDev/Office-UI-Fabric/issues/220#issuecomment-159658968.\n. I am using v 2.6.1 and still can't seem to set the dropdown item selected property, any workarounds if this is still not supported for this component?  Thank you Gents!\n. ",
    "mikewheaton": "Replacing LESS with Sass is underway, see pull request #279. We plan to have LESS completely removed when we release Fabric 2.0.\n. Finished in #303!\n. We understand that this isn't a welcome change for everyone. We've communicated that it's coming (in this issue, our prior release notes, and in our roadmap) but we know it will be a surprise to some.\nFor us it's not a question of the features of LESS vs Sass or the wider popularity or trendiness of either one \u2013 what we've heard from our users, both inside and outside of Microsoft, is that Sass is preferred. We considered supporting both but this would burden our development process and keep us from fixing bugs and developing features. As a small team we have to be careful about where we spend our time. Thanks for your understanding.\n. Issue #110 covers needing JS to demonstrate opening and closing a Dialog.\n. Looks like this issue has been fixed.\n. @sidnc86: Based on the class names, it looks like you're using an older version of Fabric with the previous icon set. What you see documented on the icons page of the website is the MDL2 icon set. You can tell these icons by the UppercaseNames.\nWhich version of Fabric are you using?. Fabric 2.6.0 uses the previous \"O365 Icons\" set. You can find a list of all the icons in _Fabric.Icons.scss from the 2.6.2 branch. Hope that helps!. Any updates on this, @LezaMax? I'm wondering if the App Launcher is used widely enough to be a Fabric component.\n. I've added this to our roadmap as a potential component, as we have no plans to build it at this time.\n. I'm not sure what would be involved here or who could do the work. Let's discuss.\n. This doesn't seem to be style-related (the JavaScript provided is for a quick demonstration and does not implement all of the functionality an app will need) so I will close the issue for now. @natarajnattu, if you're still dealing with this issue please provide some more details.\n. This seems to be fixed as of Fabric 1.2.1. See the attempted repro of this issue.\n. Let's get a link to this project in the community section of our Resources and FAQ page. We can then close this issue, as it's being worked on in a separate repository and is not actionable here.\n. I've created a pull request to our internal documentation repo with a link to this project. You should see it on our resources page soon. Closing this issue as the work is tracked elsewhere.\n. This issue is still present in Fabric 1.2.1 (see the repro). On small screens there is no search text or icon, and once the search area is clicked it expands to fill the Command Bar but cannot be closed without first entering text.\n. Yup, the search icon is missing (I haven't seen the designs but it seems there should be one...) across all screen sizes.\n. Now I see why you mentioned it @battletoilet, I didn't realize the icon was working correctly on our Command Bar demo page (see below). I'll look into why my repro isn't loading the icon.\n\n. Fixed by PR #615. The search field now closes on all screen sizes.\n. It looks like @battletoilet must have fixed this in a previous release. Here is a demonstration where it doesn't repro \u2013 watch the \"Junk\" button and notice that it doesn't disappear as you shrink the window down.\n. The Dialog has an overlay, but we don't provide sample JavaScript to show how the dialog can be opened and dismissed. This should be added so that we can help developers use it, and to document the animations.\n. Turns out there is a demonstration of this (screenshot below) in the samples that are distributed with Fabric. If you download Fabric you'll find it under dist/samples/Components/Dialog/index.html.\nCan we get these examples working on the dialog page of our main documentation site?\n\n. This should be fixed when we update the documentation site to pull the latest components from Fabric. Leaving this issue open to ensure it gets fixed.\n. It's working on the docs site now: http://dev.office.com/fabric/components/dialog\nYou can click the JS tab to see the Javascript in use to open and close the dialog.\n. I'm not familiar with the details, but it seems we're unable to include the product logos (Word, Excel, Office, etc.) in an open source release. See Peter's comment in #79.\n. I've added these icon requests to our roadmap. If you need other icons please open a new issue and we'll get them added to the list.\n. We'll have to discuss this to determine how much work is involved, and if this is useful to enough consumers of Fabric to justify the investment.\n. When we move to TypeScript (see the roadmap) we can set it to compile to AMD compliant.\n. I've added this request to our roadmap as a possible future improvement.\n. This is now on our roadmap. We'll be replacing the jQuery plugins with TypeScript for each component.\n. Do we have a design for this that's ready to be implemented, or is it a future request?\n. We don't have any designs for this or plans to build it in the near future, so I've added it to our roadmap.\n. We're working on an accordion for use within a panel. It's not yet clear when this will be made available as a Fabric component.\n. We've assigned this to a designer.\n. This issue was moved to OfficeDev/office-ui-fabric-js#30\n. We'll need some design review before adding this to Fabric.\n. To start with, we're going to add a style for the header of a column that is sorted. We're working with design now to make sure we have this right. In future updates we may add JavaScript support for sorting columns.\n. The functionality of sorting rows is not yet in Fabric, and is not planned for inclusion in the upcoming 3.0 release. However, we are going to release TypeScript for table component (to allow for selection of rows) and this could be extended to add sorting. As Eric mentioned above, we just need to get official designs for how sortable tables should look before adding it to Fabric.\n. We're finally going to start hosting all of the JS on the CDN, so that functional components can be added to an app without any downloading or local building of the project. \ud83d\ude04 \n. Well, it can't get any worse. We're working with the CDN team on a new process that should allow us to push through a new version in 1 to 2 weeks. Stay tuned.\n. @johnnyongesa: Please open a new issue next time, so we can keep each issue on topic. \ud83d\ude04  Here is a quick demo of overriding the max-width value of ms-Dialog-main to change the width of the dialog.\n. @johnnyongesa: I've opened a new issue for this and posted a more detailed response there.\n. There are no plans to update the current Table component with sortable columns. We will, however, be adding a new details list component that will include this functionality. This is now included in our roadmap.\n. @wdo3650 is working on a feature like this in product, but the design doesn't match our standard textbox or dropdown. This will need design. Closing for now and adding to our roadmap to track as an upcoming feature that's not in active development.\n. I found some design patterns for this that we may be able to build from, but they are old so a review from our current designers first would be helpful.\n. I've added this to our backlog as something we plan to release in a future version of Fabric. Thank you for your patience here.\n. We don't have designs or a need for this in product at this time, so I've added it to our roadmap as a potential feature for later.\n. This is a potentially useful feature, but not something we have a need for or the resources to pursue at this time. I've added it to our roadmap. We're always open to pull requests, so if you do build this feature please let us know and we may be able to get it into Fabric.\n. This is a good suggestion, but not something we have designs for or an immediate need for. I've added it to our roadmap so that we can track it as a potential feature.\n. At what point we should go from three columns to one column (or maybe even two columns first?) will largely depend on the specific app that's displaying in the list. The current behavior might be acceptable in some cases but not others.\nFor reference, here's what our example list looks like with about 630px of width:\n\nWe do offer the standard non-responsive list, which always has a single column. But we may want to consider additional variants that specify the number of columns for various breakpoints.\n@waldekmastykarz: For the time being, the best option is to use a standard ms-List (don't add the ms-List--grid class) and then create an override class with behaviors specific to your app. It would look something like this:\n```\n@media (min-width: 850px) {\n  .ms-List.ms-List--myCustomClassName .ms-ListItem {\n    width: 50%;\n    float: left;\n    border-width: 0 1px 1px 0;\n  }\n// Remove the border from the last column.\n  .ms-ListItem:nth-child(2n) {\n    border-width: 0 0 1px 0;\n  }\n}\n@media (min-width: 1050px) {\n  .ms-List.ms-List--myCustomClassName .ms-ListItem {\n    width: 33.33333333333333%;\n    float: left;\n    border-width: 0 1px 1px 0;\n  }\n// Remove the border from the last column.\n  .ms-ListItem:nth-child(3n) {\n    border-width: 0 0 1px 0;\n  }\n}\n```\n. Closing this for now. If we receive more requests for different responsive behaviors we can investigate changing the design.\n. I've added this to our roadmap, as we definitely plan to get the Card component added in the near future.\n. @anhldbk: This repository no longer contains components, but we do have a DocumentCard in Fabric React that may suit your needs. If not, please open an issue on Fabric React with details on what you're looking for in a Card component. Thanks!. We've confirmed with the design team that the current ListItem was not designed to be touch friendly. There are plans to create some generic list item templates, one of which might include action(s) with touch-friendly sizes. This has been added to our backlog.\n. Leaving this open for now, as it seems like a good function to have in our sample JavaScript, and something that may be easier to add as we change those samples to TypeScript.\n. @oising, could you submit a pull request with your changes? Thanks!\n. We've had some lengthy discussions lately about Fabric's JavaScript. We want to provide useful functionality, while being careful not to slip into making it a full-fledged framework like Angular or React, as we're not resourced to support that level of functionality. Projects like ngOfficeUIFabric are the place for that. \ud83d\ude04 \nThe direction we're heading for the time being is to draw a line between 'helper' functionality and 'data-driven' functionality, and this request is a good example of something that enters into the data-driven arena. Basically the data for the application is expected to be in HTML, and the Fabric JS handles the state of the component.\nIf you provide Fabric with a select element and call .Dropdown() on that element, we'll generate a component with basic functionality to match the native control. But when you need to add/remove/update the options in the component, we ask that you update the underlying select and again call .Dropdown() to re-instantiate it. We're certainly open to pull requests that add public functions like addOption(), but it's not something we'll be focusing on at this time.\n. It looks like this was taken care of by pull request #186, which allows you to pass an object to DatePicker() with configuration options.\n. We'll run this by our designers to see what we can provide for a smaller ListItem component.\n. While there is no schedule for this, I've added it to our roadmap as we know that list items are important to many scenarios. We want to provide generic list items that are easier to customize.\n. Our table component was originally built for use in a scenario where the layout had to change completely on smaller screen sizes. This resulted in the use of divs rather than a standard table element.\nWe should revisit this decision, as using table would simplify the HTML and allow it to behave as you'd expect -- such as by respecting the colspan and rowspan attributes.\n. Over in #276, @StfBauer demonstrates that our current classes can be used with a standard table structure.\n@cbarnes01: You should be able to replace the divs in your current implementation with table, td, tr, etc. and then use the colspan attribute to get the result you're looking for.\nI'll leave this issue open so that we can continue to discuss whether our recommended markup should be a table, and the larger issue of if/how we should make it responsive.\n. Excellent blog post, @StfBauer! We'll be using it as a reference as we update the reference HTML and consider responsive behaviors.\n. Okay, we're going to go ahead and change the markup from divs to a table element. I've opened a new issue to get design input on making tables responsive.\n. After discussing with the team, we've decided that modifying the date picker in this way is best addressed by individual users rather than rolled into Fabric.\n. This would be a useful component, but it's not something we have a need for in product at this time and therefore can't make it a priority. I've added it to our roadmap as a potential future component. If you do build it, @kennywangjin, we'd be interested to see your implementation.\n. Looks like this has been fixed by @wdo3650.\n. The goal here is to have both the LTR and RTL styles loaded on the same page without conflicting, right? I'm thinking we'd just nest all of the RTL styles within a selector like *[dir=\"rtl\"] so that they would only apply to RTL pages or regions. Hopefully that extra selector would add enough specificity to override the LTR styles. This would bloat the RTL files so I'd be hesitant to add it unless this is a common problem.\n@Steve887: If you're still working on this, could you try the suggestion above and let us know how it goes?\n. I've added this to our roadmap as something we might pursue in the future if we see interest from more people.\n. We're dropping support for IE9, and the latest build from the master branch is now working in IE10. \n. Closing this issue as we're now dropping support for IE9.\n. Was it @philworthington who worked on a Carousel component? How much work is involved in getting into Fabric as a component?\n. @gunjandatta: Are you using Fabric React? I can add a component request to our Trello board.. Added here: https://trello.com/c/lfvOTWeE/16-carousel. It's probably best to open an issue in the Fabric React repo for this feature request.. You mean a select element with the multiple attribute (example), right? I don't believe this is part of our design language. Could you provide more details on what you're trying to achieve?\n. We like to ask about the scenario in case there's an alternate component that might come recommended by our designers. A checkbox list is usually preferable to a multiple select (touch friendly, no keyboard needed, etc.) but in your case that would make for a funky interface. The multiple select seems reasonable.\nI'll dig around in our pattern library and see if anything like this has been designed before, and ask @ericthompson where we can place this in our backlog.\n. We discussed this with design today and there are no plans to create a <select multiple='multiple'> component. There are concerns around touch friendliness and accessibility, and it's not a pattern we have in product.\n. For the core Fabric project we're moving away from jQuery, as it's not necessary to demonstrate the basic functionality of the components. We'll be making the switch to TypeScript instead, and have noted this in our roadmap. Of course, our focus remains on the HTML and CSS and developers are free to interact with Fabric components using whatever framework they prefer.\n. That's a good question, @andrewconnell. Eventually we want to have everything in TypeScript with no external dependencies, but the date picker is clearly going to be a lot more complex than any other component. There's a good chance that it will rely on jQuery and Pickadate for a while.\n. This is an option we could consider if there's enough demand. Right now most requests are for React and Angular components, and there are some open source projects started: ng-OfficeUIFabric and react-fabric. If you've been implementing Fabric components in Polymer we'd love to take a look.\n. I've added this to our roadmap as a potential feature.\n. Wow, nice work @gautamsi! We'll call out your project on our documentation site in an update soon.\n. @StfBauer: Where are you seeing legacy fallbacks in the LESS files? Those should all be handled by autoprefixer.\n. Thanks for the suggestion, I've added this to the Fabric roadmap as a feature we could consider in the future if time permits.\n. While we have no immediate plans to add this to Fabric, I've added it to our roadmap so that we don't lose track of your request. If you build a tree view using Fabric classes we'd love to see your code.\n. Sorry about that, I linked to the Fabric Core board rather than the one for Fabric JS. Here is a link directly to the card: https://trello.com/c/hpLEICo1. Are you still having trouble with the CDN, @elegault?\n. Okay, I'll close this issue for now, as we discuss CDN changes elsewhere and have another one open to troubleshoot your issue.\n. Looking good, ready to merge.\n. Any chance of breaking this up into multiple pull requests? It's a lot to review.\n. .ms-Dropdown-select targets the actual <select> element, which is hidden and replaced with a JavaScript-generated dropdown. This allows us to style it correctly. The JavaScript should be hiding the original element and generating an HTML dropdown.\n. Well this is embarrassing. It turns out that the code sample on our documentation site is showing the HTML after it has been modified by JavaScript. So the code we provided doesn't work. Please see this CodePen for a working sample. Let me know if you have any trouble and I'll get right back to you.\n. Changing this issue from a bug to a documentation issue.\n. You're right, it looks like you do have the correct markup there. Looking more closely at DropdownTest.js, I think the issue may be that you're selecting .ms-DropDown with a capital D rather than .ms-Dropdown. Could you give that a try?\n. In DropdownTest.js I'm still seeing DropDown:\n\n. Happy to help \u2013 wish I'd spotted it sooner for you. You're not the first to make a typo and you certainly won't be the last. :smile: \n. The changes in this pull request look good to me. It is difficult to test localized fonts, so we may want to look into ways to do that.\n. Looks good to me too. Ready to merge.\n. This is fixed in 1.2.1. Unfortunately the CDN is still out of date, so you'll have to download a copy for the latest version.\n. Thanks for reporting this; that's definitely not expected behavior. I've created a repro of the issue and am working on a solution.\n. Before opening any menu, I've added a command to close any neighboring menus. Please see the demonstration of the fix. The logic of opening/closing menus within the NavBar could use some refactoring, but this fixes the immediate issue.\nI'll create a branch and pull request to get this fix into the next version of Fabric.\n. Hi @tomaon, just checking in to see if you can provide us with some details on this pull request. What problem are you solving here?\n. Turns out the process for checking in new code to the CDN takes weeks, so the CDN will always be behind if we release regularly. Can we speed up that process, or set up our own on Azure CDN or MaxCDN?\n. Also, we should make it clear in the documentation that the CDN version is out of date. Otherwise our example code may not work as expected.\n. CDNJS looks like a very interesting option, and thanks for the offer to assist in getting it set up. We'll discuss our CDN options and leave this issue open until we have a decision.\n. I created a base pen that can be forked to demonstrate Fabric features or attempt to reproduce bugs. We can give this a try and see if it's helpful.\n. Perfect, thanks @chriscoyier!\n. Closing this for now. We may investigate it more in the future, but want to focus on other updates like better component documentation for now.\n. Thanks for reaching out, @TheTedAdams. The .ms-font-[size] classes are intended as base font classes, and they intentionally set the size, weight, and color. You can apply these classes to a single text element, or on a container for inheritance down to all of the text inside.\nTo change the size of a specific element (independent of color and weight) we provide ms-fontSize-[size] classes. You may not have known about these because they're missing from our styles documentation page. Sorry about that. With classes for size, color, and weight it's possible to apply all of the text properties without ever using a base class.\nNow that you know about these classes (e.g. ms-fontSize-xl) do they fit your needs? Here's an example of how you could combine the base classes and a size override:\n<div class=\"ms-font-m\">\n  <p>This paragraph will inherit the medium font size set by the base class.</p>\n  <p>And so will this paragraph.</p>\n  <p class=\"ms-font-xl\">This paragraph has a size class that makes it larger.</p>\n</div>\nDemonstration on CodePen\n. Leaving this issue open so that we can get the .ms-fontSize-[size] classes documented.\n. My mistake, we should definitely keep this issue open until we've documented the size classes.\n. Created a pull request on our internal documentation repo that documents the .ms-fontSize-[size] classes.\nWhile we understand that some users of Fabric (like @TheTedAdams) would prefer that the base classes not include color, this is an important part of the design language and something that we want to keep in place. The documentation updates will make this clear to prevent confusion.\n. This is related to #192, where the suggested fix is to replace the div based table with an actual table element. We'll need to review our design language and current products to determine the best behavior(s) for adapting to smaller screens.\nIn the meantime, it's great to know that our existing classes can be applied to a standard table!\n. Closing this issue. We'll use #192 to discuss a change from div to standard table elements in our recommended HTML.\n. Removed. There were also \"space\", \"thumbsUp\", and \"thumbsDown\" icons that are no longer in Fabric. Didn't we used to generate this page with JavaScript and the JSON file generated by Fontello? That would make it a lot easier to maintain. Right now we have 339 icon classes, and only 338 icons on the sample page. It would take ages to figure out what's missing...\n. Want to make a branch for everything MDL2 related and move these classes there for now? Right now the classes are in master, but I don't think we'll want them included in the next release.\n. We hear your pain on occasionally typing the CSS classes wrong and not having them applied. Still, camel casing improves the readability of classes (e.g. caretDownRight vs caretdownright). Dashes would typically be another option (e.g. caret-down-right) but our use of SuitCSS conventions rules that out, as dashes are meaningful for separating components, descendants, and modifiers.\n. I'm afraid we have enough teams using the current class names that it'd be a hard sell to change things now. But we definitely hear your feedback and will keep this in mind for future major releases of Fabric (where we occasionally release breaking features), especially if we hear similar concerns from others. Thanks for your understanding and keep the suggestions coming.\n. I'm having trouble getting the build system to use Sass rather than LESS. I've run gulp ConfigureEnvironment-setSassMode, which looks like it should be all that's necessary to switch the build system over to Sass. I then made changes to some components' Sass files, but running gulp gives me the same output in fabric.components.css. What am I missing?\n. I did a comparison of the dist/ output from 'master' and this branch. There are some differences (mostly in source order and things like changing border: 0 to border: none but I don't see any major regressions. Should be fine to merge in once we fix the SearchBox regression @wdo3650 noticed.\n. Thanks for this pull request, @estruyf, but we actually do already have offset classes for the grid. They are 'push' and 'pull' classes and are available for all screen sizes. For example, ms-u-mdPush12 and ms-u-lgPull3. Do these meet your needs, or am I understanding this wrong?\n. Thanks for the new CodePen, @estruyf \u2013 that makes it much clearer how offset differs from our current push/pull. It looks like both Foundation and Bootstrap provide these offset classes (increasing the left margin) in addition to push/pull for column ordering. I can see the value here, we'll just have to discuss as a team before merging the pull request.\n. Looks good, thanks for contributing this!\n. Looks good, should be fine to merge.\n. Interesting. In our reference ContextualMenu we only use the headers on multi-select (`ms-ContextualMenu--multiselect') menus. We have no examples in our design documentation of a standard contextual menu using the headers, so it looks like we neglected to test this.\nI'll get this fix into Fabric for the next release. In the meantime you can apply a CSS override to pull the header back into alignment:\n/* Temporary override to pull header into alignment. Remove after updating Fabric. */\n.ms-ContextualMenu-item--header {\n  padding-left: 18px;\n}\n. I've created pull request #285 for this. Once it's been approved and merged in we can close this bug.\n. This is something our team will have to discuss (I've added a label here so we don't forget it) and see if/when it fits into our road map. I'll leave this issue open and comment back when we have an update. Thanks for the suggestion!\n. We discussed this and while it's something we'd like to provide in the future, at this point we're not seeing enough common patterns to provide layouts. I've created a Fabric roadmap document where we will track potential features and improvements like this.\n. Also made the change in @battletoilet's 'less-sass-components' branch to be sure we don't lose this fix when that branch is merged in.\n. I like it!\n. It looks like the version of our JS files (and Fabric in its entirety) is currently out of date on the Fabric docs site. We'll get this fixed right away.\nIn the meantime, you can view working demos by downloading a copy of Fabric and viewing samples/Components/[component-name]/index.html.\n. Closing this as the original issue is fixed. We have another issue opened to fix the CommandBar.\n. Awesome catch, Sergei, and thanks for demonstrating the issue and solution. Please go ahead with a pull request and we'll get this fix reviewed and merged in ASAP.\n. The shifting text caused by those font-weight changes isn't ideal. The best solution I'm aware of is to create a hidden pseudo element that makes room for the heavier text (see this example JSfiddle) but that requires a change to the HTML markup.\nLet's leave this open to see if anyone has alternative ideas for improving this.\n. There are some design updates coming, so we're going to ask the designers if we'll still be changing the font-weight. If so, we can discuss the best technical solution to fix this.\n. Verified with design that the font weights should be changing to indicate the active state for accessibility. We need to update the large pivot to change its font weight the same as the small one does. Our designs also call for these to have underlines, which we need to add.\n. Looks good to me. We just need one more reviewer from our team to take a look and we can merge it in. Thank you!\n. Looks good. This change makes sense as the ellipses should open an overflow menu, and the active pivot would only change after a selection in that menu.\n. Pull request made to our internal documentation repo. Closing this issue.\n. For reference, here is Bootstrap's responsive table. On small screens they set a max-width and then scroll horizontally.\n\nAnother way to adapt tables to small screens is to turn each row into a section, like the TableSaw Stack Table that @ericthompson pointed out.\nThe discussion on our markup being too heavy is related to #192. We're going to be suggesting the use of standard table elements (including th, tr, td, etc.) rather than divs as we do now, which will mean that classes like ms-Table-row are no longer necessary. This will give us the same amount of markup as Bootstrap: just a standard table structure with a single ms-Table class.\n. We have some designers looking at how to handle tables on small screens, and will update Fabric based on their recommendations.\n. While we don't have plans to make the Table component responsive, this will be a requirement for a new details list component that will be added in a future release. It's now included on our roadmap.\n. We'll have to give this a quick test (particularly to make sure the toggle doesn't work when it's disabled) but this looks like a good feature to add. Thanks!\n. Unfortunately our switch from LESS to Sass means that we can't merge this pull request. I've created issue #315 to make sure this gets done. Thanks!\n. Looks good to me. One more reviewer and we can merge it in.\n. Removing this as a duplicate, we already have #56.\n. We discussed this today and while we like the idea of using SUSY to generate the grid, we don't see enough demand to justify making the change at this time. I'll close the issue for now, but if @StfBauer or anyone else wants to submit a pull request we'd be happy to review it. We just have to be sure that the output CSS doesn't change for our default 12-column grid.\n. Hi @tomaon, could you briefly describe the issue this pull request solves? We appreciate your contributions but can't merge them unless we understand the issues you are fixing.\n. Thanks, that definitely looks like a bug and I don't see any issue with hiding .ms-Persona-imageArea entirely. One more review and we can merge this in.\n. Me too as well also.\n. Looks like there are some JS issues on the component sample page. Showed it to @philworthington and he's going to work on a fix.\n. Looks good! Can we get one more reviewer to take a look?\n. Thanks for finding this! I think it's safe to merge this one in without a second reviewer.\n. @waldekmastykarz: I've opened an issue for the Safari bug so that we can investigate it (could you elaborate there on what's happening?) and have added the need for additional samples to our roadmap.\n. @pschaeflein: Nice! Would you mind messaging us once that PR has been approved and the sample is published? We'll include a link to it from our website.\n. Thanks for reporting this, we'll look into a fix. For now, here is repro of the issue.\n. Working on fixing the build now...\n. Can you point us to where you're seeing this markup? On the documentation page for the List we're not using ul or li, but just simple divs.\n. Thanks for pointing this out, @jbarr33, we'll get those updated to use divs rather than uls.\n. Good point @StfBauer, we should be using ul and li for our provided list HTML to reduce confusion. The classes should still work on a list made of divs, so developers are free to use whatever structure they prefer.\n. Fixed by #331 \n. This should be fixed once the documentation site has been updated with the latest component templates from Fabric 2.0.1. Leaving it open until we can verify the fix.\n. Confirmed, this positioning issue is now fixed in the latest release:\n\n. Proposed fixes.\n. This has been assigned to a designer for review.\n. We'll be addressing this issue in the next major release of Fabric, which will include an updated design language.\n. This issue was moved to OfficeDev/office-ui-fabric-js#31\n. Looks good. One more reviewer and we can merge it in.\n. Looks good! Let's merge this in.\n. Fixed by PR #615. The design has been updated so that search takes over the entire CommandBar or NavBar on screens under 1024px, covering all of the items.\n. Thanks for this! Just one small request. Could you remove the first dropdown from Dropdown.html so that there is only the one with a label? We should always be showing these with labels.\n. Looks good, thanks! We need one more reviewer to take a look and then we can merge it in.\n. I've flagged this as \"needs-design\" so that we can ask the designers for guidance. The two components are very similar, so we should be more clear in our documentation when to use each, and maybe change the example content to make this more clear.\n. Confirmed with design: these are two distinct components but we need to improve our documentation so that the reasons for each are clear. We'll update the samples so that CommandBar clearly just has commands in it, and NavBar is for navigation.\n. Apologies for the lack of updates here. In Fabric 3.0 we've decided to remove the NavBar entirely, and have the CommandBar support both typical command buttons and navigation-styled buttons. See these examples:\n\n. Looks good, go ahead and merge.\n. Flagging this for design review, as I don't think we have styles for a required toggle. Is it just a change in the label style?\n. There is no required state for a Toggle, which makes sense since it is always on or off with no unspecified or empty state. Where a 'yes' choice is mandatory we recommend using a check box.\n. When the vertical scrollbar is necessary, we should be using JS to add extra padding to the right side to make room for this scrollbar. That extra space should also remove the horizontal scrollbar, which should never show.\n. This issue was moved to OfficeDev/office-ui-fabric-js#32\n. Looking good!\n. Fixed by PR #615. Commands are no longer cut off in the CommandBar, even within a small panel.\n. The problem with removing height is that the content area below it is absolutely positioned, so that when scrolling a panel with a lot of content the command bar and header text stay in place. So we'd have to use JS to set a top position for that content, or have the header scroll out of view.\n. Fixed by PR #615. \n\n. Our dropdown's JavaScript should absolutely support reading of the selected attribute from the underlying option elements. We're working on new JavaScript for each component (see our roadmap) and we'll include this feature with the dropdown.\n. This issue was moved to OfficeDev/office-ui-fabric-js#33\n. .ms-Panel-commands and .ms-Panel-contentInner are set to display: none; in the \"small, left-aligned, fixed\" and \"small, light dismiss, fixed\" panels, so no content is visible.\n. Sounds good, approved!\n. That's odd, our release includes the dist folder and this should be what is published to NPM. Any ideas here, @Jahnp?\n. Thanks for bringing this to our attention, @jjczopek. I made a mistake when publishing the NPM package so we're going to have to publish a new version. Stay tuned.\n. Okay, we've published version 2.0.1 as an NPM package. Please re-open this issue if you have any trouble.\n. Looks good. Since we have to re-publish to NPM anyway, let's include this in 2.0.1.\n. Thanks for catching this, @andrewconnell. Looks like we fixed the issue in our LESS file, but that fix wasn't copied over to the Sass while we still had both.\n. Thanks for submitting this PR, @SteenMolberg. We just need to check in with our design team and have a quick discussion about whether the Persona should be interactive, or if it's just a display template to be used within other controls.\n. @SteenMolberg: Could you send us a screenshot of the OrgChart with a person selected? We just want to see what this looks like in context.\n. We've discussed this with the design team and they agree that Persona should have a selected state. We just need to review the official designs to be sure this is in line before we can merge it.\n. Apologies for the delays here, @SteenMolberg. I've added a couple comments \u2013 could you address these and add a new commit to your pull request?\n. Adding the needs design flag here so that we can verify the selected state.\n. I've opened a new issue to request official designs for these states. We appreciate this PR but it seems to have been abandoned, and with the recent changes for Fabric 3.0 coming in it no longer merges without conflicts.\n. Thanks for pointing this out, @jjczopek, we'll get it fixed for the next release.\n. Fixed by #352 \n. I reviewed the redlines and the maximum height should be enough to show 5 items, which is 200px. After that it should overflow with scroll.\n. Fixed by #427.\n. I'm leaning toward adding the border width and style to the color classes. This is similar to the base typography classes, where we set multiple properties based on common usage and then let people override these as necessary. Our designs almost always call for a one pixel solid border.\n. We discussed this today and decided to create a new utility class, .ms-u-borderBase that will be something like this:\n.ms-u-borderBase {\n  border: 1px solid $color-neutralPrimary;\n}\nTo get a colored border, you would then apply both .ms-u-borderBase and .ms-u-borderColor-[color]. this follows the same pattern of a base class with overrides that we use for fonts.\n. Fixed by #524. \ud83d\ude04 \n. Thanks for reporting this, @gavinbarron. It's actually a duplicate of #320 so I'll close it, but please keep submitting bugs as you see them.\n. Looks good!\n. Thanks for reporting this. You're right that it's caused by the .ms-DatePicker-picker--focused class not being applied in the latest version of Pickadate. For this bug we can actually just update our styles to target only the .ms-DatePicker-picker--opened class. I'll submit a pull request for this.\n. To be clear, this will not stop it from working with the version of Pickadate we currently bundle with Fabric.\n. Okay, let's remove the hero variant.\n. Let's work with the designers to get a clear(er) picture of what focus styles should look like across our components. Once we have those principles in place we can go through the components and make updates.\n@atneik: I set up a link focus test page and wasn't able to repro the issue we saw earlier with focus styles not being applied at all while tabbing. So that seems to be an isolated issue with our component sample pages.\n. We discussed this today in our meeting. The next step is to work with the designers to get consistent guidelines around how to show focus states.\n. This issue was moved to OfficeDev/office-ui-fabric-js#34\n. Many of the examples on the docs site are outdated and/or broken. We have issues open on this and are working on getting it updated.\n. I'm not sure this is the place to put the badge, but we should mention Gitter somewhere in our README so I'll leave this PR open.\n. It turns out that Office Dev Center already has a Slack group which is promoted in the header throughout dev.office.com, including on the Fabric docs:\n\nSlack was our first choice before Gitter, and the OfficeDev Slack group is a perfect fit for Fabric. We've created a #fabric channel there. :smile: \n. The emoji come out in full force on Fridays. \ud83e\udd84\n. After some digging it looks like that's a related but different issue, @andrewconnell. Thanks for reporting it. I'll open a new issue here and submit a PR.\n. The icon centers horizontally in Edge, but it sits about a pixel too low in the circle. This is more an issue with the icon font not having vertically centered icons than a bug with this component. Even if we tweaked it for the plus icon, this component should support any icon and we can't get them all aligned.\n. Are you looking at it on our docs site, or http://localhost:2020 with a local build of Fabric running? The docs site is out of date and many of the samples are broken.\n. I'm not familiar enough with this component to know what it's supposed to do, but the overflow menu is opening fine for me. Here's a GIF showing what I see.\n. Spoke with @Jahnp today and got some clarity on this. It turns out that Sass doesn't have an equivalent to LESS's import by reference, which gives one file access to the classes and variables in another without compiling any of the referenced file's CSS.\nSo what we have essentially is a whole bunch of files containing nothing but mixins and variables. For example, _Fabric.Icons.scss has a mixin for every icon:\n@mixin ms-Icon--circleEmpty { content: '\\e000'; } // '\ue000' \n@mixin ms-Icon--circleFill { content: '\\e001'; } // '\ue001' \n@mixin ms-Icon--placeholder { content: '\\e002'; } // '\ue002' \n...\nThese files can be imported into app-specific Sass stylesheets for use without bloating the output. To generate Fabric itself, we then have files like Fabric.Icons.Output.scss which defines a class for every icon and calls the corresponding mixin:\n.ms-Icon--circleEmpty:before { @include ms-Icon--circleEmpty; } \n.ms-Icon--circleFill:before { @include ms-Icon--circleFill; } \n.ms-Icon--placeholder:before { @include ms-Icon--placeholder; }\nWhat's unfortunate about this structure is that any change must be made across at least two files. It's not as maintainable as having a basic list of class definitions that is the single source. It's also confusing, at least to me.\nWe could consider moving all of the variable and mixin files into a subfolder, and then renaming the class files to not contain \"output\", which might suggest these are the result of a build process when they're not.\n. Closing this for now. There's room for improvement here but I'm the only one to complain and it's clearly not going to be a priority. We'll revisit in the future \u2013 hopefully Sass will allow importing by reference then.\n. Chatted with @notandrew about this and he shares my concerns. We're going to open this back up, although we might not get to it anytime soon.\n. We are going to swap the names of \"Orange Light\" and \"Orange Lighter\" so that these are in the correct order.\n. Thanks for reporting this, we'll look into it.\n. Nice, looks like this will fix #328.\n. Looks good to me.\n. Looks good to me.\n. I don't see any need for that \u2013 the icons should sit with whatever text they're contained within, so we should be inheriting line height.\n. We're going to push this change ahead to a future release. It's simple enough, but it could be a breaking change in cases where others have changed styles to accommodate the line height. We have more breaking changes coming to the icons soon and will bundle this change with those.\n. Fixed by #758 \n. This has been assigned to one of our designers. There won't be a single color for focus borders, as we have to ensure there is contrast with the element that's been focused, but we'll likely get this down to a small set of colors with clear guidance on when to use each.\n. Closing this issue, as #339 covers focus styling throughout Fabric.\n. Argh, you're right, this could cause issues in the components if we're relying on line height not being inherited. Let's make sure our reviews look at the components.\nI also opened issue #357 in hopes that we can automate this in the future.\n. As explained in the issue, we're going to wait and make this change in a future release. Closing the pull request for now.\n. This issue was moved to OfficeDev/office-ui-fabric-js#69\n. Well that doesn't look so great. Thanks for reporting this, we'll get it fixed.\n. I'm unable to repro this on the latest pull from 'master', in Safari 9.0.3. Do you recall what steps you took to get it into this error state?\n\n. Is anyone else able to repro this?\n. Let's close this for now, as no one seems to be able to repro it.\n. This issue was moved to OfficeDev/office-ui-fabric-js#35\n. There are no plans to design or build a slider at this time. I've added it to the roadmap as something we hope to provide in the future.\n. Fixed by PR #615.\n\n. Over in #388, @cut2run reported that after manually overriding the padding the first item disappeared from the CommandBar. This may be related to the JS. After fixing this padding, be sure to test that it works correctly with multiple items and at all screen sizes in case there's a more complex bug.\n. Fixed by PR #615. When there's no search box, the items align left as expected:\n\n. I saw you test this with PerfectPixel, and it looks pixel perfect.\n. I think table-layout: fixed applies only to table elements, where it forces the columns to respect the set width rather than stretching to accommodate the content. See this example. So within a table it would stop text from wrapping or overflowing, but I don't think it works inside of a typical div. Or am I missing something?\n. If we're trying to modify the behavior specific to tables, I think we'd want to introduce a modifier like .ms-Table--fixedWidth to specifically apply the table-layout: fixed; property. We'd have to look at common scenarios and make sure we have examples explaining this clearly.\nFor text outside of tables, where we want to prevent wrapping to another line and show ellipses (...) instead, a more general .ms-u-noWrap utility could be created.\nThis way we're clear that one is a table-specific behavior, and the other a general utility that can be used almost anywhere.\n. We discussed this today and decided to create a new utility, .ms-u-textTruncate which can be used to prevent text from wrapping to a second line and show an ellipsis (...) to indicate that the text has been truncated. This issue will now track adding that utility class.\nAs for table layouts, we now have a separate issue to track the work of adding a .ms-Table--fixed modifier.\n. The default table behavior is for the column to expand as wide as it can (without causing another column to wrap) and then for the text to wrap.\nYou want the columns to auto-size (table-layout: auto;) but within a cell, you want to limit it to one line without the ellipses? For that you should be able to use white-space: nowrap; to keep it to a single line, and `overflow:hidden;' so that the excess text is not visible. But how will users know that they're not seeing all of the content?\n. Fixed by #534.\n. Nice!\nWhat do you think about making the classes .ms-Table-head, .ms-Table-row, and ..ms-Table-cell optional when used inside a <table class=\"ms-Table\">? We don't usually want to tie our styles to any one HTML structure, but in this case those are the only elements you'd find in a <table> anyway. Foundation and Bootstrap do something similar and it cuts out a lot of redundant markup.\n. Looks good to me.\n. To reference back, this PR addresses #220.\n. Nice! The pull request notes can be used in our documentation, and once that's ready we should be good to merge.\n. Perfect, I see it now. We can look at getting this documented on the Fabric site as a future item \u2013 for now it's documented along with our current BUILDING.md so I think we can merge it in for inclusion in 2.1.0.\n. Absolutely, we'd love a PR with your suggestions for making this work better. Please submit it when you have a chance and we'll review. Thanks!\n. The tabs and content are now linked with data attributes, so this component is much more flexible than before.\n. Message colors have been added to the documentation site.\n. Updated the changed theme colors for the documentation site.\n. Confirmed. Fabric 2.0.1 (both the CDN copy, direct download, and Bower package) are missing the styles for MessageBanner and ProgressIndicator. They're in the component folders (e.g. components/MessageBanner/MessageBanner.css) but were not built into the main components' CSS file.\nWhen I do a Gulp build locally they're included. Looks like something went wrong with the build before deploying 2.0.1? I don't know why this would happen.\n. Thanks for bringing this up, our component documentation definitely needs some love. We're working on an update to our official website that will include much more detail on where and how to use each of the components.\nI've added this to our roadmap for visibility.\n. One of the top priorities on our roadmap is to rewrite all of the components' scripts in TypeScript (compiled down to regular JavaScript for distribution) that will remove dependencies and provide standard patterns for interacting with components.\n. That's a good point. We'll want to be sure that we don't introduce confusion by using TypeScript. We need our output JavaScript to be production quality, but the TypeScript also serves as a form of documentation for those who are writing components for jQuery, React, Angular, or whatever framework comes out tomorrow. If TypeScript confuses those developers, or prevents them from reusing our functions, we're missing an opportunity.\n. The ContextualMenu that a CommandBar can open has disabled support (.ms-ContextualMenu-link.is-disabled), but the CommandBar itself does not. That seems like an oversight so I'll mark this for review by our designers. Until then, your method looks reasonable.\n. We discussed this with the design team, and the recommendation for items that can't be used is to hide them from the CommandBar entirely, rather than to disable them. So we won't be adding an .is-disabled state for the CommandBarItem.\n. After discussing this today, we're having some doubts about the decision to always remove command bar items rather than provide a disabled state. We already have a disabled state, so we're going to leave that in and assign this to design to provide guidance for the documentation.\n. Could you resubmit it? I was finally going to test your changes today (I swear!) but I don't think I can without manually making them based on GitHub's files changed view.\n. A new pull request has been opened for this, closing this one.\n. @StfBauer: So you have a set of files, with one icon per SVG? How do you use an SVG on the page? It seems clear that SVG has many advantages, we just want to also:\n- Make it simple to use an icon (.ms-Icon--mail class and it magically appears)\n- Allow for subsetting of the full icon set (perhaps a custom sprite like @constancecchen above) to reduce download time...\n- ... or make each icon a separate file, at the risk of having many HTTP requests slowing it down\n- Have the icon inherit the parent's color, or make it easy to apply a custom color through a CSS class\n. We discussed this today and while we think there are a lot of merits to SVGs, we're just not seeing enough issues with our web font to justify the development expense and the extra work this would put on those using Fabric.\nIt's a huge benefit that our icon font can inherit the font size and color of it's parent, and that our existing color and size classes can be used to override that. So we're sticking with the icon font for now.\nThanks everyone for the discussion and ideas! We'll continue to put stuff like this up on GitHub to look for feedback from the community.\n. Fixed by PR #615. The new documentation page for Overlay has a button that opens a full screen overlay.\n. Thanks for bringing this to our attention, @kasajian, our documentation site needs updated to better explain how to use a component. Right now it depends on the specific component: some have no JS, others require jQuery, others just a JS file from us.\nIt's important to note that http://officeuifabric.com is not the official documentation site for this project, and is not built or maintained by us. What you're seeing there is a jQuery plugin that they've written, separate from this project.\nWe'll be updating our documentation site to make it clear how to use components generally, and then adding specific notes on the component pages where special instructions are needed.\n. If you go to the Table component, you can click the HTML tab to see the code for the sample component. In there you'll see <div class=\"ms-Table-row is-selected\"> \u2013 it's that .is-selected state class that provides the highlighted background color and puts a checkmark in the box. You just need your JavaScript to toggle this class.\nHere's what Andrew Connell's example does:\n$tableRow.on('click', '.ms-Table-rowCheck', function(event) {\n  $(this).parents('.ms-Table-row').toggleClass('is-selected');\n});\nWhen clicking on a .ms-Table-rowCheck element (the checkbox itself) it will add or remove the .is-selected state class from the parent, which is an .ms-Table-row. Does that help?\n. Unfortunately yes, the answer for now is \"look at the source\". We provide an example for each component that demonstrates the various features, but you do need to examine the source to see which classes are being applied to get the effect.\nWe're working now on updating the documentation with clear descriptions of the classes available, suggestions for use, etc. Thanks for hanging in there!\n. Could you take a look at this, @notandrew? Also, we should get a test/sample page set up so that we can quickly verify that the other font stacks are working.\n. Would be great if we could use the standard HTML ISO Language Codes.\n. Interesting. Those are for Microsoft Windows though, do they make sense for a web product? We only use a tiny subset of that, and what we have maps more closely to the ISO 639-1 codes that the W3C recommends.\n. Also, he said that he's using \"cn-ZHS\", exactly as we have it in our docs. Is that not what's in Fabric right now?\n. Ah okay. @kennywangjin, could you try changing the lang attribute to \"ch-ZHS\" and confirm that it works for you?\n. Okay, I guess both cn-ZHS and ch-ZHS are not working for Kenny. We'll have to look into this and see if we can reproduce it. \n. Agreed, we need to get the hard-coded font families out of the components. See issues #442 and #443 for related problems and a proposed solution.\n. Reopening. Each of the components in Fabric JS now uses the ms-baseFont mixin to set the font family. But we still don't override that base font depending on the language in use on the page. This is what we should use the ms-Fabric class for -- to set a base font for the entire page and then only change the weight within components. Still needs work.\n. Related issue in Fabric React: ms-Link font-family should \"inherit\"\n. Another note here:\nCurrently the base font classes (such as ms-font-m) set font-family and -webkit-font-smoothing. Both of those properties should be set a single time in ms-Fabric, so that the base font classes set only a size and weight.. ListItems are tricky because there are so many potential use cases. Our current ListItem is modeled after the Outlook mail list, so it has a whole bunch of elements that you may not be using. It's hard to know what to suggest without seeing the specific app you're working on, but some options could be:\n1. Override the existing .ms-ListItem like you're doing here. It's a pain but there's nothing wrong with what you're doing to make the component work for you.\n2. Use the .ms-Table component. We don't provide JavaScript for it, but to select a row you just need to add the .is-selected class, as I described in the other issue you opened.\n3. Use a ChoiceField component to create the checkbox.\n. That seems like a reasonable behavior. I'm not sure when we'll get to this, so you may want to use an override class for now.\n. This issue was moved to OfficeDev/office-ui-fabric-js#36\n. Thanks for bringing this up, I'm quite sure the NavBar should support having multiple commands on the right hand side.\nHere is a quick example of how to write your own CSS override to support having a second item: NavBar with Multiple Items on Right\nYou could also consider using a CommandBar, which is much the same component (we're likely going to remove one in the future) and supports this: CommandBar with Multiple Items on Right\n. This has been added.\n. Looks good to me.\n. The issue with removing the search box and having too much padding is being tracked in #363. I've also added a note there describing your issue with the first command disappearing after you change the padding.\nRight now the CommandBar assumes that you'll have the overflow area for commands that don't fit. Even if you aren't expecting to need this, does it cause problems to leave it in? We could make that behavior optional but just need to understand the use case for doing so.\n. The main remaining issue here seems to be the overflow menu, and wanting to remove it if there are few items in the CommandBar. With the new CommandBar updates the overflow menu only appears when the items do not fit. So you will no longer have to manually add/remove the overflow menu. \ud83d\ude04 \n. It turns out that the design intent is for a PersonaCard to have only those 4 actions. You can have fewer (e.g. if phone numbers aren't available) but nothing different. So we won't be updating the component at this time to make it easier to customize. Instead, we'll document this more clearly.\n. We need to discuss this some more, as there are multiple goals conflicting here and we need to figure out where to draw the line between advising and enforcing. Please leave your pull request as it is for now. Thanks for your patience.\n. Thanks as always for your candid feedback. We discussed this again today and realized that while we want to encourage you to follow our guidelines, it's going too far to put up roadblocks that keep you from customizing Fabric.\nWe're going to review @manndave's pull request (https://github.com/OfficeDev/Office-UI-Fabric/pull/377) and get this into the next version of Fabric. If you see any other places where our components are difficult to modify please let us know.\n. Closing this. It's a duplicate of #371, for which we now have a pull request in review.\n. Looks good to me. I'm getting 2.1.0 ready for release and want to include this, so I'll go ahead and merge.\n. We're going to use our existing animation classes to animate the change in position.\n. The toggle is now animated.\n. Looks good to me.\n. I'll merge this in and cherry pick it over to the 'release/2.1.0' branch so that we can finish releasing 2.1.0.\n. Submitted PR 13818 to our internal documentation repo. Don't merge this in until that PR has been merged.\n. The PR has been approved and merged in for the docs site. Merging this one in.\n. The CommandBar should generally contain commands that act on the currently-selected item, whereas the NavBar is best for links that navigate away from the current page. Still, it seems reasonable that some commands might require changing the page and that the CommandBar should support this. We'll investigate it.\n. Fixed by PR #615. CommandButton can be a link and it will navigate immediately when clicked.\n. We're setting the is-selected class here to demonstrate how the component works. You're right that we should clearly separate this out, making it clear what JS is required by the component and what is for demonstration.\n. Fixed by PR #615. We've separated out demonstrational JavaScript from the JavaScript intended for production use.\n. Fixed by PR #615.\n\n. Taking a closer look now, we shouldn't recommend making an entire ms-ListItem a link. The list item can contain multiple actions (e.g. email subject, reply button, trash) that would have separate actions. It would be more suitable to add a link or JavaScript action to the specific elements that need to be actionable.\n. This behavior is not optional, so we'll want to make sure our documentation makes that clear so that developers don't think the is-overflow class is optional.\n. Fabric implements the Office Design Language, which specifies all of the styles that are valid for a given component. So generally speaking we don't want to encourage developers to override the components' styles. In the case of Button, it only comes in gray (default) and blue (primary).\nWe've had similar questions like this (see #389) where we have to decide whether we'll make it easier for developers to deviate from the standard patterns or if we want to enforce those. I'm going to mark this as 'needs-discussion' so that we can make a decision.\nFor now, I'm not aware of any problems that would come from loading fabric.components.min.css before fabric.min.css, which will make the background color class work for you as you've discovered. You could also create an override class, as in this CodePen.\n. Thanks for your patience here, @TheTedAdams. We discussed this today and decided to stick with the current recommended loading order (fabric.css before fabric.components.css). The Fabric style classes, such as text or background color, are intended to be applied to the content within an app and not on top of the components' styles. We want to encourage developers to stick to the design language. Of course you're always free to write CSS override classes, we just don't want to go out of our way to support deviating from the design language.\n. Once this is approved, let's wait and merge the PR to master with other language-related PRs.\n. Marking this for Fabric 2.5.0 for now.\n. This is labeled 'needs-documentation'. What kind of documentation does it need?\n. @notandrew: Is this PR still relevant, or does #486 address this?\n. Fixed by PR #615. The CommandButton we're using now is full height.\n. Fixed by PR #615. I'm no longer seeing this issue. \ud83d\ude04 \n. We'll bring this up with the design team to see if it's a standard pattern we'd like to provide in Fabric.\n. While we have similar navigation in our Windows UWP and Android apps, this isn't a pattern we're currently using on the web. So unfortunately at this time there are no plans to develop this for Fabric.\n. Well then, it turns out Office 365 is using this on the web. I'll leave this issue open for now so that I can mention it to the designers, as this pattern might be useful in Fabric. But I wouldn't count on it being added any time soon. Let us know if you do build your own.\n. I've added this request to our roadmap as a potential component to include in a future release.\n. This was requested previously (see #81) and is on our roadmap as a component we'd like to provide in the future.\n. We'll check with the design team to see if this is a standard component we'd like to provide.\n. This is on our roadmap as a potential component to include in a future release.\n. Beautiful, thanks John!\n. Nice work! My name is Mike Wheaton and I approved this pull request.\n. After this gets approved, let's still leave the PR open and merge it into master once we have the other language-related issues fixed. Then we can release them together.\n. Marking this for Fabric 2.5.0 for now.\n. Fixed by #412.\n. You beat me to it! Looks great. :smile_cat: \n. Looks good to me! This is a huge improvement, as we now have a more general way to connect the buttons and content areas (without hard-coding the tabs) and we can have multiple PersonaCards on the same page without the need for unique IDs.\nWe just need one more review to merge. :)\n. Thanks for your understanding here, @manndave. We're actively working on 3.0.0 and want to provide much more robust, production-ready JavaScript in the future. Let's close this pull request and then make sure we take this thinking into the new PersonaCard.\n. I'm having trouble attaching event listeners to the ms-PeoplePicker-resultAction buttons. Not sure what's going on here.\n. @wdo3650, could you have a look at this one?\n. This issue was moved to OfficeDev/office-ui-fabric-js#68\n. Confirmed, this change to the source order makes the remove buttons work correctly. Everything still displays fine. One more approver and we can merge it in.\n. @philworthington Are you adding the remove button functionality in the work you're doing on the PeoplePicker?\n. Sorry to close this pull request, but it looks like @philworthington has fixed this issue in a separate branch while working on Fabric 3.0 updates. I believe the structure has changed slightly and this wouldn't merge in.\nAs always, thanks for your contributions @manndave! We'll get your next PR merged in faster.\n. Fixed by PR #615. All panels are now opening on the documentation page within the Fabric project. This will then be deployed to our live website, so it will be fixed when Fabric 3.0 is released.\n. This issue has been moved into an internal system where we track work items for the documentation site.\n. Thanks so much for doing this \u2013 snippets for Fabric make it much easier to use and I can see them being very welcome by developers. We'll have to discuss if/how we see them fitting into the core project. And if they remain a separate project, what we can do to help you automate their generation.\n. We haven't had a chance to discuss this yet. Do you have any suggestions for how we could make it easier for you to generate snippets from our codebase?\n. We'd definitely be open to that. You would be using the HTML template files as a source, right? What about the Sass/CSS? We have some changes planned to the build process, so if you want to get a start on it we can review it early (so you don't spend too much time) and make sure that our build will continue to provide what you need.\n. Would our upcoming conversion to Handlebars templates help with this? Those templates will have {{ placeholders }} for all of the values. When a component has subcomponents those will be included into it as separate templates, not duplicated in the HTML of the parent component.\n. You can take a look at the miljo/gulp-handlebars to see some of this work in progress. For example, a Handlebars template for Button.\n. Have you had a chance to look at the Handlebars samples, @manndave? We're doing a lot of work on this now to prepare for the Fabric 3.0 release. It seems that there should be a way to automate the conversion of a Handlebars template to a code snippet. Let us know if there's anything we can provide to make this easier. Once Fabric 3.0 is out we should have more time to help with this.\n. Closing this issue for now as there's no action on our end. Please get in touch if you want to discuss this further \u2013 we definitely want to support helpful developers tools like this!\n. Nevermind, the 40 here refers to the distance, not time. I misunderstood what the classes were describing.\n. I would think the CommandBar should open a ContextualMenu in the same way that the NavBar does. I'll flag this as 'needs-design' so that we can verify.\n. Fixed by PR #615. The CommandBar now opens a ContextualMenu as expected, making it much more functional:\n\n. We'll add new classes for .ms-u-slideRightIn20 and .ms-u-slideLeftIn20 to be more consistent.\n. Fixed by PR #615. The CommandBar's search bar now functions correctly across screen sizes.\n. Thanks for reporting this, we noticed this recently and hadn't opened an issue yet. The disabled label should be a lighter gray.\n. Thanks for reporting this, David, we'll take a look.\n. We'd really appreciate that, thank you!\n. This issue was moved to OfficeDev/office-ui-fabric-js#67\n. Good point, if a component contains another we should make sure everything is working in the demo/sample.\n. Fixed by PR #615. Tested with two items and it now works correctly:\n\n. @philworthington Could we use the Toggle animation from the MDL2 branch on our current Toggle control?\n. @chrisahhh Could you merge the latest master into your branch to resolve the merge conflicts? If we can test it and the animation works I think we'll go ahead and merge, although we will likely need to tweak things later when we have more design input here.\n. Unfortunately we can't merge this PR. Given that the Toggle animation has already been done in the updated design language (to be released in Fabric 4.0) I'm going to close this. Thank you for the contribution \u2013 if you'd like to open a new PR based on the current master we can most likely merge it.\n. Thanks for the PR! Looks good to me, we just need one more review to merge it in.\n. I'll look into the options some more and see what we're doing in React projects to get the buttons to display properly.\n. I've opened a new pull request, #652, which uses flexbox to solve this problem. It seems to be the most robust and simple solution now that we no longer support IE9. Thank for your contribution and discussion, @chrisahhh\n. This issue was fixed as part of our work on Fabric 3.0, which just merged into master.\n\n. I think this is actually another bug in our docs site, where when a component has multiple variants our HTML sample view concatenates all of the source together:\n\nThis will be fixed in our upcoming documentation rewrite. I've confirmed that the rendered samples have both <ul class=\"ms-List\"> and <ul class=\"ms-List--grid\"> respectively.\n. We've had many requests for this and have placed it in the planned work section of our roadmap. Designs are complete and we just need to get it built, thanks for your patience here.\n. Tested it with only 3 items (on master that results in a blank page) and it's working beautifully:\n\nApproved by me. We just need one more reviewer before merging it in.\n. Foundation also has visibility classes for screen readers and this is something we should absolutely include, along with more guidance for accessibility.\n. Fixed by #534. \ud83d\ude04 \n. Seems reasonable. I can see having utility classes like .ms-u-textAlignRight,.ms-u-textAlignCenter, and .ms-u-textAlignLeft. Similar classes can be found in SUIT CSS. We can also provide right-to-left (RTL) styles for these utilities to help with localization.\n. Fixed by #534. \ud83d\ude04 \n. Looks good!\n. Excellent points, Stefan. This could also simplify localization. Right now we override the font-family of every class that uses that uses that font weight. This is repeated for every language. For example:\n*[lang='vi-VN'] .ms-font-mi,\n*[lang='vi-VN'] .ms-fontWeight-semibold,\n*[lang='vi-VN'] .ms-fontWeight-semibold-hover:hover {\n  font-family: 'Segoe UI Semibold Vietnamese', 'Segoe UI Semibold WestEuropean', 'Segoe UI Semibold', 'Segoe UI', Tahoma, Arial, sans-serif;\n}\nThis means that all components must use Fabric classes (<span class=\"ms-Thing-text ms-fontWeight-semibold\">some text</span>) or we have add a new override for every element that changes the font weight (adding *[lang='vi-VN'] .ms-Thing-text to the selector above). That would add a ton of bloat and be a nightmare to maintain.\nWith this method we wouldn't need to keep track of which classes use which font weights, as we can use font-weight directly rather than centralizing the overrides:\n.ms-font-mi {\n  font-weight: 600;\n}\n.ms-Thing-text {\n  font-weight: 600;\n}\nIt's also a potential fix for #443.\n. We're now using font-family to set a single font family at the base of every component, and font-weight to change the weight.\n. Now that we're using a single font-family everywhere and font-weight to alter the weights, all languages have their weights set properly.\n. Excellent point. There are no issues (that I'm aware of anyway) with requesting HTTPS resources on HTTP-served pages, so it would be best practice to link to the HTTPS version. I've confirmed that appsforoffice.com supports HTTPS, so we just need to update the docs.\n. I've made this change and am working on getting it merged into the documentation site. Will leave this issue open until we've deployed the site with the updated URLs.\n. I actually did look at using protocol-relative URLs (e.g. //cdn.com/fabric.css) but after some research it seems that this is no longer the recommended approach. See the note at the top of this article from Paul Irish. It should always be preferable to request HTTPS.\n. We've made this change to the documentation site and it will included in the next deployment.\n. The Pivot component now includes content areas that are shown/hidden based on the selected item:\n\n. Thanks for this contribution, @av-virlan! As you've seen, the current JS for the Pivot is simply there to demonstrate how the state classes should be toggled and isn't of much use in an actual app. We'll review this pull request and get back to you if any changes are necessary.\n. Looks good to me.\n. @HeToC: That's what this pull request adds \u2013 functional pivots. The original JS was to demonstrate the classes that are available in Fabric and not intended for production use. We're very interested in taking whatever contributions you'd like to offer. :smile: \n. @HeToC: This core Fabric project is focused on HTML and CSS. Any implementation of these components in another framework should be done in a separate repo. You can look at ngOfficeUIFabric to see an implementation in Angular and react-fabric to see one in React.\n. In the latest changes that we just merged into master for Fabric 3.0, the Pivot now has content areas that are hidden/shown based on the selected item. We really appreciate your contribution but we couldn't merge it in as we're no longer using jQuery.\n. Looks good! It's a bit unusual to check in mixins that we're not using, but we will be soon and I know some projects are eagerly waiting for these. Fabric 2.2.0 will be published today (it's been in draft for over a week) so I'll squeeze it in.\n. Good idea, we shouldn't fire an event if the option is disabled. Looks good to me. One more approver and we can merge it in.\n. Fixed by PR #615. We have removed the grid variant of the list entirely, and will recommend using the standard ms-Grid classes as they are much more flexible.\n. This is a known issue (#159). A potential solution was posted in the original issue, could you please give it a try?\n. No worries, we've got a long list of issues to sort through. Let us know if there's anything else we can help with.\n. Fixed by PR #615. The NavBar is being combined with the CommandBar, which has a proper state for disabled items.\n. Fixed by PR #615.\n. We'll check in with the designers to see if they've considered option groups. The ContextualMenu component has dividers to separate the menu items into groups, so I'd imagine we would use a similar pattern here.\n. This issue was moved to OfficeDev/office-ui-fabric-js#66\n. Please see the license and Eric's comment that goes into more detail. I'm not a lawyer so please read the license for yourself, but my understanding is that Fabric is licensed to 'extend the Office experience' and that this would include on-premises SharePoint.\n. You mean that you want the label of the ChoiceField (usually text) to contain an image? I've updated your Fiddle by moving the image inside .ms-Label: https://jsfiddle.net/df5xr7mz/2/\nHere is the result:\n\nIs that what you're trying to accomplish?\n. Yes, feel free to ask questions on here whenever. We also have a #fabric channel in the OfficeDev Slack group, which you can join here: http://officedevslack.azurewebsites.net/\n. Can you provide some more details on this issue, or a link where we can see the problem?\n. Do you get any errors in the developer tools console? Were you able to use a button to open the panel?\n. Hmm, very odd. Is there any chance you can share a link to that build? I've tested our panel here and it seems to be working fine: http://plnkr.co/edit/fdsALW?p=preview\n. Please see my link above (http://plnkr.co/edit/fdsALW?p=preview) for an example of the Panel from Fabric 2.2.0 working correctly. If you could send us a link to the specific page you're having trouble with, or reproduce the issue on a site like Plunker, CodePen, or JSFiddle, we can take a look. I'll close this issue for now as I haven't been able to reproduce the problem.\n. Make sure that .ms-Callout-inner is wrapped within the main .ms-Callout container. Here is a demo on Plunker showing a Callout in use.\n. I never would've guessed it was the doctype causing this. Thanks, @manndave!\n. There's no description so I'm guessing this is accidental. Our release branches contain the distribution files, which we don't check in to our main branches, so we can't merge this in. Master already contains all of the changes in the release branch.\n. No worries!\n. Well this is bizarre. Here is a repro of the issue:\n\nFor me I was able to get the bug when a Spinner follows an H1 with no classes, but only for the first instance on the page. The second one with the same markup appears normal. I've inspected the .ms-Spinner-circle elements and they're always 3.58px by 3.58px in every spinner. This appears to be some sort of browser rounding bug.\nThis is in Chrome. It seems okay in IE11 and Edge.\n@wdo3650, thoughts?\n. This was fixed by PR #464.\n. We're including the dot (e.g. .ms-font-su) throughout our documentation. I guess the idea was to communicate that these are classes, but we refer to them as classes constantly and they all start with ms- so that should be clear. Removing the dot would make copy-pasting easier and reduce noise.\n. This has been fixed in our documentation repo and will be included in the next deployment. \ud83d\ude04 \n. I've forked the repro for the previous issue and made your changes to it here: http://plnkr.co/edit/Cc40wA?p=preview\nAll looks good now. Nice work!\n. Unfortunately no, right now the NavBar has a hard-coded responsive style that shows the hamburger menu on small screens and opens the menu in a Panel.\nHave you considered using a CommandBar? The style is slightly different, but it does support showing icons on small screens (no hamburger menu).\n. We'll have a designer take a look at this. It does seem odd to hide the CommandBar entirely \u2013 there's no reason to think those commands suddenly become unnecessary on small screens.\n. Fixed by PR #615. The CommandBar inside a Panel is no longer hidden on small screens.\n. Sass changes look great, but can't test (or merge) until the CDN font gets updated. We also need to update the documentation site.\n. This is a duplicate of #471, which now has a pull request associated with it. Closing this one.\n. The pull request into the documentation site to add these classes has been merged. They'll be covered in the next documentation release.\n. Adding the 'needs-design' label, as I'm finding this color in use in a number of our components: Breadcrumb, ChoiceField, Dropdown, ListItem, MessageBanner, etc. Should we be changing these to a different gray, or keeping that color in the components but not having it as a core Fabric color?\n. It turns out that we are going to keep this color after all. Closing this issue.\n. Thanks for taking a look. I've submitted a PR to our documentation site repo. Once that's approved and merged in I'll merge this pull request.\n. The PR for the documentation site has not been approved yet, but it's a simple change and I'm not expecting issues there. Will merge this in to include it in 2.3.0.\n. The PR into the documentation site has been approved and merged. This change will be included in the next release of the documentation site.\n. These classes have been added to the documentation:\n\n. Thanks @knutkj for reporting this and @av-virlan for the possible fix. We'll look into this.\n. This issue has been fixed and will be included when we next update the documentation site.\n. On the documentation for NavBar you'll see that we've actually attached a click event to ms-NavBar-item rather than ms-NavBar-link. This gives it a larger tap/click area.\nGiven that it's used for navigation I'd expect developers to use ms-NavBar-link and I think we should update our sample (and fix the CSS) so that this works well. Thanks for reporting the issue.\n. Fixed by #615. NavBar has been merged with CommandBar, which has a full-height button or link.\n. I'll pass this feedback on to our design team. For now this is the only color that the NavBar comes in, but you're welcome to write CSS overrides to change it's color. For example:\n```\n.ms-NavBar {\n  background-color: #004578;\n}\n.ms-NavBar-link {\n  color: #ffffff;\n}\n``\n. Thanks for the detailed report and the JSfiddle. That's everything we need to repro the bug and get it fixed.\n. The second option would be best, as it keeps the entire menu item visible. I'll flag this for a review by our design team to get their thoughts on the spacing.\n. This issue was reported again in #694. What is the desired behavior here?\n. This issue was moved to OfficeDev/office-ui-fabric-js#65\n. Thanks for the bug report and suggested fix, @brannmar. I'm not sure what that:firstselector is there for \u2013 we'll take a closer look and get a fix in soon. Until we release a new version, are you able to modify your copy locally so that you're not blocked?\n. Would you mind submitting a pull request with your fix?\n. Fixed by PR #615.\n. It seems reasonable to put an icon inside the default and primary buttons. We'll check in with the designers to see if this is recommended and, if so, remove thedisplay: none;that we currently have on.ms-Button-icon`. For the time being your override styles look fine.\n. It turns out that placing an icon inside a default or primary button is not recommended by our design team. They suggest to use a command or hero button instead.\n. Any ideas here, @Jahnp?\n. Sorry, I'm not familiar with NuGet myself so am not sure what to suggest here. Was this working for a previous version of Fabric?\n. So everything is working okay now?\n. Glad to hear it's working, and that you're liking Fabric! Open an issue here any time you have trouble or a question for us. :smile: \n. Were you trying to use the DatePicker, NavBar, or both?\n. Did you initialize the DatePicker like so:\n$(document).ready(function() {\n      if ($.fn.DatePicker) {\n        $('.ms-DatePicker').DatePicker();\n      }\n    });\nI just created a working sample of it, and it seems to work fine for me.\n. I see, you're saying that the DatePicker in Fabric interferes with the SharePoint Online date picker? That's very strange. We'll have to see if we can get a page in SharePoint Online to test this on.\n. This issue was moved to OfficeDev/office-ui-fabric-js#64\n. Any suggested names?\n. Here's a list of 130 hot peppers, with no trademark concerns. :smile:\n. We're going to go ahead and use the names of spicy peppers, working our way from most spicy to least spicy. The idea is that Fabric should get more tolerable over time. \ud83d\ude09 \nFabric 3.0 is codenamed \"Ghost\".\n\n. This issue was moved to OfficeDev/office-ui-fabric-js#63\n. Approved! Changes to font-weight pull in the appropriate font, without having to change the font-family name. This will allow us to finally localize the components' styles by setting a base font and then simply using font-weight.\n. We can go ahead and merge this without a second reviewer if you're ready. The sooner it's in the better \u2013 our next step will be removing all of the $ms-fontWeight-semibold type references within the components and using the font-weight property instead. \ud83d\ude04 \n. Great demo, @wdo3650, let's be sure to get this included on the documentation site.\n. This has been requested before but is not something we have planned right now. The Office 365 AppChrome Control repo might be what you're looking for.\n. Looks good to me! Let's get this into our beta/3.0.0 branch for closer review, and to merge with the Handlebars templates when that branch is ready.\n. Looks good to me. One more approver and we can merge it in.\n. Where is this color being used? We should only include colors that are used widely and recommended by our designers as part of the core palette. The transparentize() mixin could be used by any application without baking this particular color into Fabric, right?\n. I'd consider it more of an anti-pattern. :smirk: Let's talk about it more in person as I know you have some extra considerations here. But generally I don't think we should be including color variables in Fabric that aren't part of the official palette and documented.\n. Looks good to me. One more reviewer and we can get this merged in.\n. We've added this icon request to our roadmap and hopefully it can be included in a future release.\nFor the time being, you can use the existing question mark icon and place it inside an element with border-radius: 50% and a border to simulate the effect. You may need to tweak the vertical and horizontal position to get it visually centered.\n. @Jahnp updated the Fabric documentation site with this new value and that change has been merged. Merging this PR into Fabric now.\n. We don't have JavaScript on the CDN right now (long story...) but will look into this again to see if we can include it.\n. We've made this change to the documentation site (see #444) \u2013 it should be deployed over the next week or so. Thanks!\n. Nice catch. :+1: \n. I'm sure this meets the spec, but the behavior of the panels across screen sizes is getting a little complex, no? We should see if we can simplify this.\n. We should probably require use of the disabled attribute rather than having the is-disabled state class. Having both is confusing and likely to cause issues with browsers and accessibility.\n. This issue was moved to OfficeDev/office-ui-fabric-js#62\n. Looks good, approved.\n. Fixed by PR #615. The Panel animates in and out correctly now.\n. Thanks for reporting this issue, @vibhava. We'll take a look and get this fixed \u2013 accessibility and keyboard navigation are very important to us.\n. Thanks for bringing all of these bugs to our attention, @s-KaiNet. We're currently doing a full scrub and rewrite of the components with Handlebars templates and TypeScript, and we can make sure these issues are resolved before releasing 3.0.0.\n. Thanks for pointing this out and providing the links that repro the bug. Removing the overflow-x: hidden; rule on .ms-Pivot seems to do the trick, but I'm honestly not sure why that works or what the rule is needed for in the first place. We'll investigate.\n. We don't have an ETA for this. If you'd like to fix the problem locally you can change the value of overflow-x to get it to show. And then when this fix is added to Fabric you could remove the override.\n. This issue was moved to OfficeDev/office-ui-fabric-js#61\n. We've confirmed this issue and will get the documentation updated. Thank you!\n. This has been fixed in our documentation repo and will be included in the next deployment.\n. As the CommandBar can contain a ContextualMenu, we've included the styles for both components in CommandBar.css to ensure that the dependency is met and everything works well. However, this simple method of handling dependencies is now deprecated in favor of custom bundling which results in much less duplicate code. We should remove these duplicate styles for dependencies and recommend bundling going forward.\n. We discussed this today and agreed that it's not necessary to include the dependency CSS within each component's CSS. Instead, our documentation will make those dependencies clear and you'd just be expected to include all of the required CSS files.\nThis allows for a simple method to use a small subset of components (without duplicate styles) while custom bundling will remain the recommended method. We will do the same thing for components that require JavaScript.\n. Fixed by PR #615. The component folders within dist no longer contain CSS files, only Sass, and those files don't have references to dependencies. This makes for smaller file sizes with no repeated styles.\n. Fixed by #537 \n. The PR to add this to the documentation site is merged, so I'll go ahead and merge this one.\n. I've added in a stub Markdown page to document this component. Could you complete it? I also had to remove the empty lines in the template because it was causing issues with our sample page generator.\n. Approved\n. Thanks, @zkoehne, we'll get this fixed up. \ud83d\ude04 \n. This change has been made to the documentation site and will be included in the next deployment.\n. We're currently debating whether these sizes are common enough to be considered part of the design language. They might not be removed.\n. After much discussion, it's been decided to keep these sizes in the type ramp.\n. Now that beta/3.0.0 has been merged into master, I'm going to close this PR for now. We should have an answer from design soon on whether or not these classes are being removed. If they are, I'll open a new PR directly into master.\n. We do have this on our roadmap as a commonly-requested feature that we'd like to include. Unfortunately at this time there's no one assigned to work on it, but we do hear your request.\n. Thanks for digging up that issue with Pickadate, @av-virlan. I'll close this issue as it does appear to be the same one with Pickadate.\n. There are a couple issues here that we need to fix:\n1. We have a bug in our samples where each sample contains the HTML of all the previous samples. So if you look at the HTML for the 'Command and Compound Buttons' sample, you'll see the default and primary buttons in there as well. Very confusing.\n2. We're using the same HTML source for all button types. This is the issue you're seeing where a standard button contains ms-Button-icon and ms-Button-description, when neither of those would be displayed in a standard button. It works but it's confusing.\nThe first issue is a bug in our documentation site generator.\nWe're doing a rewrite of the components using Handlebars templates. This will still render out to HTML, but it will be smart enough to exclude elements that aren't in use by a particular variant. So that will fix the second issue.\n. Both of these issues are fixed in the new changes for Fabric 3.0. \ud83d\ude04 \n. Looks good to me. We'll just need some documentation updates before merging this in.\n. It looks like this bug was fixed separately in PR #615. Thank you for your contribution here \u2013 our apologies for not getting it merged in before we started all of the work on Fabric 3.0 that only recently made it into the master branch.\n. This is terrific, John! A huge step forward for Fabric that will help us build higher quality components and documentation. Let's bring this into beta/3.0.0 and start hammering out the bugs. \ud83d\ude04 \n. Our designers work in pixels, so it would be difficult change to another unit without introducing communication issues. We've discussed em in the past but it presents issues with text size inheritance, and unfortunately rem does not have full support on IE9. My understanding is that with modern browsers (even IE9!) providing page zooming, pixels are now considered acceptable.\nI've flagged this as needs-discussion so that we can go into more depth with the whole team.\n. Good points about calculating ems from pixel values and the potential problems with trying to control font sizes in Office Add-ins. We can certainly revisit this discussion as it's been a while since we last considered a change here.\nBrowser support is a complicated situation. We'd love to drop IE9 (and IE10) support both to reduce the amount of browser testing we have to do and to gain access to new features like flexbox. However, Fabric is in use on some products that are seeing more significant IE9 usage than the global stats would suggest. Some of the nicer touches like animation can be unsupported on IE9 (our support matrix allows for a \"diminished experience\") but all of the core styles must work.\n. Closing this issue, although I'm sure we'll be discussing it again before long. \ud83d\ude04 \n. No problem, it makes for a fun couple of hours. \ud83d\ude09 \nAll of our Travis builds will fail until we get these !important flags removed, so we'll want to manually review the build log before merging any new PRs.\n. Perfect, I'll get this merged in. The commented-out functions should definitely be removed in the future if they're not used.\n. Looks great, approved.\n. Looks great! Approved by me.\n. The DatePicker is powered by the pickadate.js jQuery plugin. It has methods for setting a minimum date and maximum date. I haven't tested these, but suspect that it would block navigation to other dates and it likely applies some sort of disabled CSS class to the unavailable days within the calendar.\n. Try merging beta/3.0.0 into this branch and see what linting errors remain.\n. Approved\n\n. This issue has been moved into an internal system where we track work items for the documentation site.\n. Looks good! Approved\n. Could you try merging beta/3.0.0 into this branch to clear up the build errors?\n. Could you try merging beta/3.0.0 into this branch to see if it clears up the build errors?\n. Approved (test)\n\n. Approve\n. Approved\n. \ud83d\udc4d \n. Abandoning this test PR. I guess we can just use the PullApprove interface to approve/reject a PR.\n. Looks good, merging this in \ud83d\ude04 \n. Could you try merging beta/3.0.0 into this branch to confirm that the build errors clear up?\n. Aniket says approved! Merging it in so we don't get merge conflicts\n. This issue has been moved into an internal system where we track work items for the documentation site.\n. We have submitted the newer versions to the CDN, but unfortunately it can take a long time before they get deployed. I'll leave this issue open so that we can notify you when 2.5.0 is available.\n. All versions of Fabric, up to 2.6.1, are now available on the CDN.\n. This issue was moved to OfficeDev/office-ui-fabric-js#60\n. \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d \n. It's a yes. \ud83d\ude04  -webkit-font-smooth: antialiased more closely matches our intended designs and looks more consistent across browsers and devices. Let's integrate this into all of our classes and components.\n. Approved \ud83d\ude04 \nNote: the comment needs to begin with \"Approved\" to be picked up by PullApprove.\n\n. Thanks for reporting this, we'll have a look.\n. Fixed by PR #615. The Dropdown now transitions to use a Panel on small screens.\n\n. @andrewconnell: We should be able to do that. Would you mind opening an issue in Fabric JS for this?. Approved by me as well\n\n. Woohoo! Looks like it's working \ud83d\ude04 \n. Approved \ud83d\ude04 \n\n. Approved\n\n. Approved\n\n. We don't have plans to create a TimePicker component right now. Could you send screenshots of other time pickers so we have an idea of what you're looking for?\n. @codeaid No updates here, unfortunately. I'm not aware of any plans to build a TimePicker for either Fabric JS or Fabric React.. Approved\n\n. Approved \ud83d\udc4d \n\n. Approved \ud83d\udc4d \n\n. Those build errors shouldn't be a problem now that #569 has been merged.\n. Approved by me \ud83c\udf66 \n\n. This is great! So nice to remove the hidden inputs and CSS trickery.\nLet's talk about renaming these components to 'CheckBox' and either 'ChoiceGroup' or 'RadioButtonGroup'. That would make the difference and usage clearer, and match another project where we're doing the same. \ud83d\ude04 \n. Approved \ud83d\udc4d \n\n. Approved \ud83d\udc4d \n\n. Approved \ud83d\udc4d \n\n. Approved, looks good\n\n. You may be able to fix those linting errors by merging beta/3.0.0 back into your branch.\n. Approved \ud83d\udc4d Thanks for clearing up the linting issues\n\n. Approved once those conflicts are resolved \ud83d\ude04 \n\n. Approved! Thanks for removing this\n\n. Approved \ud83d\udc4d \n\n. Approved \ud83d\udc4d \n\n. Approved retroactively \n\n. Approved \ud83d\udc4d \n\n. Approved! It's working perfectly, thanks for fixing this up so well \ud83d\ude04 \n\n. Approved \ud83d\udc4d \n\n. Approved \ud83d\udc4d \n\n. Looks like Travis is getting confused with the new build:\n\n. Approved, looks great \ud83c\udf89 \n\n. Approved\n\n. Thanks for reporting this issue and tracking down the root cause, @andikrueger. I'll get started on a 2.6.1 patch release to fix it.\nWe've run into issues like this before; it's frustrating when we let such glaring problems get through the release process. In Fabric 3.0 and later we'll be using the main fabric.components.css stylesheet on the component sample pages (rather than individual MessageBar.css-type files) so that we can catch these issues. We'll be testing those sample pages and requiring full documentation before merging anything in.\n. I'm going to break all the rules and go ahead with a single reviewer, given how tiny this change is and that I want to get 2.6.1 out right away.\n. Approved\n\n. Approved \ud83d\udc4d \n\n. Approved \ud83d\udc4d \n\n. We appreciate your contribution here, but it turns out this issue was actually resolved in our work preparing Fabric 3.0 which just merged in (PR #615). Sorry that we didn't update the issue so that you'd have known we were working on it.\n. Approved \ud83d\udc4d \n\n. I suspect that this has been fixed in 3.0, but am unable to test as we don't have examples of ms-Panel--left and ms-Panel--lightDismiss. I'll add those in and submit a PR so we can see if this issue repros.\n. Unable to repro because the left panel is currently broken. See issue #619.\n. Yes, I think so. Thank you for submitting it though, we really appreciate all of your contributions lately!\n. I've reached out to one of our designers who works specifically in the add-in space to get an answer for you.\n. @v-chloc: The design team is discussing whether or not to include a smaller button variant. So I don't think there's anything to be done here yet.\n. @v-chloc: I'll send you an email. :)\n. This issue was moved to OfficeDev/office-ui-fabric-js#59\n. In Fabric 3.0 we're introducing a new way of assigning font weights. Rather than having entirely different font-family names, we're using a common family variable of $ms-font-family-base. The font-weight property is set separately using one of these variables:\n- $ms-font-weight-light\n- $ms-font-weight-regular\n- $ms-font-weight-semilight\n- $ms-font-weight-semibold\nWould you mind updating your PR to match this new pattern? You just need to replace @include ms-fontWeight-semilight; with font-weight: $ms-font-weight-semilight;. \ud83d\ude04 \n. Approved! Thanks for the quick update here. No trouble getting the latest master to build?\n\n. @wdo3650 It doesn't look like he removed the newline from the end of TextField.scss, and it seems to build fine in Travis.\n. Thanks for merging this. I just pulled down the latest master (including this merge) and it builds without errors. Must have been a glitch with the linter you saw before.\n. By default, the third line of text in ListItem gets an ellipsis (...) when the text is too long to fit in a single line:\n\nYou can override this like so:\n.ms-ListItem-tertiaryText {\n  white-space: normal;\n}\n\nHope that helps. \ud83d\ude04 \n. To get the build working you'll need the DetailsList.hb file from PR #603. You can grab it from there or wait until that PR merges, and then merge beta/mdl2 back into yours. \ud83d\ude04 \n. Have you reviewed the grid documentation on the website? It should be helpful in understanding the basics of how responsive layouts can be built.\nLooking at the code you've included, it seems that many of the div elements aren't closed. You'll also want to have the columns within each row add up to 12. For example, combine two columns with ms-u-lg6 to total 12, or one ms-u-lg4 and one ms-u-lg8.\nWhile our class names are different, our grid shares the same concepts as many other CSS toolkits. The W3C guide to the Bootstrap grid is an excellent resource.\n. The grid is intended for flexible layouts, so the columns will always resize based on a percentage of the row's width. If your layout calls for a fixed column you'll want to use standard layout techniques (e.g. this W3C example) to position things on your page. You could then use the ms-Grid classes within the content area if you do have content that should scale proportionally to fit.\n. Good point, we don't actually document all of the breakpoints and grid classes. I've opened issue #656 to track this.\n. @lixonic: To see this new style of button (along with many other changes) you can pull down the beta/3.0.0 branch. I actually shouldn't have opened this issue on GitHub yet, as the issues reflect what needs done on our main branch. The changes for Fabric 3.0.0 will be merged into master in the next few days. \ud83d\ude04 \n. This issue was moved to OfficeDev/office-ui-fabric-js#58\n. This issue was moved to OfficeDev/office-ui-fabric-js#57\n. Approved \ud83d\udc4d \n\n. @andrewconnell: We're also planning to release Fabric 3.0 as a beta, and to provide a more detailed road map of the remaining items that we want to get in before it releases.\n. The guidance from our design team is that the OrgChart is intended for navigation and not selection, and we would not recommend adding selected states within the OrgChart.\nWhen you want to select people it would be best to use a PeoplePicker, or display the Persona components in a List that supports selection. We'll be introducing a new type of List in a future release that will work well for displaying Personas.\n. Approved, thanks!\n\n. Approved. \ud83d\ude04 This is more consistent with the other mixins, and will prevent confusion as we add more in the future.\n\n. See comments from @lixonic in PR #604 for a possible fix.\n. Turns out this is a duplicate of #511. Closing this one.\n. If you clone this repo and run it locally, you'll see the new documentation pages that we're working on. Here is part of the Spinner page:\n\nAll of the documentation is in Markdown files for easy editing, and these can be found in files like src/documentation/pages/Spinner/Spinner.md. We would be thrilled to have some help in filling out these files and making the documentation more useful!\n. Fixed by #624\n. Approved \ud83d\udc4d \nThanks for the contribution, and for cleaning up the unnecessary spaces/tabs!\n\n. We're actually having an internal debate right now about whether we're going to remove these sizes or not. I should have updated the issue to say that. Let's keep the PR open for now, but unfortunately it may have to be closed if the decision is to leave these sizes in.\n. After much discussion, it's been decided to keep these sizes in the type ramp.\n. This issue was moved to OfficeDev/office-ui-fabric-js#56\n. Thank you for investigating this, @abdullahsalem! I'm not sure when we'll be able to fix the issue, but the information you provided will be very helpful when we do. And of course we're always receptive to pull requests. \ud83d\ude04 . This issue was moved to OfficeDev/office-ui-fabric-js#55\n. This issue was moved to OfficeDev/office-ui-fabric-js#54\n. This issue was moved to OfficeDev/office-ui-fabric-js#53\n. This issue was moved to OfficeDev/office-ui-fabric-js#52\n. Yes, the PeoplePicker is currently broken in master and @philworthington is working on it. \ud83d\ude04 \n. This issue was moved to OfficeDev/office-ui-fabric-js#51\n. We're going to be replacing this search more area (button that changes to a searching state with a spinner) with a simple button that goes off to another page with search results:\n\n. This issue was moved to OfficeDev/office-ui-fabric-js#50\n. This issue was moved to OfficeDev/office-ui-fabric-js#49\n. This issue was moved to OfficeDev/office-ui-fabric-js#48\n. This issue was moved to OfficeDev/office-ui-fabric-js#47\n. This issue was moved to OfficeDev/office-ui-fabric-js#46\n. This issue was moved to OfficeDev/office-ui-fabric-js#45\n. This issue was moved to OfficeDev/office-ui-fabric-js#44\n. This issue was moved to OfficeDev/office-ui-fabric-js#43\n. Thank you for reporting this bug, @marekszala-microsoft \n. This issue was moved to OfficeDev/office-ui-fabric-js#42\n. Not sure what's going on, but the icon font isn't loading for me:\n\n. Approved \ud83d\udd28 \ud83d\udd26 \nTurns out I just had to run gulp nuke before building, as it was holding onto the previously-built fabric.css rather than overwriting it.\n\nOnce PR #676 gets merged into master, you can merge master into this branch to resolve the build issues.\n. This issue was moved to OfficeDev/office-ui-fabric-js#37\n. Hmm, that's an interesting question. Adding the disabled attribute probably should style the field correctly, although that attribute alone won't style the corresponding label. So we would never recommend adding the attribute without the is-disabled state class being used as well.\nStill, it's an easy mistake to make and a disabled text field should look the part, so I'll add that.\n. I've added styling for the disabled attribute on ms-TextField-field.\n. Thanks for the icon request, @romnicklopez. I've added it to our roadmap as something we'd like to include in the future.\n. This issue has been moved into an internal system where we track work items for the documentation site.\n. Thanks for bringing this up, I've flagged it for our design team to review.\n. This issue was moved to OfficeDev/office-ui-fabric-js#41\n. Thanks, @lixonic! Let's get @philworthington to take a look as he was working on this most recently.\n. @lixonic Could you merge 'master' back into your branch to update this PR?\n. Sorry we didn't get this merged in \u2013 your PR did fix at least part of the issues here.\n. Have you tried your changes to confirm that it fixes the issue? If so, we'd love a pull request so that we can incorporate this fix.\n. Thanks for tracking the bug down. When we update our documentation site for 3.0 it will pull in the sample directly from Fabric, so this issue should be resolved then. I'll keep this bug opened to be sure that we get it fixed.\n. This issue was moved to OfficeDev/office-ui-fabric-js#40\n. We don't have this capability right now. Could you point to an example somewhere so that we're clear on what you're trying to achieve, and can add this as a request to our road map? For now you will probably need a separate text field for entering a value that is not available in the dropdown.\n. We do plan to add a searchable/autocomplete dropdown component (see our roadmap) but don't have the work scheduled yet.\n. Could you send a link or screenshot of the functionality you're looking for? I wonder if something like jQuery UIs autocomplete with multiple values is what you're looking for. We have this on our roadmap but the work is not scheduled.\n. This issue was moved to OfficeDev/office-ui-fabric-js#39\n. In Fabric 3.0 we're adding the ability to disable an item in the CommandBar. For now, you'll need to add a custom class to target the disabled CommandBarItem like so:\n```\n.ms-CommandBarItem.is-disabled .ms-CommandBarItem-icon,\n.ms-CommandBarItem.is-disabled .ms-CommandBarItem-commandText {\n  color: #A6A6A6;\n}\n.ms-CommandBarItem.is-disabled .ms-CommandBarItem-link {\n  cursor: default;\n}\n.ms-CommandBarItem.is-disabled:hover {\n  background-color: #EFF6FC;\n}\n```\nThen add the is-disabled class to your CommandBarItem you want to disable. See this example where I've disabled the delete button.\n. Approved! Builds without errors and works well.\n\n. Looks like there are some bug fixes in here. Are those specific to the new MDL2 behaviors for the CommandBar, or something we should be getting fixed in Fabric 3.0 also?\n. @wdo3650 Could you make a quick PR to bring those changes into master, or is there more work involved because of the differences with the MDL2 command bar?\n. The MDL2 icons aren't loading for me. Any ideas?\n\n. Have you seen the NavBar and CommandBar components? These are about to be merged together in Fabric 3.0, but should be what you are looking for if you need a horizontal bar that provides navigation options.\n. @battletoilet: Could you take a look at this one, as you'e worked the most on the new CommandBar?\n. This issue was moved to OfficeDev/office-ui-fabric-js#38\n. Approved! Looks and works great\n\n. Once PR #676 gets merged into master, you can merge master into this branch to resolve the build issues.\n. Approved \ud83d\udc4d \n\n. @tyrasm: Any preference on calling it a tail or beak? We can always merge this in and change the terminology later on.\n. Thank you for reporting this, @pkbullock. I'm also encountering a bunch of errors and warnings while running gulp on a fresh clone of the Fabric repo. Working on it now.\n. I was hoping this was somehow related to the Sass linting errors, but it doesn't appear to be. \n@battletoilet, could you take a look? I'm getting the same errors you see in the screenshot above, and it seems to be related to the timing of the build. If I manually create an empty dist/css/fabric.components.min.css file then the build proceeds past the first error, until it starts looking for another nonexistent file:\n\n. It's now failing in the Travis build also. There must have been a change to one of the NPM packages, where the latest version breaks.\n. Tracked down the issue to an updated version of gulp-header that was released on Friday. PR #676 has been updated to resolve this issue.\n. Fixed by #676 \n. Approved \ud83c\udf70 \nOnce the TypeScript error is fixed:\n\n\n. Thanks for catching that it was headed to the wrong branch. Makes sense to include in Fabric 4.0 along with the new icons.\n. Approved \ud83c\udf66 \n\n. Turns out that the white field I was changing to transparent was for a deprecated style. I've pushed some changes to remove this deprecated style.\n. Thanks for reporting this, @Rick-Kirkham. Showing and hiding a MessageBanner is essential functionality. We'll take a look at the JS and make sure that our documentation clearly shows how to accomplish this.\n. This issue was moved to OfficeDev/office-ui-fabric-js#28\n. As you probably saw, the ContextualMenu does support nested menus:\n\nUnfortunately we don't have an existing design pattern for an accordion-style ContextualMenu, or an accordion-style left nav like you show in the screenshot.\n. Approved \ud83d\udc4d \nGreat catch, thanks!\n\n. This issue was moved to OfficeDev/office-ui-fabric-js#27\n. The fonts should be loading within your add-in; this is one of the most common use cases for Fabric. I'm not familiar with add-in debugging. Is there a way to see the network requests?\n. Very strange. I'll see if I can find someone more familiar with add-ins who can help you with this issue.\n. This issue was moved to OfficeDev/office-ui-fabric-js#71\n. You'll want to check the z-index of the header div and compare it to that of ms-Dropdown-items. Then you can either increase the z-index of the dropdown or decrease the header until the stacking order is what you want.\n. I'll see if I can find someone more familiar with add-ins who can help you with this issue.\n. This issue was moved to OfficeDev/office-ui-fabric-js#70\n. Approved \ud83c\udf89 \n\n. Thanks for reporting this, @DwayneSmurdon. We'll get it fixed for our next website release.\nHere's a screenshot:\n\n. We have no timeline for this work but yes, we do want to get all of the documentation content (such as font styles, colors, animations, etc.) into the main Fabric repo. This will make it easier to contribute to the project's documentation and prevent bugs where we sometimes change Fabric and forget to update the docs.\n. This issue was moved to OfficeDev/office-ui-fabric-js#29\n. Accidentally copied over to Fabric JS. This is a Fabric Core issue. Reopening.\n. This issue has been moved into an internal system where we track work items for the documentation site.\n. Sorry, but I'm not quite clear on the issue here. Could you provide some more details on what you're trying to do?\n. Glad to hear that the dropdown is built and the styles are being applied correctly. What type of validation are you wanting the dropdown to have?\n. For Angular-related questions like this, you might want to try to ngOfficeUIFabric project. I'm afraid I don't know enough about Angular and form validation to help with debugging this.\n. Yes, they're using Angular 1.x. I just thought they might have some more insights into what you're trying to accomplish here, even if they don't have the exact code ready to use.\n. It sounds like this is a similar request to the vertical navigation bar we've had requested before. There are no definite plans to implement this, but we do have it on our roadmap as something we'd like to pursue.\n. This bug repros in Fabric 3.0 as well. If you set an onClick handler on a CommandButton, that handler is lost when the button is moved into the overflow menu.\n. This issue was moved to OfficeDev/office-ui-fabric-js#26\n. Approved with a minor comment. Built and tested locally and it looks/works great!\n\n. This issue has been moved into an internal system where we track work items for the documentation site.\n. Thanks for reporting this and providing the repro link, @dmitriyyepishin. We'll check in with our design team to see what the desired behavior is here and get it fixed.\n. Actually, it turns out that this is an issue with the ContextualMenu (which Breadcrumb uses) and has been reported before: #478. I'll close this one as a duplicate but want to assure you that we are looking into this.\n. An Accordion or TreeView component is on our roadmap but we don't have a definite timeline available right now. Could you send us screenshots of what you're trying to achieve? That will help us to ensure that we're designing a component that addresses your needs.\n. Looks like GitHub didn't grab the image from your email. Would you mind adding it directly in a comment on GitHub? Thanks\n. This PR uses a new icon that is not yet available on the CDN. It's not ready to merge until the CDN gets updated.\n. I've opened #738 to track the issue with the icon font missing the Blocked2 icon.\n. The strange part is that whether the path is ../../ (2 levels up) or ../../../ (3 levels up) it seems to be finding the file either way. I'm not sure what's going on here. Were the styles not loading correctly for you, or you just noticed that the path seemed incorrect?\n. It must be some sort of caching issue. As far as I know this has been building and working for everyone on the team. Thanks for noticing the issue!\n. Approved \ud83d\udc0e \nI pulled down your branch and built it, and confirmed that this is working correctly. The strange thing is that it seemed to be working fine before, even if the path was technically wrong.\n\n. This issue was moved to OfficeDev/office-ui-fabric-js#25\n. This issue was moved to OfficeDev/office-ui-fabric-js#24\n. We've received this request many times before and I've added it to [our roadmap] as something we'd like to include in a future release.\n. Approved \ud83d\udd11 \n\n. The Travis build passes and I've tested this locally. Merging it in.\n. This issue was moved to OfficeDev/office-ui-fabric-js#21\n. This issue was moved to OfficeDev/office-ui-fabric-js#22\n. This issue was moved to OfficeDev/office-ui-fabric-js#23\n. Approved! Tested it locally all three issues are fixed. Nice work.\n\n. Thanks for reporting this @manndave, I can see how it would be confusing to have just those files. Those were leftovers and I've opened PR #715 to remove them.\nIn the dist/components/* folders you'll find a JSON file describing the component, its SCSS styles, and a Handlebars template that is used to generate the HTML. This closely matches the src/components/* folders, with the difference being that they also include TypeScript files where necessary. In src/documentation/pages/* we have a folder for each component, with JS files to specify the props that are passed to the Handlebars components at build time.\nOver in dist/documentation/Components/* you'll find a single HTML page that documents that component. This is what you see when you gulp watch and go to http://localhost:2020 and the body content of these pages is pulled directly into the Fabric website.\nI'll close this issue for now, but please let us know if you have any other questions or see something that doesn't look quite right.\n. We're thinking that code samples would be copy-pasted from the documentation site. However, I don't know that we'll have those code snippets included in time for the 3.0 release this week. With the current build it's very hard to get the HTML for a given component \u2013 you'd have to actually view the HTML source within dist/components/*.\nI'll reopen this issue so that we can discuss our best quick fix for this. @battletoilet, thoughts?\n. This issue was moved to OfficeDev/office-ui-fabric-js#20\n. Closing this, as #714 has a more recent version of gulp-tslint\n. The build is failing (unexpected end of input errors) and it's not clear why, so I'm going to close this one off. We can try upgrading the tslint package later.\n. Should the message colors be included in the palette at all, or just used in specific components? These are our only semantic colors.\n. We'll continue to include variables and mixins that can be used in other components (like MessageBanner) but we don't see strong reasons to add these to the CSS classes and document them. They are almost always used within specific components.\n. Yes, this includes the code snippet for Breadcrumb but the others haven't been added yet.\n. Approved\n\n. Approved and merged\n\n. This issue was moved to OfficeDev/office-ui-fabric-js#19\n. Our current site is a bit confusing here \u2013 the JS that you see on the pivot's documentation page is actually the jQuery plugin that's included with Fabric. It's not the code you need to wire up an actual Pivot in your project. For that you'll want to follow the pattern you see on our main component page.\nIf you have any trouble please feel free to post a JSFiddle or similar and I'll help you debug it. You can also email me internally.\n. This issue was moved to OfficeDev/office-ui-fabric-js#18\n. This issue was moved to OfficeDev/office-ui-fabric-js#17\n. This issue was moved to OfficeDev/office-ui-fabric-js#16\n. This issue was moved to OfficeDev/office-ui-fabric-js#15\n. The build succeeds (as can be seen from the Travis tests) and I tested it locally. Merging in.\n. Which version of Fabric are you seeing this in? It should have been fixed by PR #607.\n. Okay, looks like this issue has been fixed and will be included in the Fabric JS 1.0 release.\n. This issue was moved to OfficeDev/office-ui-fabric-js#14\n. Unfortunately, none of the Fabric components support right-to-left (RTL) languages at this time. I've added your request to our roadmap as something we'd like to include in a future release.\n. Approved \ud83d\udeb6 \n\n. This issue was moved to OfficeDev/office-ui-fabric-js#13\n. Given that all of the PRs that went into the MDL2 branch were reviewed and approved, I've tested this branch locally and all looks good, and the Travis builds are passing, I'm going to go ahead and merge it in. \ud83d\udcaf \n. This issue was moved to OfficeDev/office-ui-fabric-js#12\n. Approved\n\n. With the components moving to the Fabric JS repo, there's no need to update gulp-tslint here.\n. This issue was moved to OfficeDev/office-ui-fabric-js#11\n. This issue was moved to OfficeDev/office-ui-fabric-js#10\n. This issue was moved to OfficeDev/office-ui-fabric-js#9\n. I'm not sure why PullApprove isn't working on this PR. It must know that this is a zero-risk PR that is fine to go ahead and merge. \ud83d\ude09 \n. Great catch, there should be a chevron there like so:\n\n. This issue was moved to OfficeDev/office-ui-fabric-js#8\n. This issue was moved to OfficeDev/office-ui-fabric-js#7\n. Cancel that, we already have an MDL2 Icons page I somehow missed.\n. Wow, thanks @battletoilet! I agree that we should take out the samples as well, since those are really to demonstrate the components. As part of the site updates we can look into having demonstration pages (for colors, icons, etc.) as part of this repo, which could then be pulled into the site. But for now it's best to keep it simple.\n. Approved \ud83d\udeb4 \ud83d\udeb4 \ud83d\udeb2 \ud83c\udfc3 \n\n. This package is no longer used in Fabric Core. Closing the PR.\n. This may break some of our components, and other apps built with the icons, where adjustments have been made to padding/position to account for the icon's line height. Talking with @philworthington, I'm now not sure it's worth introducing breaking changes for this.\n@Jahnp, thoughts?\n. These changes were already made on the release/3.0.0 branch, so the packages were all published just fine. We used to cherry pick those commits directly back onto master but now that we have master protected, all changes have to be made via a pull request like this one. No need for a patch release. \ud83d\ude04 \n. Approved\n\n. Before we can merge this we need to update the classes (e.g. .ms-font-m) to include color, even though the mixins will not include these colors.\n. I thought we agreed that these colors are useful to help developers quickly style body text, and that we want to encourage them to use the correct color?\n. Although now that I'm seeing concerns from SharePoint where these classes aren't compatible with theming, maybe we do want to remove the color after all. We should just consider recommending the standard text color somewhere in our documentation.\n. Approved! Thanks for the discussion here. \ud83d\ude04 \n\n. @dzearing, could you merge in the latest changes from master and then merge in this PR? Thanks!\n. I'm also not sure that baking in a default color (which is the same for every size on the type ramp) is useful. Including the weights make sense because we provide a recommended weight for each size, but with color it depends so much on context that you do end up overriding it often.\nTo avoid applying a color you can always use ms-fontSize-s ms-fontWeight-regular (or the mixins), but you lose the convenience of combining the weight and size together.\n. We just discussed this in a design meeting and determined that the default color should remain in the CSS classes (e.g. .ms-font-xl). These classes are intended to help developers quickly style body text, where the default color is part of the design language.\nIt makes sense that, when building components, you'd want to use a mixin that applies the font-size and font-weight \u2013 two properties that are almost always found in the same combinations \u2013 without including a color.\nThat mixin would allow you to replace:\n.MyComponent {\n  font-size: $ms-font-size-xl;\n  font-weight: $ms-font-weight-light;\n}\nWith:\n.MyComponent {\n  @include ms-font-xl;\n}\nIt's not a huge reduction in code, but it does help you to pick what is almost always the right weight for a given size.\nOne thing to be careful of with this approach is, when choosing a different weight, to make sure the @include always comes before any overrides. Otherwise you can have:\n.MyComponent {\n  font-weight: $ms-font-weight-semibold; // Override font weight\n  @include ms-font-xl;\n}\nEssentially output the result of this:\n.MyComponent {\n  font-weight: $ms-font-weight-semibold; // Override font weight\n  font-size: $ms-font-size-xl;\n  font-weight: $ms-font-weight-light;\n}\n. This looks fine on both Chrome and Safari on Mac, so it does seem to be related to the add-in frame in Outlook. Could you open this issue in the Fabric JS project, where the Command Bar is now located?\n. Approved\n\n. Approved \ud83d\udc0e \n\n. Closing, as we have these same changes in PR #775.\n. Approved\n\n. Approved \ud83c\udf34 \n\n. Approved (most of the work here was Eric's) \ud83c\udf89 \n\n. Approved (from John) \ud83c\udf17 \n\n. Approved \ud83d\udc58 \nIf we can get a second approval quickly, I'll include this in the 3.1.0 release.\n\n. Approved\n\n. Fabric Core has been updated with these new icons, but our website is currently out-of-date and showing the old icon set. To view a list of the icons in our latest version see this SCSS file.\nAs for right-to-left support, only icons that are 'directional' will be flipped. So an arrow that originally pointed to the right would now point left, but the letter W would remain the same. You can see this example where we flip the arrows, while leaving the tag icon the same.\n\n. Approved, this looks really great!\n\n. Approved\n\n. I'm not able to repro this in Safari for macOS, but I do see the issue on Safari for iOS:\n\nI tried inspecting my iPhone using Safari on macOS, but it's not working. Apparently, it could be because I'm not using an official Apple cable? \ud83d\ude29  I'll try again when I'm at home. There must be something unique about this web app because the icons load fine on the Fabric website and in other apps.. @Vivihung Were you able to solve this issue?. I have no idea what changed there, but I'm glad to hear it's working. \ud83d\ude04 . Approved \ud83d\udc9b \n\n. Yes, @simkessy, Fabric provides styling for the Pickadate date picker.\n. Approved \ud83d\ude97 \n\n. Approved! This looks great \ud83d\udc4a \n\n. We do have one icon that can't be mirrored, as the content is different between LTR and RTL:\n\nThose icons are named BidiLtr and BidiRtl. We'll need to swap the content something like this:\n.ms-Icon--BidiLtr::before { @include ms-Icon--BidiRtl }\n.ms-Icon--BidiRtl::before { @include ms-Icon--BidiLtr }\n. Approved, thanks!\n. Approved \ud83d\udc30 \n\n. Fixed by #828, and the new icons are on the CDN now\n. Approved\n\n. Approved \u270f\ufe0f \n\n. Approved\n\n. Thanks for reporting this, @sjclemmy. We're investigating and will get the site back up and running as quickly as we can. In the meantime your best option is to build the Fabric JS website locally. Sorry for the inconvenience.\n. The issue has been resolved and the site is working well again. \ud83d\ude04\n. Unfortunately, due to licensing constraints we can't provide a copy of the Segoe UI web font. It must be referenced from the CDN. Are you also referencing Fabric Core (fabric.css) from the CDN? Or just the font?\n. Thanks for bringing this to our attention, @vivmaha. If you have a solution that's working we'd love a pull request into the Fabric JS project. \ud83d\ude04 \n. Approved\n\n. Approved\n@Jahnp If your PR is going to fix this issue, could you make sure it also updates this doc? Thanks!\n\n. Approved. This is a great idea, as developers can override variables without actually modifying Fabric itself.\n\n. A new icon, PageCheckedIn, was included in #828. This will be part of the next release of Fabric Core which is expected out very soon.\nHere's what it looks like:\n\n. Approved\n\n. Approved!\n\n. Approved. Thanks @lijunle!\n\n. I'm not having any trouble scrolling through the dropdown items. Here's a screen capture:\n\nThe page scrolls once I've reached the top or bottom of the dropdown, but until that point the dropdown scrolls correctly.\nCould you provide a screen capture of what you're seeing, or describe in more detail?\n. I'm going to go ahead and close this issue as we're not able to repro it. Please reopen the issue if you have more details to help us troubleshoot this.\n. I've opened a new issue in the Fabric JS repo and assigned it to myself to investigate: https://github.com/OfficeDev/office-ui-fabric-js/issues/271. Which icon in particular from there are you looking for something similar to?\n. I'm going to close this issue for now, as we haven't heard back.. @Jahnp Thanks for catching that! I had them in an earlier commit and then lost them. They're back in now.\n. Approved\n\n. Approved\n\n. Approved\n\n. Agreed, I prefer camelCase as well and it's what we use throughout Fabric.\nMy suggestion is:\n- start every mixin with the ms- prefix for safety\n- if the purpose of a mixin is to output a class, match the mixin name and capitalization to the class (e.g. @mixin ms-Grid produces ms-Grid, @mixin ms-u-borderBox produces ms-u-borderBox)\n- if the mixin is used internally and does not produce a class directly, give it a simple camelCase name (e.g. ms-brandIconClasses)\n. I've changed the title to reflect that we also have inconsistent variable names. For example ms-font-size-m and ms-color-neutralLight. While we're introducing breaking changes, it's a good time to clean this all up as well.. A few mixins have been renamed in #868, but I'll be doing most of this in another PR. The remaining work is to:\n\nPrefix any global variables, mixins, animation keyframes, etc. with ms-. This will prevent Fabric conflicting with existing styles.\nName variables and mixins in a consistent way.. Approved\n\n\n. Approved\n\n. This isn't something we've discussed. Are you wanting to contribute to the documentation? \ud83d\ude04 \n. We've received requests for a TreeView/accordion component. Would that be equivalent to the ExtJS TreePanel you mentioned? Are you looking for this component in Fabric JS or Fabric React?\n. Closing as we haven't heard anything in the last month. Please feel free to re-open this if you have more details on what you'd like.. Thanks for reporting this, @ichpuchtli. The DatePicker example you see on the Fabric website is from the Fabric React project. There's an open issue there for this.\n. Approved. Wouldn't usually approve my own but have another PR to make that depends on this change being merged first.\n\n. Approved \ud83c\udf4f \n\n. Approved\n\n. Closing as we now have a PR to update to 7.0.1.. Approved \ud83d\udc9a \n. Not sure what PullApprove has against Peter. It doesn't seem to be recognizing his approval here.. Related issue that was opened for Fabric React: How can I avoid usage of fonts which have an MIT license?. To support Fabric being used without a CDN we're going to:\n\nProvide documentation on overriding the root font-family to one that uses only system-installed fonts, or web fonts hosted on your own server.\nDiscuss with our legal team the possibility of allowing you to host a copy of the Segoe UI web font on your own server.\n\nTo allow the use of Fabric in non-Office scenarios not covered by the assets license we're going to:\n\nProvide documentation on overriding the root font-family to use another font. This could be a system-installed font, a web font on your own server, or a web font from a service like Google Fonts or Typekit.\nInvestigate adding support for Selawik into Fabric and hosting this on our CDN.. Replacing the icon font will be more challenging, as it likely contains many icons that aren't in the open source alternative. We're going to investigate this but don't have a definite plan here yet. At a minimum, we should document how to substitute the font and replace specific icons.. I've narrowed this issue specifically to adding Selawik as a built-in alternative to Segoe UI. A new issue (#871) has been created to cover documenting how to override the base font-family to avoid pulling Segoe UI from the CDN as usual.. To follow up on an earlier comment, we've clarified with our legal team that the Fabric assets (Segoe UI web font, icon font, and brand icons) can be hosted on your own server. However, the terms of the license still apply so you must use these \"for the purpose of developing for Office and other Office 365 endpoints including, but not limited to, Office Add-ins, SharePoint Web Parts, SharePoint Apps, and Custom Office 365 apps\". If you are developing an app that falls outside of that scope, you must use an alternate font and icon set.. @CrmDev23 Yes, they can. The assets license covers \"Office and other Office 365 endpoints including, but not limited to, Office Add-ins, SharePoint Web Parts, SharePoint Apps, and Custom Office 365 apps\". While I'm not a lawyer, that should clearly cover Dynamics. :). @lijunle: A selector of .ms-Fabric.is-focusVisible .myButton will target that button as a direct child:\n\n<div class=\"ms-Fabric is-focusVisible\">\n  <button class=\"myButton\">One level</button>\n</div>\nand as a grandchild anywhere else:\n<div class=\"ms-Fabric is-focusVisible\">\n  <div class=\"container\">\n    <div class=\"buttonArea\">\n      <button class=\"myButton\">Two levels</button>\n    </div>\n  </div>\n</div>\nMaybe you're thinking of a child selector like .parent > .child? Are you seeing any issues in production with this?. Can you show me an example of this not working? Unless you're trying to focus the .ms-Fabric div itself, which it doesn't look like you are, then I don't see why the mixin wouldn't work on any child.. Ahh, I see now. Sorry for the misunderstanding. Do you need to combine ms-Fabric with your container? It was intended to be a top-level wrapper for the app that wouldn't have other classes applied. Separating it out would solve this issue.\nThe other option would be to update your SCSS to:\n.row {\n  button {\n    @focus-border();\n  }\n}\nWrapping it in .container introduces more specificity than you need, right?. Sorry for the confusion here, our layout documentation is indeed missing both of these concepts. To answer your questions:\nNested grids\nYou can nest ms-Grid-row (with however many columns) inside of ms-Grid-col. For example:\n<div class=\"ms-Grid\">\n  <div class=\"ms-Grid-row\">\n    <div class=\"ms-Grid-col ms-u-sm6\">6 columns</div>\n    <div class=\"ms-Grid-col ms-u-sm6\">\n      6 columns, containing another 12-column grid\n      <div class=\"ms-Grid-row\">\n        <div class=\"ms-Grid-col ms-u-sm4\">4 columns</div>\n        <div class=\"ms-Grid-col ms-u-sm8\">8 columns</div>\n      </div>\n    </div>\n  </div>\n</div>\nColumn offsets\nYou can use classes in the form of ms-u-[breakpoint]Offset[columns] to push columns to the right. For example:\nms-u-smOffset3 to push a ms-Grid-col right by three columns on small screens and up\nms-u-lgOffset6 to push a ms-Grid-col right by six columns on large screens and up\nI'll close this issue for now, but please respond back or open an issue if you have any other questions at all.. Actually, re-opening this issue to be sure that we get the website updated with better documentation here. \ud83d\ude04 . I've opened an issue in the Fabric React project, which also contains the website that documents Fabric Core.. Re-opening the issue here. While the PR will be made in Fabric React (that repo contains the website) we're going to keep the issues alongside the project.. Approved \ud83c\udf2e \n. The updated icon font has been deployed to the CDN, so we're good to merge this as soon as it gets one more review. \ud83d\ude04 . Approved. I'm starting to wonder if we should make tags on master (like Fabric React) rather than a branch for each release.\n. Approved\n. Approved. Thanks, @greenkeeperio-bot!\n. I'll be working on this while cleaning up the variables/mixins structure (#349).. Decided against this. There's very little repeated code, and it makes the source and build process far easier to understand if the RTL styles are just \"LTR plus overrides\".. After a closer look, this is the same ask as #382. Closing this as a duplicate.. @micahgodbolt: So your preference on file names would be _Animation.Variables.scss, _Animation.Mixins.scss, and _Animation.scss? I can get behind that. \ud83d\ude04  Beats having identical file names and having to rely on the folder to know which is which.. @micahgodbolt @Jahnp: I'd also like feedback on _References.scss, which used to be _Fabric.Common.scss. Is the name an improvement? My concern was that \"common\" suggested these were popular parts of Fabric, when it's just imports for all of the variables and mixins.\nWould it make sense to see something like @import 'office-ui-fabric-core/References'; at the top of an SCSS file?. @Jahnp: The underscore in Sass/SCSS indicates a partial, which is any file that is included by others and doesn't directly output a CSS file. Our build system doesn't care about the underscore, so it really makes no difference, but I wanted to follow this convention that others might recognize. It's also used by Bootstrap and Foundation.. I've updated the variable and mixin file names to include their type (e.g. _Responsive.Variables.scss).. @Jahnp: I'm not strongly against \"Common\", I just preferred \"References\" a bit more. It will be a breaking change in any case because the old files were all prefixed with \"Fabric\", so it's a good opportunity to change the name if we want to.. PullApprove is still complaining about Tom and Eric not being valid reviewers, even though I've removed them and updated .pullapprove.yml to the latest format. Hopefully getting another reviewer will make it refresh. If not, I'll temporarily disable the status checks and force this through to see if it resolves the issue.. These aren't being used in Fabric JS or Fabric React. As we've done with similar issues recently (see #1034 and #1035), I'm going to go ahead and remove these. . Sure is! Fixed by #910 . Looks really good! A couple small to-dos:\n\nAnimations (the @keyframes, not the classes) are not scoped. Do we want to scope them by appending the version number (e.g. @keyframes slideRightIn10--v5-1-0)?\nWe need to get the scoped icon fonts (e.g. fabricmdl2icons-5.woff2) on the CDN before this is released. I've added the waiting-to-merge label. Want me to get those onto the CDN and update our icons release process?. Approved! \ud83c\udf89  \ud83c\udf89  \ud83c\udf89 \n\n. Removed the 'waiting-to-merge' label, as the scoped icons for v5 are now available on the CDN.. After discussing we're going with option 2. Any class that is not a component (e.g. ms-Grid or ms-Icon) is a utility, so there's no need to distinguish these with the \"u-\" prefix.. Hi @lcawkell, it looks like you're having this issue with Fabric React. Could you report it to the Fabric React issues? Thanks!. Closing this for now as it's not being actively worked on.. We haven't deprecated undocumented functionality like this in the past. I couldn't find \"zIndex\" anywhere in Fabric JS or Fabric React, so they should be safe to remove.. Approved \ud83d\udc4d \n. This seems to be caused by the use of @content in Fabric.Scoped.scss. When I comment out the call to @include scope-fabric I'm unable to repro this issue.\nOthers seem to have had luck with downgrading NPM packages so I'll take a look at the gulp-sass package and see if any changes there could be the culprit.. After forcing an updating to gulp-sass 3.1.0, I've now run 10 builds without any errors. It's hard to know for sure if this fixes this issue as it was intermittent, but we should be using the latest version anyway so I'll submit a PR.. Selawik is now on the CDN! Removing the 'waiting-to-merge' label.. Would you primarily be interested in text styles and colors, or in components (e.g. radio buttons, dropdowns)?. Thank you, I've added your request to the Trello board where we track potential new features and resources: https://trello.com/c/qIUxUpOa. Unfortunately, it's not as simple as adding \"to\" because that changes the direction:\n\nIn order to keep the existing parameters and not introduce a breaking change, we need to swap directions within the mixin (e.g. left becomes right). This way the result matches our current mixin:\n\nThis can all be seen in the CodePen demo.\n. @mdahamiwal Sure, send me an email or IM and I can take a look.. There is now an Adobe XD toolkit available on the Resources page: https://developer.microsoft.com/en-us/fabric#/resources. The latest icons are now on the CDN.. The Headset icon was added in PR #858, which was included in the 5.1.0 release. Once you update to that version or newer, the ms-Icon--Headset class should work as expected. \ud83d\ude04 . Seems that this has been resolved outside of GitHub and, in any case, it should be filed under Fabric JS or Fabric React if it is an issue. Closing.. Approved\n. While we generally don't support the components from 2.6.x releases of Fabric \u2013 please see the Fabric React and Fabric JS projects for supported component sets \u2013 we made an exception in this case and released version 2.6.3 with a patch for that issue. \ud83d\ude04 . Fixed by #923 . Approved, thanks!\n. This is a design tradeoff between showing as many icons as possible and ensuring their names are readable.\nBy showing only the name of the icon you're hovering over, we have room to display the name:\n\nWhereas if we were to show the names at all times, we end up with overlapping names:\n\nThe full class name is not used for the React components, which typically take iconName as a prop. Including it would also cause more layout issues due to the limited space:\n\nOne solution we've considered is that clicking on an icon could copy the name (or possibly the full class name) to the clipboard. To make this discoverable we'd need a copy icon next to the name, something like this:\n\nThen it's a question of where best to place this icon and whether its purpose is clear. We don't have plans to revisit this right now, but now that the Fabric website is open source (GitHub) we'd certainly welcome a pull request and could run it by the design team.\n. Hi @kunshao-msft, the ngOfficeUIFabric project is a community effort outside of Microsoft and I'm not certain of their plans to support Angular 2. Try asking over there and I'm sure they'll be happy to discuss. \ud83d\ude04 . The Fabric Assets License applies only to the assets on the CDN, such as the web font. It doesn't cover the locally-installed copy of Segoe UI that you'll find on most Windows machines or via an Office install. So while usage of the web font is restricted to developing for the Office ecosystem, any developer can use font-family: 'Segoe UI'; to use the local copy of Segoe UI in their web application. With this in mind, we've kept the local version of Segoe UI in the font stack even when Selawik is used.\n. That's great news, @manndave, please let us know when it's published! \ud83c\udf89 . I haven't been able to repro this issue. Could you try this CodePen and let me know if you see the problem there?. There seems to be something going on with CodePen's editor view that prevents the media queries from applying. If I change the view to full page then everything is working as expected:\n\n\nIs this problem showing up within an app that I could take a closer look at? I'm not sure what could be going wrong here as the media queries for these classes are very simple.. At 1365px could you inspect the hamburger element and see what the applied styles are? You should see:\n. I'm going to close this issue for now as I'm not able to get a repro. Please reply back with more details if this continues to be a problem.. Hi @kopgenorth, Fabric Core no longer contains components like the DatePicker. Could you file this issue under Fabric JS or Fabric React? Thanks!. Approved\n. Approved\n. A new icon, TeamsLogo, has been added in #946 and will be included when Fabric Core 7.0.0 is released.\n\n. Good catch, @Danny-Engelman, I'll submit a new PR to fix this and will raise the issue with our icons team to make sure it doesn't sneak into a future release.. Opened #951 to fix the capitalization issue.. Good point, @htryggva. I'll re-open this to see if we can get SVG and PNG resources added to the Office brand icons.\nThere is a TeamsLogoFill icon that seems to be meant to solve this issue. You can layer it under TeamsLogo like so: https://codepen.io/mikewheaton/pen/qKbzzE\nBut it doesn't look right:\n\n. Please add this to the Fabric React issues list. Thanks!. Approved\n. That's strange, it's working for me:\n\nCould you try clearing your cache and reloading the page? We made some updates to the website recently and it's possible that something got mixed up there.. We've identified some strange caching issues with the site that @battletoilet is working on resolving now. It's possible that I'm the one getting the cached version, and you're seeing the latest. Sorry for the confusion here, we're working on a solution and in the meantime would appreciate any information that helps us repro this.. Approved, thanks @Hongbo-Miao!\n. As @Danny-Engelman mentioned, the CDN we use is now hosted by SharePoint. Here are the URLs you're looking for:\nhttps://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/2.6.1/css/fabric.min.css\nhttps://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/2.6.2/css/fabric.min.css\nhttps://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/2.6.3/css/fabric.min.css. Approved\n. #949 should fix the failing build here.. That's odd, now there's an error with tslint. I'll investigate more tomorrow.. Builds are succeeding just fine without this. Not sure why. Closing the PR.. We can also add in shared high-contrast colors, such as these that are defined for the Fabric website:\n$high-contrast-blueBG: #0000c0;\n$high-contrast-purpleBG: #37006e;\n$high-contrast-cyan: #1aebff;\n$high-contrast-yellow: #ffff00;\n$high-contrast-green: #3ff23f;. @kristoferbrown Can you point me to the latest place where you've worked on high-contrast colors for Fabric React?. Approved\n. Found a better option. If we define a new @font-face for local Segoe UI, we can ensure that IE/Edge use semilight like so:\n@font-face {\n  font-family: 'Segoe UI Local';\n  src: local('Segoe UI Semilight');\n  font-weight: 300;\n  font-style: normal;\n}\nThis means we can have a single font-family, Segoe UI Local, which selects the correct font based on the font-weight. Systems that don't have a local copy will fall back to the web font, which will be included next in the font stack like:\nfont-family: 'Segoe UI Local', 'Segoe UI Web (West European)';\nThe only remaining problem is Chrome on Windows, which will incorrectly use the local copy of Segoe UI with light instead of semilight. I don't see a way to target semilight specifically (we no longer have a separate class for each weight) but we can use a CSS hack to target Chrome and prevent it from using the local font:\nbody:not(*:root) {\n  font-family: 'Segoe UI Web (West European)';\n}\nHere's a CodePen of the final result. I've also added a grey background color whenever the browser hack is in use. It's working well across our browser matrix. The only unfortunate part is that Chrome and Opera won't use local fonts, even for the weights that could work. I don't see a way around this without completely changing how we deal with font families and weights. While not perfect, it's still a performance improvement over using the web fonts everywhere and doesn't add a lot of complexity.. We've decided to go with the approach in #966 for now, as it's the safest way to ensure that the correct fonts are shown. We'll be investigating methods of loading local fonts in our products and will bring that functionality back to Fabric when it's been tested thoroughly in production.\nWhile this approach worked in simple scenarios, we're concerned that it will conflict with others like language-specific font stacks and custom font-family overrides because the CSS hack relies on specificity. We also haven't had a chance to thoroughly test this approach in real products, and we'd rather err on the side of caution (even if performance takes a small hit) than risk breaking basic functionality like showing the correct font weight.. We've decided to go this route for now, as it's the safest way to ensure that the correct fonts are shown. We'll be investigating methods of loading local fonts in our products and will bring that functionality back to Fabric when it's been tested thoroughly in production.. Reviewed in person with @Jahnp.. Hi @dsimoes, would you mind opening this issue in the Fabric React repo? Thanks!. We're not likely to be able to fund this ourselves, but we encourage and promote community projects such as ngOfficeUIFabric. If there are any questions about the colors, fonts, icons, etc. that come up we'd be happy to help, and we'd consider PRs into Core that make it easier to consume for your project. Let us know how we can help.. I'll close this for now, as there's no action item on our end. Feel free to open issues whenever you have questions, or to reach out to us via Twitter.. Approved\n. These might not be exactly what you're looking for, but \"TextDocument\", \"FileHTML\", and \"FileCode\" may be suitable for your needs:\n\n. Approved\n. To be clear, I'm not a lawyer and my interpretation of the license is as good as yours.\nThe license states that the assets (such as the Segoe UI font and icon font) can be used \"for the purpose of developing for Office and other Office 365 endpoints including, but not limited to, Office Add-ins, SharePoint Web Parts, SharePoint Apps, and Custom Office 365 apps\" (emphasis mine).\nDoes this app tie into SharePoint services or anything else in the Office ecosystem? When someone is using it, do they get that it's another way of interacting with that web part? Again, I'm not a lawyer, but my understanding is that it's intended to cover anything even loosely related to Office.\nTo be completely safe, you could substitute your font and icons, as the rest of the project is completely open source under an MIT license. But I suspect that your usage would be fine if this is a companion app/view to an existing web part. I hope that helps.. There sure is! We're working on an icon subsetter, which will allow you to select the specific icons your application needs rather than requesting the full set. Right now we're getting this set up for internal projects and we hope to be able to share it externally after that.. The icon fonts can now be downloaded from the Resources page: https://developer.microsoft.com/en-us/fabric#/resources. In your build system you could inspect package.json. Once it's built and running in the browser, I think you'd want to dig in to fabric.css and look at the top comments, which take the form:\n/* Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information. */\n/**\n * Office UI Fabric Core 7.0.0\n * The front-end framework for building experiences for Office 365.\n **/\nYou could also try using one of the classes on an element and then inspect the applied styles to see if it's present or not.\n. When you use NPM to get Fabric Core, the file you are looking for is dist/sass/_References.scss:\n\nYou can import this into your own SCSS file, which will give you access to all of the variables and mixins in Fabric Core. For example:\n```\n@import '../path/to/dist/sass/_References';\n.myComponent {\n  background-color: $ms-color-darkRed;\n  color: $ms-color-white;\n}\n``\n. The fonts have been deployed to the CDN and tested locally.. I'm not sure how to open the.harfile from the network capture. Can you open the developer tools and see whether the web font is being downloaded from the CDN? I suspect that the font is being blocked by a security policy or something.. So there's no request for the icon font (should be a.woffor.woff2file) here at all?. Could you check if the feature to 'block untrusted fonts' is enabled? See [this article](https://docs.microsoft.com/en-us/windows/threat-protection/block-untrusted-fonts-in-enterprise). If you use Outlook's web app or try a site like [Font Awesome](http://fontawesome.io/), do the icons show there?. Good to hear!. This [answer on StackOverflow](https://stackoverflow.com/questions/5680013/how-to-be-notified-once-a-web-font-has-loaded) could be a place to start. I'm not familiar with the CSS font loading API, but there should be a way to detect when fonts load and compare that to the expected result.. @mdahamiwal Thank you for fixing this. This will be included in Fabric Core 7.1.0, which I'll release today.. The new files are deployed to the CDN and I verified with a local build that all of the new classes are working. Ready to merge.. Fabric Core doesn't have the ChoiceGroup component. If you open an issue on [Fabric JS](github.com/OfficeDev/office-ui-fabric-js) or [Fabric React](github.com/OfficeDev/office-ui-fabric-react) (whichever you're using) they'll be able to answer your question.. This has now been fixed: https://developer.microsoft.com/en-us/fabric#/styles/animations. I don't think our license allows for distribution of SVG versions of the icons. @Jahnp may be able to confirm this, as he's been involved with recent license updates.. Hi @ericnnguyen, I believe the icon name you're looking for is \"PlannerLogo\". Here is a CodePen showing that icon in use: https://codepen.io/mikewheaton/pen/mMpQdJ. Hi @casvaniersel, as of [Fabric Core 6.0](https://github.com/OfficeDev/office-ui-fabric-core/releases/tag/6.0.0) the font family is set using thems-Fabric` wrapper component like so:\n<div class=\"ms-Fabric\">\n    ... your app goes here\n</div>\nThis makes it possible to provide options like the ms-Fabric--selawik class, which will update all of the text within your app to use the Selawik web font as an alternative to Segoe UI. It also allows you to use a custom font in your application with a single override, rather than having to target every ms-font-[size] class independently.. We're working on some big updates to the documentation site now. Apologies that we're so behind here.. This could be a good request for the Fabric React project, which includes the documentation website. Could you open it there?. Version 2.44 of the icon font has now been released. Updating this issue name to reflect that.. The Office UI Fabric project has been deprecated. It was split out into Office UI Fabric Core and Office UI Fabric JS. So you should remove office-ui-fabric from your package.json. Sorry for the confusion here!. Could you detail the updates (new icons, removed, renamed, etc.) in the top comment for this PR? Then in the release notes, we can point to this PR for details on what's changed. Thanks!. Please post this in the Fabric JS project.. Please post this in the Fabric JS project.. Thanks for the PR, @Koopakiller! I merged Peter's PR before realizing this was here, and you both had the same changes. Sorry about that. So I'm going to close this PR but please don't hesitate to submit another if you see anything wrong. \ud83d\ude04 . I reached out to the team who creates the icons and, while there may be a couple exceptions, the general distinction is that:\n- Solid indicates an icon that is to be used on its own. These are often paired with a monoline version so that you can toggle between one and the other to indicate a state change. It is the same size as the monoline version.\n    \n- Fill indicates an icon that's intended to be placed behind another icon, to fill in portions of the top icon. By combining two icons you can create a multi-color icon. These are 0.5px smaller than the top layer to prevent color bleed.\n    \n\nHope that helps!\n. @lynamemi: I forgot about the OneNote; I'll get that updated tomorrow. \ud83d\ude04 . Turns out this was a duplicate of #864 . Version 2.51 is now available.. Thanks for reporting this, @austin-best. A fix has been made and a new version of Fabric Core will be released today.. Hi @Leif-Frederiksen, I just checked the master icon set that our icons are pulled from and unfortunately there's no CircleMinus or CircleSubtraction icon available.\nWhile not in circles, you could consider these options:\n\n\nOr you could use CSS to draw a circle around these:\n\n. There was a glitch with GitHub that caused #1040 to disappear for a few minutes. Closing this as a duplicate.. Have you added dir=\"ltr\" to the page? That's the most likely cause of the issue.\nI've created a CodePen with Fabric Core 9 to test the Grid and everything looks fine there: https://codepen.io/mikewheaton/pen/NaEPJX. Glad that worked! And not reading every release note puts you safely in the many, not the few. \ud83d\ude09 . I'm not sure who to contact about this error. Maybe try the 'Connect with an expert' option at the bottom of that page?. The CDN build is currently failing, so I haven't been able to verify that the new icons work yet. Don't merge for now.. Verified that all of the new icons are showing up with a local build.. That went smoother than expected! Here's a pen showing Selawik in use.\nNetwork requests:\n\nHow it looks:\n\n. Fabric Core doesn't contain any interactive components \u2013 maybe you meant to file this issue under Fabric React?. Hi @hesawant, looks like you meant to file this in the Fabric React issues. Could you please report it there?. You may want to consider the Fabric JS project, although this does not receive the regular updates that Fabric React does at this time.. I've opened an issue in the Fabric React repo (where the documentation lives) and assigned it to @lynamemi, as she's been improving this documentation recently. :). Closing this as it's an issue of the website being out-of-date, and not something to fix in Fabric Core itself.. This feedback has been passed along to the icons team.. Fabric Core doesn't have components. Did you mean to open this issue on Fabric React?. Please open this issue in the Fabric React repo, as the MessageBar is part of the React components set. Thanks!. Fixed by #1087. The PDF icon will be available in the next release of Fabric Core.. @nero120 Fabric React contains copies of some of the Fabric Core styles, but it doesn't appear to include the brand icons. If you add a separate reference to Fabric Core you should be able to use the icon. See this CodePen for an example.. I didn't realize that Fabric React contained a copy of Fabric Core. I had tried creating a CodePen with Fabric React and the brand icons weren't working, but it was because I didn't have the second reference to Fabric Core (from within Fabric React's dist folder) that's needed.. Sorry for the confusion here, but the repo you're looking for is Fabric React. Please post your question there and someone should be able to assist.. Updating the title, as 2.67 is now available.. Updating again, as 2.68 is available.. You'll find a full list of the available icons in icon.json.\nThis will show the latest icons by default. To view icons that were available in a specific release, you can search for a specific branch like release/4.0.0:\n\n. I've verified that the CompanyDirectory icon isn't working: https://codepen.io/mikewheaton/pen/MQpJVM\nIt seems like it may have been added to the tool we use to generate icon classes, but not the font itself. I'll look into this.. The CodePen example uses Core 9.2.0, which included version 2.55 of the icon font. This should have been where CompanyDirectory was first added. The latest release, Core 9.4.0, uses version 2.64 of the icon font.. One thing I've noticed is that in recent versions of Fabric, the icon tool we use has been outputting an encoded character rather than the ASCII code.\nIn version 7.0.0:\n.ms-Icon--BranchFork::before {\n  content: '\\F173';\n}\nIn 9.2.0:\n.ms-Icon--BranchFork::before {\n  content: '\u00ef\u2026\u00b3';\n}\nI can't explain why only this icon is affected, but it may be related. It's clearly in the icon font because it works in @Danny-Engelman's icon tool.. It turns out to be a simpler issue. The CompanyDirectory icon has a corresponding CompanyDirectoryMirrored icon, for use in pages displayed in right-to-left (RTL) languages. So the CompanyDirectory class only works if the dir attribute has been set on the page:\n<body dir='ltr'> ...left-to-right content... </body> \nI've updated the CodePen from earlier to demonstrate that it's now working as expected: https://codepen.io/mikewheaton/pen/MQpJVM. FinancialSolid is a directional icon, with both a left-to-right and right-to-left version. To know which one to display, Fabric relies on the dir attribute being set on a parent element. Here is a fixed version of your example with the attribute set.. DeleteRows is a directional icon, with both a left-to-right and right-to-left version. To know which one to display, Fabric relies on the dir attribute being set on a parent element. See this CodePen for a working example.. @petrot Happy to help! \ud83d\ude04 Let us know if you run into any other issues.. Good catch. We have the variables defined, but no mixins or classes.. @lynamemi Thanks! I've assigned this bug to you. \ud83d\ude04 . @Jahnp Do you know if we could distribute a copy of the icon font in Fabric Core? I recall us getting legal clearance for developers to host these files themselves for offline/on-prem applications, but right now they have to sleuth around and use the network tools to locate the fonts on the CDN and download a copy.. I'll reopen this, as a reminder to add the fonts and license to this repo. That will make it easier for developers to deploy them to their own servers, as we've had questions before about where to get them from.. @sebastianbouckaert It looks like these are Fabric JS components. Could you open an issue there?. @lynamemi Purple is probably a more descriptive/common name to use. The names come from the color wheel segments shown below, so blue-magenta is used for consistency since it falls between blue and magenta.\n\n. Should have mentioned in the PR \u2013 I automated the generation of all class names, variables, and mixins. So there shouldn't be any little mistakes or omissions that snuck in. \ud83e\udd1e It's a ton to review.. Hi @mubash7, could you open this request in the Fabric React repo? Thanks!. Self-approving since there's nothing surprising or interesting here, and it's all going to go through a big Fluent PR before reaching master.. Marking this as a documentation issue, since the get started page for Fabric Core doesn't include setting the dir attribute. This attribute is required for the directionality mixins (which the Icon component uses) to work correctly.\nOur original solution was to default to LTR and then apply overrides for RTL, but this made it difficult for developers to apply their own custom styles as they had to be more specific than the RTL overrides.\n. I remember there being some issue with specificity (it may have been an edge case) but you're right, it shouldn't be a problem here. Particularly with the icon classes, where it's not likely that a developer would override the icon code itself. We should investigate this more and see if we can default to the LTR icon to simplify the developer experience, although setting the dir attribute will still be necessary for most other classes/components in Fabric.\nTo give some context, here's a look at how defaulting to LTR styles can cause issues with customizing components: https://codepen.io/mikewheaton/pen/NzxZwg. Sorry, I'm not sure what you mean. Could you include an illustration to show what you're hoping to achieve?. The best way to achieve that layout is by nesting grids. See this StackOverflow question for how to achieve a similar layout using Bootstrap's grid, which is very similar to ours.. Can you use the developer tools to inspect the styles that are being applied? I copied your code into a CodePen and it looks to be working fine: https://codepen.io/mikewheaton/pen/mKzzeK. Sorry for the confusion here, the CodePen I linked to was using an old version of Fabric. Newer versions require the dir attribute to be set to indicate whether to render in the standard left-to-right (LTR) direction or right-to-left (RTL).\nSo you'll need to add dir=\"ltr\" to the html or body tag, or to the Grid div itself as shown here: https://codepen.io/mikewheaton/pen/YvJbBR?editors=1100\nHope that helps!. I forked from an old CodePen, which also had Fabric Core 2.1.0 loaded (hidden away in the settings):\n\nAnd yes, we'd love a PR to update the docs!\n. Hi @ttseattle, I think you may be looking for the Fabric React repo.. @Jahnp, have we ever discussed the license for the toolkits? My assumption is that these are intended as reference only and shouldn't be re-distributed as part of any other project/framework.. Hi @basovic88, could you please open this issue in the Fabric React repo? Thanks!. Thanks for the suggestion, @RaulRG. The best place to post this would be in the Fabric React repo as that's where the components are.. Thank you for the detailed report and repro, @tom-daly.\nI found an article that identifies the same issue. The simplest fix in our case is likely to update the media queries to use values like 639.999px, so that the gap between that and 640px is very small and unlikely to be hit.. Made PR into wrong branch, closing.. @Jahnp I've renamed the files from Motion to Animation to maintain compatibility for projects that are importing partials rather than using References.scss.. The build issue is caused by the Travis config specifying an outdated version of Node. This has been fixed on the Fluent branch (see this commit) but not yet on master. I'll make a separate PR to fix it so we can get a clean build here.. It looks like you're getting this error when uninstalling Fabric Core. Try some of the suggestions here: https://stackoverflow.com/questions/46541371/npm-err-refusing-to-delete-code-eexist. Which version of Fabric Core are you using? I'm not able to repro this: https://codesandbox.io/s/8xp924n2y9. I've created a repro here: https://codesandbox.io/s/p2z0v7mzm\nThis looks to be working fine, although that's not unexpected as you mentioned that the issue is intermittent for you.\nIn StackOverflow, you wrote that when the icon is missing you don't see the Fabric Core stylesheet in the network tab. For the file not to show in the network tab at all (as opposed to a failed request for it) makes me think there's some issue with the underlying page. How does your application add the stylesheet? I'm wondering if it's being injected at runtime, rather than being part of index.html or similar.. Of course, it should be the same whether you're loading from your own server or the CDN. But I guess that's not the case. Is there a reason you're not able to use the CDN? You could try placing the link tag at the very top without your page's head tag. This should force the browser to download the styles before rendering the page, which may prove more reliable.. Hi @DiandianWendy, the GitHub project you want to open this issue on is Fabric React. Thanks!. Are you running an ad blocker? It looks like this could be a SharePoint telemetry system that is being blocked. Try disabling your ad blocker and see if the warnings persist.\nThis project (Fabric Core) should not be making any requests to servers as it doesn't include JavaScript, so I'm going to close this issue.. These names could definitely be improved. They're provided by another team within Microsoft that produces the icons, so I'll pass this feedback along to them.. Thank you for the detailed issue and CodePen repros. I'll take a closer look at this. Until then, you should be fine to use 9.6.0 has it's only missing a small change to the ms-box-shadow() mixin (#1129) that shouldn't affect most apps.. I've been investigating this and don't see a good solution. It turns out that Bootstrap and other frameworks have a similar issue, where a combination of min-width and max-width media queries leads to gaps where no classes are applied. This looks to be why Bootstrap has deprecated their equivalent utilities in favor of display utilities.\nI did explore using only min-width, so that there are no gaps between breakpoints. The problem with this is that, for a class like .ms-hiddenSm we have to use display: none by default and then apply display: initial at the medium breakpoint. This works fine in isolation. However, if there's another class on that element setting the display property our styles would effectively unset it. See this CodePen demo.\nAt this point I'm not seeing any solutions that don't introduce drawbacks. I'll leave it open in case anyone has ideas.. You may be looking for the Office UI Fabric React repo, although I'm not aware of any component there called DetailsCard. Could you maybe link to a demo or show some code?. Hi @mslonli, could you report this in the Fabric React project?. It looks like this is an issue for the Fabric JS repo. Would you mind opening it there?. Sorry for the trouble here; we need to update our documentation. I've opened #7923 to fix this.\nMany of our icons have a mirrored version for use with right-to-left (RTL) languages. The Help icon is one of them:\n\nTo automatically choose the right icon, we look for the dir (direction) attribute. So to get this icon working you'll need to have <body dir='ltr'> set. Here's a working example.. Did you find another bug that required removing ms-u-normalize and adding resetMargins and resetPadding?\n. No worries, would you mind adding in .ms-u-borderBox back in and committing it? It makes sense to take out .resetBoxShadow so we should be able to merge this in once border-box is set.\n. Checked in with @wdo3650 about this, turns out he wasn't building the Sass and it works fine if you do.\n. Do we think 28px and 20px is enough of a difference? Maybe we can find examples of this in product to see what sizes are most common, it just seems a little small to me.\n. Never mind, these are the correct sizes from the design library.\n. What can we do about panels with long header text? See issue #320 \nIf we're limiting it to one line, we should probably truncate with ellipses at the end.\n. What should be in a variable?\n. Oh I see. Those actually are variables and are with the others in _Fabric.Color.Variables.scss. It's just that some of the other message color variables are mapped to existing colors, and those two values are specific to messages.\n. Would there be a td inside the thead?\n. Don't need the .ms-Table selector here, just .ms-Table-rowCheck.\n. Was this a bug in Pivot where it should have been 40px?\n. We'd usually document new colors, but I don't think we'd provide classes for these (e.g. .ms-bgColor-contrastBlackDisabled) for general use.\n. These IDs (phoneAction, chatAction, etc.) should not be necessary, right? I removed them and it works fine. Let's keep everything generic so that it's clear that these tabs can be modified.\n. Where is detail-5? It goes from 4 to 6.\n. Why the change to detail-4b instead of detail-4 here? Is it to prevent conflicts when two PersonaCards are on the same page? If so, we should find a more foolproof way to avoid conflicts.\n. Rather than connecting a data attribute (data-detailsTargetId=\"detail-2b\") to an ID, could we connect two data attributes? It would be best to avoid IDs entirely as they can easily be given names that unknowingly clash with existing styles. Better to stay clear of CSS Land entirely and use data attributes.\n. I'm sure this works, but I'd prefer we use class selectors to keep the code readable.\n. There seem to be some potential issues with this method.\n. It should also remove it if we add text-decoration: none; directly to .ms-Button, right? We try to avoid targeting specific elements wherever possible.\n. Why not display left-to-right by default, and then override with right-to-left styles? Requiring a dir attribute for the styles to be applied is a big change.\n. The dir attribute can be applied to any element, not just html.\n. We have other files with internationalization/localization mixins. Maybe we should namespace these (e.g. Fabric.Mixins.Localization.RTL.scss) or place them in subfolders.\n. Looks like the indentation has changed on these lines. Could you revert these lines to how they originally were?\n. I found some design documentation that shows we should be using $ms-color-themeLighter. Could you please change it?\n. Could we increase the speed to 0.167s and use one of the easing curves from our current animation classes?\n. This isn't needed by all of the components, but it's not hurting anything to be there. Especially if we're able to remove this plugin entirely at some point.\n. Done.\n. Added a note that it's typically used within a form.\n. Yes, exactly. Soon we shouldn't have any dependencies on jQuery so this will be less confusing.\n. Added a note about pickadate in the dependencies section.\n. Added.\n. Removed.\n. Removed the comma. I don't think we need the full list here, just a couple examples of where it's used.\n. Added a note about it being designed to represent email messages.\n. Added a note about it not currently being touch friendly.\n. Good idea, done.\n. Done.\n. Much better. Done.\n. Good catch. Done.\n. Done.\n. Added.\n. Good catch, I added that dependency in.\n. Added a note about falling back on initials when an image is not available.\n. Much better, thanks.\n. Added OrgChart and Link as dependencies.\n. Sounds good, changed it.\n. That's a good question for the designers. I'm not clear on when one is preferred over the other.\n. Rephrased.\n. Rephrased.\n. Added a note.\n. Added a note about using it in a form.\n. Good idea, added it.\n. For other components we don't use a modifier for the default variant.\n. Very nice!\n. Mixin and class name should be camelCase instead of dashed. E.g. ms-u-srOnly or ms-u-screenReaderOnly\n. The documentation will also need to be updated to include the 'warning' and 'severeWarning' colors.\n. What is this?\n. We should be able to change these to use renderPartial after the merge.\n. Is an id necessary? It seems to work fine without it.\n. Add role=radiogroup to indicate that this element contains all of the radio elements.\n. Capitalization\n. We don't need props, dependencies, fileOrder, etc. in the JSON anymore. The props are now in a Model.js file, right?\n. This is a great solution for now, but we should discuss whether ContextualHost should be applying to shadow or just positioning the component.\n. We've had problems in the past where transform put the element on a half pixel and caused blurring. I don't recall the specifics of what browser that was in. However, based on this StackOverflow thread it seems that it should work just fine as long as we avoid translate3d:\n\nSo let's give this a shot in CSS. \ud83d\ude04 \n. This file seems unrelated, was it included by accident?\n. Turns out it's not related to the Breadcrumb, but is a necessary file to get the build working.\n. Phil can provide more detail, but I think the issue he was seeing was that there's a delay when JS turns a checkbox into a radio button. So it appears as a checkbox for a second and then turns into a radio button. Separating them fixes the issue.\n. I think you meant to use the variables from above here, right? Also, these should be modifier classes like ms-Icon--12 to be used in conjunction with ms-Icon.\n. I'm leaning in this direction as well. The benefit of using 12, 16, and 20 is that if we were to introduce a new size of 18 it would fit right in. The downside is that we're not matching the convention of our other styles, and we're not make even an implicit suggestion of which is the base size. Let's use small, medium, and large and if we do need to add another size in between, we can adjust the ramp to reflect the typical usage.\n. These should be modifiers, right? E.g. ms-Icon--xs\n. Does the SearchBox always have to be displayed on a grey background?\n. Have you considered using flexbox to align the text, rather than these small adjustments to padding?\n. Use a mixin instead of this value.\n. Is content: none the same as content: ''? If so, we should use none as it's clearer what the intent is.\n. @battletoilet: All of the props should be coming from the documentation files, right? When I remove these props entirely I get build errors. The same goes for CommandButton, MessageBanner, and SearchBox.\n. We can change this to IE10 now, right?\n. It just seemed reasonable to set the base font-family along with color. We can leave it out and discuss more if you'd like.\n. I'll take it out for now and we can discuss more. I definitely want to set the base font family here, as it will greatly simplify how we do localization and even (finally!) allow for localized fonts in the Fabric JS components.\n. Looks like a typo here.\n. Typo.\n. Indicator should be capitalized.\n. Hmm, looks like BidiLtr and BidiRtl are directional icons that can't just be mirrored. So we may need to change the icon referenced by the class for these, instead of using CSS.\n\n. I think these weather ones should remain the same in RTL. The sun and moon coming up on the left side of the cloud isn't related to reading direction.\n. Questionnaire with two n's\n. How is this icon page generated? We have a JSON data file for icons that will always be up-to-date with the latest icons in Fabric, and would be good to use here.\n. Let's put the mixins and variables in _Fabric.Brand.Icons.scss so that these can be used in other apps without outputting any CSS.\n. Change tabs to spaces. Maybe we can make an editor config file so this is the default?\n. Mixins should start with a lowercase letter.\n. Did we decide against doing this for the document type icons as well?\n. I think .ms-BrandIcon would be more descriptive.\n. I did a little research and it looks like min-resolution is the standard. For the widest support you can use DPI units, where 96dpi is the equivalent of 1x, 144dpi is 1.5x, and so on.\nSo these multiple media queries with all of the browser prefixes can be replaced with a single:\n@media only screen and (min-resolution: 144dpi)\nWhich our autoprefixer process, to make it work on Safari, outputs as:\n@media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 144dpi)\n. I see you've moved the comments up here, but where are the deprecated classes themselves?. This class shouldn't be removed, just deprecated.. It was a typo. The old class was 'carot' with an O, and the new is 'caret' with an E.. Did you want to move both the comment and the deprecated selector to the top? I think you wanted to be able to copy the newly generated classes over top without losing anything, right?. I'm not seeing the scope classes in use on this page. Did you want to show an example of how v4 and v5 could coexist with different styles?. This will be investigated more closely in #382. Do you remember if 'Segoe UI WestEuropean' is supposed to refer to a locally-installed font? We have a web font for it on the CDN, but I can't find a corresponding @font-face declaration that makes this available.. Good catch. Looks like this file is using tabs instead of spaces. We're going to be adding linting (#869) soon to keep inconsistencies like this from getting checked in.. Maybe Icon.Definition to match the font definitions file? The word 'definition' is already bothering me but Font.Font would be far worse.. The web font is spelled as 'WestEuropean': https://github.com/OfficeDev/office-ui-fabric-core/blob/master/src/sass/mixins/_Font.Mixins.scss#L141\nI'm going to open a new issue to include \"Web Font\" in the name of any @font-face we declare. It's difficult to tell right now where we're expecting a system font to load and where it's a web font we've defined, which we can name whatever we like. \ud83d\ude04 . I agree that the \"ms\" prefix isn't the best indicator of \"this belongs to Fabric\". There are some legacy reasons for this and we'd likely choose another prefix if we were starting fresh today. However, at this point we use that prefix on all of our CSS classes and many variables and mixins, so changing it would be a major hassle for developers updating to new versions. Our goal, for now, is to at least be consistent, even if the prefix is slightly confusing.. This file should now be in the 'dist' folder, right?. It's certainly a 'nice to have' that all of the mixins follow the same naming convention and not an absolute must. My thinking was that since we're breaking everything by adding the \"ms-\" prefix anyway, it's a good opportunity to standardize the name.. Another option could be to update our other mixins (the ones that don't directly output CSS classes, where we match the names) to use kebab-case.. It's never fun when we introduce breaking changes, but it is a simple find-replace in this case. There's no change in functionality so once all of the build errors are caught it's good to go. I'm planning on doing the update in Fabric React and can help if other teams have concerns.. After discussing in person, we're going to go ahead and kebab case all of the mixins while keeping the \"ms-\" prefix: ms-margin-left(). Is AdminALogo32 a rename of AdminALogo, or an all new icon? Same goes for the ones like AdminCLogo to AdminCLogoInverse32.. Probably just a whitespace issue? You could try resetting this file back to master, then pasting the new icon definitions back in. But I'm not overly concerned if the code is the same. :). 1. Yeah, you'll need to get the master branch building and then go to the icons page for the documentation site in the repo. I think that's at http://localhost:8080? Then it would just be visually comparing each of those new icons to one of the removed ones, to see if they're the same (renamed) or really are new icons.\n2. If they have been renamed, we can keep the old class names in addition to the new class names and point them both at the new mixins. See _Icon.scss for examples of this. In the release notes, we'd indicate that those icons have been renamed and the old names will be removed in the next major release.. I'm waiting to hear back on whether or not this icon is intended for external use.. Think you've called this icon out in your PR comment, but just want to be sure we remove it if it's a third-party icon.. Same as the previous comment; this likely needs to be removed.. Likely needs to be removed.. Likely needs to be removed.. Whoops, thanks!. This will remove the icon from the documentation, right? That's probably for the best, as we don't have a way to indicate deprecated icons in the documentation and would prefer that no one starts using it now.. I'll leave it as is, since there shouldn't be any changes needed here before we remove it entirely.. Got 'em \ud83d\ude04 . This file is only used for the internal documentation site, which I figured I should update but I don't think anyone is looking at. I'll add an MDL2equivalent property to each color that has one, and then we'll have the option to include this in the documentation if we want to.. For horizontal slides, the direction is reversed for right-to-left (RTL).. Added. ",
    "purtuga": "Sad to learn that LESS is removed and no longer supported...  :disappointed:\nSupporting SASS, although may provide you a richer set of features - that you may or may not use - it does add complexity and intimidation around setting up an environment for anyone that may want to use this project to create mashups.  It also limits us LESS users in actually taking advantage of Office UI Fabric... In my personal use cases, I have not been able to find a gap in functionality that required me to go use SASS - perhaps you guys have and thus the change in tooling...  \nThat being said, I will eventually move to use SASS, since it seems that tool is moving quickly into becoming the most popular one.. and thus the one with best support.So I'm not a hatter of the tool... but I'm not ready yet either... so with that:\n\nHow to use Last release with LESS Support\nFor anyone that may find this thread and still want to use the LESS source, there is what I did:\nThe instruction below are for v1.2.1 - which seems to be the last tagged version that had LESS support. \nFrom the command prompt:\n$ git fetch --tags\n$ git checkout -b release_1-2-1 1.2.1\nIf using Bower, just run this command instead of the default approach:\nbower install --save-dev OfficeDev/Office-UI-Fabric#1.2.1\n\nnow... back to using Office UI Fabric on custom widgets.... :grin: \n/Paul\n. Hi @matthew-dean... You are right: I don't have a metric I can point you to... its simply my personal opinion based on my recent encounters. I'm a LESS user and I have been feeling as if perhaps its time for me to move on from it... Several of the libraries/widgets I have used recently all had their CSS written in SASS... \n@mikewheaton Thank you for our response. I understand the motive and agree with @matthew-dean : its ultimately what makes more sense for this project and the majority of its users. \n. Glad to hear that it should be corrected and thanks for the pointer to the custom builds. I'll certainly will looking into it.\u00a0\nPaul\n-- sent from mobile \n. That's excellent @mikewheaton. That will make it much easier to use only what we need in custom solution without having to clone the project and run a custom build.  \n(FYI: I was including Office UI Fabric components into an existing project using LESS, thus the built individual .css files are very helpful)\n. @mikewheaton - Glad to see this item here....\nI have had several banking and government organizations ask me for a version of my SharePoint Kanban Board (here) that is 100% hosted on their internal networks due to the restrictions around the sensitive data they handle, so I'm very interested in this.   \nSince my project is using webpack, I was going to try and package it up with myself by using webpack \"style\" loader, which I think does give you the option to pull in images/fonts as base64 encoded strings.... but if you come up with an alternative, then perhaps I will follow your guidelines on how to achieve this.  Have you done any more work on this that you can share?\n(Ps. I'm running with an older version of ui-fabric-core, so I'm hoping the instructions can still be applied if you do have something).\n/Paul\n. My use case is similar: A government agency that does not allow calls to the internet. \n@mikewheaton - happy to see this is being added.. ",
    "stuaxo": "Ah cool - yeah I hadn't tried this - so I guess it's covered :) - was thinking of this being somewhere prominent near the beginning of the README..\n. ",
    "ahmetb": ":heart: keep open sourcing!\n. ",
    "dereknutile": "Awesome, go get 'em Peter.\n. ",
    "digglek": "I am trying to make use of the dialog but the samples don't show how to open/close a dialog is there some missing js files as the sample references \nJquery.Dialog.js\nDialog.js\nHowever, these do not exist?\n. Is it possible you are able to proivide an example of how to open/close a dialog? \nRegards\n. ",
    "weshackett": "In the fabric site the Spinner page doesn't show the js tab alongside the demo html. It should have as it is in the markup of the page, just not showing up.\n. ",
    "wdo3650": "A simplified DatePicker is in the develop branch. See issue #115 .  Thanks for your input @kennywangjin.\n. After discussing this component both internally and with the community, we believe it makes more sense to remove the jQuery-generated markup from DatePicker, since Fabric is more focused on the styling of components independent of its JS implementation. This puts the markup straight in the DOM, as it was before, allowing easier access to the elements, attributes and css without the need for Javascript to accomplish everyday tasks. \nThank you for the feedback. It prompted a great discussion internally about about what Fabric should focus on.\n. This issue has been fixed in the develop branch and we're in the process of merging it into master. Thanks again for letting us know about the issue.\n. Thanks for the issue. We'll look into this.\n. This issue has been fixed in the develop branch and we're in the process of merging it into master. Thanks again for letting us know about the issue.\n. Thanks for creating this issue. Does the search box fail to expand when the magnifying glass icon is selected or does the search box not do anything after text is entered?\n. Thanks for the clarification. Which browsers and OS's are you seeing this in? \n. Thanks for letting us know about this other issue. We've resolved both of these issues in the develop branch and are in the process of merging these fixes into master.\n. The pull request has been approved. Thanks for the input and taking the initiative on this. It's great to see members of the community contributing.\n. Awesome work! This is approved.\n. Thanks for the question. I assume you were you able to add id's to the input textfield before. In order to gain more information on what specifically you are looking for, can you describe what your process was and how you were using the id's? \n. Thanks again for the bringing this up and it's a great question. PickaDate.js, which the DatePicker wraps, automatically assigns an id to the input textfield. You can query the DOM to either set the id or get the id using JQuery. I would suggest getting the id as opposed to setting it in case changing the id interferes with functionality.\n. Thanks for sharing your concerns. See issue #71 where more details about near term changes to DatePicker can be found.\n. Thanks for spotting this issue. We're currently working on simplifying the DatePicker (see issue #71) and a part of this process will be unminifying our code.\n. Per my conversation with Andrew, the name of this component will change.\n. Thanks for the suggestions and comments. I made the modifications. Shall I merge?\n. I'm going to update this pull request to take out commits from another branch.\n. Closing this pull request because of unintended changes brought in from another branch.\n. Thanks for adding these samples! After reviewing your PR, I've noted a few things.\n. Nice work @rolandoldengarm! This is approved.\n. Reopening against Master\n. Thanks for noting this issue. This should be fixed it in the latest version of Fabric which was released on Friday. \n. This should be fixed in master.\n. Thanks for pointing these concerns out. We're working to make the DatePicker markup more accessible by unwrapping it from the JQuery plugin. See issue #71. This should allow you to again bind data and localize.\n. Nice work! Approved.\n. This looks good to me. Nice work!\n. Thanks for the contribution @vzaidman. Being able to interface directly with the Pickadate.js API is a great idea. I noticed that the method you're using to allow users to interface with Pickadate.js eliminates JQuery methods for DatePicker e.g. chaining. This could potentially cause issues with DatePickers that are in use. There are two things I would suggest. You could create a function to return the internal Pickadate plugin. It could look something like this.\nreturn this.each(function() {\n...\n    $picker = $dateField.pickadate('picker');\n    $(this).data('pickadate', $picker);\n...\n};\nThen users should be able to access Pickadate's API. For example one could gain access to the 'get' method of Pickadate to return its id:\n$('.ms-DatePicker').DatePicker().data('pickadate').get(\"id\");\nAlternatively you could create public methods in DatePicker that interface with the internal Pickadate plugin.\n. Thanks for the suggestions! I made the changes you noted as well as made some additional changes based on your feedback.\n. Changes:\n-Command bar animates down\n-First button margin, padding and color changes\n-Command bar buttons states styles\n. Thanks for mentioning this @mandiros3. There is currently a bug out on this, #203, and PR #228 for the fix. Stay tuned for updates. \n. Just merged in the fix for this. Let us know if this doesn't fix your bug and we'll reopen the issue.\n. I like what you got! Good job! \nApproved.\n. I like what you got! APPROVED!\n. I like what you got! Nice job! Approved.\n. The issue was that the label interfered with click events on the search field.\nThis should be fixed in PR #294.\n. If it's like #266 then I'm assuming the bug here is that ms-label is preventing a click event from occurring on the input field. \nThis may have been fixed in master, as I can't seem to reproduce this bug.\n. @tomaon if I'm not mistaken this PR fixes an issue with the label preventing the caret from showing up in the input field on hover.  Nice work spotting the bug; however, the next release of Fabric, scheduled for later this week, switches over to Sass from Less. If you'd like you could file another PR with the Sass fix for this issue as Fabric will no longer be using Less.\n. #316 has been opened to address this issue.\n. This should be fixed in master.\n. I like what you got! Good job. Do the same for the MDL2 Icons page and its approved.\n. @aremes Thanks for the suggestion! We added the hovering behavior in code for more control over that state. For example if a CSS hover state were used, the blue background color would blink off and on when the clear button is clicked since the input field is no longer in a focused or hovered state. \nLet us know if you have another solution. We're always looking for valuable contributions from users such as yourself. If you like you could even submit a pull request to show us what you're thinking.\n. @aremes Thank you for taking the time to illustrate the behavior you are seeing in a detailed manner.  This behavior was noted in issue #266 and pull request #294. The fix for this bug should be on the master branch and a release is scheduled later this week that addresses this issue.\n. I like what you got! Approved.\n. @dzearing I think the BreadCrumb component you're looking at is an old version. The new one is in the Github repo. There's no ms-Breadcrumb-currentLarge style in the more recent one. FYI, the Javascript doesn't seem to be included in that sample. I'll file a separate bug for that.\n. Looks good in all browsers except in Edge for me. \n. Looks good to me. Approved.\n. Looking at http://localhost:2020.\n. Thanks for the illustrating what you're seeing with the gif. That is expected behavior. I nuked and rebuilt Fabric and it seems to be working now for me.\n. This looks like it's coming from an older version of SearchBox in the docs site which we're working on updating. This issue should be fixed in the latest release in the Fabric repository.\n. Version 1.2.0 should have this fix.\n. @manndave Removing the id's is a great idea and something definitely necessary. Thank you for looking out on this and taking steps to fix this issue. As you may know Fabric will be removing its dependency on JQuery in favor of vanilla Javascript implementations, which we are currently working on. This will directly affect the JQuery in this PR. \nThe Fabric team will definitely use the ideas and work from this PR in the vanilla javascript version. If you like you can still go ahead and respond to the code review comments, keep in mind JQuery will be removed in the next major release.\n. @manndave the animation of the action detail box growing and contracting when switching between action details seems to be missing.\n. @manndave Weird, could it be a spaces vs tabs issue?\n. Looks good to me. Nice work!\n. Thoughts on providing return types for functions and typing arguments as well as function scoped variables? The advantage is it offers errors in IDE's and build tools in the event a wrong type is used. Also code can be more easily understood and debugged.\n. Thanks @chrisahhh, this looks great! Approved.\n. @manndave Awesome, thanks for the contribution!\n. @MIchaelMainer thanks for spotting this. Looks good to me.\n. @StfBauer Thanks for the suggestion.  There have been discussions around converting the Spinner to CSS3 so this is definitely on the minds of the team.  The Spinner was originally made to be compatible with older browsers. However, time has passed and the web has moved forward. Stay tuned.\n. Looks good to me. Approved.\n. @dmitriyyepishin Thanks for pointing out these bugs. We'll take a look.\n. @dmitriyyepishin Thanks for offering up a fix. We have a fix in PR currently, #487 . \nThe scope of objects running in the prototype needed to be refactored. Also, three new methods have been added which allow the Breadcrumb to be updated on the fly.\n- addItem(itemLabel, itemLink, tabIndex) \n- removeItemByLabel(itemLabel)\n- removeItemByPosition(position)\nYou can see the demo of it here: http://codepen.io/anon/pen/qZoWap\n. Example page for new API methods: http://codepen.io/anon/pen/qZoWap\n. Nice work @johnmeilleur. This looks good to me. Approved.\n. Approved\n. wrong branch!\n. @lixonic Can you add a newline to the bottom of the file you modified? The build linter is throwing a warning and preventing the initial build from finishing.\n. @mikewheaton sounds good. Let's merge this in and make sure to add the newline.\n. Approved.\n\n. Approved. This builds fine for me.\n\n. Approved.:metal:\n\n. @mikewheaton yeah, there are fixes for memory leaks. It would be ideal to get the memory leaks fixed in 3.0.\n. @mikewheaton the fixes might be a bit more involved. let's assign the bug to me and I can work on it.\n. Abandoning this PR. Will open another with SearchBox and CommandBar.\n. @mikewheaton getting the same build errors as the Travis errors when I nuke my node modules and npm install locally.\n. I just noticed this would be a merge into master as opposed to the beta/mdl2 branch. I'm going to close this and reopen for beta/mdl2\n. Approved.\n\n. @mikewheaton good catch. I put that in for testing and forgot to take that out.\n. This should be fixed with the MDL2 update to ContextualMenu\n. Approved. :muscle:\n\n. Approved. :facepunch:\n\n. Approved :space_invader:\n\n. Wrong repo...\n. Please change the component name to \"Date Picker\" and place it alphabetically in the list.\n. Resolved.\n. Resolved.\n. End function expressions with a semicolon.\n. Nit, ideally end function expressions with a semicolon.\n. Add semicolon.\n. Same as above.\n. Same as above.\n. Same as above.\n. Same as above.\n. Same as above.\n. Is this being used anywhere?\n. Tab vs spaces issue.\n. Add semicolon.\n. Add semicolon.\n. Add semicolon.\n. Add semicolon.\n. Add semicolon.\n. Nit. Remove extra white space.\n. Missing semicolon.\n. Add space between if and (\n. Missing semicolon.\n. Missing semicolon.\n. Favor strict type equality, === instead of ==.\n. Missing semicolon.\n. Missing semicolon.\n. Missing semicolon.\n. Missing semicolon.\n. Missing semicolon.\n. Missing semicolon.\n. Missing semicolon.\n. Missing semicolon.\n. Missing semicolon.\n. Missing semicolon.\n. Doesn't seem like this variable is being used.\n. Typo in \"Specific\".\n. Typo in \"Specific\".\n. Typo in \"Specific\".\n. Typo in \"Whether\".\n. Did you mean \"server\" as opposed to \"serve\"?\n. Typo in \"sometimes\". \n. Caps cRAziness in \"Array\".\n. Typo in \"doesn't.\"\n. Nit. Spacing seems off.\n. This block could benefit from a deeper indent.\n. Nevermind, spacing looks fine in my editor. I think it might be rendering this way because tabs are being used instead of spaces. \n. Same comment as above. Tabs vs spaces again. Setting your IDE to use spaces instead of tabs might fix this in the future.\n. Add white space on Line 100.\n. Is this code unreachable because of the return?\n. We might consider refactoring in the future using the revealing module pattern so we don't have to do 'that' for 'this' as often. Or moving forward using the revealing module pattern.\n. When I put an error into a Less file and build, the console outputs the error 9 times.\n. Seems like this styling is from a previous version of SearchBox.\n. Toggle behavior seems broken if you gulp watch.\n. Not sure about the top and bottom margin for this. The spacing between the intro and the content below seems off. Although this maybe a separate issue.\n. Align to the other CSS properties in this class.\n. There's a stop() method in the code you can call that clears this interval. That would be great if you could swap this clearInterval out and call stop() in its place.\n. Nit. That'd be great if you could put spaces between the variables, values and operators in the first part of the ternary operation.\n. Move the constructor to the top, just after the declaration of the class variables.\n. Thanks for making these changes. Nit, can you add a space between the 0 and the ?.\n. Nit. Remove white space to align button elements with their sibling divs. \n. const could be better than private static.\n. Could this be a constant?\n. Actually this would need to be outside of the class implementation to work as a constant which creates other issues. So we can leave this as is.\n. Nope. See above.\n. Missing closing quotes.\n. Missing closing quotes.\n. Remove whitespace at the end of the line.\n. Indent this line within the function block aligned under 'target'.\n. Coding convention thing, move this 'else' up a line, directly after the above closing curly brace.\n. Favor variables that confer meaning for readability.\n. Indent this directly below the line above.\n. Coding convention thing, use 2 spaces instead of 4.\n. Reduce the indent.\n. Remove whitespace\n. ",
    "joebo": "@LezaMax  this is working now. Thanks!\n. ",
    "sidnc86": "ms-icon ms-icon--CloudDownload is another css class we are not getting in our Office Addin html page. The icon doesn't render. But on the other hand, ms-icon ms-icon--download does appear. Why does this happen?. Hey @mikewheaton - Thanks for quick and prompt response! We are using Fabric 2.6.0. Here's the URL to the css being referred - https://appsforoffice.microsoft.com/fabric/2.6.0/fabric.min.css\nHope this information helps.\n. ",
    "AndersDJohnson": "@Jahnp Thanks for merging. I didn't get a chance to delete it. Still want that in another PR, if I have time? Or just leave it for now?\n. @ericthompson Signed CLA.\n. ",
    "jfootenewsig": "Any idea when another update is coming?\nThanks!\n. ",
    "nilobarp": "Chrome 44 on Windows 7\nSame with Firefox (40.0.3)\n. ",
    "dkreitz": "I think I've got it figured out. The use of Push or Pull only shifts the column right or left respectively by the number of 12-column units. You still need to give a width to the column by using the ms-u-* column size classes.\nHere's a fork from @andrewconnell code with what I believe is the solution.\nhttp://plnkr.co/edit/tVIK2ZBSKMaytu1H1bSC\n. ",
    "ilyalehrman": "The search box fails to expand when you click on the magnifying glass.\n\nFrom: wdo3650 notifications@github.com\nSent: Tuesday, September 8, 2015 8:30 PM\nTo: OfficeDev/Office-UI-Fabric\nCc: ilya lehrman\nSubject: Re: [Office-UI-Fabric] CommandBar Search item doesn't work in mobile / narrow pages (#102)\nThanks for creating this issue. Does the search box fail to expand when the magnifying glass icon is selected or does the search box not do anything after text is entered?\n\nReply to this email directly or view it on GitHubhttps://github.com/OfficeDev/Office-UI-Fabric/issues/102#issuecomment-138739036.\n. Windows 10: IE 11/ Edge / FF 40.0.4 / Chrome 45.0.2454.85 m.\nFurthermore, after re-expanding the page, --mainArea CommandItems do not come back into view (with the occasional exception of the first CommandItem. If this isn't related I can log it in a separate issue...\n. Good deal! Looking forward to the update! \n. ",
    "casvaniersel": "I added a fix for this with Pull Request 111 \n. Thanks for the feedback. I've applied the suggested convention. \n. Done!\nMet vriendelijke groet / with kind regards,\nCas van Iersel\n+31 (0)6 24 27 73 64 \u2022 +31 (0)88 420 42 42\ncas@point42.nlMAILTO:cas@point42.nl \u2022 LinkedInhttp://www.linkedin.com/in/casvaniersel \u2022 @casvanierselhttp://www.twitter.com/casvaniersel\nVan: Eric Thompson [mailto:notifications@github.com]\nVerzonden: dinsdag 22 september 2015 01:49\nAan: OfficeDev/Office-UI-Fabric Office-UI-Fabric@noreply.github.com\nCC: Cas van Iersel cas@point42.nl\nOnderwerp: Re: [Office-UI-Fabric] Fix: DatePicker on top of other DatePicker with correct z-index (#111)\nHey @casvanierselhttps://github.com/casvaniersel - thanks for contributing! Can you please sign the Contribution License Agreement located herehttps://cla.microsoft.com/?\nThanks!\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/OfficeDev/Office-UI-Fabric/pull/111#issuecomment-142139606.\n. Yes it would be nice to have all the logo's (Word, Excel, Office etc.) as well! \n. +1 I was looking for something like this as well. I've now combined it with this bootstrap-clockpicker \nhttp://weareoutman.github.io/clockpicker maybe something that can be transformed to match Office UI Fabric look and feel ? I've already have something running like this.\n\n. Hi rolandoldengarm this is already fixed in PR #111 which is still in the DEV branch I think. This will be merged to master soon I hope.\n. Hey @mikewheaton I totally missed this guidance! Thank you for helping out. Any idea when the documentation on dev.office.com will be updated? . ",
    "anasnakawa": "thanks, \nbut beside that demo pages issue,\nthe Dialog javascript files mentioned above are not available anywhere in the repository.\n. > the references above are a bit misleading in that sense\nyes they are, and they are not the only thing misleading here, \nalso the example provided in the same demo page for the dialog is confusing me,\nlike when I tried to include the whole Fabric UI javascript library,\nI cannot seem to find any definition for the following:\njs\nfabric['Dialog']; // undefined\n$.fn.Dialog; // undefined\nIs there any part that I am missing here ?\nThanks.\n. ",
    "robledosm": "Could you please provide an example of how to open/close a dialog?\n. ",
    "kennywangjin": "OK, founded. thanks.\n. thanks for your response.\nthe numeric box should have two icons 'increase' and 'decrease' to inform users that they could just click the buttons to change the number other than typing numbers. Also, these icons could inform the users that this input accepts only numbers, not strings.\nand the standard 'step' attribute should be considered.\nAnyway, the numeric textbox could tell the users that what is acceptable in the input (numbers only, not strings) and is easier to use (mouse click, not have to type numbers). \nThanks.\n. Thanks for your reply.\nI know the fabric site. But if there are some snippets for visual studio as plugin (not copy and paste), it will be great, just like the bootstrap snippets. :)\n. @mikewheaton I was using \"ch-ZHS\", just as the fabric web's demo. Not working.\n. @mikewheaton Many HTML elements have been hard-coded \"font-family\", like table, dialog. It is impossible to apply general font family via lang=\"zh-CHS\" mode. \n. ",
    "johnnliu": "There are also no icons for the main Office products: Word, Excel, Outlook, PowerPoint.  Sites, Delve, PowerBI...  etc.  \nBut there is PDF\n.ms-Icon--documentPDF\n. ",
    "SPParseError": "Hi, +1 it would be very nice to have document type's logos, as in Delve's Office365Icons font.\n. ",
    "pbjorklund": "How are we supposed to set things like the input id now?\n. Realized now that perhaps I can get a better answer by pinging @wdo3650 directly as it's a closed issue.\n. Well I liked being able to control the name and id of the input fields in order to handle posts and using js to do things with the fields. Not sure I understand your question :)\n. I'm having the same issue and solved it the same was as @aremes\n. If it's the same bug I think it just has to do with that a dropdown isn't closed when selecting another dropdown \n\nedit: Glad to hear it! I actually just reverted to a hidden dummy  that matched the search selectors just so that I could use bower correctly :)\n. Is there a issue open for the search-field @jonahkirangi (I can't see an open one, might be resolved already as well)? I can create a new one and pull mine and @aremes comments together in that if there is none.\n. Any ideas or recommendations on this from the team?\n. ",
    "brakmic": "I removed the class. \nRegards,\n. ",
    "Jester98x": "+1 for this.\nAny update when we might see a fix?\n. ",
    "aremes": "edit -> just wanted to issue a pull request for this and saw @robi26 already had this done :/ nevermind\nOne more: if i want to use the navbar without the search bar but with a dropdown (\n\"ContextualMenu\", that is), it breaks on lines 419ff in fabric.js due to a missing null-check.\n// Close and blur the search box if it doesn't have text.\n        if ($navBar.find('.ms-NavBar-item.ms-NavBar-item--search .ms-TextField-field').val().length === 0) {\n          $('.ms-NavBar-item.ms-NavBar-item--search').removeClass('is-open').find('.ms-TextField-field').blur();\n        }\nchanging these lines to\n// Close and blur the search box if it exists and doesn't have text.\n        $searchBox = $navBar.find('.ms-NavBar-item.ms-NavBar-item--search .ms-TextField-field');\n        if ($searchBox.length > 0 && $searchBox.val().length === 0) {\n          $('.ms-NavBar-item.ms-NavBar-item--search').removeClass('is-open').find('.ms-TextField-field').blur();\n        }\nsolves it. this also has to be done a few lines below at around line 464:\n// Close and blur the search box if it exists and doesn't have text.\n        $searchBox = $navBar.find('.ms-NavBar-item.ms-NavBar-item--search .ms-TextField-field');\n        if ($searchBox.length > 0 && $searchBox.val().length === 0) {\n          $navBar.find('.ms-NavBar-item.ms-NavBar-item--search').removeClass('is-open').find('.ms-TextField-field').blur();\n        }\nWouldn't you agree? or is it just me being an idiot assuming one might like to use the navbar without a search field? :)\n. @pbjorklund there's already a pull request under review by the office devs. :) as for the original issue, i couldnt reproduce.. any more info? if i can reproduce it, i'd be glad to attempt a fix.\n. ok.. this seems to be datepicker specific, again.. stupid datepicker :)\nso the best thing i could come up with is adding an onOpen handler to the pickadate.js configuration that triggers the click event on the document.. ugly.. oh so ugly.. anyone?\n. ahem.... wat? I know what and how you're adding behavior. That was not the point of the issue at all. I didn't even mention CSS?! wat?!\nLet's try this once more.. a little slower:\nLet's go to your official demo site for the searchbox.\nMove your mouse over the part of the box where it says \"Search\". Notice how nothing happens? The cursor doesn't change, nor is the input highlighted as you would expect when you're moving the mouse over that. Click onto the \"Search\" text. Try the same with the little magnifying-glass-icon. Notice how nothing happens? Doing that did not activate the field. I would certainly expect it to. Go ahead, and create a html input with \"placeholder\" attribute and look at how that works. So i'm not crazy.. this is what the user would actually expect\nNow. let's look at the searchbox markup under /src/components/searchbox/searchbox.html\n<div class=\"ms-SearchBox\">\n  <input class=\"ms-SearchBox-field\">\n  <label class=\"ms-SearchBox-label\"><i class=\"ms-SearchBox-icon ms-Icon ms-Icon--search\"></i>Search</label>\n  <button class=\"ms-SearchBox-closeButton\"><i class=\"ms-Icon ms-Icon--x\"></i></button>\n</div>\nIf I do exactly what i said above: \"switch the order of input and label\" so I end up with the following markup:\n<div class=\"ms-SearchBox\">\n  <label class=\"ms-SearchBox-label\"><i class=\"ms-SearchBox-icon ms-Icon ms-Icon--search\"></i>Search</label>\n  <input class=\"ms-SearchBox-field\">\n  <button class=\"ms-SearchBox-closeButton\"><i class=\"ms-Icon ms-Icon--x\"></i></button>\n</div>\nthen all of a sudden, everything behaves as expected.\nAll this has been tested in Chrome  v48, IE v11 and FF v43 using the latest npm distribution of fabric.\nPlease let me know if you can reproduce this at all.\n. ",
    "patrick-rodgers": "You can do the following. If you wrap the entire js file contents in a define and return the fabric variable you can use it in require. The way this library was implemented you will only then have access to Spinner, ProgressIndicator, Breadcrumb and MessageBanner off of the global fabric var in your require. The other methods should be added to the global jQuery object and be accessible like $().method() in the normal way.\nThis expects that you already have a path defined for jquery in your require config.\ndefine(['jquery'], function (jQuery) {\n//... existing library contents\nreturn fabric;\n });\nI can then setup a path to the ui library and include it using require and get all the expected functionality. Key is to use the same variable name passed into the define function as is used within the fabric library \"jQuery\".\nHTH,\nPatrick\n. ",
    "oising": "TypeScript definitions for All the Things (tm)\n. @mikewheaton Great news!\n. This is pretty standard functionality, Eric, especially when you think of you using cascading dropdowns where the value of one filters the contents of the next. It's extremely common to use an MVVM framework in the back to bind to the native select too, and have the options change based on some external feature.\nJQuery UI components handle this by allowing a manual \"refresh\" command, so in Office Fabric UI's case, it might look like calling $(\".ms-dropdown\").Dropdown(\"refresh\") to force a redraw. Now, ideally fabric should be watching the select itself for changes. \nFailing all that, the minimum one would expect is a \"destroy\" option where we can remove the Dropdown effect from the select and then reapply it. Calling $.fn.Dropdown twice currently corrupts the the rendering; it's not even idempotent, another minimal expectation I'd say. Yes, it's early days, so I guess I'll log some individual issues for you to track. I'm only writing this because I'm surprised to see you saying \"if it makes sense.\" One might assume from that, that you guys have never built dynamic html UX before ;)\n. @elegault I modified the included jquery for dropdown to support a \"refresh\" command - it's not optimal, but it works. Here it is:\n```\n(function ($) {\n    $.fn.Dropdown = function (command) {\n    if (!!command) {\n        switch (command.toLowerCase()) {\n            case \"refresh\":\n                console.log(\"refreshing\");\n                var $dropdownWrapper = $(this),\n                    $originalDropdown = $dropdownWrapper.children('.ms-Dropdown-select'),\n                    $originalDropdownOptions = $originalDropdown.children('option'),\n                    newDropdownTitle = \"\",\n                    newDropdownItems = \"\";\n\n                $originalDropdownOptions.each(function(index, option) {\n\n                    /** If the option is selected, it should be the new dropdown's title. */\n                    if (option.selected) {\n                        newDropdownTitle = option.text;\n                    }\n\n                    /** Add this option to the list of items. */\n                    newDropdownItems += '<li class=\"ms-Dropdown-item' + ((option.disabled) ? ' is-disabled\"' : '\"') + '>' + option.text + '</li>';\n\n                });\n\n                // update title\n                $dropdownWrapper.find(\".ms-Dropdown-title\").html(newDropdownTitle);\n\n                // replace options content\n                var anchor = $dropdownWrapper.find(\".ms-Dropdown-items\");\n                anchor.children(\".ms-Dropdown-item\").remove();\n                anchor.append(newDropdownItems);\n                break;\n            default:\n                break;\n        }\n\n        return this;\n    }\n\n    /** Go through each dropdown we've been given. */\n    return this.each(function () {\n\n        var $dropdownWrapper = $(this),\n            $originalDropdown = $dropdownWrapper.children('.ms-Dropdown-select'),\n            $originalDropdownOptions = $originalDropdown.children('option'),\n            originalDropdownID = this.id,\n            newDropdownTitle = '',\n            newDropdownItems = '',\n            newDropdownSource = '';\n\n        /** Go through the options to fill up newDropdownTitle and newDropdownItems. */\n        $originalDropdownOptions.each(function (index, option) {\n\n            /** If the option is selected, it should be the new dropdown's title. */\n            if (option.selected) {\n                newDropdownTitle = option.text;\n            }\n\n            /** Add this option to the list of items. */\n            newDropdownItems += '<li class=\"ms-Dropdown-item' + ( (option.disabled) ? ' is-disabled\"' : '\"' ) + '>' + option.text + '</li>';\n\n        });\n\n        /** Insert the replacement dropdown. */\n        newDropdownSource = '<span class=\"ms-Dropdown-title\">' + newDropdownTitle + '</span><ul class=\"ms-Dropdown-items\">' + newDropdownItems + '</ul>';\n        $dropdownWrapper.append(newDropdownSource);\n\n        function _openDropdown(evt) {\n            if (!$dropdownWrapper.hasClass('is-disabled')) {\n\n                /** First, let's close any open dropdowns on this page. */\n                $dropdownWrapper.find('.is-open').removeClass('is-open');\n\n                /** Stop the click event from propagating, which would just close the dropdown immediately. */\n                evt.stopPropagation();\n\n                /** Before opening, size the items list to match the dropdown. */\n                var dropdownWidth = $(this).parents(\".ms-Dropdown\").width();\n                $(this).next(\".ms-Dropdown-items\").css('width', dropdownWidth + 'px');\n\n                /** Go ahead and open that dropdown. */\n                $dropdownWrapper.toggleClass('is-open');\n\n                /** Temporarily bind an event to the document that will close this dropdown when clicking anywhere. */\n                $(document).bind(\"click.dropdown\", function(event) {\n                    $dropdownWrapper.removeClass('is-open');\n                    $(document).unbind('click.dropdown');\n                });\n            }\n        };\n\n        /** Toggle open/closed state of the dropdown when clicking its title. */\n        $dropdownWrapper.on('click', '.ms-Dropdown-title', function(event) {\n            _openDropdown(event);\n        });\n\n        /** Keyboard accessibility */\n        $dropdownWrapper.on('keyup', function(event) {\n            var keyCode = event.keyCode || event.which;\n            // Open dropdown on enter or arrow up or arrow down and focus on first option\n            if (!$(this).hasClass('is-open')) {\n                if (keyCode === 13 || keyCode === 38 || keyCode === 40) {\n                   _openDropdown(event);\n                   if (!$(this).find('.ms-Dropdown-item').hasClass('is-selected')) {\n                    $(this).find('.ms-Dropdown-item:first').addClass('is-selected');\n                   }\n                }\n            }\n            else if ($(this).hasClass('is-open')) {\n                // Up arrow focuses previous option\n                if (keyCode === 38) {\n                    if ($(this).find('.ms-Dropdown-item.is-selected').prev().siblings().size() > 0) {\n                        $(this).find('.ms-Dropdown-item.is-selected').removeClass('is-selected').prev().addClass('is-selected');\n                    }\n                }\n                // Down arrow focuses next option\n                if (keyCode === 40) {\n                    if ($(this).find('.ms-Dropdown-item.is-selected').next().siblings().size() > 0) {\n                        $(this).find('.ms-Dropdown-item.is-selected').removeClass('is-selected').next().addClass('is-selected');\n                    }\n                }\n                // Enter to select item\n                if (keyCode === 13) {\n                    if (!$dropdownWrapper.hasClass('is-disabled')) {\n\n                        // Item text\n                        var selectedItemText = $(this).find('.ms-Dropdown-item.is-selected').text()\n\n                        $(this).find('.ms-Dropdown-title').html(selectedItemText);\n\n                        /** Update the original dropdown. */\n                        $originalDropdown.find(\"option\").each(function(key, value) {\n                            if (value.text === selectedItemText) {\n                                $(this).prop('selected', true);\n                            } else {\n                                $(this).prop('selected', false);\n                            }\n                        });\n                        $originalDropdown.change();\n\n                        $(this).removeClass('is-open');\n                    }\n                }                \n            }\n\n            // Close dropdown on esc\n            if (keyCode === 27) {\n                $(this).removeClass('is-open');\n            }\n        });\n\n        /** Select an option from the dropdown. */\n        $dropdownWrapper.on('click', '.ms-Dropdown-item', function () {\n            if (!$dropdownWrapper.hasClass('is-disabled')) {\n\n                /** Deselect all items and select this one. */\n                $(this).siblings('.ms-Dropdown-item').removeClass('is-selected')\n                $(this).addClass('is-selected');\n\n                /** Update the replacement dropdown's title. */\n                $(this).parents().siblings('.ms-Dropdown-title').html($(this).text());\n\n                /** Update the original dropdown. */\n                var selectedItemText = $(this).text();\n                $originalDropdown.find(\"option\").each(function(key, value) {\n                    if (value.text === selectedItemText) {\n                        $(this).prop('selected', true);\n                    } else {\n                        $(this).prop('selected', false);\n                    }\n                });\n                $originalDropdown.change();\n            }\n        });\n\n    });\n};\n\n})(jQuery);\n```\n. I was using knockout to databind the original element, and then I subscribed to the observable so I could invoke a refresh when it changed -- something like this:\n```\nko.applyBindings(viewModel);\nconsole.log(\"Applying Office Fabric UI behaviour(s).\");\n$(\".ms-Dropdown\").Dropdown();\nviewModel.filteredTemplates.subscribe(function () {\n    console.log(\"detected change in filtered templates; refreshing.\");\n    $(\".ms-Dropdown:has(select#ddlTemplate)\").Dropdown(\"refresh\");\n});\n// ...\n```\n. What I'm trying to achieve? Seriously? How about parity with vanilla HTML -- seems like a reasonable goal, no? ;)\nOk, I'll bite: The classic double list box with \"left\" and \"right\" assignment buttons in between them. You choose one or more elements from the listbox on the left (or right) and move them to the listbox on the other side. What does your design language offer as an equivalent device?\n. Sounds great -- thanks. \n. The point is certainly not to create a \"dependency\" on jQuery. There must be some medium where we can have an entirely independent fabric.jquery.js file that uses the assets in an abstracted fashion.\n. Very nice, @gautamsi ! Aurelia is where it's at right now - Rob E. and crew are doing a stellar job. \n. I guess I should be more specific. I see there are many external people picker controls out there, designed to be used on provider-hosted or independent sites. They are not the problem - SharePoint hosted integration is the issue at hand. The former is easy because you're building from scratch and have full control; when going SharePoint hosted, it's all tied up with the spaghetti mess of interdependent, incomprehensible scripts that ship with the product, with a hearty dose of \"minimal download strategy\" and \"scripts on demand\" layered on top.\n. Thanks @ericthompson \n. ",
    "sqlsolver": "Soon?\n. ",
    "robi26": "+1 needing it right now ;)\n. ",
    "git-sdavidpaul": "@ericthompson: Can anyone answer this please?\n. Styles for tables with sort options is what I was looking for. I would like to highlight the column header of the table by which it is sorted along with the sort direction indicator. \nA JS for doing client side sorting would be a valuable component but the styles for implementing table with sort is common requirement with any table implementation.\n. Or it can be a variant of dropdown too. Sometimes we have a very long list of items added to a dropdown and a searchbox within the dropdown that can quickly give me a filtered list would be of great value.\n. This could be a JS plugin that would accept a start event with options of pre-set time to start from and end event that would stop the timer and display total time elapsed between start and stop. It could have variants like count down timer, count up timer. \nDoes that help?\n. JS would be preferable.\n. Hi Eric,\nA simple looking multiple file drag and drop control which would also provide control over progress indicators and progress animations along with control over the upload progress.\nSomething like DropzoneJs (http://www.dropzonejs.com/). The problem with using dropzone along with Office UI Fabric would be deviation from the design language. \nHope this helps.\nthanks\n. +1 Can it be a bit bigger with different alignment?\n. ",
    "gautamsi": "Hi @LezaMax, what about css and other Fabric assets? see license terms at http://aka.ms/fabric-font-license\nMICROSOFT SOFTWARE LICENSE TERMS\nMICROSOFT WINDOWS USER INTERFACE FONT FAMILY: \u201cSEGOE UI\u201d, \nMICROSOFT OFFICE: \u201cFABRIC ASSETS\u201d (including CSS)\nCan we have clarifying post in FAQ about what can be used universally and what can not. My understanding is that I can still use the font name and family (css class names), if font is present (Windows/Office on mac) it will work, and if Font is unavailable system will substitute. \n. After I dig in to release css files, it feels like it will be useless framework to be used in other than Office 365 add-ins. you can not use icons because of font limitation. You can not use CSS as it is fabric asset.  All the files has this header, making everything under Fabric Asset, use of which is restricted. \ncss\n/* Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information. */\n/**\n * Office UI Fabric 1.1.3\n * The front-end framework for building experiences for Office 365.\n **/\nLicensing source code under MIT is useless. It should have better used Microsoft Reference Source. it is like saying here is the free code, you can do what you want BUT only for Microsoft Office 365 add-ins. \n. I am working on Aurelia component gautamsi/aurelia-OfficeUIFabric\nMost work is in dev branch for now. Need to write documentation and API information. \nFollowing is working\n- Button\n- List\n- List Item\n  - List Item Action - so that you can add click events\n- Persona\n- SearchBox - with optional Search button  which fires search event on mousedown\n- Spinner\n- Overlay (needs improvement)\n. thank for the appreciation. I have just merged dev to master, adding NavBar and ContextualMenu https://github.com/gautamsi/aurelia-OfficeUIFabric/pull/1. also has sample page (very ugly for now - now that I have NavBar I can crate multiple views for sample soon:)). \n. I do see the explanation, I am working on some application which would complement Microsoft office but not directly integrating in Office add-in or so. there is good chance of this being caught in licensing terms. The Office fabric may have other use case without having to directly integrate in office product or launched from Office. I can have a web version of my app which is mobile friendly etc, at the same time using office design. There may be office add-in or not. I do not want to get caught in licensing glitch. given that Selawik is OFL, can we not use them bundled in our package? or host on our own?\nif there is progress on Selawik, that would definitely helpful to the community. \nHave you got any infromation on Symbol font I mentioned earlier? . I would be willing to extend the Symbol font, have limited knowledge on working with fonts, if there is build system documentation and any guideline provided on working with the OSS font in original repo, I would be happy to extend it as need basis and keep it aligned with the MDL2 font codes. ",
    "Nojj02": "Hi @LezaMax. I've a follow-up question also for the CSS files.  Inside are found the sections stating that icons and such are not licensed under MIT. So if we were to use this in a non-Office context, what would be the proper approach of handling these CSS files? Should we create new CSS files with basically every content copied but these sections omitted? What other alternatives are there?. ",
    "aamir-pk": "It's silly (perhaps deceiving) that code is being released under MIT license but assets are using very restrictive license. It simply means the framework should only be used in Office context. So let's stick with Bootstrap (and https://adminlte.io/).. ",
    "igbenic": "Sad. ",
    "johnnyongesa": "Hi all, has row sorting been added to office ui fabric? i need to add row sorting to my office ui fabric table\n. Home you consider sorting in next releases, this is a very important component of table component and almost every user of table component uses sorting\n. Hi guys, is there a way to re-size the ms-Dialog component? i would want to increase the width of ms-Dialog compoenent\n. Thank you mike for the response, but the link you shared does not give any idea of what to do. It just has a html file with  tag and a blank css file\n. @oising your solution is worked for for me, thanks.\n. @oising you code works correctly with only one drop down in the form. If there is more than one drop down the form it copies options from one drop down to another. ```\nFor example\nIf dropdown A has 4 option and dropdown B has 6 options. After a refresh dropdown A has 10 option and B 10 options\n\n. Updating the underlying select then calling .Dropdown()breaks the element\n. Thank you. its working\n. Thanks mike. works like charm\n. Thanks, sorry i did not copy the whole content. the divs are actually closed. and total number gids in a column add up to 12. My scenario is my page uses the default sharepoint 2013 master page. my page contains 2 asp content place holders:\n<asp:Content `ContentPlaceHolderID=\"PlaceHolderLeftNavBar\" runat=\"server\">  <div class=\"ms-Grid\"> \n <div class=\"ms-Grid-row\">\n    <div class=\"ms-Grid-col ms-u-sm6 ms-u-md5 ms-u-lg2\">\n        </div>\n</div></div></asp:Content>\n<asp:Content  ContentPlaceHolderID=\"PlaceHolderMain\" runat=\"server\"><div class=\"ms-Grid\"> \n    <div class=\"ms-Grid-row\">\n    <div class=\"ms-Grid-col ms-u-sm6 ms-u-md7 ms-u-lg10\"></div></div></div></asp:Content>\neach place holders i have an ms-grid. with one row. The problem is that the ms grid is the PlaceHolderMain leave out some white space in the right in large screens and when i re size the page it falls behind the menu.I have used different ms-grids because the divs are in different asp content place holders\n. Guys after looking at my code very well i think i need to make one column fixed(it should not resize at all) then allow the other column to resize. The problem is i don't know how to make an ms-grid column fixed\n. I found the way out, The xl,xxl,xxx sizes for ui fabric fixed my issue. i think microsoft overllok this in the office ui fabric documentation.\n. See sample  fromhttp://jqueryui.com/autocomplete/#combobox\nWhen i try to apply the same to ms-drop down the control breaks\n. Thanks mike, was looking for the nav bar.\n. ",
    "ichpuchtli": "I would recommend using https://selectize.github.io/selectize.js/ it allows you to specify how the option  and selections are rendered. See the ~Remote Source \u2014 Github~ example.\n. ",
    "russgove": "Hey . I  could use thjs too. where is it on your roadmap?. Seems to have been droped. \nIm creating a new issue.. So, is there an example of how to do this somewhere , I'm trying to do this in an SPFX webpart. I want to display library and folder contents. Would initially show  a list of libraries. you click on a library and it shows the folders, etc. Is this possible with Office-ui-fabric-react?\n. Hi, Just started working with that ms-u-smOffset# and its just what I needed, Thanks!  Still, an example and some documentation is sorely needed.. Nobody knows its there! and may some helpers in the react code so I could just put \"level=3\" on my tag and it would add  the class ms-u-smOffset3. ",
    "ImenTurki": "hello ,please any one found a solution for office-ui-fabric for upload file ? \nhow do you satisfy this . \n  . ",
    "makafsal": "+1. ",
    "wcarson": "My newness to bower is showing. I didn't realize you could specify a repository directly. Works great. Thanks!\n. Worked great! Thanks.\n. ",
    "SyntaxGeek": "Ok, thanks for the reply.\n. ",
    "rolandoldengarm": "Bedankt :)\n. @wdo3650 Thank you, I've updated the PR!\n. ",
    "Geraint87": "I have updated to the latest version of Office Fabric from Nuget (v2.6.1), and I am still getting this error with date pickers.\nI see the fix has been merged to master, but why isn't it working?\nThe second date picker appearing in front of the selection frame (Chrome, IE, Firefox):\n\n(Excel add-in)\n\n. ",
    "msftclas": "Hi @wdo3650, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (William Do). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @andrewconnell, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @wdo3650, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (William Do). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. @wdo3650, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, MSBOT;\n. Hi @wdo3650, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (William Do). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. @wdo3650, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, MSBOT;\n. Hi @robi26, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @zkoehne, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Zach Koehne). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @VeldMuijz, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @ericivarsson, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @aremes, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @vzaidman, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @vzaidman, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @Sebazzz, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. @Sebazzz, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, MSBOT;\n. Hi @harry8525, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. @harry8525, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, MSBOT;\n. Hi @TBag, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @TBag, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @TBag, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @StfBauer, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @estruyf, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. @estruyf, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, MSBOT;\n. Hi @dammittom, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @mikewheaton, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. @mikewheaton, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, MSBOT;\n. Hi @tomaon, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @tomaon, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @mikewheaton, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @dammittom, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. @dammittom, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, MSBOT;\n. Hi @mikewheaton, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @estruyf, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @estruyf, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @mikewheaton, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Mike Wheaton). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @s-KaiNet, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @StfBauer, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @tomaon, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @tomaon, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @pra85, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @SteenMolberg, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @gitter-badger, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @manndave, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. @manndave, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, MSBOT;\n. Hi @manndave, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @manndave, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @chrisahhh, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Chris Barrett). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @chrisahhh, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Chris Barrett). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @chrisahhh, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Chris Barrett). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @chrisahhh, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Chris Barrett). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @chrisahhh, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Chris Barrett). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @manndave, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @av-virlan, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nWe will now validate the agreement and then real humans will evaluate your PR.\nTTYL, MSBOT;\n. Hi @MIchaelMainer, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Michael Mainer). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @janeycooling11, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @manndave, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @johnmeilleur, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @johnmeilleur, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @atneik, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Aniket Handa). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @maxali, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @tyrasm, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. @tyrasm, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, MSBOT;\n. Hi @tyrasm, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @atneik, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Aniket Handa). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @atneik, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Aniket Handa). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @lixonic, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. @lixonic, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, MSBOT;\n. Hi @lixonic, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nWe will now validate the agreement and then real humans will evaluate your PR.\nTTYL, MSBOT;\n. Hi @lixonic, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nWe will now validate the agreement and then real humans will evaluate your PR.\nTTYL, MSBOT;\n. Hi @Rickyuu, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @Rickyuu, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @lixonic, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @beneficialmedia, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. @beneficialmedia, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, MSBOT;\n. Hi @lixonic, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @Rick-Kirkham, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Ricky Kirkham). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @pkbullock, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. @pkbullock, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, MSBOT;\n. Hi @greenkeeperio-bot, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @greenkeeperio-bot, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @greenkeeperio-bot, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @jlsfernandez, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @jlsfernandez, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @greenkeeperio-bot, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @greenkeeperio-bot, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @MicrosoftMTR, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @greenkeeperio-bot, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @leddie24, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @leddie24, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @leddie24, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @leddie24, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @antonlabunets, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @lafe, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @micahgodbolt, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Micah Godbolt). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @micahgodbolt, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Micah Godbolt). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @micahgodbolt, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Micah Godbolt). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @micahgodbolt, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Micah Godbolt). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. \n@Hongbo-Miao,\nThanks for your contribution as a Microsoft full-time employee or intern. You do not need to sign a CLA.\nThanks,\nMicrosoft Pull Request Bot. \n@mdahamiwal,\nThanks for your contribution as a Microsoft full-time employee or intern. You do not need to sign a CLA.\nThanks,\nMicrosoft Pull Request Bot. \nThis seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. We will now review your pull request.\nThanks,\nMicrosoft Pull Request Bot. \n@prakashspatil,\nThanks for your contribution.\nTo ensure that the project team has proper rights to use your work, please complete the Contribution License Agreement at https://cla.microsoft.com.\nIt will cover your contributions to all Microsoft-managed open source projects.\nThanks,\nMicrosoft Pull Request Bot. \n@lynamemi,\nThanks for your contribution as a Microsoft full-time employee or intern. You do not need to sign a CLA.\nThanks,\nMicrosoft Pull Request Bot. \n@lynamemi,\nThanks for your contribution as a Microsoft full-time employee or intern. You do not need to sign a CLA.\nThanks,\nMicrosoft Pull Request Bot. \nThis seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. We will now review your pull request.\nThanks,\nMicrosoft Pull Request Bot.  All CLA requirements met.. ",
    "waldekmastykarz": "Great to hear that it's on your radar! One would be the regular Delve-card size. The order would be smaller so it would be embeddable. You can see the example of a smaller card in a sample lab I've built around it at https://github.com/waldekmastykarz/lab-officegraph-trendinginthissite. In there the card is 140px wide if I'm correct.\n. Awesome! Looking forward to it and please let me know if there is anything I could help with.\n. Awesome @ericthompson! Please let me know if there is anything that I could help with.\n. :+1: \n. I'll take a look at what's available and will let you know if it's what I mean. Thanks for the tip! :+1: \n. The Forms and Video Portal samples are kind of what I'm talking about. The Forms sample seems however to be broken (in Safari on OS X) and the Video Portal makes little use of the Office UI Fabric (nav bar only). It would be very helpful if you could extend these samples in the future to help us understand how the different pieces could be used to compose a complete UX :smile: \n. :+1: \n. Attached is how the sample is displayed in Safari on OS X. Additionally clicking on any of the controls (like date picker or drop-down) doesn't seem to do anything.\n\n. No problem. Please let me know if I can help with anything.\n. :+1: \n. I haven't done anything special other than trying to run the sample.\n. @ericthompson it was the version from 23 days ago. I basically cloned the latest version available in the repo.\n. Sorry for late reply. Just tried it and it seems to be working just fine.\n. ",
    "anhldbk": "Is the component ready yet?. ",
    "elegault": "+1 on wanting this ability. I was just pulling my hair out wondering why the value I was setting it in code wasn't working. I come here to check and sure enough, it's not supported out of the box!  FYI when selectedIndex or value is set, or even setting selected='selected' on an individual option - the input element correctly contains the value in all related attributes/properties. It just doesn't update the displayed text and selection.\n. Awesome, thanks Oisin!\n. Oops: If you comment out the entire 'ms-NavBar' div block the UI...\n. I figured out the problem: for whatever reason referencing the fabric .css files via CDN is not working.  Everything works if I reference the .css files locally.  Shouldn't the CDN reference work though?\n. It's still not working!\n<link rel=\"stylesheet\" href=\"http://appsforoffice.microsoft.com/fabric/1.0/fabric.min.css\">\n<link rel=\"stylesheet\" href=\"http://appsforoffice.microsoft.com/fabric/1.0/fabric.components.min.css\">\n. Yup, I can hit it!  I've updated the sample project: http://aka.ms/V127h2.  You can see how if you remove the comment around the CDN URL in the header (and comment out the local .css refs below it) that it still doesn't work.  What does work with the CDN though is a prompt to display secure content - like it expects an https: reference - but that doesn't work either (although the prompt goes away).\n. Hey no problem, glad I could help\n. Okay, it's been updated\n. Honestly, I'm not sure which end the problem is on. See issue #251 \n. Any ideas @battletoilet  or @ericthompson?\n. I've got this working in a different project, so the problem is clearly on my end.  Sorry!  Carry on...\n. I'm going to reopen this because I need to get to the bottom of what the problem is - whether it is on my end or not.\nProblem 1: See http://aka.ms/Dtxwlh. Note how the dropdown arrow is not correctly rendered. I can't see anything obviously wrong with my markup.\nProblem 2: See http://aka.ms/V127h2. The dropdown isn't rendered at all. I'm not sure if the problem is in DropdownTest.html or ../../Content/Dropdown/Jquery.Dropdown.js or in the fabric.css files via CDN.  Feel free to alter the head to reference the local fabric.css files in ../../Content/css instead.\nAny guidance would be appreciated!\n. OY! The problem is simple - in fabric.components.css .ms-Dropdown-select has display:none. No wonder it's not visible, but why is this hidden by default??\n. My bad, I remember reading about that behaviour before. But it still doesn't work, no dropdown is ever seen - see my sample Napa project: http://aka.ms/V127h2. I can't figure out what's wrong and it's driving me nuts!\n. Thanks Mike - your sample works, but the markup is effectively identical to the sample at dev.office.com. Am I missing something?\n. The return function in Jquery.Dropdown.js never fires but it's definitely being initialized and I am calling $(\".ms-DropDown\").Dropdown().\n. I'm already using .Dropdown, not .DropDown! Like I said, the main function gets hit with a breakpoint, but the return function never gets hit. It seems like there's a wrong name somewhere but I'm stumped! I may be doing something stupid but I'd sure like to know what it is!\n. Oh for the element name oh geez I'll try it when I get back\nSent from my Windows Phone\n\nFrom: Mike Wheatonmailto:notifications@github.com\nSent: \u200e2/\u200e1/\u200e2016 3:27 PM\nTo: OfficeDev/Office-UI-Fabricmailto:Office-UI-Fabric@noreply.github.com\nCc: Eric Legaultmailto:eric@ericlegault.com\nSubject: Re: [Office-UI-Fabric] Dropdown component doesn't work... (#251)\nIn DropdownTest.js I'm still seeing DropDown:\n[image]https://cloud.githubusercontent.com/assets/1382445/12731787/691f4d92-c8e7-11e5-9510-14ddf21bca3e.png\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/OfficeDev/Office-UI-Fabric/issues/251#issuecomment-178201794.\n. (I mean the 'class' name) Yup, that works. I'm an idiot. I hate typos. Sorry! Carry on folks and thanks for your patience!\n. Haha true! But BOO to all these IDE tools I have loaded in Visual Studio and none of them caught it :-|\n. ",
    "MIchaelMainer": "I tried what @oising provided. It worked for me. \n. ",
    "andikrueger": "@oising: Your solution works like a charm. Do you submit a PR or should someone take over?\n. the class .is-disabled contains the \"pointer-events\" attribute, that prevents all events for the DIV and for underlying elements in newer browsers. It's not possible to click into the input and edit it. During the form submit it still gets posted to the server, which is ok in most cases. \nI think I'll stick with adding disabled to the input element, as you recommended. This provides cross browser compatibility. \nSeen that way, .is-disabled does not prevent the pointer-event on the div and its child elements in IE10. \n. ",
    "unindented": "Ah awesome, thank you! Any way I can help?\n. My only issue when running npm i office-ui-fabric was that it required bower to be installed in order to execute its post-install step. Why is this necessary?\n. Awesome!\n. @ericthompson I think all the fields (primaryText, secondaryText, tertiaryText, optionalText) overflow, so it may be worth adding truncation to all of them.\nThanks!\n. :+1: \n. :+1: \n. ",
    "knom": "Is there any solution to this atm?\nHow do I prepopulate date picker with a default value?\n. +1\n. ",
    "bpringe": "I am also having a problem setting the default date for the DatePicker component. Is there a solution?. Thank you for the information. I realized my problem was with the way I was setting the value of the DatePicker (as a string instead of a Date). I was setting it as value=\"2017/02/08\" instead of value={new Date(\"2017/02/08\")}. Changing it to the latter worked.. ",
    "leddie24": "Hi @bpringe , is this for the js component? If so, as of version 1.3.0, we've fixed DatePicker to allow the user to utilize pickadate's API methods.  You can see the PR here: https://github.com/OfficeDev/office-ui-fabric-js/pull/191\nHere's a code snippet for example:\n```\ndatepicker = new fabric'DatePicker';\n// Change selected date\ndatepicker.picker.set('select', [2012, 0, 1]);\n// Change highlighted date\ndatepicker.picker.set('highlight', [2015, 3, 20])\n```\n. \nHere's the list of my npm install deprecated files as of today (with a clean clone).  None of these (lodash, minimatch, graceful-fs) are in our actual dev dependencies, so it's out of the scope of the issue to fix them.  Closing for now, we can investigate in the future if this list changes.\n. Hi @patrickabel.  I just tried reproing this with a page with some random icons and couldn't see the issue.  Running OS X v 10.12, Safari Version 10.0 (12602.1.50.0.10), Fabric core version 4.0.0 from the CDN.  Can you update the ticket with a code snippet and other information?\nThanks\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Test</title>\n    <link rel=\"stylesheet\" href=\"https://appsforoffice.microsoft.com/fabric/fabric-core/4.0.0/fabric.min.css\">\n</head>\n<body>\n    <ul>\n        <li><i class=\"ms-Icon ms-Icon--Mail\" aria-hidden=\"true\"></i></li>\n        <li><i class=\"ms-Icon ms-Icon--MapPin\" aria-hidden=\"true\"></i></li>\n        <li><i class=\"ms-Icon ms-Icon--Pin\" aria-hidden=\"true\"></i></li>\n        <li><i class=\"ms-Icon ms-Icon--FavoriteStar\" aria-hidden=\"true\"></i></li>\n    </ul>\n</body>\n</html>\n. I added documentation in fabric-website.  There's a PR for it here\nhttps://onedrive.visualstudio.com/Design/Design%20Development/_git/fabric-website/pullrequest/30708?_a=overview\nShould we add another page inside of /ghdocs for brandicons, or add content to /src/documentation/pages/icons?\n. Hey @mikewheaton , this was previously hard coded HTML.  I changed it in commit 31ba6c6 to load the the json data and generate the page with handlebars\n. ",
    "PFAR": "Glad it contributed to spark a great discussion ;-) Looking forward to the design changes!\n. ",
    "VeldMuijz": "I didn't see a develop branch or whatever so this change was made on the master branch\n. ",
    "Arthur-Z": "\n. ",
    "dmitriyyepishin": "Thanks! I was trying to figure out solution for this and your fix works great.\n. Thanks for looking into this. I think I understand the current difference between them - in Navigation Bar the item that is clicked on is selected (by being underlined) - thus it is useful for navigation, but in Command Bar, the selection does not happen.\nThe samples are misleading: Navigation Bar sample has an \"Upload\" button, which get's selected when clicked upon, which does not seem to make sense, and Command Bar has a Categories drop-down, which looks like a navigational button.\nIt seems to me that these two components should be combined into one and there should be an option to create a navigation element, which would be selected or un-selected when clicked on, or a command element, which would not be selected. \nIn additions, the design guidelines (https://msdn.microsoft.com/EN-US/library/office/mt484319.aspx) only mention a Nav Bar.\n. That's a great idea. Thanks!\n. Here's a fix that seems to work: https://codepen.io/dyepishin/pen/WwzbwK/?editors=1010\n. Nice. Thank you.\n. There are couple issues in the new code:\n- If no link is specified when using addItem(), then href is set to \u201cundefined\u201d\n- Code comment in removeItemByPosition is incorrect\nI also would like to suggest the following additions to the Breadcrumb component, which I used in my app:\n- New public method clear, which removes all items from the breadcrumb\n- New public method removeItemsAfterPosition, which removes all breadcrumb items after a specified position (this seems to be something often needed)\n- Add new style js-auto-remove to breadcrumb div, which, if specified, indicates that when an breadcrumb item is clicked, all items after it should be removed.\nHere's a demo: https://codepen.io/dyepishin/pen/LNJXBO\n. Thanks!\n. ",
    "ericivarsson": "Glad to help! @ericthompson I've created a pull request with a small change in Dropdown.less for you to review.\n. ",
    "martellaj": "Then I think it's a bug. The button in it's regular state and disabled state is actually the same color (#f4f4f4). \nButton CSS without state\n\nButton CSS with disabled state\n\n. Do you have code that confirms that with the latest version? You can see in the CSS screenshot I took above that the color attribute doesn't change. I can show you a side-by-side of my button, but spoiler, they look the same. :dancers: \n. ",
    "ssandu": "This is my client web part now and some of your samples modified\n\n\n. Hi Eric\nI don't want to use primaryText because the app part will be inserted on the home page of an O365 site collection and there that primaryText will be the largest font on the page. It doesn't look nice. On the left/top I have navigation links which have the same font as secondaryText.\n. A MiniList maybe ?\n. The app part screenshot is above. It is called Sarcini nerezolate. The scroll bar there looks like from another world \u263a\n. @ericthompson you are right.Here's a sample site with secondaryText. As you can see it looks like the right part of the page. Imagine how it looks like with primaryText. It will be the largest font (larger than web part titlle) on the page even maybe it's not so important.\n\n. ",
    "jedunn": "I think additional list styles and layouts are a great idea. To make sure I understand this particular context fully I have one Q: Do we have a screenshot or sample of the o365 homepage where this web part will sit?\n. ",
    "jigargandhi": ":+1: \n. ",
    "BoasE": "I found it. i missed a class  ms-NavBar-lin\n. ",
    "reego-fr": "Hi,\nwas the license updated ? \nFrom http://aka.ms/fabric-font-license I don't read anything that would prevent one from downloading the assets from CDN and make them available from a locally accessible server for use in intranet-only Office Add-in. Or am I totally wrong ?. ",
    "MacOkieh": "OK, only few seconds later found the solution. I added \"chat\" and \"video\" to the detailList but set the style to \"display: none\". No it works. \n. ",
    "ryankmcintyre": "Edge is 20.10240.16384.0\nIE is 11.0.10240.16431 (also has \"Update Versions: 11.0.22\")\n. I'm sure the office.css folks have a reason for setting line-height. It would be nice if the UI Fabric could include an override to set line-height to normal for folks using the fabric within Office.\n. ",
    "micnyk": "@ericthompson Using classes you wrote above produces:\ncolor: \"[theme:success, default: #107c10]\";\nWhat's wrong? How to use it?\n\n. ",
    "Steve887": "The scenario I'm in is I am adding the main LESS files as imports in my site's LESS file so I can put my custom styles and Fabric styles together allowing me to access the classes defined in Fabric in my custom styles and to end up with one minified CSS file.\n. I'm not working on this, we've moved in a different direction.\n. ",
    "AngelaDiaFazio": "Go home William\nOn Fri, Nov 20, 2015 at 7:10 PM, William Do notifications@github.com\nwrote:\n\nReopened #212 https://github.com/OfficeDev/Office-UI-Fabric/pull/212.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/OfficeDev/Office-UI-Fabric/pull/212#event-471069033.\n\n\nADF\n. ",
    "gunjandatta": "Can we re-open this issue? A carousel component would be useful.. Yes, I'm using the Fabric React Framework, and if you could add a request to the Trello board I would really appreciate it.. ",
    "bendewey": "What's the status on the carousel?  There doesn't seem to be any activity on the trello board or fabric react side.  Does this need to be added to the fabric first before becoming a react component?. ",
    "shaipetel": "FYI if anyone still interested, we just implemented this in our own hosted version of Office UI Fabric JS.\nIt has a few more fixes, changes, and we are hosting it for free on our servers.\nIf you are interested, here it is:\nhttps://kwizcom.blogspot.ca/2017/09/office-ui-fabric-js-multi-select-support.html\nI'd love to hear comments on what we done, and hopefully soon we will upload all our source to GitHub.. ",
    "janpieterz": "For me, creating a dependency on jQuery would actually 'ruin' the potential of this for me.\n. ",
    "manndave": "See #418 \n. There are code snippets available here: https://github.com/Sector43/FabricSnippets.  The snippets are for VSCode, but there is also a small console application there that will convert them to the format required by Visual Studio.  . OK, will do.  Probably in a few days.\n. FWIW, they're not in 2.0, either.\n. Crap.  I deleted my forked repo from the wrong account so this PR is probably lost.  I still have a local copy so let me know if you need me to resubmit the PR.  :-(\n. Done: https://github.com/OfficeDev/Office-UI-Fabric/pull/413.\nSorry for the hassle...\n. I am by no means an expert on CSS and SVGs, but so long as\n1. We can still style the icons (color, size, background) solely with CSS\n2. We don't take on a server-side dependency\nit seems to make sense.  My questions would be...what would we lose and what gets harder?\nAlso, would the perf improvement be initial load only, and after that the fonts are cached locally?  If so, that negates a lot of the perf benefits, IMHO.\n. Hmmm.. I handle this exact scenario (other tabs and icons) in the PR I submitted a few days ago, but also some other enhancements and bug fixes (like the markup and CSS only working if the tabs and action icons are in the correct order.)\nBased on the above, I guess my PR won't be accepted.  What changes do you need me to make to make it acceptable?\n. Roger.  (huh?)\n. Looks like they weren't included in 2.0.1 either.  Specifically, this is any selector beginning with \".ms-Facepile\"\n. I'll dig back in to this and make the changes, but it will be a few days.  I'll repost the PR when it is ready.  Thanks.\n. @mikewheaton: I think I got all of your comments addressed.  I also added an example of using the expander class to show details in an action\n. At this point, it probably makes the most sense not to pursue this PR since the team is switching to vanilla-JS.  If you want me to do the vanilla-JS version of this let me know and I'll do a new PR\n. @wdo3650: Not sure what's going on.  When I open the source files in VSCode (I checked all of them for PeoplePicker) the buttonand sibling divelements are all perfectly lined up.\n. @wdo3650: That might have been it.  I replaced any tabs with spaces, but I'm not sure if it made things better or worse.  It's hard to tell since it all looks right in VSCode either way.\n. Thanks.  I'm open to whatever makes the most sense and provides the most value, knowing that in the long run one person (me, for now) almost certainly cannot keep pace with the whole Fabric community as the core project evolves.  Like I said, ideas welcome.  :-)\n. Any further discussion on this?  I've got someone interested in providing a way to automate the conversion of the VSCode snippets to Visual Studio, which is a nice capability.  I just pushed a new release of the Snippets, but need to update them to the 2.2.0 release.\nThanks.\n. No worries, I'm just coming back up for air after finishing the PS course and some client work so I figured I would check in.  I was thinking of trying to do it in a Gulp task.  If I'm successful, do you think the task could be added as an option in the build process?\n. OK.  I'll try to get started soon and get back to you on progress.  Yes, I'd be using the HTML templates files as the source, I don't see a need to touch the Sass/CSS as all the snippets do is insert the HTML in place of the trigger characters.  At a high level, here's what I see the process looking like:\n1. Read the source HTML from the template files for each component\n2. Wrap that input with the snippet schema (VSCode/VS)\n3. Write the final file to the /dist folder\nActually, now thinking about it a little more...the problem is going to be getting the right JavaScript and any embedded components or elements (for example, a CommandBar in the Panel, or table rows inside the table).  Let me noodle on it for a bit and see what I can come up with and then I'll report back...\n. I can't come up with a reliable way of doing this that isn't extremely fragile without:\n1. Adding some type of indicators in the HTML as comments to indicate things needed by the snippet generator, such as nested components, etc.\n2. Refocusing the HTML to be less of an example of a fully working component and more of a developer focused piece of reusable code\n3. Adding an additional file to the source tree that is the snippet file itself which must then be maintained.\nNone of those are great options, but I know I can't maintain it all myself - I'm 2 releases behind now, but hope to get caught up this week.\nThe problem is really when one HTML file for a component has other components within it - CommandBar inside Panel, indidual peoplepicker results inside a peoplepicker component, etc.  I think I have a way to tackle everything else in a Gulp task.\nOf the three options above, I think the first one would be least intrusive and easiest to maintain.  I'm open to other ideas if anyone has them.\nThanks,\nDave\n. Hmmm...Yes, that might help.  I didn't know that was happening, but good to hear.  Are there samples somewhere I can take a look at?\n. @mikewheaton: Haven't had a chance yet, probably this weekend or early next week.\nThanks.\n. I have code to resolve this and the the other Facepile bug I just opened (#426).  It needs a little cleanup and then more testing. I'm swamped this week and beginning of next, but I can whip the code into shape and submit a PR for these if no one else gets to it before I get the chance.\n. Client stuff keeping me OOO for the rest of the week, but I'll do this ASAP and re-push the PR.  Thanks\n. New PR posted...\n. New PR posted\n. Make sure your doctype is correct:  <!doctype html>\n. Well, that limits you to only 130 releases.  What do you do for 131?  ;-)\n. Still having this problem.  Same problem in JS project, opened Issue there: https://github.com/OfficeDev/office-ui-fabric-js/issues/299\nAny update?\nHere is the relevant section of my config file: \n{\n        \"name\": \"custom-bundle\",\n        \"description\": \"A custom bundle including a handful of modules.\",\n        \"includes\": [\n          \"_Fabric.Color.Variables\",\n          \"_Fabric.Color.Mixins\",\n          \"_Fabric.Typography.Variables\",\n          \"_Fabric.Typography\",\n          \"_Fabric.Typography.Fonts\",\n          \"_Fabric.Typography.Languageoverrides\",\n          \"_Fabric.Utilities\",\n          \"Button\",\n          \"PersonaCard\"\n        ],\n        \"options\": {\n          \"verbose\": true,\n          \"logWarnings\": false\n          }\n}\nThanks.. Update/clarification:\nI get all of the index.html files under _dist\\documentation\\components_*  but the only .html files I get under _dist\\components_* are Dropdown.Disabled.html, Toggle.Disabled.html, Toggle.TextLeft.html and of those, only Toggle.Disabled has HTML in it, the other 2 have the HandleBars markup.\nI'm not completely sure what the goal is, so I'm not sure what to expect.  \nThanks,\nDave\n. @mikewheaton:  Thanks for that.  I had worked all of that out, but I guess the question is what should a person who just wants to use Fabric (so doesn't care about the build process, typescript, handlebars, etc) look for?  In the blog post about 3.0 it says that the build process creates HTML files - is this the files in dist/documentation/components/* which have a lot more than just the HTML?  Are users expected to copy the HTML they need from there?  I ask because, while I'm OK with that, I'm not sure that's best for devs under a deadline.  I'm also looking at the automated generation of snippets and an updated Pluralsight course for Fabric v3 and want to know the best thing to teach people.\nThanks,\nDave\n. OK, makes sense.   I'm working on some additions to the build process to get the snippets automatically created from the hbs files (I sent you an email with some questions).  Definitely won't have anything in place for a release this week, though.  I'm just beginning the Pluralsight course, so maybe there's time to get it worked out before it's finished.  I'm game to contribute whatever I can to help.\n. Bump\n. Bump\n. OK, thanks @Jahnp.  The Releases page is a little confusing (showing 2.6.2 as \"latest\") but I suppose it will be easier/better once we get a new 4.x release.  Github doesn't seem to make it easy to maintain multiple \"active\" versions.  :-(\n. Excellent.  That's what I hoped/thought might be the case, but wanted to confirm.  \nUnrelated, but FYI, my latest course on Fabric is done and should be published on Pluralsight soon.  I cover using Selawik in the course, which is where this question came from.\nThanks.. ",
    "AlexHiesch": "Wonderful, thanks for listening. I love this direct interaction possibilities. I'll try to support you guys how ever I can.\n. ",
    "stewartadam": "What happened to this? That roadmap link points to the new Trello board, and I can't find this request on it.. ",
    "anditherobot": "That was quick! Alright, I will give it a try.\n. ",
    "thephoenics": "Looks like it is already added to bower, all you need to do is expose it through the readme.\nbower install office-ui-fabric would do the trick :).\n. ",
    "TBag": "@battletoilet Great handle!  :)\n. @jthake We are glad to be able to help!\n. OK.  Sorry about that.  I am trying to figure out how to make the new commit in SourceTree.\nFrom: Eric Thompson [mailto:notifications@github.com]\nSent: Friday, December 18, 2015 4:36 PM\nTo: OfficeDev/Office-UI-Fabric Office-UI-Fabric@noreply.github.com\nCc: Todd Baginski todd@toddbaginski.com\nSubject: Re: [Office-UI-Fabric] Office UI Fabric Issue 236 (#237)\nIn src/components/PersonaCard/Jquery.PersonaCard.jshttps://github.com/OfficeDev/Office-UI-Fabric/pull/237#discussion_r48072642:\n\n@@ -24,7 +24,7 @@\n```\n     $(this).addClass('is-active');\n /** Function for switching selected item into view by adding a class to ul. */\n\n-\n     var updateForItem = function(item){\n  -\n     var updateForItem = function(wrapper, item){\n var wrapper = document.getElementById(\"detailList\");\n\n```\n\nIt looks like you forgot to remove this line.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/OfficeDev/Office-UI-Fabric/pull/237/files#r48072642.\n. ",
    "jthake-msft": "Thanks @TBag for your contributions here!\n. ",
    "tomaon": "Same as #266, #294\nFocuses label.ms-Label, not input.ms-TextField-field\n. expected (= fixed): \n  \nactual:\n\n. ",
    "chriscoyier": "You can send people to the CodePen Editor with your code filled in to a brand new Pen using a URL like:\nhttp://codepen.io/pen?template=gPGzgX\n. ",
    "TheTedAdams": "That will work. I still think it would be useful to be able to declare size and weight with a single class (since that is how the typography will normally be scaled) without color, but for now I can do it with ms-fontSize-* and ms-fontWeight-*. Thanks for the info!\n. Are the .ms-fontSize-[size] classes going to be in the documentation? Issue closed and I don't see them at http://dev.office.com/fabric/styles\n. @mikewheaton thanks for the explanation about not necessarily wanting to support deviation from the design language. That makes sense, and I appreciate you being willing to discuss it.\nI definitely know I can write my own class to override, but unless I'm bringing in the fabric source as a sub-module that means if Fabric ever changes their color value I'd have to duplicate any updates, which I'd like to avoid.\nIn my mind the utility classes would be useful as a means to override default styles while still using the fabric typography/color palette. At least that's how I use them. If I left everything default I would never need ms-bgColor, ms-fontColor, ms-borderColor, ms-fontSize etc. \n. ",
    "estruyf": "Hi @mikewheaton, you closed it a bit too fast :-). \nOffset and push/pull are not the same. Offset classes are setup with \"margin-left\" which will force other columns to move over the grid. It can be used to let all elements start from a specific point on the grid.\nThe push or pull classes are setup with \"left\" or \"right\", which does only position a specific element on which the push or pull class is defined. That also means that you could overlap some elements if you are not cautious.\nI created another codepen to show you the difference: http://codepen.io/anon/pen/WrXaQm\n. Good to know, I've updated the templates.\n. ",
    "jimbarrett33": "Is there some thought around complementing bootstrap's (responsive) design instead of trying to redo what they have done?  There are probably licensing/copyright issues I'm not aware of but I see no problem putting a bootstrap responsive-table intermingled with Office UI Fabric (I'm doing it now).  The Fabric tables are very verbose and for any sizable table will generate too much HTML.\n. On this GitHub site and if you download the source from GitHub also.\nhttps://github.com/OfficeDev/Office-UI-Fabric/tree/master/src/components/List\nList.Grid.html\nList.html\nOn the documentation page it is 2 different ways:\n-  when you click the HTML button you will not see the ul\n- when you view the actual source you do see the ul  \nNote that I have found using the actual source on the documentation page to be more reliable with some of the components but maybe I shouldn't do that anymore\nThanks.\n. I agree with @mikewheaton but I wasn't sure the extent to which you wanted feedback.  I think the bootstrap implementation of lists is nice and uses UL and LI.  Basically if you use UL class=\"list list-unstyled list-inline\" in your list you can pretty much do anything to the LI that you want (including no css classes) but you also get a responsive list by default as the LI's will wrap within the container they are in.  So if you take it once step further and wrap the UL in a bootstrap grid and you had col-md-6 your list would wrap nicely within half of medium screen etc.  Bootstrap takes advantage of css inheritance a lot which results in less verbose css more times than not.\nAlso agree with @mikewheaton in that the same thing applies to tables which I think should use TABLE, TBODY, TR, and TD\nAgain, I am sure there a many considerations that I am missing that your team had to deal with but I thought I would put it out there.\n. Thanks for the reply.  I can't send a screenshot right now.  Basically, I just want a smaller button which I can accomplish by using ms-Button and then overriding the height, min-width, and padding in a new CSS class.  It's just that a button with a min-width of 80 (padding left/right of 20px each) takes up 1/4 of the width of a default task pane (1/3 if on a smaller device like a surface) which can make layout difficult sometimes.\n. Thanks a lot @Danny-Engelman.  I guessed I missed that. The name changing is a little hard to follow!. Ok, no problem.  Just giving feedback that as a help page for devs it is not easy to use. Devs should be able to load the page use the browser \"find\" and jump right to the icon.  Right now browser \"find\" does find the icon but since the text does not show you can't tell what it is finding.  Spacing can be handled with CSS wrapping.  Bootstrap site is a good example. Sorry, no time to do pull request.. ",
    "pschaeflein": "I've submitted a sample to the OfficeDev PnP repo that includes Fabric in an MVC app. It includes NavBar, Grid (including tabular data), CommandBar, SearchBox, Toogle, Dropdown and TextField.\nIt does not yet have a permanent url, but you can review the code at https://github.com/pschaeflein/PnP/tree/samples.office365api.groups/Samples/MicrosoftGraph.Office365.GroupsExplorer and track the PR at https://github.com/OfficeDev/PnP/pull/1307\n. @mikewheaton Sample is here: https://github.com/OfficeDev/PnP/tree/master/Samples/MicrosoftGraph.Office365.GroupsExplorer\n. They way I interpret the controls -- the command bar is used to invoke actions on the \"current\" or \"selected\" item. As such, I assume I need to provide an href or client script to be invoked when the command is clicked.\nI used an href in a project. Doing so added an underline on the link text, so I added text-decoration:none to the ms-CommandBarItem--link class.\n. In my scenario, I did not want the column width fixed, rather I wanted the column width to expand so that the text did not wrap. Seems that Stf's comment is the opposite. (Although I'm not a CSS expert, so I may be understanding it wrong.) \n. That all sounds fine, but what if I want the table column to expand so that the text doesn't wrap and I don't want ellipses?\n- Paul\nThumbed from my phone. Please forgive brevity and typos.\nOn Wed, Feb 24, 2016 at 2:36 PM -0800, \"Mike Wheaton\" notifications@github.com<mailto:notifications@github.com> wrote:\nWe discussed this today and decided to create a new utility, .ms-u-textTruncate which can be used to prevent text from wrapping to a second line and show an ellipsis (...) to indicate that the text has been truncated. This issue will now track adding that utility class.\nAs for table layouts, we now have a separate issuehttps://github.com/OfficeDev/Office-UI-Fabric/issues/386 to track the work of adding a .ms-Table--fixed modifier.\n\nReply to this email directly or view it on GitHubhttps://github.com/OfficeDev/Office-UI-Fabric/issues/365#issuecomment-188490554.\n. ",
    "priand": "Some of the links in this discussion are broken. Is there a sample page template showing a branded header, a footer, a basic navigation menu and a body?. ",
    "jshowatt": "Disabled works in 2.0.1 except that the label color is #333333 instead of #a6a6a6 like choice field labels.\n. ",
    "cut2run": "Mike,\nThe control is looking sharp and I would like to use it, but ...\nAs I add more and more UI pieces into our add-in I believe the request I made is the necessity other than enhancement. This is basic control we are talking about, not like fancy request. The control has to have option to be pre-selected as checkbox or radio controls included into library. Otherwise it is unuseful when doesn't reflect to selected value.\nYou right, I am able to read selected value, but not set it in the way control display selection properly.\nFrom says above I would like to ask you to review the request again to give more priority may be?\n. Thank you, I'll have a look.\n. There is no problem to keep it in. In fact as my work around I left the top level node in place as follow ...\n<!-- Overflow Command -->\n                    <div class=\"ms-CommandBarItem ms-CommandBarItem--iconOnly ms-CommandBarItem-overflow\">\n                    </div>\n                    <!-- End Overflow Command -->\nThis gives me input parameter overflowwidth set to 0.\nAs far as I see the points of making change as follow ...\n1. If I don't want to have overflow I should be able to delete the section completely. why would I leave the part of the HTML section in place? Just to make variable equal to zero? You may have this assumption in the control itself and set overflow to 0 when entire section doesn't exist.\n2. If I leave it in place I would probably want to leave it completely, as the part of the control, not just top node as I did. In this case I have to implement \"ms-ContextualMenu\", set \"ms-CommandBarItem-commandText\" (I have localization and have to set every single line via code). Why would I want to do all this work to make the section complete?\n3. The last point  ... as the general rule for development if I have something in my HTML I have to take care of it, not relay this part will never shows up. Otherwise I should remove it completely.\nI hope this is confirm there is certain use case for this simple control change. Otherwise there is work around anyway.\nThank you for your attention, Mike. \n. Thanks for adding to the roadmap.\n. ",
    "schott12521": "Oscar, make sure that you are initializing the dropdown AFTER setting the default value. In other words, set the default value first THEN initialize the ms-Dropdown, that works for me on 2.6.1\n. I was able to add a link for the overflow buttons using this snippet in the javascript function for createMenuItem:\njavascript\nvar item = '<li class=\"ms-ContextualMenu-item\"><a class=\"ms-ContextualMenu-link\" href=\"' + linkToButton + '\">';\nitem += /* Button link action */\nitem += '</a></li>';\nHowever, I'm running into some more problems with the commandBar and it's overflow now. If I click outside the area that turns the mouse into a pointer, I will be correctly taken to the link using my method above. However, if I click inside the actual ellipsis area that turns my mouse into a pointer, the overflow will pop open, but no action will be taken.\nAdditionally, if I click outside the pointer area, I can click multiple command bar overflows and it will not cause the other overflows to hide.\n. Currently using Office UI Fabric 2.6., so thanks for the update.\n. ",
    "SteenMolberg": "Below screenshots...\nImage1: Items not selectable. Please not the presence icon placement compared to image2\nImage2: 2 items selected and mouse hovers over a third item.\n\n\n. thx for info Mike\n. ",
    "trasmu": "Seems like we only need the one...\n. +1\nGet Outlook for iOShttps://aka.ms/o0ukef\n\nFrom: Eric Thompson notifications@github.com\nSent: Sunday, June 5, 2016 10:11:49 PM\nTo: OfficeDev/Office-UI-Fabric\nSubject: Re: [OfficeDev/Office-UI-Fabric] Persona: Remove the square persona? (#636)\nAgreed - I think this makes sense.\n\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHubhttps://github.com/OfficeDev/Office-UI-Fabric/issues/636#issuecomment-223840983, or mute the threadhttps://github.com/notifications/unsubscribe/AH4bGTQvq2otHrUBCl7FbRGLGfRIUMmSks5qI0mlgaJpZM4IudDt.\n. Yes, there are certain sizes that the icons are intended to be displayed. As they have been hinted at those sizes.\n. My point is that there is a specific size that the icons are intended to be used at.\nI believe that size is 20px.\n\nFrom: David Zearing [mailto:notifications@github.com]\nSent: Friday, November 11, 2016 2:54 PM\nTo: OfficeDev/office-ui-fabric-core office-ui-fabric-core@noreply.github.com\nCc: Tyler Rasmussen tyrasm@exchange.microsoft.com; Mention mention@noreply.github.com\nSubject: Re: [OfficeDev/office-ui-fabric-core] Font issue: Add icon looks terrible at 14px but ok at 15px. (#835)\nIt is not acceptable to force some icons to 14px and others to 15px at a css layer just to work around font bugs.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHubhttps://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FOfficeDev%2Foffice-ui-fabric-core%2Fissues%2F835%23issuecomment-260074484&data=02%7C01%7Ctyrasm%40exchange.microsoft.com%7Cb56488774b5b401c88d008d40a85a6db%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636145016528940637&sdata=UlQjnaunQ6wO%2F0myGgzmlVGi%2BWBkHojWcE%2BB6dlFPQ8%3D&reserved=0, or mute the threadhttps://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAH4bGfvaerDuIRl-bYbglZdh26IMMk6Tks5q9PISgaJpZM4KsHbC&data=02%7C01%7Ctyrasm%40exchange.microsoft.com%7Cb56488774b5b401c88d008d40a85a6db%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636145016528940637&sdata=V29o%2Fyvbdl5%2Bf3WmU4CBg%2BwEe0GnsQJFFM14cISwmeo%3D&reserved=0.\n. !?\n. ",
    "dzearing": "@wdo3650 I'm looking at http://dev.office.com/fabric/components/breadcrumb\nClick \"html\" example. It's busted.\n. Cool, sounds good. Right now we end up explicitly overriding it in a number of places, so removing it would be ideal.\n. Approved\n\n. Approved\n. Approved\n\n. Working on it\n. It's fine if 14px looks consistently good for all icons, but 15px doesn't. What @trasmu said would make perfect sense, if they all worked that way.\nBut as it is, they aren't consistent! The plus icon above looked bad at 14, but fine at 15.\nBut then I believe the upload looks good at 14, but blurry at 15.\nCan we pick one size and then make sure the hints consistently make that size good?\nBTW non issue on a retina screen... this is specific to devicePixelRatio === 1\n. It is not acceptable to force some icons to 14px and others to 15px at a css layer just to work around font bugs. (Because downstream it's going to make a mess when we try and use the icons in various sizes and scenarios.)\n. @trasmu possible to add hints for the common points? (e.g. if we agree we need 14px size, could we get a hint for that size?)\n. ",
    "smiles2424": "Do you know the version number that it was fixed in? My requirements need a\nlocal copy of Fabric and I just want to have confirmation that my version\nhas the bug in it\nOn Feb 11, 2016 12:33 PM, \"William Do\" notifications@github.com wrote:\n\nThis looks like it's coming from an older version of SearchBox in the docs\nsite which we're working on updating. This issue should be fixed in the\nlatest release in the Fabric repository.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/OfficeDev/Office-UI-Fabric/issues/351#issuecomment-183000330\n.\n. \n",
    "lijunle": "Hope to see some similar things like this: http://getbootstrap.com/css/#forms-control-validation :+1: \n. Hi, @Jahnp Thanks for reviewing! I have updated the PR to create the correpsonding mix-ins for the offset styles. \n. Thank you all for reviewing! \ud83d\udc4d \n. Another improvement on the focusBorder mixin:\nThe current implementation has a limitation that, the .ms-Fabric.is-focusVisible needs to be the parent of the & element. However, it is a common case that, the .ms-Fabric.is-focusVisible is on the first of & element.\nIt means, the following code does not work as expected:\njsx\n<Fabric className=\"container\">\n  <div className=\"row\">\n    <button></button>\n  </div>\n</Fabric>\nscss\n.container {\n  .row {\n    button {\n      @focus-border();\n    }\n  }\n}\nBecause it produces:\ncss\n.ms-Fabric.is-focusVisible .container .row button:focus:after { ... }\nNotice the space between .ms-Fabric.is-focusVisible and .container.\nIt could be great to produce such CSS to make the above structure works:\ncss\n.container.ms-Fabric.is-focusVisible .row button:focus:after { ... }\nI made an attempt with SassScript with the following prototype:\n```scss\n@function slice($list, $start, $end: null) {\n  $newlist: ();\n  $end: if($end == null, length($list), $end);\n@for $i from $start through $end {\n    $newlist: append($newlist, nth($list, $i));\n  }\n@return $newlist;\n}\n@mixin focus-border() {\n  @each $parent in & {\n    $first: nth($parent, 1);\n    $rest: slice($parent, 2);\n    @at-root (with: media) {\n      .helper #{$first} #{$rest}:focus:after\n      #{$first}.helper #{$rest}:focus:after {\n        border: none;\n      }\n    }\n  }\n}\n.container {\n  position: relative;\n  outline: none;\n.row {\n    button, li, a, img {\n      @include focus-border();\n    }\n  }\n}\n```\nIf you think it is good, I could like to send a PR here.. No, that is not what I want. I want the container class is on the ms-Fabric DIV, so I don't need to have another DIV layer here.. As the example shown above. \njsx\n<Fabric className=\"container\"> // <--- notice this className is on Fabric component\n  <div className=\"row\">\n    <button>Click</button>\n  </div>\n</Fabric>\nWith the SCSS code:\nscss\n.container {\n  .row {\n    button {\n      @focus-border(); // <-- this will not work to add focus border for button\n    }\n  }\n}\nThe produce CSS code will NOT work:\ncss\n.ms-Fabric .container .row button:after { // <-- the generated CSS does NOT match the JSX code\n  // focus border rules\n}\nExpected:\ncss\n.ms-Fabric.container .row button:after { // <-- notice there is NO SPACE between .ms-Fabric and .container\n  // focus border rules\n}. > Do you need to combine ms-Fabric with your container?\nI think it is good to combine them. Because React enforce a component returns only one element. So, we will always write a <div> to wrap everything (container). Then, when apply accessibility, the easiest way is to turn the <div> into <Fabric>, then that is all.\nAllow container class sit with ms-Fabric in one DOM will step into Fabric component.\nWhen I see the code or the DOM, I always think about, why we have some many DIV: \ud83d\ude1e \njsx\n<Fabric>\n  <div className=\"container\">\n    <div className=\"row\">\n      <button>Click</button>\n    </div>\n  </div>\n</Fabric>\nThe container and row are just examples. I understand that, in most cases, there will be only two levels.. Sorry, this is my mistake. I am going to fix this.\n. ",
    "sjkp": "Is this scheduled yet?\n. ",
    "Fensterbank": "Could be also added on ListItem component. If you use the list items as links you have the whole text underlined.\n. Full agreement from my point of view.\nIn my case we used the DatePicker inside a SharePoint 2013 SP.UI.ModalDialog and this full page scroll effect was so wrong.\n. Okay, I just wanted to provide a small pull request when I realized, the issue is not in the code.\nThis explains why the bug doesn't occure on your sample site.\nHere we see the following code:\nif (typeof newYear === \"undefined\" || newYear === null) {\n    newYear = $picker.get(\"highlight\").year;\n}\nThis is okay and works, but your DatePicker JS example on http://dev.office.com/fabric/components/datepicker does have another code, which would not work how it should.\nI didn't find the sample code in this repository, so it seems to be a documentation bug on your sample site only.\n. ",
    "DuNuNuBatman": "This would be ideal. We are trying to remove the jQuery dependency in all of our applications.\n. ",
    "kasajian": "I use TypeScript and I think it's great, and it would be good to do this.  But I think what's really needed is to have very simple javascript (vanilla.js) in the reference documentation so people know how to use it regardless of platform.   Whatever UI framework people use, they all can understand the one common language, which is ES 5 vanilla.js (which isn't that bad).   As the world of front-end frameworks is moving to componentization, each has they're own take on it whether it's jquery, react, angular1, angular2, aurelia, winjs or vue.js, you can have someone from the community provide the wrappers for each of those, while the core framework stays neutral.\nUnless I'm misunderstanding something, but I can see using typescript gives you richness in the language, but wiring it up to a particular ui framework is i think an orthogonal concern, IMHO\n. Yeah, Andrew.  You're right.  That makes sense.\nOn Fri, Feb 26, 2016 at 11:11 AM, Andrew Connell notifications@github.com\nwrote:\n\nIMHO, it\u2019s JS first, then TS.\nIf you write TS, you can understand JS, but the opposite might not be\ntrue. What WOULD be nice is if you do create JS libraries for your\ncomponents, is if you provide type definitions for them one for each or one\nfor all, just like you added bundles recently.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/OfficeDev/Office-UI-Fabric/issues/375#issuecomment-189432980\n.\n. Thank you Mike.   Do you know how I can go about determining how the table component is supposed to be used from plain javascript?  I want to be able to use the checkbox feature as demonstrated in this pen: http://codepen.io/andrewconnell/pen/RWGgmY\n\nBut without jquery.   If there's no documentation at all, what would be the best way to determine the API by looking at the actual source.   Perhaps a few short words from someone on the team on how to do that will get us over the hump and use the library when the documentation is lacking.\n. andrew, thank you.   Yes, there's another project we're using angular on and we can use it there.\nmike that helps and thank you for telling me how to do that, but i am curious if that's something that I should have been able to figure out on my own somehow..   Am I missing something, or is really the only way to use these components is to look at the source.   I'm honestly scratching my head trying to understand how these components are meant to be used without docs.   I think if the answer really is, \"yes, look at the source\", then that's fine.   We'll get used to that workflow.\nthanks\n. Mike, I think that's a reasonable answer, so we'll figure out and get used to that.   It's all part of working in the open.   Thanks for the prompt responses.\n. ",
    "constancecchen": "I recently switched from FontAwesome to a external SVG file/\"spritesheet\" with symbols, and it wasn't as bad as I thought it'd be. Admittedly, this was for a small personal site, and not for a large framework :)\nWhat I really dig most is the ability to quickly add/remove icons (can be as simple as opening up the SVG file in an editor and deleting/adding a symbol). It just feels cleaner and more minimal than an icon font, which may potentially have tons of icons that aren't being used. In terms of support and fallback, I use a polyfill called svgxuse that makes links/references to external SVG files work on IE, and it works with very little hassle.\nThe markup can be just as minimal as icon fonts as well. Compare:\n<svg><use xlink:href=\"/icons.svg#icon-facebook\"></use></svg>\nto:\n<i class=\"fa fa-facebook\"></i>\nAlthough normally you'll probably add a class to the svg tag, as well as adding an inline text fallback for browsers that don't support SVG (IE8, Android 2.3, etc.).\nHere's the main tutorial/blog post that I used as a guide throughout the process - it was incredibly useful and well worth the read. It also has a ton of extra useful info, such as using gulp to concatenate/minify your final SVG spritesheet, accessibility, and so forth. http://blog.cloudfour.com/our-svg-icon-process/\nAnd here's a broader resource/blog post that may be useful as well: https://24ways.org/2014/an-overview-of-svg-sprite-creation-techniques/\n. ",
    "asith-w": "is there any update on this ? this really important lot of apps has right cornered icon for navigation\n. Horizontal scroll bar is appeared when command item is positioned in right corner of page.\n\n. ",
    "sondreb": "Not sure if you understood, the right-side main menu is called SplitView on WinJS. It's the black bar menu that is visible in the screenshot from Office 365 portal below:\n\nA similar menu is available in WinJS, but it does not have features such as pin to keep open and the flyout on hover and expander for more options.\nIf it's not in the plans, it's not in the plans, but I just want to confirm that there was no misunderstanding. If it won't be implemented, we'll just make our own :-)\n. ",
    "fabianhussl": "I agree with @manndave - the is no such trigger-class like ms-NavBar-item--hasMenu for the CommandBar. This is a pity. I would like to build something like the sort-menu in OneDrive. Please verify if there is a workaround or a solution for this issue.\nThanks\n. ",
    "dammittom": "Canceling this PR, as this will be merged over in the 3.0 branch instead.\n. Go backwards up that list, so we tell everyone how our fabric releases just keep getting hotter.\n. This color $ms-color-primaryTranslucent20 is only being used once, in the SearchBox sass file, so it does not meet the criteria of being widely used.\nHowever, the two other translucent colors in our general fabric colors file, $ms-color-blackTranslucent40 and $ms-color-whiteTranslucent40, are only being used by the Overlay component. So with respect to these colors, it does fit into an existing pattern.\n. Updated this change so that it now uses an existing color (ms-color-themeLighter), which was actually the original design spec for the SearchBox.\n. Updated so that it now uses a Panel when it's on the mobile size viewport.\n. nice! Merged in the updated target branch\n. Approved\n\n. ",
    "iambmelt": "Thanks for the update @mikewheaton :+1: \n. ",
    "zkoehne": "Usually, the protocol is not included for CDN references. It would look something like //cdn.example.com/resource/fabric.css. That way, the link can inherit the protocol from the server whether it's server HTTP or HTTPS. HTTPS on an HTTP site might show a \"mixed content\" warning to the user when the page loads. That said, you would run into issues when running locally.\n. Interesting. Everyone should be using HTTPS now anyways. :)\n. Looks like there's a bug in gulp-nuget-pack that doesn't honor the title flag.\n. ",
    "av-virlan": "Based on the snippet above it seems you're missing the initialization of the NavBar. Just add this piece of code to your page\njavascript\n$(document).ready(function(){\n    $(\".ms-NavBar\").NavBar();\n});\nThis should fix both the hamburger menu in mobile not showing the menu & the search not switching to input mode\n. It seems to happen because of class .docs-colorContainer which has a float:left style. As soon as that's removed it looks good\nBefore:\n\nAfter:\n\n. I believe this is related to the jquery plugin pickadate - there's a similar issues here though not yet resolved - https://github.com/amsul/pickadate.js/issues/835\n. ",
    "Brian-Ding": "that works, thank you for the help!!\n. thx for that info\n. anyone?\n. ",
    "HeToC": "So whats the point of creating pivot tab headers without implementing tab functionality ?\nDo you erally think we're interested in \"how state classes should be toggled\" instead of creating apps using your frabework and contributing to it ?\n. @mikewheaton Actually i'd like to make office ui fabric react compatible without jquery reference, should i create new repository or create pull requests here ?\nps im new to opensource so sry for silly qs ;)\n. ",
    "twaddell": "Sorry for not spotting the original issue.  The suggested solution worked well, thank you.\n. ",
    "s-KaiNet": "just my 50 cents:\ncolor for disabled item seems to be not correct: \n\nshould be #a6a6a6 but overrided by .ms-NavBar-link style\n. .ms-u-normalize contains .resetBoxShadow which is not desired, because menu has .drop-shadow. But now I see that I missed .ms-u-borderBox to copy from .ms-u-normalize. So .ms-ContextualMenu should contains all styles from .ms-u-normalize except .resetBoxShadow. Sorry for missing .ms-u-borderBox\n. Done\n. ",
    "NandaCodeBox": "Thank you\n. ",
    "Elfayer": "Yes, thanks ! =)\nIs it OK to ask questions here?\nBecause there is no activity on https://gitter.im/OfficeDev/Office-UI-Fabric \n. ",
    "alexcandela007": "the button that contains the class ms-PanelAction-close does not close the panel.\n\n. the console does not display errors. And the previous version (Release 2.1.0) to operate normally\n. It works correctly in your example and your files. I'm using the downloaded files the following link https://github.com/OfficeDev/Office-UI-Fabric/releases\nfabric.components.css\nfabric.components.min.css\nfabric.css\nfabric.min.css\njquery.fabric.js\njquery.fabric.min.js\nAdditional, download the update in Nuget, Microsoft Visual Studio.\nIn both cases it does not work, close the panel: \"ms-PanelAction-close\"\nI will continue checking. Thank you for your help.\n. The following link can be visualized my problem with the close button panel\nhttp://dev.office.com/fabric/components/panel\n. ",
    "Meglomax": "Thanks all.\nThe example code I was using came straight from the Office Dev Center, so the structure was good.\nEnsuring the <!doctype html> tag was present fixed the issue. ;)\n. ",
    "jordandobson": "I'd recommend base64 encoding a SVG background. The scaling is def better\nfor the border radius and then you just have to rotate the thing with a\nbunch of stops in between.\nOn Sun, Mar 27, 2016 at 9:37 PM William Do notifications@github.com wrote:\n\n@StfBauer https://github.com/StfBauer Thanks for the suggestion. There\nhave been discussions around converting the Spinner to CSS3 so this is\ndefinitely on the minds of the team. The Spinner was originally made to be\ncompatible with older browsers. However, time has passed and the web has\nmoved forward. Stay tuned.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/OfficeDev/Office-UI-Fabric/issues/462#issuecomment-202226618\n. IE9 does actually support REM which is essentially the new standard now a\ndays. :)\n\nWe shouldn't be using fixed values like px. Stefan is completely right. The\ntranslation is easy peasy. ;)\nOn Fri, Jun 3, 2016 at 10:51 PM Mike Wheaton notifications@github.com\nwrote:\n\nClosing this issue, although I'm sure we'll be discussing it again before\nlong. \ud83d\ude04\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/OfficeDev/Office-UI-Fabric/issues/528#issuecomment-223738448,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/AACbYm-HG8fZILjbSZ6cVkuUuKONWdNSks5qIRJigaJpZM4IZSHG\n.\n. \ud83d\udc4c\ud83c\udffb\nOn Sun, May 8, 2016 at 11:49 AM Mike Wheaton notifications@github.com\nwrote:\nLooks great! Approved by me.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/OfficeDev/Office-UI-Fabric/pull/532#issuecomment-217739038\n. \n",
    "lixonic": "@mikewheaton is this sensible ?\n\n. \n. @vibhava adding tabindex works for me <input type=\"checkbox\" id=\"demo-toggle-3\" class=\"ms-Toggle-input\" tabindex=\"0\" />\n. Fixed. https://github.com/OfficeDev/Office-UI-Fabric/pull/607\n. Yep, same issue with ms-Panel--lightDismiss  . Created a PR\n.  this is happening below 480px . Opened a PR . please review\n\n. @mikewheaton  https://monosnap.com/file/kWnS0NuCNvAkLbw6UnNaBl7pclZ9vF \nsame for ms-Panel--lightDismiss\n. @mikewheaton i guess  this PR is irrelevant now. \n. @mikewheaton done \ud83d\udc4d \n. @mikewheaton  yep, https://monosnap.com/file/olY0WQC4cEMmPQKbjLWCiIIiAFWgtA\nnpm install solved the issue \n. @mikewheaton how to recreate the same\n. @mikewheaton actually this screenshot is from old dist/ . Instead I should have checked localhost:2020.  How would i  add a --left variant ? i didn't find any documentation. \n. and obviously the bug is here > https://github.com/OfficeDev/Office-UI-Fabric/blob/master/src/components/Panel/Panel.scss#L88-L91 \n. #624 \n. @mikewheaton fixed #660 \n\n\n. @mikewheaton  is this broken? i'm on latest master\n\n. @mikewheaton this PR is irrelevant now. It is already fixed on master. \n. similar behaviour in overlay too.\n\n. ",
    "knutkj": "I would go for the ellipsis. It could be populated with user input data. You do not know how long the text can be. If to go for text wrap I would limit the number of lines it could be by setting max-height to 2 x line height for instance.\n. ",
    "brannmar": "I will try. Have to setup an development evironment for this. \n. Nope only NavBar. But i used the fabric bundle js file. When it is included it makes the default datepicker nonfunctional.\n. But as i said! I am not using the datepicker you are providing! \nMaybe i have not been clear. I am developing on an sharepoint online environment and the datepicker provided by sharepoint online is not working when including your datepicker. \n. Yes that is correct! \n. @chakkaradeep, I dont know if the issue still persists. We removed all UI-Fabric from our Sharepoint Online solution. But if you look at the first post i posted. It has the error message the console gives you. \n. I've found them here. http://o365icons.cloudapp.net/\nBut no official website or download link.. ",
    "hjdo": "@mikewheaton \nsorry\uff0cThis problem may be I am wrong package source\u3002\nI am in China,so...blocked \uff1f\nsource\uff1ahttps://www.nuget.org/api/v2/curated-feeds/microsoftdotnet/\n. I have tried it,Modify source \uff1ahttps://api.nuget.org/v3/index.json\n\"Manage NuGet Packages for Solution\" ,Here i can install :)\nbut, \"package manager console\" still not find package\n. @mikewheaton Thanks,Is the latest version 2.3.0,I like it :)\n. yes, @mikewheaton \nThank you for your reply :-)\n. Okey @mikewheaton ,Thank you for your work,This is a great project.\ud83d\ude04\n. ",
    "ChrispyBites": "Just want to chime in here by saying that this issue doesn't just exist in SharePoint Online.  It's also affecting on-prem implementations.  In 2013, at least.\nSo, all due respect, Stefan, but \"bringing Office UI to SharePoint doesn't actually make sense at all\" can't be the official line, man.  The party line on Office UI Fabric has been that it's a framework to make our custom development look and feel like Office applications.  All Office applications.  That includes SharePoint.  We've bought into that party line.  I like the framework.  I want to use the framework to make custom applications.\nSo, no, I would consider this a big time, definitely in need of fixing bug.  Using the excuse that \"SharePoint... provides well working controls\" to not fix something big like this is... lame.  And, come on, that isn't even necessarily true.  Anyone doing any kind of custom development on SP knows that there are huge, gaping functional holes in SharePoint that Microsoft has traditionally been happy to allow 3rd parties to fill.\n. @Joemurai, well, they indicate on the Releases page that it's in Beta.  Also, this is a pretty solid framework, in spite of being in beta.  I believe in it, I like it, it helps developers like me make things look good without a whole lot of effort.\nWhat's sort of beyond the pale, from my perspective, is that Fabric is obviously the chosen framework for Office applications.  It looks like SharePoint (including 2013), it should work with SharePoint.\nAnd I can confirm that this issue is still occurring, even in the newest beta release.  As far as I'm concerned, the only context that's really necessary is the screenshot at the top of this discussion.\n. ",
    "alistair-crawford": "I have encountered exactly the same problem on Sharepoint 2016. \n. If we include jquery.fabric.min.js (note not just the components file) as a JsLink in our 2016 environment, the Date Time Picker ceases to function. We invested heavily in Fabric UI for our new portal (over Bootstrap) because we wrongly thought the entire Fabric UI framework for SharePoint would be compatible with SharePoint 2016 (given it is your latest iteration of on-prem SharePoint). Right now we have to seriously weigh up whether it is worth ripping out Fabric UI and going back to Bootstrap if your standard JavaScript files corrupt your SharePoint 2016 controls.\n. ",
    "chakkaradeep": "@brannmar can you provide more information on how and where you are using the DatePicker in SharePoint? To be specific, you are getting this error as soon you include the Fabric Components DatePicker JS code as available here? This will help us identify where the issue is and see how we address it.\nOn Office UI Fabric and SharePoint:\nOffice UI Fabric components are independent to the current SharePoint server-side controls and it gets problematic when you use jQuery as you can get into conflicts. Right now we do not recommend using Office UI Fabric components alongside SharePoint controls for that very reason. FAQ for developers can be found here.\nThat said, we have invested in enabling Office UI Fabric be a key UX component in the modern SharePoint experience and the SharePoint Framework, so developers get out of of the box Fabric styles, themes and components.\n. @alistair-crawford we are happy to help if you are able to provide us more information on the conflict - may be the errors you get in the developer tools could be helpful. \nIf I am right, you are not having issues with the Office UI Fabric CSS styles and typography. It is when you start including components with jQuery implementation, right? Styles and typography do not require jQuery. Have you tried using jQuery.noConflict() to see if the issue is with jQuery conflicts? Here is a stackexchange post discussing how to load jQuery in JSLink. \nOnce you provide more information, we can look into if the issue with jQuery could be at the Office UI Fabric component jQuery level or at the SP level.\n. ",
    "Joemurai": "Hi, I understand that you don't want to invest time in ensuring compatibility with 3rd party libraries but to build an Office 365 framework and not check its compatible with SharePoint is a joke.  If you include the jquery.fabric.js file in a SharePoint site it breaks all the OOB date pickers.  Then I notice a line on the fabric site that say's you don't recommend using the component js that you include in the fabric download zip.  I can see why.  Even the fabric sample site has had a number of bugs.  I made the mistake of investing time in the framework but I've concluded that it is amateurish, buggy and poorly maintained.  Its beta at best.\n. ",
    "oozoo-solutions": "Is this still on the radar?\nThere's nothing actually in the Trello board that's linked from the roadmap\nCheers\n. ",
    "vibhava": "Thank you for taking a look. Please let me know if there is a key\ncombination you expect me to use that I am not aware of. I only tried space\nand enter.\nVibha\nOn Sun, Apr 24, 2016 at 2:37 PM, Mike Wheaton notifications@github.com\nwrote:\n\nThanks for reporting this issue, @vibhava https://github.com/vibhava.\nWe'll take a look and get this fixed \u2013 accessibility and keyboard\nnavigation are very important to us.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/OfficeDev/Office-UI-Fabric/issues/506#issuecomment-214041616\n. \n",
    "jjczopek": "Any ETA on that? Can we expect this to be fixed with 2.5?\n. ",
    "atneik": "Added documentation updates to the issue: https://github.com/OfficeDev/Office-UI-Fabric/issues/536\n. Pushed the one using camelCase for mixins and classes \n. Approve\n. Approved\n. Looks good!\n. Approved \n\n. Also adding tabbing\n. Approved\n\n. Approved. We should also look for any other major updates to the core, as we could incorporate them with MDL2 breaking updates all over.\n\n. Approved. \n@ericthompson This reminds me we are also missing icons being used in sp-client from Full set.\n\n. Approved!\n\n. Approved, thanks!\n\n. Approved\n\n. Sounds good!\n. Not sure what is used by the build. But, props seem safe to remove.\n. Why are we removing RadioButton extending CheckBox? We will have to implement the same functionality in RadioButton that are already there in CheckBox, hence prevent code reuse/DRY. RadioButton is a special type of CheckBox.\n. I see! Seems like we will have to have a base class, lets say ChoiceField, without any style from which both CheckBox and RadioButton could be extended. Keeping common functionality in base class, but style and other functionality in child classes.\n. ",
    "prmutha": "Thank you for the prompt reply. I shall test this out.\n. ",
    "ArnonEilat": "@ericthompson although it's not my question, i'm looking for the same component.\nHere are some examples:\n- https://jdewit.github.io/bootstrap-timepicker\n- http://ericjgagnon.github.io/wickedpicker/\n- http://www.material-ui.com/#/components/time-picker \n. ",
    "davegrice": "FWIW, the style of timepicker used by the Material UI example previously mentioned at: \nhttp://www.material-ui.com/#/components/time-picker\n...or as implemented in Bullhorn's Novo Elements here: \nhttp://bullhorn.github.io/novo-elements/#/calendar (scroll down past the Calendar)\npresents the best modern desktop UX, in my opinion.  Mobile usability would have to be carefully crafted though, to avoid being overly fiddly.\n. ",
    "codeaid": "That's actually one of my few issues with this library. I need a time picker in my application and without a component I'll have to stick with React Toolbox (or something else that has a picker too).\nAny update on your plans regarding this component, guys? . ",
    "v-chloc": "Hey Mike, has this issue been resolved? I was going to take a look into it, but wanted to check with you before I proceed. \nThnx\n. @mikewheaton Do you know which design team? I should have mentioned that I'm working on Jeffrey Dunn's design team. He had asked to reach out. Feel free to let me know if this is getting sorted out elsewhere though. \n. ",
    "shurick81": "Seems like the documentation has moved to https://dev.office.com/fabric#/styles/layout. ",
    "beneficialmedia": "I've an internal thread I'll forward to you on Monday. We should align with the Office 365 font-ramp.\n. ",
    "abdullahsalem": "@mikewheaton I just reviewed the Build System then figured out these two issues:\n1- Bundle mode tests in these statements 1, 2 and 3 don't return the expected value, because bundleMode is a function so it should be invoked in those test statements.\n2- In the task Bundles-buildData,  this iterator ignores any of the following Sass files:\n- Partial Sass files\n- RTL files\n- Fabric.scss and Fabric.Components.scss\nTherefore, all src/scss/**/*.scss files will be ignored, except this file src/sass/Fabric.Scoped.scss in full mode.\nHowever, that Fabric.Scoped.scss file will not be compiled through this function, because that function considers Fabric.Scoped.scss as a dependence!!, and it actually uses another parameter (srcTemplate) as a glob, and in this case, the actual passed value of srcTemplate is undefined because Config.paths.templatePath never defined! Additionally, at the same line, the file bundle-template.scss isn't existing.\nGenerally speaking, Bundle task seems like if it was only designed for the components in office-ui-fabric-js.\n. ",
    "bclevering": "i've found the problem: The fonts are loaded from https://appsforoffice.microsoft.com; but this domain cannot be used within the add-in?\n. The fonts are loading (if i look within fiddler) and also returning a HTTP 200 but then it looks if though it's not loading (or blocked being loaded) It could be a Office Policy or so which blocks this usages of external fonts or so?\nWhen i look on my development machine the fonts are loaded correctly.\n. ",
    "jonasrk": "When I expect my elements in Chrome I see that the z-index of the drowdown is 2 and the content-header is auto.\nI had not mentioned that it works perfectly fine in Excel Online on Chrome. It's just not working in Excel 2016 itself.\nI have tried manipulating the z-indices in my .css - didn't help.\nI'm using Vorlonjs to connect to the Add-In running in Excel 2016 to use Javascript to change the z-index at runtime - also didn't help.\n. Hmm, I can't test on Internet Explorer since I'm using a macOS machine. In chrome it looks like this:\n\n. Unfortunately, the issue is not easy to reproduce:\n- It happens on one machine (Mac + Chrome + Online) and not on another with that configuration.\n- (Mac + Safari + Online) seems to always have the issue.\n- It does happen in (Windows + Office Offline). Here only the white background of the dropdown is hidden, but the textlabels still shine through:\n\n- On (Windows + Windows Edge 20.10 + Online) it works fine.\n- On (Windows + IE11 + Online) it works fine.\nI did notice one rather odd thing: When I import vorlon for debugging Windows Offline Excel, the issue disappears. When I comment it out, it comes back again.\n. Also setting overflow: visible; for #content-main seemed to have helped.\n. ",
    "sumurthy": "@jonasrk - what happens when you try this in Internet Explorer browser on the same machine where you have the desktop/Excel 2016 related issue? \n. @jonasrk - sorry I'm still not clear. Can you confirm the platform you are facing this issue in (for the first screen shot)? (MAC + office rich-client ) or (Mac + Safari + Online) or (Mac + Chrome + Online)? \n. ",
    "DwayneSmurdon": "Glad to see it will be fixed!  Any thoughts about including the content from this page in the dist/documentation folder (when we build the latest version ourselves).\n. Indeed.  I look forward to the next release.\n. ",
    "leekaiwei": "Component:\n``` typescript\n// import stuff...\n// @Component...\nclass MyComponent implements AfterViewInit {\n    myForm: ControlGroup;\n    selectOptions: [];\nconstructor(formBuilder: FormBuilder) {\n    this.selectOptions = ['Apple', 'Banana', 'Orange'];\n\n    this.myForm = formBuilder.group({\n        selectedOption: ['', Validators.required]\n    });\n}\n\nngAfterViewInit() {\n    var script = document.createElement('script');\n    script.innerHTML = \"$(document).ready(function() { if ($.fn.Dropdown) { $('.ms-Dropdown').Dropdown(); }});\";\n    document.body.appendChild(script);\n }\n\n}\n```\nTemplate:\nhtml\n<form [ngFormModel]=\"myForm\">\n    <div class=\"ms-Dropdown\" tabindex=\"0\">\n        <label class=\"ms-Label\">Select Options</label>\n        <i class=\"ms-Dropdown-caretDown ms-Icon ms-Icon--caretDown\"></i>\n        <select ngControl=\"selectedOption\">\n            <option value=\"\">Choose a fruit...</option>\n            <option *ngFor=\"let option of selectOptions\" [value]=\"option\">{{option}}</option>                     \n        </select>                        \n    </div>\n</form>\nThe dropdown is successfully rebuilt and all the Fabric UI styling is applied. However there is no validation on the dropdown. I've checked that it works on a plain dropdown:\nhtml\n<select ngControl=\"selectedOption\">\n    <option value=\"\">Choose a fruit...</option>\n    <option *ngFor=\"let option of selectOptions\" [value]=\"option\">{{option}}</option>\n</select>\nI've linked to the jquery.fabric.min.js and JQuery. Is this correct?\n. Mostly just required, which I've specified in the form builder Validators.required.\n. As far as I know that is for Angular 1.x? If Angular 2 hasn't been considered for this project yet then that's cool. I was just wondering if it was possible and I assume it's not at the moment.\n. Okay thanks for your help! I'll try over there.\n. ",
    "mereagan": "Here's a screenshot (see attachment) - I had to mask some business sensitive stuff-  of a project I'll be working on before long.What I'll want to do is to convert this InfoPath form I built many yarn ago into a SharePoint List form using SharePoint Client Side rendering (CSR) and I hope fabric UI.\n. Sure here it is again.\n\n. ",
    "rakheejain": "Hi Team\nWe are also looking forward for the accordion component in next releases. We are developing our project using Office UI Fabric, and have a requirement where we want to display data in accordion.\n. We are looking for similar UI for treeview to be available in Fabric UI framework\n[http://www.jqueryscript.net/demo/jQuery-Plugin-To-Create-Multilevel-Collapsible-Table-Rows-Tabelizer/]\n. ",
    "pkbullock": "When I downloaded the last build, I built it, loaded the docs and noticed all the styling wasn't working. The developer tools is edge listed all the assets weren't loading. \nI wonder if caching of the files meant that it loaded even though the references were wrong in your case. \n. Hi\nI have fixed further issues in the forms, icons, video portal and languages sample files that were also incorrectly mapped in the output dist folder. I have been checking these by using \"live-server\" on the dist folder and checking for console errors in F12 tools.\nPaul\n. ",
    "tobiaswest83": "Thanks Mike\n. ",
    "jlsfernandez": "just a test, closing.... Tx\n. ",
    "tavorazo": "So sorry, was a problem with .htaccess and my cache. This solved. Thank you @ericthompson \n. ",
    "sivarajanr": "Going to create this request in office-ui-fabric-js\n. ",
    "betrue-final-final": "Approved, I do.\n. ",
    "KTITS-Tom": "But line 4 of color documentation says theming is supported. You should upate your docs.\n. ",
    "patrickabel": "@ericthompson I am seeing this issue as well.\n. ",
    "Vivihung": "My project is also facing this issue.\nIt can be repro in both mobile and desktop safari.\nMy repro step is:\n- clear all the browser cookie/download files/history\n- go to my website\nThen I can see font icon are missing in my web page.\nIn safari inspector network tab, there is no network traffic for .woff2.\nHowever, if you refresh the page, the issue will be gone.\n(Verified the icon shows up in the page, and see .woff2 was downloaded in inspector)\nMy repro env info:\niPhone: iOS 10.3 | Mobile Safari 10.0\nMac: Mac OS X 10.12 | Safari 10.1\nFabric: \n\"office-ui-fabric-core\": \"5.1.0\",\n\"office-ui-fabric-react\": \"2.25.0\",\n. @ericthompson and @leddie24 ,\nCould you please reopen this case? I still can repro it.\nI will work with you to repro the issue and find the fix.. @mikewheaton I don't know the cable matters for debugging. O.O\nI wonder if it's similar to this issue\nhttps://stackoverflow.com/questions/29696700/font-awesome-icon-not-displaying-in-safari-and-ipad\nI will try adding cache buster in my PPE env to see if it resolves the issue.. @mikewheaton, thanks for checking back.\nAfter upgrade to \n\"office-ui-fabric-react\": \"5.1.0\"\nAnd call init icon in app bootstrap\ninitializeIcons();\nI cannot repro the issue in iOS.\nWill check macOS tonight and reply.. Not repro in macOS, too.\nFeel free to close this issue.. Thanks! I've updated the CDN link to 5.1.0 and it works!\nhttps://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/5.1.0/css/fabric.min.css. ",
    "simkessy": "Thanks for the reply @ericthompson  but does this keep the same styling and functionality as Office Fabric? \n. ",
    "antonlabunets": "Abandoning since users should be able to override.\n. ",
    "davidjohnbell": "@ericthompson , Wow! whata speedy reply. Youre the best and I think its incredible how Microsoft is putting all of this stuff on the web. Keep up the amazing work.\n. ",
    "chenshuai2144": "fabric.css, I use  fabric icon but I loaded font very slowly.\nExperience is not good.\nhttps://appsforoffice.microsoft.com/fabric/fonts/icons/FabricMDL2Icons.woff\nThis font loaded need 23s\n. ",
    "JyotsnaWadhwani": "Adding a few more screenshot\n\n\n. I am hoping that it will be a part of the Fabric JS component.\n. ",
    "sjclemmy": "You'll find the documentation in your current installation of the office-ui-fabric dependency:\noffice-ui-fabric > dist > documentation.\n. ",
    "lafe": "After merging the current master branch in my local repository, I was unable to spot any conflicts. Please let me know, if there are specific problems you encounter.\n. I would like this as well. The main blocker for the adoption of Office UI Fabric at the current customer is that we cannot use assets that are hosted online when we are developing an on premises solution. This means that we cannot use the OOTB Office UI Fabric as it loads the font assets from a Microsoft CDN. The solution was to use alternative fonts that can be hosted in our environment and customize the Office UI Fabric to use these assets. It's possible and relatively easy but it increases the maintenance effort as we have to update our fork constantly. It would be great, if such use cases can be made easier.\n. That is great news. Will the license be updated to clarify this use case or will there be another document that states it more explicitly? A lone Github comment might not be sufficient for the legal department at customers if the question should ever arise.. ",
    "vinny75": "Well, that is odd, searching just 'Carot' doesn't show the existing issue but searching for 'CarotRightSolid8' does - either way, glad it's being fixed!\n. ",
    "Abrissirba": "It is fine with a generic version to start with. The check out icon is fine but I can't find it on the doc site. \nI think that the same icon but with the arrow at the opposit direction would be fine for the action to check-in a document.\n. something like the color icons here: https://material.io/icons/\n. \"border color\" and \"format color fill\"\n. ",
    "poojashivach": "Scenario- Dropdown in having 50 options to select from.\nWhile incorporating Dropdown component of office UI fabric, If I reduce the size of portion in which Dropdown will render scrollbar does not appear.\nI am following this link - https://codepen.io/andrewconnell/pen/RWGNON?editors=1000 \n\nIf width is increased for task pane scrolling works.\n\ncan you please help me with it?\n. ",
    "gregdegruy": "I'd be happy to suggest edits as I work through the docs on my personal project, if I have edits I want to suggest for the website can I report them here?\n. Most likely feedback focused on the React component side, in terms of additional steps that could be added to the code snippet doc. \n. Opened here > https://github.com/OfficeDev/office-ui-fabric-react/issues/2673. ",
    "guzmonne": "My bad. Should have created this on the office-ui-fabric-react repo. \nI'll close this issue here.\n. ",
    "showenx": "is it possible to include font file in the release package, and referenced locally from dist folder?. ",
    "CrmDev23": "Hi there\nI'm also wondering if the Fabric assets can be used for Microsoft Business applications like Dynamics 365.\nThanks!. Good to know. Thanks :+1:! . ",
    "LarsKemmann": "@mikewheaton I've been reviewing the verbiage of the new assets license PDF linked from the homepage. The clauses about O365 have been removed and it now requires use of the assets to be:\n\nIn connection with the use of a Microsoft API within the development of a software application, website, or product you create or a service you offer designed to provide access or interact with a Microsoft service or application (\u201cApplication\u201d)\n\nGiven the part that I highlighted, I'm wondering if the possibility exists that I could use the assets in my application under the following constraints:\n\nWhile my app is not (yet) a \"custom Office 365 app\" (i.e., one that is launched from the O365 launcher), it could become so. The problem is that not all my customers have Office 365 so I can't actually design my app to require that for all users.\nMy app does use Microsoft services; specifically, it is hosted in Azure and users do interact with Azure AD B2C/B2B.\n\nThanks!\n~Lars\n. @mikewheaton Following up on this since this is still, from what I can see, a significant need. Developers have come to rely on having Microsoft's UI controls library as a starting point; not having that available now for web apps is a challenge, which Office UI Fabric is really well poised to address. You just need to call it \"Microsoft UI Fabric\" and clarify the licensing language. :-) Any hope of seeing at least the licensing piece be addressed, maybe at a significant upcoming conference? You would make a lot of enterprise developers very happy.. @Jahnp Thank you!!! :-). Thanks @mikewheaton -- will do!. @danielmeza Hey, sorry that I took so long to reply. I'm taking a different approach at the moment, focusing on (framework-agnostic) Web Components. Those should play well with Aurelia, but I'm still too early in the process to really be looking at the UI Fabric styles/behavior/etc.. @danielmeza That being said... I just saw your experimental repo & that is a really interesting idea. :). ",
    "ryancole": "Awesome. Thanks!. ",
    "sompylasar": "@ericthompson Yes. Sorry, wrong repo. I'll repost there. Thank you.. Just for reference: https://github.com/OfficeDev/office-ui-fabric-react/issues/626. ",
    "chiubacca": "Hi, it's based on what I saw here: https://dev.office.com/fabric#/components/slider\nI wasn't sure if that component was rendering as designed or if the circle handle just 2px too far up . ",
    "micahgodbolt": "I still believe file names should include their category (animation-variable,animation-mixins, animation-classes etc). It'll help a ton in fuzy searching and code review. . @mikewheaton sweet work here! Looking forward to seeing this repo being soooo much better organized. . I was involved in that project a bit (helping with the grunt plugin). It's a good project with good people. I whole heartedly support adding it. Maybe warnings at first until we can clean most of them up and come up with a set of rules we're happy with. . {\"name\":\"{name}\", \"value\":\"{value}\"}, . Do we know that these variables are not being used in JS/React? Do we need to deprecate them first?. Approved\n. Approved\n. Approved\n. Approved\n. Approved\n. approved. Approved\n. Approved\n. Approved\n. Does this belong on Fabric-React or Fabric-JS?. @dasanto is this meant for the React or JS repo?. Approved\n. Approved\n. DynamicsCRMLogo is still down there. CarotRightSolid8 is a bit confusing though, as the original code simply had CarotRightSolid8 twice. It wasn't deprecated for something else. . haha, now i see the spelling mistake\n. @mikewheaton alright. Moved those 2 deprecated classes up to the top. good catch. Line talks about things being unchanged. Good for PR notes, not needed for docs.. ",
    "raix": "wrong repo. ",
    "panigrah": "Is this the right way to use it?\n@import '../../../node_modules/office-ui-fabric-react/dist/sass/Fabric.Common';\n. closed and reopened under https://github.com/OfficeDev/office-ui-fabric-react/issues/747. ",
    "DustinDSchultz": "I'm getting this issue all of a sudden as well at various @includes throughout my project.. ",
    "bino98": "@mikewheaton \nyes. I am mainly looking for a plugin that represents UI components.. @mikewheaton \nThank you for writing to Trello board. \ud83d\udc4d . ",
    "Russolini": "Please create this.  I'm ready.....adbove XD is ok, but Sketch is really where a lot of designers spent their time.. ",
    "mdahamiwal": "@mikewheaton this is still not fixed, can we investigate ?. Hello @mikewheaton, as discussed offline the update for core 7 is still pending and we would need a lot more testing before we move to that. Meanwhile to fix the HC styling issues in VSTS, I have raised a PR https://github.com/OfficeDev/office-ui-fabric-react/pull/1718. Let me know if you see any issue.. @mikewheaton, this need to go in soon as it is breaking fabric react high contrast styling for Edge and IE. As per recommendation from Edge team we need to apply this selectively to elements where we control the full high contrast styling. If we apply to entire fabric wrapper everything under it will appear in normal mode since this attribute prevents Edge and IE to apply high contrast color scheme.. ",
    "revunitbrian": "It would also be great to include the Segoe font family and icon fonts along with the sketch files. . ",
    "geekpulp": "@mikewheaton any eta on a sketch toolkit too?. ",
    "artemsaveliev": "@Jahnp I am trying to use ms-Button class in my control, i.e.\n<control class=\"myStyle ms-Button\" />\nThis control is used on fabric pages and on non-fabric pages. Both types of pages unfortunately link to fabric (it's a product-wide stylesheet). \nBasically, I need the button styling to only apply when it's used in fabric context. Currently it's impossible - the only way to achieve this, is to not include fabric css at all (and not feasible for me, as it's product-wide link).. ",
    "Danny-Engelman": "There is ms-Icon--Settings and ms-Icon--PlayerSettings. This is my ES6 playground for keeping track of Icons, so only works in Chrome (and maybe FF)\nhttps://365csi.nl/toolkit/iconator.html\n. What version(s) are you loading?  Core? React? FabricJS?\nCheck the network tab, find the fabric css files (components as well) and read the version info in the header.\nAnd what is the exact filename of the fabricmdl2icons*.woff file loaded?. Not the header, the CSS contents, so you need to look at the response.\nYou can also right-click in the network Tab and 'Open in new tab' (note the uri will also show the version nr). 2.6.3 was a patch for 2.6.2 .. which was the october 2016 release\nAlas 2.6.3 is now listed first on the releases page: https://github.com/OfficeDev/office-ui-fabric-core/releases\nMajor changes since october 2016...\nCurrent version Fabric Core is 6.0.0 , that is the second one on the release page\nhttps://github.com/OfficeDev/office-ui-fabric-core/releases\nBe sure to read the release notes. 6.0.0 changed Class notation ms-u notation to ms-  So you might want to go for 5.1.0 first\n. I can't (or rather won't) check 2.6.3\nms-Icon--Edit is available in 5.0.1 , 5.1.0 and 6.0.0 for sure\nSo you either are still using and old version or you made a typo, or you did something else wrong\nIf you are taking Icon names from Andrew Connell's CodePen   page (which is ranked high in Google) then stop using that, it is old, it is incorrect.\nCurrent Icons at: https://dev.office.com/fabric#/styles/icons\nI keep an eye on Fabric(JS) Icons & Versions myself with my ES6 playground project (so only works in Chrome) https://365csi.nl/toolkit/iconator/index.html\n. Sorry, I am oldfashioned and in the end always prefer manual over nuget or npm\nBack to the version.\nCheck what fabric.min.css version you get in the Browser.\nSince (at least) 5.0.0 The only icon with Pencil in the name is:\n. I see https://spoprod-a.akamaihd.net/files/fabric/office-ui-fabric-core/6.0.0/css/fabric.min.css\nstill points to https://static2.sharepointonline.com/files/fabric/assets/icons/fabricmdl2icons.woff2\nwhich, as far as I can tell is still missing\nColumnLeftTwoThirds\nColumnRightTwoThirds\nDoubleColumn\nSingleColumn\nTripleColumn\nFrom the list of iconnames in:\nhttps://raw.githubusercontent.com/OfficeDev/office-ui-fabric-core/master/src/data/icons.json\nThose are all the icons with 'Column' in the title... some filter going wrong in the built?. FYI, Teamslogo and TeamslogoFill do not follow the naming convention;\nshould be: TeamsLogo and TeamsLogoFill\nSpotted because I have CSS Selectors on Logo\nhttps://365csi.nl/toolkit/iconator\n. Haven't tested older, \n5.0.1 , 5.1.0 and 6.0.0 are NOT on https://appsforoffice.microsoft.com/fabric/ either\nAll versions are available on:\n\nhttps://spoprod-a.akamaihd.net/files/fabric/office-ui-fabric-core/6.0.0/css/fabric.min.css\n\nand\n\nhttps://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/6.0.0/css/fabric.min.css. Fabric is a CSS library like Bootstrap or Googles Material\nand can be used for any Front-End application\n\nSo it can be used for SharePoints CSR (Client Side Rendering) \nJSLink is only the technology to link JS files, CSR can be applied without\nJSLink can not load CSS files, so you have to load Fabric with JS (or as LINK in an ASPX file)\n. Which version of IE are you using?\nAnd does it happen with Edge too?\nIf you goto:  https://365csi.nl/toolkit/iconator/index.html\nDo you see that Abc icon on the right?\nYou won't see the rest of the page in IE, it uses plain ES6 which only a modern Browser understands\n. Check F12 Network tab, what is the full URI to  fabric.css, and is there an error?. NavigateBack was added in 7.1.0. option B should be:\nhttps://spoprod-a.akamaihd.net/files/fabric/office-ui-fabric-core/7.2.0/css/fabric.min.css. I get a 404 for:\nhttps://spoprod-a.akamaihd.net/files/fabric/office-ui-fabric-core/7.3.0/css/fabric.min.css\nor am I just to eager?. You are correct <html dir=\"ltr\"> makes it work again (as stated in 8.0.0 Release Notes)\nI skipped some versions and upgraded from 7.3.0 to 9.0.0\nand must be one of the few who do not read all Release notes\n. May I suggest a comment to add it on the body, so developers do not put in on every wrapping element\n<body class=\"ms-Fabric\">. At the moment (nov 21 13:00) that site still uses 9.0.0\nLoaded CSS file:\n\nSee: https://365csi.nl/toolkit/iconator/index.html?core=9.0.0  (with Chrome)\nfor icons that are not in 9.0.0. See same previous issue: https://github.com/OfficeDev/office-ui-fabric-core/issues/1044\nThis was a breaking change in 8.0.0\nYou need to add a dir attribute. I got my own Icon tracker (only in Chrome) which tracks new icons: https://365csi.nl/toolkit/iconator/\nIcon CompanyDirectory is available since 9.2.0\n. Mike's codepen loads:\nhttps://static2.sharepointonline.com/files/fabric/assets/icons/fabricmdl2icons-2.55.woff2\nMy Iconator loads:\nhttps://static2.sharepointonline.com/files/fabric/assets/icons/fabricmdl2icons-2.64.woff2. Have you seen: https://developer.microsoft.com/en-us/fabric-js\n. ",
    "jbranders": "I'm loading Core, but i cannot find the version in the header of the request. . I'm using Office UI Fabric 2.6.3, but what i notice is that i use also the icon .ms-Icon--Edit and that's gone to. Very strange. . Hi Danny,\nI don't get it if i use ms-Icon--Pencil i got the Edit icon, but if i use ms-Icon--Edit i get nothing. \nThere are icons missing, i'm working with visual studio and nuget package and update to the last version 6.0.0 but if i install only the core nuget package i don't get the components. So i install the nuget package OfficeUIFabric 2.6.3. \nIt's strange behavior. \nDo you have suggestion how to update the package? \nThank you. . Hi Danny,\nThank you for the response. I have update the package again and now it's okay. \nThanks for the support. . ",
    "prabirshrestha": "done. https://github.com/OfficeDev/office-ui-fabric-react/issues/1206. ",
    "frederick-armando": "Have you tried the \"Toggle device toolbar\" into google chrome developer tools ? I was able to reproduce this bug with your pen helped by this tool.\nWhile verifying i have noticed i could only reproduce this issue with chrome (57.0.2987.98), and breakpoints pose no problem with opera, firefox or edge.\n\n  . When i answered you, i used the full page view, so i don't think the problem come from codepen's editor. As you can see in the attachement of my first post, the problem happend without any \"interferences\". I assume it's mostly chrome's fault (and not only on my computer). You can check on https://app.keluro.com/\nAt 1366px (normal)\n\nAt 1365px (issue: the hamburger menu appear)\n\nI don't know what happened with the media queries but it's a really weird comportement of this class on chrome (not canary) at the breakpoints.. ",
    "Katli95": "I am experiencing the same issue :/ Also using Chrome, Version 59.0.3071.115 (Official Build) (64-bit)\nHas there been any progress on the problem? \nScreenshot of codepen, size visible in upper right hand corner:\n\nEDIT: \nOnly appears on my laptop screen and not connected monitors.\nThinkPad X1 Carbon 4th Edition\nWindows 10 Pro 64-bit\nFlexView Display 2560x1440\n. ",
    "tom-daly": "I believe that I am experiencing the same issue. There is a gap where both ms-hiddenMdUp and ms-hiddenSm show \n@media (max-width: 479px)\n\u2026\n.ms-hiddenLgDown, .ms-hiddenMdDown, .ms-hiddenSm, .ms-hiddenXlDown, .ms-hiddenXxlDown {\n    display: none!important;\n}\nThe gap is within the decimal of a pixel. So in chrome I'm measuring 479.091px .... that technically is between 479 < 479.091 < 480... \nThis happens at every single other breakpoint when it falls in the decimal of a pixel range. I'm using ms-hiddenMdUp and ms-hiddenSm so I only see it a few times.\nmedia (max-width: 639px) and (min-width: 480px)\n\u2026\n.ms-hiddenLgDown, .ms-hiddenMd, .ms-hiddenMdDown, .ms-hiddenMdUp, .ms-hiddenXlDown, .ms-hiddenXxlDown {\n    display: none!important;\n}\n\n\n. I've never had one of my bugs fixed before so thank you, you made my day. ",
    "kopgenorth": "Will do, thanks.\nOn Tue, Mar 14, 2017 at 9:44 AM Mike Wheaton notifications@github.com\nwrote:\n\nHi @kopgenorth https://github.com/kopgenorth, Fabric Core no longer\ncontains components like the DatePicker. Could you file this issue under Fabric\nJS https://github.com/OfficeDev/office-ui-fabric-js/issues or Fabric\nReact https://github.com/OfficeDev/office-ui-fabric-react/issues?\nThanks!\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/OfficeDev/office-ui-fabric-core/issues/930#issuecomment-286483032,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AQAG-6QMeCheP7PHQUqPs000vzIZn8M5ks5rlsPUgaJpZM4Mb25K\n.\n. \n",
    "lszomoru": "You are correct, my bad. Closing the ticket.. ",
    "htryggva": "@mikewheaton I think a proper Teams Brand Icon is still needed to keep the white areas of the brand icon.\nNotice how the background color bleeds through the TeamsLogo:\n\n. ",
    "prashkan90": "Fabric-React: https://dev.office.com/fabric#/components/detailslist. Any updates on this? We've added paging by adding null at the end of our list and using onRenderMissingItem to fetch more items. However, this feels cumbersome and prone to bugs. Adding the onPageAdded option (List) to DetailsList would be very useful.. ",
    "dasanto": "@micahgodbolt React. Sorry if this is on the wrong repo.. ",
    "kenhansen01": "Hmm. Clearing the cache, etc. did not help. I thought it might be the firewall (though it wasn't a problem previously), so I tried my phone (Nexus 6 - Chrome browser) on LTE and still no luck. I will try on another device (and connection) when I get home.. It is appearing now. Closing issue.\n\n. ",
    "kristoferbrown": "The biggest high-contrast change recently was PR #2589. The main thing I could see Fabric Core doing would be to provide a media query and maybe a -ms-high-contrast-adjust mixin. I don't think we'd want to add in colors here since that PR was to remove all specified colors and replace them with system colors.. ",
    "danielmeza": "Hi @LarsKemmann  any update on this? do you have starter to with the repo, I would like to contribute!\n. ",
    "ashutosh1211": "@mikewheaton thanks \u270c\ufe0f\ud83d\ude00. ",
    "Zlatkovsky": "I have an F12 capture as well, please see attached.\nFabric icons network capture.zip\n. The .har file can be imported into Fiddler (File -> Import Session -> HTTP Archive), or a tool like https://chrome.google.com/webstore/detail/http-archive-viewer/ebbdbdmhegaoooipfnjikefdpeoaidml?hl=en\nScreenshot is below:\n\n. Let me ask the person who had originally reported this to me reply to this thread directly -- and she'll be able to answer your questions.\nThanks!. @zefangtang , would you mind pasting a screenshot of where you found the setting -- so that if folks stumble into this in the future, they know where to look?\n@mikewheaton , is this something that could be programmatically detected?  I.e., is there a way that, on loading, the program could check if it indeed was able to display the icons?  Our interface is very icon-driven, and so when some of the important ones go missing, the program becomes unusable (and it's unclear to the user what is even expected of him/her).... Clarifying comment:  the relevant part in the above image is the Downloads => Font downloads => Enable radio button.. ",
    "zefangtang": "Hi, I'm the person with the issue. This is on Internet Explorer 11 (11.1198.14393.0, update version 11.0.42). The Abc icon does not appear.\n. https://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/5.1.0/css/fabric.min.css\nNo error as far as I can tell.\n. There doesn't appear to be.. That didn't work, but it gave me the idea of checking my IE security settings. Turns out the issue was that font download was disabled. Enabling it fixed the issue! Thanks!. Sure. Internet options > Security > Custom level.\n. ",
    "chadradams": "This is Fabric Core v1.4.0 is what I'm using.  Is there a v6.0 css library, somewhere that I missed?. I think this is where I got mixed up.  The Getting Started page had v1.2.0 for it's URL links.  Those should be updated.\nhttps://dev.office.com/fabric#/get-started\nThanks Jahnp!\n. Excellent, this should help some of the icon issues I was seeing then.  Thanks again!. ",
    "LarsLiden": "will do.  Thx!. https://github.com/OfficeDev/office-ui-fabric-react/issues/2396. ",
    "ayyash": "They are not the latest, but they should do for now, still hoping the admins make the svgs available for us, two reasons: I want to create my own font, and I need to reuse in CSS (using LESSCSS for example). ",
    "anied": "Yeah, I'm perplexed about this as well.  Per the Fabric Dev Page: \"Fabric provides these icons in both SVG and PNG formats.\"  This led me to believe I would be able to access those SVG directly, but I can't find that anywhere.  I only require four SVG to use as icons for a file-type -- seems excessive to bring in a whole repository for those four icons.\nThe only thing I can think of is perhaps they are bundled in the downloadable Adobe XD file, which I have no way of opening.. ",
    "musingh1": "Sorry, wrong repo. Will open on office-ui-fabric-react. ",
    "johannes-z": "Alright, thanks a lot for the clarification! . Aren't the resulting CSS rules something like this?\ncss\n[dir='ltr'] .ms-Icon-X:before {\n  // ...\n}\n[dir='rtl'] .ms-Icon-X:before {\n  // ...\n}\nIsn't [dir='ltr'] .ms-Icon-X:before more specific than .ms-Icon-X:before anyway? So this wouldn't stop overrides from working, would it?\ncss\n.ms-Icon-X:before,\n[dir='ltr'] .ms-Icon-X:before {\n  // ...\n}\n[dir='rtl'] .ms-Icon-X:before {\n  // ...\n}. ",
    "lynamemi": "Should be ready very soon! I'll post here when it's up everywhere it needs to be.. @Danny-Engelman should be deployed now. Let us know if you have more trouble with it.. Looks like the build is working again!. If I'm understanding the code correctly, now that selawik-bold is on the cdn, Fabric Core should be able to correctly use selawik-bold if the ms-Fabric--selawik class is used on the wrapper? Thus no additions needed to this repo?. Hooray! So smooth. I need to get more in the habit of using codepen \ud83d\ude04 . Made a fix on the website side of things:\nhttps://github.com/OfficeDev/office-ui-fabric-react/pull/3446. I'm close to a PR!. I had originally overwritten this part above the icons, then copied and pasted it back in. Don't know why the diff went so crazy, it's the same code. If it's too hard to read, I can try to fix it.. Good call, it was totally whitespace! The odd thing is that the whitespace issue doesn't appear in my local diff. Might need to get an extension to help with that.... 1. Do you have any recommendations for testing the original against the updated icon set to be able to get clarity for what's a rename vs what's new? Is there something deployed that shows the current icons? I can clone a second repo if nothing else.\n\nWhat is the process for documenting a rename vs a new icon?\n. Updated with renamed vs new icons. Let me know if I'm missing anything else. Thanks!. Good catch!. This sneaky misspelled guy made it back in :). \n",
    "Koopakiller": "No problem, it is all fine. ",
    "jcupps": "you must add dir='rtl' to the html element. This causes the LTR-specific styles to be applied.\nI think you mean \"you must add dir='ltr'\"\nAlso, not sure if this is the right place for this but it was really confusing to have some icons just disappear with this version. I suggest making 'ltr' the default (i.e. when no direction is specified) with the ability to override it with dir='rtl', especially since dir isn't used all that frequently. Thanks!. ",
    "donhackman": "Thanks Mike. I will file it there. \nSent from my iPhone\n\nOn Oct 29, 2017, at 16:30, Mike Wheaton notifications@github.com wrote:\nFabric Core doesn't contain any interactive components \u2013 maybe you meant to file this issue under Fabric React?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. \n",
    "hesawant": "Sorry my bad. ",
    "AcciolyDSI": "Oh Jahnp, thank you, : ). ",
    "nero120": "Also for the Delete icon if it's not too much trouble! \ud83d\ude04 . Ah good points, makes sense to keep a consistent experience so I'll go with your suggestion. Thanks again @Jahnp!. That's perfect @Jahnp, thanks very much! I'll use the @uifabric/file-type-icons package until the updated icons have been integrated with fabric core.. @mikewheaton perhaps you could help me - I'm having trouble utilising the updated icons/scss styles. I'm using office-ui-fabric-react v5.50.0, and I can see that the _BrandIcon.scss, _BrandIcon.Mixins.scss and _BrandIcon.Variables.scss files have been updated to include your icon changes, yet the following html does not display the pdf icon:\n<div class=\"ms-BrandIcon--icon96 ms-BrandIcon--pdf\"></div>\nWhat am I missing here?. This page advises not to use a separate reference to fabric core as fabric react has a dependency on it, and so ships with it's own copy. I can see that fabric react v5.50.0 includes fabric core v9.4.0, and replacing the reference to fabric.min.css in your codeplex to https://unpkg.com/office-ui-fabric-react@5.50.0/dist/css/fabric.min.css still works.\nWhen you say fabric react doesn't include the brand icons, how do you mean? The links to the icon images are just urls to a cdn are they not?\nPerhaps I should raise this issue in the fabric react repo, but if you could clarify the issue here I will then use that information when opening a new issue in that repo.. Well I believe there's a number of issues here. First of all, the fabric ui react package does not currently display the classes for the new icons properly, as my html comment above describes (I'll raise a new issue in the fabric ui react repo to address this).\nSecondly, and probably more relevant to this repo, the SharePoint Online CDN does not have the updated icons. If I add to my fabric ui react webpart:\n<div class=\"ms-BrandIcon--icon96 ms-BrandIcon--docx\"></div>\nI see the old icon:\n\nwhich is being requested from the following url:\nhttps://static2.sharepointonline.com/files/fabric/assets/brand-icons/document/png/docx_96x1.png\nYour codepen indicates that the new icon's have different urls (https://spoprod-a.akamaihd.net/files/fabric/assets/item-types/96/docx.png in this case), so either fabric core needs to update the icon urls or the SharePoint Online CDN needs updating with the new icons.. ",
    "larnera": "Thanks @Jahnp and @mikewheaton for the information. I've been through that JSON file and 'CompanyDirectory' is there but when I include it, it just doesn't load in the browser.  I've found this with some of the others that are referenced in the JSON file. \n\n. Thanks @Danny-Engelman. 'CompanyDirectory' just doesn't show. All the other icons added 9.2.0 show perfectly. I'll have to use another icon. . ",
    "petrot": "@mikewheaton thank you!. ",
    "jorluiseptor": "To give more context, my team is building a SharePoint Add-in solution using UI Fabric. We're Federal Gov agency with no access to the Internet. The solution is not intended for profit, but for gov.. ",
    "mdtauk": "I'm curious as to the thinking behind this palette of Grey colours.  Are these shades going to be replacing the pure Black, White, and Grey/Transparent shades that make up the Windows XAML/UWP Light and Dark theme resources? \nIs there a a benefit beyond the aesthetic to using grey shades with varying degrees of R G B values?\nA little examination at the colours, shows the greys are all orange tinted, so this may purely be to reinforce the Office Orange branding.  And I guess the pure neutral greys will remain for Fluent on Windows then :)\nIs there a central repository/document which outlines core Fluent changes which Fabric and potentially other implementations of Fluent will align to?\nDoes this apply to control designs, which currently vary between Fluent UWP, Fabric UI, Fluent Web and even Microsoft Teams etc?. ",
    "KevinTCoughlin": "@mubash7 would https://docs.microsoft.com/en-us/onedrive/developer/controls/file-pickers/js-v72/ fit your requirements?. ",
    "mubash7": "@KevinTCoughlin thanks for the link. but it will not work as the files will be from the local machine.. @mikewheaton will do. Thanks. . ",
    "peterremote1980": "i have two rows with two columns, but i want to span the first columns into one.\nlike this https://i.stack.imgur.com/m741R.png\nThanks\nFrom Peter. ",
    "msimecek": "@mikewheaton Your CodePen works fine on my machine too. I don't see any difference in code... I even added jQuery and Fabric jQuery plugin to match your CodePen fully and it still doesn't work... You can see for yourself: ~~https://dxfabrictest.azurewebsites.net/~~ (not live anymore)\nThese are the styles applied to A:\ncss\n.ms-lg2 {\n    width: 16.666666666666664%;\n}\n.ms-Grid-col {\n    position: relative;\n    min-height: 1px;\n    padding-left: 8px;\n    padding-right: 8px;\n    box-sizing: border-box;\n}\n.ms-Fabric {\n    color: #333;\n    font-family: \"Segoe UI Web (West European)\",Segoe UI,-apple-system,BlinkMacSystemFont,Roboto,Helvetica Neue,sans-serif;\n    font-size: 14px;\n}\nThis is B:\ncss\n.ms-lg10 {\n    width: 83.33333333333334%;\n}\n.ms-Grid-col {\n    position: relative;\n    min-height: 1px;\n    padding-left: 8px;\n    padding-right: 8px;\n    box-sizing: border-box;\n}\n.ms-Fabric {\n    color: #333;\n    font-family: \"Segoe UI Web (West European)\",Segoe UI,-apple-system,BlinkMacSystemFont,Roboto,Helvetica Neue,sans-serif;\n    font-size: 14px;\n}. Yes! This solves it for me, thanks :) Should I create a PR to update the docs?\nBTW - both your CodePens use the same Fabric version. The only difference is the dir=\"ltr\"... I still don't understand why both of them work. CodePen doesn't specify dir anywhere on the page.\n\n. Done. See: https://github.com/OfficeDev/office-ui-fabric-react/pull/5430 (had to do it in the React repo, because Core repo doesn't reflect the live site). ",
    "blendsdk": "@mikewheaton @Jahnp To make it a bit clearer. I would like to use the Design ToolKit XD file as a reference point and (re)implement the components with a different framework/language. The net result should look exactly like the components offered by the office-ui-fabric team, only not using React or Angular.\nMy concern is the \" Fabric Assets License and Guidelines\" point 1 which if I understand correctly prevents using the toolkit along with the assets in any other project that does not work or is implemented with Microsoft API.\nAny thoughts?. Thank you for your answer @Jahnp . So let me elaborate a little on my plans.\nI am developing a framework using TypeScript. Unlike most of the \"frameworks\" found today (Angular, Vue, React, etc..), it is not tag/markup based. It is API based. Meaning that you don't need to define and use (custom) tags, jsx, sass, etc... to implement the structure of your application. You call an API and it takes care of browser implementation details for you. \nIt is designed for building line-of-business web/mobile applications and not so much presentational (landing) websites. It is a font-end framework. It is not exclusive to MS web technologies (APT.NET, Office/SharePoint plugins). You can also use it with Node.js, PHP, or even Java backends. \nI am planning to distribute my framework as a commercial product, hopefully to compensate the 2+ years of on going work it has required to get it this far. For now I use it to develop custom solutions for my own clients.\nAt the moment the UI implemented of my framework is based on \"Material Design\u201d, where I have no restrictions for redistributing the \u201cRoboto\u201d fonts and the \u201cMaterial Design Icons\u201d as long as I comply with the Apache 2 license.\nSince \u201cMaterial Design\u201d is not for everyone, I thought why not implement the Fabric components with my system too. But before I can do that, I need to know that I won\u2019t be getting into legal issues because I will need to redistribute the fabric icons, and fonts as part of a commercial package some day. Next to that, I would need to call the UI implementation something along the lines of \u201cBlend Fabric UI Components\u201d. It is not really clear to me if what I want is legally allowed?\nTo summarise: I study the \u201cDesign Toolkit\u201d and implement the UI components with my system, then I would like to be able to bundle the fabric fonts and icons as part of my commercial-open-source framework. I will have my own branding but the words \"Office UI Fabric\" need to be used in the docs and texts etc..\nI hope you can help me find some answers.\nBTW,\nIf you are interested,  the API looks something like this:\n```typescript\nvar app = new Blend.fabric.Application({\n// config properties\n  title: 'My CRM',\n// Themes and Colors\n  theme: {\n      themeColor: Blend.fabric.colorPalette.BLUE\n  }\n// A toolbar\n  toolbar: new Blend.fabric.toolbar.Toolbar({\n  items: [\n\n      // Push everything to the right\n      new Blend.fabric.toolbar.Spacer({\n          flexSize: 1\n      }),\n\n      // Search field with a magnify button.\n      new Blend.fabric.form.SearchField({\n\n          // Delegate the click event to a controller\n          onClick: searchController.createAction('search')\n      })\n\n  ]\n\n})\n})\n// Instance of the controller used above.\nvar searchController = new CRM.controllers.SearchController();\n// The controller itself.\nnamespace CRM.controllers {\nexport class SearchController extends Blend.mvc.Controller {\n  // The action called when the magnify icon on the search field is clicked\n  search(sender: Blend.form.TextField) {\n      axios.get('/path/to/backend/search/endpoint', {\n          ....\n          ....\n      })\n  }\n}\n\n}\n```. @Jahnp @mikewheaton do you have any update on my question? \nThank you.. ",
    "thornyweb": "Thanks @mikewheaton . ",
    "Vitalius1": "Shimmer is only part of the office-ui-fabric-react package and never was intended to get into the core. What does @microsoft/sp-office-ui-fabric-core\": \"1.5.1\" include? Can you look in the node_modules folder and see?. ",
    "Krak86": "\nI checked the node_modules folder and also didn't find the Shimmer component there.\nIndeed I did, but nothing there.. \n",
    "donschaefer": "@mikewheaton your repro uses the CDN reference whereas my bug is referring to what happens when you...\n\nNavigate to https://developer.microsoft.com/en-us/fabric#/get-started#core, scroll down to \"Other ways to get Fabric Core\" & click the \" download a copy of Fabric for your project\" link\nDownload the copy available at https://github.com/OfficeDev/office-ui-fabric-core/releases/tag/9.6.1\nInclude that copy at the bottom of the  element within the index.html file that runs the app as follows:\n\n<link rel=\"stylesheet\" href=\"/fabric.min.css\">\nNote: I understand the inclusion of my larger scenario/preface from StackOverflow may have confused my purpose in filing this bug, so I will remove that reference from my OP for clarification purposes. I apologize for the confusion.. @mikewheaton - Essentially, I was attempting to use the stylesheet locally as a means of ruling out potential issues with grabbing it from the CDN. My expectation was that it would work exactly the same or better (insofar as if there was some kind of issue connecting to the CDN copy, it'd be bypassed), but the fact that it was consistently NOT working surprised me.\nAs far as trying it at the top, it's as far up as I can put it in the codepen I referenced in the OP (granted, there's not a dedicated head element in that pen) & I unfortunately get the same results locally when I move it from the bottom of the head element to the top of the head element.. ",
    "DiandianWendy": "Hi Mike,\nOK. I will move it there.\nThanks,\nWendy\nFrom: Mike Wheaton notifications@github.com\nSent: Wednesday, October 31, 2018 2:12 PM\nTo: OfficeDev/office-ui-fabric-core office-ui-fabric-core@noreply.github.com\nCc: Wendy Wan Wan.Xin@microsoft.com; Mention mention@noreply.github.com\nSubject: Re: [OfficeDev/office-ui-fabric-core] How to restyle DetailsList (#1151)\nHi @DiandianWendyhttps://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FDiandianWendy&data=02%7C01%7CWan.Xin%40microsoft.com%7C7b867f65741c4b92f0a808d63f757a79%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636766171131997607&sdata=hqQs%2F3h2yKyR4FQd%2FV1e0ZApQTj6JV6hW0MOi%2BxWhLI%3D&reserved=0, the GitHub project you want to open this issue on is Fabric Reacthttps://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FOfficeDev%2Foffice-ui-fabric-react&data=02%7C01%7CWan.Xin%40microsoft.com%7C7b867f65741c4b92f0a808d63f757a79%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636766171131997607&sdata=O%2Fm3hYCFYQ4Wnikalf0w9EEPeDuOURvUvCEJOq7sGfc%3D&reserved=0. Thanks!\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHubhttps://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FOfficeDev%2Foffice-ui-fabric-core%2Fissues%2F1151%23issuecomment-434849306&data=02%7C01%7CWan.Xin%40microsoft.com%7C7b867f65741c4b92f0a808d63f757a79%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636766171132007615&sdata=ZYqtikJWKiE5O31M2IPbHOrW%2BDdpqAVVT1AkNueTimw%3D&reserved=0, or mute the threadhttps://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAgh6b3sNLMX3djVx_H2rzwBs4omJY8EJks5uqhIWgaJpZM4YE5ba&data=02%7C01%7CWan.Xin%40microsoft.com%7C7b867f65741c4b92f0a808d63f757a79%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636766171132007615&sdata=%2FfaofKMRLYhope9Ozn6%2BFv7Tmz0vDACn1taOFgYlPYs%3D&reserved=0.\n. ",
    "LoganHollins": "It looks like this bug was introduced in this PR: https://github.com/OfficeDev/office-ui-fabric-core/pull/1133. ",
    "lanzhiheng": "@Danny-Engelman Thank you, that is what I need. I am sorry that I can not find this link in the UI relevant page https://developer.microsoft.com/en-us/fabric. I think that may be a good idea to add it here .\n\n. ",
    "komal4364": "mikewheaton. \nSorry, I was using DetailsList, not DetailsCard. \nThe following is the example I referred. In that, the sortedItems has column data which has html tags in it. \nhttps://github.com/OfficeDev/office-ui-fabric-react/blob/2ce6c5ac3ccf4e62d4866841317b4aa55b8fb541/packages/office-ui-fabric-react/src/components/DetailsList/examples/DetailsList.CustomColumns.Example.tsx . I followed the issue on office-ui-fabric-react. Got it fixed: Reference for the issue: https://github.com/OfficeDev/office-ui-fabric-react/issues/7535 . ",
    "doyoucrm": "Thanks Mike, will do.. ",
    "Grunge": "i think i was wrong and use now \"@include ms-screen-xl-up\", but the spfx does still not hide my div. . ",
    "AndrewJByrne": "In a lot of meetings today, but if I find time, I\u2019ll sync with you.\nFrom: Peter Jahn [mailto:notifications@github.com]\nSent: Friday, August 21, 2015 9:42 AM\nTo: OfficeDev/Office-UI-Fabric Office-UI-Fabric@noreply.github.com\nSubject: Re: [Office-UI-Fabric] V miljo/mega gulp fixes (#7)\nIn gulp/fabric.jshttps://na01.safelinks.protection.outlook.com/?url=https%3a%2f%2fgithub.com%2fOfficeDev%2fOffice-UI-Fabric%2fpull%2f7%23discussion_r37652629&data=01%7c01%7cAndrew.Byrne%40microsoft.com%7c69e9f642afd1470c731408d2aa477652%7c72f988bf86f141af91ab2d7cd011db47%7c1&sdata=qrVtfVYXQcUMSfdlQZlUmA0ANgZW5d2w0pDACz01JIY%3d:\n\n// Roll up static resource building\n-gulp.task('build-resources', ['clean:fabric', 'copy', 'build-less', 'copy-components-html', 'build-component-examples']);\n+gulp.task('build-fabric', ['clean-fabric', 'copy-fabric', 'fabric-less']);\n+\n+// Build for fabric component demos\n\nplease capitalize Fabric :)\n\u2014\nReply to this email directly or view it on GitHubhttps://na01.safelinks.protection.outlook.com/?url=https%3a%2f%2fgithub.com%2fOfficeDev%2fOffice-UI-Fabric%2fpull%2f7%2ffiles%23r37652629&data=01%7c01%7cAndrew.Byrne%40microsoft.com%7c69e9f642afd1470c731408d2aa477652%7c72f988bf86f141af91ab2d7cd011db47%7c1&sdata=Af6NpMOUFkPrKMaA2TcbLGFNFTFqdppn8RM3mso13tk%3d.\n. ",
    "chriswbarrett": "I think the options are either * + * which covers every scenario including non-fabric elements that someone might want to add or a big selector such as span + span, .ms-Button-icon + .ms-Button-description, .ms-Button-description + .ms-Button-icon, .ms-Button-icon + .ms-Button-text, .ms-Button-text + .ms-Button-icon... \nI agree * + * is a horrible selector\n. I don't know of any better solution, from the looks of it on android it fails gracefully and shows the white space. I understand if it's a case of everything or nothing\n. ",
    "elisechant": "to me this namespacing looks like a vendor prefix and makes it more vague. "
}