{
    "epall": "I was able to recover .autojump_py from a backup, so I'm good now, but this issue might be worth looking into. I can upload the bad .autojump_py file to somewhere if need be.\n. Awesome!\n. I was able to recover .autojump_py from a backup, so I'm good now, but this issue might be worth looking into. I can upload the bad .autojump_py file to somewhere if need be.\n. Awesome!\n. ",
    "joelthelion": "Thank you very much for the bug report! I don't know what caused the problem (it could be a ton of things), but since a few weeks, I've added code that keeps a backup version of the database, updated everyday. In the next few days I will add code to automatically recover from the backup in the case you report.\n. I just commited a fix, It should be fixed now. Can you test the new version for a few days and tell me if you encounter any problems?\n. Closing the issue. Don't hesitate to reopen if the issue is not solved for you :)\n. Oops, this sucks!\nThe difference between v7 and this commit is just a change in the README, so I doubt this update is the cause of your problem. Just to be sure, can you try logging in from a console? (Alt+Ctrl+2 for example, I hope ubuntu has these)\nSend me any error message you get.\n. It's probably not doing the PROMPT_COMMAND. Can you give me the output of the following command?\necho $PROMPT_COMMAND\nAlso, which shell are you using?\n. > I am using git-prompt (http://github.com/lvv/git-prompt/)\n\nI'm using bash\necho $PROMPT_COMMAND\nprompt_command_function\n\nIt seems git-prompt is not playing nicely, and overrides the prompt command. Autojump won't work if the prompt command is overwritten. Autojump on the other hand respects other tools in the prompt command and adds itself to the list without removing the other ones.\nLong story short: either reinstall autojump or submit a bug report to the git-prompt maintainer (or better, do both :))\nPS: please answer in the issue; i nearly missed your message.\n. Hi!\nIt's really OS X that's broken in this case, because in all the other distros the bash_profile already calls the bashrc. Hence adding it to the bash_profile with the installer would add it twice for all the other users...\nMaybe we should create an OS X-specific installer? If you think this is a good idea, can you fork the project, and add your fixed version of the installer? (install.macosx.sh ?)\nI'll then add it to my repo.\n. That seems to be a good idea as well.\n. I won't hesitate :)\n. echo is fine. Autojump doesn't work with sh anyways. Thanks for the patch!\n. I've added the shebang as well.\n. Could you elaborate? What do you mean by \"it doesn't work right\"? Does it spit out some error messages? If so, it could be useful to post them.\n. It looks like the alias ('j' is a bash alias) isn't being set properly.\n. Can you try sourcing .bashrc manually and see if it works better?\nsource ~/.bashrc\nAlso, not that it makes a difference, but j is actually a bash function, not an alias.\n. > Also joel I just read your article on java schools and as someone who took intro CS at Penn I feel a little cheated.\nI think you're mistaking me for someone else :) But hey I'm glad you finally got autojump to work.\n. Is this simply a matter of fixing the installer? If that's the case I think it's a trivial fix...\nI unfortunately don't have access to a mac, so I can't really do it myself, but if you submit a fix, I'll gladly integrate it.\n. OK, I agree, but how should I do it? is PREFIX an environment variable I should poll?\n. Would it work with a environment variable as well? It would be a lot simpler to implement than the command line parsing.\n. DataSurfer (or someone else) : would you be willing to write the homebrew formula if I implement the prefix in the installer?\n. > I find it perplexing that the getopts function in bash does not support GNU extension long flag names\nSame here :) Maybe we should just rewrite the installer in python?\n. > I'll volunteer to write the formula.\nGreat! Just give me a few days to find a good solution to the prefix problem.\n. Ok, I have pushed an implementation of --prefix for the bash installer. Let me know if it works for you!\n. Neat! I merged in your patch. Can I close the issue now?\n. Could you tell me what still needs to be done?\n. I just tried\n./install.zsh --prefix /usr\nand it seems to work on my machine? I don't think we should use getopts, I tried using it in the past and didn't like it much.\n. I'll just assume this works now, closing.\n. Ah yes, I know what the problem is, your python version is too old for generator expression. Is it possible for you to upgrade to a more recent python version. If it's not, I can try to make it compatible, but I don't know if it is possible easily. No guarantees :)\n. This is because + and * are special characters in regular expressions. I could use a simple search instead, but people who use regexps might not be happy about it...\nI need some time to think this through. Thanks for the report!\n. Should be fixed now. Please reopen if it still doesn't work.\n. Hi,\nI will look into it as soon as I get a chance.\njoel\n. Bonjour Olivier,\nIt should be fixed now. Can you confirm that it works?\n. > I keep making autojump huge publicity (b\u00e9po, zeitgeist\u2026).\nGreat! That means a lot to me :)\n. Hi!\nI understand your 'problem' perfectly, but I think things are working fine! Actually, when I first started autojump, it worked the way you describe; but I found out that the amount of work you perform in a directory is what counts, not the number of times you \"cd\" to it.\nIn any case, this would be pretty easy for you to change, but I'd suggest using the standard autojump for a week or two before making the change. You might change your mind :)\n. Hi,\nCould you give me the output of the the \"alias\" and the \"jumpstat\" command, and tell me what directory you are trying to complete? (give me the state of the command line when you press tab, as well as the directory you think it should complete).\n. Hi Jake,\nI think everything is actually working properly! Autojump isn't a replacement for cd, but a complement. You should wait a bit more for the database to fill itself, and then you'll be able to use autojump to move back and forth between your most used directories, using autocompletion if you want. For now since you have only one directory in the database, it's not very useful yet :)\nLet me know if you need more help!\njoel\n. Indeed, it actually learns every time you type a command, not only when you change directories. You can check the current state of the database with \"jumpstat\".\n. Good point :) I guess I'll have to think of a new tagline...\n. I agree that would be nice, but I don't think all major distros respect that specification (yet). I just tested on my opensuse system, and these environment variables aren't enabled. I also highly doubt that cygwin and mac set them correctly (these are a big part of my users).\nSo in conclusion: why not in a few years, but I think this is a bit premature for now.\n. Not a bad idea :) I'll have to think of a way to seamlessly migrate people, though.\n. I tried to implement your idea; can you comment on it? Note that for simplicity I put everything in the XDG_DATA_HOME directory.\n. Great! Thanks for the input!\n. What prevents you from putting autojump on the remote hosts? At least, that's how I do it. (note that you don't have to be root to install autojump, you simply have to install it manually in that case).\n. Why would you need to convince other people to use it? (note that I don't doubt you have a good reason for this, I just want to make sure I understand your use case; it's people like you who have helped me make autojump as good as it is now :) )\n. Another way you could do this is by sharing the autojump data files between the different machines: recent autojump versions ignore directories that don't exist.\n. > I want to restrict it to my main computer because I work on customers' productions systems, and I don't want to install (please, bare with the term) \"exotic\" software on it yet.\nHeck, I wouldn't do it either! :-D\nTo come back to your original question, I really don't have a clue as to how you would implement that without installing software on the remote machine. The whole point of ssh is that the commands you send are executed remotely and not locally! If you think of a solution, I'd be glad to hear it, though :)\n. I'd love to help you out, but I use bash myself and zsh completion works perfectly on all of my machines...\nIs autojump the only application that has a problem? What distro are you using? Can you try using autojump on a fresh user account to see if one of your customizations could be the problem?\n. Could you provide a patch for the zsh installer? I could probably do it, but since I don't use zsh, there's a significant probability that I would mess up :)\nAbout the bash installer, I guess the problem is in a patch from another guy I merged in recently. But I can't reproduce the problem on my computer...\n. Ok, I think I've solved the problem. What do you think of the solution?\nhttp://github.com/joelthelion/autojump/commit/512db419e1470af77c544ecbedad5dae9221ddda\n. Ok, I'm considering the issue to be closed. Don't hesitate to reopen if that is not the case!\n. Hi, thanks for the report! That's a very weird error... Could you send me the contents of your ~/.local/share/autojump directory (pm me for email) as well as the output of \"python -v\"?\nThanks!\n. Did you update autojump recently? If not, please do so, and tell me if the problem persists.\n. I'm glad it works for you now, although I suspect there is a robustness issue to be solved somewhere...\n. Thanks for the report! I can't reproduce on my computer, so could you send me the contents of your ~/.local/share/autojump/ directory? Could you also send me the output of \"autojump --completion main\"?\nAlso, are you sure both directories exist (could they be on a removable drive?) at the moment you try to use the completion?\n. Ok, don't hesitate to reopen if the problem reappears!\n. Hi,\nThat seems like a good idea, but I'm afraid it could mess things up for the (many) people who have already installed to /usr. Any idea on how to make the transition smooth?\n. I agree this is the way it should be, but I won't fix it, because,\n1) it will cause problems with existing installs,\nand 2) it's not worth it.\n. I've added a few files. Let me know if more are missing.\n. Thanks, good job, but i'll stick with python2 for a while. The reason is, many of my users don't have python3 on their systems. When python3 becomes more widely distributed, I'll make the switch. As you said, it's not that big a deal.\n. Actually, the current version of autojump is compatible with both versions of python: it should support everything from 2.6 to 3.x.\n. I'm glad you found a version that works for you!\nThe decision of abandoning old versions of python was a bit difficult to take, but I think supporting python 3 is more important in the long run.\n. It's weird that it's working for a lot of people and not for you... A few questions before we try anything else:\nAre you 100% sure the problem comes from autojump? What else did you install/change before the problem appeared?\nDo you have any weird things in your vim configuration?\nDoes autojump work?\n. Can you give the location of the installed _j file, the _vim file, and the contents of your FPATH variable? This is a bit difficult for me to debug as I don't use zsh myself :)\n. Reopen if you still have problems.\n. Hi and thanks for the report. I have a question though:\nAren't these supposed to exist on any self-respecting distro? What happens if they do? I certainly don't want my users to see ugly error messages...\n. Good point. I'll integrate your patch as soon as I get a moment.\n\nbtw, it would be preferable if the default prefix was \"/usr/local\" instead of \"/usr\"\n\nI'm aware of the problem, but until someone supplies me with a good way of transitioning existing users who upgrade with ./install.sh seamlessly, it will stay as it is :-/\n. Done!\n. Any idea on how to implement this? Something that would work automatically with git would be pretty nice.\n. This is solved now (see pull request 73)\n. That's not how autojump works. It doesn't add weight when you use cd, but every time the prompt is displayed, so basically every time you type a command.\nLet me know if the problem persists.\n. I understand your problem better now, and I think it's an interesting problem, because I had never had that case before.\nCould you please send me the output of \"df -h -T\", \"pwd\" and \"pwd -P\" when in the ~/www directory?\n. You may well have found a bug in bash :) From the bash documentation:\n[joel@mouton ~]$ help pwd\npwd: pwd [-LP]\n    Print the name of the current working directory.\nOptions:\n  -L    print the value of $PWD if it names the current working\n    directory\n  -P    print the physical directory, without any symbolic links\n. Ah, maybe the issue is specific to zsh then. I'll try to investigate a bit if I get the time.\n. I've tried to reproduce your problem, but I couldn't reproduce it, neither with bash nor with zsh...\n. I tried with a different computer, and I still can't reproduce your problem. Please re-open if the problem persists.\n. Hi jostein,\nDo you have the latest version? I used to have a similar problem, but I thought I have fixed it in a recent commit.\n. Hi!\nI'm sorry this is still an issue for you. I'll try to investigate, but it will be a bit difficult since I haven't had the problem myself for a while.\nIn the meantime, could you send me all the information that seems relevant to you? Examples: content of the $PROMPT_COMMAND variable, permissions and ownership on the folder and all the files in ~/.local/share/autojump, content of autojump_errors, shell you're using, ...\n. Some more questions: do you often work as root? What do you use? su? sudo? Do you remember what you were doing (especially as root) when the problem appeared?\n. Thanks a lot for your help!\n. Great news: thanks to your explanations, I've finally been able to reproduce the problem. I'll try to work on a fix this week end.\n. I've just pushed a fix for this problem, can you tell me if you still have the problem with \"su\"?\n. Huh, weird, I don't have the same problem.\nDid you unset the PROMPT_COMMAND (or reboot) since upgrading?\n. Great to know it works for you!\nJust note that you shouldn't need to unset the prompt command in your bashrc, it should only be needed once when upgrading.\n. Thanks for reporting! I guess what happened is that homebrew has an older version than you initially had. I try to preserve backwards compatibility, but not forward compatibility. You did the right thing by removing the autojump_py file.\n. Hi,\nI'm sorry but I really don't want to go down this route. I'm a firm believer in the philosophy of Unix: do one thing, and do it well. Autojump is a tool for jumping between directories, and that's it, I don't want to re-implement a whole shell :)\nThe good news is, it should be very easy to write a \"jl\" function which does exactly what you want :)\n. Yes, that's how it's supposed to work. The idea is that no matter how many symlinks you have pointing to the same directory, they will be counted together. You could then use\nj S\nfor example to go in the target directory. In any case, if you really want to change this behavior, replace \"pwd -P\" in autojump.{bash,zsh} by simply \"pwd\". It should do what you want.\n. thelastnode is absolutely right. Be careful not to use it with dangerous commands though... I would definitely not recommend\nrm -rf $(autojump abc)\n:-)\n. Thanks!\n. Of course! Thanks!\n. Hi,\nI just saw your commit and I find it interesting. The fact that it calls autojump -a every time you enter a command is in fact something people commonly don't like about autojump.\nHowever, I'm not sure that it will work well enough with this implementation, because there will be a lot less data to learn from.\nI suggest that you use your implementation for a while and contact me again in one or two months if you like it. Would that be acceptable for you?\n. I understand your reflexion perfectly :) I prefer to forget about autojump completly, which is why I like hooking it on the prompt command.\nI don't like the idea of the \"purge\" option because one of the good things about autojump is that it remembers very old directories. There already is a feature that deletes keys if the database becomes really too big.\nI think I'll merge the \"remove\" option, because this is really something autojump has been missing for a while.\nAnyways, thanks for your patches, it's great to have other people poking at the code from time to time.\n. Closing.\n. It's probably because your .bashrc doesn't source /etc/profile.\nThe installer tries its best to work on all platforms, but it's hard to handle every case right. That said, I'd be happy if you can provide a patch for your case :)\n. The current version of autojump is supposed to be compatible with python3, precisely for Arch Linux.\nWhich version are you using? Can you be more specific?\n. What are you talking about? If you install the package \"python\" (which is in fact python3), you get the following files:\npython /usr/\npython /usr/bin/\npython /usr/bin/idle\npython /usr/bin/idle3\npython /usr/bin/pydoc\npython /usr/bin/pydoc3\npython /usr/bin/python\n...\nAnd there you have it, \"python\" in the standard path. Now if you install autojump with pacman, it is patched to depend on python2, so there is no problem either.\n. Not a real issue, closing.\n. What version are you using? The latest release is supposed to fix this.\nUnfortunately a simple test like you propose doesn't cover all use cases, but this commit: ( https://github.com/joelthelion/autojump/commit/c877a51ad6b2d53ad20c7822f1d39312d3ce88a2 ) is supposed to fix them all.\n. Interesting, thanks for the info. I'll take a look when I have a moment.\n. I can't reproduce :-/ I've tried to \"sudo bash\" on two different distros with no problems. What distro are you using? Any specific custom environment?\n. Both of them, I think, I don't remember very well. The issue is tricky because there are many ways to gain root permissions: su, su -, sudo su, sudo bash, ...\nCould you please post the output of the \"env\" command before and after you sudo bash?\n. No answer --> closing. Will reopen if I get more info.\n. Good point. Fixed!\n. What python version are you using?\n. Too old :) Is it possible for you to upgrade? If not, I can try to find a solution, but it's pretty difficult to support old 2.x versions and 3.x at the same time!\n. Ok, closing.\n. I'm working on a better installer; but in the meantime, there is nothing stopping you from installing it yourself without root. I can help if you're stuck.\n. Thanks for your report.\n. I'll work with wting to merge his changes into the main tree.\n. Good point! I've pushed two commits that should solve your problem. Can you confirm that they work?\n. No answer, I'm assuming this is solved.\n. You need 2.6 at the moment, but the good news is, if you download autojum version 12, it should work out fine with python 2.5.\nI should probably write that information down somewhere, thanks for the reminder :)\n. Hi and thanks for the report! Are you using the latest git version or a previous release? I've had the same problem in the past, but I thought it was fixed now.\nAlso, do you have an idea of the command that caused the problem? What distro are you using?\n. I've just pushed a tentative fix. I can't test it because sudo is properly better configured under Arch, so I can't reproduce the problem. However I believe this patch should fix the problem. Can you confirm?\n. Great! I'll close the issue for now; don't hesitate to re-open if needed.\nI'll probably wait a week or so to make sure everything is ok, then I'll make a new release.\n. Good idea, but could you remove the corresponding python code? It won't be needed anymore if we implement this change. \n. I understand your rationale, but something that's even worse in my mind is duplicated code.\nDoes this optimization really make things faster? Otherwise maybe it's best not to do it at all.\n. No input --> closing.\n. I works for me. Are you still having this problem?\n. Try it :)\nIf you want to write documentation for it, I'll gladly integrate it; but I won't put any effort into the applet myself as I don't use it (it's a contribution).\n. Normally it opens a task bar icon that you can use by right clicking, it's really straightforward! Did you see the icon?\n. Mmm, it seems jumpapplet still uses the old database. I'll try to fix it when I get a few minutes :)\n. This is done on purpose, but I understand it doesn't necessarily match the workflow of everyone. Fortunately, it's quite simple to patch it to suit your needs. In autojump.bash, replace this line:\nAUTOJUMP='{ [[ \"$AUTOJUMP_HOME\" == \"$HOME\" ]] && (autojump -a \"$(pwd -P)\"&)>/dev/null 2>>${AUTOJUMP_DATA_DIR}/autojump_errors;} 2>/dev/null'\nwith\nAUTOJUMP='{ [[ \"$AUTOJUMP_HOME\" == \"$HOME\" ]] && (autojump -a \"$(pwd)\"&)>/dev/null 2>>${AUTOJUMP_DATA_DIR}/autojump_errors;} 2>/dev/null'\nYou could also call autojump twice if you want to add both paths.\n. Could you tell me what distro you're using? Did you install autojump with the installer, or with the distro's packages?\nI'm glad you were able to solve the problem, but if I can do anything to avoid other people running into the problem, I'd be glad as well!\n. Ok, let's forget about this for now :) Don't hesitate to re-open if you find some additional info.\n. Hi wting,\nThis is what I used to do in the beginning, but I've since then decided against it, as it goes against the Unix philosophy of doing one thing well, and only one thing. In my mind the important point is that it is easy to change if you want to, which is what you just did :)\n. Thanks for the fix!\n. Hi,\nThanks for your patch. I have already merged the grep fix.\nI don't think I want to merge the /usr/local fix, for various reasons:\n1) the prefix should be customizable (easy to fix)\n2) It might conflict with versions installed by package managers (most users now)\n3) It's just not worth the hassle.\nI hope you won't take it personally. I really appreciate people sending me patches, but I think this issue is too tiny to justify the effort.\n. Great! Thanks for looking into it.\n. I understand your need. However, I'm not convinced about this change for most people, because if there is a problem, I'd rather see it fail with an error message than silently.\nIf other people have this problem, I'll point them to your branch.\n. @wting: are you still willing to take care of the install scripts? If so, I'm ready to merge :)\n. Hi wting,\nI haven't had the time to review your contribution, but I have a proposal for you: would you be willing to maintain the install script for autojump? That would mean that I would (almost) blindly merge your commits on the install scripts. In counterpart, you would try to support the scripts and fix related issues.\nOf course there is really no pressure to accept, but since you seem interested in autojump and since I have less and less time to devote to it, I think it could be beneficial for everybody. Any thoughts?\n. jumpstat is a bash alias for \"autojump --stat\". So you can type autojump --stat.\nOf course, further integration would be nice, but I don't use mc, so I won't do it :)\n. Hi and thanks for the patch. I haven't looked at the code yet, but here are my first feelings:\nI have mixed feelings on the idea of approximate matching. I find autojump already dangerous enough (you get used to a sequence making you jump somewhere, and if it changes somehow, you can end up doing stuff in the wrong place). Isn't approximate matching going to increase this?\nAlso, I don't really understand the need. I usually use autojump with two or three letter patterns, so I rarely have typos. Is it a real problem for you? How do you use autojump?\nIn any case, I find the performance improvements and the profiling very interesting. I'll try to inspect them and merge them ASAP.\n. Hi int3,\nsorry for the delay in answering, I'm pretty busy and don't have a lot of time to spend on autojump! But I'm still interested in your contribution.\nI suppose you've been using your version for a while now, so I'd be interested in hearing your feedback. Does approximate matching improve your experience? Did you implement the \"bold or different color\" idea?\n. Sure, I just haven't taken the time to try it yet. Have you? I'd be interested in feedback from people actually using this.\n. Can someone please create a fork and merge this for everyone to try? That way we can learn from it, and possibly improve it, before we possibly decide to integrate it into the main autojump tree.\n. @shelhamer : great! Don't forget to keep me updates.\n@arronmabrey : Would you be willing to remake autojump's presentation video (the youtube video linked on the top of the wiki page). I'm not a native english speaker and I suck at making videos, so a new one would be great.\n. Thanks for the fix! I knew this would turn out to be a problem, but I somehow had to use the latest version of the protocol :)\n. Could you try the following and report back?\nmv ~/.local/share/autojump ~/.local/share/autojump.old\n. I'm glad :)\n. This is a frequently asked question. The problem is that both ways to do it are correct.\nChanging it is a simple removing the '-P' in the PROMPT_COMMAND. I might add an example in the source to make it easier in the future.\n. Thanks for the fix, and sorry for the late answer!\n. Hi, and sorry for the late answer!\nAbout the workaround: unsetting the prompt command will surely work, but autojump needs it in order to record paths. So it won't work properly if you do that.\nAbout the problem itself: are you sure the \"update_terminal_cwd\" isn't the cause of the problem? What happens if you remove it?\nNot having a mac at hand to test makes it hard to diagnose the problem, but if you can narrow it down a bit, I'm sure we can solve this :)\n. @pcarrier: thanks for the help!\nNow the question is, what is this \"update_terminal_cwd\", and why does it end the prompt command with \";\". Do you need it?\n. I think gnome3 uses a different protocol for displaying applets. I don't know about lxde. So the part that displays the icon would need to be rewritten. If anyone wants to work on this, I can try to merge it later.\n. Normally paths that don't exist anymore are not used in the ranking, so autojump should still work properly. They are still kept in the database in case they were on a removable drive, so that you will be able to use autojump with removable drives.\nIs there any specific reason you want to remove these paths from the database?\n. I think you have a good point. I see two options here: either add an option to autojump to remove paths, which is easy but not very flexible; or switch to a text format for the autojump file. What do you think?\n. I've implemented a new text format in a new branch (text_format). I haven't written the migration code yet, but you can already try it, it will simply create a new database file.\nComments welcome!\n. The code is now ready in the \"text_format\" branch, can you test it and tell me what you think?\n. I've merged the code into master. Been using it for a few days, and it works great. Please re-open if there is a problem.\n. Hi Tanguy,\nI haven't checked your code yet, but you can find the explanation why XDG is commented out in the git history: the problem is that in the distributions that I have checked, the XDG env variables are not updated correctly when the user uses sudo or su. Thus his database is updated as root, then the autojump file belongs to root and the user is locked with permission problems.\nI'm all for implementing and following the standard, so if you can find a way of implementing this that is compatible with the use of su and sudo, I will merge it.\nAny comments?\n. > I suggest that we simply follow the specification but adding a security check: if $XDG_DATA_HOME does not belong to the current user, simply disable autojump.\nCan you add this check? I will gladly merge your contribution.\n. I have merged your branch. Does it seem correct to you?\n. In this case, if it's OK with you, I'll close this issue and issue a new release. Thanks for your contribution!\n. I have just merged the fix by shelhamer, can you confirm that it solves the issue?\n. I'll do it as soon as I get a moment. Sorry for the delay.\n. OK, I just tagged a new release. Can we consider this to be fixed?\n. I've re-uploaded the file, to no avail. I've contacted github about this.\n. Great then! Thanks to everyone for reporting and helping to fix this issue.\n. I'm pretty sure your brew (or whatever it's called, I don't use a mac) isn't up to date. Version 17 has been released a while ago now.\n. Apparently they decided to remove autojump from homebrew: https://github.com/mxcl/homebrew/issues/9470\nI don't really understand why.\n. I think copying the files around is the good thing to do. It's what all the linux distros do, and it allows to cope with the diversity of systems. The autojump installer is just there to help people who don't have access to a packaging system. To be frank, it is a pain to maintain it.\n. Sorry about this. The correct behavior would be to hide the file as it is only useful when debugging. I'll try to fix that ASAP.\n. This should be solved now. Can you test with the latest git head?\n. OK, great, closing. Don't hesitate to reopen if the issue reappears.\n. Thanks for the fix!\n. I can confirm this is not normal at all :)\nCan you try sourcing /etc/profile.d/autojump.bash (assuming you're using bash) directly in your bashrc? Then j and jumpstat should be defined (they're bash aliases), and the PROMPT_COMMAND environment variable should contain autojump related stuff.\n. I'd be interested if another ubuntu user can comment on this?\n. @cbrunos: would you mind pasting the output of \ndpkg -L autojump\n. I've asked the debian maintainer about this problem, and you need to source /usr/share/autojump.bash (instead of /etc/profile.d/autojump.bash) in your bashrc, as described in the documentation of the package.\n. Thanks!\n. Could you try again with the latest git version?\n. No problem, thanks for reporting!\n. Salut David,\nThat sounds a lot like a corrupted pickle file, or maybe could be caused by going back and forth between python2 and python3. In any case, an easy workaround is to scratch everything in your ~/.local/share/autojump directory (or alternatively remove .autojump* in your home directory if you don't have a .local/share directory). I think it should work.\nBefore you scratch them, could you please send me the incriminated files for inspection?\n. I'm glad it works! Just send me the original autojump_py file if you still have it, or the autojump_py.bak file.\n. Can you try the latest git version? I've just (as a pure coincidence) pushed a commit related to this issue, maybe it solves your problem?\n. Works for me. Please re-open if you're still experiencing this problem.\n. Hi and thanks for your patch!\nBefore I merge it, I have a few comments/questions:\n- it seems that git rev-parse always returns the commit ID. While this is correct, outputting \"version 17\" would be nicer for the user than outputting \"version e1ee1724379a0ea9bdaba24838a2e3f0bd5d8a59\". Any comments?\n- It would be nice to add this to make_release.sh, which is the script I use to create releases. Of course if you don't want to do it yourself, I can do it :)\n- Minor remark: you can use sed -i instead of copying and renaming the file.\n. Sorry but I'm not merging this. I don't want to use a makefile, and I'm not merging a patch that seems to change every line from autojump. Please go back to your previous version.\n. Hi xiaonaitong,\nThanks for this very nice set of patches. I have just a few questions/remarks:\n- Why did you replace os.rename with shutil.copy? I don't think we want to keep the temporary files.\n- Could you add a comment before the line that checks for nt, and explain why you check for it?\n- I'm unsure about the completion patch. Are you certain that it handle files with spaces correctly?\n- Let's get rid of sudo altogether in the install scripts. The user that needs it can simply run \"sudo ./install.sh\".\n. I'll try to have a look ASAP. I don't care at all about the commit history, as long as I can get a diff I'm OK.\n. @orefalo : before I merge this, can you test it also works for you?\n. @orefalo: do you still plan to test?\n. @orefalo: I've used msysgit and it would be great if autojump worked in this contest. However if you don't have time to test it now, maybe I'll merge this pull request anyway and we can work on supporting mysgit later.\n. BTW I think xiaonaitong is right, msysgit has a full-fledged bash, so adding the normal python version and adding it to the path in .bashrc should do the trick. \n. Thanks for testing! I've merged it, I hope it works well!\n. Thanks for your patch!\n. Any advice on how this library should be named and where it should be placed?\n. Thinking a bit more about this issue, can't you consider autojump as a stand-alone executable file and a library, possibly symlinking it to the place where libraries should be? I really want to keep autojump standalone.\n. Great! Thanks for trying.\n. I'm assuming this issue is closed, don't hesitate to re-open if needed.\n. (sorry for not answering earlier. I am very interested in your patch, but I'm trying to fix other issues first and I don't have a lot of time to dedicate to autojump).\n. The problem I see with your patch is that the user is never going to find $prefix/etc/autojump/autojump.bash . I think it would be better to copy those two files in $prefix/bin along with autojump and jumpapplet. What do you think?\n. I've merged your pull request manually, thanks!\nHowever I think it would be better to have the same options for zsh and bash. Wting has contributed a --local option for zsh, I think it would be nice to have for bash. Something to improve in the future, I guess :)\n. Hi,\nthis looks a lot like this closed issue:\nhttps://github.com/joelthelion/autojump/issues/62\nDoes the info in this thread help you?\nIn any case, in the future, could you include more information and context when reporting issues?\n. I'm glad you solved it.\n. Could you tell me what version of bash you have? (bash --version)\n. Whoops :) Thanks for tracking this down yourself, I was getting a bit nervous :)\n. Hi Sergio,\nyou're absolutely right, this should be documented somewhere. For python 2.4/2.5, try release #12. Afterwards I started supporting python3, and that required dropping support for 2.4 and 2.5.\nIf you add this to the wiki and the readme (submit a pull request!), I'd be very grateful.\n. Great! Thanks for testing! I look forward to merging your pull request :)\n. I'm with sergio on this one, older releases of autojump are useful for people stuck on old systems. It would be nice to add a message to the installer pointing these people to release #12.\nWe'll probably do the same when abandoning python 2.x, which I want to do pretty soon given that even debian stable ships python3.x.\n. Did you update to the latest version, released yesterday? There were some problems with Lion (https://github.com/joelthelion/autojump/issues/58), but I thought they were fixed.\nIf that doesn't solve your problem, could you send me the value of your $PROMPT_COMMAND environment variable? Also check that you ~/.bashrc adequatly sources the autojump files.\n. Mmm, this isn't right then. The value of your $PROMPT_COMMAND environment variable will probably give us a clue.\n. Great! Thanks for the feedback!\n. Thanks for your contribution!\n. Are you still having issues with autojump? For the record, I didn't close this issue, you did. I can't answer you right now because I'm away for the rest of the week, but I'll try to help you next week if you still request it.\n. I'm all for this, but why did you remove the file \"_j\", which as far as I remember, is used for zsh completion?\n. This pull request doesn't apply cleanly anymore. I guess I must have merged them in the wrong order. However I think most changes are already accounted for in my master branch (from your other pull requests). Am I correct? Can I close this?\n. Can you report this bug to the homebrew packagers instead? I don't think there is anything I can do about it myself.\n. (don't hesitate to re-open if there is indeed something I should do)\n. So do you have the problem when installing with the installer? If not, can we close the issue for good?\n. Ever wondered why autojump is called that way and not \"j\"? Try typing autojump work instead of j p :)\nj is just a shell function that cds to the path autojump printed.\n. Thanks!\n. Mmm, that's pretty stupid, I wasn't aware of that. Re-opened.\n. Bonjour Tanguy,\nThere are two ways to achieve this currently:\n1. Keep pressing on the \"enter\" key for a few seconds.\n2. Manually edit the autojump.txt file (usually in ~/.local/share)\nDoes this meet your needs? If not, I'd be curious about what you would like exactly and how you would implement it. Maybe a simple bit of documentation is the solution?\n. This is an interesting issue... Autojump uses sys.getfilesystemencoding() (http://docs.python.org/library/sys.html#sys.getdefaultencoding) to figure out the encoding of the filesystem. However, this function doesn't take an argument, so it's bound to fail if different filesystems have different encodings.\nDoes anyone know what the right thing to do would be? Is this a bug in the python standard library? How are you supposed to find out the encoding of a filesystem on the various Unixes?\n. Hi Thibault,\nIt should be solved now. Can you check?\n. Ooh, I like that! I've hated this redundency for a loooong time, but I never got around to doing it.\n. Thanks again! I've merged everything, but I haven't taken the time to \nlook at it yet. I'll try to test ASAP.\nabout the path for _j, you could possibly (I don't know if this is a \ngood idea!) launch zsh just to retrieve the value of the variable? ie, \nfrom bash, something like:\nfpath= $(zsh -c \"echo '${fpath}'\")\nWould that by any chance work?\nOn 02/08/2012 09:11 PM, William Ting wrote:\n\nThe only major change is that I've hardcoded the copy of _j in global zsh installations to the default function directory /usr/local/share/zsh/site-functions/. This is because I'm unable to read zsh environmental variables (e.g. $fpath) from within a bash script.\nYou can merge this Pull Request by running:\ngit pull https://github.com/wting/autojump merge_installs\nOr you can view, comment on it, or merge it online at:\nhttps://github.com/joelthelion/autojump/pull/101\n-- Commit Summary --\n- Merge branches 'bash-fix_missing_die_function' and 'zsh-fix_install_fpath'\n- Merge branch 'master' of https://github.com/joelthelion/autojump\n- merge both uninstalls into one\n- merged installations\n- hardcoded _j copy to distro default function location for global zsh installs\n- fix install help msg, clean up uninstall.sh\n- minor formatting change\n- minor redundancy edit\n-- File Changes --\nM install.sh (81)\nD install.zsh (142)\nM uninstall.sh (53)\nD uninstall.zsh (71)\n-- Patch Links --\nhttps://github.com/joelthelion/autojump/pull/101.patch\n   https://github.com/joelthelion/autojump/pull/101.diff\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joelthelion/autojump/pull/101\n. Hello Khalid,\n\nThanks for your contribution. I'm afraid I'm not going to be able to pull this pull request as is:\n- Adding a new, one-letter alias for all my users doesn't seem like a great idea. I must say though , your implementation is pretty elegant, and it would be nice to have as an option.\n- About the second change, I'm thinking about removing -P by default. One problem that arises if you remove -P is that the same directory will be counted in different entries, so I'm not entirely sure about this. Any comments for other people?\n. Thanks for contributing!\n. Hi Fabio,\nIf you find shift so expensive, why do you use capitals in your app's name (honnest question!)?\nI understand why you'd want this change, but unless there is overwhelming support for this, I'd rather leave it the way it is, because I think it makes sense to distinguish capitals from lowercase letters if the filesystem does.\nNote that as a work around, you can use any part of the name of the directory as a dirspec, so j pp would probably work. You can also change the behavior of autojump by patching it, it should be pretty straight forward (and I can help you if you're stuck).\n. @wting : I'll love your input on that question!\n. @wting any idea where those binary modules come from? Is this something I'm not aware of?\n. No worries, I just find it very weird to see .so files in the autojump user directory. Have a great conference!\n. We discussed a similar issue a while ago:\nhttps://github.com/joelthelion/autojump/issues/90\nI'm not fundamentally against adding an option, but keep in mind that it's already not that hard to do it. One advantage of the option would be better visibility for users who are not familiar with the way autojump works.\n. About the man page: I've written it directly using groff or whatever that's called, but it would probably be better to generate it directly from the README using pandoc for example. Maybe something similar could be done for the main wiki page as well.\n. What should it do? Should it display the help message instead?\nThat makes me think, should we use argparse instead of getopt? It seems like the current accepted way of parsing command lines argument. If we're going to change that piece of code, we could take the opportunity to do that change as well.\n. j is a bash alias, autojump is the actual command. autojump --help will work as expected.\nMaybe a smarter alias could detect an error code returned by autojump, for example?\n. I can't reproduce on my work machine with autojump on commit 448696ef9b1a3b799e6ce3b0397d7bcf98590700, which was a few weeks ago. Could this be due to your fix on issue #114?\n. We already have a recommended version for very old versions of python (v12). I think we can safely say that from v20 onwards you need at least python2.7 to run autojump.\n. BTW, IIRC you had a warning about this in the install script, maybe you should add a warning about argparse?\n. Hi jkuan,\nFor some reason github says your pull request \"cannot be automatically merged.\". Can you rebase it on the latest commit?\n. This was done by the debian package maintainer a while ago, after discussing the issue with me.\nI don't understand the problem. Isn't autojump supposed to work with python 3.x?\n. Reposting my email:\n\nI must say I don't understand the problem you're describing. Python 2\nand 3 can perfectly live together on the same system. On Debian,\n/usr/bin/python is python2 and will stay that way, at least that's what\nTanguy told me. So I told him that in the long run we would drop 2.x\ncompatibility, and that since autojump is compatible with 3.x today, he\ncould start using it with 3.x on Debian right away.\nIf autojump doesn't work with 3.x, I think it's a bug we need to fix;\nbut I don't understand why the choice to use 3.x on Debian (for autojump\nonly!) is supposed to be a problem.\n. Use \"autojump\" instead of \"j\": mv file $(autojump backup).\nKeep in mind that what you're doing is pretty dangerous :)\n. Are you trying to use the autojump command directly, as in autojump directory? If yes, that explains it. If you want to jump you need to use the \"j\" atlas, ie. j directory.\n. I suffer from this problem as well. I never thought of those damned init.py files when I devised the autojump completion mechanism a long time ago. Plus, at that time only \"j\" had completion so there was no problem!\nI still think the completion mechanism is useful for vim and friends, so maybe you're right and we should make these underscores configurable. I'd like to hear wting's take on the problem as well.\n. I don't think we should go down bloat alley, but I really like the completion functionality for other commands. The rationale for it is that in some cases, cd is not enough. The cp command, for instance, takes 2 arguments, which can be in very different directories. Vim works the same when you want to open multiple unrelated files.\nCould we maybe implement it differently? I don't like the idea of a configuration file with too many settings, I think we should strive as much as we can to find a set of reasonable settings that can work for everybody.\n. I do have in mind a complete readline replacement/enhancement that would generalize the idea behind autojump to everything you perform in the shell. But it's a completely different project :-D\n. I fully agree with your rationale, this is an issue that has been bugging me for a while. However the problem is that there is no good way to decide that two directories have \"similar scores\". Any ideas on how to implement this in a way that is both deterministic and simple to understand and predict by the user?\n. Autojump has had that feature for ages, just try it :) Except that the patterns are no longer regexes, if I recall correctly.\n. Here is a simpler implementation: \nfunction jo { nautilus $(autojump $1); }\nOr even, \"j whatever; nautilus .\" is what I used to do.\nMaybe a suggestion in the readme would be enough? I'm not sure how many commands we can add before user start complaining about namespace pollution. \n. function jo { xdg-open $(autojump $@); } is actually pretty cool, I think it's going to stay for a while in my .bashrc :)\n. Doesn't that require making j stateful?\n. It's been a while since I last worked on autojump, but isn't this already the case? The PROMPT_COMMAND is executed every time a prompt is displayed, which should happen only in interactive mode. If this is not the case in your system, than I would wager something is wrong with it.\n. It's working as designed. I agree it's not very intuitive.\nWhat you need to do is press tab another time. Then you will be presented with a list of options with numbers. Now type in the number you want, then , and that should make you jump where you want.\n. What does 'j wor' do? Does it jump anywhere?\n. Ooooh, I really like that idea! Thanks for the vim tip, too!\n. You probably didn't source the required file in your .bashrc. Read the comments for the package, I think they explain what you should do.\n. Isn't autojump supposed to be disabled in non-interactive shells? What's special about virtualenv?\n. Hi yaykyle,\nThe great news is, you don't need another flag, this is exactly what the \"autojump\" command does:\n[joel@panda flickrapi]$ autojump foo\n/home/joel/workspace/LazyFooHaskell\n[joel@panda flickrapi]$\nThe j shell function actually uses the autojump command behind the scenes to perform its work.\n. The red color is important because the destination directory is unpredictable. So it's important to draw the user's attention on where he ended up.\nThat said, maybe j could detect whether the output is a TTY.\n. Could'nt agree more. This has been ongoing since the very early days of autojump. I think #415 is the most promising here. Another idea could be to rename the autojump binary to something less tempting, since after all it's mostly an internal tool.\n. Thank you very much for the bug report! I don't know what caused the problem (it could be a ton of things), but since a few weeks, I've added code that keeps a backup version of the database, updated everyday. In the next few days I will add code to automatically recover from the backup in the case you report.\n. I just commited a fix, It should be fixed now. Can you test the new version for a few days and tell me if you encounter any problems?\n. Closing the issue. Don't hesitate to reopen if the issue is not solved for you :)\n. Oops, this sucks!\nThe difference between v7 and this commit is just a change in the README, so I doubt this update is the cause of your problem. Just to be sure, can you try logging in from a console? (Alt+Ctrl+2 for example, I hope ubuntu has these)\nSend me any error message you get.\n. It's probably not doing the PROMPT_COMMAND. Can you give me the output of the following command?\necho $PROMPT_COMMAND\nAlso, which shell are you using?\n. > I am using git-prompt (http://github.com/lvv/git-prompt/)\n\nI'm using bash\necho $PROMPT_COMMAND\nprompt_command_function\n\nIt seems git-prompt is not playing nicely, and overrides the prompt command. Autojump won't work if the prompt command is overwritten. Autojump on the other hand respects other tools in the prompt command and adds itself to the list without removing the other ones.\nLong story short: either reinstall autojump or submit a bug report to the git-prompt maintainer (or better, do both :))\nPS: please answer in the issue; i nearly missed your message.\n. Hi!\nIt's really OS X that's broken in this case, because in all the other distros the bash_profile already calls the bashrc. Hence adding it to the bash_profile with the installer would add it twice for all the other users...\nMaybe we should create an OS X-specific installer? If you think this is a good idea, can you fork the project, and add your fixed version of the installer? (install.macosx.sh ?)\nI'll then add it to my repo.\n. That seems to be a good idea as well.\n. I won't hesitate :)\n. echo is fine. Autojump doesn't work with sh anyways. Thanks for the patch!\n. I've added the shebang as well.\n. Could you elaborate? What do you mean by \"it doesn't work right\"? Does it spit out some error messages? If so, it could be useful to post them.\n. It looks like the alias ('j' is a bash alias) isn't being set properly.\n. Can you try sourcing .bashrc manually and see if it works better?\nsource ~/.bashrc\nAlso, not that it makes a difference, but j is actually a bash function, not an alias.\n. > Also joel I just read your article on java schools and as someone who took intro CS at Penn I feel a little cheated.\nI think you're mistaking me for someone else :) But hey I'm glad you finally got autojump to work.\n. Is this simply a matter of fixing the installer? If that's the case I think it's a trivial fix...\nI unfortunately don't have access to a mac, so I can't really do it myself, but if you submit a fix, I'll gladly integrate it.\n. OK, I agree, but how should I do it? is PREFIX an environment variable I should poll?\n. Would it work with a environment variable as well? It would be a lot simpler to implement than the command line parsing.\n. DataSurfer (or someone else) : would you be willing to write the homebrew formula if I implement the prefix in the installer?\n. > I find it perplexing that the getopts function in bash does not support GNU extension long flag names\nSame here :) Maybe we should just rewrite the installer in python?\n. > I'll volunteer to write the formula.\nGreat! Just give me a few days to find a good solution to the prefix problem.\n. Ok, I have pushed an implementation of --prefix for the bash installer. Let me know if it works for you!\n. Neat! I merged in your patch. Can I close the issue now?\n. Could you tell me what still needs to be done?\n. I just tried\n./install.zsh --prefix /usr\nand it seems to work on my machine? I don't think we should use getopts, I tried using it in the past and didn't like it much.\n. I'll just assume this works now, closing.\n. Ah yes, I know what the problem is, your python version is too old for generator expression. Is it possible for you to upgrade to a more recent python version. If it's not, I can try to make it compatible, but I don't know if it is possible easily. No guarantees :)\n. This is because + and * are special characters in regular expressions. I could use a simple search instead, but people who use regexps might not be happy about it...\nI need some time to think this through. Thanks for the report!\n. Should be fixed now. Please reopen if it still doesn't work.\n. Hi,\nI will look into it as soon as I get a chance.\njoel\n. Bonjour Olivier,\nIt should be fixed now. Can you confirm that it works?\n. > I keep making autojump huge publicity (b\u00e9po, zeitgeist\u2026).\nGreat! That means a lot to me :)\n. Hi!\nI understand your 'problem' perfectly, but I think things are working fine! Actually, when I first started autojump, it worked the way you describe; but I found out that the amount of work you perform in a directory is what counts, not the number of times you \"cd\" to it.\nIn any case, this would be pretty easy for you to change, but I'd suggest using the standard autojump for a week or two before making the change. You might change your mind :)\n. Hi,\nCould you give me the output of the the \"alias\" and the \"jumpstat\" command, and tell me what directory you are trying to complete? (give me the state of the command line when you press tab, as well as the directory you think it should complete).\n. Hi Jake,\nI think everything is actually working properly! Autojump isn't a replacement for cd, but a complement. You should wait a bit more for the database to fill itself, and then you'll be able to use autojump to move back and forth between your most used directories, using autocompletion if you want. For now since you have only one directory in the database, it's not very useful yet :)\nLet me know if you need more help!\njoel\n. Indeed, it actually learns every time you type a command, not only when you change directories. You can check the current state of the database with \"jumpstat\".\n. Good point :) I guess I'll have to think of a new tagline...\n. I agree that would be nice, but I don't think all major distros respect that specification (yet). I just tested on my opensuse system, and these environment variables aren't enabled. I also highly doubt that cygwin and mac set them correctly (these are a big part of my users).\nSo in conclusion: why not in a few years, but I think this is a bit premature for now.\n. Not a bad idea :) I'll have to think of a way to seamlessly migrate people, though.\n. I tried to implement your idea; can you comment on it? Note that for simplicity I put everything in the XDG_DATA_HOME directory.\n. Great! Thanks for the input!\n. What prevents you from putting autojump on the remote hosts? At least, that's how I do it. (note that you don't have to be root to install autojump, you simply have to install it manually in that case).\n. Why would you need to convince other people to use it? (note that I don't doubt you have a good reason for this, I just want to make sure I understand your use case; it's people like you who have helped me make autojump as good as it is now :) )\n. Another way you could do this is by sharing the autojump data files between the different machines: recent autojump versions ignore directories that don't exist.\n. > I want to restrict it to my main computer because I work on customers' productions systems, and I don't want to install (please, bare with the term) \"exotic\" software on it yet.\nHeck, I wouldn't do it either! :-D\nTo come back to your original question, I really don't have a clue as to how you would implement that without installing software on the remote machine. The whole point of ssh is that the commands you send are executed remotely and not locally! If you think of a solution, I'd be glad to hear it, though :)\n. I'd love to help you out, but I use bash myself and zsh completion works perfectly on all of my machines...\nIs autojump the only application that has a problem? What distro are you using? Can you try using autojump on a fresh user account to see if one of your customizations could be the problem?\n. Could you provide a patch for the zsh installer? I could probably do it, but since I don't use zsh, there's a significant probability that I would mess up :)\nAbout the bash installer, I guess the problem is in a patch from another guy I merged in recently. But I can't reproduce the problem on my computer...\n. Ok, I think I've solved the problem. What do you think of the solution?\nhttp://github.com/joelthelion/autojump/commit/512db419e1470af77c544ecbedad5dae9221ddda\n. Ok, I'm considering the issue to be closed. Don't hesitate to reopen if that is not the case!\n. Hi, thanks for the report! That's a very weird error... Could you send me the contents of your ~/.local/share/autojump directory (pm me for email) as well as the output of \"python -v\"?\nThanks!\n. Did you update autojump recently? If not, please do so, and tell me if the problem persists.\n. I'm glad it works for you now, although I suspect there is a robustness issue to be solved somewhere...\n. Thanks for the report! I can't reproduce on my computer, so could you send me the contents of your ~/.local/share/autojump/ directory? Could you also send me the output of \"autojump --completion main\"?\nAlso, are you sure both directories exist (could they be on a removable drive?) at the moment you try to use the completion?\n. Ok, don't hesitate to reopen if the problem reappears!\n. Hi,\nThat seems like a good idea, but I'm afraid it could mess things up for the (many) people who have already installed to /usr. Any idea on how to make the transition smooth?\n. I agree this is the way it should be, but I won't fix it, because,\n1) it will cause problems with existing installs,\nand 2) it's not worth it.\n. I've added a few files. Let me know if more are missing.\n. Thanks, good job, but i'll stick with python2 for a while. The reason is, many of my users don't have python3 on their systems. When python3 becomes more widely distributed, I'll make the switch. As you said, it's not that big a deal.\n. Actually, the current version of autojump is compatible with both versions of python: it should support everything from 2.6 to 3.x.\n. I'm glad you found a version that works for you!\nThe decision of abandoning old versions of python was a bit difficult to take, but I think supporting python 3 is more important in the long run.\n. It's weird that it's working for a lot of people and not for you... A few questions before we try anything else:\nAre you 100% sure the problem comes from autojump? What else did you install/change before the problem appeared?\nDo you have any weird things in your vim configuration?\nDoes autojump work?\n. Can you give the location of the installed _j file, the _vim file, and the contents of your FPATH variable? This is a bit difficult for me to debug as I don't use zsh myself :)\n. Reopen if you still have problems.\n. Hi and thanks for the report. I have a question though:\nAren't these supposed to exist on any self-respecting distro? What happens if they do? I certainly don't want my users to see ugly error messages...\n. Good point. I'll integrate your patch as soon as I get a moment.\n\nbtw, it would be preferable if the default prefix was \"/usr/local\" instead of \"/usr\"\n\nI'm aware of the problem, but until someone supplies me with a good way of transitioning existing users who upgrade with ./install.sh seamlessly, it will stay as it is :-/\n. Done!\n. Any idea on how to implement this? Something that would work automatically with git would be pretty nice.\n. This is solved now (see pull request 73)\n. That's not how autojump works. It doesn't add weight when you use cd, but every time the prompt is displayed, so basically every time you type a command.\nLet me know if the problem persists.\n. I understand your problem better now, and I think it's an interesting problem, because I had never had that case before.\nCould you please send me the output of \"df -h -T\", \"pwd\" and \"pwd -P\" when in the ~/www directory?\n. You may well have found a bug in bash :) From the bash documentation:\n[joel@mouton ~]$ help pwd\npwd: pwd [-LP]\n    Print the name of the current working directory.\nOptions:\n  -L    print the value of $PWD if it names the current working\n    directory\n  -P    print the physical directory, without any symbolic links\n. Ah, maybe the issue is specific to zsh then. I'll try to investigate a bit if I get the time.\n. I've tried to reproduce your problem, but I couldn't reproduce it, neither with bash nor with zsh...\n. I tried with a different computer, and I still can't reproduce your problem. Please re-open if the problem persists.\n. Hi jostein,\nDo you have the latest version? I used to have a similar problem, but I thought I have fixed it in a recent commit.\n. Hi!\nI'm sorry this is still an issue for you. I'll try to investigate, but it will be a bit difficult since I haven't had the problem myself for a while.\nIn the meantime, could you send me all the information that seems relevant to you? Examples: content of the $PROMPT_COMMAND variable, permissions and ownership on the folder and all the files in ~/.local/share/autojump, content of autojump_errors, shell you're using, ...\n. Some more questions: do you often work as root? What do you use? su? sudo? Do you remember what you were doing (especially as root) when the problem appeared?\n. Thanks a lot for your help!\n. Great news: thanks to your explanations, I've finally been able to reproduce the problem. I'll try to work on a fix this week end.\n. I've just pushed a fix for this problem, can you tell me if you still have the problem with \"su\"?\n. Huh, weird, I don't have the same problem.\nDid you unset the PROMPT_COMMAND (or reboot) since upgrading?\n. Great to know it works for you!\nJust note that you shouldn't need to unset the prompt command in your bashrc, it should only be needed once when upgrading.\n. Thanks for reporting! I guess what happened is that homebrew has an older version than you initially had. I try to preserve backwards compatibility, but not forward compatibility. You did the right thing by removing the autojump_py file.\n. Hi,\nI'm sorry but I really don't want to go down this route. I'm a firm believer in the philosophy of Unix: do one thing, and do it well. Autojump is a tool for jumping between directories, and that's it, I don't want to re-implement a whole shell :)\nThe good news is, it should be very easy to write a \"jl\" function which does exactly what you want :)\n. Yes, that's how it's supposed to work. The idea is that no matter how many symlinks you have pointing to the same directory, they will be counted together. You could then use\nj S\nfor example to go in the target directory. In any case, if you really want to change this behavior, replace \"pwd -P\" in autojump.{bash,zsh} by simply \"pwd\". It should do what you want.\n. thelastnode is absolutely right. Be careful not to use it with dangerous commands though... I would definitely not recommend\nrm -rf $(autojump abc)\n:-)\n. Thanks!\n. Of course! Thanks!\n. Hi,\nI just saw your commit and I find it interesting. The fact that it calls autojump -a every time you enter a command is in fact something people commonly don't like about autojump.\nHowever, I'm not sure that it will work well enough with this implementation, because there will be a lot less data to learn from.\nI suggest that you use your implementation for a while and contact me again in one or two months if you like it. Would that be acceptable for you?\n. I understand your reflexion perfectly :) I prefer to forget about autojump completly, which is why I like hooking it on the prompt command.\nI don't like the idea of the \"purge\" option because one of the good things about autojump is that it remembers very old directories. There already is a feature that deletes keys if the database becomes really too big.\nI think I'll merge the \"remove\" option, because this is really something autojump has been missing for a while.\nAnyways, thanks for your patches, it's great to have other people poking at the code from time to time.\n. Closing.\n. It's probably because your .bashrc doesn't source /etc/profile.\nThe installer tries its best to work on all platforms, but it's hard to handle every case right. That said, I'd be happy if you can provide a patch for your case :)\n. The current version of autojump is supposed to be compatible with python3, precisely for Arch Linux.\nWhich version are you using? Can you be more specific?\n. What are you talking about? If you install the package \"python\" (which is in fact python3), you get the following files:\npython /usr/\npython /usr/bin/\npython /usr/bin/idle\npython /usr/bin/idle3\npython /usr/bin/pydoc\npython /usr/bin/pydoc3\npython /usr/bin/python\n...\nAnd there you have it, \"python\" in the standard path. Now if you install autojump with pacman, it is patched to depend on python2, so there is no problem either.\n. Not a real issue, closing.\n. What version are you using? The latest release is supposed to fix this.\nUnfortunately a simple test like you propose doesn't cover all use cases, but this commit: ( https://github.com/joelthelion/autojump/commit/c877a51ad6b2d53ad20c7822f1d39312d3ce88a2 ) is supposed to fix them all.\n. Interesting, thanks for the info. I'll take a look when I have a moment.\n. I can't reproduce :-/ I've tried to \"sudo bash\" on two different distros with no problems. What distro are you using? Any specific custom environment?\n. Both of them, I think, I don't remember very well. The issue is tricky because there are many ways to gain root permissions: su, su -, sudo su, sudo bash, ...\nCould you please post the output of the \"env\" command before and after you sudo bash?\n. No answer --> closing. Will reopen if I get more info.\n. Good point. Fixed!\n. What python version are you using?\n. Too old :) Is it possible for you to upgrade? If not, I can try to find a solution, but it's pretty difficult to support old 2.x versions and 3.x at the same time!\n. Ok, closing.\n. I'm working on a better installer; but in the meantime, there is nothing stopping you from installing it yourself without root. I can help if you're stuck.\n. Thanks for your report.\n. I'll work with wting to merge his changes into the main tree.\n. Good point! I've pushed two commits that should solve your problem. Can you confirm that they work?\n. No answer, I'm assuming this is solved.\n. You need 2.6 at the moment, but the good news is, if you download autojum version 12, it should work out fine with python 2.5.\nI should probably write that information down somewhere, thanks for the reminder :)\n. Hi and thanks for the report! Are you using the latest git version or a previous release? I've had the same problem in the past, but I thought it was fixed now.\nAlso, do you have an idea of the command that caused the problem? What distro are you using?\n. I've just pushed a tentative fix. I can't test it because sudo is properly better configured under Arch, so I can't reproduce the problem. However I believe this patch should fix the problem. Can you confirm?\n. Great! I'll close the issue for now; don't hesitate to re-open if needed.\nI'll probably wait a week or so to make sure everything is ok, then I'll make a new release.\n. Good idea, but could you remove the corresponding python code? It won't be needed anymore if we implement this change. \n. I understand your rationale, but something that's even worse in my mind is duplicated code.\nDoes this optimization really make things faster? Otherwise maybe it's best not to do it at all.\n. No input --> closing.\n. I works for me. Are you still having this problem?\n. Try it :)\nIf you want to write documentation for it, I'll gladly integrate it; but I won't put any effort into the applet myself as I don't use it (it's a contribution).\n. Normally it opens a task bar icon that you can use by right clicking, it's really straightforward! Did you see the icon?\n. Mmm, it seems jumpapplet still uses the old database. I'll try to fix it when I get a few minutes :)\n. This is done on purpose, but I understand it doesn't necessarily match the workflow of everyone. Fortunately, it's quite simple to patch it to suit your needs. In autojump.bash, replace this line:\nAUTOJUMP='{ [[ \"$AUTOJUMP_HOME\" == \"$HOME\" ]] && (autojump -a \"$(pwd -P)\"&)>/dev/null 2>>${AUTOJUMP_DATA_DIR}/autojump_errors;} 2>/dev/null'\nwith\nAUTOJUMP='{ [[ \"$AUTOJUMP_HOME\" == \"$HOME\" ]] && (autojump -a \"$(pwd)\"&)>/dev/null 2>>${AUTOJUMP_DATA_DIR}/autojump_errors;} 2>/dev/null'\nYou could also call autojump twice if you want to add both paths.\n. Could you tell me what distro you're using? Did you install autojump with the installer, or with the distro's packages?\nI'm glad you were able to solve the problem, but if I can do anything to avoid other people running into the problem, I'd be glad as well!\n. Ok, let's forget about this for now :) Don't hesitate to re-open if you find some additional info.\n. Hi wting,\nThis is what I used to do in the beginning, but I've since then decided against it, as it goes against the Unix philosophy of doing one thing well, and only one thing. In my mind the important point is that it is easy to change if you want to, which is what you just did :)\n. Thanks for the fix!\n. Hi,\nThanks for your patch. I have already merged the grep fix.\nI don't think I want to merge the /usr/local fix, for various reasons:\n1) the prefix should be customizable (easy to fix)\n2) It might conflict with versions installed by package managers (most users now)\n3) It's just not worth the hassle.\nI hope you won't take it personally. I really appreciate people sending me patches, but I think this issue is too tiny to justify the effort.\n. Great! Thanks for looking into it.\n. I understand your need. However, I'm not convinced about this change for most people, because if there is a problem, I'd rather see it fail with an error message than silently.\nIf other people have this problem, I'll point them to your branch.\n. @wting: are you still willing to take care of the install scripts? If so, I'm ready to merge :)\n. Hi wting,\nI haven't had the time to review your contribution, but I have a proposal for you: would you be willing to maintain the install script for autojump? That would mean that I would (almost) blindly merge your commits on the install scripts. In counterpart, you would try to support the scripts and fix related issues.\nOf course there is really no pressure to accept, but since you seem interested in autojump and since I have less and less time to devote to it, I think it could be beneficial for everybody. Any thoughts?\n. jumpstat is a bash alias for \"autojump --stat\". So you can type autojump --stat.\nOf course, further integration would be nice, but I don't use mc, so I won't do it :)\n. Hi and thanks for the patch. I haven't looked at the code yet, but here are my first feelings:\nI have mixed feelings on the idea of approximate matching. I find autojump already dangerous enough (you get used to a sequence making you jump somewhere, and if it changes somehow, you can end up doing stuff in the wrong place). Isn't approximate matching going to increase this?\nAlso, I don't really understand the need. I usually use autojump with two or three letter patterns, so I rarely have typos. Is it a real problem for you? How do you use autojump?\nIn any case, I find the performance improvements and the profiling very interesting. I'll try to inspect them and merge them ASAP.\n. Hi int3,\nsorry for the delay in answering, I'm pretty busy and don't have a lot of time to spend on autojump! But I'm still interested in your contribution.\nI suppose you've been using your version for a while now, so I'd be interested in hearing your feedback. Does approximate matching improve your experience? Did you implement the \"bold or different color\" idea?\n. Sure, I just haven't taken the time to try it yet. Have you? I'd be interested in feedback from people actually using this.\n. Can someone please create a fork and merge this for everyone to try? That way we can learn from it, and possibly improve it, before we possibly decide to integrate it into the main autojump tree.\n. @shelhamer : great! Don't forget to keep me updates.\n@arronmabrey : Would you be willing to remake autojump's presentation video (the youtube video linked on the top of the wiki page). I'm not a native english speaker and I suck at making videos, so a new one would be great.\n. Thanks for the fix! I knew this would turn out to be a problem, but I somehow had to use the latest version of the protocol :)\n. Could you try the following and report back?\nmv ~/.local/share/autojump ~/.local/share/autojump.old\n. I'm glad :)\n. This is a frequently asked question. The problem is that both ways to do it are correct.\nChanging it is a simple removing the '-P' in the PROMPT_COMMAND. I might add an example in the source to make it easier in the future.\n. Thanks for the fix, and sorry for the late answer!\n. Hi, and sorry for the late answer!\nAbout the workaround: unsetting the prompt command will surely work, but autojump needs it in order to record paths. So it won't work properly if you do that.\nAbout the problem itself: are you sure the \"update_terminal_cwd\" isn't the cause of the problem? What happens if you remove it?\nNot having a mac at hand to test makes it hard to diagnose the problem, but if you can narrow it down a bit, I'm sure we can solve this :)\n. @pcarrier: thanks for the help!\nNow the question is, what is this \"update_terminal_cwd\", and why does it end the prompt command with \";\". Do you need it?\n. I think gnome3 uses a different protocol for displaying applets. I don't know about lxde. So the part that displays the icon would need to be rewritten. If anyone wants to work on this, I can try to merge it later.\n. Normally paths that don't exist anymore are not used in the ranking, so autojump should still work properly. They are still kept in the database in case they were on a removable drive, so that you will be able to use autojump with removable drives.\nIs there any specific reason you want to remove these paths from the database?\n. I think you have a good point. I see two options here: either add an option to autojump to remove paths, which is easy but not very flexible; or switch to a text format for the autojump file. What do you think?\n. I've implemented a new text format in a new branch (text_format). I haven't written the migration code yet, but you can already try it, it will simply create a new database file.\nComments welcome!\n. The code is now ready in the \"text_format\" branch, can you test it and tell me what you think?\n. I've merged the code into master. Been using it for a few days, and it works great. Please re-open if there is a problem.\n. Hi Tanguy,\nI haven't checked your code yet, but you can find the explanation why XDG is commented out in the git history: the problem is that in the distributions that I have checked, the XDG env variables are not updated correctly when the user uses sudo or su. Thus his database is updated as root, then the autojump file belongs to root and the user is locked with permission problems.\nI'm all for implementing and following the standard, so if you can find a way of implementing this that is compatible with the use of su and sudo, I will merge it.\nAny comments?\n. > I suggest that we simply follow the specification but adding a security check: if $XDG_DATA_HOME does not belong to the current user, simply disable autojump.\nCan you add this check? I will gladly merge your contribution.\n. I have merged your branch. Does it seem correct to you?\n. In this case, if it's OK with you, I'll close this issue and issue a new release. Thanks for your contribution!\n. I have just merged the fix by shelhamer, can you confirm that it solves the issue?\n. I'll do it as soon as I get a moment. Sorry for the delay.\n. OK, I just tagged a new release. Can we consider this to be fixed?\n. I've re-uploaded the file, to no avail. I've contacted github about this.\n. Great then! Thanks to everyone for reporting and helping to fix this issue.\n. I'm pretty sure your brew (or whatever it's called, I don't use a mac) isn't up to date. Version 17 has been released a while ago now.\n. Apparently they decided to remove autojump from homebrew: https://github.com/mxcl/homebrew/issues/9470\nI don't really understand why.\n. I think copying the files around is the good thing to do. It's what all the linux distros do, and it allows to cope with the diversity of systems. The autojump installer is just there to help people who don't have access to a packaging system. To be frank, it is a pain to maintain it.\n. Sorry about this. The correct behavior would be to hide the file as it is only useful when debugging. I'll try to fix that ASAP.\n. This should be solved now. Can you test with the latest git head?\n. OK, great, closing. Don't hesitate to reopen if the issue reappears.\n. Thanks for the fix!\n. I can confirm this is not normal at all :)\nCan you try sourcing /etc/profile.d/autojump.bash (assuming you're using bash) directly in your bashrc? Then j and jumpstat should be defined (they're bash aliases), and the PROMPT_COMMAND environment variable should contain autojump related stuff.\n. I'd be interested if another ubuntu user can comment on this?\n. @cbrunos: would you mind pasting the output of \ndpkg -L autojump\n. I've asked the debian maintainer about this problem, and you need to source /usr/share/autojump.bash (instead of /etc/profile.d/autojump.bash) in your bashrc, as described in the documentation of the package.\n. Thanks!\n. Could you try again with the latest git version?\n. No problem, thanks for reporting!\n. Salut David,\nThat sounds a lot like a corrupted pickle file, or maybe could be caused by going back and forth between python2 and python3. In any case, an easy workaround is to scratch everything in your ~/.local/share/autojump directory (or alternatively remove .autojump* in your home directory if you don't have a .local/share directory). I think it should work.\nBefore you scratch them, could you please send me the incriminated files for inspection?\n. I'm glad it works! Just send me the original autojump_py file if you still have it, or the autojump_py.bak file.\n. Can you try the latest git version? I've just (as a pure coincidence) pushed a commit related to this issue, maybe it solves your problem?\n. Works for me. Please re-open if you're still experiencing this problem.\n. Hi and thanks for your patch!\nBefore I merge it, I have a few comments/questions:\n- it seems that git rev-parse always returns the commit ID. While this is correct, outputting \"version 17\" would be nicer for the user than outputting \"version e1ee1724379a0ea9bdaba24838a2e3f0bd5d8a59\". Any comments?\n- It would be nice to add this to make_release.sh, which is the script I use to create releases. Of course if you don't want to do it yourself, I can do it :)\n- Minor remark: you can use sed -i instead of copying and renaming the file.\n. Sorry but I'm not merging this. I don't want to use a makefile, and I'm not merging a patch that seems to change every line from autojump. Please go back to your previous version.\n. Hi xiaonaitong,\nThanks for this very nice set of patches. I have just a few questions/remarks:\n- Why did you replace os.rename with shutil.copy? I don't think we want to keep the temporary files.\n- Could you add a comment before the line that checks for nt, and explain why you check for it?\n- I'm unsure about the completion patch. Are you certain that it handle files with spaces correctly?\n- Let's get rid of sudo altogether in the install scripts. The user that needs it can simply run \"sudo ./install.sh\".\n. I'll try to have a look ASAP. I don't care at all about the commit history, as long as I can get a diff I'm OK.\n. @orefalo : before I merge this, can you test it also works for you?\n. @orefalo: do you still plan to test?\n. @orefalo: I've used msysgit and it would be great if autojump worked in this contest. However if you don't have time to test it now, maybe I'll merge this pull request anyway and we can work on supporting mysgit later.\n. BTW I think xiaonaitong is right, msysgit has a full-fledged bash, so adding the normal python version and adding it to the path in .bashrc should do the trick. \n. Thanks for testing! I've merged it, I hope it works well!\n. Thanks for your patch!\n. Any advice on how this library should be named and where it should be placed?\n. Thinking a bit more about this issue, can't you consider autojump as a stand-alone executable file and a library, possibly symlinking it to the place where libraries should be? I really want to keep autojump standalone.\n. Great! Thanks for trying.\n. I'm assuming this issue is closed, don't hesitate to re-open if needed.\n. (sorry for not answering earlier. I am very interested in your patch, but I'm trying to fix other issues first and I don't have a lot of time to dedicate to autojump).\n. The problem I see with your patch is that the user is never going to find $prefix/etc/autojump/autojump.bash . I think it would be better to copy those two files in $prefix/bin along with autojump and jumpapplet. What do you think?\n. I've merged your pull request manually, thanks!\nHowever I think it would be better to have the same options for zsh and bash. Wting has contributed a --local option for zsh, I think it would be nice to have for bash. Something to improve in the future, I guess :)\n. Hi,\nthis looks a lot like this closed issue:\nhttps://github.com/joelthelion/autojump/issues/62\nDoes the info in this thread help you?\nIn any case, in the future, could you include more information and context when reporting issues?\n. I'm glad you solved it.\n. Could you tell me what version of bash you have? (bash --version)\n. Whoops :) Thanks for tracking this down yourself, I was getting a bit nervous :)\n. Hi Sergio,\nyou're absolutely right, this should be documented somewhere. For python 2.4/2.5, try release #12. Afterwards I started supporting python3, and that required dropping support for 2.4 and 2.5.\nIf you add this to the wiki and the readme (submit a pull request!), I'd be very grateful.\n. Great! Thanks for testing! I look forward to merging your pull request :)\n. I'm with sergio on this one, older releases of autojump are useful for people stuck on old systems. It would be nice to add a message to the installer pointing these people to release #12.\nWe'll probably do the same when abandoning python 2.x, which I want to do pretty soon given that even debian stable ships python3.x.\n. Did you update to the latest version, released yesterday? There were some problems with Lion (https://github.com/joelthelion/autojump/issues/58), but I thought they were fixed.\nIf that doesn't solve your problem, could you send me the value of your $PROMPT_COMMAND environment variable? Also check that you ~/.bashrc adequatly sources the autojump files.\n. Mmm, this isn't right then. The value of your $PROMPT_COMMAND environment variable will probably give us a clue.\n. Great! Thanks for the feedback!\n. Thanks for your contribution!\n. Are you still having issues with autojump? For the record, I didn't close this issue, you did. I can't answer you right now because I'm away for the rest of the week, but I'll try to help you next week if you still request it.\n. I'm all for this, but why did you remove the file \"_j\", which as far as I remember, is used for zsh completion?\n. This pull request doesn't apply cleanly anymore. I guess I must have merged them in the wrong order. However I think most changes are already accounted for in my master branch (from your other pull requests). Am I correct? Can I close this?\n. Can you report this bug to the homebrew packagers instead? I don't think there is anything I can do about it myself.\n. (don't hesitate to re-open if there is indeed something I should do)\n. So do you have the problem when installing with the installer? If not, can we close the issue for good?\n. Ever wondered why autojump is called that way and not \"j\"? Try typing autojump work instead of j p :)\nj is just a shell function that cds to the path autojump printed.\n. Thanks!\n. Mmm, that's pretty stupid, I wasn't aware of that. Re-opened.\n. Bonjour Tanguy,\nThere are two ways to achieve this currently:\n1. Keep pressing on the \"enter\" key for a few seconds.\n2. Manually edit the autojump.txt file (usually in ~/.local/share)\nDoes this meet your needs? If not, I'd be curious about what you would like exactly and how you would implement it. Maybe a simple bit of documentation is the solution?\n. This is an interesting issue... Autojump uses sys.getfilesystemencoding() (http://docs.python.org/library/sys.html#sys.getdefaultencoding) to figure out the encoding of the filesystem. However, this function doesn't take an argument, so it's bound to fail if different filesystems have different encodings.\nDoes anyone know what the right thing to do would be? Is this a bug in the python standard library? How are you supposed to find out the encoding of a filesystem on the various Unixes?\n. Hi Thibault,\nIt should be solved now. Can you check?\n. Ooh, I like that! I've hated this redundency for a loooong time, but I never got around to doing it.\n. Thanks again! I've merged everything, but I haven't taken the time to \nlook at it yet. I'll try to test ASAP.\nabout the path for _j, you could possibly (I don't know if this is a \ngood idea!) launch zsh just to retrieve the value of the variable? ie, \nfrom bash, something like:\nfpath= $(zsh -c \"echo '${fpath}'\")\nWould that by any chance work?\nOn 02/08/2012 09:11 PM, William Ting wrote:\n\nThe only major change is that I've hardcoded the copy of _j in global zsh installations to the default function directory /usr/local/share/zsh/site-functions/. This is because I'm unable to read zsh environmental variables (e.g. $fpath) from within a bash script.\nYou can merge this Pull Request by running:\ngit pull https://github.com/wting/autojump merge_installs\nOr you can view, comment on it, or merge it online at:\nhttps://github.com/joelthelion/autojump/pull/101\n-- Commit Summary --\n- Merge branches 'bash-fix_missing_die_function' and 'zsh-fix_install_fpath'\n- Merge branch 'master' of https://github.com/joelthelion/autojump\n- merge both uninstalls into one\n- merged installations\n- hardcoded _j copy to distro default function location for global zsh installs\n- fix install help msg, clean up uninstall.sh\n- minor formatting change\n- minor redundancy edit\n-- File Changes --\nM install.sh (81)\nD install.zsh (142)\nM uninstall.sh (53)\nD uninstall.zsh (71)\n-- Patch Links --\nhttps://github.com/joelthelion/autojump/pull/101.patch\n   https://github.com/joelthelion/autojump/pull/101.diff\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joelthelion/autojump/pull/101\n. Hello Khalid,\n\nThanks for your contribution. I'm afraid I'm not going to be able to pull this pull request as is:\n- Adding a new, one-letter alias for all my users doesn't seem like a great idea. I must say though , your implementation is pretty elegant, and it would be nice to have as an option.\n- About the second change, I'm thinking about removing -P by default. One problem that arises if you remove -P is that the same directory will be counted in different entries, so I'm not entirely sure about this. Any comments for other people?\n. Thanks for contributing!\n. Hi Fabio,\nIf you find shift so expensive, why do you use capitals in your app's name (honnest question!)?\nI understand why you'd want this change, but unless there is overwhelming support for this, I'd rather leave it the way it is, because I think it makes sense to distinguish capitals from lowercase letters if the filesystem does.\nNote that as a work around, you can use any part of the name of the directory as a dirspec, so j pp would probably work. You can also change the behavior of autojump by patching it, it should be pretty straight forward (and I can help you if you're stuck).\n. @wting : I'll love your input on that question!\n. @wting any idea where those binary modules come from? Is this something I'm not aware of?\n. No worries, I just find it very weird to see .so files in the autojump user directory. Have a great conference!\n. We discussed a similar issue a while ago:\nhttps://github.com/joelthelion/autojump/issues/90\nI'm not fundamentally against adding an option, but keep in mind that it's already not that hard to do it. One advantage of the option would be better visibility for users who are not familiar with the way autojump works.\n. About the man page: I've written it directly using groff or whatever that's called, but it would probably be better to generate it directly from the README using pandoc for example. Maybe something similar could be done for the main wiki page as well.\n. What should it do? Should it display the help message instead?\nThat makes me think, should we use argparse instead of getopt? It seems like the current accepted way of parsing command lines argument. If we're going to change that piece of code, we could take the opportunity to do that change as well.\n. j is a bash alias, autojump is the actual command. autojump --help will work as expected.\nMaybe a smarter alias could detect an error code returned by autojump, for example?\n. I can't reproduce on my work machine with autojump on commit 448696ef9b1a3b799e6ce3b0397d7bcf98590700, which was a few weeks ago. Could this be due to your fix on issue #114?\n. We already have a recommended version for very old versions of python (v12). I think we can safely say that from v20 onwards you need at least python2.7 to run autojump.\n. BTW, IIRC you had a warning about this in the install script, maybe you should add a warning about argparse?\n. Hi jkuan,\nFor some reason github says your pull request \"cannot be automatically merged.\". Can you rebase it on the latest commit?\n. This was done by the debian package maintainer a while ago, after discussing the issue with me.\nI don't understand the problem. Isn't autojump supposed to work with python 3.x?\n. Reposting my email:\n\nI must say I don't understand the problem you're describing. Python 2\nand 3 can perfectly live together on the same system. On Debian,\n/usr/bin/python is python2 and will stay that way, at least that's what\nTanguy told me. So I told him that in the long run we would drop 2.x\ncompatibility, and that since autojump is compatible with 3.x today, he\ncould start using it with 3.x on Debian right away.\nIf autojump doesn't work with 3.x, I think it's a bug we need to fix;\nbut I don't understand why the choice to use 3.x on Debian (for autojump\nonly!) is supposed to be a problem.\n. Use \"autojump\" instead of \"j\": mv file $(autojump backup).\nKeep in mind that what you're doing is pretty dangerous :)\n. Are you trying to use the autojump command directly, as in autojump directory? If yes, that explains it. If you want to jump you need to use the \"j\" atlas, ie. j directory.\n. I suffer from this problem as well. I never thought of those damned init.py files when I devised the autojump completion mechanism a long time ago. Plus, at that time only \"j\" had completion so there was no problem!\nI still think the completion mechanism is useful for vim and friends, so maybe you're right and we should make these underscores configurable. I'd like to hear wting's take on the problem as well.\n. I don't think we should go down bloat alley, but I really like the completion functionality for other commands. The rationale for it is that in some cases, cd is not enough. The cp command, for instance, takes 2 arguments, which can be in very different directories. Vim works the same when you want to open multiple unrelated files.\nCould we maybe implement it differently? I don't like the idea of a configuration file with too many settings, I think we should strive as much as we can to find a set of reasonable settings that can work for everybody.\n. I do have in mind a complete readline replacement/enhancement that would generalize the idea behind autojump to everything you perform in the shell. But it's a completely different project :-D\n. I fully agree with your rationale, this is an issue that has been bugging me for a while. However the problem is that there is no good way to decide that two directories have \"similar scores\". Any ideas on how to implement this in a way that is both deterministic and simple to understand and predict by the user?\n. Autojump has had that feature for ages, just try it :) Except that the patterns are no longer regexes, if I recall correctly.\n. Here is a simpler implementation: \nfunction jo { nautilus $(autojump $1); }\nOr even, \"j whatever; nautilus .\" is what I used to do.\nMaybe a suggestion in the readme would be enough? I'm not sure how many commands we can add before user start complaining about namespace pollution. \n. function jo { xdg-open $(autojump $@); } is actually pretty cool, I think it's going to stay for a while in my .bashrc :)\n. Doesn't that require making j stateful?\n. It's been a while since I last worked on autojump, but isn't this already the case? The PROMPT_COMMAND is executed every time a prompt is displayed, which should happen only in interactive mode. If this is not the case in your system, than I would wager something is wrong with it.\n. It's working as designed. I agree it's not very intuitive.\nWhat you need to do is press tab another time. Then you will be presented with a list of options with numbers. Now type in the number you want, then , and that should make you jump where you want.\n. What does 'j wor' do? Does it jump anywhere?\n. Ooooh, I really like that idea! Thanks for the vim tip, too!\n. You probably didn't source the required file in your .bashrc. Read the comments for the package, I think they explain what you should do.\n. Isn't autojump supposed to be disabled in non-interactive shells? What's special about virtualenv?\n. Hi yaykyle,\nThe great news is, you don't need another flag, this is exactly what the \"autojump\" command does:\n[joel@panda flickrapi]$ autojump foo\n/home/joel/workspace/LazyFooHaskell\n[joel@panda flickrapi]$\nThe j shell function actually uses the autojump command behind the scenes to perform its work.\n. The red color is important because the destination directory is unpredictable. So it's important to draw the user's attention on where he ended up.\nThat said, maybe j could detect whether the output is a TTY.\n. Could'nt agree more. This has been ongoing since the very early days of autojump. I think #415 is the most promising here. Another idea could be to rename the autojump binary to something less tempting, since after all it's mostly an internal tool.\n. ",
    "ciudilo": "Just double checked bash man page and bash behaves in the same way as on other distros. The problem with OS X is that it starts each new Terminal.app window as a login shell so .bash_profile is executed instead of .bashrc . However if user would start one more bash subshell autojump will work without any problems.\nI don't think we should create one more installer just for this. Mybe it would be better to add OS check into current installer that will edit .bash_profile if OS X is detected?\nWill submit my patch in a moment.\n. Great! You can always ping me if anyone has any more troubles on OS X with this great utility.\n. What OS are you on?\n. Yeah you are right when script is started as an executable (./install.sh) newline characters are not parsed correctly. I have been testing it like this:\n    sh install.sh\nThat's why I didn't pickup on this.\n. I have submitted a patch that uses -e flag.\n. echo really confused me this time.\nit is probably safer to use printf in this case \n. Hello Kevin,\nIf statement that I have added into install.sh should be appended to .bash_profile not .bashrc\n.bashrc should contain alias setup\n. contents of autojump.bash go into .bashrc\n. Just double checked bash man page and bash behaves in the same way as on other distros. The problem with OS X is that it starts each new Terminal.app window as a login shell so .bash_profile is executed instead of .bashrc . However if user would start one more bash subshell autojump will work without any problems.\nI don't think we should create one more installer just for this. Mybe it would be better to add OS check into current installer that will edit .bash_profile if OS X is detected?\nWill submit my patch in a moment.\n. Great! You can always ping me if anyone has any more troubles on OS X with this great utility.\n. What OS are you on?\n. Yeah you are right when script is started as an executable (./install.sh) newline characters are not parsed correctly. I have been testing it like this:\n    sh install.sh\nThat's why I didn't pickup on this.\n. I have submitted a patch that uses -e flag.\n. echo really confused me this time.\nit is probably safer to use printf in this case \n. Hello Kevin,\nIf statement that I have added into install.sh should be appended to .bash_profile not .bashrc\n.bashrc should contain alias setup\n. contents of autojump.bash go into .bashrc\n. ",
    "ahoy-jon": "I still have the issue in the trunk despite the \"uname == Darwin\" in the install.sh\nIn ligne 42 in install.sh, there is a \"mistake\" (is my OS working ?)  :\n     echo \"\\nif [ -f ~/.bashrc ]; then\\n  . ~/.bashrc\\nfi\" >> ~/.bash_profile\n\\n are not rendered properly !\necho -e works better\n```\necho -e \"\\nif [ -f ~/.bashrc ]; then\\n  . ~/.bashrc\\nfi\"\nif [ -f ~/.bashrc ]; then \n  . ~/.bashrc \nfi\n```\n. MacOS 10.6.2 !\n. True, I just saw there isn't a shebang in this script, maybe it's the real issue ;)\n. but echo -e in sh  prints '-e', that's better as MacUsers use by default bash ... ! It's not really important. Thank you for the patch.\n. Yes it is safer in this case. I was really confused too :)\n. does the command autojump works (exit without error) ? If so just do \"cat ~/.bash_profile\" (and look at the end)\n. kevin : Do the file ~/.bashrc exist ? if so, can you copy the content of ~/.bashrc and put it in ~/.bash_profile instead of  \"if [-f ~/.bashrc ] ...\" ? then you can open a new terminal to see if \"j\" works.\n. and /etc/profile ?\n. I still have the issue in the trunk despite the \"uname == Darwin\" in the install.sh\nIn ligne 42 in install.sh, there is a \"mistake\" (is my OS working ?)  :\n     echo \"\\nif [ -f ~/.bashrc ]; then\\n  . ~/.bashrc\\nfi\" >> ~/.bash_profile\n\\n are not rendered properly !\necho -e works better\n```\necho -e \"\\nif [ -f ~/.bashrc ]; then\\n  . ~/.bashrc\\nfi\"\nif [ -f ~/.bashrc ]; then \n  . ~/.bashrc \nfi\n```\n. MacOS 10.6.2 !\n. True, I just saw there isn't a shebang in this script, maybe it's the real issue ;)\n. but echo -e in sh  prints '-e', that's better as MacUsers use by default bash ... ! It's not really important. Thank you for the patch.\n. Yes it is safer in this case. I was really confused too :)\n. does the command autojump works (exit without error) ? If so just do \"cat ~/.bash_profile\" (and look at the end)\n. kevin : Do the file ~/.bashrc exist ? if so, can you copy the content of ~/.bashrc and put it in ~/.bash_profile instead of  \"if [-f ~/.bashrc ] ...\" ? then you can open a new terminal to see if \"j\" works.\n. and /etc/profile ?\n. ",
    "kevinburke": "IM having trouble running this on mac os 10.6... i tried ./install.sh and sh install.sh, added source /profile/etc to my .bashrc file but when I try to type j documents or jumpstat from the terminal it doesn't work right.\n. When I type j Documents or jumpstat at the command line Terminal prints: -bash: command not found. I tried the auto install, chmod +x, and manual install, copying everything int the bashrc file. Maybe it was bad to try all of these things at once. Does Mac generate error logs somewehere?\n. It only contains the lines I added the from ciudio at the top of this post (they ahve been there the whole time):\n# Get the aliases and functions\n    if [ -f ~/.bashrc ]; then\n      . ~/.bashrc\n    fi\nBefore I added these lines the file did not exist in my home directory\n. typing \"autojump\" into terminal works without error\n. How do you set it?\n. .bashrc contains only the line source /etc/profile\n. I tried both of those things and when I try to write at the Terminal work$ j Documents or work$ jumpstat, it replies bash:command not found.\nAlso joel I just read your article on java schools and as someone who took intro CS at Penn I feel a little cheated.\n. Hey I think I got it to work\n. Thanks - here were the steps I had to take, for future reference\n1 - didn't realize it had to be --prefix $HOME and not --prefix=$HOME.\n2 - remove all the sudo's from install.sh\n3 - copy contents of autojump.bash into .bashrc\n4 - edit autojump file - default version of python on the box was 2.4, so \"except Exception as e\" caused errors. Changed first line to #!/usr/local/bin/python2.6 and now it works fine.\n. IM having trouble running this on mac os 10.6... i tried ./install.sh and sh install.sh, added source /profile/etc to my .bashrc file but when I try to type j documents or jumpstat from the terminal it doesn't work right.\n. When I type j Documents or jumpstat at the command line Terminal prints: -bash: command not found. I tried the auto install, chmod +x, and manual install, copying everything int the bashrc file. Maybe it was bad to try all of these things at once. Does Mac generate error logs somewehere?\n. It only contains the lines I added the from ciudio at the top of this post (they ahve been there the whole time):\n# Get the aliases and functions\n    if [ -f ~/.bashrc ]; then\n      . ~/.bashrc\n    fi\nBefore I added these lines the file did not exist in my home directory\n. typing \"autojump\" into terminal works without error\n. How do you set it?\n. .bashrc contains only the line source /etc/profile\n. I tried both of those things and when I try to write at the Terminal work$ j Documents or work$ jumpstat, it replies bash:command not found.\nAlso joel I just read your article on java schools and as someone who took intro CS at Penn I feel a little cheated.\n. Hey I think I got it to work\n. Thanks - here were the steps I had to take, for future reference\n1 - didn't realize it had to be --prefix $HOME and not --prefix=$HOME.\n2 - remove all the sudo's from install.sh\n3 - copy contents of autojump.bash into .bashrc\n4 - edit autojump file - default version of python on the box was 2.4, so \"except Exception as e\" caused errors. Changed first line to #!/usr/local/bin/python2.6 and now it works fine.\n. ",
    "dserodio": "This would be useful not only for Mac users, but for those who like to our filesystems organized and following the Linux FHS.\nIMHO it should install to /usr/local by default instead of /usr\nhttp://www.pathname.com/fhs/pub/fhs-2.3.html#FTN.AEN1450\n. Prefix is usually set as a parameter to the install script, i.e.:\n./install.sh --prefix=/usr/local\n. This would be useful not only for Mac users, but for those who like to our filesystems organized and following the Linux FHS.\nIMHO it should install to /usr/local by default instead of /usr\nhttp://www.pathname.com/fhs/pub/fhs-2.3.html#FTN.AEN1450\n. Prefix is usually set as a parameter to the install script, i.e.:\n./install.sh --prefix=/usr/local\n. ",
    "AEtherSurfer": "+1 on the homebrew formula\nhttp://wiki.github.com/mxcl/homebrew/formula-cookbook\n. I find it perplexing that the getopts function in bash does not support GNU extension long flag names\n. +1 on the homebrew formula\nhttp://wiki.github.com/mxcl/homebrew/formula-cookbook\n. I find it perplexing that the getopts function in bash does not support GNU extension long flag names\n. ",
    "tmcw": "I'll volunteer to write the formula. I think that a environment variable is less standard than giving it as a flag (--prefix) to the installer, but I'm also coming up with nothing as far as implementing flags in bash.\n. Er, kind of took a while because I use zsh and have needed to bring the zsh installer up to the sh installer's capabilities. Looks like options parsing is not the same between the two.\n. Er, not quite, zsh isn't working with the path option. This'll need a little more work\n. So, currently, setting --path in the zsh installer doesn't work correctly. I simply don't understand getopts well enough at this point, need to read up more. It does work correctly for bash, so if someone wants to write a bash installer, that'd be quick, but I'm not in a good position to switch environments (too much werk, werk, werk).\n. I'll volunteer to write the formula. I think that a environment variable is less standard than giving it as a flag (--prefix) to the installer, but I'm also coming up with nothing as far as implementing flags in bash.\n. Er, kind of took a while because I use zsh and have needed to bring the zsh installer up to the sh installer's capabilities. Looks like options parsing is not the same between the two.\n. Er, not quite, zsh isn't working with the path option. This'll need a little more work\n. So, currently, setting --path in the zsh installer doesn't work correctly. I simply don't understand getopts well enough at this point, need to read up more. It does work correctly for bash, so if someone wants to write a bash installer, that'd be quick, but I'm not in a good position to switch environments (too much werk, werk, werk).\n. ",
    "hrp": "No problem. I'm not in charge of this particular machine, so I don't know if I can upgrade python. Regardless, cool tool.\n. No problem. I'm not in charge of this particular machine, so I don't know if I can upgrade python. Regardless, cool tool.\n. ",
    "nemolivier": "Salut Joel,\nEverything look\u2019s fine. Thank\u2019s again. I keep making autojump huge publicity (b\u00e9po, zeitgeist\u2026). \nThank\u2019s a lot.\n. Salut Joel,\nEverything look\u2019s fine. Thank\u2019s again. I keep making autojump huge publicity (b\u00e9po, zeitgeist\u2026). \nThank\u2019s a lot.\n. ",
    "askedrelic": "Ahh so any command in that directory will increase its weight. That makes sense to me. If things are working as intended, then carry on! Thanks for this awesome script.\n. Ahh so any command in that directory will increase its weight. That makes sense to me. If things are working as intended, then carry on! Thanks for this awesome script.\n. ",
    "JakeCarter": "Output from the 'alias' and 'jumbstat' commands:\n$ alias\nalias ..='cd ..'\nalias bak='tar cvzf'\nalias ch='cd ~;clear'\nalias cls='clear'\nalias flushdns='dscacheutil -flushcache'\nalias grip='grep -i'\nalias hide='setfile -a V'\nalias jumpstat='autojump --stat'\nalias la='ls -laG'\nalias lt='ls -ltG'\nalias show='setfile -a v'\nalias showdns='cat /etc/resolv.conf'\nalias spot='mdfind -onlyin pwd'\nalias td='timedog -d 5 -l'\n$ jumpstat\n1.0:    /\n3.0:    /Users/jake/Sites/html5\nTotal key weight: 4\n$ \nI've tried tab-compleation a few different ways. I've tried:\n$ j /[tab]\nWhen I hit tab all I get is a system 'bell' sound. Nothing happens in the terminal.\nHere's what I get when I cd /[tab]:\n$ cd /[tab]\n.DS_Store         .VolumeIcon.icns  .fseventsd/       Applications/     Network/          Volumes/          cores/            home/             opt/              tmp/\n.Spotlight-V100/  .dbfseventsd      .hotfiles.btree   Developer/        System/           Xcode4/           dev/              mach_kernel       private/          usr/\n.Trashes/         .file             .vol/             Library/          Users/            bin/              etc/              net/              sbin/             var/\nI've also tried:\n$ j ~/Si[tab]\nHere's what I get with cd:\n$ cd ~/Si[tab]\n$ cd ~/Sites/\nThanks for the help. Please let me know if you need more info.\nJake\n. So if I keep using cd to move around the file system, autojump will 'learn' what folders I visit and build it's database around that?\nFor some reason I thought I had to use j as my cd command so it would learn.\nThanks for the help,\nJake\n. Output from the 'alias' and 'jumbstat' commands:\n$ alias\nalias ..='cd ..'\nalias bak='tar cvzf'\nalias ch='cd ~;clear'\nalias cls='clear'\nalias flushdns='dscacheutil -flushcache'\nalias grip='grep -i'\nalias hide='setfile -a V'\nalias jumpstat='autojump --stat'\nalias la='ls -laG'\nalias lt='ls -ltG'\nalias show='setfile -a v'\nalias showdns='cat /etc/resolv.conf'\nalias spot='mdfind -onlyin pwd'\nalias td='timedog -d 5 -l'\n$ jumpstat\n1.0:    /\n3.0:    /Users/jake/Sites/html5\nTotal key weight: 4\n$ \nI've tried tab-compleation a few different ways. I've tried:\n$ j /[tab]\nWhen I hit tab all I get is a system 'bell' sound. Nothing happens in the terminal.\nHere's what I get when I cd /[tab]:\n$ cd /[tab]\n.DS_Store         .VolumeIcon.icns  .fseventsd/       Applications/     Network/          Volumes/          cores/            home/             opt/              tmp/\n.Spotlight-V100/  .dbfseventsd      .hotfiles.btree   Developer/        System/           Xcode4/           dev/              mach_kernel       private/          usr/\n.Trashes/         .file             .vol/             Library/          Users/            bin/              etc/              net/              sbin/             var/\nI've also tried:\n$ j ~/Si[tab]\nHere's what I get with cd:\n$ cd ~/Si[tab]\n$ cd ~/Sites/\nThanks for the help. Please let me know if you need more info.\nJake\n. So if I keep using cd to move around the file system, autojump will 'learn' what folders I visit and build it's database around that?\nFor some reason I thought I had to use j as my cd command so it would learn.\nThanks for the help,\nJake\n. ",
    "puy0": "there :\n\nAutojump isn't a replacement for cd\n\ntagline :\n\nAutojump, A cd command that learns\n\nhmmm kinda confusing isnt?\nOk, just did the same mistake which leaded me there, rtfm I know I know :)\nmy 2 cents :\n- Change tagline\n- Evolve autojump so it can be effectively used as an intelligent cd and not a complement, would be so handy :)\nonce again, 2 cents, no more, great idea, great work @joel\n. there :\n\nAutojump isn't a replacement for cd\n\ntagline :\n\nAutojump, A cd command that learns\n\nhmmm kinda confusing isnt?\nOk, just did the same mistake which leaded me there, rtfm I know I know :)\nmy 2 cents :\n- Change tagline\n- Evolve autojump so it can be effectively used as an intelligent cd and not a complement, would be so handy :)\nonce again, 2 cents, no more, great idea, great work @joel\n. ",
    "tlvince": "That's true, but you can use parameter expansion to set an alternative if the environment variables aren't set:\n${XDG_CONFIG_HOME:-$HOME/.config}\nwhich, as a bonus, is POSIX compatible.\n. I've just taken a look at the commit and it looks solid enough to me. Thanks for implementing it!\n. That's true, but you can use parameter expansion to set an alternative if the environment variables aren't set:\n${XDG_CONFIG_HOME:-$HOME/.config}\nwhich, as a bonus, is POSIX compatible.\n. I've just taken a look at the commit and it looks solid enough to me. Thanks for implementing it!\n. ",
    "jorisd": "You're right, it would be easier, but I don't want to install it everywhere because I would need to convince other people to use it too, which is not yet the time atm :p\nI will try to find a way to capture remote sessions, maybe the unix command tee will proves useful in this case.\nCheers\n. Hi, \nI want to restrict it to my main computer because I work on customers' productions systems, and I don't want to install (please, bare with the term) \"exotic\" software on it yet.\nBut if I can convince my team mate to use it, then I could install it everywhere.\nSee, it's no big deal :)\n. You're right, it would be easier, but I don't want to install it everywhere because I would need to convince other people to use it too, which is not yet the time atm :p\nI will try to find a way to capture remote sessions, maybe the unix command tee will proves useful in this case.\nCheers\n. Hi, \nI want to restrict it to my main computer because I work on customers' productions systems, and I don't want to install (please, bare with the term) \"exotic\" software on it yet.\nBut if I can convince my team mate to use it, then I could install it everywhere.\nSee, it's no big deal :)\n. ",
    "jfhbrook": "sshfs?\n. sshfs?\n. ",
    "jaylevitt": "Just verified that even with all those commented out, the problem still occurs (without the \"No matches:\" warning).\n. Hmm.. I'm on Mac OS X 10.5.8 (can't upgrade to 10.6 yet), with zsh 4.3.10 from MacPorts.  I tried using the built-in 4.3.4, got the same results, even after deleting all my customizations and blowing away the autojump directory.\nI just tried creating a new account that uses /bin/bash (3.2.17(1)-release (i386-apple-darwin9.0)), but install.sh says:\ngrep: /Users/jaytest/.bash_profile: No such file or directory\n./install.sh: line 79: [: too many arguments\nI did, in fact, touch an empty .bash_profile but that didn't change the error message. How can I troubleshoot?\n. Well, ignoring the bash installer bug, I think I figured out the zsh problem.   With zsh 4.3.10:\n% echo $FPATH\n/opt/local/share/zsh/site-functions:/opt/local/share/zsh/4.3.10/functions\ninstall.zsh puts _j into the first directory in $FPATH. Unfortunately:\n~% ls /opt/local/share/zsh\n4.3.10/\n~%\nand install.zsh doesn't check the error!  I'd recommend that install.zsh make the directory if required, or at least spit out an error when it isn't found.  I manually created site-functions, put _j in there, and all is now well on the zsh side.\n. It'd be great if this were an additional option, so we don't have to patch autojump.bash on each install, something like:\n```\nif [ \"$AUTOJUMP_REMEMBER_SYMLINKS\" != \"\" ]; then\n  pwd_params=\"-P\"\nelse\n  pwd_params=\"\"\nfi\n....&& (autojump -a \"$(pwd $pwd_params)\"...\n```\nonly you'd have to change the quoting level of the AUTOJUMP=.\n. Just verified that even with all those commented out, the problem still occurs (without the \"No matches:\" warning).\n. Hmm.. I'm on Mac OS X 10.5.8 (can't upgrade to 10.6 yet), with zsh 4.3.10 from MacPorts.  I tried using the built-in 4.3.4, got the same results, even after deleting all my customizations and blowing away the autojump directory.\nI just tried creating a new account that uses /bin/bash (3.2.17(1)-release (i386-apple-darwin9.0)), but install.sh says:\ngrep: /Users/jaytest/.bash_profile: No such file or directory\n./install.sh: line 79: [: too many arguments\nI did, in fact, touch an empty .bash_profile but that didn't change the error message. How can I troubleshoot?\n. Well, ignoring the bash installer bug, I think I figured out the zsh problem.   With zsh 4.3.10:\n% echo $FPATH\n/opt/local/share/zsh/site-functions:/opt/local/share/zsh/4.3.10/functions\ninstall.zsh puts _j into the first directory in $FPATH. Unfortunately:\n~% ls /opt/local/share/zsh\n4.3.10/\n~%\nand install.zsh doesn't check the error!  I'd recommend that install.zsh make the directory if required, or at least spit out an error when it isn't found.  I manually created site-functions, put _j in there, and all is now well on the zsh side.\n. It'd be great if this were an additional option, so we don't have to patch autojump.bash on each install, something like:\n```\nif [ \"$AUTOJUMP_REMEMBER_SYMLINKS\" != \"\" ]; then\n  pwd_params=\"-P\"\nelse\n  pwd_params=\"\"\nfi\n....&& (autojump -a \"$(pwd $pwd_params)\"...\n```\nonly you'd have to change the quoting level of the AUTOJUMP=.\n. ",
    "mottram": "Hi Joel - the output of python -v is here: http://sprunge.us/FHBA?python\nI don't have a ~/.local/share/autojump dir - could that be the problem?\n. I had been using the version in the Arch Linux community repo. Tried the latest from git, which threw the same error until I removed the ~/.autojump_py and ~/.autojump_errors files (which I probably should've tried in the first place!). Working perfectly now, anyway.\n. Hi Joel - the output of python -v is here: http://sprunge.us/FHBA?python\nI don't have a ~/.local/share/autojump dir - could that be the problem?\n. I had been using the version in the Arch Linux community repo. Tried the latest from git, which threw the same error until I removed the ~/.autojump_py and ~/.autojump_errors files (which I probably should've tried in the first place!). Working perfectly now, anyway.\n. ",
    "JrCs": "Hummm, sorry about that but now it's working. I don't understand why it doesn't work 4 days ago. The directories exists and are on a not removable drive.\n. Doing a git bisect give me the culprit commit: 32566eb89d7a9672401793143c9be0516a65df7e\nPerhaps the problem is related to: \nOptions passed to the j function will now be passed on autojump. As a result, directories beginning with - are no longer supported.\n. The problem is that you loose the exit code of the last command you execute in the shell if autojump is insert at the beginning of the PROMPT_COMMAND variable and you want to use it in another function call by PROMPT_COMMAND.\nTry This:\nbash\nunset PROMPT_COMMAND\nPROMPT_COMMAND='echo \"Exit code:$?\"'\nfalse\nExit code:1 # <- this is good\nNow source autojump\nbash\nsource autojump.bash\nfalse\nExit code:0 # <- wrong\nbecause autojump insert himself at the begining of the PROMPT_COMMAND variable.\n. I'm using OSX 10.8 everyday, i will try to find what kind of problem could be.\n. Look at my patch #163, it will fix all issues for PROMPT_COMMAND\n. Sorry bad issue. AUTOJUMP_KEEP_SYMLINKS works sorry !\n. Yes the completion in bash is not working anymore.\nThe last commit that works is 63925437\nThe bad commit where the problem appears is: 2fcaefb0\n. Hummm, sorry about that but now it's working. I don't understand why it doesn't work 4 days ago. The directories exists and are on a not removable drive.\n. Doing a git bisect give me the culprit commit: 32566eb89d7a9672401793143c9be0516a65df7e\nPerhaps the problem is related to: \nOptions passed to the j function will now be passed on autojump. As a result, directories beginning with - are no longer supported.\n. The problem is that you loose the exit code of the last command you execute in the shell if autojump is insert at the beginning of the PROMPT_COMMAND variable and you want to use it in another function call by PROMPT_COMMAND.\nTry This:\nbash\nunset PROMPT_COMMAND\nPROMPT_COMMAND='echo \"Exit code:$?\"'\nfalse\nExit code:1 # <- this is good\nNow source autojump\nbash\nsource autojump.bash\nfalse\nExit code:0 # <- wrong\nbecause autojump insert himself at the begining of the PROMPT_COMMAND variable.\n. I'm using OSX 10.8 everyday, i will try to find what kind of problem could be.\n. Look at my patch #163, it will fix all issues for PROMPT_COMMAND\n. Sorry bad issue. AUTOJUMP_KEEP_SYMLINKS works sorry !\n. Yes the completion in bash is not working anymore.\nThe last commit that works is 63925437\nThe bad commit where the problem appears is: 2fcaefb0\n. ",
    "vinc-mai": "Maybe you should check for /usr/bin/autojump and warn people to uninstall the old version.\nBy the way, thanks for this hack. j function is very handfull.\n. I know that --prefix option can be used to select a top directory. What I meant is that the DEFAULT location (when --prefix is not used) should be /usr/local.\n. Thanks for the quick modification.\n. I have upgraded autojump and it seems to be fixed...\nSorry for this early report!\nAn option to set a weight for a path should be interested when a new directory is created and intensively used.\n. I tried to use it but I failed and I have no clue on how to use it!\n. I see the icon. I can right click to see preferences but I do not see how to use it to jump somewhere (with nautilus??).\n. Maybe you should check for /usr/bin/autojump and warn people to uninstall the old version.\nBy the way, thanks for this hack. j function is very handfull.\n. I know that --prefix option can be used to select a top directory. What I meant is that the DEFAULT location (when --prefix is not used) should be /usr/local.\n. Thanks for the quick modification.\n. I have upgraded autojump and it seems to be fixed...\nSorry for this early report!\nAn option to set a weight for a path should be interested when a new directory is created and intensively used.\n. I tried to use it but I failed and I have no clue on how to use it!\n. I see the icon. I can right click to see preferences but I do not see how to use it to jump somewhere (with nautilus??).\n. ",
    "amaltson": "Seems the homebrew guys solved this by just using --prefix, https://github.com/mxcl/homebrew/issues/1843\n. @vinc-mai, definitely agree with you.\n. I'm actually having this issue again. It looks like it's happening because autojump autocompletion is installed in brew --prefix/share/zsh/site-functions not brew --prefix/share/zsh/functions.\n. Would it be possible to reopen this issue because I'm still not getting autocomplete unless I manually change my $fpath to include brew --prefix/share/zsh/site-functions\n. Seems to be fixed in the latest release, yay!\n. Seems the homebrew guys solved this by just using --prefix, https://github.com/mxcl/homebrew/issues/1843\n. @vinc-mai, definitely agree with you.\n. I'm actually having this issue again. It looks like it's happening because autojump autocompletion is installed in brew --prefix/share/zsh/site-functions not brew --prefix/share/zsh/functions.\n. Would it be possible to reopen this issue because I'm still not getting autocomplete unless I manually change my $fpath to include brew --prefix/share/zsh/site-functions\n. Seems to be fixed in the latest release, yay!\n. ",
    "ljharb": "Can you please make a separate branch for those of us that can't upgrade to python3?\n. My mistake - turns out I have python 2.4.3 (CentOS is difficult to get pst 2.4.x), and the last commit I'm compatible with is https://github.com/joelthelion/autojump/commit/edec6a140fdea2c127c04a6f3177a8109f824939\n. Can you please make a separate branch for those of us that can't upgrade to python3?\n. My mistake - turns out I have python 2.4.3 (CentOS is difficult to get pst 2.4.x), and the last commit I'm compatible with is https://github.com/joelthelion/autojump/commit/edec6a140fdea2c127c04a6f3177a8109f824939\n. ",
    "barmic": "I'm sure that is autojump because if I uninstall autojump (remove the _j autocompletion file), zsh/vim works good.\nI have a ~/.vimrc but I think isn't the problem, because it's an autocompletion probl\u00e8m.\nautojump works good :) \n. Awesome ! :+1:  I don't imagine that already done. Sorry for the noise.\n. I'm sure that is autojump because if I uninstall autojump (remove the _j autocompletion file), zsh/vim works good.\nI have a ~/.vimrc but I think isn't the problem, because it's an autocompletion probl\u00e8m.\nautojump works good :) \n. Awesome ! :+1:  I don't imagine that already done. Sorry for the noise.\n. ",
    "amjith": "I think the OP has autojump plugin enabled for zsh and that was causing the problem. After I disabled the autojump plugin in zsh it works fine. I suspect it is a problem with the zsh plugin (oh-my-zsh specifically) rather than an autojump problem. \n. I think the OP has autojump plugin enabled for zsh and that was causing the problem. After I disabled the autojump plugin in zsh it works fine. I suspect it is a problem with the zsh plugin (oh-my-zsh specifically) rather than an autojump problem. \n. ",
    "imranfanaswala-xx": "Well, not if you set a custom prefix\nbtw, it would be preferable if the default prefix was \"/usr/local\" instead of \"/usr\"\n. Well, not if you set a custom prefix\nbtw, it would be preferable if the default prefix was \"/usr/local\" instead of \"/usr\"\n. ",
    "wting": "We need joelthelion to come up with a versioning scheme for this to work, since he can just manually update the version number when merging pull requests.\n. Never mind, I realize this is an issue with the default /etc/profile and not autojump itself.  I've gotten around it by just sourcing /etc/profile.d/autojump.bash directly.\n. I installed Autojump on 3x Ubuntu 10.10 servers through Github clone and install.sh as root.\njumpstats was aliased and working but not being updated by my cd commands.  I then read on Github wiki to source /etc/profile in .bashrc which allowed jumpstats to be updated properly but then led to the default non-colored prompt.\nI tried to duplicate this behavior just now but couldn't, as install.sh was properly adding that line into my .bashrc.  I'm not sure why the install script wasn't working before.\n. I can't duplicate this problem on my machine.\nHave you tried pulling down the source again and reinstalling?  You might also try commenting that line out, does your .bash_history still get overwritten?\n. At beginning ask whether to install for one user or all users (root required).\nAll users: install into /usr/local/bin/\nOne user: install into ~/.autojump/\nOn a side note, I don't have a ~/.local/share/ on Ubuntu server editions so Autojump creates empty autojump_error files in my home directory that I can't get rid of.\n. @joelthelion : I reset my fork to release-v19 and rewrote the Linux z-shell version here.\n. @joelthelion : Can you go ahead and close this issue?\n. Yeah I'm fine with that. :)\n. Continuation of @shelhamer's post from #110 since it's more appropriate here:\n\nThis raises the broader issue of ranking matches given both scores and match quality. The approx matching thread might be the place for this discussion. I'm mulling over whether or not it would ever be desirable to rank an approximate match with high scores over an exact match with almost zero score. This might be another matter of taste that could be configurable?\n\nI think exact matching should always take priority over higher weighted approximate matching. I second the exact > case insensitive > flex > approx match priority approach.\nI looked at the Vimeo video, and it looks like Quicksilver treats exact and flex string match results the same prioritizing higher weights. While I think that works well for Launchy / Quicksilver where the primary task is opening programs, autojump's primary task is finding directory names where acronyms are not used as much.\n. To anyone still interested in fuzzy searching, I've implemented a basic fuzzy search in d7cea406. The previous implementations have experienced bit rot, and I've been refactoring the code over the weekend.\nTo clarify autojump's matching priority:\n1. Try exact match.\n2. Try case insensitive match.\n3. Try fuzzy match.\nFuzzy matching is a last case scenario, and there are certain limitations to the current fuzzy matching implementation:\n- It is case insensitive.\n- It only matches against the end directory of any path:\nbar given path /usr/bin/lib/foo/bar\n- It returns the highest weighted entry that matches at least 60% using Python's difflib.get_close_match().\nIt uses SequenceMatcher to return a list of good enough matches. I've tested it with simple transposing / missing characters and it works well enough.\n- It does not handle multiple directory matching: e.g. j foo bar will only use bar to match with.\n- It does not handle acronyms or give extra priority to first character of letters: e.g. j MIT will not match against ~/Massachusetts Institution of Technology\nQuicksilver-style works well when you have instant feedback as you're typing, in addition many program names are multiple words. On the other hand, autojump feedback is comparatively slow. Also, I don't think multiple word directories are prevalent except on Windows.\nSo basically if you accidentally misspell a long directory name (e.g. j thisreallylongnam), the current implementation has a good chance of finding the correct directory. However if you're using 2-3 character jumps (e.g. j lib) it probably won't work as you would expect since there's a high chance of getting an exact / case insensitive match.\n. I've implemented this 3 weeks ago and it has worked well enough for me over that period. As a result I'm going to go ahead and close this pull request.\nAs always, feel free to reopen this issue or create a new one if you have problems with approximate / fuzzy matching.\n. This has been fixed in @statik213's commit cfda2d0. To enable this setting, use the latest autojump version and set the environmental variable export AUTOJUMP_KEEP_SYMLINKS=1 in your .bashrc or .zshrc.\n. Closed as won't fix. GNOME shell incompatibility is mentioned in documentation. \n. @daveshah: Next time can you create a new issue and link to this one rather than revive an old thread? This way the other users don't need to get unnecessarily notified.\nLast week when I submitted the patch to homebrew I tested it on 10.6.8 and it worked fine then. I'll retest it again once I get access to a MBP over the weekend.\n. This is most likely due to a Debian policy where we're not allowed to modify user profile files upon installation. Since Ubuntu is downstream, it's unlikely they've changed behavior back to what should be expected unless they repatched over Debian's patch.\n. @yugal: I'll need to look into it, but don't have time right now.\nIn the mean time you should manually install autojump.\n. Yeah, I wish we could do it automatically for users but that runs afoul of Debian's guidelines. :crying_cat_face: \n. There is no easy way to catch syntax error within a Python script, this was the closest answer I could find.\nIt seems like the best resolution is to put a wrapper script around autojump that tests Python version. I'm not sure if you want to go down this route, and if not then issue can be closed.\n. The installation scripts are in bash and a pull request as already been submitted here.\nI'm not sure referring older releases for older Python versions is the right thing to do.\n. An incomplete zsh uninstall script got pushed to the wrong branch. I've rolled it back.\n. Yup, changes have been merged in already.\n. @shelhamer Would you mind submitting a pull request into autojump with the zsh tab completion fix?\nI'm testing it out and j + tab auto completion does not work in Linux with / without oh-my-zsh.\n. What version of autojump and how are you installing it?\nI mistakenly removed __j (which is needed for tab completion) and added it back in later. It's possible there's a lag in the homebrew version, but I don't have a Mac so it's not easy for me to test.\n. FYI, from Python3UnicodeDecodeError:\n\nOn UNIX (and other operating systems), it's possible to mount different file systems using different charsets. sys.getdefaultencoding() will be the same for the different file systems since this encoding is only used between Python and the Linux kernel, not between the kernel and the file system which may uses a different charset.\n\nI tried to reproduce the bug locally but couldn't, so I've requested more info in the RedHat bug report.\n. Thanks for following up on this issue.\nI need to set aside some time to work on it. However at the same time, I'm hoping when RedHat upgrades to a newer version of Autojump using Python 3 these Unicode related problems will magically go away. One can hope...\n. Yes.\nRight now Autojump supports Python 2 and 3. When it detects Python 2, it applies a basic UTF wrapping around strings. The traceback from the second bug shows a problem with one of those functions (called encode() and decode()). Since Python  3 uses Unicode strings natively, I'm hoping that will solve the 2nd bug.\nWhat Tanguy Ortolo (Debian maintainer) did was apply a quick patch to replace the first line of autojump with #!/usr/bin/python \u2192 #!/usr/bin/python3 and change the respective package dependencies.\n. No problem. I hope to release v21 in a month or two. v21-rc is available right now, I've been quite busy over the past few months (changelog).\n. @tnorth: I've fixed this issue in faf0854, and commented on the RedHat bug as well.\nI'm closing this issue due to inactivity. If the behavior reappears please let us know (preferably here, but I'm subscribed to the RedHat bug report as well).\n. Finished in issue 100 and issue 101.\n. That was one of the first things I tried but unfortunately not.\n. Full path doesn't bother me, but that's probably because I use a 2 line prompt.\nI do have an issue with duplicate entries though, since sometimes I'll use the symlink and other times the full path and would like them weighted the same. However the fix may not be worth the hassle.\nWhy not just have the symlink feature available as an option with some caveats? Enable it using an environmental variable and let users worry about duplicate entries.\n. Thanks for explaining, that makes more sense.\nWhy not just strip the s function and submit another pull request? The zsh changes would be identical with the exception of single -> double braces.\n. @kevinburke: This has been fixed in the latest commit e96dc4c.\nThe problem was making sure zsh's compinit was loaded. If you prefer not to upgrade autojump, you can also fix the problem by adding this line to your ~/.zshrc: autoload -U compinit; compinit.\n. ZSH tab completion was not working at all before. Now it is working regardless if you have menucomplete enabled or not.\nconsole\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a \u2039\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  setopt nomenucomplete\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a \u2039\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  j aut<tab><tab>\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a \u2039\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  j aut__<1><enter>\n/home/ting/code/autojump\n\u256d\u2500ting@noa ~/code/autojump \u2039python-2.7.3\u203a \u2039\u203a \u2039ruby-1.9.3\u203a \u2039master\u203a \n\u2570\u2500\u27a4\nconsole\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a \u2039\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  setopt menucomplete\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a \u2039\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  j aut<tab><tab>\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a \u2039\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  j aut__<3><enter>\n/home/ting/.local/share/autojump\n\u256d\u2500ting@noa ~/.local/share/autojump \u2039python-2.7.3\u203a \u2039\u203a \u2039ruby-1.9.3\u203a \u2039master\u203a \n\u2570\u2500\u27a4\nAfter seeing the menu and making a number selection, you can  to jump to the entry. Hitting  again expands the path to full entry, but is not necessary.\n. > Regarding your 2nd example with menucomplete, the j auto should have added the first option already when pressing Tab once and moved to the seconds option with the 2nd tab?!\nThe behavior for bash and zsh behavior is the same:\n- j auto<tab> \u2192 j auto__\n- j auto__<tab> \u2192 <displays menu>\n- j auto__3<enter> \u2192 <jump to 3rd entry>\n- j auto__3<tab><enter> \u2192 <replace entry full path, then jump to path>\n\nAre you saying that when you press 3 it completes the previous input, and does not accept the 2nd/selected option and inserting 3 as a new argument to \"j\"?\n\nPressing 3 does not complete the input until you hit . However j auto__<#><enter> is a valid call, there is no need to hit .\n\nsetopt nolistambiguous will display the list of possibilities right away, also if there is an ambitious prefix being completed first.\n\nRight now tab completion behavior is the same for both shells. I want to mess with user zsh settings as little as possible, but will add this to the documentation.\n. Ahh ok. I wasn't exactly sure what your question was, glad it was just miscommunication.\nIn either case, I'm just glad to have fixed this long standing issue.\n. Yup.\n. I don't think there should be a reason we can't support this, but as with this and fuzzy/flex matching people are going to start having separate opinions as to preferred behavior.\nI think we should start implementing a way to modify autojump's behavior, either through the use of an ~/.autojumprc or environmental variables.\n. @irrationalfab : Pull the latest commit and set the environmental variable export AUTOJUMP_IGNORE_CASE=1. autojump will ignore case and return the highest matching path.\n. It was a quick fix and I've bumped it to v20-5. Reinstall and let me know how it goes.\nconsole\n\u256d\u2500ting@noa ~/Cocoa \u2039python-2.7.3\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  echo $AUTOJUMP_IGNORE_CASE\n1\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  js | grep cocoa\n21.9:   /home/ting/feeds.cocoapods.org\n61.3:   /home/ting/Cocoa\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  j coco\n/home/ting/Cocoa\n\u256d\u2500ting@noa ~/Cocoa \u2039python-2.7.3\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4\n. @joelthelion I'm currently traveling over the next two weeks attending a conference so I won't have time to look into right now, but am aware of this.\n@lukexor The installer only checks for a minimum Python version, as the base Python install should cover all the required modules (as tested on Arch/Ubuntu/Debian/Cygwin/OS X).\nThe only changes in autojump between v19 and current is the try-catch block for full disk errors.\n. The installer just dumps files from the repo into ~/.autojump after\nchecking a few environmental settings, no .so files should be there.\nOn Fri, Mar 23, 2012 at 7:04 PM, Joel Schaerer <\nreply@reply.github.com\n\nwrote:\nNo worries, I just find it very weird to see .so files in the autojump\nuser directory. Have a great conference!\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joelthelion/autojump/issues/111#issuecomment-4656387\n. Thanks for the comments, I'll look into making these issues aren't present in v22.0.\n. Oh then it's primarily a documentation issue then. I mean the two places I checked (--help and man page) didn't contain anything about it.\n\nI've been meaning to update both for a while now when I get some free time...\nIn the meantime this can go on the back burner.\n. There's no need for a rewrite. Then again, there really isn't a reason not to migrate to argparse either now that optparse is deprecated as of 2.7.\nIf something fails, it should fail cleanly. A help message explaining missing arguments is sufficient. Take rm as an example:\n\u256d\u2500ting@noa /tmp  \n\u2570\u2500\u27a4  rm -v                                                                                                   2012.03.28 22:10:21 JST \nrm: missing operand\nTry `rm --help' for more information.\n. Fixed in the latest commit 465ca79. The j function now tests the existence of the directory autojump returns before changing directories.\n. Autojump does not print out any errors if the directory does not exist. Also, j --help calls autojump --help which prints the help message and returns a 0 exit status. That makes it difficult to test against.\nI've updated the j function to print out an error message when it doesn't jump to a directory when called.\n. I just reproduced it on Arch and Ubuntu Server with the latest  commit 8decc17f3e, both running under Python v2.7.2.\n. Reading through the code, apparently jumping to the current directory is not allowed because the directory may no longer exist.\n. Thanks for the notice, the rewrite to use argparse over optparse bumped up minimum version Python version to 2.7.\nv20 supports v2.7+, v3.2+.\nv19 supports v2.6+, v3.0+.\nv12 supports v2.4+.\nI just tested v20 on my Ubuntu server with only Python 2.7.2 installed and it works fine.\n. @jkuan: Hmm, you could try upgrading Python to v2.7. It's probably better in the long run.\nHow should we handle this?\n1. Direct them to download and use v19.\n2. Ask users to upgrade Python to v2.7. Python site recommendation is to have users separately install Python since OS X's Python is 1-2 years behind when release anyway.\n3. Ask users to install argparse separately using pip install.\n4. Bundle argparse with autojump.\n5. Roll back to use optparse instead of argparse.\n. Thanks @jkuan!\n. This is fixed in commit 8decc17f3e.\nDocumentation and install.sh now direct users to upgrade Python or install older versions. A -f / --force option is added to install.sh to bypass dependency checks.\n. I'm sorry to hear you're having problems. How did you install autojump?\nI grepped the latest commit and v19 source code, but update_terminal_cwd is not referenced anywhere. On my Linux machine running the latest version in bash:\n[test@noa autojump]$ echo $PROMPT_COMMAND\n{ [[ \"$AUTOJUMP_HOME\" == \"$HOME\" ]] && (autojump -a \"$(pwd ${_PWD_ARGS})\"&)>/dev/null 2>>\"${AUTOJUMP_DATA_DIR}/.autojump_errors\";} 2>/dev/null ; printf \"\\033]0;%s@%s:%s\\007\" \"${USER}\" \"${HOSTNAME%%.*}\" \"${PWD/#$HOME/~}\"\nAs you said, autojump.bash just uses whatever $PROMPT_COMMAND was being set to before. Is it possible you have something else modifying $PROMPT_COMMAND?\n. Apple Terminal adds the function update_terminal_cwd() to /etc/bashrc for updating terminal window titles.\nIt looks like it checks if it's inside emacs, and only runs if it is not. However your emacs is not properly setting the $INSIDE_EMACS environmental variable, thus trying to call update_terminal_cwd() when it shouldn't be.\nYour solution is to use a different terminal (I'd suggest iTerm), or properly set $INSIDE_EMACS whenever running emacs.\nIf this does not resolve your issue, please feel free to reopen it.\n. If you're on 2.6, the alternative is also to use pip install argparse. In the long term, we're looking to stabilize autojump on 2.7 and 3+.\nEdit: From what I understand you're asking that autojump includes the argparse module with the program?\n. The root problem is that OS X will always ship with a minimum 1-2 year old Python version. The overwhelming Mac community recommendation is to separately install and upgrade the system's version of Python.\nThe problem is there is a disconnect between OS X users that use the command line a lot (autojump's target demographic) but doesn't upgrade Python (i.e. non-Python devs). I'm hoping that pip install argparse is a viable compromise.\nIt's difficult to balance backwards compatibility and continue improving autojump. While Debian is on 2.5, and OS X on 2.6, Cygwin / Linux is on 2.7 for a while now. 2.7 is also a planned \"LTS\" release as well, so I feel that should be an acceptable bare minimum target Python.\n. @blueyed: Thanks for the pull request, it's been merged!\n. Thanks for giving us a heads up.\nCan you reply back with the output from these two commands:\n1. python --version\n2. /usr/bin/autojump --version\nI'm on Arch, but will install Ubuntu 12.04 on a VM to test this out within a few days.\n. Sorry, try an aptitude show autojump. If aptitude doesn't exist, please use apt-get to install it.\n. Hi Philip,\nI had a friend run sudo apt-get install autojump && autojump --version on Ubuntu 12.04 and it worked fine. However he was using the distro default Python 3.2.3. I also tested release v18 under Python 2.7.3 with no problems, which leads me to think you might have a problem with your (custom?) Python installation.\nTry:\n```\n$ python\nPython 2.7.3 (default, Apr 24 2012, 00:00:54) \n[GCC 4.7.0 20120414 (prerelease)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n\n\nfrom future import division, print_function\n```\n\n\n\nIf there's any errors, then it would indicate a problem with your Python install.\n. That was modified by the package maintainer.\nRelease 18 uses #!/usr/bin/env python because autojump supports both Python 2 and 3. When you ran the aptitude show autojump earlier, it specified that the package depends on Python 3.\nI need to track down if this downstream modification was done by the Debian package maintainer or the Ubuntu package maintainer.\nThanks again for opening this issue.\n. @joelthelion: You're right, I've gone ahead and closed the Debian bug report.\nThis seems to be a localized problem to @philip's install of Python 3.\n```\n\u256d\u2500wting@ps95950 ~ \u2039python-2.7.3\u203a \u2039system\u203a \n\u2570\u2500\u27a4  cat /etc/issue\nDebian GNU/Linux 6.0 \\n \\l\n\u256d\u2500wting@ps95950 ~ \u2039python-2.7.3\u203a \u2039system\u203a \n\u2570\u2500\u27a4  python3\nPython 3.1.3 (r313:86834, Nov 28 2010, 10:01:07) \n[GCC 4.4.5] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n\n\nfrom future import division, print_function\n```\n\n\n\n```\n\u256d\u2500ting@punk ~ \u2039python-2.7.2\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  cat /etc/issue\nUbuntu 12.04 LTS \\n \\l\n\u256d\u2500ting@punk ~ \u2039python-2.7.2\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  python3\nPython 3.2.2 (default, Sep  5 2011, 22:09:30) \n[GCC 4.6.1] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n\n\nfrom future import division, print_function\n```\n\n\n\n```\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  uname -r\n3.3.4-1-ARCH\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  python3\nPython 3.2.3 (default, Apr 23 2012, 23:14:44) \n[GCC 4.7.0 20120414 (prerelease)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n\n\nfrom future import division, print_function\n``\n. Please runautojump --version` and let me know the output.\n\n\n\nAlso, what is the plugins=() line in your ~/.zshrc contain?\n. The autojump plugin is unnecessary as long as you have the [[ -s ... ]] && source line from install.sh in your ~/.zhsrc.\nWhat's the output of these commands:\nconsole\n$ ls -al ~/.local/share/autojump\n$ autojump --add /tmp\n$ ls -al ~/.local/share/autojump\n$ tail ~/.local/share/autojump/autojump.txt\n. Sorry for the late response, I've been a bit busy these days.\nIt looks like you're upgrading over from an older installation since autojump_py hasn't been used since release-v15. There is some migration code in place for older versions but it's possible that it's not working.\nI haven't tested it extensively, but it's now on my to do list when I have time to get around to it. Thanks for bringing it to my attention though.\n. @eallik I just wanted to mention that it has been in the README and manpage for ~1 month now, although it was implemented earlier. If you have an older version of autojump the manpages may not have been updated yet.\n. Symlink option works fine on my end.\nconsole\n[test@noa ~]$ autojump --version\nautojump release-v20-9\n[test@noa ~]$ export AUTOJUMP_KEEP_SYMLINKS=1\n[test@noa ~]$ mkdir test\n[test@noa ~]$ ln -s test test-sym\n[test@noa ~]$ j sym\nautojump: directory 'sym' not found\nTry `autojump --help` for more information.\n[test@noa ~]$ cd test-sym\n[test@noa test-sym]$ cd\n[test@noa ~]$ j sym\n/home/test/test-sym\n[test@noa test-sym]$\n@eallik: Statik is just trying to help, no need to get defensive.\nYou must enter a directory before it is added into autojump's database. That's why your example didn't work.\nconsole\n~$ export AUTOJUMP_KEEP_SYMLINKS=1\n~$ mkdir testdir\n~$ ln -s testdir testdir-sym\n~$ j testdir-sym\nautojump: directory 'testdir-sym' not found\nTry `autojump --help` for more information.\n~$ j testdir\n/Users/erik.allik/testdir\nThat last line j testdir should not work unless you've already created the directory before and it was pre-existing in the database.\nAlso, what @statik213 said was correct. Let's say your database looks like this:\n100        /testdir\nYou create a new symlink and add it to the database:\n100        /testdir\n10         /testdir-sym\nIf you type j test, autojump will still jump to the first entry because it's weighted higher. @statik213's point was that even if you add a symlink without resetting your database, if the names are overlapping you will still visit the full path, higher weighted database entry instead of the new symlink entry.\nIf you want to always prioritize symlinks over full paths, your best option is to zero out the current database and start over. Simply run > ~/.local/share/autojump.txt.\n. ~$ j foobarbaz\n/Users/erik.allik/foobarbaz\nAs I stated before, this should never happen unless you have a pre-existing entry in your database. Autojump does not know anything about your file system until you've entered that directory.\n1. Check which version of autojump you're running: autojump --version\n2. Git rid of the existing autojump database: mv ~/.local/share/autojump/ ~/\n3. Make sure the setting is enabled: export AUTOJUMP_KEEP_SYMLINKS=1\nYou should be fine after those steps.\n. I created a new test user, downloaded and installed autojump v20, and tested symlinks. I can't reproduce your behavior:\n``` console\n[test@noa ~]$ cd ~/code/autojump/\n[test@noa autojump]$ git checkout release-v20\nNote: checking out 'release-v20'.\n[test@noa autojump]$ ./install.sh \nInstalling bash version of autojump to /home/test/.autojump ...\n\u2018icon.png\u2019 -> \u2018/home/test/.autojump/share/autojump/icon.png\u2019\n\u2018jumpapplet\u2019 -> \u2018/home/test/.autojump/bin/jumpapplet\u2019\n\u2018autojump\u2019 -> \u2018/home/test/.autojump/bin/autojump\u2019\n\u2018autojump.1\u2019 -> \u2018/home/test/.autojump/share/man/man1/autojump.1\u2019\n\u2018autojump.sh\u2019 -> \u2018/home/test/.autojump/etc/profile.d/autojump.sh\u2019\n\u2018autojump.bash\u2019 -> \u2018/home/test/.autojump/etc/profile.d/autojump.bash\u2019\nPlease add the line to ~/.bashrc :\n[[ -f ~/.autojump/etc/profile.d/autojump.bash ]] && source ~/.autojump/etc/profile.d/autojump.bash\n\nYou need to run 'source ~/.bashrc' before you can start using autojump.\nTo remove autojump, run './uninstall.sh'\n[test@noa autojump]$ vim ~/.bashrc\n[test@noa autojump]$ source ~/.bashrc \n[test@noa autojump]$ autojump --version\nautojump release-v20\n[test@noa autojump]$ export AUTOJUMP_KEEP_SYMLINKS=1\n[test@noa autojump]$ > ~/.local/share/autojump/autoju[test@noa autojump]$ source ~/.bashrcmp.txt\n[test@noa autojump]$ cat ~/.local/share/autojump/autojump.txt\n1.0 /home/test/code/autojump\n[test@noa autojump]$ cd ~/test-sym\n[test@noa test-sym]$ cat ~/.local/share/autojump/autojump.txt\n2.0 /home/test/code/autojump\n1.0 /home/test/test-sym\n[test@noa test-sym]$ \n```\nMy only suggestion at this point is to wipe out autojump and it's database and start over with the latest version.\nconsole\n$ rm -fr ~/.autojump\n$ rm -fr ~/.local/share/autojump\n$ git clone git://github.com/joelthelion/autojump.git\n$ cd autojump\n$ ./install.sh\n$ source ~/.bashrc\n. By default, autojump.bash uses pwd -P (physical full path) to add the directory the database. If the symlinks = 1, then it uses just regular pwd.\nWith Linux, pwd == pwd -L. Is this not the case for OS X? Unfortunately I don't use / have access to a Mac to test with.\nTry modifying ~/.autojump/etc/profile.d/autojump.bash line 54 to _PWD_ARGS=\"-L\". Does that solve the symlink issue?\n. python\ntry:\n    current_dir = decode(os.path.realpath(os.curdir))\nexcept OSError:\n    current_dir = None\ncurrent_dir is only used to make sure the user doesn't jump into the current directory. Granted this is still a bug with symlinks, but not one that should be causing the problems in this thread. Both adding and searching the database does resolve to physical path.\npython\nclass Database:\n    def add(self, path, increment = 10):\n        \"\"\"\n        Increment existing paths or initialize new ones to 10.\n        \"\"\"\n        if path not in self.data:\n            self.data[path] = increment\n        else:\n            import math\n            self.data[path] = math.sqrt((self.data[path]**2)+(increment**2))\n        self.save()\nIf you look up all instances of the variable patterns, you'll notice it's never modified to resolve to real path.\nIn either case, I've fixed this in the latest commit 3a7f211fb6.\n. I borrowed a friend's MBP (10.6.8) for testing.\nconsole\nmacbook-wlan:~ ting$ bash --version\nGNU bash, version 3.2.48(1)-release (x86_64-apple-darwin10.0)\nCopyright (C) 2007 Free Software Foundation, Inc.\nmacbook-wlan:~ ting$ autojump --version\nautojump release-v20-9\nmacbook-wlan:~ ting$ echo $AUTOJUMP_KEEP_SYMLINKS\n1\nmacbook-wlan:~ ting$ ls -al | grep test\ndrwxr-xr-x   2 ting  staff    68 Jun  6 22:07 test\nlrwxr-xr-x   1 ting  staff     4 Jun  6 22:07 test-sym -> test\nmacbook-wlan:~ ting$ >~/.local/share/autojump/autojump.txt\nmacbook-wlan:~ ting$ j -s\nTotal key weight: 0. Number of stored dirs: 0\nmacbook-wlan:~ ting$ cd test-sym\nmacbook-wlan:test-sym ting$ j -s\n10.0:   /Users/ting/test-sym\nTotal key weight: 10. Number of stored dirs: 1\nmacbook-wlan:test-sym ting$\nSymlinks works fine, try updating autojump to the latest version.\n. Thanks for the patch!\n. @KenMacD: Using -pcre-match as opposed to =~ was causing problems on my end (error: -pcre-match not found, zsh v4.3.17). I've modified autojump.zsh to test zsh version and use the appropriate condition. Can you pull down the latest version and confirm it works for you?\n. [[ foo = bar ]] isn't a substring match.\nconsole\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a \u2039\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  zsh --version                                                                                                                1 \u21b5 2012.05.27 12:55:52 HST \nzsh 4.3.17 (x86_64-unknown-linux-gnu)\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a \u2039\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  [[ ting =~ t ]] && echo 1                                                                                                        2012.05.27 12:56:20 HST \n1\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a \u2039\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  [[ ting = t ]] && echo 1                                                                                                         2012.05.27 12:56:26 HST \n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a \u2039\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4\nI used the method described here instead in the latest commit. Try it out and let me see if that works for you.\n. This should be doable, I'll look into it.\n. Implemented in above commit. Please install the latest version to test it out.\n. Problem eliminated in commit f41d0fb.\n. Implementation shouldn't be difficult (add autojump.fish wrapper), but not a priority. You're more than welcome to add it and send a pull request.\n. Every directory you visit needs to be added to the database via a shell hook. This is done in Bash by modifying $PROMPT_COMMAND, and adding a function to Zsh's preexec_functions. I'm not sure what the fish equivalent would be.\n. Closed as duplicate of #127.\n. Thanks!\n. This a narrow use case and I'd rather not make the change.\nIf you are cloning the repo into ~/.autojump, can't you just modify .zshrc and add ~/.autojump/bin to the $fpath after calling autojump.zsh?\n. Unfortunately I don't have any good metrics of how people are using autojump. I only have a very rough idea from Ubuntu / Debian package popularity count and the issues that get reported.\nFrom what I can tell, most users install using package managers and not from source. For source users, I've tried to minimize setup / teardown as much as possible with the install / uninstall scripts.\nFor my dev and testing machines I just symlink everything from ~/.autojump to the source files. However other machines I just do a git pull && ./install.sh.\n. > I have some entries in the autojump database which match \"down\" but do not exist.\nMissing directories are not auto-purged because some users will mount drives temporarily (usb drives, network locations, etc).\n. Sorry for the terrible turnaround time.\nIt would be better if missing entries were not jumped to, but it also involves checking each entry that matches. This can cause certain lag problems (e.g. hdd's that require spin up) so I'm not sure if I should fix it or not.\n. Closed as no longer relevant in v22+.\nj path__1__/totally/fake/directory<tab> will be replaced with j /totally/fake/directory.\n. I'll look into this. Autojump should definitely support directories with hyphens in the middle though.\n. @JrCs: Should be working now, let me know if you still have problems.\n. Thanks for bringing this up, I didn't realize that was standard etiquette. I've gone ahead and removed it from autojump.zsh and updated the documentation to reflect the changes.\nUsers now need to manually add compinit loading to ~/.zshrc if they want tab completion.\n. Closed as duplicate of #136, has been fixed in RC.2.\n. Can you copy paste the output from these commands please?\nconsole\n$ autojump --version\n$ zsh --version\n$ python --version\n$ setopt\n. No problem, glad you got everything working.\n. Sorry about the long delay. I can't seem to reproduce the issue.\n``` bash\n[test@noa ~]$ echo $SHELL\n/bin/bash\n[test@noa ~]$ echo $PROMPT_COMMAND\n{ [[ \"$AUTOJUMP_HOME\" == \"$HOME\" ]] && (autojump -a \"$(pwd ${_PWD_ARGS})\"&)>/dev/null 2>>\"${AUTOJUMP_DATA_DIR}/.autojump_errors\";} 2>/dev/null ; printf \"\\033]0;%s@%s:%s\\007\" \"${USER}\" \"${HOSTNAME%%.*}\" \"${PWD/#$HOME/~}\"\n[test@noa ~]$ cat test.sh \n!/usr/bin/env bash\nexit 1\n[test@noa ~]$ ./test.sh \n[test@noa ~]$ echo $?\n1\n[test@noa ~]$ \n```\n. Thanks for the explanation and the patch!\n. FYI your patch causes problems for OS X 10.8.x users so I've reversed the changes in v21.0.5.\n. Your patched worked with me on 10.6.8, so I'm not sure why other users are having problems with the same line.\nPlease refer to issues #159 and #160.\n. Thanks for the bug report and doing a lot of the legwork.\nIt's not documented anywhere, but running autojump in bash allows you to auto complete certain commands such as vim. Unfortunately you ran into a bug with this.\nIn my opinion, tools should do one thing well and for autojump that should be cd only. However, as @joelthelion was the one who made this commit I'll let him make the final decision.\n. Another issue is this isn't implemented in the zsh version, so now we have the additional problem of different functionality between bash and zsh version. \n. Use export AUTOJUMP_AUTOCOMPLETE_CMDS='cp vim emacs' in your ~/.bashrc.\n. Thanks for the patch. Unfortunately, while I believe PEP 8 is important I do not believe strict adherence is necessary.\n. I can't seem to reproduce your problem:\nzsh\n\u256d\u2500ting@noa /tmp \u2039python-2.7.3\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  mkdir vcmcnipovpoivxzoivvcxzvcxvcxz                              2012.10.30 22:22:47 CDT \n\u256d\u2500ting@noa /tmp \u2039python-2.7.3\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  cd vcmcnipovpoivxzoivvcxzvcxvcxz                                 2012.10.30 22:23:03 CDT \n\u256d\u2500ting@noa /tmp/vcmcnipovpoivxzoivvcxzvcxvcxz \u2039python-2.7.3\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  ..                                                               2012.10.30 22:23:04 CDT \n\u256d\u2500ting@noa /tmp \u2039python-2.7.3\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  j vcmcnip                                                        2012.10.30 22:23:05 CDT \n/tmp/vcmcnipovpoivxzoivvcxzvcxvcxz\n\u256d\u2500ting@noa /tmp/vcmcnipovpoivxzoivvcxzvcxvcxz \u2039python-2.7.3\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  j vcmcnip                                                        2012.10.30 22:23:09 CDT \n/tmp/vcmcnipovpoivxzoivvcxzvcxvcxz\n\u256d\u2500ting@noa /tmp/vcmcnipovpoivxzoivvcxzvcxvcxz \u2039python-2.7.3\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4                                                                   2012.10.30 22:23:13 CDT\nWhat version of autojump are you using? I remember running into this problem in the past and patched it a while ago.\n. Closed because I can't reproduce and no response from OP.\n. This is due to an upstream Debian policy not to modify user's ~/.*rc files. I'll look into asking Ubuntu if they can unpatch Debian's modifications.\n. Closed as duplicate of #65 (but am still working on this issue).\n. This can be achieved by typing j<tab><tab>. On ZSH, you need to load the compinit module in your ~/.zshrc.\nYou can also partially complete the menu by typing j directory<tab><tab>.\n. Something like that would need to be much more interactive and/or persistent. Sorry, but that's out of the scope of autojump. \n. Closed as will not implement. :(\n. Another possible method is to use multiple arguments. Say you have the following structure:\n~/appweb\n~/dev/app\nTo jump to the second entry, you can use j dev a (or something similar). However if app and appweb are in the same directory then this method doesn't work.\n. > Couldn't you look at the top entries (sorted by score) and the apply a length-based filter on them?\nIf the database was:\n$ j -s\n20.0 foobar\n10.0 foo\n$ j foo\nWhy would you want the normal behavior to return foo instead of foobar?\n\nIf there is no score property available, you may want to sort the top five(?) entries by length - but that would mix in totally unrelated entries probably.\n\nAll entries in a database have an initial score of 10.0. Also, sorting top n entries would require parsing the entire database for every search (right now it quits at first match).\nA better option is probably to provide an exact match option, e.g. j (-e|--exact) foowhich only matches against same length directory names.\n. I wanted to mention that in the latest version (v21.2.0) I added jc. It basically restricts autojump to sub-directories of the current working directory. This may help alleviate OP's problem in certain situations.\n. Closed as wontfix.\n. I'll go ahead and close it, if you can reproduce it just update this issue.\n. I'll go ahead and add this into man pages for the next release.\n. Ha, I think I submitted a pull request that did this a year ago to Joel.\nAnyway, this is pretty easy to change on an individual basis. At these 2 lines at the end of ~/.autojump/etc/profile.d/autojump.bash (or .zsh):\nshell\n    new_path=\"$(autojump $@)\"\n    if [ -d \"${new_path}\" ]; then\n        echo -e \"\\\\033[31m${new_path}\\\\033[0m\"\n        cd \"${new_path}\"\n        clear\n        ls\n    else\n        echo \"autojump: directory '${@}' not found\"\n        echo \"Try \\`autojump --help\\` for more information.\"\n        false\n    fi\n. Sure that'd be fine. However I'm not sure how HomeBrew works, so when autojump gets upgraded it may overwrite your symlink.\n. Yeah there are a lot of ways to do this and a lot of ways to customize this, which is why I'd prefer this be implemented as a shell tweak.\n. That's odd, as I'm running nearly the exact configuration. What's the output of autojump --complete and autojump --version?\n. You say you checked out commit 16e0c51, but the version number for that commit is v21-rc2.\nv17 is fairly old, but I would remove autojump and try installing it again:\nzsh\n$ rm -fr ~/.autojump/\n$ git clone git://github.com/joelthelion/autojump.git /tmp/autojump/\n$ /tmp/autojump/install.sh\n$ source ~/.zshrc\n$ autojump --version\n$ autojump --complete\n. I just checked out master branch, it's on v21-rc2. Run which autojump, you may be running a distro version.\n. First, remove it from your package manager, run the uninstall script, then try the install script:\n$ sudo aptitude purge -y autojump\n$ git clone git://github.com/joelthelion/autojump.git\n$ sudo ./uninstall.sh\n$ ./install.sh\n$ source ~/.zshrc\n$ autojump --version\n. After running install.sh, can you double check that ~/.autojump/etc/profile.d/autojump.zsh exists and if so, manually source it?\n. If autojump.zsh exists, then this line in your ~/.zshrc should be sourcing the file properly: \nzsh\n [[ -s ~/.autojump/etc/profile.d/autojump.zsh ]] && source ~/.autojump/etc/profile.d/autojump.zsh\n. If you can run that above command from the terminal and get autojump working, then at this point there is something wrong with your system loading ~/.zshrc and not much I can help with. Perhaps try temporarily removing oh my zsh?\n. Thanks for the pull request!\n. Which version are you running? autojump --version\nI have inconsistent access to a Mac, so it may take me a while to track down the root cause.\n. autojump <dir> should always display the matching directory, but not jump to it. The j function is used for changing directories.\nAre you on bash / zsh? Does the output directory exist? Are you using a - when using j? Is there a - in the directory name? Can you copy / paste the terminal output?\nI just tested on a friend's MBP (OS 10.6.8, bash 3.2.48) with the latest github version and it worked fine in both zsh and bash.\n. @stephenluu: You're not supposed to call autojump directly, but rather source the relevant shell (e.g. bash). This is setup when you run ./install.py.\n. This was a problem with oh-my-zsh and not autojump.\n. Are you running into the same problems as #146?\nOr do you want to set this as default behavior? Or do you want to pass a flag to enable this option?\n. Ahh missed that, thanks. \n. Thanks for the pull request!\n. Since #159 and #160 are duplicates but that one has more users participating I'll only update that issue to prevent discussion fragmentation.\n. Thanks for the bug report.\nThat line was recently changed so I've reverted the line back to the original statement. I'll be updating the Homebrew formula shortly.\n. I've submitted a Homebrew pull request to fix this issue downstream.\n. Hi, can someone with the original problem please test JrCs's command-prompt branch and verifies that it doesn't cause problems?\nUnfortunately, I don't have access to OS 10.8 to test this myself.\n. Thanks for the rewrite.\nI had to modify it quite a bit to get it working for a bunch of different use cases, but it's merged into master now.\n. Thanks for the info! I've made the changes in master branch.\n. Thanks for your patch. Once someone in the original issues thread has successfully tested it I'll merge it.\n. Thanks for catching that. I've handled it further down in the switch statement instead.\n. Oops you're right. I blame the turkey. Merged your commit bcb7ffe.\n. Thanks for the patch!\n. This was removed a while back. Please refer to:\nbash\n$ autojump --help\nOn a side note, the j command now accepts options so this is completely valid:\nbash\n$ j -s\n. Really busy over the next 2 weeks, will look into this when I can.\n. I need some clarification.\nj bundle should always jump to /srv/example.com/current/vendor/dotsunited/bundlefu, regardless of the current directory.\nIs j bundle__2__/home/user/.dotfiles/vim/bundle not changing directory as expected?\n. Hmm, this was the behavior in past releases. It looks like I borked it somewhere. I'll look into fixing it.\n. I fixed this in a99183bf8b7cf322161ca42bcf4d70dbc3741673. Can you verify that it works for you?\n. > I have another issue in this context: autojump will return no results if the current directory matches, but gets skipped now (again). Also, j will return an error (because of the empty result from autojump).\nThis is the expected behavior if it would match. The end result is you're still in the # 1 matching directory, albeit with an error.\n. I tried reproducing it on ArchLinux but couldn't. I average 3 seconds per cd to a remote sshfs mount, with or without autojump. I then tested it on a LAN sshfs and still average 0-1 second per cd with autojump.\nNeed to borrow a Mac and test on a LAN sshfs mount when I get a chance.\nEvery time you cd it calls autojump -a <directory name> to update the database. That's probably what is causing the lag.\nCan you verify this by running these two lines and seeing if there's a discrepancy?\nbash\n$ autojump -a /tmp\n$ autojump -a <sshfs mount directory>\n. > Another odd thing is that, when on the remote mount, even giving me back a prompt after doing a simple ls takes much longer with autojump loaded. I do a j Volumes gmm and it shows me the correct directory in red almost immediately, then stalls before giving me my prompt back.\nThis is the entire jump function:\n``` bash\nfunction j { \n    if [[ ${@} =~ ^-{1,2}.* ]]; then\n        autojump ${@}\n        return\n    fi  \nnew_path=\"$(autojump $@)\" # calls autojump <args> for correct directory to jump to\nif [ -d \"${new_path}\" ]; then\n    echo -e \"\\\\033[31m${new_path}\\\\033[0m\" # print directory in red\n    cd \"${new_path}\" # switch to new directory\nelse\n    echo \"autojump: directory '${@}' not found\"\n    echo \"Try \\`autojump --help\\` for more information.\"\n    false\nfi\n\n}\n```\nThere should be no conceivable lag on autojump's part between the two lines, except for the time to execute cd (sshfs lag).\nCan you try these two things?\n1. With autojump loaded, run unset PROMPT_COMMAND. This will remove the autojump hook. Does it still lag for cd, ls, etc?\n2. Reload autojump. Unmount all sshfs. Mount sshfs localhost:/tmp/ /home/user/tmp/. Does it lag?\n. Run these commands:\n1. reload autojump\n2. unset PROMPT_COMMAND\n3. cd /tmp/ && autojump_add_to_database\n   Any lag?\n4. Repeat step 3 except with an sshfs mount. Any lag?\nI noticed you're in UT CS. I'm doing undergrad research with Shmatikov btw. :p\n. > 1. Autojump is loaded, and I j volumes gmm (request autocompletion suggestions) for somewhere in the remote mount. Not a big deal, and understandable why it might be laggy.\nautojump is finding all matching directories, and then checking to make sure they exist. That last part is probably what is causing the lag for remote systems.\n\n\nAutojump is loaded, my pwd is somewhere in the remote mount, and bash needs to show me the prompt. Doesn't matter if I've just j'ed in, or cd'd to a subdirectory, or exited sbt -- it lags before showing prompt.\n\n\nThis bothers me quite a bit, as autojump should not be causing lag in this situation. From what I can tell, it's caused by something in PROMPT_COMMAND but not by autojump_add_to_database(). If you have the time, I would look in autojump.bash.\nIn the bash wrapper, PROMPT_COMMAND is essentially set to a beefed up version of autojump_add_to_database, so I'm curious as to why it causes lag in certain cases, but not when called explicitly.\nOops, sorry for the wrong label. I saw linguistics and naturally thought of NLP. Ironic since my wife has a masters in linguistics. I took Mooney's info retrieval class a while back, great professor.\n. Closed due to inactivity.\n. Thanks for the commit!\n. No you haven't. Truth be told, jumpapplet was written 4 years ago and hasn't been updated since, so it has experienced significant bit rot.\nI'm looking at git blame for the file and it should have been broken as of 6+ months ago, but the fact that we receive no reports means it's unlikely anyone is using it. There are better application launchers for both Linux (Gnome Do, Unity Dash) and Mac (Quicksilver), or built-in (Windows 7, gnome-shell) so this is a redundant feature in a crowded space.\nI'm going to go ahead and remove it.\n. jumpapplet removed in 4ce2cb5929.\n. Closed as not an autojump bug, refer to this comment.\n. The installer script doesn't touch modify user's environmental settings due to Debian policy (and the fact that each distro is different). If that's not an issue for Arch, please go ahead and do it.\n. Hmm, which of these commands work and which of these fail?\n$ source /usr/local/Cellar/autojump/21.3.0/etc/autojump.sh\n$ zsh /usr/local/Cellar/autojump/21.3.0/etc/autojump.sh\n$ source /usr/local/Cellar/autojump/21.3.0/etc/autojump.zsh\nWhat's the output from these commands?\n$ echo ${SHELL}\n$ echo ${SHELL} | awk -F/ '{ print $NF }'\n. Try taking out all the oh-my-zsh stuff, create a new terminal and check $SHELL again. If it's set, then it's oh-my-zsh's problem.\nIf it's not, you can always cheat and set it yourself in ~/.zhsrc before calling autojump.\n. Thanks @jsliang.\nI was thinking about this exact feature during the past week; guess I wasn't the only one!\n. Sorry it's kind of buried in the documentation, but zsh autocompletion requires additional configuration.\n. It may be a bug. I don't have time right now but I'll look into it further when I can.\n. You need to add the autoload -U compinit && compinit line after loading autojump to get zsh tab completion working.\n. Possibly, but when I rolled back and installed that version I didn't get tab completion back.\n. Ok, it should work for sure now. T_T\n. Thanks!\n. Thanks for catching that.\n. Thanks again!\n. Thanks for all the patches so far. :D\n. Sounds like a good idea.\n. Off the top of my head I'm not sure how autocomplete for jc and jco would work. Say you had a directory /foo/bar/baz and typed in jc fo ba. How would you know which element to autocomplete?\n. Just a follow up, this isn't a bad idea but to be honest it's a lot of work. If you or someone else decides to implement this I'd be more than happy to merge the pull request.\n. I don't use Sublime, but if you get around to writing the plugin feel free to update this issue with the repo / plugin link and I'll add it to documentation.\n. Sounds good, looking forward to it. :D\n. Thanks!\n. Thanks @andreineculau and @xuhdev.\n. I haven't forgotten about this pull request but currently don't have time to test the changes.\n. Unfortunately I can't merge this because it introduces a few regression bugs, and ignores the same lines in the zsh version.\nAlso, --bash and --zsh was taken out because installation now installs both versions, and sourcing autojump.sh will determine which version to run at runtime depending on $SHELL.\n. Closing due to inactivity, feel free to recomment / reopen.\n. Thanks!\n. Unfortunately I can't merge this. Keeping both the relative and absolute path in the database is intentional as many users prefer to use relative paths over absolute ones. If you only use absolute paths, they get cd'ed into those when using autojump.\nUsually this is because users are using symlinks to a long path name and prefer the shorter name.\n. The Homebrew formula was updated recently, can you guys reinstall and see if you're having the same problems?\n. Just to clarify there has always been multiple wrapper shell files (autojump.bash, autojump.zsh, etc). However autojump.sh is supposed to be intelligently figure out which shell you're actually using and load the right file.\n@jbranchaud: The behavior of autojump.sh has changed relatively recently. If you're unable to load correctly with autojump.sh, could you open a ticket with the version of autojump you're using?\n. You shouldn't have to. Your .bashrc should source autojump.sh, which sources autojump.bash or .zsh depending on your shell. jc is defined in both of those files.\nCan you run a quick autojump --version and echo $SHELL please?\n. jc was added in v21.3.0.\n. No problem, glad everything worked out.\n. Thanks!\n. Thanks.\n. Sounds like a good idea, as the current j just jumps to the most heavily weighted entry that's not the current directory. Also seems to solve #146 as well.\n. Well autojump is already stateful with all the side effects being stored in the database.\nAnother option is to treat the last directory of the current path as the directory to rotate on. That means rotating between ~/a/foo and ~/b/foo is fine, but once they move to another directory it'll mess things up.\n. Do you think j should bounce between the top 2 foo entries or rotate through all foo entries?\n. After further thought, I'm not inclined to make autojump stateful. It may be confusing to users why j behaves differently every time it's called.\nI think tab completion will probably solve your usage case.\n. Thanks for catching that!\n. Nice catch, thanks!\n. Thanks for the report!\n. Not sure, is $SHELL set in the first case? That's how autojump.sh determines which version to load at runtime.\n. Closing as duplicate of #196.\n. I'll keep it in mind. I increment the version number fairly regularly and tag once a version is \"stable\".\n. Could you provide more info as to what's broken? Also what version are you on?\n. Closed due to inactivity.\n. Thanks for catching this, fixed in latest commit.\n. Do you have a missing or empty autojump, or are just some entries missing?\n. Are you able to reproduce it consistently? If so, can you list the reproduction steps?\n. What version are you running? How did you install it?\n. I'm closing this issue since autojump has been basically rewritten from scratch since this issue's original date.\nIf you can reproduce this error on v22.0 (master HEAD) then please reopen.\n. I have a pretty good idea of the root cause, let's consolidate conversation to #391.\n. Traveling at the moment, but I'll test and merge your commit once I can.\n. I've updated the install script to support fish in the fish_support branch, however there are a few problems.\n1. autojump sources autojump.sh to find the shell and figure out which version to run. Fish can't source this file properly.\n2. I'm unable to source autojump.fish as well:\nting@noa ~/c/autojump> . ~/.autojump/etc/profile.d/autojump.fish \n   fish: Unknown command \u201cexport\u201d\n   /home/ting/.autojump/etc/profile.d/autojump.fish (line 16):     export PATH ~/.autojump/bin $PATH\n                                                                   ^\n   in . (source) call of file \u201c/home/ting/.autojump/etc/profile.d/autojump.fish\u201d,\n       called on standard input,\n. You may be right about the .sh wrapper, it's a holdover from old code that doesn't make a lot of sense now. It was intended to solve some issue in the past, can't remember what it was though. Thoughts @joelthelion?\n. @jkuan: I moved install script to recommend the wrapper over shell specific calls a while ago, but not sure how many people install autojump via source vs package managers.\nI may start migrating away from the wrapper in the install script while leaving it alone to not break backwards compatibility.\n. The .sh wrapper is used by Homebrew as well since it ignores the install script and doesn't give a shell specific message.\n. Thanks for the patch!\n. Not exactly how you've described. Autojump does not crawl through directory structure beforehand, so you can only jump to directories you've visited before.\nThat being said, you can use jc (jump child) to jump into previously visited subdirectories of the current directory.\n. autojump uses change directory hooks (zsh) or modifies $prompt_command (bash).\n. Intentional, only documentation changes between the two versions.\n. I've bumped the version and updated the Homebrew formula.\n. Thanks for the PR!\n. jo <dir> opens OS specific file browser.\nautojump <dir> prints the first match. If not passed any arguments, autojump prints the most frequently used directory.\nIf you need more information, use autojump --stats and any combination of awk / sed / tr / etc.\n. @nateuni: iElectric's solution will work for now. I've fixed the bug but it will take a while before the Homebrew recipe gets updated and installs the updated version. Thanks for opening up the issue!\n. FYI j --add (which is really just a wrapper for autojump --add) already exists.\nSo you can already do recursive adding like so:\nfind -type d -exec autojump --add {} \\;\nI'm not inclined to add this feature since functionality already exists unless someone can convince me why it should be built in.\n. Thanks for contributing!\n. Closing as unnecessary bloat.\n. Or Asciinema.\n. Can you checkout master HEAD and reproduce this? This was fixed in b0957e50.\nautojump now adds directories in the background and thus should be non-blocking / no lag. There's the overhead of the subshell fork, but I don't have access to any non-SSD machines to test this.\n. Closing due to inactivity. Please reopen or create a new issue if it persists.\n. Thanks for following up @vitorgalvao!\n. The size of the database really doesn't have an impact as to performance, but this functionality already exists as autojump --purge. You can find more information with man autojump or autojump --help.\n. Autojump supports multiple arguments. In your example it would simply be j mu end.\n. I suggested this a while back but we decided not to do it.\nYou're better off just creating a new shell function that does what you want or modifying the j alias to add ls to the end of each jump. For example, add this to your ~/.bashrc:\nbash\nfunction jls {\n    j ${@} && ls\n}\n. GitHub came out with Releases to replace upload functionality.\nThe tag and resulting tarball name is up to the developer, but I'm not inclined to change the current pattern. Also the package name has always been in the URL.\n. Sorry, I don't have any spare cycles or experience with fish.\n. @uri Can you reproduce this problem with the latest version (v22)?\n. Thanks for catching that!\n. Thanks for the cleanup.\n. Relevant lines are currently illegible in man pages, but after the change markdown only looks mildly odd. Merged!\n. That sounds like a great idea. I'm a big fan of how smart casing works in vim, just never thought about implementing it in autojump.\nRight now you can manually set case insensitivity via an environment variable, but I'm inclined to make smart casing default behavior once implemented.\n. I've already implemented this in my rewrite branch, but am looking into fixing the bash tab completion, install.sh problems, and adding unit tests before merging into the master branch.\n. Implemented in d9b205c935.\n. I was unable to reproduce this but I do have a pre-existing autojump.txt. I was able to install and source it just fine:\n`` zsh\n\u256d\u2500wting@wireless-10-145-209-229.public.utexas.edu ~  \u2039python-2.7.5\u203a\n\u2570\u2500\u27a4  brew uninstall autojump && brew update && brew install autojump                         2013.12.13 16:54:25 CST\nUninstalling /usr/local/Cellar/autojump/21.6.9...\nAlready up-to-date.\n==> Downloading https://github.com/joelthelion/autojump/archive/release-v21.6.9.tar.gz\nAlready downloaded: /Library/Caches/Homebrew/autojump-21.6.9.tar.gz\n==> Caveats\nAdd the following line to your ~/.bash_profile or ~/.zshrc file (and remember\nto source the file to update your current session):\n  [[ -sbrew --prefix/etc/autojump.sh ]] && .brew --prefix`/etc/autojump.sh\nzsh completion has been installed to:\n  /usr/local/share/zsh/site-functions\n==> Summary\n  /usr/local/Cellar/autojump/21.6.9: 11 files, 104K, built in 2 seconds\n\u256d\u2500wting@wireless-10-145-209-229.public.utexas.edu ~  \u2039python-2.7.5\u203a\n\u2570\u2500\u27a4  source brew --prefix /etc/autojump.sh                                                 2013.12.13 19:59:21 CST\n\u256d\u2500wting@wireless-10-145-209-229.public.utexas.edu ~  \u2039python-2.7.5\u203a\n\u2570\u2500\u27a4  j --version                                                                             2013.12.13 19:59:59 CST\nautojump release-v21.6.9\n\u256d\u2500wting@wireless-10-145-209-229.public.utexas.edu ~  \u2039python-2.7.5\u203a\n\u2570\u2500\u27a4                                                                                          2013.12.13 20:00:02 CST\n``\n. Thanks!\n. CentOS 6 EOL is 2020, and is currently the only system still on Python 2.6 that I'm aware of. I don't plan on supporting Python 2.6 until the end of time, so please let me know when CentOS moves to Python 2.7 please. :)\n. Thanks for bringing this up, I still need to test migration from v21.6.9.\n. Hmm, it should be handled within the app and not installation process in case someone deletes / resets their data later on. I'll look into this.\n. I can't reproduce this. I've uninstalled, removed data folder, reinstalled and the data folder gets recreated properly. I've then deleted~/.local/share/autojump` multiple times and it always gets recreated.\nAre you able to reproduce this error?\n. That's odd. I've tested this on Ubuntu and OS X but can't reproduce the behavior.\n. Yeah I caught that a few hours later and fixed it in 573c1ea4.\n. Thanks.\n. Also you might want to look into using a linter (autojump has config settings for flake8. It's just some minor stuff like non-multiple of 4 indents and missing spaces.\n. This is fine if you don't feel like doing it, but your shell wrapper doesn't redirect autojump errors to an errors.log file.\n. Not at all, thanks for all your work so far!\n. Thanks!\n. There's a couple issues opened for this problem, please use #297 to discuss instead.\n. Hmm, there's a check to make sure directories exist before showing that's causing this.\n. Yeah the rewritten of find_matches() is a lot easier to modify.\n. Closing as duplicate of #235.\n. > Same problem here, without the float error. In my case ~/.local/share/autojump/data.tmp actually doesn't exist. Should I manually create it?\nWhat's the exact error you get? data.tmp shouldn't be manually created.\n. Thanks for the stack trace. I think it might be a race condition, but I won't have time to look into it until later.\n. @halilim: Thanks for the call that invokes the crash.\nI'm pretty sure it's a race condition when saving the database. autojump is called anytime cd is invoked, and in the past this was a blocking action. On slower, spinning hdds or network drives people were annoyed by this lag every time they changed directory so I made it async.\nHowever saving the database is a two step action to prevent data loss (save to temp file, then overwrite database with temp file). What's happening when you spam a bunch of cd commands at once is the multiple instances of autojump are clobbering each other.\nA quick fix is probably to use a tempfile.TemporaryFile() and copy over the existing database. This means that some directory changes may be lost during race conditions, but it's acceptable and certainly better than crashing and showing a stack trace.\nAnother fix is to use a semaphore with a lock file, and basically block writes until that process holds the lock. I think this process is overkill since most of the dropped writes with the above suggested implementation are from cd spamming. Also if autojump ever crashes in a middle of a write it could leave the system in an inconsistent state requiring user intervention to fix.\n. @halilim: Your issue should be fixed. Please try the latest commit and let me know if you still have problems.\n@xuhdev: I can't reproduce your issue. If it happens again please reopen this issue.\n. It should be.\n. lol yeah... that's something that would've been caught by static typing. :unamused: \n. Yeah I just added an assertion in 5ba2774ff.\n. Thanks for the report!\n. Thanks for the bug report.\n. I don't have any spare cycles right now. If you need to get autojump working, I suggest installing the stable version through yum or installing the latest git tag release-v21.6.9.\n. Can you try this again with the latest autojump?\nTo be honest this shouldn't be happening, as it's complaining that it can't read a line in autojump.txt. However if this is a clean installation then autojump.txt should be missing and it should never enter the relevant code block that tries to read lines from the data file.\n. You can manually do this via autojump --purge.\nThe main reason this isn't done automatically is because many users want to preserve folders from usb or network drives. Also this would require checking all database paths each time cd is invoked, unnecessarily lagging the system when slow IO devices are available.\n. Ubuntu gets autojump downstream from Debian, and I think it's a bit behind. Ubuntu 12.04 LTS reports v18 which is from 2011/11/18. If you want to use jc, I suggest you install from source from the latest stable version.\n. Hmm, I just reinstalled the Homebrew version for use on OSX / zsh and can't reproduce the issue. Going back into git blame history that pipe (|) has been there since the beginning of the project (2009).\nTry temporarily emptying out your .zshrc except for the Homebrew autojump.sh line. Do you still get the error? Also #232 may be relevant.\n. Have you tried the almost empty .zshrc suggestion I mentioned earlier?\n. Please try it with an empty .zshrc without oh-my-zsh.\n. You have a leftover source line in your  ~/.bashrc that needs to be removed.\n. Glad everything worked out.\n. What list of completions do you want without providing a needle?\n. Thanks everyone for reporting this issue / drilling down to the root cause.\n. Thanks for trying out master and reporting this. Zsh tab completion is working for me, but behavior has been changed such that you need to pass the full entry to autojump and not just the number.\nAre you saying that zsh tab completion for j intent__<tab> only produces a single . entry? What's the result of j -s | grep intent | wc -l?\n. Ubuntu gets autojump from Debian, and Debian will only release stable versions. The current version is still unstable so it probably won't get updated for a while. My suggestion is to checkout and use the GitHub version and submit tickets if you run into issues. :smiling_imp: \n. The reason autojump is not in PyPI is because the installation process requires installing shell scripts into random directories and some user setup in .bashrc.\n. Of course! I always try to tag releases once stable, but I guess I've forgotten to do it before the last batch of changes. In any case, I just tagged v21.7.1 and it's available as a tarball here.\nBTW thanks for maintaining autojump for distros!\n. @blueyed submitted a 27a01662a5e a few months back which should fix the issue. Can you reproduce with the latest version?\n. 5538cf7 is has been merged into master and a new version will be released once the PRs I've opened have been merged and marinated a bit.\n. If you run j -s do any directories get listed? Is \"C:\\github\" listed?\n. @Kazark: Directories only get added to the database after you visiting them once autojump is installed.\n@thegreendroid: Unfortunately I don't have a Windows machine to debug issues on, although your issue seems to be more Python 3.4 regex related. :sweat_smile:\n. You shouldn't have to, as autojump is supposed to support both Python 2.x and 3.x.\n. I'm sorry to hear about database issues. What version are you running? (autojump -v)\nI have the same settings in my .zshrc and they're necessary for tab completion. However you mentioned that you have it in your bash setup? Which shell are you running? (echo $SHELL)\n. What do you mean by losing settings? Do you have any export AUTOJUMP_ lines in your .zshrc? Is the database completely disappearing, or are you just losing entries?\n. When you mentioned settings, I thought you were referring to various environmental variables that could be used to modify autojump. e.g. export AUTOJUMP_IGNORE_CASE.\nWhen you type j -s | grep {folder} does the entry come up?\n. So autojump does periodic database maintenance removing the bottom 10% if it gets too large. It's possible that the trimming is removing those entries. Maintenance has been removed in the current version of autojump.\nFor now, edit ~/.autojump/bin/autojump and remove line 508: db.maintenance(). Entries should no longer drop off. Let me know if this does or doesn't fix your issue.\n. I assumed a user local installation, how'd you install autojump?\nOn May 17, 2014 8:57 AM, \"Chris Hough\" notifications@github.com wrote:\n\nhmmm.... that file does not exist on my machine?\n\nReply to this email directly or view it on GitHubhttps://github.com/joelthelion/autojump/issues/285#issuecomment-43391003\n.\n. It's at /usr/local/Cellar/autojump/21.7.1/bin/autojump.\n. Try doing a brew update && brew upgrade. The latest version should be\nv21.7.1.\n\nOn Thu, May 22, 2014 at 10:13 AM, Chris Hough notifications@github.comwrote:\n\nMy file located here /usr/local/Cellar/autojump/21.6.9/bin only contains:\n!/bin/bash\nexec \"/usr/local/Cellar/autojump/21.6.9/libexec/autojump\" \"$@\"\nThoughts @wting https://github.com/wting ?\n\nReply to this email directly or view it on GitHubhttps://github.com/joelthelion/autojump/issues/285#issuecomment-43837480\n.\n. You should probably modify /usr/local/Cellar/autojump/21.7.1/libexec/autojump\nthen.\n\nI'm not sure why there's so much redirection with Homebrew, but I guess\nthey have their reasons.\nOn Thu, May 22, 2014 at 2:36 PM, Chris Hough notifications@github.comwrote:\n\nok, I upgraded to /usr/local/Cellar/autojump/21.7.1/bin/autojump and now\nthat file states:\n!/bin/bash\nexec \"/usr/local/Cellar/autojump/21.7.1/libexec/autojump\" \"$@\"\n\nReply to this email directly or view it on GitHubhttps://github.com/joelthelion/autojump/issues/285#issuecomment-43850265\n.\n. I'm can't reproduce this. I tested v21.7.1 with Ubuntu 12.04 (13 levels deep, spinning hdd) and OSX (11 levels deep, ssd).\n\nEvery time you change directory, autojump loads the db from disk into memory, updates an entry, and writes it back to disk as a blocking action. If there was slowness I would attribute it to a large database or slow disk and it would affect all entries. I'm kind of surprised by the 8 directory deep cutoff, as that doesn't make any sense.\nCan you post the results of these commands please?\nshell\n$ time autojump --add /1/2/3/4/5\n$ time autojump --add /1/2/3/4/5/6/7/8/9/0\nFor what it's worth, adding paths is non-blocking in v22.0-alpha.\n. Yeah, I get that too since activating venvs triggers autojump. I'll have to think about how to config / add this.\n. virtualenvwrapper is a commonly used and it provides convenience scripts for creating / activating venvs. However venv shell functions workon() and deactivate() triggers a change to ~/.virtualenvs. Since this is done in an interactive shell, the directory changes are caught by autojump.\n. Homebrew's autojump formula uses v21.7.1 which hasn't been updated since Nov 2013. Also, your alias is breaking autojump since the actual j() function does a little bit more. The autojump program itself only outputs the correct directory to jump to, but the wrapper function is the one actually changing the directory.\n. You added the alias in 13 days ago. :neutral_face: \n. Mostly to avoid setup on @joelthelion's part and I wasn't sure if I was sticking to the tests. I've been using it to run tests on my own fork.\nWe should probably make CI testing an actual thing for this project.\n. I'm in favor of switching to py.test as well. I only used Testify out of familiarity.\n. @joelthelion: Can you enable Travis builds for autojump please?\nI've moved py.test migration into #300.\n. I'm in favor of 1. The original jc() was sort of a hacky implementation because I wasn't sure if the feature was going to be used or not. Turns out people like it enough, so we should probably do it the right way by adding a --child option and explicitly filtering for paths that contain pwd only.\nThe second option results in a case where people can start fuzzy matching into the middle of paths. I tend to remember and jump to the last directory of a path and assumed others used it the same way.\nBTW if you want to work on an issue assign yourself so we don't end up duplicating work. :+1: \n. Thanks!\n. Initialization scripts belong in /etc/profile.d/.\n. Superseded by #321. \n. Thanks!\n. autojump is moving over to Travis and py.test (#293) which should fix this issue.\n. This is probably something that needs to be tested and fixed, but we're all contributing on a volunteer basis and have busy schedules.\n. You don't use autojump directly to jump between directories; use j instead.\n. Hmm, this has always been the behavior. It was changed relatively recently to do this in the background now instead.\nWhat version are you running?\n. Can you please install the latest version from git (v22.0.0-alpha) and see if you can reproduce the behavior?\n. This repo's master is v22.x.\n. #303 is using an outdated version of autojump (v21.6.9) that blocks and adds paths to the database. The latest version (v22) is no longer blocking.\n. Follow these instructions.\n. tcsh is not supported. The shell wrappers requires a cd hook and a couple of functions (look at autojump.bash as an example). I'd be happy to merge a PR if you or someone adds support.\n. Can you run which j please?\n. This was manually merged in c889aa013, not sure why GitHub didn't automatically close this issue.\nThanks for the pull request!\n. @mdlawson is the best contact for Windows / Clink questions. I don't have a Windows box. :/\n. Thanks for the PR!\n. Fixed in b4cbcc2fd.\n. This feature has been removed from autojump.\n. I'm not inclined to change this since I find the current behavior useful.\n. This is intentional. You can always use cd to switch to home directories quickly.\n. We suggest appending to $PROMPT_COMMAND if you wish to customize it, example.\n. Version numbers should always be ascending, I'm trying to make a better effort about adhering to semantic versioning.\n. What shell and autojump version are you running? Tab completion works fine for me with v22.5.0 on zsh.. Can you try installing the version from this repo and seeing if you have the same issue?. On which distro / bash version is it not linux-gnu?\n. Thanks for the patch!\n. You can run autojump --version to see what version you're using. The Debian / apt-get version is at least 2 years out of date so I recommend using git clone and installing it from source.\n. Thanks for the PR!\n. Thanks for the PR!\n. I created a python directory, entered, jumped to it, etc and could not reproduce. This is not a problem with autojump, but rather your $PYTHONPATH is messed up.\npython\nFile \"/usr/lib/python2.7/tempfile.py\", line 32, in \nimport io as io\nFile \"/usr/local/caffe/python/caffe/io.py\", line 2, in \nimport skimage.io\nWhen Python tries to import io, it is importing /usr/local/caffe/python/caffe/io.py instead of the system library /usr/lib/python2.7/io.py'.\n. I've fixedmodify_autojump_sh()` in fa3ff58d. Can you guys check if this is still a problem in the latest version?\n. Sorry, forgot about; done!\n. I accidentally only pushed it to my fork (which I use for dev). Just pushed it to this repo.\n. Nice catch, thanks for the PR!\n. Thanks for the detailed bug report. It should work in the latest version, but if not please comment here and I'll reopen.\n. I'd be more than happy to accept pull requests. However due to lack of time and access to a Windows I can't add support myself.\n. This must be related to xonsh hitting HackerNews front page, thanks for searching instead of opening another ticket!\nThat said, I'm pretty swamped these days but am happy to accept pull requests. Basically one would need to write a shell wrapper that does the following at a minimum:\n- on every directory change add it to autojump's db\n- add a j function\n. Thanks!\n. This sounds like a pretty good idea.\nI need to think about how to add the ability for people to customize program behavior. In the past I used env vars but it became unwieldy, I may just end up using a config file.\n. Thanks!\n. Hey, so README.md is automatically generated from docs/. I've gone ahead and updated those docs and regenerated README.md in 113a84f9f0.\nThanks for updating the docs!\n. Try these steps and please paste the output here:\n1. Remove autojump from plugins=(git osx autojump) in .zshrc\n2. Close the terminal and open up another one.\n3. cat head $(brew --prefix)/etc/profile.d/autojump.sh\n4. which j\n5. j --version\n. j is just a wrapper around autojump. Does mv doc.md $(autojump Markdown) work for you?\n. So we're trying to separate two things here. autojump is the thing that works with input / output to find the best response. j is a thin wrapper around autojump. j isn't removing functionality, rather it's adding functionality for command line use.\n. Pretty sure @blueyed  meant this:\n\nj is not meant to be used with $(\u2026), but autojump is.\n. Fixed in release-v22.3.0 from @johannesgerer's patch.\n. @ElArtista: Thanks for the PR!\n\n@i-cant-git: Thanks for the bump!\n. Ugh, sorry I lost this PR in the noise. I'm collecting all related info in #391 \nClosing this not because I don't care, but trying to consolidate information. I'll see if this implementation solves the root issue.\nThanks for the PR!\n. The database should have been moved to ~/Library/autojump for OSX installations.\n. Hey, thanks for opening this issue.\nYou can remove non-existent paths via j --purge (more info: j --help or autojump --help). The reason this isn't default behavior is because people use network or thumb drives that are mounted / unmounted often.\nIf this doesn't answer your question, please reopen this issue.\n. Sorry for the late response but I have a rough idea of what's happening and how to fix it.\nOn every directory change autojump locks the data file and updates an entry, stored in a \"database\" like format. There's a race condition (exacerbated by shell scripts / commands that traverse directories like find) where the lock fails and the db gets overwritten.\nThe proper way to fix is either:\n1. Fix the file locking to be race condition safe.\n2. Switch from a database like format to an append only log (like .bash_history, .zsh_history, etc), and only calculate the weights when someone invokes autojump to switch directories (aka j).\n. Unless there's a lot of demand for this functionality, I'm inclined to prefer users to modify the source data itself. The text file is pretty easy to understand, and trying to predict what people are trying to delete based off a search is more error prone / higher cost of failure (compared to changing directories).\nThis is no different than removing an entry from ~/.bash_history.\n. Could you explain the motivation for adding multiple path support?\nAlso this change will require tests before it will be merged.\n. Well the Unixy thing to do is instead add this functionality into autojump, we should use other commands to compose the desired behavior:\nshell\n$ find . -type d -exec autojump --add {} \\;\nAnd if you do this often enough a convenience function is simply:\nbash\nadd_subdirs_to_autojump() {\n    find $1 -type d -exec autojump --add {} \\;\n}\n. Oops, thanks for finding that!. Please read the usage section or man pages.\n. This relates to #154, but let's keep conversation here. @turing-king: Try this:\nshell\n$ echo $SHELL\n$ which j\n$ declare -f j\n. j should not be aliased to autojump, it's overriding the j shell function.\n. You're not supposed to use it directly, you're supposed to be using the j function to jump to previously visited directories.\n. Thanks for the patch!\n. Thanks!\n. What shell are you using? In Bash and zsh, * gets expanded before it's passed to cd. For example in zsh:\nzsh\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a\n\u2570\u2500\u27a4  mkdir \"*top\"\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a\n\u2570\u2500\u27a4  cd *top\ncd:cd:10: string not in pwd: Desktop\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a\n\u2570\u2500\u27a4  ls\nbin/  code/  Desktop/  downloads/  *top/\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a\n\u2570\u2500\u27a4  cd \\*top\n\u256d\u2500ting@noa ~/*top \u2039python-2.7.3\u203a\n\u2570\u2500\u27a4  ..\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a\n\u2570\u2500\u27a4  rm -fr \\*top\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a\n\u2570\u2500\u27a4\n. k, I'm using zsh v4.3.17. This might be related to glob expansion.\nWhat's the result of setopt | grep glob?\n. Even mimicking your settings I can't reproduce. I'll need to retry this with zsh v5 when I have more time:\nzsh\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a\n\u2570\u2500\u27a4  setopt | grep glob\nnocaseglob\nextendedglob\nkshglob\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a\n\u2570\u2500\u27a4  autojump *top\n.\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a\n\u2570\u2500\u27a4\nBasically the * is not being expanded and is passed to autojump which then tries to interpret the string as a regex string but fails (since the valid regex would be .*top).\n. FYI the fix was pushed recently. If this is still a problem on non-Windows machines, please re-open.\n. Yeah... autojump doesn't C (at least not directly).\n. @najamkhn Thanks for helping out!\nRelated to #416.\n. @jared-hess: Never knew that about that change in later versions of Python. I guess it's a good way to make sure people don't depend on implicit sorting.\nDo you mind submitting a PR for that commit? Or I can go ahead and just make that change directly?\n. Thanks for getting this started and finding a better solution than manually escaping strings (#281).\nIt turns out the test runner was broken this entire time so I've taken the opportunity to start adding test coverage for at least the match_* functions. I've gotten a decent start here and will merge the branch into master once I've finished adding tests.\n. FYI the fix was pushed recently. If this is still a problem on non-Windows machines, please re-open.\n. Thanks for the help @bendem! This issue constantly comes up all the time so I need to tackle it head on. I've dumped some of my thoughts on fixing it in #416.\n. Probably because it's using echo $SHELL to check shell.\nYou're more than welcome to maintain a fork that has Android terminal support, but given the small user base and incompatible customizations I'm not inclined to merge related patches.\n. A simpler invocation would be j ebooks.\nj My eBooks passes two separate parameters to autojump, which is handled differently. What you probably want is j \"My eBooks\" to pass it as a single parameter.\nMultiple parameter invocation matches one parameter per node. For example given C:\\Program Files\\Adobe\\data you can jump that path via j adobe data or j program adobe data.\n. Thanks for the update! I've confirmed this when writing tests.\n. No, as I am pre-occupied with other things. The problem is with how regex is splitting up Windows paths.\nPull requests are more than welcome though.\n. If you don't have that many Unicode paths, you can fand remove the individual entry the autojump data file: ~/.local/share/autojump/autojump.txt. If you're on OS X it's in: ~/Library/autojump/<something>\n. Yeah, I'm pretty sure #391 is the culprit. If this happens again and/or you have more info please re-open. Thanks!\n. From the README.\n\nDirectories must be visited first before they can be jumped to.\n\nAlso run these commands:\nshell\n$ echo $SHELL\n$ which j\n$ declare -f j\n. Related to #416.\n. Should be fixed in v22.3.5 from @hwartig's PR. Please re-open this issue if the bug persists.\n. Yeah, use multiple arguments as described in the usage section. In your case it'd be j 1 test1 (or j project src).\n\n$ j temp1\n\nThe reason this doesn't work is you have to visit a directory before it's stored in the database.\n. Thanks for the PR!\n. Hey @bytor99999,\nThe Homebrew post install message should have included additional instructions on how to finish installing and using autojump. Please try re-installing autojump and following those instructions (unfortunately there's no easily linkable documentation at the moment).\n. Thanks, I'll make sure to improve that common alias in future versions.\n. Doh, that line needs a better debug info / better error handling.\nFor now the easiest way to fix that is to open ~/.local/share/autojump/autojump.txt and remove the offending directory entry. If you have multiple Unicode paths, I'd remove all of them.\n. ^^ that should fix the problem. If you're still having problems please re-open this issue.\n. Thanks!\n. jo is just a wrapper around Mac's open command. It'll open the path with whatever is the default behavior for a folder.\n. By default open uses Finder for directory links. I confirmed it a few hours ago and again just now (on a new MBP). If it opens in Terminal instead, it means it's a user-local configuration and not an issue related to autojump.\nUnfortunately I'm not fluent enough in OSX to help further.\n. Sounds like an issue with your shell's login script or the fish post-installation message.\n. Rolling the Windows crash exceptions into #436.\n. Hey thanks for the detailed bug report!\nUnfortunately I don't have access to a Windows machine. Can you update these Windows tests such that they reproduce the error you have? That way we can prevent future regression bugs.\n. You can mock it out for tests like so:\n``` python\nIn [1]: import os, mock\nIn [2]: os.sep\nOut[2]: '/'\nIn [3]: with mock.patch.object(os, 'sep', '\\'):\n   ...:     print(os.sep)\n   ...:   \n\\\n``\n.autojumpis a search engine that returns a result in the form of a directory path.\n-jotakes that result and opens a file browser (different per OS).\n-jtakes the result and \"jumps\" to it viacd`\nIf you want to jump and open a directory then it'd be: j scottming && jo scottming\nIf you do this often, you can shorten it as a shell function:\nbash\njump_and_open() {\n    j ${1} && jo ${1}\n}\n. Thanks for the PR and explanation!\n. I can't reproduce this.\n``` bash\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 brew install autojump                                                                                    2016.09.16 15:00:51 PDT\n==> Auto-updated Homebrew!\nUpdated Homebrew from 9fd97dd to a54c968.\nUpdated 3 taps (homebrew/core, homebrew/fuse, homebrew/versions).\n[..]\n==> Renamed Formulae\nsonar -> sonarqube\n==> Deleted Formulae\nhomebrew/versions/solr4    jing                       pyqwt                      sqsh                       yap\n==> Downloading https://homebrew.bintray.com/bottles/autojump-22.3.5.el_capitan.bottle.tar.gz\n################################################################## 100.0%\n==> Pouring autojump-22.3.5.el_capitan.bottle.tar.gz\n==> Caveats\nAdd the following line to your ~/.bash_profile or ~/.zshrc file (and remember\nto source the file to update your current session):\n  [[ -s $(brew --prefix)/etc/profile.d/autojump.sh ]] && . $(brew --prefix)/etc/profile.d/autojump.sh\nIf you use the Fish shell then add the following line to your ~/.config/fish/config.fish:\n  [ -f /usr/local/share/autojump/autojump.fish ]; and source /usr/local/share/autojump/autojump.fish\nzsh completion has been installed to:\n  /usr/local/share/zsh/site-functions\n==> Summary\n\ud83c\udf7a  /usr/local/Cellar/autojump/22.3.5: 19 files, 166.5K\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 autojump --version                                                                                       2016.09.16 15:01:33 PDT\nautojump v22.3.5\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 cd Movies                                                                                                2016.09.16 15:01:50 PDT\n\u256d\u2500@eikyo ~/Movies \u2039python-2.7.12\u203a\n\u2570\u2500 cd                                                                                                       2016.09.16 15:01:55 PDT\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 j Movies                                                                                                 2016.09.16 15:01:55 PDT\n/Users/wting/Movies\n\u256d\u2500@eikyo ~/Movies \u2039python-2.7.12\u203a\n\u2570\u2500                                                                                                          2016.09.16 15:01:57 PDT\n```\nAre you using the oh-my-zsh autojump plugin?\nIf you're familiar with git, have you tried clone this repository and using install.py?\n. Thanks for opening such a detailed issue!\nOne thing to consider is that micro-benchmarks can be kind of dangerous since single data points have have variance. Here I collect ~10 data points, remove autojump from my .zshrc, and then collect ~10 data points.\n``` shell\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:41:19 PDT\nreal    0.68s\nuser    0.43s\nsys 0.21s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:41:39 PDT\nreal    0.33s\nuser    0.23s\nsys 0.09s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:41:40 PDT\nreal    0.31s\nuser    0.22s\nsys 0.08s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:41:41 PDT\nreal    0.31s\nuser    0.22s\nsys 0.08s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:41:41 PDT\nreal    0.31s\nuser    0.22s\nsys 0.08s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:41:42 PDT\nreal    0.32s\nuser    0.22s\nsys 0.09s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:41:43 PDT\nreal    0.32s\nuser    0.23s\nsys 0.09s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:41:44 PDT\nreal    0.33s\nuser    0.23s\nsys 0.09s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:41:44 PDT\nreal    0.34s\nuser    0.24s\nsys 0.09s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 # removed autojump                       2016.09.27 15:41:45 PDT\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:42:07 PDT\nreal    0.53s\nuser    0.39s\nsys 0.13s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:42:11 PDT\nreal    0.29s\nuser    0.21s\nsys 0.07s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:42:11 PDT\nreal    0.29s\nuser    0.21s\nsys 0.07s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:42:12 PDT\nreal    0.29s\nuser    0.21s\nsys 0.07s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:42:13 PDT\nreal    0.29s\nuser    0.22s\nsys 0.07s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:42:14 PDT\nreal    0.30s\nuser    0.22s\nsys 0.07s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:42:15 PDT\nreal    0.30s\nuser    0.22s\nsys 0.07s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:42:16 PDT\nreal    0.29s\nuser    0.22s\nsys 0.07s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:42:16 PDT\nreal    0.29s\nuser    0.21s\nsys 0.07s\n```\nIf we calculate the 50th percentile and standard deviation (I converted sec to ms):\n``` python\nIn [22]: np.median(np.array([680, 330, 310, 310, 320, 320, 340]))\nOut[22]: 320.0\nIn [23]: np.std(np.array([680, 330, 310, 310, 320, 320, 340]))\nOut[23]: 125.77920401745793\nIn [24]: np.median(np.array([530, 290, 290, 290, 300, 300, 290, 290]))\nOut[24]: 290.0\nIn [25]: np.std(np.array([530, 290, 290, 290, 300, 300, 290, 290]))\nOut[25]: 78.541390362025041\n```\nIt looks like autojump is adding 30 ms and increased variance (from all the disk seeks). I'm only testing this on SSDs, so the variance on a spinning hdds is probably higher.\n\nseems like you could:\n1. set an env var on the first brew --prefix\n\nEnvironment variables aren't persistent between shells.\n\n\nlet me set the env var myself and skip the brew --prefix entirely\n\n\nThis requires manual syncing of the env var and brew installs, and isn't user friendly.\n\n\nskip the command -v brew &>/dev/null since presumably it's redundant with brew --prefix\n\n\nThis is definitely doable.\nAt the end of the day loading autojump.zsh invokes spawning subshells and disk seeks costing 30 - 370 ms, some of which may or may not be attributed to brew --prefix.\nI would love to make autojump faster, is there any better evidence that localizes the issue to brew?\n. > > Environment variables aren't persistent between shells.\n\nin .zshrc you're using the . operator:\n\nIf you save brew --prefix to an env var, you have to set it again when opening a new terminal (new shell) eliminating any performance differences.\n\nso I'm not sure what your reasons are for using them respectively, but in both cases, it appears they don't spawn a new subshell,\n\nCalling the results of the function using two backticks or $() creates a subshell, which is a fork of the current shell and has associated overhead from copying address space into the new child process.\n``` bash\ncheck global install\nelif [ -s ${BREW_PREFIX}/share/autojump/autojump.${shell} ]; then\n    source ${BREW_PREFIX}/share/autojump/autojump.${shell}\nfi\n```\n\nand that appears to work fine. You could also put guards in like:\n\nIt looks like you're using an old version of autojump; that code was removed for security reasons. Can you please reproduce these performance results with the version from GitHub (v22.3.5)?\n. > local brew_prefix=${BREW_PREFIX:-$(brew --prefix)}\nlol that's some fancy paremater expansion.\nYeah I'd love a PR! BTW thanks for doing the legwork on this and investigating.\n. Thanks for the PR!\n. FYI this was reverted in b2f243ee because it causes issues on systems that don't have Homebrew installed.\n. Unfortunately OSX doesn't support XDG spec and it's preferred to use the OSX's equivalents.\n. It's not a matter of can you do it, but rather should you do it.\nXDG is a standard for freedesktop.org projects, which includes GNOME, KDE, XFCE, etc. It is a Linux thing, not a BSD or OSX thing.\nUsing XDG spec on OSX is like creating a \"My Documents\" folder on a Linux distro.\n. Thanks for the suggestion, I would love to package autojump as a pure Python package and host it on PyPI.\nThe problem I have is autojump needs to add / modify shell files, which is a bit difficult to implement or test in a pure Python implementation.\n. Thanks for the PR!. Yeah, this definitely frustrates me occasionally as well.\nSo there's two use cases I see. One is when the first entry is incorrect and the user wants to jump again:\nbash\n[~] $ j foo\n[~/foobar] $ j foo # I'm in the wrong foo directory\n[~/project/foobar] $\nThe other is the one you describe, muscle memory:\nbash\n[~] $ j foo\n[~/foobar] $ j foo # muscle memory\n[~/project/foobar] $ # ugh, I want to go back\nOne quick workaround is to simply use cd - to jump to the previously used directory (or - in zsh), which I use often.\nLet's say we remove jumping to next best directory.\nbash\n[~] $ j foo\n[~/foobar] $ j foo\n[~/foobar] $ # Nothing happened, why?\n^^ I think that will be confusing to people because they're running a command and nothing is happening, but it seems random and doesn't explain why. I'm not sure that would be a experience for most users.\n. I think it's a better design principle to build something that does what the user asks, rather than try and do better by anticipating the users' intent. In the last scenario, what is the user's intent?\n1. Jump to a better result. (This action is reversible.)\n2. User made a mistake, do nothing. (This action is not reversible.)\n. Thanks for letting me know! readme.md is actually generated from docs/*. As a result I've gone ahead and fixed the issue in https://github.com/wting/autojump/commit/0bf1ad5ba92bd8b6580d01424954737501efd428.. d is not a command provided by autojump, a built-in bash or zsh command, or a default command for OSX or Ubuntu. I'm not sure which program provides it, but running the following command on your laptop should provide more info:\nshell\n$ which d\n$ cat $(which d). Sounds like you already have an answer for yourself. :stuck_out_tongue: \nWhile it's a good idea, it's difficult to support different file managers on different OS'es.. Autojump has multi argument weighting, so you could do j 2015 stuff (j 15 stuff might work).\nctime or mtime as a signal might be an interesting signal for search, but that probably requires hooking into the filesystem or constantly polling files at lookup time.. Thanks for the descriptive bug report.\nI've fixed this in https://github.com/wting/autojump/commit/6a529f4f929042a37e7394d8c91ba31b479189a2. Let me test this locally for a while before cutting a release.. We need joelthelion to come up with a versioning scheme for this to work, since he can just manually update the version number when merging pull requests.\n. Never mind, I realize this is an issue with the default /etc/profile and not autojump itself.  I've gotten around it by just sourcing /etc/profile.d/autojump.bash directly.\n. I installed Autojump on 3x Ubuntu 10.10 servers through Github clone and install.sh as root.\njumpstats was aliased and working but not being updated by my cd commands.  I then read on Github wiki to source /etc/profile in .bashrc which allowed jumpstats to be updated properly but then led to the default non-colored prompt.\nI tried to duplicate this behavior just now but couldn't, as install.sh was properly adding that line into my .bashrc.  I'm not sure why the install script wasn't working before.\n. I can't duplicate this problem on my machine.\nHave you tried pulling down the source again and reinstalling?  You might also try commenting that line out, does your .bash_history still get overwritten?\n. At beginning ask whether to install for one user or all users (root required).\nAll users: install into /usr/local/bin/\nOne user: install into ~/.autojump/\nOn a side note, I don't have a ~/.local/share/ on Ubuntu server editions so Autojump creates empty autojump_error files in my home directory that I can't get rid of.\n. @joelthelion : I reset my fork to release-v19 and rewrote the Linux z-shell version here.\n. @joelthelion : Can you go ahead and close this issue?\n. Yeah I'm fine with that. :)\n. Continuation of @shelhamer's post from #110 since it's more appropriate here:\n\nThis raises the broader issue of ranking matches given both scores and match quality. The approx matching thread might be the place for this discussion. I'm mulling over whether or not it would ever be desirable to rank an approximate match with high scores over an exact match with almost zero score. This might be another matter of taste that could be configurable?\n\nI think exact matching should always take priority over higher weighted approximate matching. I second the exact > case insensitive > flex > approx match priority approach.\nI looked at the Vimeo video, and it looks like Quicksilver treats exact and flex string match results the same prioritizing higher weights. While I think that works well for Launchy / Quicksilver where the primary task is opening programs, autojump's primary task is finding directory names where acronyms are not used as much.\n. To anyone still interested in fuzzy searching, I've implemented a basic fuzzy search in d7cea406. The previous implementations have experienced bit rot, and I've been refactoring the code over the weekend.\nTo clarify autojump's matching priority:\n1. Try exact match.\n2. Try case insensitive match.\n3. Try fuzzy match.\nFuzzy matching is a last case scenario, and there are certain limitations to the current fuzzy matching implementation:\n- It is case insensitive.\n- It only matches against the end directory of any path:\nbar given path /usr/bin/lib/foo/bar\n- It returns the highest weighted entry that matches at least 60% using Python's difflib.get_close_match().\nIt uses SequenceMatcher to return a list of good enough matches. I've tested it with simple transposing / missing characters and it works well enough.\n- It does not handle multiple directory matching: e.g. j foo bar will only use bar to match with.\n- It does not handle acronyms or give extra priority to first character of letters: e.g. j MIT will not match against ~/Massachusetts Institution of Technology\nQuicksilver-style works well when you have instant feedback as you're typing, in addition many program names are multiple words. On the other hand, autojump feedback is comparatively slow. Also, I don't think multiple word directories are prevalent except on Windows.\nSo basically if you accidentally misspell a long directory name (e.g. j thisreallylongnam), the current implementation has a good chance of finding the correct directory. However if you're using 2-3 character jumps (e.g. j lib) it probably won't work as you would expect since there's a high chance of getting an exact / case insensitive match.\n. I've implemented this 3 weeks ago and it has worked well enough for me over that period. As a result I'm going to go ahead and close this pull request.\nAs always, feel free to reopen this issue or create a new one if you have problems with approximate / fuzzy matching.\n. This has been fixed in @statik213's commit cfda2d0. To enable this setting, use the latest autojump version and set the environmental variable export AUTOJUMP_KEEP_SYMLINKS=1 in your .bashrc or .zshrc.\n. Closed as won't fix. GNOME shell incompatibility is mentioned in documentation. \n. @daveshah: Next time can you create a new issue and link to this one rather than revive an old thread? This way the other users don't need to get unnecessarily notified.\nLast week when I submitted the patch to homebrew I tested it on 10.6.8 and it worked fine then. I'll retest it again once I get access to a MBP over the weekend.\n. This is most likely due to a Debian policy where we're not allowed to modify user profile files upon installation. Since Ubuntu is downstream, it's unlikely they've changed behavior back to what should be expected unless they repatched over Debian's patch.\n. @yugal: I'll need to look into it, but don't have time right now.\nIn the mean time you should manually install autojump.\n. Yeah, I wish we could do it automatically for users but that runs afoul of Debian's guidelines. :crying_cat_face: \n. There is no easy way to catch syntax error within a Python script, this was the closest answer I could find.\nIt seems like the best resolution is to put a wrapper script around autojump that tests Python version. I'm not sure if you want to go down this route, and if not then issue can be closed.\n. The installation scripts are in bash and a pull request as already been submitted here.\nI'm not sure referring older releases for older Python versions is the right thing to do.\n. An incomplete zsh uninstall script got pushed to the wrong branch. I've rolled it back.\n. Yup, changes have been merged in already.\n. @shelhamer Would you mind submitting a pull request into autojump with the zsh tab completion fix?\nI'm testing it out and j + tab auto completion does not work in Linux with / without oh-my-zsh.\n. What version of autojump and how are you installing it?\nI mistakenly removed __j (which is needed for tab completion) and added it back in later. It's possible there's a lag in the homebrew version, but I don't have a Mac so it's not easy for me to test.\n. FYI, from Python3UnicodeDecodeError:\n\nOn UNIX (and other operating systems), it's possible to mount different file systems using different charsets. sys.getdefaultencoding() will be the same for the different file systems since this encoding is only used between Python and the Linux kernel, not between the kernel and the file system which may uses a different charset.\n\nI tried to reproduce the bug locally but couldn't, so I've requested more info in the RedHat bug report.\n. Thanks for following up on this issue.\nI need to set aside some time to work on it. However at the same time, I'm hoping when RedHat upgrades to a newer version of Autojump using Python 3 these Unicode related problems will magically go away. One can hope...\n. Yes.\nRight now Autojump supports Python 2 and 3. When it detects Python 2, it applies a basic UTF wrapping around strings. The traceback from the second bug shows a problem with one of those functions (called encode() and decode()). Since Python  3 uses Unicode strings natively, I'm hoping that will solve the 2nd bug.\nWhat Tanguy Ortolo (Debian maintainer) did was apply a quick patch to replace the first line of autojump with #!/usr/bin/python \u2192 #!/usr/bin/python3 and change the respective package dependencies.\n. No problem. I hope to release v21 in a month or two. v21-rc is available right now, I've been quite busy over the past few months (changelog).\n. @tnorth: I've fixed this issue in faf0854, and commented on the RedHat bug as well.\nI'm closing this issue due to inactivity. If the behavior reappears please let us know (preferably here, but I'm subscribed to the RedHat bug report as well).\n. Finished in issue 100 and issue 101.\n. That was one of the first things I tried but unfortunately not.\n. Full path doesn't bother me, but that's probably because I use a 2 line prompt.\nI do have an issue with duplicate entries though, since sometimes I'll use the symlink and other times the full path and would like them weighted the same. However the fix may not be worth the hassle.\nWhy not just have the symlink feature available as an option with some caveats? Enable it using an environmental variable and let users worry about duplicate entries.\n. Thanks for explaining, that makes more sense.\nWhy not just strip the s function and submit another pull request? The zsh changes would be identical with the exception of single -> double braces.\n. @kevinburke: This has been fixed in the latest commit e96dc4c.\nThe problem was making sure zsh's compinit was loaded. If you prefer not to upgrade autojump, you can also fix the problem by adding this line to your ~/.zshrc: autoload -U compinit; compinit.\n. ZSH tab completion was not working at all before. Now it is working regardless if you have menucomplete enabled or not.\nconsole\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a \u2039\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  setopt nomenucomplete\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a \u2039\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  j aut<tab><tab>\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a \u2039\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  j aut__<1><enter>\n/home/ting/code/autojump\n\u256d\u2500ting@noa ~/code/autojump \u2039python-2.7.3\u203a \u2039\u203a \u2039ruby-1.9.3\u203a \u2039master\u203a \n\u2570\u2500\u27a4\nconsole\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a \u2039\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  setopt menucomplete\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a \u2039\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  j aut<tab><tab>\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a \u2039\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  j aut__<3><enter>\n/home/ting/.local/share/autojump\n\u256d\u2500ting@noa ~/.local/share/autojump \u2039python-2.7.3\u203a \u2039\u203a \u2039ruby-1.9.3\u203a \u2039master\u203a \n\u2570\u2500\u27a4\nAfter seeing the menu and making a number selection, you can  to jump to the entry. Hitting  again expands the path to full entry, but is not necessary.\n. > Regarding your 2nd example with menucomplete, the j auto should have added the first option already when pressing Tab once and moved to the seconds option with the 2nd tab?!\nThe behavior for bash and zsh behavior is the same:\n- j auto<tab> \u2192 j auto__\n- j auto__<tab> \u2192 <displays menu>\n- j auto__3<enter> \u2192 <jump to 3rd entry>\n- j auto__3<tab><enter> \u2192 <replace entry full path, then jump to path>\n\nAre you saying that when you press 3 it completes the previous input, and does not accept the 2nd/selected option and inserting 3 as a new argument to \"j\"?\n\nPressing 3 does not complete the input until you hit . However j auto__<#><enter> is a valid call, there is no need to hit .\n\nsetopt nolistambiguous will display the list of possibilities right away, also if there is an ambitious prefix being completed first.\n\nRight now tab completion behavior is the same for both shells. I want to mess with user zsh settings as little as possible, but will add this to the documentation.\n. Ahh ok. I wasn't exactly sure what your question was, glad it was just miscommunication.\nIn either case, I'm just glad to have fixed this long standing issue.\n. Yup.\n. I don't think there should be a reason we can't support this, but as with this and fuzzy/flex matching people are going to start having separate opinions as to preferred behavior.\nI think we should start implementing a way to modify autojump's behavior, either through the use of an ~/.autojumprc or environmental variables.\n. @irrationalfab : Pull the latest commit and set the environmental variable export AUTOJUMP_IGNORE_CASE=1. autojump will ignore case and return the highest matching path.\n. It was a quick fix and I've bumped it to v20-5. Reinstall and let me know how it goes.\nconsole\n\u256d\u2500ting@noa ~/Cocoa \u2039python-2.7.3\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  echo $AUTOJUMP_IGNORE_CASE\n1\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  js | grep cocoa\n21.9:   /home/ting/feeds.cocoapods.org\n61.3:   /home/ting/Cocoa\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  j coco\n/home/ting/Cocoa\n\u256d\u2500ting@noa ~/Cocoa \u2039python-2.7.3\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4\n. @joelthelion I'm currently traveling over the next two weeks attending a conference so I won't have time to look into right now, but am aware of this.\n@lukexor The installer only checks for a minimum Python version, as the base Python install should cover all the required modules (as tested on Arch/Ubuntu/Debian/Cygwin/OS X).\nThe only changes in autojump between v19 and current is the try-catch block for full disk errors.\n. The installer just dumps files from the repo into ~/.autojump after\nchecking a few environmental settings, no .so files should be there.\nOn Fri, Mar 23, 2012 at 7:04 PM, Joel Schaerer <\nreply@reply.github.com\n\nwrote:\nNo worries, I just find it very weird to see .so files in the autojump\nuser directory. Have a great conference!\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joelthelion/autojump/issues/111#issuecomment-4656387\n. Thanks for the comments, I'll look into making these issues aren't present in v22.0.\n. Oh then it's primarily a documentation issue then. I mean the two places I checked (--help and man page) didn't contain anything about it.\n\nI've been meaning to update both for a while now when I get some free time...\nIn the meantime this can go on the back burner.\n. There's no need for a rewrite. Then again, there really isn't a reason not to migrate to argparse either now that optparse is deprecated as of 2.7.\nIf something fails, it should fail cleanly. A help message explaining missing arguments is sufficient. Take rm as an example:\n\u256d\u2500ting@noa /tmp  \n\u2570\u2500\u27a4  rm -v                                                                                                   2012.03.28 22:10:21 JST \nrm: missing operand\nTry `rm --help' for more information.\n. Fixed in the latest commit 465ca79. The j function now tests the existence of the directory autojump returns before changing directories.\n. Autojump does not print out any errors if the directory does not exist. Also, j --help calls autojump --help which prints the help message and returns a 0 exit status. That makes it difficult to test against.\nI've updated the j function to print out an error message when it doesn't jump to a directory when called.\n. I just reproduced it on Arch and Ubuntu Server with the latest  commit 8decc17f3e, both running under Python v2.7.2.\n. Reading through the code, apparently jumping to the current directory is not allowed because the directory may no longer exist.\n. Thanks for the notice, the rewrite to use argparse over optparse bumped up minimum version Python version to 2.7.\nv20 supports v2.7+, v3.2+.\nv19 supports v2.6+, v3.0+.\nv12 supports v2.4+.\nI just tested v20 on my Ubuntu server with only Python 2.7.2 installed and it works fine.\n. @jkuan: Hmm, you could try upgrading Python to v2.7. It's probably better in the long run.\nHow should we handle this?\n1. Direct them to download and use v19.\n2. Ask users to upgrade Python to v2.7. Python site recommendation is to have users separately install Python since OS X's Python is 1-2 years behind when release anyway.\n3. Ask users to install argparse separately using pip install.\n4. Bundle argparse with autojump.\n5. Roll back to use optparse instead of argparse.\n. Thanks @jkuan!\n. This is fixed in commit 8decc17f3e.\nDocumentation and install.sh now direct users to upgrade Python or install older versions. A -f / --force option is added to install.sh to bypass dependency checks.\n. I'm sorry to hear you're having problems. How did you install autojump?\nI grepped the latest commit and v19 source code, but update_terminal_cwd is not referenced anywhere. On my Linux machine running the latest version in bash:\n[test@noa autojump]$ echo $PROMPT_COMMAND\n{ [[ \"$AUTOJUMP_HOME\" == \"$HOME\" ]] && (autojump -a \"$(pwd ${_PWD_ARGS})\"&)>/dev/null 2>>\"${AUTOJUMP_DATA_DIR}/.autojump_errors\";} 2>/dev/null ; printf \"\\033]0;%s@%s:%s\\007\" \"${USER}\" \"${HOSTNAME%%.*}\" \"${PWD/#$HOME/~}\"\nAs you said, autojump.bash just uses whatever $PROMPT_COMMAND was being set to before. Is it possible you have something else modifying $PROMPT_COMMAND?\n. Apple Terminal adds the function update_terminal_cwd() to /etc/bashrc for updating terminal window titles.\nIt looks like it checks if it's inside emacs, and only runs if it is not. However your emacs is not properly setting the $INSIDE_EMACS environmental variable, thus trying to call update_terminal_cwd() when it shouldn't be.\nYour solution is to use a different terminal (I'd suggest iTerm), or properly set $INSIDE_EMACS whenever running emacs.\nIf this does not resolve your issue, please feel free to reopen it.\n. If you're on 2.6, the alternative is also to use pip install argparse. In the long term, we're looking to stabilize autojump on 2.7 and 3+.\nEdit: From what I understand you're asking that autojump includes the argparse module with the program?\n. The root problem is that OS X will always ship with a minimum 1-2 year old Python version. The overwhelming Mac community recommendation is to separately install and upgrade the system's version of Python.\nThe problem is there is a disconnect between OS X users that use the command line a lot (autojump's target demographic) but doesn't upgrade Python (i.e. non-Python devs). I'm hoping that pip install argparse is a viable compromise.\nIt's difficult to balance backwards compatibility and continue improving autojump. While Debian is on 2.5, and OS X on 2.6, Cygwin / Linux is on 2.7 for a while now. 2.7 is also a planned \"LTS\" release as well, so I feel that should be an acceptable bare minimum target Python.\n. @blueyed: Thanks for the pull request, it's been merged!\n. Thanks for giving us a heads up.\nCan you reply back with the output from these two commands:\n1. python --version\n2. /usr/bin/autojump --version\nI'm on Arch, but will install Ubuntu 12.04 on a VM to test this out within a few days.\n. Sorry, try an aptitude show autojump. If aptitude doesn't exist, please use apt-get to install it.\n. Hi Philip,\nI had a friend run sudo apt-get install autojump && autojump --version on Ubuntu 12.04 and it worked fine. However he was using the distro default Python 3.2.3. I also tested release v18 under Python 2.7.3 with no problems, which leads me to think you might have a problem with your (custom?) Python installation.\nTry:\n```\n$ python\nPython 2.7.3 (default, Apr 24 2012, 00:00:54) \n[GCC 4.7.0 20120414 (prerelease)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n\n\nfrom future import division, print_function\n```\n\n\n\nIf there's any errors, then it would indicate a problem with your Python install.\n. That was modified by the package maintainer.\nRelease 18 uses #!/usr/bin/env python because autojump supports both Python 2 and 3. When you ran the aptitude show autojump earlier, it specified that the package depends on Python 3.\nI need to track down if this downstream modification was done by the Debian package maintainer or the Ubuntu package maintainer.\nThanks again for opening this issue.\n. @joelthelion: You're right, I've gone ahead and closed the Debian bug report.\nThis seems to be a localized problem to @philip's install of Python 3.\n```\n\u256d\u2500wting@ps95950 ~ \u2039python-2.7.3\u203a \u2039system\u203a \n\u2570\u2500\u27a4  cat /etc/issue\nDebian GNU/Linux 6.0 \\n \\l\n\u256d\u2500wting@ps95950 ~ \u2039python-2.7.3\u203a \u2039system\u203a \n\u2570\u2500\u27a4  python3\nPython 3.1.3 (r313:86834, Nov 28 2010, 10:01:07) \n[GCC 4.4.5] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n\n\nfrom future import division, print_function\n```\n\n\n\n```\n\u256d\u2500ting@punk ~ \u2039python-2.7.2\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  cat /etc/issue\nUbuntu 12.04 LTS \\n \\l\n\u256d\u2500ting@punk ~ \u2039python-2.7.2\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  python3\nPython 3.2.2 (default, Sep  5 2011, 22:09:30) \n[GCC 4.6.1] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n\n\nfrom future import division, print_function\n```\n\n\n\n```\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  uname -r\n3.3.4-1-ARCH\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  python3\nPython 3.2.3 (default, Apr 23 2012, 23:14:44) \n[GCC 4.7.0 20120414 (prerelease)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n\n\nfrom future import division, print_function\n``\n. Please runautojump --version` and let me know the output.\n\n\n\nAlso, what is the plugins=() line in your ~/.zshrc contain?\n. The autojump plugin is unnecessary as long as you have the [[ -s ... ]] && source line from install.sh in your ~/.zhsrc.\nWhat's the output of these commands:\nconsole\n$ ls -al ~/.local/share/autojump\n$ autojump --add /tmp\n$ ls -al ~/.local/share/autojump\n$ tail ~/.local/share/autojump/autojump.txt\n. Sorry for the late response, I've been a bit busy these days.\nIt looks like you're upgrading over from an older installation since autojump_py hasn't been used since release-v15. There is some migration code in place for older versions but it's possible that it's not working.\nI haven't tested it extensively, but it's now on my to do list when I have time to get around to it. Thanks for bringing it to my attention though.\n. @eallik I just wanted to mention that it has been in the README and manpage for ~1 month now, although it was implemented earlier. If you have an older version of autojump the manpages may not have been updated yet.\n. Symlink option works fine on my end.\nconsole\n[test@noa ~]$ autojump --version\nautojump release-v20-9\n[test@noa ~]$ export AUTOJUMP_KEEP_SYMLINKS=1\n[test@noa ~]$ mkdir test\n[test@noa ~]$ ln -s test test-sym\n[test@noa ~]$ j sym\nautojump: directory 'sym' not found\nTry `autojump --help` for more information.\n[test@noa ~]$ cd test-sym\n[test@noa test-sym]$ cd\n[test@noa ~]$ j sym\n/home/test/test-sym\n[test@noa test-sym]$\n@eallik: Statik is just trying to help, no need to get defensive.\nYou must enter a directory before it is added into autojump's database. That's why your example didn't work.\nconsole\n~$ export AUTOJUMP_KEEP_SYMLINKS=1\n~$ mkdir testdir\n~$ ln -s testdir testdir-sym\n~$ j testdir-sym\nautojump: directory 'testdir-sym' not found\nTry `autojump --help` for more information.\n~$ j testdir\n/Users/erik.allik/testdir\nThat last line j testdir should not work unless you've already created the directory before and it was pre-existing in the database.\nAlso, what @statik213 said was correct. Let's say your database looks like this:\n100        /testdir\nYou create a new symlink and add it to the database:\n100        /testdir\n10         /testdir-sym\nIf you type j test, autojump will still jump to the first entry because it's weighted higher. @statik213's point was that even if you add a symlink without resetting your database, if the names are overlapping you will still visit the full path, higher weighted database entry instead of the new symlink entry.\nIf you want to always prioritize symlinks over full paths, your best option is to zero out the current database and start over. Simply run > ~/.local/share/autojump.txt.\n. ~$ j foobarbaz\n/Users/erik.allik/foobarbaz\nAs I stated before, this should never happen unless you have a pre-existing entry in your database. Autojump does not know anything about your file system until you've entered that directory.\n1. Check which version of autojump you're running: autojump --version\n2. Git rid of the existing autojump database: mv ~/.local/share/autojump/ ~/\n3. Make sure the setting is enabled: export AUTOJUMP_KEEP_SYMLINKS=1\nYou should be fine after those steps.\n. I created a new test user, downloaded and installed autojump v20, and tested symlinks. I can't reproduce your behavior:\n``` console\n[test@noa ~]$ cd ~/code/autojump/\n[test@noa autojump]$ git checkout release-v20\nNote: checking out 'release-v20'.\n[test@noa autojump]$ ./install.sh \nInstalling bash version of autojump to /home/test/.autojump ...\n\u2018icon.png\u2019 -> \u2018/home/test/.autojump/share/autojump/icon.png\u2019\n\u2018jumpapplet\u2019 -> \u2018/home/test/.autojump/bin/jumpapplet\u2019\n\u2018autojump\u2019 -> \u2018/home/test/.autojump/bin/autojump\u2019\n\u2018autojump.1\u2019 -> \u2018/home/test/.autojump/share/man/man1/autojump.1\u2019\n\u2018autojump.sh\u2019 -> \u2018/home/test/.autojump/etc/profile.d/autojump.sh\u2019\n\u2018autojump.bash\u2019 -> \u2018/home/test/.autojump/etc/profile.d/autojump.bash\u2019\nPlease add the line to ~/.bashrc :\n[[ -f ~/.autojump/etc/profile.d/autojump.bash ]] && source ~/.autojump/etc/profile.d/autojump.bash\n\nYou need to run 'source ~/.bashrc' before you can start using autojump.\nTo remove autojump, run './uninstall.sh'\n[test@noa autojump]$ vim ~/.bashrc\n[test@noa autojump]$ source ~/.bashrc \n[test@noa autojump]$ autojump --version\nautojump release-v20\n[test@noa autojump]$ export AUTOJUMP_KEEP_SYMLINKS=1\n[test@noa autojump]$ > ~/.local/share/autojump/autoju[test@noa autojump]$ source ~/.bashrcmp.txt\n[test@noa autojump]$ cat ~/.local/share/autojump/autojump.txt\n1.0 /home/test/code/autojump\n[test@noa autojump]$ cd ~/test-sym\n[test@noa test-sym]$ cat ~/.local/share/autojump/autojump.txt\n2.0 /home/test/code/autojump\n1.0 /home/test/test-sym\n[test@noa test-sym]$ \n```\nMy only suggestion at this point is to wipe out autojump and it's database and start over with the latest version.\nconsole\n$ rm -fr ~/.autojump\n$ rm -fr ~/.local/share/autojump\n$ git clone git://github.com/joelthelion/autojump.git\n$ cd autojump\n$ ./install.sh\n$ source ~/.bashrc\n. By default, autojump.bash uses pwd -P (physical full path) to add the directory the database. If the symlinks = 1, then it uses just regular pwd.\nWith Linux, pwd == pwd -L. Is this not the case for OS X? Unfortunately I don't use / have access to a Mac to test with.\nTry modifying ~/.autojump/etc/profile.d/autojump.bash line 54 to _PWD_ARGS=\"-L\". Does that solve the symlink issue?\n. python\ntry:\n    current_dir = decode(os.path.realpath(os.curdir))\nexcept OSError:\n    current_dir = None\ncurrent_dir is only used to make sure the user doesn't jump into the current directory. Granted this is still a bug with symlinks, but not one that should be causing the problems in this thread. Both adding and searching the database does resolve to physical path.\npython\nclass Database:\n    def add(self, path, increment = 10):\n        \"\"\"\n        Increment existing paths or initialize new ones to 10.\n        \"\"\"\n        if path not in self.data:\n            self.data[path] = increment\n        else:\n            import math\n            self.data[path] = math.sqrt((self.data[path]**2)+(increment**2))\n        self.save()\nIf you look up all instances of the variable patterns, you'll notice it's never modified to resolve to real path.\nIn either case, I've fixed this in the latest commit 3a7f211fb6.\n. I borrowed a friend's MBP (10.6.8) for testing.\nconsole\nmacbook-wlan:~ ting$ bash --version\nGNU bash, version 3.2.48(1)-release (x86_64-apple-darwin10.0)\nCopyright (C) 2007 Free Software Foundation, Inc.\nmacbook-wlan:~ ting$ autojump --version\nautojump release-v20-9\nmacbook-wlan:~ ting$ echo $AUTOJUMP_KEEP_SYMLINKS\n1\nmacbook-wlan:~ ting$ ls -al | grep test\ndrwxr-xr-x   2 ting  staff    68 Jun  6 22:07 test\nlrwxr-xr-x   1 ting  staff     4 Jun  6 22:07 test-sym -> test\nmacbook-wlan:~ ting$ >~/.local/share/autojump/autojump.txt\nmacbook-wlan:~ ting$ j -s\nTotal key weight: 0. Number of stored dirs: 0\nmacbook-wlan:~ ting$ cd test-sym\nmacbook-wlan:test-sym ting$ j -s\n10.0:   /Users/ting/test-sym\nTotal key weight: 10. Number of stored dirs: 1\nmacbook-wlan:test-sym ting$\nSymlinks works fine, try updating autojump to the latest version.\n. Thanks for the patch!\n. @KenMacD: Using -pcre-match as opposed to =~ was causing problems on my end (error: -pcre-match not found, zsh v4.3.17). I've modified autojump.zsh to test zsh version and use the appropriate condition. Can you pull down the latest version and confirm it works for you?\n. [[ foo = bar ]] isn't a substring match.\nconsole\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a \u2039\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  zsh --version                                                                                                                1 \u21b5 2012.05.27 12:55:52 HST \nzsh 4.3.17 (x86_64-unknown-linux-gnu)\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a \u2039\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  [[ ting =~ t ]] && echo 1                                                                                                        2012.05.27 12:56:20 HST \n1\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a \u2039\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  [[ ting = t ]] && echo 1                                                                                                         2012.05.27 12:56:26 HST \n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a \u2039\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4\nI used the method described here instead in the latest commit. Try it out and let me see if that works for you.\n. This should be doable, I'll look into it.\n. Implemented in above commit. Please install the latest version to test it out.\n. Problem eliminated in commit f41d0fb.\n. Implementation shouldn't be difficult (add autojump.fish wrapper), but not a priority. You're more than welcome to add it and send a pull request.\n. Every directory you visit needs to be added to the database via a shell hook. This is done in Bash by modifying $PROMPT_COMMAND, and adding a function to Zsh's preexec_functions. I'm not sure what the fish equivalent would be.\n. Closed as duplicate of #127.\n. Thanks!\n. This a narrow use case and I'd rather not make the change.\nIf you are cloning the repo into ~/.autojump, can't you just modify .zshrc and add ~/.autojump/bin to the $fpath after calling autojump.zsh?\n. Unfortunately I don't have any good metrics of how people are using autojump. I only have a very rough idea from Ubuntu / Debian package popularity count and the issues that get reported.\nFrom what I can tell, most users install using package managers and not from source. For source users, I've tried to minimize setup / teardown as much as possible with the install / uninstall scripts.\nFor my dev and testing machines I just symlink everything from ~/.autojump to the source files. However other machines I just do a git pull && ./install.sh.\n. > I have some entries in the autojump database which match \"down\" but do not exist.\nMissing directories are not auto-purged because some users will mount drives temporarily (usb drives, network locations, etc).\n. Sorry for the terrible turnaround time.\nIt would be better if missing entries were not jumped to, but it also involves checking each entry that matches. This can cause certain lag problems (e.g. hdd's that require spin up) so I'm not sure if I should fix it or not.\n. Closed as no longer relevant in v22+.\nj path__1__/totally/fake/directory<tab> will be replaced with j /totally/fake/directory.\n. I'll look into this. Autojump should definitely support directories with hyphens in the middle though.\n. @JrCs: Should be working now, let me know if you still have problems.\n. Thanks for bringing this up, I didn't realize that was standard etiquette. I've gone ahead and removed it from autojump.zsh and updated the documentation to reflect the changes.\nUsers now need to manually add compinit loading to ~/.zshrc if they want tab completion.\n. Closed as duplicate of #136, has been fixed in RC.2.\n. Can you copy paste the output from these commands please?\nconsole\n$ autojump --version\n$ zsh --version\n$ python --version\n$ setopt\n. No problem, glad you got everything working.\n. Sorry about the long delay. I can't seem to reproduce the issue.\n``` bash\n[test@noa ~]$ echo $SHELL\n/bin/bash\n[test@noa ~]$ echo $PROMPT_COMMAND\n{ [[ \"$AUTOJUMP_HOME\" == \"$HOME\" ]] && (autojump -a \"$(pwd ${_PWD_ARGS})\"&)>/dev/null 2>>\"${AUTOJUMP_DATA_DIR}/.autojump_errors\";} 2>/dev/null ; printf \"\\033]0;%s@%s:%s\\007\" \"${USER}\" \"${HOSTNAME%%.*}\" \"${PWD/#$HOME/~}\"\n[test@noa ~]$ cat test.sh \n!/usr/bin/env bash\nexit 1\n[test@noa ~]$ ./test.sh \n[test@noa ~]$ echo $?\n1\n[test@noa ~]$ \n```\n. Thanks for the explanation and the patch!\n. FYI your patch causes problems for OS X 10.8.x users so I've reversed the changes in v21.0.5.\n. Your patched worked with me on 10.6.8, so I'm not sure why other users are having problems with the same line.\nPlease refer to issues #159 and #160.\n. Thanks for the bug report and doing a lot of the legwork.\nIt's not documented anywhere, but running autojump in bash allows you to auto complete certain commands such as vim. Unfortunately you ran into a bug with this.\nIn my opinion, tools should do one thing well and for autojump that should be cd only. However, as @joelthelion was the one who made this commit I'll let him make the final decision.\n. Another issue is this isn't implemented in the zsh version, so now we have the additional problem of different functionality between bash and zsh version. \n. Use export AUTOJUMP_AUTOCOMPLETE_CMDS='cp vim emacs' in your ~/.bashrc.\n. Thanks for the patch. Unfortunately, while I believe PEP 8 is important I do not believe strict adherence is necessary.\n. I can't seem to reproduce your problem:\nzsh\n\u256d\u2500ting@noa /tmp \u2039python-2.7.3\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  mkdir vcmcnipovpoivxzoivvcxzvcxvcxz                              2012.10.30 22:22:47 CDT \n\u256d\u2500ting@noa /tmp \u2039python-2.7.3\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  cd vcmcnipovpoivxzoivvcxzvcxvcxz                                 2012.10.30 22:23:03 CDT \n\u256d\u2500ting@noa /tmp/vcmcnipovpoivxzoivvcxzvcxvcxz \u2039python-2.7.3\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  ..                                                               2012.10.30 22:23:04 CDT \n\u256d\u2500ting@noa /tmp \u2039python-2.7.3\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  j vcmcnip                                                        2012.10.30 22:23:05 CDT \n/tmp/vcmcnipovpoivxzoivvcxzvcxvcxz\n\u256d\u2500ting@noa /tmp/vcmcnipovpoivxzoivvcxzvcxvcxz \u2039python-2.7.3\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4  j vcmcnip                                                        2012.10.30 22:23:09 CDT \n/tmp/vcmcnipovpoivxzoivvcxzvcxvcxz\n\u256d\u2500ting@noa /tmp/vcmcnipovpoivxzoivvcxzvcxvcxz \u2039python-2.7.3\u203a \u2039ruby-1.9.3\u203a \n\u2570\u2500\u27a4                                                                   2012.10.30 22:23:13 CDT\nWhat version of autojump are you using? I remember running into this problem in the past and patched it a while ago.\n. Closed because I can't reproduce and no response from OP.\n. This is due to an upstream Debian policy not to modify user's ~/.*rc files. I'll look into asking Ubuntu if they can unpatch Debian's modifications.\n. Closed as duplicate of #65 (but am still working on this issue).\n. This can be achieved by typing j<tab><tab>. On ZSH, you need to load the compinit module in your ~/.zshrc.\nYou can also partially complete the menu by typing j directory<tab><tab>.\n. Something like that would need to be much more interactive and/or persistent. Sorry, but that's out of the scope of autojump. \n. Closed as will not implement. :(\n. Another possible method is to use multiple arguments. Say you have the following structure:\n~/appweb\n~/dev/app\nTo jump to the second entry, you can use j dev a (or something similar). However if app and appweb are in the same directory then this method doesn't work.\n. > Couldn't you look at the top entries (sorted by score) and the apply a length-based filter on them?\nIf the database was:\n$ j -s\n20.0 foobar\n10.0 foo\n$ j foo\nWhy would you want the normal behavior to return foo instead of foobar?\n\nIf there is no score property available, you may want to sort the top five(?) entries by length - but that would mix in totally unrelated entries probably.\n\nAll entries in a database have an initial score of 10.0. Also, sorting top n entries would require parsing the entire database for every search (right now it quits at first match).\nA better option is probably to provide an exact match option, e.g. j (-e|--exact) foowhich only matches against same length directory names.\n. I wanted to mention that in the latest version (v21.2.0) I added jc. It basically restricts autojump to sub-directories of the current working directory. This may help alleviate OP's problem in certain situations.\n. Closed as wontfix.\n. I'll go ahead and close it, if you can reproduce it just update this issue.\n. I'll go ahead and add this into man pages for the next release.\n. Ha, I think I submitted a pull request that did this a year ago to Joel.\nAnyway, this is pretty easy to change on an individual basis. At these 2 lines at the end of ~/.autojump/etc/profile.d/autojump.bash (or .zsh):\nshell\n    new_path=\"$(autojump $@)\"\n    if [ -d \"${new_path}\" ]; then\n        echo -e \"\\\\033[31m${new_path}\\\\033[0m\"\n        cd \"${new_path}\"\n        clear\n        ls\n    else\n        echo \"autojump: directory '${@}' not found\"\n        echo \"Try \\`autojump --help\\` for more information.\"\n        false\n    fi\n. Sure that'd be fine. However I'm not sure how HomeBrew works, so when autojump gets upgraded it may overwrite your symlink.\n. Yeah there are a lot of ways to do this and a lot of ways to customize this, which is why I'd prefer this be implemented as a shell tweak.\n. That's odd, as I'm running nearly the exact configuration. What's the output of autojump --complete and autojump --version?\n. You say you checked out commit 16e0c51, but the version number for that commit is v21-rc2.\nv17 is fairly old, but I would remove autojump and try installing it again:\nzsh\n$ rm -fr ~/.autojump/\n$ git clone git://github.com/joelthelion/autojump.git /tmp/autojump/\n$ /tmp/autojump/install.sh\n$ source ~/.zshrc\n$ autojump --version\n$ autojump --complete\n. I just checked out master branch, it's on v21-rc2. Run which autojump, you may be running a distro version.\n. First, remove it from your package manager, run the uninstall script, then try the install script:\n$ sudo aptitude purge -y autojump\n$ git clone git://github.com/joelthelion/autojump.git\n$ sudo ./uninstall.sh\n$ ./install.sh\n$ source ~/.zshrc\n$ autojump --version\n. After running install.sh, can you double check that ~/.autojump/etc/profile.d/autojump.zsh exists and if so, manually source it?\n. If autojump.zsh exists, then this line in your ~/.zshrc should be sourcing the file properly: \nzsh\n [[ -s ~/.autojump/etc/profile.d/autojump.zsh ]] && source ~/.autojump/etc/profile.d/autojump.zsh\n. If you can run that above command from the terminal and get autojump working, then at this point there is something wrong with your system loading ~/.zshrc and not much I can help with. Perhaps try temporarily removing oh my zsh?\n. Thanks for the pull request!\n. Which version are you running? autojump --version\nI have inconsistent access to a Mac, so it may take me a while to track down the root cause.\n. autojump <dir> should always display the matching directory, but not jump to it. The j function is used for changing directories.\nAre you on bash / zsh? Does the output directory exist? Are you using a - when using j? Is there a - in the directory name? Can you copy / paste the terminal output?\nI just tested on a friend's MBP (OS 10.6.8, bash 3.2.48) with the latest github version and it worked fine in both zsh and bash.\n. @stephenluu: You're not supposed to call autojump directly, but rather source the relevant shell (e.g. bash). This is setup when you run ./install.py.\n. This was a problem with oh-my-zsh and not autojump.\n. Are you running into the same problems as #146?\nOr do you want to set this as default behavior? Or do you want to pass a flag to enable this option?\n. Ahh missed that, thanks. \n. Thanks for the pull request!\n. Since #159 and #160 are duplicates but that one has more users participating I'll only update that issue to prevent discussion fragmentation.\n. Thanks for the bug report.\nThat line was recently changed so I've reverted the line back to the original statement. I'll be updating the Homebrew formula shortly.\n. I've submitted a Homebrew pull request to fix this issue downstream.\n. Hi, can someone with the original problem please test JrCs's command-prompt branch and verifies that it doesn't cause problems?\nUnfortunately, I don't have access to OS 10.8 to test this myself.\n. Thanks for the rewrite.\nI had to modify it quite a bit to get it working for a bunch of different use cases, but it's merged into master now.\n. Thanks for the info! I've made the changes in master branch.\n. Thanks for your patch. Once someone in the original issues thread has successfully tested it I'll merge it.\n. Thanks for catching that. I've handled it further down in the switch statement instead.\n. Oops you're right. I blame the turkey. Merged your commit bcb7ffe.\n. Thanks for the patch!\n. This was removed a while back. Please refer to:\nbash\n$ autojump --help\nOn a side note, the j command now accepts options so this is completely valid:\nbash\n$ j -s\n. Really busy over the next 2 weeks, will look into this when I can.\n. I need some clarification.\nj bundle should always jump to /srv/example.com/current/vendor/dotsunited/bundlefu, regardless of the current directory.\nIs j bundle__2__/home/user/.dotfiles/vim/bundle not changing directory as expected?\n. Hmm, this was the behavior in past releases. It looks like I borked it somewhere. I'll look into fixing it.\n. I fixed this in a99183bf8b7cf322161ca42bcf4d70dbc3741673. Can you verify that it works for you?\n. > I have another issue in this context: autojump will return no results if the current directory matches, but gets skipped now (again). Also, j will return an error (because of the empty result from autojump).\nThis is the expected behavior if it would match. The end result is you're still in the # 1 matching directory, albeit with an error.\n. I tried reproducing it on ArchLinux but couldn't. I average 3 seconds per cd to a remote sshfs mount, with or without autojump. I then tested it on a LAN sshfs and still average 0-1 second per cd with autojump.\nNeed to borrow a Mac and test on a LAN sshfs mount when I get a chance.\nEvery time you cd it calls autojump -a <directory name> to update the database. That's probably what is causing the lag.\nCan you verify this by running these two lines and seeing if there's a discrepancy?\nbash\n$ autojump -a /tmp\n$ autojump -a <sshfs mount directory>\n. > Another odd thing is that, when on the remote mount, even giving me back a prompt after doing a simple ls takes much longer with autojump loaded. I do a j Volumes gmm and it shows me the correct directory in red almost immediately, then stalls before giving me my prompt back.\nThis is the entire jump function:\n``` bash\nfunction j { \n    if [[ ${@} =~ ^-{1,2}.* ]]; then\n        autojump ${@}\n        return\n    fi  \nnew_path=\"$(autojump $@)\" # calls autojump <args> for correct directory to jump to\nif [ -d \"${new_path}\" ]; then\n    echo -e \"\\\\033[31m${new_path}\\\\033[0m\" # print directory in red\n    cd \"${new_path}\" # switch to new directory\nelse\n    echo \"autojump: directory '${@}' not found\"\n    echo \"Try \\`autojump --help\\` for more information.\"\n    false\nfi\n\n}\n```\nThere should be no conceivable lag on autojump's part between the two lines, except for the time to execute cd (sshfs lag).\nCan you try these two things?\n1. With autojump loaded, run unset PROMPT_COMMAND. This will remove the autojump hook. Does it still lag for cd, ls, etc?\n2. Reload autojump. Unmount all sshfs. Mount sshfs localhost:/tmp/ /home/user/tmp/. Does it lag?\n. Run these commands:\n1. reload autojump\n2. unset PROMPT_COMMAND\n3. cd /tmp/ && autojump_add_to_database\n   Any lag?\n4. Repeat step 3 except with an sshfs mount. Any lag?\nI noticed you're in UT CS. I'm doing undergrad research with Shmatikov btw. :p\n. > 1. Autojump is loaded, and I j volumes gmm (request autocompletion suggestions) for somewhere in the remote mount. Not a big deal, and understandable why it might be laggy.\nautojump is finding all matching directories, and then checking to make sure they exist. That last part is probably what is causing the lag for remote systems.\n\n\nAutojump is loaded, my pwd is somewhere in the remote mount, and bash needs to show me the prompt. Doesn't matter if I've just j'ed in, or cd'd to a subdirectory, or exited sbt -- it lags before showing prompt.\n\n\nThis bothers me quite a bit, as autojump should not be causing lag in this situation. From what I can tell, it's caused by something in PROMPT_COMMAND but not by autojump_add_to_database(). If you have the time, I would look in autojump.bash.\nIn the bash wrapper, PROMPT_COMMAND is essentially set to a beefed up version of autojump_add_to_database, so I'm curious as to why it causes lag in certain cases, but not when called explicitly.\nOops, sorry for the wrong label. I saw linguistics and naturally thought of NLP. Ironic since my wife has a masters in linguistics. I took Mooney's info retrieval class a while back, great professor.\n. Closed due to inactivity.\n. Thanks for the commit!\n. No you haven't. Truth be told, jumpapplet was written 4 years ago and hasn't been updated since, so it has experienced significant bit rot.\nI'm looking at git blame for the file and it should have been broken as of 6+ months ago, but the fact that we receive no reports means it's unlikely anyone is using it. There are better application launchers for both Linux (Gnome Do, Unity Dash) and Mac (Quicksilver), or built-in (Windows 7, gnome-shell) so this is a redundant feature in a crowded space.\nI'm going to go ahead and remove it.\n. jumpapplet removed in 4ce2cb5929.\n. Closed as not an autojump bug, refer to this comment.\n. The installer script doesn't touch modify user's environmental settings due to Debian policy (and the fact that each distro is different). If that's not an issue for Arch, please go ahead and do it.\n. Hmm, which of these commands work and which of these fail?\n$ source /usr/local/Cellar/autojump/21.3.0/etc/autojump.sh\n$ zsh /usr/local/Cellar/autojump/21.3.0/etc/autojump.sh\n$ source /usr/local/Cellar/autojump/21.3.0/etc/autojump.zsh\nWhat's the output from these commands?\n$ echo ${SHELL}\n$ echo ${SHELL} | awk -F/ '{ print $NF }'\n. Try taking out all the oh-my-zsh stuff, create a new terminal and check $SHELL again. If it's set, then it's oh-my-zsh's problem.\nIf it's not, you can always cheat and set it yourself in ~/.zhsrc before calling autojump.\n. Thanks @jsliang.\nI was thinking about this exact feature during the past week; guess I wasn't the only one!\n. Sorry it's kind of buried in the documentation, but zsh autocompletion requires additional configuration.\n. It may be a bug. I don't have time right now but I'll look into it further when I can.\n. You need to add the autoload -U compinit && compinit line after loading autojump to get zsh tab completion working.\n. Possibly, but when I rolled back and installed that version I didn't get tab completion back.\n. Ok, it should work for sure now. T_T\n. Thanks!\n. Thanks for catching that.\n. Thanks again!\n. Thanks for all the patches so far. :D\n. Sounds like a good idea.\n. Off the top of my head I'm not sure how autocomplete for jc and jco would work. Say you had a directory /foo/bar/baz and typed in jc fo ba. How would you know which element to autocomplete?\n. Just a follow up, this isn't a bad idea but to be honest it's a lot of work. If you or someone else decides to implement this I'd be more than happy to merge the pull request.\n. I don't use Sublime, but if you get around to writing the plugin feel free to update this issue with the repo / plugin link and I'll add it to documentation.\n. Sounds good, looking forward to it. :D\n. Thanks!\n. Thanks @andreineculau and @xuhdev.\n. I haven't forgotten about this pull request but currently don't have time to test the changes.\n. Unfortunately I can't merge this because it introduces a few regression bugs, and ignores the same lines in the zsh version.\nAlso, --bash and --zsh was taken out because installation now installs both versions, and sourcing autojump.sh will determine which version to run at runtime depending on $SHELL.\n. Closing due to inactivity, feel free to recomment / reopen.\n. Thanks!\n. Unfortunately I can't merge this. Keeping both the relative and absolute path in the database is intentional as many users prefer to use relative paths over absolute ones. If you only use absolute paths, they get cd'ed into those when using autojump.\nUsually this is because users are using symlinks to a long path name and prefer the shorter name.\n. The Homebrew formula was updated recently, can you guys reinstall and see if you're having the same problems?\n. Just to clarify there has always been multiple wrapper shell files (autojump.bash, autojump.zsh, etc). However autojump.sh is supposed to be intelligently figure out which shell you're actually using and load the right file.\n@jbranchaud: The behavior of autojump.sh has changed relatively recently. If you're unable to load correctly with autojump.sh, could you open a ticket with the version of autojump you're using?\n. You shouldn't have to. Your .bashrc should source autojump.sh, which sources autojump.bash or .zsh depending on your shell. jc is defined in both of those files.\nCan you run a quick autojump --version and echo $SHELL please?\n. jc was added in v21.3.0.\n. No problem, glad everything worked out.\n. Thanks!\n. Thanks.\n. Sounds like a good idea, as the current j just jumps to the most heavily weighted entry that's not the current directory. Also seems to solve #146 as well.\n. Well autojump is already stateful with all the side effects being stored in the database.\nAnother option is to treat the last directory of the current path as the directory to rotate on. That means rotating between ~/a/foo and ~/b/foo is fine, but once they move to another directory it'll mess things up.\n. Do you think j should bounce between the top 2 foo entries or rotate through all foo entries?\n. After further thought, I'm not inclined to make autojump stateful. It may be confusing to users why j behaves differently every time it's called.\nI think tab completion will probably solve your usage case.\n. Thanks for catching that!\n. Nice catch, thanks!\n. Thanks for the report!\n. Not sure, is $SHELL set in the first case? That's how autojump.sh determines which version to load at runtime.\n. Closing as duplicate of #196.\n. I'll keep it in mind. I increment the version number fairly regularly and tag once a version is \"stable\".\n. Could you provide more info as to what's broken? Also what version are you on?\n. Closed due to inactivity.\n. Thanks for catching this, fixed in latest commit.\n. Do you have a missing or empty autojump, or are just some entries missing?\n. Are you able to reproduce it consistently? If so, can you list the reproduction steps?\n. What version are you running? How did you install it?\n. I'm closing this issue since autojump has been basically rewritten from scratch since this issue's original date.\nIf you can reproduce this error on v22.0 (master HEAD) then please reopen.\n. I have a pretty good idea of the root cause, let's consolidate conversation to #391.\n. Traveling at the moment, but I'll test and merge your commit once I can.\n. I've updated the install script to support fish in the fish_support branch, however there are a few problems.\n1. autojump sources autojump.sh to find the shell and figure out which version to run. Fish can't source this file properly.\n2. I'm unable to source autojump.fish as well:\nting@noa ~/c/autojump> . ~/.autojump/etc/profile.d/autojump.fish \n   fish: Unknown command \u201cexport\u201d\n   /home/ting/.autojump/etc/profile.d/autojump.fish (line 16):     export PATH ~/.autojump/bin $PATH\n                                                                   ^\n   in . (source) call of file \u201c/home/ting/.autojump/etc/profile.d/autojump.fish\u201d,\n       called on standard input,\n. You may be right about the .sh wrapper, it's a holdover from old code that doesn't make a lot of sense now. It was intended to solve some issue in the past, can't remember what it was though. Thoughts @joelthelion?\n. @jkuan: I moved install script to recommend the wrapper over shell specific calls a while ago, but not sure how many people install autojump via source vs package managers.\nI may start migrating away from the wrapper in the install script while leaving it alone to not break backwards compatibility.\n. The .sh wrapper is used by Homebrew as well since it ignores the install script and doesn't give a shell specific message.\n. Thanks for the patch!\n. Not exactly how you've described. Autojump does not crawl through directory structure beforehand, so you can only jump to directories you've visited before.\nThat being said, you can use jc (jump child) to jump into previously visited subdirectories of the current directory.\n. autojump uses change directory hooks (zsh) or modifies $prompt_command (bash).\n. Intentional, only documentation changes between the two versions.\n. I've bumped the version and updated the Homebrew formula.\n. Thanks for the PR!\n. jo <dir> opens OS specific file browser.\nautojump <dir> prints the first match. If not passed any arguments, autojump prints the most frequently used directory.\nIf you need more information, use autojump --stats and any combination of awk / sed / tr / etc.\n. @nateuni: iElectric's solution will work for now. I've fixed the bug but it will take a while before the Homebrew recipe gets updated and installs the updated version. Thanks for opening up the issue!\n. FYI j --add (which is really just a wrapper for autojump --add) already exists.\nSo you can already do recursive adding like so:\nfind -type d -exec autojump --add {} \\;\nI'm not inclined to add this feature since functionality already exists unless someone can convince me why it should be built in.\n. Thanks for contributing!\n. Closing as unnecessary bloat.\n. Or Asciinema.\n. Can you checkout master HEAD and reproduce this? This was fixed in b0957e50.\nautojump now adds directories in the background and thus should be non-blocking / no lag. There's the overhead of the subshell fork, but I don't have access to any non-SSD machines to test this.\n. Closing due to inactivity. Please reopen or create a new issue if it persists.\n. Thanks for following up @vitorgalvao!\n. The size of the database really doesn't have an impact as to performance, but this functionality already exists as autojump --purge. You can find more information with man autojump or autojump --help.\n. Autojump supports multiple arguments. In your example it would simply be j mu end.\n. I suggested this a while back but we decided not to do it.\nYou're better off just creating a new shell function that does what you want or modifying the j alias to add ls to the end of each jump. For example, add this to your ~/.bashrc:\nbash\nfunction jls {\n    j ${@} && ls\n}\n. GitHub came out with Releases to replace upload functionality.\nThe tag and resulting tarball name is up to the developer, but I'm not inclined to change the current pattern. Also the package name has always been in the URL.\n. Sorry, I don't have any spare cycles or experience with fish.\n. @uri Can you reproduce this problem with the latest version (v22)?\n. Thanks for catching that!\n. Thanks for the cleanup.\n. Relevant lines are currently illegible in man pages, but after the change markdown only looks mildly odd. Merged!\n. That sounds like a great idea. I'm a big fan of how smart casing works in vim, just never thought about implementing it in autojump.\nRight now you can manually set case insensitivity via an environment variable, but I'm inclined to make smart casing default behavior once implemented.\n. I've already implemented this in my rewrite branch, but am looking into fixing the bash tab completion, install.sh problems, and adding unit tests before merging into the master branch.\n. Implemented in d9b205c935.\n. I was unable to reproduce this but I do have a pre-existing autojump.txt. I was able to install and source it just fine:\n`` zsh\n\u256d\u2500wting@wireless-10-145-209-229.public.utexas.edu ~  \u2039python-2.7.5\u203a\n\u2570\u2500\u27a4  brew uninstall autojump && brew update && brew install autojump                         2013.12.13 16:54:25 CST\nUninstalling /usr/local/Cellar/autojump/21.6.9...\nAlready up-to-date.\n==> Downloading https://github.com/joelthelion/autojump/archive/release-v21.6.9.tar.gz\nAlready downloaded: /Library/Caches/Homebrew/autojump-21.6.9.tar.gz\n==> Caveats\nAdd the following line to your ~/.bash_profile or ~/.zshrc file (and remember\nto source the file to update your current session):\n  [[ -sbrew --prefix/etc/autojump.sh ]] && .brew --prefix`/etc/autojump.sh\nzsh completion has been installed to:\n  /usr/local/share/zsh/site-functions\n==> Summary\n  /usr/local/Cellar/autojump/21.6.9: 11 files, 104K, built in 2 seconds\n\u256d\u2500wting@wireless-10-145-209-229.public.utexas.edu ~  \u2039python-2.7.5\u203a\n\u2570\u2500\u27a4  source brew --prefix /etc/autojump.sh                                                 2013.12.13 19:59:21 CST\n\u256d\u2500wting@wireless-10-145-209-229.public.utexas.edu ~  \u2039python-2.7.5\u203a\n\u2570\u2500\u27a4  j --version                                                                             2013.12.13 19:59:59 CST\nautojump release-v21.6.9\n\u256d\u2500wting@wireless-10-145-209-229.public.utexas.edu ~  \u2039python-2.7.5\u203a\n\u2570\u2500\u27a4                                                                                          2013.12.13 20:00:02 CST\n``\n. Thanks!\n. CentOS 6 EOL is 2020, and is currently the only system still on Python 2.6 that I'm aware of. I don't plan on supporting Python 2.6 until the end of time, so please let me know when CentOS moves to Python 2.7 please. :)\n. Thanks for bringing this up, I still need to test migration from v21.6.9.\n. Hmm, it should be handled within the app and not installation process in case someone deletes / resets their data later on. I'll look into this.\n. I can't reproduce this. I've uninstalled, removed data folder, reinstalled and the data folder gets recreated properly. I've then deleted~/.local/share/autojump` multiple times and it always gets recreated.\nAre you able to reproduce this error?\n. That's odd. I've tested this on Ubuntu and OS X but can't reproduce the behavior.\n. Yeah I caught that a few hours later and fixed it in 573c1ea4.\n. Thanks.\n. Also you might want to look into using a linter (autojump has config settings for flake8. It's just some minor stuff like non-multiple of 4 indents and missing spaces.\n. This is fine if you don't feel like doing it, but your shell wrapper doesn't redirect autojump errors to an errors.log file.\n. Not at all, thanks for all your work so far!\n. Thanks!\n. There's a couple issues opened for this problem, please use #297 to discuss instead.\n. Hmm, there's a check to make sure directories exist before showing that's causing this.\n. Yeah the rewritten of find_matches() is a lot easier to modify.\n. Closing as duplicate of #235.\n. > Same problem here, without the float error. In my case ~/.local/share/autojump/data.tmp actually doesn't exist. Should I manually create it?\nWhat's the exact error you get? data.tmp shouldn't be manually created.\n. Thanks for the stack trace. I think it might be a race condition, but I won't have time to look into it until later.\n. @halilim: Thanks for the call that invokes the crash.\nI'm pretty sure it's a race condition when saving the database. autojump is called anytime cd is invoked, and in the past this was a blocking action. On slower, spinning hdds or network drives people were annoyed by this lag every time they changed directory so I made it async.\nHowever saving the database is a two step action to prevent data loss (save to temp file, then overwrite database with temp file). What's happening when you spam a bunch of cd commands at once is the multiple instances of autojump are clobbering each other.\nA quick fix is probably to use a tempfile.TemporaryFile() and copy over the existing database. This means that some directory changes may be lost during race conditions, but it's acceptable and certainly better than crashing and showing a stack trace.\nAnother fix is to use a semaphore with a lock file, and basically block writes until that process holds the lock. I think this process is overkill since most of the dropped writes with the above suggested implementation are from cd spamming. Also if autojump ever crashes in a middle of a write it could leave the system in an inconsistent state requiring user intervention to fix.\n. @halilim: Your issue should be fixed. Please try the latest commit and let me know if you still have problems.\n@xuhdev: I can't reproduce your issue. If it happens again please reopen this issue.\n. It should be.\n. lol yeah... that's something that would've been caught by static typing. :unamused: \n. Yeah I just added an assertion in 5ba2774ff.\n. Thanks for the report!\n. Thanks for the bug report.\n. I don't have any spare cycles right now. If you need to get autojump working, I suggest installing the stable version through yum or installing the latest git tag release-v21.6.9.\n. Can you try this again with the latest autojump?\nTo be honest this shouldn't be happening, as it's complaining that it can't read a line in autojump.txt. However if this is a clean installation then autojump.txt should be missing and it should never enter the relevant code block that tries to read lines from the data file.\n. You can manually do this via autojump --purge.\nThe main reason this isn't done automatically is because many users want to preserve folders from usb or network drives. Also this would require checking all database paths each time cd is invoked, unnecessarily lagging the system when slow IO devices are available.\n. Ubuntu gets autojump downstream from Debian, and I think it's a bit behind. Ubuntu 12.04 LTS reports v18 which is from 2011/11/18. If you want to use jc, I suggest you install from source from the latest stable version.\n. Hmm, I just reinstalled the Homebrew version for use on OSX / zsh and can't reproduce the issue. Going back into git blame history that pipe (|) has been there since the beginning of the project (2009).\nTry temporarily emptying out your .zshrc except for the Homebrew autojump.sh line. Do you still get the error? Also #232 may be relevant.\n. Have you tried the almost empty .zshrc suggestion I mentioned earlier?\n. Please try it with an empty .zshrc without oh-my-zsh.\n. You have a leftover source line in your  ~/.bashrc that needs to be removed.\n. Glad everything worked out.\n. What list of completions do you want without providing a needle?\n. Thanks everyone for reporting this issue / drilling down to the root cause.\n. Thanks for trying out master and reporting this. Zsh tab completion is working for me, but behavior has been changed such that you need to pass the full entry to autojump and not just the number.\nAre you saying that zsh tab completion for j intent__<tab> only produces a single . entry? What's the result of j -s | grep intent | wc -l?\n. Ubuntu gets autojump from Debian, and Debian will only release stable versions. The current version is still unstable so it probably won't get updated for a while. My suggestion is to checkout and use the GitHub version and submit tickets if you run into issues. :smiling_imp: \n. The reason autojump is not in PyPI is because the installation process requires installing shell scripts into random directories and some user setup in .bashrc.\n. Of course! I always try to tag releases once stable, but I guess I've forgotten to do it before the last batch of changes. In any case, I just tagged v21.7.1 and it's available as a tarball here.\nBTW thanks for maintaining autojump for distros!\n. @blueyed submitted a 27a01662a5e a few months back which should fix the issue. Can you reproduce with the latest version?\n. 5538cf7 is has been merged into master and a new version will be released once the PRs I've opened have been merged and marinated a bit.\n. If you run j -s do any directories get listed? Is \"C:\\github\" listed?\n. @Kazark: Directories only get added to the database after you visiting them once autojump is installed.\n@thegreendroid: Unfortunately I don't have a Windows machine to debug issues on, although your issue seems to be more Python 3.4 regex related. :sweat_smile:\n. You shouldn't have to, as autojump is supposed to support both Python 2.x and 3.x.\n. I'm sorry to hear about database issues. What version are you running? (autojump -v)\nI have the same settings in my .zshrc and they're necessary for tab completion. However you mentioned that you have it in your bash setup? Which shell are you running? (echo $SHELL)\n. What do you mean by losing settings? Do you have any export AUTOJUMP_ lines in your .zshrc? Is the database completely disappearing, or are you just losing entries?\n. When you mentioned settings, I thought you were referring to various environmental variables that could be used to modify autojump. e.g. export AUTOJUMP_IGNORE_CASE.\nWhen you type j -s | grep {folder} does the entry come up?\n. So autojump does periodic database maintenance removing the bottom 10% if it gets too large. It's possible that the trimming is removing those entries. Maintenance has been removed in the current version of autojump.\nFor now, edit ~/.autojump/bin/autojump and remove line 508: db.maintenance(). Entries should no longer drop off. Let me know if this does or doesn't fix your issue.\n. I assumed a user local installation, how'd you install autojump?\nOn May 17, 2014 8:57 AM, \"Chris Hough\" notifications@github.com wrote:\n\nhmmm.... that file does not exist on my machine?\n\nReply to this email directly or view it on GitHubhttps://github.com/joelthelion/autojump/issues/285#issuecomment-43391003\n.\n. It's at /usr/local/Cellar/autojump/21.7.1/bin/autojump.\n. Try doing a brew update && brew upgrade. The latest version should be\nv21.7.1.\n\nOn Thu, May 22, 2014 at 10:13 AM, Chris Hough notifications@github.comwrote:\n\nMy file located here /usr/local/Cellar/autojump/21.6.9/bin only contains:\n!/bin/bash\nexec \"/usr/local/Cellar/autojump/21.6.9/libexec/autojump\" \"$@\"\nThoughts @wting https://github.com/wting ?\n\nReply to this email directly or view it on GitHubhttps://github.com/joelthelion/autojump/issues/285#issuecomment-43837480\n.\n. You should probably modify /usr/local/Cellar/autojump/21.7.1/libexec/autojump\nthen.\n\nI'm not sure why there's so much redirection with Homebrew, but I guess\nthey have their reasons.\nOn Thu, May 22, 2014 at 2:36 PM, Chris Hough notifications@github.comwrote:\n\nok, I upgraded to /usr/local/Cellar/autojump/21.7.1/bin/autojump and now\nthat file states:\n!/bin/bash\nexec \"/usr/local/Cellar/autojump/21.7.1/libexec/autojump\" \"$@\"\n\nReply to this email directly or view it on GitHubhttps://github.com/joelthelion/autojump/issues/285#issuecomment-43850265\n.\n. I'm can't reproduce this. I tested v21.7.1 with Ubuntu 12.04 (13 levels deep, spinning hdd) and OSX (11 levels deep, ssd).\n\nEvery time you change directory, autojump loads the db from disk into memory, updates an entry, and writes it back to disk as a blocking action. If there was slowness I would attribute it to a large database or slow disk and it would affect all entries. I'm kind of surprised by the 8 directory deep cutoff, as that doesn't make any sense.\nCan you post the results of these commands please?\nshell\n$ time autojump --add /1/2/3/4/5\n$ time autojump --add /1/2/3/4/5/6/7/8/9/0\nFor what it's worth, adding paths is non-blocking in v22.0-alpha.\n. Yeah, I get that too since activating venvs triggers autojump. I'll have to think about how to config / add this.\n. virtualenvwrapper is a commonly used and it provides convenience scripts for creating / activating venvs. However venv shell functions workon() and deactivate() triggers a change to ~/.virtualenvs. Since this is done in an interactive shell, the directory changes are caught by autojump.\n. Homebrew's autojump formula uses v21.7.1 which hasn't been updated since Nov 2013. Also, your alias is breaking autojump since the actual j() function does a little bit more. The autojump program itself only outputs the correct directory to jump to, but the wrapper function is the one actually changing the directory.\n. You added the alias in 13 days ago. :neutral_face: \n. Mostly to avoid setup on @joelthelion's part and I wasn't sure if I was sticking to the tests. I've been using it to run tests on my own fork.\nWe should probably make CI testing an actual thing for this project.\n. I'm in favor of switching to py.test as well. I only used Testify out of familiarity.\n. @joelthelion: Can you enable Travis builds for autojump please?\nI've moved py.test migration into #300.\n. I'm in favor of 1. The original jc() was sort of a hacky implementation because I wasn't sure if the feature was going to be used or not. Turns out people like it enough, so we should probably do it the right way by adding a --child option and explicitly filtering for paths that contain pwd only.\nThe second option results in a case where people can start fuzzy matching into the middle of paths. I tend to remember and jump to the last directory of a path and assumed others used it the same way.\nBTW if you want to work on an issue assign yourself so we don't end up duplicating work. :+1: \n. Thanks!\n. Initialization scripts belong in /etc/profile.d/.\n. Superseded by #321. \n. Thanks!\n. autojump is moving over to Travis and py.test (#293) which should fix this issue.\n. This is probably something that needs to be tested and fixed, but we're all contributing on a volunteer basis and have busy schedules.\n. You don't use autojump directly to jump between directories; use j instead.\n. Hmm, this has always been the behavior. It was changed relatively recently to do this in the background now instead.\nWhat version are you running?\n. Can you please install the latest version from git (v22.0.0-alpha) and see if you can reproduce the behavior?\n. This repo's master is v22.x.\n. #303 is using an outdated version of autojump (v21.6.9) that blocks and adds paths to the database. The latest version (v22) is no longer blocking.\n. Follow these instructions.\n. tcsh is not supported. The shell wrappers requires a cd hook and a couple of functions (look at autojump.bash as an example). I'd be happy to merge a PR if you or someone adds support.\n. Can you run which j please?\n. This was manually merged in c889aa013, not sure why GitHub didn't automatically close this issue.\nThanks for the pull request!\n. @mdlawson is the best contact for Windows / Clink questions. I don't have a Windows box. :/\n. Thanks for the PR!\n. Fixed in b4cbcc2fd.\n. This feature has been removed from autojump.\n. I'm not inclined to change this since I find the current behavior useful.\n. This is intentional. You can always use cd to switch to home directories quickly.\n. We suggest appending to $PROMPT_COMMAND if you wish to customize it, example.\n. Version numbers should always be ascending, I'm trying to make a better effort about adhering to semantic versioning.\n. What shell and autojump version are you running? Tab completion works fine for me with v22.5.0 on zsh.. Can you try installing the version from this repo and seeing if you have the same issue?. On which distro / bash version is it not linux-gnu?\n. Thanks for the patch!\n. You can run autojump --version to see what version you're using. The Debian / apt-get version is at least 2 years out of date so I recommend using git clone and installing it from source.\n. Thanks for the PR!\n. Thanks for the PR!\n. I created a python directory, entered, jumped to it, etc and could not reproduce. This is not a problem with autojump, but rather your $PYTHONPATH is messed up.\npython\nFile \"/usr/lib/python2.7/tempfile.py\", line 32, in \nimport io as io\nFile \"/usr/local/caffe/python/caffe/io.py\", line 2, in \nimport skimage.io\nWhen Python tries to import io, it is importing /usr/local/caffe/python/caffe/io.py instead of the system library /usr/lib/python2.7/io.py'.\n. I've fixedmodify_autojump_sh()` in fa3ff58d. Can you guys check if this is still a problem in the latest version?\n. Sorry, forgot about; done!\n. I accidentally only pushed it to my fork (which I use for dev). Just pushed it to this repo.\n. Nice catch, thanks for the PR!\n. Thanks for the detailed bug report. It should work in the latest version, but if not please comment here and I'll reopen.\n. I'd be more than happy to accept pull requests. However due to lack of time and access to a Windows I can't add support myself.\n. This must be related to xonsh hitting HackerNews front page, thanks for searching instead of opening another ticket!\nThat said, I'm pretty swamped these days but am happy to accept pull requests. Basically one would need to write a shell wrapper that does the following at a minimum:\n- on every directory change add it to autojump's db\n- add a j function\n. Thanks!\n. This sounds like a pretty good idea.\nI need to think about how to add the ability for people to customize program behavior. In the past I used env vars but it became unwieldy, I may just end up using a config file.\n. Thanks!\n. Hey, so README.md is automatically generated from docs/. I've gone ahead and updated those docs and regenerated README.md in 113a84f9f0.\nThanks for updating the docs!\n. Try these steps and please paste the output here:\n1. Remove autojump from plugins=(git osx autojump) in .zshrc\n2. Close the terminal and open up another one.\n3. cat head $(brew --prefix)/etc/profile.d/autojump.sh\n4. which j\n5. j --version\n. j is just a wrapper around autojump. Does mv doc.md $(autojump Markdown) work for you?\n. So we're trying to separate two things here. autojump is the thing that works with input / output to find the best response. j is a thin wrapper around autojump. j isn't removing functionality, rather it's adding functionality for command line use.\n. Pretty sure @blueyed  meant this:\n\nj is not meant to be used with $(\u2026), but autojump is.\n. Fixed in release-v22.3.0 from @johannesgerer's patch.\n. @ElArtista: Thanks for the PR!\n\n@i-cant-git: Thanks for the bump!\n. Ugh, sorry I lost this PR in the noise. I'm collecting all related info in #391 \nClosing this not because I don't care, but trying to consolidate information. I'll see if this implementation solves the root issue.\nThanks for the PR!\n. The database should have been moved to ~/Library/autojump for OSX installations.\n. Hey, thanks for opening this issue.\nYou can remove non-existent paths via j --purge (more info: j --help or autojump --help). The reason this isn't default behavior is because people use network or thumb drives that are mounted / unmounted often.\nIf this doesn't answer your question, please reopen this issue.\n. Sorry for the late response but I have a rough idea of what's happening and how to fix it.\nOn every directory change autojump locks the data file and updates an entry, stored in a \"database\" like format. There's a race condition (exacerbated by shell scripts / commands that traverse directories like find) where the lock fails and the db gets overwritten.\nThe proper way to fix is either:\n1. Fix the file locking to be race condition safe.\n2. Switch from a database like format to an append only log (like .bash_history, .zsh_history, etc), and only calculate the weights when someone invokes autojump to switch directories (aka j).\n. Unless there's a lot of demand for this functionality, I'm inclined to prefer users to modify the source data itself. The text file is pretty easy to understand, and trying to predict what people are trying to delete based off a search is more error prone / higher cost of failure (compared to changing directories).\nThis is no different than removing an entry from ~/.bash_history.\n. Could you explain the motivation for adding multiple path support?\nAlso this change will require tests before it will be merged.\n. Well the Unixy thing to do is instead add this functionality into autojump, we should use other commands to compose the desired behavior:\nshell\n$ find . -type d -exec autojump --add {} \\;\nAnd if you do this often enough a convenience function is simply:\nbash\nadd_subdirs_to_autojump() {\n    find $1 -type d -exec autojump --add {} \\;\n}\n. Oops, thanks for finding that!. Please read the usage section or man pages.\n. This relates to #154, but let's keep conversation here. @turing-king: Try this:\nshell\n$ echo $SHELL\n$ which j\n$ declare -f j\n. j should not be aliased to autojump, it's overriding the j shell function.\n. You're not supposed to use it directly, you're supposed to be using the j function to jump to previously visited directories.\n. Thanks for the patch!\n. Thanks!\n. What shell are you using? In Bash and zsh, * gets expanded before it's passed to cd. For example in zsh:\nzsh\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a\n\u2570\u2500\u27a4  mkdir \"*top\"\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a\n\u2570\u2500\u27a4  cd *top\ncd:cd:10: string not in pwd: Desktop\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a\n\u2570\u2500\u27a4  ls\nbin/  code/  Desktop/  downloads/  *top/\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a\n\u2570\u2500\u27a4  cd \\*top\n\u256d\u2500ting@noa ~/*top \u2039python-2.7.3\u203a\n\u2570\u2500\u27a4  ..\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a\n\u2570\u2500\u27a4  rm -fr \\*top\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a\n\u2570\u2500\u27a4\n. k, I'm using zsh v4.3.17. This might be related to glob expansion.\nWhat's the result of setopt | grep glob?\n. Even mimicking your settings I can't reproduce. I'll need to retry this with zsh v5 when I have more time:\nzsh\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a\n\u2570\u2500\u27a4  setopt | grep glob\nnocaseglob\nextendedglob\nkshglob\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a\n\u2570\u2500\u27a4  autojump *top\n.\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a\n\u2570\u2500\u27a4\nBasically the * is not being expanded and is passed to autojump which then tries to interpret the string as a regex string but fails (since the valid regex would be .*top).\n. FYI the fix was pushed recently. If this is still a problem on non-Windows machines, please re-open.\n. Yeah... autojump doesn't C (at least not directly).\n. @najamkhn Thanks for helping out!\nRelated to #416.\n. @jared-hess: Never knew that about that change in later versions of Python. I guess it's a good way to make sure people don't depend on implicit sorting.\nDo you mind submitting a PR for that commit? Or I can go ahead and just make that change directly?\n. Thanks for getting this started and finding a better solution than manually escaping strings (#281).\nIt turns out the test runner was broken this entire time so I've taken the opportunity to start adding test coverage for at least the match_* functions. I've gotten a decent start here and will merge the branch into master once I've finished adding tests.\n. FYI the fix was pushed recently. If this is still a problem on non-Windows machines, please re-open.\n. Thanks for the help @bendem! This issue constantly comes up all the time so I need to tackle it head on. I've dumped some of my thoughts on fixing it in #416.\n. Probably because it's using echo $SHELL to check shell.\nYou're more than welcome to maintain a fork that has Android terminal support, but given the small user base and incompatible customizations I'm not inclined to merge related patches.\n. A simpler invocation would be j ebooks.\nj My eBooks passes two separate parameters to autojump, which is handled differently. What you probably want is j \"My eBooks\" to pass it as a single parameter.\nMultiple parameter invocation matches one parameter per node. For example given C:\\Program Files\\Adobe\\data you can jump that path via j adobe data or j program adobe data.\n. Thanks for the update! I've confirmed this when writing tests.\n. No, as I am pre-occupied with other things. The problem is with how regex is splitting up Windows paths.\nPull requests are more than welcome though.\n. If you don't have that many Unicode paths, you can fand remove the individual entry the autojump data file: ~/.local/share/autojump/autojump.txt. If you're on OS X it's in: ~/Library/autojump/<something>\n. Yeah, I'm pretty sure #391 is the culprit. If this happens again and/or you have more info please re-open. Thanks!\n. From the README.\n\nDirectories must be visited first before they can be jumped to.\n\nAlso run these commands:\nshell\n$ echo $SHELL\n$ which j\n$ declare -f j\n. Related to #416.\n. Should be fixed in v22.3.5 from @hwartig's PR. Please re-open this issue if the bug persists.\n. Yeah, use multiple arguments as described in the usage section. In your case it'd be j 1 test1 (or j project src).\n\n$ j temp1\n\nThe reason this doesn't work is you have to visit a directory before it's stored in the database.\n. Thanks for the PR!\n. Hey @bytor99999,\nThe Homebrew post install message should have included additional instructions on how to finish installing and using autojump. Please try re-installing autojump and following those instructions (unfortunately there's no easily linkable documentation at the moment).\n. Thanks, I'll make sure to improve that common alias in future versions.\n. Doh, that line needs a better debug info / better error handling.\nFor now the easiest way to fix that is to open ~/.local/share/autojump/autojump.txt and remove the offending directory entry. If you have multiple Unicode paths, I'd remove all of them.\n. ^^ that should fix the problem. If you're still having problems please re-open this issue.\n. Thanks!\n. jo is just a wrapper around Mac's open command. It'll open the path with whatever is the default behavior for a folder.\n. By default open uses Finder for directory links. I confirmed it a few hours ago and again just now (on a new MBP). If it opens in Terminal instead, it means it's a user-local configuration and not an issue related to autojump.\nUnfortunately I'm not fluent enough in OSX to help further.\n. Sounds like an issue with your shell's login script or the fish post-installation message.\n. Rolling the Windows crash exceptions into #436.\n. Hey thanks for the detailed bug report!\nUnfortunately I don't have access to a Windows machine. Can you update these Windows tests such that they reproduce the error you have? That way we can prevent future regression bugs.\n. You can mock it out for tests like so:\n``` python\nIn [1]: import os, mock\nIn [2]: os.sep\nOut[2]: '/'\nIn [3]: with mock.patch.object(os, 'sep', '\\'):\n   ...:     print(os.sep)\n   ...:   \n\\\n``\n.autojumpis a search engine that returns a result in the form of a directory path.\n-jotakes that result and opens a file browser (different per OS).\n-jtakes the result and \"jumps\" to it viacd`\nIf you want to jump and open a directory then it'd be: j scottming && jo scottming\nIf you do this often, you can shorten it as a shell function:\nbash\njump_and_open() {\n    j ${1} && jo ${1}\n}\n. Thanks for the PR and explanation!\n. I can't reproduce this.\n``` bash\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 brew install autojump                                                                                    2016.09.16 15:00:51 PDT\n==> Auto-updated Homebrew!\nUpdated Homebrew from 9fd97dd to a54c968.\nUpdated 3 taps (homebrew/core, homebrew/fuse, homebrew/versions).\n[..]\n==> Renamed Formulae\nsonar -> sonarqube\n==> Deleted Formulae\nhomebrew/versions/solr4    jing                       pyqwt                      sqsh                       yap\n==> Downloading https://homebrew.bintray.com/bottles/autojump-22.3.5.el_capitan.bottle.tar.gz\n################################################################## 100.0%\n==> Pouring autojump-22.3.5.el_capitan.bottle.tar.gz\n==> Caveats\nAdd the following line to your ~/.bash_profile or ~/.zshrc file (and remember\nto source the file to update your current session):\n  [[ -s $(brew --prefix)/etc/profile.d/autojump.sh ]] && . $(brew --prefix)/etc/profile.d/autojump.sh\nIf you use the Fish shell then add the following line to your ~/.config/fish/config.fish:\n  [ -f /usr/local/share/autojump/autojump.fish ]; and source /usr/local/share/autojump/autojump.fish\nzsh completion has been installed to:\n  /usr/local/share/zsh/site-functions\n==> Summary\n\ud83c\udf7a  /usr/local/Cellar/autojump/22.3.5: 19 files, 166.5K\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 autojump --version                                                                                       2016.09.16 15:01:33 PDT\nautojump v22.3.5\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 cd Movies                                                                                                2016.09.16 15:01:50 PDT\n\u256d\u2500@eikyo ~/Movies \u2039python-2.7.12\u203a\n\u2570\u2500 cd                                                                                                       2016.09.16 15:01:55 PDT\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 j Movies                                                                                                 2016.09.16 15:01:55 PDT\n/Users/wting/Movies\n\u256d\u2500@eikyo ~/Movies \u2039python-2.7.12\u203a\n\u2570\u2500                                                                                                          2016.09.16 15:01:57 PDT\n```\nAre you using the oh-my-zsh autojump plugin?\nIf you're familiar with git, have you tried clone this repository and using install.py?\n. Thanks for opening such a detailed issue!\nOne thing to consider is that micro-benchmarks can be kind of dangerous since single data points have have variance. Here I collect ~10 data points, remove autojump from my .zshrc, and then collect ~10 data points.\n``` shell\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:41:19 PDT\nreal    0.68s\nuser    0.43s\nsys 0.21s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:41:39 PDT\nreal    0.33s\nuser    0.23s\nsys 0.09s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:41:40 PDT\nreal    0.31s\nuser    0.22s\nsys 0.08s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:41:41 PDT\nreal    0.31s\nuser    0.22s\nsys 0.08s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:41:41 PDT\nreal    0.31s\nuser    0.22s\nsys 0.08s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:41:42 PDT\nreal    0.32s\nuser    0.22s\nsys 0.09s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:41:43 PDT\nreal    0.32s\nuser    0.23s\nsys 0.09s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:41:44 PDT\nreal    0.33s\nuser    0.23s\nsys 0.09s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:41:44 PDT\nreal    0.34s\nuser    0.24s\nsys 0.09s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 # removed autojump                       2016.09.27 15:41:45 PDT\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:42:07 PDT\nreal    0.53s\nuser    0.39s\nsys 0.13s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:42:11 PDT\nreal    0.29s\nuser    0.21s\nsys 0.07s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:42:11 PDT\nreal    0.29s\nuser    0.21s\nsys 0.07s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:42:12 PDT\nreal    0.29s\nuser    0.21s\nsys 0.07s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:42:13 PDT\nreal    0.29s\nuser    0.22s\nsys 0.07s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:42:14 PDT\nreal    0.30s\nuser    0.22s\nsys 0.07s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:42:15 PDT\nreal    0.30s\nuser    0.22s\nsys 0.07s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:42:16 PDT\nreal    0.29s\nuser    0.22s\nsys 0.07s\n\u256d\u2500@eikyo ~ \u2039python-2.7.12\u203a\n\u2570\u2500 time /bin/zsh -i -c exit                 2016.09.27 15:42:16 PDT\nreal    0.29s\nuser    0.21s\nsys 0.07s\n```\nIf we calculate the 50th percentile and standard deviation (I converted sec to ms):\n``` python\nIn [22]: np.median(np.array([680, 330, 310, 310, 320, 320, 340]))\nOut[22]: 320.0\nIn [23]: np.std(np.array([680, 330, 310, 310, 320, 320, 340]))\nOut[23]: 125.77920401745793\nIn [24]: np.median(np.array([530, 290, 290, 290, 300, 300, 290, 290]))\nOut[24]: 290.0\nIn [25]: np.std(np.array([530, 290, 290, 290, 300, 300, 290, 290]))\nOut[25]: 78.541390362025041\n```\nIt looks like autojump is adding 30 ms and increased variance (from all the disk seeks). I'm only testing this on SSDs, so the variance on a spinning hdds is probably higher.\n\nseems like you could:\n1. set an env var on the first brew --prefix\n\nEnvironment variables aren't persistent between shells.\n\n\nlet me set the env var myself and skip the brew --prefix entirely\n\n\nThis requires manual syncing of the env var and brew installs, and isn't user friendly.\n\n\nskip the command -v brew &>/dev/null since presumably it's redundant with brew --prefix\n\n\nThis is definitely doable.\nAt the end of the day loading autojump.zsh invokes spawning subshells and disk seeks costing 30 - 370 ms, some of which may or may not be attributed to brew --prefix.\nI would love to make autojump faster, is there any better evidence that localizes the issue to brew?\n. > > Environment variables aren't persistent between shells.\n\nin .zshrc you're using the . operator:\n\nIf you save brew --prefix to an env var, you have to set it again when opening a new terminal (new shell) eliminating any performance differences.\n\nso I'm not sure what your reasons are for using them respectively, but in both cases, it appears they don't spawn a new subshell,\n\nCalling the results of the function using two backticks or $() creates a subshell, which is a fork of the current shell and has associated overhead from copying address space into the new child process.\n``` bash\ncheck global install\nelif [ -s ${BREW_PREFIX}/share/autojump/autojump.${shell} ]; then\n    source ${BREW_PREFIX}/share/autojump/autojump.${shell}\nfi\n```\n\nand that appears to work fine. You could also put guards in like:\n\nIt looks like you're using an old version of autojump; that code was removed for security reasons. Can you please reproduce these performance results with the version from GitHub (v22.3.5)?\n. > local brew_prefix=${BREW_PREFIX:-$(brew --prefix)}\nlol that's some fancy paremater expansion.\nYeah I'd love a PR! BTW thanks for doing the legwork on this and investigating.\n. Thanks for the PR!\n. FYI this was reverted in b2f243ee because it causes issues on systems that don't have Homebrew installed.\n. Unfortunately OSX doesn't support XDG spec and it's preferred to use the OSX's equivalents.\n. It's not a matter of can you do it, but rather should you do it.\nXDG is a standard for freedesktop.org projects, which includes GNOME, KDE, XFCE, etc. It is a Linux thing, not a BSD or OSX thing.\nUsing XDG spec on OSX is like creating a \"My Documents\" folder on a Linux distro.\n. Thanks for the suggestion, I would love to package autojump as a pure Python package and host it on PyPI.\nThe problem I have is autojump needs to add / modify shell files, which is a bit difficult to implement or test in a pure Python implementation.\n. Thanks for the PR!. Yeah, this definitely frustrates me occasionally as well.\nSo there's two use cases I see. One is when the first entry is incorrect and the user wants to jump again:\nbash\n[~] $ j foo\n[~/foobar] $ j foo # I'm in the wrong foo directory\n[~/project/foobar] $\nThe other is the one you describe, muscle memory:\nbash\n[~] $ j foo\n[~/foobar] $ j foo # muscle memory\n[~/project/foobar] $ # ugh, I want to go back\nOne quick workaround is to simply use cd - to jump to the previously used directory (or - in zsh), which I use often.\nLet's say we remove jumping to next best directory.\nbash\n[~] $ j foo\n[~/foobar] $ j foo\n[~/foobar] $ # Nothing happened, why?\n^^ I think that will be confusing to people because they're running a command and nothing is happening, but it seems random and doesn't explain why. I'm not sure that would be a experience for most users.\n. I think it's a better design principle to build something that does what the user asks, rather than try and do better by anticipating the users' intent. In the last scenario, what is the user's intent?\n1. Jump to a better result. (This action is reversible.)\n2. User made a mistake, do nothing. (This action is not reversible.)\n. Thanks for letting me know! readme.md is actually generated from docs/*. As a result I've gone ahead and fixed the issue in https://github.com/wting/autojump/commit/0bf1ad5ba92bd8b6580d01424954737501efd428.. d is not a command provided by autojump, a built-in bash or zsh command, or a default command for OSX or Ubuntu. I'm not sure which program provides it, but running the following command on your laptop should provide more info:\nshell\n$ which d\n$ cat $(which d). Sounds like you already have an answer for yourself. :stuck_out_tongue: \nWhile it's a good idea, it's difficult to support different file managers on different OS'es.. Autojump has multi argument weighting, so you could do j 2015 stuff (j 15 stuff might work).\nctime or mtime as a signal might be an interesting signal for search, but that probably requires hooking into the filesystem or constantly polling files at lookup time.. Thanks for the descriptive bug report.\nI've fixed this in https://github.com/wting/autojump/commit/6a529f4f929042a37e7394d8c91ba31b479189a2. Let me test this locally for a while before cutting a release.. ",
    "othree": "Ok, I will keep looking for several days.\nThanks.\n. I have make sure autojump not work for mount bind.\nExecute autojump --stat will got something like this\n17.0:   /home/othree/.homesick/repos\n42.0:   .\n45.0:   /home/othree/apps/vim-plugins/eregex.vim\n114.0:  /home/othree/apps/vim\nTotal key weight: 352. Number of stored paths: 30\nThe second  line is all the weight I got while I work in that directionary.\nBut I can use symbolic link instead of mount bind.\n. Here is the results\n[/home/othree/www] -othree- >>> df -h -T                                                    [22:19]\nFilesystem    Type    Size  Used Avail Use% Mounted on\n/dev/sda1     ext3    144G   14G  123G  11% /\nudev         tmpfs    502M  252K  501M   1% /dev\nnone         tmpfs    502M   80K  502M   1% /dev/shm\nnone         tmpfs    502M  112K  502M   1% /var/run\nnone         tmpfs    502M     0  502M   0% /var/lock\nnone         tmpfs    502M     0  502M   0% /lib/init/rw\n[/home/othree/www] -othree- >>> pwd                                                         [22:19]\n/home/othree/www\n[/home/othree/www] -othree- >>> pwd -P                                                      [22:19]\n.\n. That's very cool for me ^^.\nBut I'm using zsh.\nI will take some time to take a look at bash's output.\n. I will find another computer to test.\nMaybe it only happens on my computer.\n. Ok, I will keep looking for several days.\nThanks.\n. I have make sure autojump not work for mount bind.\nExecute autojump --stat will got something like this\n17.0:   /home/othree/.homesick/repos\n42.0:   .\n45.0:   /home/othree/apps/vim-plugins/eregex.vim\n114.0:  /home/othree/apps/vim\nTotal key weight: 352. Number of stored paths: 30\nThe second  line is all the weight I got while I work in that directionary.\nBut I can use symbolic link instead of mount bind.\n. Here is the results\n[/home/othree/www] -othree- >>> df -h -T                                                    [22:19]\nFilesystem    Type    Size  Used Avail Use% Mounted on\n/dev/sda1     ext3    144G   14G  123G  11% /\nudev         tmpfs    502M  252K  501M   1% /dev\nnone         tmpfs    502M   80K  502M   1% /dev/shm\nnone         tmpfs    502M  112K  502M   1% /var/run\nnone         tmpfs    502M     0  502M   0% /var/lock\nnone         tmpfs    502M     0  502M   0% /lib/init/rw\n[/home/othree/www] -othree- >>> pwd                                                         [22:19]\n/home/othree/www\n[/home/othree/www] -othree- >>> pwd -P                                                      [22:19]\n.\n. That's very cool for me ^^.\nBut I'm using zsh.\nI will take some time to take a look at bash's output.\n. I will find another computer to test.\nMaybe it only happens on my computer.\n. ",
    "jostber": "I tried the latest git version today, but the same error occurs. If I try to reset the the permissions manually to \"jostein, users\" it is immediately reset to \"root, root\".\n. Seems like I closed this, but this issue is still open.\n. Here it is: \nA. Output of $PROMPT_COMMAND\n: ; { (autojump -a \"$(pwd -P)\"&)>/dev/null 2>>${AUTOJUMP_DATA_DIR}/.autojump_errors;} 2>/dev/null\nB. Permisssions and ownership folder\ndrwxr-xr-x 2 jostein users 4096 2010-10-27 06:06 autojump\nC. Files in autojump folder\n~/.local/share/autojump> ls -l\ntotal 8\n-rw------- 1 root    root  1445 2010-10-27 06:06 autojump_py\n-rw------- 1 jostein users 1190 2010-10-27 05:05 autojump_py.bak\nD. Content of autojump errors\nThis is always the same as I posted in my first post. Autojump worked fine for a while, and then I started getting this error.\nE. echo $SHELL\n/bin/bash\n. I work as root only when needed to do system configs. I have now downloaded the latest git version, removed the ~/.local/share/autojump directory and reinstalled autojump. The permissions for the directory seems right now. I will check what happens again after reboot. \n. It seems like the file ~/.local/share/autojump_py gets its permissions changed to \"root, root\" as soon as I log in as root with su. After that the error start occuring. I have also tried \"su -m\" and \"su -\", but that seemed not to make any difference. \nFor some reason root seems to affect the autojump_py file and changes its permissions just by logging in to the root user.\n. Actually \"su -\" seems to work differently, and does not affect the permissions on the discussed file.\n. Thanks! I use an alias from su to \"su -\" for my bash shell now so it works fine. \n. Autojump works correctly with \"su\" now if I don't cd outside the home directory when root. If I f.ex. cd to the root directory the same error occurs after \"su username\". \n. \"unset PROMPT_COMMAND\" in .bashrc seemed to solve the problem. Everything works fine now. Thanks!\n. I tried the latest git version today, but the same error occurs. If I try to reset the the permissions manually to \"jostein, users\" it is immediately reset to \"root, root\".\n. Seems like I closed this, but this issue is still open.\n. Here it is: \nA. Output of $PROMPT_COMMAND\n: ; { (autojump -a \"$(pwd -P)\"&)>/dev/null 2>>${AUTOJUMP_DATA_DIR}/.autojump_errors;} 2>/dev/null\nB. Permisssions and ownership folder\ndrwxr-xr-x 2 jostein users 4096 2010-10-27 06:06 autojump\nC. Files in autojump folder\n~/.local/share/autojump> ls -l\ntotal 8\n-rw------- 1 root    root  1445 2010-10-27 06:06 autojump_py\n-rw------- 1 jostein users 1190 2010-10-27 05:05 autojump_py.bak\nD. Content of autojump errors\nThis is always the same as I posted in my first post. Autojump worked fine for a while, and then I started getting this error.\nE. echo $SHELL\n/bin/bash\n. I work as root only when needed to do system configs. I have now downloaded the latest git version, removed the ~/.local/share/autojump directory and reinstalled autojump. The permissions for the directory seems right now. I will check what happens again after reboot. \n. It seems like the file ~/.local/share/autojump_py gets its permissions changed to \"root, root\" as soon as I log in as root with su. After that the error start occuring. I have also tried \"su -m\" and \"su -\", but that seemed not to make any difference. \nFor some reason root seems to affect the autojump_py file and changes its permissions just by logging in to the root user.\n. Actually \"su -\" seems to work differently, and does not affect the permissions on the discussed file.\n. Thanks! I use an alias from su to \"su -\" for my bash shell now so it works fine. \n. Autojump works correctly with \"su\" now if I don't cd outside the home directory when root. If I f.ex. cd to the root directory the same error occurs after \"su username\". \n. \"unset PROMPT_COMMAND\" in .bashrc seemed to solve the problem. Everything works fine now. Thanks!\n. ",
    "thelastnode": "Okay, cool, I use symlinks pretty heavily and refer to directories by the symlink. Changing the autojump.bash works very well, thanks!\nMaybe in a future version there can be an option?\n. You can use:\n     open autojump inbox\n. Okay, cool, I use symlinks pretty heavily and refer to directories by the symlink. Changing the autojump.bash works very well, thanks!\nMaybe in a future version there can be an option?\n. You can use:\n     open autojump inbox\n. ",
    "soutade": "autojump is under GPL, I only adapt it for my personal use :) Feel free to merge or not my commit.\nMy reflexion was : if I want to record/jump to a directory I use \"j\" command (that even do statistics) and if I want to navigate throught my FS I use \"cd\", because I know what to record or not. I save time and disk space.\nI think you may still merge the \"--purge\" option (usefull for current users), other things are extra features.\n. You can remove sudo command from install.(z)sh, specify an alternate path (--prefix or -p) to install autojump in your home directory and update $PATH.\n. autojump is under GPL, I only adapt it for my personal use :) Feel free to merge or not my commit.\nMy reflexion was : if I want to record/jump to a directory I use \"j\" command (that even do statistics) and if I want to navigate throught my FS I use \"cd\", because I know what to record or not. I save time and disk space.\nI think you may still merge the \"--purge\" option (usefull for current users), other things are extra features.\n. You can remove sudo command from install.(z)sh, specify an alternate path (--prefix or -p) to install autojump in your home directory and update $PATH.\n. ",
    "jvb": "Adding 'source /etc/profile' also worked for me. I don't know why it wasn't there in the first place. Thanks.\n. Adding 'source /etc/profile' also worked for me. I don't know why it wasn't there in the first place. Thanks.\n. ",
    "luckenbach": "Its not python thats breaking it its the lack of having the command \"python\" inside of a stock user path, instead they/we have \"python2\" as the command so I just linked python to python2\n[zhilliard@unixdev httpd]$ cat /proc/version \nLinux version 2.6.33-ARCH (thomas@evey) (gcc version 4.5.0 (GCC) ) #1 SMP PREEMPT Thu May 13 11:32:37 CEST 2010\n[zhilliard@unixdev httpd]$ ls -la which python\nlrwxrwxrwx 1 root root 9 Dec 22 10:02 /usr/bin/python -> ./python2\n[zhilliard@unixdev httpd]$ \n. Its not python thats breaking it its the lack of having the command \"python\" inside of a stock user path, instead they/we have \"python2\" as the command so I just linked python to python2\n[zhilliard@unixdev httpd]$ cat /proc/version \nLinux version 2.6.33-ARCH (thomas@evey) (gcc version 4.5.0 (GCC) ) #1 SMP PREEMPT Thu May 13 11:32:37 CEST 2010\n[zhilliard@unixdev httpd]$ ls -la which python\nlrwxrwxrwx 1 root root 9 Dec 22 10:02 /usr/bin/python -> ./python2\n[zhilliard@unixdev httpd]$ \n. ",
    "yhager": "I am using a pretty updated release (from the last week or so).\nThe commit you linked does not fix the sudo case (at least for me):\n    yuval@ginger ~$ data_dir=$([ -e ~/.local/share ] && echo ~/.local/share || echo ~)\n    yuval@ginger ~$ echo $data_dir\n    /home/yhager/.local/share\n    yuval@ginger ~$ sudo bash\n    root@ginger ~$ data_dir=$([ -e ~/.local/share ] && echo ~/.local/share || echo ~)\n    root@ginger ~$ echo $data_dir\n    /home/yhager/.local/share\nI saw d50de9196a139cdef5b1b78d6983c4ff0a66c337 that should fix the 'su' case, but it didn't help me with 'sudo bash'\n. Thanks.\nUsing Ubuntu, nothing special that I know of, but probably there is..\nIs it commit c877a51ad6b2d53ad20c7822f1d39312d3ce88a2 that fixed it, or d50de9196a139cdef5b1b78d6983c4ff0a66c337  ?\nWhich env var you think might be wrong in my case? \n. Yeah, sorry for not answering, haven't had the time to try and break it again. If I ever get this issue again, I'll reopen.\n. I am using a pretty updated release (from the last week or so).\nThe commit you linked does not fix the sudo case (at least for me):\n    yuval@ginger ~$ data_dir=$([ -e ~/.local/share ] && echo ~/.local/share || echo ~)\n    yuval@ginger ~$ echo $data_dir\n    /home/yhager/.local/share\n    yuval@ginger ~$ sudo bash\n    root@ginger ~$ data_dir=$([ -e ~/.local/share ] && echo ~/.local/share || echo ~)\n    root@ginger ~$ echo $data_dir\n    /home/yhager/.local/share\nI saw d50de9196a139cdef5b1b78d6983c4ff0a66c337 that should fix the 'su' case, but it didn't help me with 'sudo bash'\n. Thanks.\nUsing Ubuntu, nothing special that I know of, but probably there is..\nIs it commit c877a51ad6b2d53ad20c7822f1d39312d3ce88a2 that fixed it, or d50de9196a139cdef5b1b78d6983c4ff0a66c337  ?\nWhich env var you think might be wrong in my case? \n. Yeah, sorry for not answering, haven't had the time to try and break it again. If I ever get this issue again, I'll reopen.\n. ",
    "arnaudgelas": "Python 2.5.1\n. Python 2.5.1\n. ",
    "mrjabba": "This worked for me under Ubuntu, installing manually with a home directory install. Thanks!!\n. Correction. This worked under Ubuntu 10.10 (Maverick) with Python 2.6.6. This didn't work on my laptop running 10.04(lucid) with Python 2.6.5. But, I don't see that Python would be a factor. I'm getting the helpful \"autojump: command not found\" when I type \"j\" space then the name of a directory I want to jump to, then tab. I pretty much followed along above, editing the files to copy to my home directory in ~/bin/autojump. Weird.\n. OK. I think found my problem. I was having issues when I first set this up and had updated my path var.\nThis didn't work:\n    export PATH=$PATH:/home/mrjabba/.autojump/bin/autojump\nI changed it to this and it worked:\n    export PATH=$PATH:/home/mrjabba/.autojump/bin\nAnyway, the point was point at the autojump bin directory, not the script itself.\nAll fixed! :-)\nThis also worked when I tried wting's fork as you can see from .autojump path.\n. This worked for me under Ubuntu, installing manually with a home directory install. Thanks!!\n. Correction. This worked under Ubuntu 10.10 (Maverick) with Python 2.6.6. This didn't work on my laptop running 10.04(lucid) with Python 2.6.5. But, I don't see that Python would be a factor. I'm getting the helpful \"autojump: command not found\" when I type \"j\" space then the name of a directory I want to jump to, then tab. I pretty much followed along above, editing the files to copy to my home directory in ~/bin/autojump. Weird.\n. OK. I think found my problem. I was having issues when I first set this up and had updated my path var.\nThis didn't work:\n    export PATH=$PATH:/home/mrjabba/.autojump/bin/autojump\nI changed it to this and it worked:\n    export PATH=$PATH:/home/mrjabba/.autojump/bin\nAnyway, the point was point at the autojump bin directory, not the script itself.\nAll fixed! :-)\nThis also worked when I tried wting's fork as you can see from .autojump path.\n. ",
    "blueyed": "Thanks!\nThis works as expected.\n. You might be interested in the function c which I have created for this myself:\nc () {\n        local prev=$PWD\n        [[ -d \"$@\" ]] && cd \"$@\" || j \"$@\"\n        [[ $PWD != $prev ]] && ls $LS_OPTIONS\n}\n. This is more a problem of mc, which does not appear to execute aliases.\nThe same happens when trying to execute foo with alias foo='echo bar'.\n(I have only done a quick test using mc in mintty on Cygwin/Windows XP)\n. @wting completion is working for him, but this issue/question is about the handling/configuration of it.\n@kevinburke it is working the same for me: hitting 2 after completing/inserting the first option won't work: the \"2\" is meant to complete one of the possibilities and with menucomplete you automatically select the first item already.\n(You could undo that using <C-x>u)\nI am using nomenucomplete (default) and get the behavior you describe in the beginning.\nThe options/ambitious completions will be displayed when you press Tab a second time (after it has been completed to j php__). This is also when you can then use numbers, which basically only completes/selects one of the options.\nI don't know if there's an option to not use menucomplete, but list the possibilities right away (without having to press Tab a second time).\n. @wting if completion was working before or not depends on your zsh setup and especially if you called compinit after autojump has been added to $fpath.\nRegarding your 2nd example with menucomplete, the j auto<tab><tab> should have added the first option already when pressing Tab once and moved to the seconds option with the 2nd tab?!\nAre you saying that when you press 3 it completes the previous input, and does not accept the 2nd/selected option and inserting 3 as a new argument to \"j\"?\nThen that is likely to be a configuration thing - if you want input to be used for the current completion or if it should accept the current selection and use that as a new argument.\n. setopt nolistambiguous will display the list of possibilities right away, also if there is an ambitious prefix being completed first.\nThis will make j fo<tab> complete to j foo__ and display the list, without having to press Tab again.\n(thanks to Mikachu in #zsh).\n. The nolistambigious statement was just meant for information.\nOtherwise your behavior appears to be like mine.. I misunderstood your j aut<tab><tab> => j aut__<3><enter> example given above.\nI think this issue could be closed, @kevinburke should have all the information he needs.. :)\n. And just for completeness, pressing any key while having selected a menu entry will use that selected entry and add the key as a new argument for me - this is likely the same for you.\nE.g. j auto__<tab> => displays menu => <tab> => selects first entry => 3 => accepts first entry and adds \"3\" as 2nd argument.\n. After having worked on servers much too often where only Python 2.6 is available (and the pain to install the current python release in /usr/local has not been big enough), I provide a pull request to make it work with Python 2.6 again (at least) - just by shipping argparse and using it in case it is not available otherwise.\nThis might have some drawbacks (verify license, being backward compatible to the shipped argparse), but OTOH being unable to use the (current) autojump release is very frustrating if you're used to it.\nPlease consider adopting this pull request, which would make autojump much more useful/usable for the guys maintaining old servers.. :)\n. I am also affected to this: after having run into a permission issue with the db again (after using sudo -i), I have upgraded autojump.\nBut also after moving .local/share/autojump out, it did not kept adding new directories again.\nFrom an strace I have seen that ~/.local/share/autojump/autojump.txt.bak is being accessed..\nI wonder what file/state triggers the is-an-upgrade-but-I-will-not-upgrade state.\n. I have tried using \"bin\" directly, but it did not appear to work - I then thought that zsh only considers directories which only contain \"_*\" files.\nAnyway, the symlink is a good enough workaround for me.\nI just wanted to bring this up, because I think there are others who like to avoid running some installer, if it is not necessary.\n. Oh.. there is something different involved: it misbehaved for a specific entry only.\nApart from that, it completed another entry differently:\n% j down__2__/home/user/Downloads\n/etc/network/if-down.d\nThis looks like the list for completion is not in sync with the list used by autojump to resolve these special entries.\n. Later, after chosing different entries from this list:\n% j down__3__/home/user/Downloads \nautojump: directory 'down__3__/home/user/Downloads' not found\nI have some entries in the autojump database which match \"down\" but do not exist.\nI guess autojump is removing them from the completion, but not from the list used for resolving \"foo__X__\" paths.\nAs a workaround autojump --purge will likely resolve this issue, but there appears to be a bug anyway.\n. I think autojump should rather use the path provided after \"X\", instead of looking up the database entry X anyway: otherwise the database might have changed in the background in the meantime.\nAssumung that the path exists that is; \"1\" should always get looked up from the DB, as with \"1/does/not/exist\". But \"1/tmp\" would always go to \"/tmp\", regardless of the DB.\n. > Missing directories are not auto-purged because some users will mount drives temporarily (usb drives, network locations, etc).\nThat makes sense, of course.\nBut while these entries are not shown in the completion list/menu, they are then used when the autojump command is called.\nWhat do you think about my previous comment(s), e.g. about just using the provided path?\nHow are you going to address this issue?\n. Well, not checking each entry would be fine.\nThe issue is that number X from the completion list is not necessarily the same number in the list of matches without the non-existing ones.\nAs said before, not the \"X\" prefix should get used for changing the directory, but the path provided afterwards.\n. This is probably dumb, but since I type it, I'll leave it anyway - I have no knowledge about the internals of autojumps list/scores:\nCouldn't you look at the top entries (sorted by score) and the apply a length-based filter on them?\nIf there is no score property available, you may want to sort the top five(?) entries by length - but that would mix in totally unrelated entries probably.\n. It would be great, if you could provide a testcase to reproduce this.\nE.g. by creating a dir like mentioned above, cding to it and then using it from autojump.\n(It is not that useful having to download a 512mb file - and that would just be the lesser part of the issue)\nI am guessing there's an infinite loop involved somewhere, where autojump might be confused about the dir not being added already, while it is.\n. Awesome, thanks!\nYou should update the docs accordingly, I have added a pull request for that: https://github.com/joelthelion/autojump/pull/151\n. JFI: the _j script is only used for completion, and should not be executable.\nWith the current install.py script that does not appear to be an issue though - so this appears to got reverted (which is good).\n. Ok.\nMy understanding has been that autojump would jump to the second best directory, if the current working directory is the best match already.\nWould that make sense for a feature request then?\n. That fixed it.\nThanks!\n. Re-opening, see my comment at https://github.com/joelthelion/autojump/commit/a99183bf8b7cf322161ca42bcf4d70dbc3741673#commitcomment-2324384\n. I have another issue in this context: autojump will return no results if the current directory matches, but gets skipped now (again). Also, j will return an error (because of the empty result from autojump).\nI think this should not get considered to be an error. What do you think?\n. Yes, it's just the error that is irritating.\n. I am closing this issue - I have opened #182 instead for the return code issue.\n. I think the stalling should be addressed/fixed with my pull request, which has been merged:\nhttps://github.com/joelthelion/autojump/pull/169\n. > Not sure if this is the correct approach, it needs another set of eyes.\nThis does not make sense, since e.g. jc foo is supposed to limit the queries to subdirectories, which is not given anymore then.\nRegarding your question on SO: you do not need to replace what's on the user's command line, do you? You only need to change the command used for getting completions.\nFWIW, i would be more interested in zsh completion for it.. ;)\n. I think it might be not too confusing (and is what I have expected).\nI could imagine solving this by keeping a list of least recently jumped to directories in the current shell, and skip these - until you change to another directory manually, or execute some command (which could be detected using shell hooks, if there is support for this (e.g. with Zsh)).\n. (Probably) not fixed: see my commit note: https://github.com/joelthelion/autojump/commit/473c8b8daacee008e20958990d0a72811fbf8f5d#commitcomment-5041730\n. Thanks for fixing it this fast!\n. I would have expected the entry which gets chosen without --complete to be also the first with --complete.\n. I thought about adding an assert to the beginning of the function..\nThis apart, is there any other way to make sure a list gets passed as argument?\nIt seems like this issue (accidentally iterating over a string) happens much too often in Python by accident.\n. It seems there was invalid unicode data:\n\nFile \"/root/.autojump/bin/autojump_data.py\", line 68, in\n    tupleize = lambda x: (x[1], float(x[0]))\n    UnicodeEncodeError: 'decimal' codec can't encode characters in position 0-65: invalid decimal Unicode string\n\nIt would have been interesting to see your autojump.txt file / the broken entry and to find out how it ended up there.\nI am closing this issue for now. Feel free to re-open it in case this happens again.\n. Can you please try autojump master?\nIt looks like the autojump -a line mentioned in the error is quite old already (changed in commit 4716493).\nThen, if you still get an error, try to manually invoke the line that's referred to in the error.\nWith the original error, it might complain about >>|, which might indicate that it's not zsh, which is being invoked as a shell.\nIt's also likely that some oh-my-zsh option is interfering here, but then I am using some forked and adjusted omz myself. You could try to reproduce it using zsh -f (no config).\n. Like I've assumed before, it is likely that a non-zsh shell picks up this file, especially when it's in /etc/profile.d.\nIs this where ArchLinux installs it? That seems to be wrong then.\n@dphilpot \n\nStill having this error when i execute a \"shell build\" command in sublime text.\n\nThis is also likely to use a non-zsh shell.\nIs it correct that you've installed autojump via brew?\nDoes this also add a file into /etc/profile.d?\nCan you both try sh -i and bash -i from a terminal, to see if that triggers the error?\nThen sh -c true and bash -c true might be interesting to try, too.\n. Oh, it seems autojump's install script copies all shell files into /etc/profile.d! (https://github.com/joelthelion/autojump/blob/master/install.py#L197-L204)\nThis appears to be wrong and a bug with the install script/process.\nThere should only be generic, POSIX compatible scripts therein probably, and not all the files for the different flavors autojump supports.\nI could imagine having only a single autojump_init.sh script therein, which would source/use the matching script for the current shell.\n. It seems like the install script should not use etc/profile.d at all, but put the shell scripts (meant to be sourced) into args.prefix, 'share', 'autojump', like it's done with the Debian/Ubuntu package (/usr/share/autojump/):\n\n% cat /tmp/autojump-21.7.1/debian/autojump.install \nbin/autojump      usr/bin\nbin/autojump.bash usr/share/autojump\nbin/autojump.zsh  usr/share/autojump\nbin/autojump.sh   usr/share/autojump\nbin/autojump.fish usr/share/autojump\nbin/_j            usr/share/zsh/functions/Completion/Unix\n. FWIW, you can install it manually easily (for zsh in this case):\n1. git clone https://github.com/joelthelion/autojump ~/.autojump\n2. Add source ~/.autojump/bin/autojump.zsh to ~/.zshrc\n3. For completion, copy/symlink ~/.autojump/bin/_j somewhere into your zsh's fpath (I have added a symlink in ~/.dotfiles/oh-my-zsh/functions, which is in my $fpath).\n. @erbridge \nIt seems like the executable scripts /etc/profile.d/*.sh get sourced upon login (e.g. via LightDM on Ubuntu).\nautojump.sh detects the current shell and then sources the appropriate file.\nTherefore, everything looks OK, although I still think that autojump should not install the files there.\n\nCan you provide the output of ls -l /etc/profile.d/autojump*, please?\nFrom the install script, autojump.sh shouldn't be executable.\nArchLinux might behave differently regarding the handling of /etc/profile.d.\nI assume you have installed /etc/profile.d/autojump.zsh manually? In your ~/.zshrc?\n. All (but limited to the max. number of return values of course), sorted by weight (as with the others).\nIt's just as with any other completion, e.g. cd <tab> (usually/can) provide all entries.\nWhile at it, it would be nice to have an option to specify the maximum number of values to be returned (in case that's not possible already).\n. I have added a PR for this: #296.\nBefore merging it, I would like to get some feedback / OK on it first.\n. The scripts are executable, but the Makefile lines should have a leading ./.\nFixed in https://github.com/joelthelion/autojump/commit/8c7f0bf994c778d0f126977aeef8c4807ac75384.\n. Thanks for your PR!\nI have looked into merging it, but decided to fix it in a different way: https://github.com/joelthelion/autojump/commit/27a01662a5e09118a34ce83c567aec63f1943069\n. Should be fixed, see https://github.com/joelthelion/autojump/pull/262\n. Sorry, I was wrong. I will push a real fix for this.\n. Fixed via https://github.com/joelthelion/autojump/pull/262.\n. The error is sre_constants.error: bogus escape: '\\\\U'.\nIt probably comes from autojump incorrectly/not escaping the \"U\" in \"C:\\Users...\".\nFrom the Python documentation;\n\n.. versionchanged:: 3.3\n   The '\\u' and '\\U' escape sequences have been added.\n\nI am pushing a fix for this, please retry it with autojump master.\n. At least the README, install.py and uninstall.py should get updated for this, too.\n. @Kazark \nCan you please post the output from just calling autojump and autojump foo?\n. @Kazark \nI have pushed a fix for Python 3.3+ (commit 9547262).\nPlease test if that fixes your issue.\n. The extra space with jc looks related to https://github.com/joelthelion/autojump/issues/289.\nCan you please provide the output as requested in\nhttps://github.com/joelthelion/autojump/issues/289#issuecomment-47093149 ?\nAre you using cling?\n. j trunk should work however, can you confirm this?\n. 1.\n\nj trunk doesn't work either, actually.\n\nBut autojump -s contained trunk, doesn't it?\nTry j foo, for foo being something in the database (autojump -s).\n2.\n\njc.bat\n\nAssuming this is the one from / based on https://github.com/joelthelion/autojump/blob/master/bin/jc.bat:\n```\n@echo off\necho %|>nul findstr /rx -.\nif ERRORLEVEL 1 (\n  %~dp0\\j.bat %cd% %\n) else (\n  python %~dp0\\autojump %\n)\n```\nI am not sure which path gets triggered here, but please provide calling it manually:\n1. autojump C:\\bitbucket design\n2. autojump \"C:\\bitbucket design\"\nIt seems like jc.bat is like case 2 above. But when the first case also does not work for you, the problem is somewhere else.\nMaybe @mdlawson can shed some light into this?! (since he added the Windows support)\n. For starters, try to avoid including C:\\ or any backslashes for that matter, because this might trigger some bug with escaping and forward vs. backward slashes.\nWhat does autojump trunk say (assuming that \"trunk\" is somewhere in autojump -s)?\nMaybe there is an issue with checking if a path exists?!\nYou could try adding check_entries = False as first line of the function find_matches in bin/autojump:\ndef find_matches(entries, needles, check_entries=True):\n    check_entries = False\nApart from that, I think you would have to dig into the code yourself and add some print() statements to see what's going on.\n. Please provide the output of which jc.\nI assume you are using zsh?\nIt looks like jc somehow calls j '/Users/dyross/Desktop/ abc' instead of j /Users/dyross/Desktop/ abc.\n. Which autojump version are you using?\nPlease try using the latest (Git master).\nIIRC there have been fixes in this regard to make sure the directory exists.\n. That would be version 21.6.9-1 then (for Ubuntu Trusty).\nPlease check if /home/parallels/.local/share/autojump/ and its parent dirs exists:\nls -ld /home/parallels/.local/share/autojump\nls -ld /home/parallels/.local/share\nls -ld /home/parallels/.local\nAfter that, in case /home/parallels/.local/share/autojump does not exist, you can manually create it: mkdir -p /home/parallels/.local/share/autojump, but please check the existence before.\nYou might also want to try the latest version, which has maybe a fix for this, and if not, should get a fix for it: https://github.com/joelthelion/autojump#manual\n. Does it really refer to /Users/$USER/.local/share, or is that substituted by you?\n. It looks like \"/Users/$USER\" does not exist yet, which I assume should exist?!\n\nFile \"/Users/$USER/anaconda/lib/python2.7/os.py\", line 157, in makedirs\nmkdir(name, mode)\nOSError: [Errno 13] Permission denied: '/Users/$USER\nI tried sudo mkdir to create the directory but still run into the same issue.\n\nWhich dir did you create?\nYou would then have to change the owner of it (chown).\nLook at the permissions of each segment:\nls -ld /Users/$USER\nls -ld /Users/$USER/.local\nls -ld /Users/$USER/.local/share\nAlso try autojump master. IIRC there have been fixes in this regard.\n. Glad you've got it solved.\nIt looks like $USER:staff /Users/$USER/.local/share/autojump/ did exist then already (since you did not mkdir it).\nIt would have been interesting to know if only the permissions of the autojump dir where messed up, which might have happened by invoking autojump with sudo somehow.\nCan you post the output from the ls commands I've posted above, please - even when it's a bit too late?\n. Looks alright then now.\nMaybe the provided information helps if somebody is running into this again.\n\nThanks again! Autojump is awesome.\n\nThank you. Enjoy it :)\nI have pushed some fixes today, so in case you are not using Git's master, but the stable release, you might want to upgrade.\n. We should probably use py.test instead of testify.\nAs stated on https://github.com/Yelp/Testify, Yelp is switching to py.test themselves and recommends using it. I haven't used testify myself, but am a fan of py.test.\nAlso, I have just noticed that testify does not appear to work on Python 3.4.\n. @joelthelion \nPing. You would need to do step 1 and 2 of http://docs.travis-ci.com/user/getting-started/.\nThanks!\n. @wting \nPlease see the discussion at #267.\nI think it would make sense to only have the .sh file in /etc/profile.d, which detects the shell (but fixed as stated in https://github.com/joelthelion/autojump/issues/256#issuecomment-37501647).\nI am re-opening this PR to discuss it further.\n. Looks good to me in general.\nI would prefer to have it split in multiple lines, and maybe even have the logic moved to the function autojump_add_to_database (which could be renamed then).\nLooking further, it might not be necessary to have a call to awk there, too - sed or bash itself might be enough.\nFYI: in zsh the chpwd hook is being used.\n. Re-opening, but won't look into merging currently myself.\n. I am closing the issue for autojump then, there's nothing we can do if a (suffix) alias gets defined afterwards.\n. @wting \nI've amended and fixed the commit now.\nIt still needs a fix for fish at least though.\n. The problem is that $new_path is defined during the cd and powerline is probably using the chpwd hook, and you probably have the autonamedirs option set:\nAUTO_NAME_DIRS\n          Any parameter that is set to the absolute name of a directory immediately becomes a name\n          for that directory, that will be used by the `%~' and related prompt sequences, and will\n          be  available when completion is performed on a word starting with `~'.  (Otherwise, the\n          parameter must be used in the form `~param' first.)\n. > I'm sure autonamedirs is turned on by oh-my-zsh or something.\nYes, probably. I recommend turning it off in general. I use \"hash -d\" to define short directory names explicitly.\n. This could be achieves by some extra option (and maybe an alias for it).\nYou could then use this option for your own alias.\n. :+1: \nShould I merge/push it to master?\nWhich version should be used?\n-VERSION = '22.0.2-beta'\n+VERSION = '22.1.0-beta'\n. LGTM, but I have no fish shell to test it.\n. Thanks!\nLGTM, but untested.\n. Yes, this would need a generic form / all variants of https://github.com/joelthelion/autojump/blob/master/install.py#L139-L161 in the README.\n. @EvanDorsky \nj is not meant to be used with $(\u2026), but j is.\nOTOH j could maybe detect that it is being used like that and then skip the coloring?!\n. Yeah, sorry for the confusion.\n. Can you provide a traceback and more information in general, please?\n. Thanks!\n. Thanks!\nThis works as expected.\n. You might be interested in the function c which I have created for this myself:\nc () {\n        local prev=$PWD\n        [[ -d \"$@\" ]] && cd \"$@\" || j \"$@\"\n        [[ $PWD != $prev ]] && ls $LS_OPTIONS\n}\n. This is more a problem of mc, which does not appear to execute aliases.\nThe same happens when trying to execute foo with alias foo='echo bar'.\n(I have only done a quick test using mc in mintty on Cygwin/Windows XP)\n. @wting completion is working for him, but this issue/question is about the handling/configuration of it.\n@kevinburke it is working the same for me: hitting 2 after completing/inserting the first option won't work: the \"2\" is meant to complete one of the possibilities and with menucomplete you automatically select the first item already.\n(You could undo that using <C-x>u)\nI am using nomenucomplete (default) and get the behavior you describe in the beginning.\nThe options/ambitious completions will be displayed when you press Tab a second time (after it has been completed to j php__). This is also when you can then use numbers, which basically only completes/selects one of the options.\nI don't know if there's an option to not use menucomplete, but list the possibilities right away (without having to press Tab a second time).\n. @wting if completion was working before or not depends on your zsh setup and especially if you called compinit after autojump has been added to $fpath.\nRegarding your 2nd example with menucomplete, the j auto<tab><tab> should have added the first option already when pressing Tab once and moved to the seconds option with the 2nd tab?!\nAre you saying that when you press 3 it completes the previous input, and does not accept the 2nd/selected option and inserting 3 as a new argument to \"j\"?\nThen that is likely to be a configuration thing - if you want input to be used for the current completion or if it should accept the current selection and use that as a new argument.\n. setopt nolistambiguous will display the list of possibilities right away, also if there is an ambitious prefix being completed first.\nThis will make j fo<tab> complete to j foo__ and display the list, without having to press Tab again.\n(thanks to Mikachu in #zsh).\n. The nolistambigious statement was just meant for information.\nOtherwise your behavior appears to be like mine.. I misunderstood your j aut<tab><tab> => j aut__<3><enter> example given above.\nI think this issue could be closed, @kevinburke should have all the information he needs.. :)\n. And just for completeness, pressing any key while having selected a menu entry will use that selected entry and add the key as a new argument for me - this is likely the same for you.\nE.g. j auto__<tab> => displays menu => <tab> => selects first entry => 3 => accepts first entry and adds \"3\" as 2nd argument.\n. After having worked on servers much too often where only Python 2.6 is available (and the pain to install the current python release in /usr/local has not been big enough), I provide a pull request to make it work with Python 2.6 again (at least) - just by shipping argparse and using it in case it is not available otherwise.\nThis might have some drawbacks (verify license, being backward compatible to the shipped argparse), but OTOH being unable to use the (current) autojump release is very frustrating if you're used to it.\nPlease consider adopting this pull request, which would make autojump much more useful/usable for the guys maintaining old servers.. :)\n. I am also affected to this: after having run into a permission issue with the db again (after using sudo -i), I have upgraded autojump.\nBut also after moving .local/share/autojump out, it did not kept adding new directories again.\nFrom an strace I have seen that ~/.local/share/autojump/autojump.txt.bak is being accessed..\nI wonder what file/state triggers the is-an-upgrade-but-I-will-not-upgrade state.\n. I have tried using \"bin\" directly, but it did not appear to work - I then thought that zsh only considers directories which only contain \"_*\" files.\nAnyway, the symlink is a good enough workaround for me.\nI just wanted to bring this up, because I think there are others who like to avoid running some installer, if it is not necessary.\n. Oh.. there is something different involved: it misbehaved for a specific entry only.\nApart from that, it completed another entry differently:\n% j down__2__/home/user/Downloads\n/etc/network/if-down.d\nThis looks like the list for completion is not in sync with the list used by autojump to resolve these special entries.\n. Later, after chosing different entries from this list:\n% j down__3__/home/user/Downloads \nautojump: directory 'down__3__/home/user/Downloads' not found\nI have some entries in the autojump database which match \"down\" but do not exist.\nI guess autojump is removing them from the completion, but not from the list used for resolving \"foo__X__\" paths.\nAs a workaround autojump --purge will likely resolve this issue, but there appears to be a bug anyway.\n. I think autojump should rather use the path provided after \"X\", instead of looking up the database entry X anyway: otherwise the database might have changed in the background in the meantime.\nAssumung that the path exists that is; \"1\" should always get looked up from the DB, as with \"1/does/not/exist\". But \"1/tmp\" would always go to \"/tmp\", regardless of the DB.\n. > Missing directories are not auto-purged because some users will mount drives temporarily (usb drives, network locations, etc).\nThat makes sense, of course.\nBut while these entries are not shown in the completion list/menu, they are then used when the autojump command is called.\nWhat do you think about my previous comment(s), e.g. about just using the provided path?\nHow are you going to address this issue?\n. Well, not checking each entry would be fine.\nThe issue is that number X from the completion list is not necessarily the same number in the list of matches without the non-existing ones.\nAs said before, not the \"X\" prefix should get used for changing the directory, but the path provided afterwards.\n. This is probably dumb, but since I type it, I'll leave it anyway - I have no knowledge about the internals of autojumps list/scores:\nCouldn't you look at the top entries (sorted by score) and the apply a length-based filter on them?\nIf there is no score property available, you may want to sort the top five(?) entries by length - but that would mix in totally unrelated entries probably.\n. It would be great, if you could provide a testcase to reproduce this.\nE.g. by creating a dir like mentioned above, cding to it and then using it from autojump.\n(It is not that useful having to download a 512mb file - and that would just be the lesser part of the issue)\nI am guessing there's an infinite loop involved somewhere, where autojump might be confused about the dir not being added already, while it is.\n. Awesome, thanks!\nYou should update the docs accordingly, I have added a pull request for that: https://github.com/joelthelion/autojump/pull/151\n. JFI: the _j script is only used for completion, and should not be executable.\nWith the current install.py script that does not appear to be an issue though - so this appears to got reverted (which is good).\n. Ok.\nMy understanding has been that autojump would jump to the second best directory, if the current working directory is the best match already.\nWould that make sense for a feature request then?\n. That fixed it.\nThanks!\n. Re-opening, see my comment at https://github.com/joelthelion/autojump/commit/a99183bf8b7cf322161ca42bcf4d70dbc3741673#commitcomment-2324384\n. I have another issue in this context: autojump will return no results if the current directory matches, but gets skipped now (again). Also, j will return an error (because of the empty result from autojump).\nI think this should not get considered to be an error. What do you think?\n. Yes, it's just the error that is irritating.\n. I am closing this issue - I have opened #182 instead for the return code issue.\n. I think the stalling should be addressed/fixed with my pull request, which has been merged:\nhttps://github.com/joelthelion/autojump/pull/169\n. > Not sure if this is the correct approach, it needs another set of eyes.\nThis does not make sense, since e.g. jc foo is supposed to limit the queries to subdirectories, which is not given anymore then.\nRegarding your question on SO: you do not need to replace what's on the user's command line, do you? You only need to change the command used for getting completions.\nFWIW, i would be more interested in zsh completion for it.. ;)\n. I think it might be not too confusing (and is what I have expected).\nI could imagine solving this by keeping a list of least recently jumped to directories in the current shell, and skip these - until you change to another directory manually, or execute some command (which could be detected using shell hooks, if there is support for this (e.g. with Zsh)).\n. (Probably) not fixed: see my commit note: https://github.com/joelthelion/autojump/commit/473c8b8daacee008e20958990d0a72811fbf8f5d#commitcomment-5041730\n. Thanks for fixing it this fast!\n. I would have expected the entry which gets chosen without --complete to be also the first with --complete.\n. I thought about adding an assert to the beginning of the function..\nThis apart, is there any other way to make sure a list gets passed as argument?\nIt seems like this issue (accidentally iterating over a string) happens much too often in Python by accident.\n. It seems there was invalid unicode data:\n\nFile \"/root/.autojump/bin/autojump_data.py\", line 68, in\n    tupleize = lambda x: (x[1], float(x[0]))\n    UnicodeEncodeError: 'decimal' codec can't encode characters in position 0-65: invalid decimal Unicode string\n\nIt would have been interesting to see your autojump.txt file / the broken entry and to find out how it ended up there.\nI am closing this issue for now. Feel free to re-open it in case this happens again.\n. Can you please try autojump master?\nIt looks like the autojump -a line mentioned in the error is quite old already (changed in commit 4716493).\nThen, if you still get an error, try to manually invoke the line that's referred to in the error.\nWith the original error, it might complain about >>|, which might indicate that it's not zsh, which is being invoked as a shell.\nIt's also likely that some oh-my-zsh option is interfering here, but then I am using some forked and adjusted omz myself. You could try to reproduce it using zsh -f (no config).\n. Like I've assumed before, it is likely that a non-zsh shell picks up this file, especially when it's in /etc/profile.d.\nIs this where ArchLinux installs it? That seems to be wrong then.\n@dphilpot \n\nStill having this error when i execute a \"shell build\" command in sublime text.\n\nThis is also likely to use a non-zsh shell.\nIs it correct that you've installed autojump via brew?\nDoes this also add a file into /etc/profile.d?\nCan you both try sh -i and bash -i from a terminal, to see if that triggers the error?\nThen sh -c true and bash -c true might be interesting to try, too.\n. Oh, it seems autojump's install script copies all shell files into /etc/profile.d! (https://github.com/joelthelion/autojump/blob/master/install.py#L197-L204)\nThis appears to be wrong and a bug with the install script/process.\nThere should only be generic, POSIX compatible scripts therein probably, and not all the files for the different flavors autojump supports.\nI could imagine having only a single autojump_init.sh script therein, which would source/use the matching script for the current shell.\n. It seems like the install script should not use etc/profile.d at all, but put the shell scripts (meant to be sourced) into args.prefix, 'share', 'autojump', like it's done with the Debian/Ubuntu package (/usr/share/autojump/):\n\n% cat /tmp/autojump-21.7.1/debian/autojump.install \nbin/autojump      usr/bin\nbin/autojump.bash usr/share/autojump\nbin/autojump.zsh  usr/share/autojump\nbin/autojump.sh   usr/share/autojump\nbin/autojump.fish usr/share/autojump\nbin/_j            usr/share/zsh/functions/Completion/Unix\n. FWIW, you can install it manually easily (for zsh in this case):\n1. git clone https://github.com/joelthelion/autojump ~/.autojump\n2. Add source ~/.autojump/bin/autojump.zsh to ~/.zshrc\n3. For completion, copy/symlink ~/.autojump/bin/_j somewhere into your zsh's fpath (I have added a symlink in ~/.dotfiles/oh-my-zsh/functions, which is in my $fpath).\n. @erbridge \nIt seems like the executable scripts /etc/profile.d/*.sh get sourced upon login (e.g. via LightDM on Ubuntu).\nautojump.sh detects the current shell and then sources the appropriate file.\nTherefore, everything looks OK, although I still think that autojump should not install the files there.\n\nCan you provide the output of ls -l /etc/profile.d/autojump*, please?\nFrom the install script, autojump.sh shouldn't be executable.\nArchLinux might behave differently regarding the handling of /etc/profile.d.\nI assume you have installed /etc/profile.d/autojump.zsh manually? In your ~/.zshrc?\n. All (but limited to the max. number of return values of course), sorted by weight (as with the others).\nIt's just as with any other completion, e.g. cd <tab> (usually/can) provide all entries.\nWhile at it, it would be nice to have an option to specify the maximum number of values to be returned (in case that's not possible already).\n. I have added a PR for this: #296.\nBefore merging it, I would like to get some feedback / OK on it first.\n. The scripts are executable, but the Makefile lines should have a leading ./.\nFixed in https://github.com/joelthelion/autojump/commit/8c7f0bf994c778d0f126977aeef8c4807ac75384.\n. Thanks for your PR!\nI have looked into merging it, but decided to fix it in a different way: https://github.com/joelthelion/autojump/commit/27a01662a5e09118a34ce83c567aec63f1943069\n. Should be fixed, see https://github.com/joelthelion/autojump/pull/262\n. Sorry, I was wrong. I will push a real fix for this.\n. Fixed via https://github.com/joelthelion/autojump/pull/262.\n. The error is sre_constants.error: bogus escape: '\\\\U'.\nIt probably comes from autojump incorrectly/not escaping the \"U\" in \"C:\\Users...\".\nFrom the Python documentation;\n\n.. versionchanged:: 3.3\n   The '\\u' and '\\U' escape sequences have been added.\n\nI am pushing a fix for this, please retry it with autojump master.\n. At least the README, install.py and uninstall.py should get updated for this, too.\n. @Kazark \nCan you please post the output from just calling autojump and autojump foo?\n. @Kazark \nI have pushed a fix for Python 3.3+ (commit 9547262).\nPlease test if that fixes your issue.\n. The extra space with jc looks related to https://github.com/joelthelion/autojump/issues/289.\nCan you please provide the output as requested in\nhttps://github.com/joelthelion/autojump/issues/289#issuecomment-47093149 ?\nAre you using cling?\n. j trunk should work however, can you confirm this?\n. 1.\n\nj trunk doesn't work either, actually.\n\nBut autojump -s contained trunk, doesn't it?\nTry j foo, for foo being something in the database (autojump -s).\n2.\n\njc.bat\n\nAssuming this is the one from / based on https://github.com/joelthelion/autojump/blob/master/bin/jc.bat:\n```\n@echo off\necho %|>nul findstr /rx -.\nif ERRORLEVEL 1 (\n  %~dp0\\j.bat %cd% %\n) else (\n  python %~dp0\\autojump %\n)\n```\nI am not sure which path gets triggered here, but please provide calling it manually:\n1. autojump C:\\bitbucket design\n2. autojump \"C:\\bitbucket design\"\nIt seems like jc.bat is like case 2 above. But when the first case also does not work for you, the problem is somewhere else.\nMaybe @mdlawson can shed some light into this?! (since he added the Windows support)\n. For starters, try to avoid including C:\\ or any backslashes for that matter, because this might trigger some bug with escaping and forward vs. backward slashes.\nWhat does autojump trunk say (assuming that \"trunk\" is somewhere in autojump -s)?\nMaybe there is an issue with checking if a path exists?!\nYou could try adding check_entries = False as first line of the function find_matches in bin/autojump:\ndef find_matches(entries, needles, check_entries=True):\n    check_entries = False\nApart from that, I think you would have to dig into the code yourself and add some print() statements to see what's going on.\n. Please provide the output of which jc.\nI assume you are using zsh?\nIt looks like jc somehow calls j '/Users/dyross/Desktop/ abc' instead of j /Users/dyross/Desktop/ abc.\n. Which autojump version are you using?\nPlease try using the latest (Git master).\nIIRC there have been fixes in this regard to make sure the directory exists.\n. That would be version 21.6.9-1 then (for Ubuntu Trusty).\nPlease check if /home/parallels/.local/share/autojump/ and its parent dirs exists:\nls -ld /home/parallels/.local/share/autojump\nls -ld /home/parallels/.local/share\nls -ld /home/parallels/.local\nAfter that, in case /home/parallels/.local/share/autojump does not exist, you can manually create it: mkdir -p /home/parallels/.local/share/autojump, but please check the existence before.\nYou might also want to try the latest version, which has maybe a fix for this, and if not, should get a fix for it: https://github.com/joelthelion/autojump#manual\n. Does it really refer to /Users/$USER/.local/share, or is that substituted by you?\n. It looks like \"/Users/$USER\" does not exist yet, which I assume should exist?!\n\nFile \"/Users/$USER/anaconda/lib/python2.7/os.py\", line 157, in makedirs\nmkdir(name, mode)\nOSError: [Errno 13] Permission denied: '/Users/$USER\nI tried sudo mkdir to create the directory but still run into the same issue.\n\nWhich dir did you create?\nYou would then have to change the owner of it (chown).\nLook at the permissions of each segment:\nls -ld /Users/$USER\nls -ld /Users/$USER/.local\nls -ld /Users/$USER/.local/share\nAlso try autojump master. IIRC there have been fixes in this regard.\n. Glad you've got it solved.\nIt looks like $USER:staff /Users/$USER/.local/share/autojump/ did exist then already (since you did not mkdir it).\nIt would have been interesting to know if only the permissions of the autojump dir where messed up, which might have happened by invoking autojump with sudo somehow.\nCan you post the output from the ls commands I've posted above, please - even when it's a bit too late?\n. Looks alright then now.\nMaybe the provided information helps if somebody is running into this again.\n\nThanks again! Autojump is awesome.\n\nThank you. Enjoy it :)\nI have pushed some fixes today, so in case you are not using Git's master, but the stable release, you might want to upgrade.\n. We should probably use py.test instead of testify.\nAs stated on https://github.com/Yelp/Testify, Yelp is switching to py.test themselves and recommends using it. I haven't used testify myself, but am a fan of py.test.\nAlso, I have just noticed that testify does not appear to work on Python 3.4.\n. @joelthelion \nPing. You would need to do step 1 and 2 of http://docs.travis-ci.com/user/getting-started/.\nThanks!\n. @wting \nPlease see the discussion at #267.\nI think it would make sense to only have the .sh file in /etc/profile.d, which detects the shell (but fixed as stated in https://github.com/joelthelion/autojump/issues/256#issuecomment-37501647).\nI am re-opening this PR to discuss it further.\n. Looks good to me in general.\nI would prefer to have it split in multiple lines, and maybe even have the logic moved to the function autojump_add_to_database (which could be renamed then).\nLooking further, it might not be necessary to have a call to awk there, too - sed or bash itself might be enough.\nFYI: in zsh the chpwd hook is being used.\n. Re-opening, but won't look into merging currently myself.\n. I am closing the issue for autojump then, there's nothing we can do if a (suffix) alias gets defined afterwards.\n. @wting \nI've amended and fixed the commit now.\nIt still needs a fix for fish at least though.\n. The problem is that $new_path is defined during the cd and powerline is probably using the chpwd hook, and you probably have the autonamedirs option set:\nAUTO_NAME_DIRS\n          Any parameter that is set to the absolute name of a directory immediately becomes a name\n          for that directory, that will be used by the `%~' and related prompt sequences, and will\n          be  available when completion is performed on a word starting with `~'.  (Otherwise, the\n          parameter must be used in the form `~param' first.)\n. > I'm sure autonamedirs is turned on by oh-my-zsh or something.\nYes, probably. I recommend turning it off in general. I use \"hash -d\" to define short directory names explicitly.\n. This could be achieves by some extra option (and maybe an alias for it).\nYou could then use this option for your own alias.\n. :+1: \nShould I merge/push it to master?\nWhich version should be used?\n-VERSION = '22.0.2-beta'\n+VERSION = '22.1.0-beta'\n. LGTM, but I have no fish shell to test it.\n. Thanks!\nLGTM, but untested.\n. Yes, this would need a generic form / all variants of https://github.com/joelthelion/autojump/blob/master/install.py#L139-L161 in the README.\n. @EvanDorsky \nj is not meant to be used with $(\u2026), but j is.\nOTOH j could maybe detect that it is being used like that and then skip the coloring?!\n. Yeah, sorry for the confusion.\n. Can you provide a traceback and more information in general, please?\n. Thanks!\n. ",
    "vreeze42": "Thanks. I installed ActivePython 3.1, changed the first line in autojump so it says python3, and then it works fine. Thanks again, this should save a lot of keystrokes!\n. Thanks. I installed ActivePython 3.1, changed the first line in autojump so it says python3, and then it works fine. Thanks again, this should save a lot of keystrokes!\n. ",
    "luciferous": "I have the same problem. I'm using autojump 14 on OS X installed via brew.\nTo reproduce just cd as root into another directory:\n```\n$ ls -l ~/.autojump_py\n-rw-------  1 neuman  staff  17025 Mar 28 11:29 /Users/neuman/.autojump_py\n$ sudo -s\ncd /tmp\nls -l /Users/neuman/.autojump_py\n-rw-------  1 root  staff  17025 Mar 28 11:44 /Users/neuman/.autojump_py\nexit\n$ j\nProblem with autojump database, trying to recover from backup...\nTraceback (most recent call last):\n  File \"/usr/local/bin/autojump\", line 132, in \n    path_dict=open_dic(dic_file)\n  File \"/usr/local/bin/autojump\", line 117, in open_dic\n    shutil.copy(dic_file+\".bak\",dic_file)\n  [...snip...]\nIOError: [Errno 13] Permission denied: '/Users/neuman/.autojump_py'\n```\n. I have the same problem. I'm using autojump 14 on OS X installed via brew.\nTo reproduce just cd as root into another directory:\n```\n$ ls -l ~/.autojump_py\n-rw-------  1 neuman  staff  17025 Mar 28 11:29 /Users/neuman/.autojump_py\n$ sudo -s\ncd /tmp\nls -l /Users/neuman/.autojump_py\n-rw-------  1 root  staff  17025 Mar 28 11:44 /Users/neuman/.autojump_py\nexit\n$ j\nProblem with autojump database, trying to recover from backup...\nTraceback (most recent call last):\n  File \"/usr/local/bin/autojump\", line 132, in \n    path_dict=open_dic(dic_file)\n  File \"/usr/local/bin/autojump\", line 117, in open_dic\n    shutil.copy(dic_file+\".bak\",dic_file)\n  [...snip...]\nIOError: [Errno 13] Permission denied: '/Users/neuman/.autojump_py'\n```\n. ",
    "jamilbk": "I can confirm this as a bug as well. Using autojump 14 on OSX, but appears to be present in the latest git as well.\nSame issue as luciferous.\n. I can't do any in-depth testing right now, but so far the issue looks fixed! ~/.autojump_py didn't change ownership after a sudo -s session.\nThanks!\n. Thanks! Was having this issue and this fixes it. Hope to see Homebrew update its autojump soon.\n. I can confirm this as a bug as well. Using autojump 14 on OSX, but appears to be present in the latest git as well.\nSame issue as luciferous.\n. I can't do any in-depth testing right now, but so far the issue looks fixed! ~/.autojump_py didn't change ownership after a sudo -s session.\nThanks!\n. Thanks! Was having this issue and this fixes it. Hope to see Homebrew update its autojump soon.\n. ",
    "nolanl": "I'm happy to make that change, but I did leave it in the python side for a reason.\nConceptually, I think of \"don't count $HOME\" as a policy decision.  I think it makes sense to keep all policy decisions centralized in one place.  Adding the check to the bash side is simply an optimization.\nAnd an optional one at that; I didn't do it for the zsh side, since I've never used it.\nLet me know if you still want me to pull it from the python side, and I'll update the zsh side, though I'm not really in a position to test that.\n. I'm happy to make that change, but I did leave it in the python side for a reason.\nConceptually, I think of \"don't count $HOME\" as a policy decision.  I think it makes sense to keep all policy decisions centralized in one place.  Adding the check to the bash side is simply an optimization.\nAnd an optional one at that; I didn't do it for the zsh side, since I've never used it.\nLet me know if you still want me to pull it from the python side, and I'll update the zsh side, though I'm not really in a position to test that.\n. ",
    "mcmire": "Okay, looked into this some more and it looks like this is not autojump, this is something else I'm using which is setting $PS1 inappropriately. So all is well!\n. Okay, looked into this some more and it looks like this is not autojump, this is something else I'm using which is setting $PS1 inappropriately. So all is well!\n. ",
    "plytro": "The rational for closing this is very single server minded. I have a shared home dir nfs mounted on around 70-80 servers, of which I have sudo on only a handful dozen where I could possibly install this. That means of the 80 servers I access, 68 of them will fail with an error message that could easily be avoided with this fix.\n. The rational for closing this is very single server minded. I have a shared home dir nfs mounted on around 70-80 servers, of which I have sudo on only a handful dozen where I could possibly install this. That means of the 80 servers I access, 68 of them will fail with an error message that could easily be avoided with this fix.\n. ",
    "redacted": "Autojump could be installed in place by adding the clone directory to the path. \nI use a similar approach to \"install\" autojump from a git submodule.\nExample code: https://gist.github.com/959571\nEdit: An \"~/.autojump\" directory containing the autojump program and the shell-specific code might be a better approach. \n. Autojump could be installed in place by adding the clone directory to the path. \nI use a similar approach to \"install\" autojump from a git submodule.\nExample code: https://gist.github.com/959571\nEdit: An \"~/.autojump\" directory containing the autojump program and the shell-specific code might be a better approach. \n. ",
    "int3": "I usually use 2-4 letter patterns. Maybe I'm a bad typist, but even with those short lengths I do make typos -- character transpositions, usually. In fact, I think that I am more prone to making these transpositions with strings that I type frequently as I tend to hurry through them.\nI'm not sure approximate matching would increase the risk of doing things in the wrong place. Suppose that I expect a jump to happen, but I make a typo and remain in the same directory. If I don't notice this, I could make my next commands in the wrong directory anyway. However, I agree that we should minimize the possibility of command mis-execution. Here's a suggestion: How about notifying the user when autojump uses approximate matching? E.g. the result could be displayed in a different color or in bold font.\n. I usually use 2-4 letter patterns. Maybe I'm a bad typist, but even with those short lengths I do make typos -- character transpositions, usually. In fact, I think that I am more prone to making these transpositions with strings that I type frequently as I tend to hurry through them.\nI'm not sure approximate matching would increase the risk of doing things in the wrong place. Suppose that I expect a jump to happen, but I make a typo and remain in the same directory. If I don't notice this, I could make my next commands in the wrong directory anyway. However, I agree that we should minimize the possibility of command mis-execution. Here's a suggestion: How about notifying the user when autojump uses approximate matching? E.g. the result could be displayed in a different color or in bold font.\n. ",
    "arronmabrey": "So is this method of scoring is similar to quicksilver flex matching?\nmit \u21d2 Massachusetts Institute of Technology\nffox \u21d2 Firefox\nosx \u21d2 Mac OS X\nms \u21d2 Microsoft Corporation\nvia http://stackoverflow.com/questions/411411/flex-matching-many-database-records-quicksilver-like-or-launchy-like-matching\nBecause I can tell you as a long time user of quicksilver this type a flex matching has a much beter user experience then the current implementation.\nIt looks like someone ported the quicksilver scoring method to javascript and it doesn't seem to be that complicated if you want to take a look. https://github.com/rmm5t/liquidmetal\n. Just wondering if there is still any intrest in this topic?\n. No I didn't try it out. I was hoping to get a little more clarification from the original poster on wether or not its behavior was similar to what I previously described.\n. That would be really awesome and I would very appreciative \n. I made this video a while when I first commented on this issue and never linked to it.\nhttp://vimeo.com/28159788\nIt just goes over the ranking/weight of the individual directories and how quicksilver and autojump differ.\nI'm not saying I want autojump to be quicksilver and to change everything but I think these are some things I would like people to weigh in on.\n. So is this method of scoring is similar to quicksilver flex matching?\nmit \u21d2 Massachusetts Institute of Technology\nffox \u21d2 Firefox\nosx \u21d2 Mac OS X\nms \u21d2 Microsoft Corporation\nvia http://stackoverflow.com/questions/411411/flex-matching-many-database-records-quicksilver-like-or-launchy-like-matching\nBecause I can tell you as a long time user of quicksilver this type a flex matching has a much beter user experience then the current implementation.\nIt looks like someone ported the quicksilver scoring method to javascript and it doesn't seem to be that complicated if you want to take a look. https://github.com/rmm5t/liquidmetal\n. Just wondering if there is still any intrest in this topic?\n. No I didn't try it out. I was hoping to get a little more clarification from the original poster on wether or not its behavior was similar to what I previously described.\n. That would be really awesome and I would very appreciative \n. I made this video a while when I first commented on this issue and never linked to it.\nhttp://vimeo.com/28159788\nIt just goes over the ranking/weight of the individual directories and how quicksilver and autojump differ.\nI'm not saying I want autojump to be quicksilver and to change everything but I think these are some things I would like people to weigh in on.\n. ",
    "shelhamer": "The Damerau-Levenshtein string edit distance factors in insertions, deletions, single-char substitution, and adjacent transpositions. Approximate matching with it makes up for most typing errors, but is not the same as Quicksilver-style matching. If I recall correctly, Quicksilver gives bonuses for certain types of match based on how people like to abbreviate, like using initialisms as in your \"Massachusetts Institute of Technology\" example.\nI personally am a big fan of quicksilver matching and make transposition errors typing sometimes, so I'm considering hacking it out in python and commenting it up. I'd use it.\n. I'm fighting my way through merge conflicts for the approximate matching pull request now. I'll link to the branch in my fork when it's ready.\nOnce that runs, I'll integrate Quicksilver-style flex matching and then we'll have to try it out and see what works best for people. I could see exact match > flex match > approx match producing a useful ranking.\n. I merged int3's approximate matching with HEAD and pushed it to shelhamer/autojump approx. Just drop in the new autojump to /usr/local/bin/ or wherever and try it out.\nI had to update the code a bit since it was based on v15. I decided to go further and refactored match finding a little to avoid duplication, though I think I can clean it up more.\nI'm going to implement flex matching next and come up with a plan for differentiating results, like listing approximate/flex matches in a different color.\n. Rather than editing /etc/bashrc as it is system-wide and might affect other behaviors, I would think it preferable to edit the autojump.bash script to update the PROMPT_COMMAND without trouble. Perhaps this difference could be handled by the brew installer for autojump.\nFor your reference, the fix (without touch /etc/bashrc) is to edit to the autojump.bash script is to replace line 47 with:\nexport PROMPT_COMMAND=\"$AUTOJUMP ; ${PROMPT_COMMAND:-:}\"\nwhich is compatible with the trailing semi-colon in the redefinition of PROMPT_COMMAND in Lion's /etc/bashrc.\n. @houbysoft, @mlangenberg: I've submitted a pull request to homebrew with an updated Formula that detects Lion and makes the necessary edit automatically. This would take care of this issue until it is resolved in the autojump installer itself.\n. As commented over at #58, here's a less invasive fix:\nRather than editing /etc/bashrc as it is system-wide and might affect other behaviors, I would think it preferable to edit the autojump.bash script to update the PROMPT_COMMAND without trouble. Perhaps this difference could be handled by the brew installer for autojump.\nFor your reference, the fix (without touch /etc/bashrc) is to edit to the autojump.bash script is to replace line 47 with:\nexport PROMPT_COMMAND=\"$AUTOJUMP ; ${PROMPT_COMMAND:-:}\"\nwhich is compatible with the trailing semicolon in PROMPT_COMMAND in Lion's /etc/bashrc.\nEDIT: I've submitted a pull request to homebrew that updates its autojump Formula to make this edit automatically on Lion installs.\nEDIT EDIT: I have submitted a pull request to joelthelion with a fix to autojump.bash which fixes Lion compatibility and shouldn't break other systems\u2013it is a simple change that will not break any working setting of $PROMPT_COMMAND. However, in the spirit of honesty, I wasn't able to test on anything other than ubuntu.\n. I'd like to second @jasonmp85. I submitted a pull request to homebrew with an inline fix for this issue, but they marked it as an upstream issue and rejected it. The next step is to have a new tagged package that can be pulled in by homebrew.\n. @joelthelion, thanks for tagging the release! We can consider this fixed on your side. I will submit the pull request to Homebrew to include the new version on their end.\n. Hmm, I was able to download it, but now I receive the same 403. I have had intermittent trouble with github in the past where recently-made download packages give a 403. I assume it will go away on it own, as that has been my previous experience.\n. I still have the 403 as well. I'm surprised I was able to download it originally, and am beginning to suspect I might have snagged the tag instead of the package download.\nYou are right that the download link and md5 have to be updated together. I submitted the pull request for the current v16 download (that is not working), and would be happy to re-submit when the download link is fixed.\nThe choice is either wait or switch to linking to the tag tarball instead of the package tarball. I'd rather wait for the package, since linking to the package has been the choice thus far.\n. As a workaround, you can edit /usr/local/Library/Formula/autojump.rb (or your custom homebrew path) and replace the url and md5 lines with the following:\nurl 'https://github.com/joelthelion/autojump/tarball/release-v16'\nmd5 '553fcd23560712215c8a6119451cd96a'\nThis installs from the tag download instead of the download package as a workaround.\n. Oh I agree completely, this needs to be fixed so brew works. However, for those less knowledgeable about brew I wanted to post the workaround while we wait for joelthelion to fix the download package (which will hopefully work when he re-uploads it).\n. @joelthelion, it works now! The md5 has been updated in homebrew too, so everything works now.\n. @corroded, I wrote the Lion patch PROMPT_COMMAND change and tested it. As Joel said, you just need to\nbrew update ; brew upgrade\nTo go from autojump v15 to v17.\n. That's odd, but is an issue with your homebrew and not autojump. You might try a brew clean or check the output of git status in the /usr/local/ dir (assuming you installed homebrew there).\nYou might want to just re-install.\n. If someone else makes sure the zsh install works right (I don't use it), I would write a new brew formula and submit it. I think they removed it because the formula they had didn't do the actual autojump install, it just copies scripts around.\n. In that case the formula should keep working just how it is, but just copy the the zsh _j to where it needs to be. If someone submits a new formula with an explanation I'd imagine they'd put it right back in.\nI think the brew maintainers just have the wrong impression that the formula isn't tracking what the installer should be doing.\n. I submitted a pull request to bring autojump back into homebrew with a fix for zsh autocompletion.\n. Thanks for submitting the new md5 once joelthelion re-uploaded the release.\n. I would be happy to submit a new formula to homebrew with a fix for zsh if you tell me what the path should be. Is /usr/local/share/zsh/functions/ the right location for _j?\nI don't use zsh, so I didn't want to code it blind.\n. I submitted a pull request to bring autojump back into homebrew with a fix for zsh autocompletion.\n. @a-b, I can see the potential convenience of automatic inclusion. However, I personally think it is impolite to automatically write to personal configurations. There is incredible variety in dotfiles from person to person, so I think it is best not to assume anything and let people copy those lines on their own.\n. The zsh tab completion fix for homebrew was just to make sure _j, the autocompletion script, was installed. It won't fix anything with linux. The top two reasons autocomplete doesn't work in zsh is that _j is not in $fpath, which your update to install.sh would have fixed, and autocompletion hasn't been started in zsh (autoload -U compinit ; compinit blah blah blah).\n. If you are interested in this right away it is a simple modification.\nIf you are using autojump with bash, inspection of the autojump.bash script will reveal the definition of the autojump function j on the last line. All you have to do is copy it then remove the cd statement in the if clause to yield this bash function:\nfunction jp { new_path=\"$(autojump $@)\";if [ -n \"$new_path\" ]; then echo -e \"\\\\033[31m${new_path}\\\\033[0m\"; else false; fi }\nFor the same autocompletion that j has, duplicate line 27 starting with complete and change j to jp. After the changes source the new autojump.bash script.\n. Just chiming in since I'm working on the fuzzy/flex matching: since autojump is already case-insensitive when a case exact match is not found, I'm not sure what the desired ordering would be. Uppercase before lowercase, in descending number of upper case letter matches?\nI second the case for environment variable configuration. I was using command line switches as a temporary development fix, but it is awkward and I doubt we want people hacking the definition of the j alias in order to get their desired behavior.\nThis raises the broader issue of ranking matches given both scores and match quality. The approx matching thread might be the place for this discussion. I'm mulling over whether or not it would ever be desirable to rank an approximate match with high scores over an exact match with almost zero score. This might be another matter of taste that could be configurable?\n. The Damerau-Levenshtein string edit distance factors in insertions, deletions, single-char substitution, and adjacent transpositions. Approximate matching with it makes up for most typing errors, but is not the same as Quicksilver-style matching. If I recall correctly, Quicksilver gives bonuses for certain types of match based on how people like to abbreviate, like using initialisms as in your \"Massachusetts Institute of Technology\" example.\nI personally am a big fan of quicksilver matching and make transposition errors typing sometimes, so I'm considering hacking it out in python and commenting it up. I'd use it.\n. I'm fighting my way through merge conflicts for the approximate matching pull request now. I'll link to the branch in my fork when it's ready.\nOnce that runs, I'll integrate Quicksilver-style flex matching and then we'll have to try it out and see what works best for people. I could see exact match > flex match > approx match producing a useful ranking.\n. I merged int3's approximate matching with HEAD and pushed it to shelhamer/autojump approx. Just drop in the new autojump to /usr/local/bin/ or wherever and try it out.\nI had to update the code a bit since it was based on v15. I decided to go further and refactored match finding a little to avoid duplication, though I think I can clean it up more.\nI'm going to implement flex matching next and come up with a plan for differentiating results, like listing approximate/flex matches in a different color.\n. Rather than editing /etc/bashrc as it is system-wide and might affect other behaviors, I would think it preferable to edit the autojump.bash script to update the PROMPT_COMMAND without trouble. Perhaps this difference could be handled by the brew installer for autojump.\nFor your reference, the fix (without touch /etc/bashrc) is to edit to the autojump.bash script is to replace line 47 with:\nexport PROMPT_COMMAND=\"$AUTOJUMP ; ${PROMPT_COMMAND:-:}\"\nwhich is compatible with the trailing semi-colon in the redefinition of PROMPT_COMMAND in Lion's /etc/bashrc.\n. @houbysoft, @mlangenberg: I've submitted a pull request to homebrew with an updated Formula that detects Lion and makes the necessary edit automatically. This would take care of this issue until it is resolved in the autojump installer itself.\n. As commented over at #58, here's a less invasive fix:\nRather than editing /etc/bashrc as it is system-wide and might affect other behaviors, I would think it preferable to edit the autojump.bash script to update the PROMPT_COMMAND without trouble. Perhaps this difference could be handled by the brew installer for autojump.\nFor your reference, the fix (without touch /etc/bashrc) is to edit to the autojump.bash script is to replace line 47 with:\nexport PROMPT_COMMAND=\"$AUTOJUMP ; ${PROMPT_COMMAND:-:}\"\nwhich is compatible with the trailing semicolon in PROMPT_COMMAND in Lion's /etc/bashrc.\nEDIT: I've submitted a pull request to homebrew that updates its autojump Formula to make this edit automatically on Lion installs.\nEDIT EDIT: I have submitted a pull request to joelthelion with a fix to autojump.bash which fixes Lion compatibility and shouldn't break other systems\u2013it is a simple change that will not break any working setting of $PROMPT_COMMAND. However, in the spirit of honesty, I wasn't able to test on anything other than ubuntu.\n. I'd like to second @jasonmp85. I submitted a pull request to homebrew with an inline fix for this issue, but they marked it as an upstream issue and rejected it. The next step is to have a new tagged package that can be pulled in by homebrew.\n. @joelthelion, thanks for tagging the release! We can consider this fixed on your side. I will submit the pull request to Homebrew to include the new version on their end.\n. Hmm, I was able to download it, but now I receive the same 403. I have had intermittent trouble with github in the past where recently-made download packages give a 403. I assume it will go away on it own, as that has been my previous experience.\n. I still have the 403 as well. I'm surprised I was able to download it originally, and am beginning to suspect I might have snagged the tag instead of the package download.\nYou are right that the download link and md5 have to be updated together. I submitted the pull request for the current v16 download (that is not working), and would be happy to re-submit when the download link is fixed.\nThe choice is either wait or switch to linking to the tag tarball instead of the package tarball. I'd rather wait for the package, since linking to the package has been the choice thus far.\n. As a workaround, you can edit /usr/local/Library/Formula/autojump.rb (or your custom homebrew path) and replace the url and md5 lines with the following:\nurl 'https://github.com/joelthelion/autojump/tarball/release-v16'\nmd5 '553fcd23560712215c8a6119451cd96a'\nThis installs from the tag download instead of the download package as a workaround.\n. Oh I agree completely, this needs to be fixed so brew works. However, for those less knowledgeable about brew I wanted to post the workaround while we wait for joelthelion to fix the download package (which will hopefully work when he re-uploads it).\n. @joelthelion, it works now! The md5 has been updated in homebrew too, so everything works now.\n. @corroded, I wrote the Lion patch PROMPT_COMMAND change and tested it. As Joel said, you just need to\nbrew update ; brew upgrade\nTo go from autojump v15 to v17.\n. That's odd, but is an issue with your homebrew and not autojump. You might try a brew clean or check the output of git status in the /usr/local/ dir (assuming you installed homebrew there).\nYou might want to just re-install.\n. If someone else makes sure the zsh install works right (I don't use it), I would write a new brew formula and submit it. I think they removed it because the formula they had didn't do the actual autojump install, it just copies scripts around.\n. In that case the formula should keep working just how it is, but just copy the the zsh _j to where it needs to be. If someone submits a new formula with an explanation I'd imagine they'd put it right back in.\nI think the brew maintainers just have the wrong impression that the formula isn't tracking what the installer should be doing.\n. I submitted a pull request to bring autojump back into homebrew with a fix for zsh autocompletion.\n. Thanks for submitting the new md5 once joelthelion re-uploaded the release.\n. I would be happy to submit a new formula to homebrew with a fix for zsh if you tell me what the path should be. Is /usr/local/share/zsh/functions/ the right location for _j?\nI don't use zsh, so I didn't want to code it blind.\n. I submitted a pull request to bring autojump back into homebrew with a fix for zsh autocompletion.\n. @a-b, I can see the potential convenience of automatic inclusion. However, I personally think it is impolite to automatically write to personal configurations. There is incredible variety in dotfiles from person to person, so I think it is best not to assume anything and let people copy those lines on their own.\n. The zsh tab completion fix for homebrew was just to make sure _j, the autocompletion script, was installed. It won't fix anything with linux. The top two reasons autocomplete doesn't work in zsh is that _j is not in $fpath, which your update to install.sh would have fixed, and autocompletion hasn't been started in zsh (autoload -U compinit ; compinit blah blah blah).\n. If you are interested in this right away it is a simple modification.\nIf you are using autojump with bash, inspection of the autojump.bash script will reveal the definition of the autojump function j on the last line. All you have to do is copy it then remove the cd statement in the if clause to yield this bash function:\nfunction jp { new_path=\"$(autojump $@)\";if [ -n \"$new_path\" ]; then echo -e \"\\\\033[31m${new_path}\\\\033[0m\"; else false; fi }\nFor the same autocompletion that j has, duplicate line 27 starting with complete and change j to jp. After the changes source the new autojump.bash script.\n. Just chiming in since I'm working on the fuzzy/flex matching: since autojump is already case-insensitive when a case exact match is not found, I'm not sure what the desired ordering would be. Uppercase before lowercase, in descending number of upper case letter matches?\nI second the case for environment variable configuration. I was using command line switches as a temporary development fix, but it is awkward and I doubt we want people hacking the definition of the j alias in order to get their desired behavior.\nThis raises the broader issue of ranking matches given both scores and match quality. The approx matching thread might be the place for this discussion. I'm mulling over whether or not it would ever be desirable to rank an approximate match with high scores over an exact match with almost zero score. This might be another matter of taste that could be configurable?\n. ",
    "chetan51": "I would love flex / fuzzy matching as a feature, so please update this pull request when you finish implementing it. Thanks!\n. I would love flex / fuzzy matching as a feature, so please update this pull request when you finish implementing it. Thanks!\n. ",
    "philip": "This solves the problem, and autojump now works. :)\n. philip@foo:~$ python --version\nPython 2.7.3\nphilip@foo:~$ /usr/bin/autojump --version\nTraceback (most recent call last):\n  File \"/usr/bin/autojump\", line 22, in \n    from future import division, print_function\nEOFError: EOF read where not expected\nphilip@foo:~$ \n. Package: autojump\nState: installed\nAutomatically installed: no\nVersion: 18-1\nPriority: optional\nSection: universe/shells\nMaintainer: Ubuntu Developers ubuntu-devel-discuss@lists.ubuntu.com\nArchitecture: all\nUncompressed Size: 82.9 k\nDepends: python3\nEnhances: bash, zsh, zsh-beta\nDescription: ...\n. Thanks. We'e getting close. That didn't provide a Python error but revealed something interesting. The autojump begins with:\n#!/usr/bin/env python3\nSo somehow it was looking for python3. I didn't add that myself, I promise :) Not sure how or why it would happen though. Gnomes? Anyway, I removed the '3' and it works now. Thoughts? I have python 3.2.3.\n. Cool. FWIW:\n```\nphilip@foo:~$ python3\nPython 3.2.3 (default, Apr 12 2012, 19:08:59) \n[GCC 4.6.3] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n\n\nfrom future import division, print_function\nTraceback (most recent call last):\n  File \"\", line 1, in \nEOFError: EOF read where not expected\n```\n. Agreed, it does appear to be a local issue despite being a brand new linux laptop. I cannot remove or reinstall the python3 package, or use any import with success. Frustrating, but not an autojump bug.\n. This solves the problem, and autojump now works. :)\n. philip@foo:~$ python --version\nPython 2.7.3\n\n\n\nphilip@foo:~$ /usr/bin/autojump --version\nTraceback (most recent call last):\n  File \"/usr/bin/autojump\", line 22, in \n    from future import division, print_function\nEOFError: EOF read where not expected\nphilip@foo:~$ \n. Package: autojump\nState: installed\nAutomatically installed: no\nVersion: 18-1\nPriority: optional\nSection: universe/shells\nMaintainer: Ubuntu Developers ubuntu-devel-discuss@lists.ubuntu.com\nArchitecture: all\nUncompressed Size: 82.9 k\nDepends: python3\nEnhances: bash, zsh, zsh-beta\nDescription: ...\n. Thanks. We'e getting close. That didn't provide a Python error but revealed something interesting. The autojump begins with:\n#!/usr/bin/env python3\nSo somehow it was looking for python3. I didn't add that myself, I promise :) Not sure how or why it would happen though. Gnomes? Anyway, I removed the '3' and it works now. Thoughts? I have python 3.2.3.\n. Cool. FWIW:\n```\nphilip@foo:~$ python3\nPython 3.2.3 (default, Apr 12 2012, 19:08:59) \n[GCC 4.6.3] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n\n\nfrom future import division, print_function\nTraceback (most recent call last):\n  File \"\", line 1, in \nEOFError: EOF read where not expected\n```\n. Agreed, it does appear to be a local issue despite being a brand new linux laptop. I cannot remove or reinstall the python3 package, or use any import with success. Frustrating, but not an autojump bug.\n. \n\n\n",
    "tomster": "FWIW: simply adding unset PROMPT_COMMAND immediately after sourcing .bashrc in my .bash_profile resolved this issue, but it still feels more like a workaround rather than a proper fix.\n. hey pierre and joel, thanks for looking into this!\nwhat's puzzling me is that when i grep the auto jump project for the string 'update_terminal_cwd' nothing comes up, so i'm not even sure, whether auto jump is at fault here.\nand yes, even though my prompt now works, i indeed no longer get new directories added to the database. incidentally, this showed me how much i've already become used to auto jump :)\nanyway, looking at the output from bash -xl, i found this:\nPROMPT_COMMAND='update_terminal_cwd; '\nand unlike the update_terminal_cwd command, the PROMPT_COMMAND does show up in auto jump:\nexport PROMPT_COMMAND=\"${PROMPT_COMMAND:-:} ; $AUTOJUMP\"\nso it seems, that something in my setup is a) adding the command and b) appending a semi-colon, which it shouldn't.\nlong story short: turns out it was QuickSilver (a fairly popular launch tool for mac osx ). it adds the erroneous ;.\nthanks again for helping me debug this, without it i wouldn't have found it so quickly!\nand perhaps other lion, auto jump and quicksilver users can now find this solution)\n. for the public record: the offending bit is in \nLibrary/Application Support/Quicksilver/Shelves/QSPasteboardHistory.qsshelf\n. FWIW my workaround was simply to explicitly set PROMPT_COMMAND to the syntactically valid version, i.e. without the trailing semi-colon immediately before sourcing autojump, IOW like so:\nexport PROMPT_COMMAND=\"update_terminal_cwd \"\nsource ~/Development/autojump/autojump.bash\n. FWIW: simply adding unset PROMPT_COMMAND immediately after sourcing .bashrc in my .bash_profile resolved this issue, but it still feels more like a workaround rather than a proper fix.\n. hey pierre and joel, thanks for looking into this!\nwhat's puzzling me is that when i grep the auto jump project for the string 'update_terminal_cwd' nothing comes up, so i'm not even sure, whether auto jump is at fault here.\nand yes, even though my prompt now works, i indeed no longer get new directories added to the database. incidentally, this showed me how much i've already become used to auto jump :)\nanyway, looking at the output from bash -xl, i found this:\nPROMPT_COMMAND='update_terminal_cwd; '\nand unlike the update_terminal_cwd command, the PROMPT_COMMAND does show up in auto jump:\nexport PROMPT_COMMAND=\"${PROMPT_COMMAND:-:} ; $AUTOJUMP\"\nso it seems, that something in my setup is a) adding the command and b) appending a semi-colon, which it shouldn't.\nlong story short: turns out it was QuickSilver (a fairly popular launch tool for mac osx ). it adds the erroneous ;.\nthanks again for helping me debug this, without it i wouldn't have found it so quickly!\nand perhaps other lion, auto jump and quicksilver users can now find this solution)\n. for the public record: the offending bit is in \nLibrary/Application Support/Quicksilver/Shelves/QSPasteboardHistory.qsshelf\n. FWIW my workaround was simply to explicitly set PROMPT_COMMAND to the syntactically valid version, i.e. without the trailing semi-colon immediately before sourcing autojump, IOW like so:\nexport PROMPT_COMMAND=\"update_terminal_cwd \"\nsource ~/Development/autojump/autojump.bash\n. ",
    "pcarrier": "Looks fairly obvious to me based on the original report that you need to understand where this comes from:\n[...]`update_terminal_cwd;  ; { [[ \"$AUTOJUMP_HOME\" == \"$HOME\" ]] [...]\n                          ^^ WTF\nTo put it simply, bash doesn't treat ; like C would :)\nbash-3.2$ echo a;echo b\na\nb\nbash-3.2$ echo a;;echo b\nbash: syntax error near unexpected token `;;'\nbash-3.2$ echo a; ;echo b\nbash: syntax error near unexpected token `;'\nbash-3.2$\n. tomster, can you provide us with the output of this?\n/bin/bash -xl\n. Though I run Lion, I don't use Bash. If I can be of any help, it's after getting the whole picture directly from you!\nHence I'd need for the output of:\n/bin/bash -xl\n. Looks fairly obvious to me based on the original report that you need to understand where this comes from:\n[...]`update_terminal_cwd;  ; { [[ \"$AUTOJUMP_HOME\" == \"$HOME\" ]] [...]\n                          ^^ WTF\nTo put it simply, bash doesn't treat ; like C would :)\nbash-3.2$ echo a;echo b\na\nb\nbash-3.2$ echo a;;echo b\nbash: syntax error near unexpected token `;;'\nbash-3.2$ echo a; ;echo b\nbash: syntax error near unexpected token `;'\nbash-3.2$\n. tomster, can you provide us with the output of this?\n/bin/bash -xl\n. Though I run Lion, I don't use Bash. If I can be of any help, it's after getting the whole picture directly from you!\nHence I'd need for the output of:\n/bin/bash -xl\n. ",
    "houbysoft": "Interesting. I get the exact same thing after updating to Lion earlier today. I don't know about and certainly never installed QuickSilver, although searching for QuickSilver in Spotlight returns some folder in /opt/local/var/macports/sources/rsync.macports.org/release/ports/aqua/QuickSilver. So it seems macports got it for some reason.\nI tried running port installed and seeing if it somehow got installed, but there was no mention of a package called QuickSilver.\nI also checked for the Library/Application Support/Quicksilver/Shelves/QSPasteboardHistory.qsshelf file, but there isn't any such file (there isn't even a Library/Application Support/Quicksilver folder) on my system.\nAny suggestions would be very welcome..\nThanks\n. Moved comment to issue #62.\n. Thanks guys, tomster I guess that fixes it.\nFor any googlers, sudo vim /etc/bashrc,\nand replace the line setting PROMPT_COMMAND with:\nPROMPT_COMMAND=\"update_terminal_cwd $PROMPT_COMMAND\"\n. @shelhamer Yes that makes more sense than editing /etc/bashrc, thanks. Maybe you should also post your solution in issue #62 which seems to be a duplicate of this one.\n. Great :)\n. I am getting the same thing. Here's what I found out.\nIt would seem Apple added some function called update_terminal_cwd in Lion that updates the title bar of the Terminal showing the current working directory.\nThat function seems to be causing problems; I edited the section in /etc/bashrc that defined it and now autojump works. However, it would be nice to have a better solution.\nHere is the relevant section of /etc/bashrc:\n```\nTell the terminal about the working directory at each prompt.\nif [ \"$TERM_PROGRAM\" == \"Apple_Terminal\" ] && [ -z \"$INSIDE_EMACS\" ]; then\n    update_terminal_cwd() {\n        # Identify the directory using a \"file:\" scheme URL,\n        # including the host name to disambiguate local vs.\n        # remote connections. Percent-escape spaces.\n       local SEARCH=' '\n       local REPLACE='%20'\n       local PWD_URL=\"file://$HOSTNAME${PWD//$SEARCH/$REPLACE}\"\n       printf '\\e]7;%s\\a' \"$PWD_URL\"\n    }\n    PROMPT_COMMAND=\"update_terminal_cwd; $PROMPT_COMMAND\"\nfi\n```\nCommenting this whole block makes autojump work. However, the title bar of the Terminal then doesn't get updated correctly as it should.\nAny ideas?\n. That also explains why it happens only in Terminal.app; /etc/bashrc is looking for [ \"$TERM_PROGRAM\" == \"Apple_Terminal\" ]. Otherwise, the offending function is not enabled.\n. As discussed over at #58, here's a fix:\nEdit /etc/bashrc, and replace the line setting PROMPT_COMMAND with:\nPROMPT_COMMAND=\"update_terminal_cwd $PROMPT_COMMAND\"\n. Interesting. I get the exact same thing after updating to Lion earlier today. I don't know about and certainly never installed QuickSilver, although searching for QuickSilver in Spotlight returns some folder in /opt/local/var/macports/sources/rsync.macports.org/release/ports/aqua/QuickSilver. So it seems macports got it for some reason.\nI tried running port installed and seeing if it somehow got installed, but there was no mention of a package called QuickSilver.\nI also checked for the Library/Application Support/Quicksilver/Shelves/QSPasteboardHistory.qsshelf file, but there isn't any such file (there isn't even a Library/Application Support/Quicksilver folder) on my system.\nAny suggestions would be very welcome..\nThanks\n. Moved comment to issue #62.\n. Thanks guys, tomster I guess that fixes it.\nFor any googlers, sudo vim /etc/bashrc,\nand replace the line setting PROMPT_COMMAND with:\nPROMPT_COMMAND=\"update_terminal_cwd $PROMPT_COMMAND\"\n. @shelhamer Yes that makes more sense than editing /etc/bashrc, thanks. Maybe you should also post your solution in issue #62 which seems to be a duplicate of this one.\n. Great :)\n. I am getting the same thing. Here's what I found out.\nIt would seem Apple added some function called update_terminal_cwd in Lion that updates the title bar of the Terminal showing the current working directory.\nThat function seems to be causing problems; I edited the section in /etc/bashrc that defined it and now autojump works. However, it would be nice to have a better solution.\nHere is the relevant section of /etc/bashrc:\n```\nTell the terminal about the working directory at each prompt.\nif [ \"$TERM_PROGRAM\" == \"Apple_Terminal\" ] && [ -z \"$INSIDE_EMACS\" ]; then\n    update_terminal_cwd() {\n        # Identify the directory using a \"file:\" scheme URL,\n        # including the host name to disambiguate local vs.\n        # remote connections. Percent-escape spaces.\n       local SEARCH=' '\n       local REPLACE='%20'\n       local PWD_URL=\"file://$HOSTNAME${PWD//$SEARCH/$REPLACE}\"\n       printf '\\e]7;%s\\a' \"$PWD_URL\"\n    }\n    PROMPT_COMMAND=\"update_terminal_cwd; $PROMPT_COMMAND\"\nfi\n```\nCommenting this whole block makes autojump work. However, the title bar of the Terminal then doesn't get updated correctly as it should.\nAny ideas?\n. That also explains why it happens only in Terminal.app; /etc/bashrc is looking for [ \"$TERM_PROGRAM\" == \"Apple_Terminal\" ]. Otherwise, the offending function is not enabled.\n. As discussed over at #58, here's a fix:\nEdit /etc/bashrc, and replace the line setting PROMPT_COMMAND with:\nPROMPT_COMMAND=\"update_terminal_cwd $PROMPT_COMMAND\"\n. ",
    "mlangenberg": "@shelhamer Thanks. That is probably the easiest fix for now.\n. @shelhamer Thanks. That is probably the easiest fix for now.\n. ",
    "graysky2": "@joel - My highest weighted path per jumpstat was /dev/shm which is where I do compiling, scratch files, etc.  I recently switched it to /tmp/scratch and whenever I'd hit 'j' autojump would take me to the highest ranked path which I don't use anymore.  I just nuked the ~/.local/share/autojump and rebuilt my db.  Having the ability to remove a line from the history would be a cool feature.\n. @joelthelion - agreed.  I think the latter represents the most flexible and simplistic option moving forward.  It's akin to the ~/.bash_history to me.  Good idea.\n. Can you re-open this?  Apparently I was mistaken - the problem I describe is still present.  Here is the PKGBUILD I used based on your comment:\npkgname=autojump\npkgver=21.3.0\npkgrel=1\npkgdesc=\"A faster way to navigate your filesystem from the command line\"\narch=('any')\nurl=\"http://wiki.github.com/joelthelion/autojump\"\nlicense=('GPL3')\ndepends=('bash' 'python')\noptdepends=('python2: needed for jumpapplet')\nsource=(https://github.com/joelthelion/${pkgname}/archive/release-v${pkgver}.tar.gz)\nsha256sums=('217398c3135647f223356e055a1b84adb470385584d743baf7fe4d519fd78252')\npackage() {\n  cd ${pkgname}-release-v${pkgver}\n  ./install.sh --global --destdir \"${pkgdir}\"\n}\nEDIT: I have this as the first line in my ~/.zshrc\n[[ -s /etc/profile.d/autojump.sh ]] && source /etc/profile.d/autojump.sh\nI have also tried adding this to /etc/zsh/zprofile but it did not help:\n[[ -s /etc/profile.d/autojump.zsh ]] && source /etc/profile.d/autojump.zsh\n. If I manually execute /etc/profile.d/autojump.zsh\n/etc/profile.d/autojump.zsh: line 32: syntax error near unexpected token |'\n/etc/profile.d/autojump.zsh: line 32:    { (autojump -a \"$(pwd ${_PWD_ARGS})\"&)>/dev/null 2>>|${AUTOJUMP_DATA_DIR}/.autojump_errors ; } 2>/dev/null'\n. OK!  I think I got this figured out.  THe problem is that I had a ~/.autojump which I think was messing up my logins.  When I deleted that dir, everything works normally.\nI added the following line to /etc/zsh/zprofile which I think circumvents the need source it in each user's ~/.zshrc\nSO... I recommended that we get the Arch Linux package to create this line in /etc/zprofile and forgot about the post_install message all together.\nWhat do you think?\n% cat /etc/zsh/zprofile\nemulate sh -c 'source /etc/profile'\n[[ -f /etc/profile.d/autojump.sh ]] && source /etc/profile.d/autojump.sh\n. I see the following two related issues:\nhttps://github.com/joelthelion/autojump/pull/339\nhttps://github.com/joelthelion/autojump/pull/338\nI tried building with the patch but ended up with the same problem as I reported above:\nhttps://github.com/youtux/autojump/commit/c29a369289e7d388af9762b7b8973aa53df821f8.patch\n. @joel - My highest weighted path per jumpstat was /dev/shm which is where I do compiling, scratch files, etc.  I recently switched it to /tmp/scratch and whenever I'd hit 'j' autojump would take me to the highest ranked path which I don't use anymore.  I just nuked the ~/.local/share/autojump and rebuilt my db.  Having the ability to remove a line from the history would be a cool feature.\n. @joelthelion - agreed.  I think the latter represents the most flexible and simplistic option moving forward.  It's akin to the ~/.bash_history to me.  Good idea.\n. Can you re-open this?  Apparently I was mistaken - the problem I describe is still present.  Here is the PKGBUILD I used based on your comment:\npkgname=autojump\npkgver=21.3.0\npkgrel=1\npkgdesc=\"A faster way to navigate your filesystem from the command line\"\narch=('any')\nurl=\"http://wiki.github.com/joelthelion/autojump\"\nlicense=('GPL3')\ndepends=('bash' 'python')\noptdepends=('python2: needed for jumpapplet')\nsource=(https://github.com/joelthelion/${pkgname}/archive/release-v${pkgver}.tar.gz)\nsha256sums=('217398c3135647f223356e055a1b84adb470385584d743baf7fe4d519fd78252')\npackage() {\n  cd ${pkgname}-release-v${pkgver}\n  ./install.sh --global --destdir \"${pkgdir}\"\n}\nEDIT: I have this as the first line in my ~/.zshrc\n[[ -s /etc/profile.d/autojump.sh ]] && source /etc/profile.d/autojump.sh\nI have also tried adding this to /etc/zsh/zprofile but it did not help:\n[[ -s /etc/profile.d/autojump.zsh ]] && source /etc/profile.d/autojump.zsh\n. If I manually execute /etc/profile.d/autojump.zsh\n/etc/profile.d/autojump.zsh: line 32: syntax error near unexpected token |'\n/etc/profile.d/autojump.zsh: line 32:    { (autojump -a \"$(pwd ${_PWD_ARGS})\"&)>/dev/null 2>>|${AUTOJUMP_DATA_DIR}/.autojump_errors ; } 2>/dev/null'\n. OK!  I think I got this figured out.  THe problem is that I had a ~/.autojump which I think was messing up my logins.  When I deleted that dir, everything works normally.\nI added the following line to /etc/zsh/zprofile which I think circumvents the need source it in each user's ~/.zshrc\nSO... I recommended that we get the Arch Linux package to create this line in /etc/zprofile and forgot about the post_install message all together.\nWhat do you think?\n% cat /etc/zsh/zprofile\nemulate sh -c 'source /etc/profile'\n[[ -f /etc/profile.d/autojump.sh ]] && source /etc/profile.d/autojump.sh\n. I see the following two related issues:\nhttps://github.com/joelthelion/autojump/pull/339\nhttps://github.com/joelthelion/autojump/pull/338\nI tried building with the patch but ended up with the same problem as I reported above:\nhttps://github.com/youtux/autojump/commit/c29a369289e7d388af9762b7b8973aa53df821f8.patch\n. ",
    "tortolo": "Some questions so that I can implement that.\n1. Why testing if .local/share exists, and falling back to using ~ as the data directory (putting not-hidden files in it!) if it does not? I think it would be simpler to simply comply with the XDG Specification and to use $XDG_DATA_HOME/autojump, creating it, including parent directories, if needed.\n2. What is $AUTOJUMP_HOME for in the Bash script?\n. At bit more about my suggestion of not falling back to ~ as the data directory. Following the XDG Specification and only it, without a custom fallback, would make the scripts simpler and easier to understand and to maintain. Instead of [if $XDG_DATA_HOME exists then \u2026, but if it does not exist, then if .local/share exists then \u2026, else use ~], it would become [we follow the XDG Spec, that is: we use $XDG_DATA_HOME/autojump where $XDG_DATA_HOME default to .local/share] which is more understandable. I think maintaining the alternative of using ~ directly only adds confusion.\nIn addition, it would become easier for the Python scripts too (both autojump and jumpapplet): instead of relying on an environment variable $AUTOJUMP_HOME or trying to guess, they could just follow the spec, fullstop.\n. Well, I have just (truly) implemented the XDG Base Directory Specification. You can pick up the code from my branch, if it suits you:\n$ git pull git://git.ortolo.eu/pkg-autojump.git contrib/xdg-base-directory\n. joelthelion, 2011-07-28 02:05 UTC-0700:\n\nI haven't checked your code yet, but you can find the explanation why XDG is commented out in the git history: the problem is that in the distributions that I have checked, the XDG env variables are not updated correctly when the user uses sudo or su. Thus his database is updated as root, then the autojump file belongs to root and the user is locked with permission problems.\n\nThis is normal, rather a problem between chair and keyboard. Using su\ndirectly instead of su -, or sudo -s instead of sudo -i keeps\nenvironment variables. It is meant to.\nHowever, unless someone explicitely sets $XDG_DATA_HOME, this\nenvironment variable is unset and $HOME/.local/share is used instead.\nThus, for most people this problem simply does not exist.\n\nI'm all for implementing and following the standard, so if you can find a way of implementing this that is compatible with the use of su and sudo, I will merge it.\n\nI suggest that we simply follow the specification but adding a security\ncheck: if $XDG_DATA_HOME does not belong to the current user, simply\ndisable autojump.\n\nTanguy Ortolo\n. joelthelion, 2011-09-02 10:11 UTC-0700:\n\nI have merged your branch. Does it seem correct to you?\n\nGiven that the file ownership check was already there, yes. Thank you!\n:-)\n\nTanguy Ortolo\n. Well, it appears that simply copying the functions code is not enough, as they have incompatibilities with the surrounding code, such as a different use of print. So I think we will just get a non-working jumpapplet in Debian, or perhaps better, no jumpapplet at all.\n. Joel Schaerer, 2011-10-03 02:35 UTC-0700:\n\nAny advice on how this library should be named and where it should be placed?\n\nSomething like \u201cjumplib\u201d? Now, as it comes to sharing functions, I think\nit may become necessary to start using Python distutils to create a\nsetup script, because this project is no longer a standalone executable.\n\nTanguy Ortolo\n. Joel Schaerer, 2011-12-11 09:56-0800:\n\nThinking a bit more about this issue, can't you consider autojump as a stand-alone executable file and a library, possibly symlinking it to the place where libraries should be? I really want to keep autojump standalone.\n\nThat may be tricky but I shall try. Feel free to put this bug on hold, I\nshall tell you what I manage to do.\nUltimately, if I do not find a satisfactory way to solve that,\njumpapplet will get out of Debian, since very few people are using it.\n\nTanguy Ortolo\n. jkuan, 2011-12-12 06:03-0800:\n\nI have a question about the original issue: is the problem that\napplets can't import functions from /usr/bin/autojump, or that it's\nagainst debian guidelines to import functions from a file located in\nthe bin directory?\n\nI do not think it is against our guidelines, only weird. How would you\nimplement that in practice?\n\nTanguy Ortolo\n. Joel Schaerer, 2012-01-10 12:27-0800:\n\nThere are two ways to achieve this currently:\n1. Keep pressing on the \"enter\" key for a few seconds.\n\nYes, that is right. I was overthinking it, so I missed the most obvious\nsolution! Please close that issue. :-)\n\nTanguy\n. William Ting, 2014-01-15 14:13-0800:\n\n@tortolo: Is it possible for you to add a post installation message asking users to add source /usr/share/autojump/autojump.sh to their ~/.bashrc (or shell rc file). This issue seems to come up time and time again: #65.\n\nYes, I could, but the problem is I really doubt they would see and read \none message in the whole package installation output. I mean, if a user \ndoes not even think of reading autojump's manpage (which I patched to \nindicate it has to be sourced) or the package's README.Debian (standard \nmain information file for any Debian package), or to report such a bug \nto Debian rather than to autojump, I do not see how he could pay any \nattention to installation messages\u2026\nI could add a debconf screen for that, which is modal and cannot be \nmissed, but that would probably be an abuse of debconf which is made for \nconfiguring packages, not for displaying information. And it would have \nto be a low priority debconf screen not to block automated \ninstallations, so it would not be displayed on systems configured to \nignore low priority debconf screens, which is usually the case for those \npeople.\nNow, I think there is one thing that may be more useful: create and \ninstall a script named /usr/bin/j, that just indicates what has to be \ndone to load autojump for Bash or Zsh.\n\n,--.\n: /)   Tanguy Ortolo      <xmpp:tanguy@ortolo.eu>\n|-'    Debian Developer   irc://irc.oftc.net/Tanguy\n  _\n. Some questions so that I can implement that.\n1. Why testing if .local/share exists, and falling back to using ~ as the data directory (putting not-hidden files in it!) if it does not? I think it would be simpler to simply comply with the XDG Specification and to use $XDG_DATA_HOME/autojump, creating it, including parent directories, if needed.\n2. What is $AUTOJUMP_HOME for in the Bash script?\n. At bit more about my suggestion of not falling back to ~ as the data directory. Following the XDG Specification and only it, without a custom fallback, would make the scripts simpler and easier to understand and to maintain. Instead of [if $XDG_DATA_HOME exists then \u2026, but if it does not exist, then if .local/share exists then \u2026, else use ~], it would become [we follow the XDG Spec, that is: we use $XDG_DATA_HOME/autojump where $XDG_DATA_HOME default to .local/share] which is more understandable. I think maintaining the alternative of using ~ directly only adds confusion.\nIn addition, it would become easier for the Python scripts too (both autojump and jumpapplet): instead of relying on an environment variable $AUTOJUMP_HOME or trying to guess, they could just follow the spec, fullstop.\n. Well, I have just (truly) implemented the XDG Base Directory Specification. You can pick up the code from my branch, if it suits you:\n$ git pull git://git.ortolo.eu/pkg-autojump.git contrib/xdg-base-directory\n. joelthelion, 2011-07-28 02:05 UTC-0700:\n\nI haven't checked your code yet, but you can find the explanation why XDG is commented out in the git history: the problem is that in the distributions that I have checked, the XDG env variables are not updated correctly when the user uses sudo or su. Thus his database is updated as root, then the autojump file belongs to root and the user is locked with permission problems.\n\nThis is normal, rather a problem between chair and keyboard. Using su\ndirectly instead of su -, or sudo -s instead of sudo -i keeps\nenvironment variables. It is meant to.\nHowever, unless someone explicitely sets $XDG_DATA_HOME, this\nenvironment variable is unset and $HOME/.local/share is used instead.\nThus, for most people this problem simply does not exist.\n\nI'm all for implementing and following the standard, so if you can find a way of implementing this that is compatible with the use of su and sudo, I will merge it.\n\nI suggest that we simply follow the specification but adding a security\ncheck: if $XDG_DATA_HOME does not belong to the current user, simply\ndisable autojump.\n\nTanguy Ortolo\n. joelthelion, 2011-09-02 10:11 UTC-0700:\n\nI have merged your branch. Does it seem correct to you?\n\nGiven that the file ownership check was already there, yes. Thank you!\n:-)\n\nTanguy Ortolo\n. Well, it appears that simply copying the functions code is not enough, as they have incompatibilities with the surrounding code, such as a different use of print. So I think we will just get a non-working jumpapplet in Debian, or perhaps better, no jumpapplet at all.\n. Joel Schaerer, 2011-10-03 02:35 UTC-0700:\n\nAny advice on how this library should be named and where it should be placed?\n\nSomething like \u201cjumplib\u201d? Now, as it comes to sharing functions, I think\nit may become necessary to start using Python distutils to create a\nsetup script, because this project is no longer a standalone executable.\n\nTanguy Ortolo\n. Joel Schaerer, 2011-12-11 09:56-0800:\n\nThinking a bit more about this issue, can't you consider autojump as a stand-alone executable file and a library, possibly symlinking it to the place where libraries should be? I really want to keep autojump standalone.\n\nThat may be tricky but I shall try. Feel free to put this bug on hold, I\nshall tell you what I manage to do.\nUltimately, if I do not find a satisfactory way to solve that,\njumpapplet will get out of Debian, since very few people are using it.\n\nTanguy Ortolo\n. jkuan, 2011-12-12 06:03-0800:\n\nI have a question about the original issue: is the problem that\napplets can't import functions from /usr/bin/autojump, or that it's\nagainst debian guidelines to import functions from a file located in\nthe bin directory?\n\nI do not think it is against our guidelines, only weird. How would you\nimplement that in practice?\n\nTanguy Ortolo\n. Joel Schaerer, 2012-01-10 12:27-0800:\n\nThere are two ways to achieve this currently:\n1. Keep pressing on the \"enter\" key for a few seconds.\n\nYes, that is right. I was overthinking it, so I missed the most obvious\nsolution! Please close that issue. :-)\n\nTanguy\n. William Ting, 2014-01-15 14:13-0800:\n\n@tortolo: Is it possible for you to add a post installation message asking users to add source /usr/share/autojump/autojump.sh to their ~/.bashrc (or shell rc file). This issue seems to come up time and time again: #65.\n\nYes, I could, but the problem is I really doubt they would see and read \none message in the whole package installation output. I mean, if a user \ndoes not even think of reading autojump's manpage (which I patched to \nindicate it has to be sourced) or the package's README.Debian (standard \nmain information file for any Debian package), or to report such a bug \nto Debian rather than to autojump, I do not see how he could pay any \nattention to installation messages\u2026\nI could add a debconf screen for that, which is modal and cannot be \nmissed, but that would probably be an abuse of debconf which is made for \nconfiguring packages, not for displaying information. And it would have \nto be a low priority debconf screen not to block automated \ninstallations, so it would not be displayed on systems configured to \nignore low priority debconf screens, which is usually the case for those \npeople.\nNow, I think there is one thing that may be more useful: create and \ninstall a script named /usr/bin/j, that just indicates what has to be \ndone to load autojump for Bash or Zsh.\n\n,--.\n: /)   Tanguy Ortolo      <xmpp:tanguy@ortolo.eu>\n|-'    Debian Developer   irc://irc.oftc.net/Tanguy\n  _\n. ",
    "richbradshaw": "I can verify that this happens on Lion, but only in Terminal.app, not iTerm.app. The error doesn't break the functionality, but does show consistently, both on starting a session and on running j.\n. I can verify that this happens on Lion, but only in Terminal.app, not iTerm.app. The error doesn't break the functionality, but does show consistently, both on starting a session and on running j.\n. ",
    "nickel715": "very nice, tahnk you guys\n. very nice, tahnk you guys\n. ",
    "hugocf": "I've applied this patch and it solved the issue for me.\n. I've applied this patch and it solved the issue for me.\n. ",
    "jasonmp85": "Any chance this can get tagged as a v16 for a Lion release? I'm wanting to update the homebrew formula for auto jump and it'd be nice to keep it using a tagged package.\n. I don't know whether you guys are in control of this or if it's a general GitHub problem, but the download URL is giving me a 403 Access Denied.\n. It's still showing a 403 for me. People online seem to say re-uploading the tarball might help, though I think for the homebrew integration to work it'll need to have exactly the same MD5.\n. Sure I can fix it locally, but I was more concerned about why the download wasn't working, since ideally this should work out-of-the-box for brew users.\nI found examples of this happening online and was thinking @joelthelion might be able to re-upload the package to see whether it fixes it (some anecdotal evidences says it might).\n. I can confirm this works. We're probably good to close this issue (and whatever homebrew ones there were). Thanks to all!\n. Any chance this can get tagged as a v16 for a Lion release? I'm wanting to update the homebrew formula for auto jump and it'd be nice to keep it using a tagged package.\n. I don't know whether you guys are in control of this or if it's a general GitHub problem, but the download URL is giving me a 403 Access Denied.\n. It's still showing a 403 for me. People online seem to say re-uploading the tarball might help, though I think for the homebrew integration to work it'll need to have exactly the same MD5.\n. Sure I can fix it locally, but I was more concerned about why the download wasn't working, since ideally this should work out-of-the-box for brew users.\nI found examples of this happening online and was thinking @joelthelion might be able to re-upload the package to see whether it fixes it (some anecdotal evidences says it might).\n. I can confirm this works. We're probably good to close this issue (and whatever homebrew ones there were). Thanks to all!\n. ",
    "corroded": "i am still getting this error using brew install autojump. did i do anything wrong? \n```\nSnowy:~ eumir$ brew install autojump\n==> Downloading https://github.com/downloads/joelthelion/autojump/autojump_v15.tar.gz\n################################################################## 100.0%\n==> Caveats\nAdd the following lines to your ~/.bash_profile file:\nif [ -f brew --prefix/etc/autojump ]; then\n  . brew --prefix/etc/autojump\nfi\n==> Summary\n/usr/local/Cellar/autojump/15: 6 files, 64K, built in 2 seconds\n```\npasted those 3 lines in .bash_profile and I got:\n-bash: PROMPT_COMMAND: line 0: syntax error near unexpected token `;'\n-bash: PROMPT_COMMAND: line 0: `update_terminal_cwd; update_terminal_cwd;  ; { [[ \"$AUTOJUMP_HOME\" == \"$HOME\" ]] && (autojump -a \"$(pwd -P)\"&)>/dev/null 2>>${AUTOJUMP_DATA_DIR}/autojump_errors;} 2>/dev/null'\nwhen I started Terminal(OSX Lion)\n. ohhh i think i didn't do the brew upgrade. i did brew update and it kept downloading autojump_15. will try the upgrade now\n. sorry for the hassle guys:\n```\neumir$ brew update\nbrew upgradeFrom http://github.com/mxcl/homebrew\n * branch            master     -> FETCH_HEAD\nAlready up-to-date.\nSnowy:Homebrew eumir$ brew upgrade\nSnowy:Homebrew eumir$ brew upgrade\nSnowy:Homebrew eumir$ brew install autojump\n==> Downloading https://github.com/downloads/joelthelion/autojump/autojump_v15.tar.gz\n################################################################## 100.0%\n==> Caveats\nAdd the following lines to your ~/.bash_profile file:\nif [ -f brew --prefix/etc/autojump ]; then\n  . brew --prefix/etc/autojump\nfi\n==> Summary\n/usr/local/Cellar/autojump/15: 6 files, 64K, built in 2 seconds\n```\ndo you think something's wrong with my homebrew?\n. okay fixed it. i had to force it to use the head for autojump htough since i still keep getting autojump 15. i wonder why though\n. i am still getting this error using brew install autojump. did i do anything wrong? \n```\nSnowy:~ eumir$ brew install autojump\n==> Downloading https://github.com/downloads/joelthelion/autojump/autojump_v15.tar.gz\n################################################################## 100.0%\n==> Caveats\nAdd the following lines to your ~/.bash_profile file:\nif [ -f brew --prefix/etc/autojump ]; then\n  . brew --prefix/etc/autojump\nfi\n==> Summary\n/usr/local/Cellar/autojump/15: 6 files, 64K, built in 2 seconds\n```\npasted those 3 lines in .bash_profile and I got:\n-bash: PROMPT_COMMAND: line 0: syntax error near unexpected token `;'\n-bash: PROMPT_COMMAND: line 0: `update_terminal_cwd; update_terminal_cwd;  ; { [[ \"$AUTOJUMP_HOME\" == \"$HOME\" ]] && (autojump -a \"$(pwd -P)\"&)>/dev/null 2>>${AUTOJUMP_DATA_DIR}/autojump_errors;} 2>/dev/null'\nwhen I started Terminal(OSX Lion)\n. ohhh i think i didn't do the brew upgrade. i did brew update and it kept downloading autojump_15. will try the upgrade now\n. sorry for the hassle guys:\n```\neumir$ brew update\nbrew upgradeFrom http://github.com/mxcl/homebrew\n * branch            master     -> FETCH_HEAD\nAlready up-to-date.\nSnowy:Homebrew eumir$ brew upgrade\nSnowy:Homebrew eumir$ brew upgrade\nSnowy:Homebrew eumir$ brew install autojump\n==> Downloading https://github.com/downloads/joelthelion/autojump/autojump_v15.tar.gz\n################################################################## 100.0%\n==> Caveats\nAdd the following lines to your ~/.bash_profile file:\nif [ -f brew --prefix/etc/autojump ]; then\n  . brew --prefix/etc/autojump\nfi\n==> Summary\n/usr/local/Cellar/autojump/15: 6 files, 64K, built in 2 seconds\n```\ndo you think something's wrong with my homebrew?\n. okay fixed it. i had to force it to use the head for autojump htough since i still keep getting autojump 15. i wonder why though\n. ",
    "bigfish": "it seems that the autojump formula is now missing from homebrew ? \nhttps://github.com/mxcl/homebrew/tree/master/Library/Formula/\n$ brew install autojump\nError: No available formula for autojump\n$ brew --version\n0.8.1\n. Hmm, that sucks about Homebrew. Also, the installer does not seem to work anymore on Lion (some grep errors). \nSo I got it working by the following \n1) checkout the git repo (I checked it out to ~/git/autojump)\n2) symlink the autojump script to /usr/bin:\nsudo ln -s ~/git/autojump/autojump /usr/bin/autojump\n3) source the autojump.bash in my .profile:\n. ~/git/autojump/autojump.bash\nSo it seem to work fine now, and I can just update by git pulling the repo. I guess this only works for bash, but zsh would probably just involve sourcing the autojump.zsh script from the .zshrc (or whatever its called).\n. it seems that the autojump formula is now missing from homebrew ? \nhttps://github.com/mxcl/homebrew/tree/master/Library/Formula/\n$ brew install autojump\nError: No available formula for autojump\n$ brew --version\n0.8.1\n. Hmm, that sucks about Homebrew. Also, the installer does not seem to work anymore on Lion (some grep errors). \nSo I got it working by the following \n1) checkout the git repo (I checked it out to ~/git/autojump)\n2) symlink the autojump script to /usr/bin:\nsudo ln -s ~/git/autojump/autojump /usr/bin/autojump\n3) source the autojump.bash in my .profile:\n. ~/git/autojump/autojump.bash\nSo it seem to work fine now, and I can just update by git pulling the repo. I guess this only works for bash, but zsh would probably just involve sourcing the autojump.zsh script from the .zshrc (or whatever its called).\n. ",
    "daveshah": "I just pulled down autojump version 21.0.3 from homebrew on OSX 10.8.2 and it looks as though I'm having the same issue:\n-bash: PROMPT_COMMAND: line 24: syntax error near unexpected token ;'\n-bash: PROMPT_COMMAND: line 24:update_terminal_cwd;  ; { [[ \"$AUTOJUMP_HOME\" == \"$HOME\" ]] && (autojump -a \"$(pwd ${_PWD_ARGS})\"&)>/dev/null 2>>\"${AUTOJUMP_DATA_DIR}/.autojump_errors\";} 2>/dev/null'\n. I just pulled down autojump version 21.0.3 from homebrew on OSX 10.8.2 and it looks as though I'm having the same issue:\n-bash: PROMPT_COMMAND: line 24: syntax error near unexpected token ;'\n-bash: PROMPT_COMMAND: line 24:update_terminal_cwd;  ; { [[ \"$AUTOJUMP_HOME\" == \"$HOME\" ]] && (autojump -a \"$(pwd ${_PWD_ARGS})\"&)>/dev/null 2>>\"${AUTOJUMP_DATA_DIR}/.autojump_errors\";} 2>/dev/null'\n. ",
    "henrik": "Okay, poked around a bit in the code. If you have a ~/.local/share dir, it will put the error file in ~/.local/share/autojump instead. So the fix is\nmkdir -p ~/.local/share\nthen open a new terminal window, close the old one and nuke the old error file.\n. Okay, poked around a bit in the code. If you have a ~/.local/share dir, it will put the error file in ~/.local/share/autojump instead. So the fix is\nmkdir -p ~/.local/share\nthen open a new terminal window, close the old one and nuke the old error file.\n. ",
    "Syzygies": "T'would have been nice to warn of this earlier in the documentation. Many of us have a \"one strike rule\" for that kind of crud. I almost simply uninstalled autojump, but googled the issue on a lark.\n. T'would have been nice to warn of this earlier in the documentation. Many of us have a \"one strike rule\" for that kind of crud. I almost simply uninstalled autojump, but googled the issue on a lark.\n. ",
    "issa-tseng": "I can confirm that the file no longer appears.\n. I can confirm that the file no longer appears.\n. ",
    "ghost": "Hello,\nI did what you explained and now when I open a terminal I get:\nbash: /etc/profile.d/autojump.bash: No such file or directory\ncbrunos@foxdie: ~$\nAny other ideas?\nOn Tue, Jul 26, 2011 at 10:08 AM, joelthelion \nreply@reply.github.comwrote:\n\nI can confirm this is not normal at all :)\nCan you try sourcing /etc/profile.d/autojump.bash (assuming you're using\nbash) directly in your bashrc? Then j and jumpstat should be defined\n(they're bash aliases), and the PROMPT_COMMAND environment variable should\ncontain autojump related stuff.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joelthelion/autojump/issues/65#issuecomment-1652441\n\n\nRodrigues Bruno\nhttp://cbrunos.wordpress.com\n. Ok, so I downloaded the latest autojump version (v15) and copy pasted autojump.bash to /etc/profile.d and now it works great. I think it's a problem with the package that is on Ubuntu repos?\n. Sure, here it is:\ncbrunos@bamboo:~$ dpkg -L autojump\n/.\n/usr\n/usr/bin\n/usr/bin/autojump\n/usr/share\n/usr/share/man\n/usr/share/man/man1\n/usr/share/man/man1/autojump.1.gz\n/usr/share/autojump\n/usr/share/autojump/autojump.bash\n/usr/share/autojump/autojump.zsh\n/usr/share/autojump/autojump.sh\n/usr/share/zsh\n/usr/share/zsh/functions\n/usr/share/zsh/functions/Completion\n/usr/share/zsh/functions/Completion/Unix\n/usr/share/zsh/functions/Completion/Unix/_j\n/usr/share/doc\n/usr/share/doc/autojump\n/usr/share/doc/autojump/README.Debian\n/usr/share/doc/autojump/copyright\n/usr/share/doc/autojump/README.rst.gz\n/usr/share/doc/autojump/changelog.Debian.gz\n/usr/share/lintian\n/usr/share/lintian/overrides\n/usr/share/lintian/overrides/autojump\n. To remove a directory... or to prevent writing a directory on autojump database\nafter thinking for a while, I arrived to this solution in bash, that is: to avoid entire sessions being saved by autojump\n~/.bashrc\n```\nif [ $NO_AUTOJUMP ]; then\n    echo -en \"\\nno autojump\\n\"\nelse\n    # database is in: ~/.local/share/autojump\n    . /usr/share/autojump/autojump.sh\nfi\n(...)\nif [ -f ~/.bash_aliases ]; then\n    . ~/.bash_aliases\nfi\n```\n~/.bash_aliases\nalias bashnj='NO_AUTOJUMP=1 bash'. Hello,\nI did what you explained and now when I open a terminal I get:\nbash: /etc/profile.d/autojump.bash: No such file or directory\ncbrunos@foxdie: ~$\nAny other ideas?\nOn Tue, Jul 26, 2011 at 10:08 AM, joelthelion \nreply@reply.github.comwrote:\n\nI can confirm this is not normal at all :)\nCan you try sourcing /etc/profile.d/autojump.bash (assuming you're using\nbash) directly in your bashrc? Then j and jumpstat should be defined\n(they're bash aliases), and the PROMPT_COMMAND environment variable should\ncontain autojump related stuff.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joelthelion/autojump/issues/65#issuecomment-1652441\n\n\nRodrigues Bruno\nhttp://cbrunos.wordpress.com\n. Ok, so I downloaded the latest autojump version (v15) and copy pasted autojump.bash to /etc/profile.d and now it works great. I think it's a problem with the package that is on Ubuntu repos?\n. Sure, here it is:\ncbrunos@bamboo:~$ dpkg -L autojump\n/.\n/usr\n/usr/bin\n/usr/bin/autojump\n/usr/share\n/usr/share/man\n/usr/share/man/man1\n/usr/share/man/man1/autojump.1.gz\n/usr/share/autojump\n/usr/share/autojump/autojump.bash\n/usr/share/autojump/autojump.zsh\n/usr/share/autojump/autojump.sh\n/usr/share/zsh\n/usr/share/zsh/functions\n/usr/share/zsh/functions/Completion\n/usr/share/zsh/functions/Completion/Unix\n/usr/share/zsh/functions/Completion/Unix/_j\n/usr/share/doc\n/usr/share/doc/autojump\n/usr/share/doc/autojump/README.Debian\n/usr/share/doc/autojump/copyright\n/usr/share/doc/autojump/README.rst.gz\n/usr/share/doc/autojump/changelog.Debian.gz\n/usr/share/lintian\n/usr/share/lintian/overrides\n/usr/share/lintian/overrides/autojump\n. To remove a directory... or to prevent writing a directory on autojump database\nafter thinking for a while, I arrived to this solution in bash, that is: to avoid entire sessions being saved by autojump\n~/.bashrc\n```\nif [ $NO_AUTOJUMP ]; then\n    echo -en \"\\nno autojump\\n\"\nelse\n    # database is in: ~/.local/share/autojump\n    . /usr/share/autojump/autojump.sh\nfi\n(...)\nif [ -f ~/.bash_aliases ]; then\n    . ~/.bash_aliases\nfi\n```\n~/.bash_aliases\nalias bashnj='NO_AUTOJUMP=1 bash'. ",
    "burgerga": "I installed autojump in oneiric, and \"locate autojump.bash\" gives me /usr/share/autojump/autojump.bash, so for everyone having trouble this should be the file to source.\n. I installed autojump in oneiric, and \"locate autojump.bash\" gives me /usr/share/autojump/autojump.bash, so for everyone having trouble this should be the file to source.\n. ",
    "JamesMcMahon": "Seems strange that the Ubuntu doesn't source autojump.bash by default. I can confirm that this is still the case under 12.04.\napt-file is useful for diagnosing stuff like this, see http://askubuntu.com/questions/173821/\n. Seems strange that the Ubuntu doesn't source autojump.bash by default. I can confirm that this is still the case under 12.04.\napt-file is useful for diagnosing stuff like this, see http://askubuntu.com/questions/173821/\n. ",
    "tareq1988": "Using 12.04, same happened for me.\n. Using 12.04, same happened for me.\n. ",
    "Natim": "Same problem here on 12.10 - Since you install autojump by hand, it should autoconfigure it to work with bash or at least ask you for it or display some informations.\n. Same problem here on 12.10 - Since you install autojump by hand, it should autoconfigure it to work with bash or at least ask you for it or display some informations.\n. ",
    "yugaljindle": "Same problem with Ubuntu 13.04\nAutojump doesn't work and j is not found.\nAny alternate place to install autojump ?\n. There is file that needs to be sourced for it to work. I don't remember which ( Please google ).\nThis is due to security policies that it can-not be done automatically. ( If I am not wrong )\nIf you are using oh-my-zsh like myself, then you can add autojump plugin in .zshrc which does the needful for autojump to work.\nI know its a bummer - may be someone comes up with a solution soon.\n( I am not one of the developer of autojump - so my info might not be most appropriate )\nRefer this : https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/autojump/autojump.plugin.zsh\nYou should be fine !\n. :)\n. Same problem with Ubuntu 13.04\nAutojump doesn't work and j is not found.\nAny alternate place to install autojump ?\n. There is file that needs to be sourced for it to work. I don't remember which ( Please google ).\nThis is due to security policies that it can-not be done automatically. ( If I am not wrong )\nIf you are using oh-my-zsh like myself, then you can add autojump plugin in .zshrc which does the needful for autojump to work.\nI know its a bummer - may be someone comes up with a solution soon.\n( I am not one of the developer of autojump - so my info might not be most appropriate )\nRefer this : https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/autojump/autojump.plugin.zsh\nYou should be fine !\n. :)\n. ",
    "ElijahLynn": "Same here on 13.04.\nUpdate: For anyone having this issue just do what it says in the readme.md.\ncat /usr/share/doc/autojump/README.Debian\nUpdate2: j works now with the above instructions but jo and jc and jco do not, 'command not found'. I think it is because Ubuntu's repo is at v20 (autojump --version) and the latest tag I see is at v21.6.9\n. @yugal Thanks for your reply. I got it working by adding the below code to ~/.bash_profile and then running source ~/.bash_profile.\n```\nManually source autojump - https://github.com/joelthelion/autojump\n. /usr/share/autojump/autojump.sh\n```\n. Same here on 13.04.\nUpdate: For anyone having this issue just do what it says in the readme.md.\ncat /usr/share/doc/autojump/README.Debian\nUpdate2: j works now with the above instructions but jo and jc and jco do not, 'command not found'. I think it is because Ubuntu's repo is at v20 (autojump --version) and the latest tag I see is at v21.6.9\n. @yugal Thanks for your reply. I got it working by adding the below code to ~/.bash_profile and then running source ~/.bash_profile.\n```\nManually source autojump - https://github.com/joelthelion/autojump\n. /usr/share/autojump/autojump.sh\n```\n. ",
    "prafulliu": "Thanks. Same problem solved in Ubuntu 12.04.\n. Thanks. Same problem solved in Ubuntu 12.04.\n. ",
    "lpanebr": "thanks!\n. thanks!\n. ",
    "ChanderG": "Thanks.\n. Thanks.\n. ",
    "baryaqod": "Thanks. Same problem solved in Ubuntu Debian 8.\n1. adding . /usr/share/autojump/autojump.sh ( remember to give whitespace after .   :) ) , as told in /usr/share/doc/autojump/README.Debian. ( if you dont find in /usr/share/ in your system. you can download the .deb file and read the README.Debian. \n2. source ~/.bashrc or  ~/.bash_profile\n3. Solved :).\nthanks everyone :)\n//before, i thought some thing wrong in my instalation, but for Debian we have to do it manually.\n. Thanks. Same problem solved in Ubuntu Debian 8.\n1. adding . /usr/share/autojump/autojump.sh ( remember to give whitespace after .   :) ) , as told in /usr/share/doc/autojump/README.Debian. ( if you dont find in /usr/share/ in your system. you can download the .deb file and read the README.Debian. \n2. source ~/.bashrc or  ~/.bash_profile\n3. Solved :).\nthanks everyone :)\n//before, i thought some thing wrong in my instalation, but for Debian we have to do it manually.\n. ",
    "KushalP": "np!\n. np!\n. ",
    "asmdroid": "Resolved - thank you.\n. Resolved - thank you.\n. ",
    "dcoeurjo": "salut Joel,\nPerfect: I've renamed autojump.py and everything works now  (my jumpstat is fine too).\nWhat do you mean by \"incriminated file\", do you want me to send you the autojump.py backup? \nthanks for the fix by the way..\n. salut Joel,\nPerfect: I've renamed autojump.py and everything works now  (my jumpstat is fine too).\nWhat do you mean by \"incriminated file\", do you want me to send you the autojump.py backup? \nthanks for the fix by the way..\n. ",
    "jkuan": "Yeah, the sha1 hash isn't very user-friendly. I changed it to use git describe which will give \"release-v17\" as long as the repo is on the tagged commit. I also changed it so the Makefile creates a tarball of the last tagged commit.\nNote: sed -i creates an extra file on my system, so I chose not to use it\n. I send another pull request for a branch without the last few commits.\nI guess I was expecting git to handle renaming autojump to autojump.py better. \n. I have a question about the original issue: is the problem that applets can't import functions from /usr/bin/autojump, or that it's against debian guidelines to import functions from a file located in the bin directory? I thought at first that the concern was not always being able to locate the functions to import, but since autojump is installed by the package manager that shouldn't be a problem.\n. The minimum version needed should be python 2.6. \nAccording to http://www.python.org/dev/peps/pep-3110/ the try-except syntax used is a python 3 change backported 2.6+.\n. Can you go to ~/.local/share/autojump for the user account and root, and show us the contents of autojump.txt? Also, can you post the contents of your .zshrc?\n. Can you give more details? It's hard to help if we don't know which versions of zsh, oh-my-zsh, and autojump you're using. Also, how did you install these programs and what operating system are you using?\nWithout any more details, I would suggest you try autojump without oh-my-zsh and tell us what you see.\n. Oh, it does look like argparse got backported to 2.7.\nSince OS X 10.6.8 uses Python2.6 a note should be added somewhere.\n. Yes, I added a dependency on python2.7 for the macports version of autojump.\n. @eallik What OS and shell (with versions) are you using?\n. It seems reproducible on OSX (bash 4.2.28 and autojump v20 from macports):\n~$ rm ~/.local/share/autojump/autojump.txt\nremove /Users/jkuan/.local/share/autojump/autojump.txt? y\n~$ cat !$\ncat ~/.local/share/autojump/autojump.txt\n1.0 /Users/jkuan/.local/share\n~$ cd ~/Desktop/tmp\n~/Desktop/tmp$ j sym\nautojump: directory 'sym' not found\nTry `autojump --help` for more information.\n~/Desktop/tmp$ cd test-sym\n~/.../tmp/test-sym$ cd\n~$ j sym\nautojump: directory 'sym' not found\nTry `autojump --help` for more information.\n~$ cat ~/.local/share/autojump/autojump.txt\n2.0 /Users/jkuan/Desktop/tmp\n1.0 /Users/jkuan/Desktop/tmp/test\n1.0 /Users/jkuan/.local/share\n~$ echo $AUTOJUMP_KEEP_SYMLINKS\n1\n. From the pwd man page:\nIf no options are specified, the -L option is assumed.\nAlso,\n~/.../tmp/test-sym$ pwd\n/Users/jkuan/Desktop/tmp/test-sym\n~/.../tmp/test-sym$ pwd -L\n/Users/jkuan/Desktop/tmp/test-sym\n~/.../tmp/test-sym$ pwd -P\n/Users/jkuan/Desktop/tmp/test\n. It looks like this is the code that gets the current directory:\ntry:\n    current_dir = decode(os.path.realpath(os.curdir))\nexcept OSError:\n    current_dir = None\nI don't see how this will ever give the logical path, since realpath resolves all symbolic links:\n```\n~/.../tmp/test-sym$ pwd\n/Users/jkuan/Desktop/tmp/test-sym\n~/.../tmp/test-sym$ python2.7\nPython 2.7.3 (default, Apr 29 2012, 03:21:21) \n[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\nimport os\nos.path.realpath(os.curdir)\n'/Users/jkuan/Desktop/tmp/test'\nos.getcwd()\n'/Users/jkuan/Desktop/tmp/test'\n```\n. If all the .sh scripts in a directory like /etc/profile.d/ get sourced automatically by bash and/or zsh, then it makes sense to have a .sh wrapper. There would be no configuration required by the user.\n\nHowever, I don't know if any package maintainers rely on all the .sh files /etc/profile.d being sourced. For macports, I now tell users to source autojump.bash for bash or autojump.zsh for zsh. \n. The install messages can tell users to source autojump.$shell without breaking backwards compatibility. You just need to keep autojump.sh around.\n. We should probably all just switch to using the releases, since downloads are deprecated: https://github.com/blog/1302-goodbye-uploads\nIs there a specific issue your package manager has with URLs like: https://github.com/joelthelion/autojump/archive/release-v21.7.1.tar.gz?\n. You could run these commands in a new shell where you don't source the autojump.{sh, bash, zsh} file. Might be tricky depending on how autojump is installed and/or what distro you use and/or what shell you use.\n. There is an autojump.tcsh file that you can source that provides basic functionality. However, the installation script needs to be run under bash or zsh, so you may want to try using a package manager or start a bash shell just to run that one script.\n. Yeah, the sha1 hash isn't very user-friendly. I changed it to use git describe which will give \"release-v17\" as long as the repo is on the tagged commit. I also changed it so the Makefile creates a tarball of the last tagged commit.\nNote: sed -i creates an extra file on my system, so I chose not to use it\n. I send another pull request for a branch without the last few commits.\nI guess I was expecting git to handle renaming autojump to autojump.py better. \n. I have a question about the original issue: is the problem that applets can't import functions from /usr/bin/autojump, or that it's against debian guidelines to import functions from a file located in the bin directory? I thought at first that the concern was not always being able to locate the functions to import, but since autojump is installed by the package manager that shouldn't be a problem.\n. The minimum version needed should be python 2.6. \nAccording to http://www.python.org/dev/peps/pep-3110/ the try-except syntax used is a python 3 change backported 2.6+.\n. Can you go to ~/.local/share/autojump for the user account and root, and show us the contents of autojump.txt? Also, can you post the contents of your .zshrc?\n. Can you give more details? It's hard to help if we don't know which versions of zsh, oh-my-zsh, and autojump you're using. Also, how did you install these programs and what operating system are you using?\nWithout any more details, I would suggest you try autojump without oh-my-zsh and tell us what you see.\n. Oh, it does look like argparse got backported to 2.7.\nSince OS X 10.6.8 uses Python2.6 a note should be added somewhere.\n. Yes, I added a dependency on python2.7 for the macports version of autojump.\n. @eallik What OS and shell (with versions) are you using?\n. It seems reproducible on OSX (bash 4.2.28 and autojump v20 from macports):\n~$ rm ~/.local/share/autojump/autojump.txt\nremove /Users/jkuan/.local/share/autojump/autojump.txt? y\n~$ cat !$\ncat ~/.local/share/autojump/autojump.txt\n1.0 /Users/jkuan/.local/share\n~$ cd ~/Desktop/tmp\n~/Desktop/tmp$ j sym\nautojump: directory 'sym' not found\nTry `autojump --help` for more information.\n~/Desktop/tmp$ cd test-sym\n~/.../tmp/test-sym$ cd\n~$ j sym\nautojump: directory 'sym' not found\nTry `autojump --help` for more information.\n~$ cat ~/.local/share/autojump/autojump.txt\n2.0 /Users/jkuan/Desktop/tmp\n1.0 /Users/jkuan/Desktop/tmp/test\n1.0 /Users/jkuan/.local/share\n~$ echo $AUTOJUMP_KEEP_SYMLINKS\n1\n. From the pwd man page:\nIf no options are specified, the -L option is assumed.\nAlso,\n~/.../tmp/test-sym$ pwd\n/Users/jkuan/Desktop/tmp/test-sym\n~/.../tmp/test-sym$ pwd -L\n/Users/jkuan/Desktop/tmp/test-sym\n~/.../tmp/test-sym$ pwd -P\n/Users/jkuan/Desktop/tmp/test\n. It looks like this is the code that gets the current directory:\ntry:\n    current_dir = decode(os.path.realpath(os.curdir))\nexcept OSError:\n    current_dir = None\nI don't see how this will ever give the logical path, since realpath resolves all symbolic links:\n```\n~/.../tmp/test-sym$ pwd\n/Users/jkuan/Desktop/tmp/test-sym\n~/.../tmp/test-sym$ python2.7\nPython 2.7.3 (default, Apr 29 2012, 03:21:21) \n[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\nimport os\nos.path.realpath(os.curdir)\n'/Users/jkuan/Desktop/tmp/test'\nos.getcwd()\n'/Users/jkuan/Desktop/tmp/test'\n```\n. If all the .sh scripts in a directory like /etc/profile.d/ get sourced automatically by bash and/or zsh, then it makes sense to have a .sh wrapper. There would be no configuration required by the user.\n\nHowever, I don't know if any package maintainers rely on all the .sh files /etc/profile.d being sourced. For macports, I now tell users to source autojump.bash for bash or autojump.zsh for zsh. \n. The install messages can tell users to source autojump.$shell without breaking backwards compatibility. You just need to keep autojump.sh around.\n. We should probably all just switch to using the releases, since downloads are deprecated: https://github.com/blog/1302-goodbye-uploads\nIs there a specific issue your package manager has with URLs like: https://github.com/joelthelion/autojump/archive/release-v21.7.1.tar.gz?\n. You could run these commands in a new shell where you don't source the autojump.{sh, bash, zsh} file. Might be tricky depending on how autojump is installed and/or what distro you use and/or what shell you use.\n. There is an autojump.tcsh file that you can source that provides basic functionality. However, the installation script needs to be run under bash or zsh, so you may want to try using a package manager or start a bash shell just to run that one script.\n. ",
    "xiaonaitong": "\nos.rename throw  exception on windows when dest file already exist.I'll  change  shutils.copy to shutils.move.\nI'll add some comment\nyou are right, the completion patch can't handle file with spaces.I'll try to fix it\nThat's the right way\n\nThanks very much for your reps\n. Hi joelthelion\nIs this ok?\nbtw: I'm sorry that the commit history is quite messy.I should use rebase instead of merge to catch up with your repo.I don't know how to clean it.\n. @orefalo\n why  trying to compile python?  just download windows version and add the install dir to path env variable ,it doesn't work?\n. - os.rename throw  exception on windows when dest file already exist.I'll  change  shutils.copy to shutils.move.\n- I'll add some comment\n- you are right, the completion patch can't handle file with spaces.I'll try to fix it\n- That's the right way\nThanks very much for your reps\n. Hi joelthelion\nIs this ok?\nbtw: I'm sorry that the commit history is quite messy.I should use rebase instead of merge to catch up with your repo.I don't know how to clean it.\n. @orefalo\n why  trying to compile python?  just download windows version and add the install dir to path env variable ,it doesn't work?\n. ",
    "orefalo": "+5 I also want mingw support (actually msysgit support)\n. will give it a try this pm\n. ok msysgit is missing python, will take me more time to get this up and running.\n. Tried to get python to compile no luck so far\nPlz don't count on me at this time\nSorry\n. I don't use msys but msysgit. if msys is a lightweight version of cygwin, msysgit is even lighter... just the minimums to run git. I wanted to use the script in this context.\n. Unfortunalty Windows is not my primary OS, not is Msys.\nI do OSX 90% of my time, a windows msysgit for the remaining.\nBottom line, I might not be the best tester.\n. finally tried... and IT works!\n. +5 I also want mingw support (actually msysgit support)\n. will give it a try this pm\n. ok msysgit is missing python, will take me more time to get this up and running.\n. Tried to get python to compile no luck so far\nPlz don't count on me at this time\nSorry\n. I don't use msys but msysgit. if msys is a lightweight version of cygwin, msysgit is even lighter... just the minimums to run git. I wanted to use the script in this context.\n. Unfortunalty Windows is not my primary OS, not is Msys.\nI do OSX 90% of my time, a windows msysgit for the remaining.\nBottom line, I might not be the best tester.\n. finally tried... and IT works!\n. ",
    "bmc": "No worries. My own open source code is taking currently taking a back seat to paying client work, too.\nBrian Clapper, bmc@ardentex.com\nOn Oct 5, 2011, at 6:36, Joel Schaererreply@reply.github.com wrote:\n\n(sorry for not answering earlier. I am very interested in your patch, but I'm trying to fix other issues first and I don't have a lot of time to dedicate to autojump).\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joelthelion/autojump/pull/75#issuecomment-2296531\n. On 12/08/2011 05:28 AM, Joel Schaerer wrote:\nThe problem I see with your patch is that the user is never going to find $prefix/etc/autojump/autojump.bash . I think it would be better to copy those two files in $prefix/bin along with autojump and jumpapplet. What do you think?\n\nWell, since the install script edits .bashrc, and displays instructions, I \ndon't really see the problem. However, since it's your baby, it's ultimately \nyour call. ;-)\nEither way, if --prefix ends up working as expected, I'm good with it.\n-Brian\nBrian Clapper, http://www.clapper.org/bmc/\nA famous Lisp Hacker noticed an Undergraduate sitting in front of a Xerox\n1108, trying to edit a complex Klone network via a browser. Wanting to\nhelp, the Hacker clicked one of the nodes in the network with the mouse,\nand asked \"what do you see?\" Very earnestly, the Undergraduate replied \"I\nsee a cursor.\" The Hacker then quickly pressed the boot toggle at the back\nof the keyboard, while simultaneously hitting the Undergraduate over the\nhead with a thick Interlisp Manual. The Undergraduate was then Enlightened.\n. No worries. My own open source code is taking currently taking a back seat to paying client work, too.\nBrian Clapper, bmc@ardentex.com\nOn Oct 5, 2011, at 6:36, Joel Schaererreply@reply.github.com wrote:\n\n(sorry for not answering earlier. I am very interested in your patch, but I'm trying to fix other issues first and I don't have a lot of time to dedicate to autojump).\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/joelthelion/autojump/pull/75#issuecomment-2296531\n. On 12/08/2011 05:28 AM, Joel Schaerer wrote:\nThe problem I see with your patch is that the user is never going to find $prefix/etc/autojump/autojump.bash . I think it would be better to copy those two files in $prefix/bin along with autojump and jumpapplet. What do you think?\n\nWell, since the install script edits .bashrc, and displays instructions, I \ndon't really see the problem. However, since it's your baby, it's ultimately \nyour call. ;-)\nEither way, if --prefix ends up working as expected, I'm good with it.\n-Brian\nBrian Clapper, http://www.clapper.org/bmc/\nA famous Lisp Hacker noticed an Undergraduate sitting in front of a Xerox\n1108, trying to edit a complex Klone network via a browser. Wanting to\nhelp, the Hacker clicked one of the nodes in the network with the mouse,\nand asked \"what do you see?\" Very earnestly, the Undergraduate replied \"I\nsee a cursor.\" The Hacker then quickly pressed the boot toggle at the back\nof the keyboard, while simultaneously hitting the Undergraduate over the\nhead with a thick Interlisp Manual. The Undergraduate was then Enlightened.\n. ",
    "kballenegger": "Yeah, that thread is about the same issue and quite thorough. I think this is mostly a failure on homebrew's part, in that it does not fetch the latest version, but rather the latest version at the time you last ran brew update.\n. Yeah, that thread is about the same issue and quite thorough. I think this is mostly a failure on homebrew's part, in that it does not fetch the latest version, but rather the latest version at the time you last ran brew update.\n. ",
    "msutherl": "~: bash --version\nGNU bash, version 3.2.48(1)-release (x86_64-apple-darwin11)\nCopyright (C) 2007 Free Software Foundation, Inc.\n. Hm, installed bash 4 and I still get the error...\n```\n~: bash --version\nGNU bash, version 4.2.10(2)-release (i386-apple-darwin11.1.0)\nCopyright (C) 2011 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later http://gnu.org/licenses/gpl.html\nThis is free software; you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n~: j Cellar\n-bash: /usr/local/Cellar/autojump/17/etc/autojump.bash: line 26: syntax error near unexpected token }'\n-bash: /usr/local/Cellar/autojump/17/etc/autojump.bash: line 26:}'\nautojump initialized\n-bash: j: command not found\n```\n(note, this may look confusing \u2013 the first time I run the j command, it initializes autojump then executes with the argument I previously provided.)\n. Pardon, I wasn't actually using Bash 4 there. Here's a proper test \u2013 also fails.\n~: echo $BASH_VERSION\n4.2.10(2)-release\n~: j Cellar\n-bash: /usr/local/Cellar/autojump/17/etc/autojump.bash: line 26: syntax error near unexpected token `}'\n-bash: /usr/local/Cellar/autojump/17/etc/autojump.bash: line 26: `}'\nautojump initialized\n-bash: j: command not found\n. Tracked down the issue. I had aliased the bash keyword \"done\". Whoops.\nalias done='say done'\n. Magically started working \u2013 possibly brew upgrade fixed it.\n. ~: bash --version\nGNU bash, version 3.2.48(1)-release (x86_64-apple-darwin11)\nCopyright (C) 2007 Free Software Foundation, Inc.\n. Hm, installed bash 4 and I still get the error...\n```\n~: bash --version\nGNU bash, version 4.2.10(2)-release (i386-apple-darwin11.1.0)\nCopyright (C) 2011 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later http://gnu.org/licenses/gpl.html\nThis is free software; you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n~: j Cellar\n-bash: /usr/local/Cellar/autojump/17/etc/autojump.bash: line 26: syntax error near unexpected token }'\n-bash: /usr/local/Cellar/autojump/17/etc/autojump.bash: line 26:}'\nautojump initialized\n-bash: j: command not found\n```\n(note, this may look confusing \u2013 the first time I run the j command, it initializes autojump then executes with the argument I previously provided.)\n. Pardon, I wasn't actually using Bash 4 there. Here's a proper test \u2013 also fails.\n~: echo $BASH_VERSION\n4.2.10(2)-release\n~: j Cellar\n-bash: /usr/local/Cellar/autojump/17/etc/autojump.bash: line 26: syntax error near unexpected token `}'\n-bash: /usr/local/Cellar/autojump/17/etc/autojump.bash: line 26: `}'\nautojump initialized\n-bash: j: command not found\n. Tracked down the issue. I had aliased the bash keyword \"done\". Whoops.\nalias done='say done'\n. Magically started working \u2013 possibly brew upgrade fixed it.\n. ",
    "sergiomb2": "yeah, on 2.6.6 works , but that information should be somewhere on readme or even code should test python version and says that python 2.6 is required \nThanks, great tool \n. Hi, sorry about delay ,\nI tested version 12 of autojump on python 2.5.2 and works great. \nthanks, \nI will change wiki and the readme (submit a pull request) later :)\n. Hi, \nFor Debian 5.0 lenny , version # 12 works well, since comes with python 2.5.x.\nBut you need run shell has bash \ncat /etc/passwd\nyou should have  /bin/bash , if I got /bin/sh , although /bin/sh is a link to bash but will not work.\nand mkdir .local and mkdir .local/share/ will put autojump things in proper dir which is .local/share/autojump/\non Debian 4.0 we have python 2.3.5 which don't worked , I don't try it much .\n. Hi I'm waiting for this tip thanks,\nSo  I propose add this piece of code on instation of autojump:\nimport sys\ncur_version = sys.version_info\nif (cur_version[0]==2 and cur_version[1]<4) or cur_version[0]<2 :\n     print \"autojump needs 2.6 for full oparation or 2.4/2.5 at minimus to work with release #12\"\n     sys.exit(1)\nelif cur_version[0]==2 and cur_version[1]<6:\n    print \"for python 2.4/2.5 you need to install release #12\"\n    sys.exit(2)\n. > I'm not sure referring older releases for older Python versions is the right thing to do.\ncat /etc/debian_version \n5.0.8\non this machine (Debian 5.0 lenny) I am using  autojump #12 and works well , and I am very happy because I already can't live without it :) .\nI think, for special cases, we could install #12, Debian Leny just have 2 year.  and just if you detect python 2.4 or 2.5 \n. great , closing , and thanks for support \n. yeah, on 2.6.6 works , but that information should be somewhere on readme or even code should test python version and says that python 2.6 is required \nThanks, great tool \n. Hi, sorry about delay ,\nI tested version 12 of autojump on python 2.5.2 and works great. \nthanks, \nI will change wiki and the readme (submit a pull request) later :)\n. Hi, \nFor Debian 5.0 lenny , version # 12 works well, since comes with python 2.5.x.\nBut you need run shell has bash \ncat /etc/passwd\nyou should have  /bin/bash , if I got /bin/sh , although /bin/sh is a link to bash but will not work.\nand mkdir .local and mkdir .local/share/ will put autojump things in proper dir which is .local/share/autojump/\non Debian 4.0 we have python 2.3.5 which don't worked , I don't try it much .\n. Hi I'm waiting for this tip thanks,\nSo  I propose add this piece of code on instation of autojump:\nimport sys\ncur_version = sys.version_info\nif (cur_version[0]==2 and cur_version[1]<4) or cur_version[0]<2 :\n     print \"autojump needs 2.6 for full oparation or 2.4/2.5 at minimus to work with release #12\"\n     sys.exit(1)\nelif cur_version[0]==2 and cur_version[1]<6:\n    print \"for python 2.4/2.5 you need to install release #12\"\n    sys.exit(2)\n. > I'm not sure referring older releases for older Python versions is the right thing to do.\ncat /etc/debian_version \n5.0.8\non this machine (Debian 5.0 lenny) I am using  autojump #12 and works well , and I am very happy because I already can't live without it :) .\nI think, for special cases, we could install #12, Debian Leny just have 2 year.  and just if you detect python 2.4 or 2.5 \n. great , closing , and thanks for support \n. ",
    "vitobotta": "Hi, thank you for the reply. I am sure I tried the latest version available at the time but I will try again just in case. Thank you for your availability :)\n. Hey Joel, I had a chance to try it again today and it does seem like it's been fixed since it's working great again. Thanks! Once you get used to it it's a nightmare without :D\n. Hi, thank you for the reply. I am sure I tried the latest version available at the time but I will try again just in case. Thank you for your availability :)\n. Hey Joel, I had a chance to try it again today and it does seem like it's been fixed since it's working great again. Thanks! Once you get used to it it's a nightmare without :D\n. ",
    "jessesanford": "no problem. I really like this addition to my command line.\n. no problem. I really like this addition to my command line.\n. ",
    "viking777": "I just noticed that if I run autojump from a root terminal it seems to be working normally. The previous information was all taken from a user terminal.\n. I am very sorry, but I can't. When I saw that this thread had been moved to 'Closed' without being answered I assumed it was not going to be answered, so I manually uninstalled version 18 and tried again with the Fedora package (which was version 15). I had exactly the same problem with this until I switched to using bash instead of zsh and on bash it appears to work normally. What I think might have been confusing it is the fact that although I was using zsh it was not a login shell I simply launched it with the -e switch (gnome-shell -e zsh) although that is purely speculation on my part. I have since uninstalled zsh as well. So basically I have worked around my own problem with this program. Thank you for replying anyway.\n. Thank you for the reply, and no I don't require any further help, the program works well enough with bash. \nI closed my own report! That's embarrassing. I thought I was being snubbed - Ha Ha ! Anyway I will close it this time - deliberately.\n. I just noticed that if I run autojump from a root terminal it seems to be working normally. The previous information was all taken from a user terminal.\n. I am very sorry, but I can't. When I saw that this thread had been moved to 'Closed' without being answered I assumed it was not going to be answered, so I manually uninstalled version 18 and tried again with the Fedora package (which was version 15). I had exactly the same problem with this until I switched to using bash instead of zsh and on bash it appears to work normally. What I think might have been confusing it is the fact that although I was using zsh it was not a login shell I simply launched it with the -e switch (gnome-shell -e zsh) although that is purely speculation on my part. I have since uninstalled zsh as well. So basically I have worked around my own problem with this program. Thank you for replying anyway.\n. Thank you for the reply, and no I don't require any further help, the program works well enough with bash. \nI closed my own report! That's embarrassing. I thought I was being snubbed - Ha Ha ! Anyway I will close it this time - deliberately.\n. ",
    "sickill": "Same issue here. I'm using autojump as regular user on Fedora 16 with zsh. All previous versions worked great. Today I updated to v19 and it started to behave like @viking777 described. Can't jump to any dir because the cd command is given multiple directories joined with newline character.\n. I'm not sure what was the version from before the upgrade (maybe 15) but 19 has this issue.\n. Ok, nervermind, it works fine. Together with autojump I upgraded zsh but haven't restarted shell. After restarting terminal all is working great. \n. Same issue here. I'm using autojump as regular user on Fedora 16 with zsh. All previous versions worked great. Today I updated to v19 and it started to behave like @viking777 described. Can't jump to any dir because the cd command is given multiple directories joined with newline character.\n. I'm not sure what was the version from before the upgrade (maybe 15) but 19 has this issue.\n. Ok, nervermind, it works fine. Together with autojump I upgraded zsh but haven't restarted shell. After restarting terminal all is working great. \n. ",
    "a-b": "Sure, sorry for that. I'm using OS-X 10.7.2 have lastest versions of all other tools:\nzsh 4.3.12 (i386-apple-darwin11.2.0) installed through the brew 0.8.1 (lastest)\nalso I'm using head version of the oh-my-zsh 3e9493fb301b7d34bb6861787d97067ec9365268\nproblem: \nin Bash \n1. type  j + [tab_key]\n2. got j __\n1/Users/ab/Projects/1        2/Users/ab/Projects/2\nin ZSH\n1. type  j +  [tab_key]\n2. got list of local files & directiories\nThanks a lot for help!\n. Homebrew is open source and located at github, so don't hesitate to update recipe ;) I'd like to do that, but out of keyboard.\n. https://github.com/mxcl/homebrew/issues/9470\n. they just deleted autojump from the homebrew :(\nhttps://github.com/mxcl/homebrew/commit/5d2dc54c362cdbeb1df0b1eeab78b8249f17178a\n. \n. I still have issue when autojump that I installed through the brew.\nI beleive it's important to distribute such great software as autojump \nthrough the package managers like brew, at least to be able to get \nupdates without troubles.\n. I'm prety much newbe in zsh, but regarding my installation that folder looks correct.\nThank you very much!\n. Thank you!\n. Thanks @shelhamer ,  it works in ZSH just perfect for me, I think it would be cool to automate inclussion of\nbash\nif [ -f `brew --prefix`/etc/autojump ]; then\n  . `brew --prefix`/etc/autojump\nfi\nto the .zshrc if current shell is ZSH\nTemporary way to install autojump\n``` bash\ncd /usr/local\ncurl https://github.com/mxcl/homebrew/pull/9560.patch | git am\nbrew install autojump\n```\n. It works for me in OS-X\n. Sure, sorry for that. I'm using OS-X 10.7.2 have lastest versions of all other tools:\nzsh 4.3.12 (i386-apple-darwin11.2.0) installed through the brew 0.8.1 (lastest)\nalso I'm using head version of the oh-my-zsh 3e9493fb301b7d34bb6861787d97067ec9365268\nproblem: \nin Bash \n1. type  j + [tab_key]\n2. got j __\n1/Users/ab/Projects/1        2/Users/ab/Projects/2\nin ZSH\n1. type  j +  [tab_key]\n2. got list of local files & directiories\nThanks a lot for help!\n. Homebrew is open source and located at github, so don't hesitate to update recipe ;) I'd like to do that, but out of keyboard.\n. https://github.com/mxcl/homebrew/issues/9470\n. they just deleted autojump from the homebrew :(\nhttps://github.com/mxcl/homebrew/commit/5d2dc54c362cdbeb1df0b1eeab78b8249f17178a\n. \n. I still have issue when autojump that I installed through the brew.\nI beleive it's important to distribute such great software as autojump \nthrough the package managers like brew, at least to be able to get \nupdates without troubles.\n. I'm prety much newbe in zsh, but regarding my installation that folder looks correct.\nThank you very much!\n. Thank you!\n. Thanks @shelhamer ,  it works in ZSH just perfect for me, I think it would be cool to automate inclussion of\nbash\nif [ -f `brew --prefix`/etc/autojump ]; then\n  . `brew --prefix`/etc/autojump\nfi\nto the .zshrc if current shell is ZSH\nTemporary way to install autojump\n``` bash\ncd /usr/local\ncurl https://github.com/mxcl/homebrew/pull/9560.patch | git am\nbrew install autojump\n```\n. It works for me in OS-X\n. ",
    "brainopia": "I'm having the same problem. I'm also using os x 10.7.2, zsh 4.3.12, but without ohmyzsh. I've installed 1.9 version of autojump by sourcing etc/autojump.zsh directly in .zshrc.\n. Ok, found the reason. _j should be copied to any of the zsh $fpath but homebrew recipe skips it (also it installs outdated 1.7 version). As a solution I advise to install autojump directly or copy-paste _j in appropriate directory.\n. I'm having the same problem. I'm also using os x 10.7.2, zsh 4.3.12, but without ohmyzsh. I've installed 1.9 version of autojump by sourcing etc/autojump.zsh directly in .zshrc.\n. Ok, found the reason. _j should be copied to any of the zsh $fpath but homebrew recipe skips it (also it installs outdated 1.7 version). As a solution I advise to install autojump directly or copy-paste _j in appropriate directory.\n. ",
    "xuhdev": "Seems this doesn't work again... The reason may be mxcl/homebrew#17746?\n. I'm on 21.4.2 -- you are right, I'm on an older version. But homebrew still need to add back the installation of _j file.\n. Sorry this issue doesn't belong to autojump. Closed.\n. I'm using the latest autojump from the git repository.\n. I kind of saw where the problem came from. After I corrected the float number as you said, I got this new error when I used cd:\nIOError: [Errno 2] No such file or directory: '/home/hong/.local/share/autojump/data.tmp'\nThen, after that, when I used cd again, I got the floating point number error again. I checked that I have the write permission to that directory.\n. @wting Sorry for the confusion. I just reinvestigated this problem and it turns out that it's not actually caused by autojump. Thanks for your reply!\n. Seems this doesn't work again... The reason may be mxcl/homebrew#17746?\n. I'm on 21.4.2 -- you are right, I'm on an older version. But homebrew still need to add back the installation of _j file.\n. Sorry this issue doesn't belong to autojump. Closed.\n. I'm using the latest autojump from the git repository.\n. I kind of saw where the problem came from. After I corrected the float number as you said, I got this new error when I used cd:\nIOError: [Errno 2] No such file or directory: '/home/hong/.local/share/autojump/data.tmp'\nThen, after that, when I used cd again, I got the floating point number error again. I checked that I have the write permission to that directory.\n. @wting Sorry for the confusion. I just reinvestigated this problem and it turns out that it's not actually caused by autojump. Thanks for your reply!\n. ",
    "chbrown": "Aw, you guys are the best, thanks! That's exactly what I wanted, and I just added a couple of lines to the docs to make it clear to anyone who had the same question I did (see your pull requests).\n. No difference between those two commands.\nAnother odd thing is that, when on the remote mount, even giving me back a prompt after doing a simple ls takes much longer with autojump loaded. I do a j Volumes gmm and it shows me the correct directory in red almost immediately, then stalls before giving me my prompt back.\nI don't know the autojump internals, but I might have guessed that some recent change is doing a check after each command, when preloading bash completion possibilities (are those preloaded?), to ensure that all matching options in the autojump database are valid paths. And checking the ones on the SSHFS mount take a long time when it's mounted. Does that sound like it might be the problem?\n. I get the lag even when not using j at all, but only if autojump is loaded. Whatever it does that looks into cd to save new directories (or fill out the autocomplete, see (0)) -- that must be what's slowing it down.\n(0)\n[chbrown@air ~]$ j gm<TAB>\n...1__/Users/chbrown/github/gmm-reference-time        ...3__/Users/chbrown/corpora/gmm\n1. After unset PROMPT_COMMAND it returns to normal speed, with no lag. Cool!\n2. Trying to sshfs to localhost tells me \"remote host has disconnected\" -- I don't have my machine set up to listen on incoming ssh, but I don't think WAN-latency is the issue. If I don't load autojump, I get instanteously cd's, using the exact same internet connection.\n. Nope, no lag for either of those. I get lag in exactly two cases:\n1. Autojump is loaded, and I j volumes gmm<TAB> (request autocompletion suggestions) for somewhere in the remote mount. Not a big deal, and understandable why it might be laggy.\n2. Autojump is loaded, my pwd is somewhere in the remote mount, and bash needs to show me the prompt. Doesn't matter if I've just j'ed in, or cd'd to a subdirectory, or exited sbt -- it lags before showing prompt.\nThanks for the tips and tests, but don't worry about it\u2014I don't use a remote mount that often, and I know how hard it can be to debug something if you can't replicate it. If I have time over the break (I always say that / everybody always says that) I'll look at the autojump source, see if I can figure out what's up.\nWell, UT Linguistics -- but I do see a lot of Ray and his students. Cool, thanks for you help!\n. Aw, you guys are the best, thanks! That's exactly what I wanted, and I just added a couple of lines to the docs to make it clear to anyone who had the same question I did (see your pull requests).\n. No difference between those two commands.\nAnother odd thing is that, when on the remote mount, even giving me back a prompt after doing a simple ls takes much longer with autojump loaded. I do a j Volumes gmm and it shows me the correct directory in red almost immediately, then stalls before giving me my prompt back.\nI don't know the autojump internals, but I might have guessed that some recent change is doing a check after each command, when preloading bash completion possibilities (are those preloaded?), to ensure that all matching options in the autojump database are valid paths. And checking the ones on the SSHFS mount take a long time when it's mounted. Does that sound like it might be the problem?\n. I get the lag even when not using j at all, but only if autojump is loaded. Whatever it does that looks into cd to save new directories (or fill out the autocomplete, see (0)) -- that must be what's slowing it down.\n(0)\n[chbrown@air ~]$ j gm<TAB>\n...1__/Users/chbrown/github/gmm-reference-time        ...3__/Users/chbrown/corpora/gmm\n1. After unset PROMPT_COMMAND it returns to normal speed, with no lag. Cool!\n2. Trying to sshfs to localhost tells me \"remote host has disconnected\" -- I don't have my machine set up to listen on incoming ssh, but I don't think WAN-latency is the issue. If I don't load autojump, I get instanteously cd's, using the exact same internet connection.\n. Nope, no lag for either of those. I get lag in exactly two cases:\n1. Autojump is loaded, and I j volumes gmm<TAB> (request autocompletion suggestions) for somewhere in the remote mount. Not a big deal, and understandable why it might be laggy.\n2. Autojump is loaded, my pwd is somewhere in the remote mount, and bash needs to show me the prompt. Doesn't matter if I've just j'ed in, or cd'd to a subdirectory, or exited sbt -- it lags before showing prompt.\nThanks for the tips and tests, but don't worry about it\u2014I don't use a remote mount that often, and I know how hard it can be to debug something if you can't replicate it. If I have time over the break (I always say that / everybody always says that) I'll look at the autojump source, see if I can figure out what's up.\nWell, UT Linguistics -- but I do see a lot of Ray and his students. Cool, thanks for you help!\n. ",
    "tnorth": "BTW, another similar bug was filed:\nhttps://bugzilla.redhat.com/show_bug.cgi?id=835974\nMight not be more informative though :/\n. Python3 is available in Fedora. Should we force autojump to use it ?\n. Ok, I might do that then. And update to the last version, I guess that I am a bit behind again :)\n. Thanks for the confirmation!\n. Same here.\nAny update on that ?\n. Ping @wting ?\nI can rebase this pull request on the head.. BTW, another similar bug was filed:\nhttps://bugzilla.redhat.com/show_bug.cgi?id=835974\nMight not be more informative though :/\n. Python3 is available in Fedora. Should we force autojump to use it ?\n. Ok, I might do that then. And update to the last version, I guess that I am a bit behind again :)\n. Thanks for the confirmation!\n. Same here.\nAny update on that ?\n. Ping @wting ?\nI can rebase this pull request on the head.. ",
    "statik213": "The one-letter alias is a minor shortcut and something can be easily be handled in a profile file. It's probably the same complexity to define an option to enable this shortcut or as to add alias \"s=j $PWD\" to your profile. . I can resubmit without this shortcut if you prefer.\nRegarding the -P, I personally don't think having duplicate entries is a bid deal. I use symlinks a lot in my filesystem (to manage space usage on my SSD), so the -P was a huge downer for me. I made it optional because I wasn't sure everyone would like it.\nI just saw Issue #56, looks like a popular issue :).\n. The physical path issue I have is not related to path length.I symlink potions of projects to my storage drive. I find myslef in the wrong directory whenever I \"j\" in to a symlinked path and enter \"cd..\" for example. I lose context because I am no longer in my project.\nImagine this folder structure:\n~/project/\n~/project/videos -> /media/BigDisk/project/videos\n~/project/other/stuff\nIn a terminal :\n$ j videos\n$ < do stuff >\n$ cd ..\n$ pwd\nAt this point I am not in the right directory, because of autojump's current behavior pwd is /media/BigDisk/project/videos and not ~/project/. I expect it to be ~/project and I rarely need to navigate to /media/BigDisk/project/.\n@wting I did implement this as an option. You have to define AUTOJUMP_KEEP_SYMLINKS=1 in your env.\n. @wting  No problem. I removed the s function and submitted a zsh version of the change as well.\n. Yes, set AUTOJUMP_KEEP_SYMLINKS=1 in your environment.\n. @ealik Enabling that option doesn't remove entries already in your autojump history. You can try deleting the history file (~/.local/share/autojump/autojump.txt on my install) or manually removing the offending entries.\n. The one-letter alias is a minor shortcut and something can be easily be handled in a profile file. It's probably the same complexity to define an option to enable this shortcut or as to add alias \"s=j $PWD\" to your profile. . I can resubmit without this shortcut if you prefer.\nRegarding the -P, I personally don't think having duplicate entries is a bid deal. I use symlinks a lot in my filesystem (to manage space usage on my SSD), so the -P was a huge downer for me. I made it optional because I wasn't sure everyone would like it.\nI just saw Issue #56, looks like a popular issue :).\n. The physical path issue I have is not related to path length.I symlink potions of projects to my storage drive. I find myslef in the wrong directory whenever I \"j\" in to a symlinked path and enter \"cd..\" for example. I lose context because I am no longer in my project.\nImagine this folder structure:\n~/project/\n~/project/videos -> /media/BigDisk/project/videos\n~/project/other/stuff\nIn a terminal :\n$ j videos\n$ < do stuff >\n$ cd ..\n$ pwd\nAt this point I am not in the right directory, because of autojump's current behavior pwd is /media/BigDisk/project/videos and not ~/project/. I expect it to be ~/project and I rarely need to navigate to /media/BigDisk/project/.\n@wting I did implement this as an option. You have to define AUTOJUMP_KEEP_SYMLINKS=1 in your env.\n. @wting  No problem. I removed the s function and submitted a zsh version of the change as well.\n. Yes, set AUTOJUMP_KEEP_SYMLINKS=1 in your environment.\n. @ealik Enabling that option doesn't remove entries already in your autojump history. You can try deleting the history file (~/.local/share/autojump/autojump.txt on my install) or manually removing the offending entries.\n. ",
    "liyanchang": "Hi Kevin,\nI recently switched to ZSH so I may not be the best person to answer this question.\nMy autocomplete works so I took a look at my own setops and found that the only difference between your's and mine was:\n-login\n+nobeep\n+menucomplete\nThe options seem to appear for me with both menucomplete on and off, implying that there might be something else going on. I presume you have your _j function in your $FPATH, otherwise you wouldn't even get the j php__. And ... we've quickly exhausted all I know about the ZSH autocomplete system.\nBest of luck figuring out what is going on.\n. Hi Kevin,\nI recently switched to ZSH so I may not be the best person to answer this question.\nMy autocomplete works so I took a look at my own setops and found that the only difference between your's and mine was:\n-login\n+nobeep\n+menucomplete\nThe options seem to appear for me with both menucomplete on and off, implying that there might be something else going on. I presume you have your _j function in your $FPATH, otherwise you wouldn't even get the j php__. And ... we've quickly exhausted all I know about the ZSH autocomplete system.\nBest of luck figuring out what is going on.\n. ",
    "fabiopelosin": "Hi Joel,\nFirst of all, thanks for autojump. I love it.\n\nIf you find shift so expensive, why do you use capitals in your app's name (honnest question!)?\n\nI just tend to give proper capitalization to my folder names. I don't think that this is uncommon. For example, I'm on a Mac with the default filesystem (which is case insensitive but case preserving) and many system folders are capitalized by default. It also happens when I clone a git repo.\nNonetheless in terminal or in quicksilver i don't think about case. Also note how this is the case in this comment on #53 where lowercase strings are used to match capitalized titles.\n\nI understand why you'd want this change, but unless there is overwhelming support for this, I'd rather leave it the way it is, because I think it makes sense to distinguish capitals from lowercase letters if the filesystem does.\n\nImo, even if the file system is case sensitive, there should be few to none cases where the user would want to distinguish a folder on autojump by case. I guess that people, usually, give different names to different folders and even if two folder are distinguished by name the ranking should sort things out (note however, that I never used a case sensitive file system). Also this is the standard behavior of Quicksilver.\n\nNote that as a work around, you can use any part of the name of the directory as a dirspec, so j pp would probably work. \n\nThanks I wasn't aware of that.\n\nYou can also change the behavior of autojump by patching it, it should be pretty straight forward (and I can help you if you're stuck).\n\nI prefer to stick with the default version for being able update without need to re-patch every time. \nNow I'm a bit busy but if you changed your mind I can patch it in future. Otherwise please go ahead and close the issue.\n. Sweet, thanks!\nUnfortunately I'm not able to get it to work correctly.\nconsole\n$ autojump --version\nautojump release-v20-4\n$ echo $AUTOJUMP_IGNORE_CASE\n1\n$ autojump --stat\n10.0:   /Users/fabio/Documents\n14.1:   /Users/fabio/Documents/GitHub/feeds.cocoapods.org\n14.1:   /Users/fabio/.local/share/autojump\n17.3:   /Users/fabio/Documents/GitHub/CocoaPods\n30.0:   /Users/fabio/Documents/GitHub\nTotal key weight: 85. Number of stored dirs: 5\n$ j coco\n/Users/fabio/Documents/GitHub/feeds.cocoapods.org\n\nUnrelated: also I had some trouble with autojump not creating the autojump.txt file and therefore not keeping track of the directories. After touching the file manually everything worked as expected.  \nNot, sure if it was a permission issue, but I would exclude it because I was removing autojump directories before install. I was using the homebrew version, but installed it and cleaned the dirs and installed back again.\n. Awesome! It works perfectly, thanks.\nInteresting shell btw.\n. Hi Joel,\nFirst of all, thanks for autojump. I love it.\n\nIf you find shift so expensive, why do you use capitals in your app's name (honnest question!)?\n\nI just tend to give proper capitalization to my folder names. I don't think that this is uncommon. For example, I'm on a Mac with the default filesystem (which is case insensitive but case preserving) and many system folders are capitalized by default. It also happens when I clone a git repo.\nNonetheless in terminal or in quicksilver i don't think about case. Also note how this is the case in this comment on #53 where lowercase strings are used to match capitalized titles.\n\nI understand why you'd want this change, but unless there is overwhelming support for this, I'd rather leave it the way it is, because I think it makes sense to distinguish capitals from lowercase letters if the filesystem does.\n\nImo, even if the file system is case sensitive, there should be few to none cases where the user would want to distinguish a folder on autojump by case. I guess that people, usually, give different names to different folders and even if two folder are distinguished by name the ranking should sort things out (note however, that I never used a case sensitive file system). Also this is the standard behavior of Quicksilver.\n\nNote that as a work around, you can use any part of the name of the directory as a dirspec, so j pp would probably work. \n\nThanks I wasn't aware of that.\n\nYou can also change the behavior of autojump by patching it, it should be pretty straight forward (and I can help you if you're stuck).\n\nI prefer to stick with the default version for being able update without need to re-patch every time. \nNow I'm a bit busy but if you changed your mind I can patch it in future. Otherwise please go ahead and close the issue.\n. Sweet, thanks!\nUnfortunately I'm not able to get it to work correctly.\nconsole\n$ autojump --version\nautojump release-v20-4\n$ echo $AUTOJUMP_IGNORE_CASE\n1\n$ autojump --stat\n10.0:   /Users/fabio/Documents\n14.1:   /Users/fabio/Documents/GitHub/feeds.cocoapods.org\n14.1:   /Users/fabio/.local/share/autojump\n17.3:   /Users/fabio/Documents/GitHub/CocoaPods\n30.0:   /Users/fabio/Documents/GitHub\nTotal key weight: 85. Number of stored dirs: 5\n$ j coco\n/Users/fabio/Documents/GitHub/feeds.cocoapods.org\n\nUnrelated: also I had some trouble with autojump not creating the autojump.txt file and therefore not keeping track of the directories. After touching the file manually everything worked as expected.  \nNot, sure if it was a permission issue, but I would exclude it because I was removing autojump directories before install. I was using the homebrew version, but installed it and cleaned the dirs and installed back again.\n. Awesome! It works perfectly, thanks.\nInteresting shell btw.\n. ",
    "lukexor": "I was using the latest release git clone. Decided to delete it and downloaded the latest v19 tarball, that seems to work fine after installing.\n. I was using the latest release git clone. Decided to delete it and downloaded the latest v19 tarball, that seems to work fine after installing.\n. ",
    "akobel": "Resurrecting: I just encountered a stalled autojump as well (release 21.6.9). I found two strange sorts of entries in the autojump.txt database:\nFirst, several entries for a directory with an unusual character in the name (a German \u00fc Umlaut), but stored in composed form. The dirname occured several times, with each \u00fc duplicated from one line to the other. Yep, exponential growth - I found my file being roughly 1 GB in size.\nSecond, an entry with just the weight, but empty dir. Probably because I had to kill a chroot the hard way, and I can imagine autojump being interrupted while trying to write the line). autojump wasn't able to recover from that, failing to parse the line. Suggestion: if you find an imparsable line (in particular, an empty dir name), just delete it?\nWhen I removed the strange unicode entries, autojump immediately started to produce tmp... files in the database folder, each of ~16MB, and forked instances again. Restarting autojump helped, and then I was presented a parsing error for the second problem. Not sure if or how the two situations are related, but maybe at least the second one is easily fixable?\nThanks a lot for autojump, BTW!\nBest\n. Resurrecting: I just encountered a stalled autojump as well (release 21.6.9). I found two strange sorts of entries in the autojump.txt database:\nFirst, several entries for a directory with an unusual character in the name (a German \u00fc Umlaut), but stored in composed form. The dirname occured several times, with each \u00fc duplicated from one line to the other. Yep, exponential growth - I found my file being roughly 1 GB in size.\nSecond, an entry with just the weight, but empty dir. Probably because I had to kill a chroot the hard way, and I can imagine autojump being interrupted while trying to write the line). autojump wasn't able to recover from that, failing to parse the line. Suggestion: if you find an imparsable line (in particular, an empty dir name), just delete it?\nWhen I removed the strange unicode entries, autojump immediately started to produce tmp... files in the database folder, each of ~16MB, and forked instances again. Restarting autojump helped, and then I was presented a parsing error for the second problem. Not sure if or how the two situations are related, but maybe at least the second one is easily fixable?\nThanks a lot for autojump, BTW!\nBest\n. ",
    "timbertson": "Cool, thanks. Although it still seems like the exit status is the right thing to check. There shouldn't be much difference, although it could mask a failure in autojump printing dirs that no longer exist.\n. Ahh right, I assumed --help would be nonzero exit status, but that's\nnot necessarily the case. Thanks for explaining :)\n. Cool, thanks. Although it still seems like the exit status is the right thing to check. There shouldn't be much difference, although it could mask a failure in autojump printing dirs that no longer exist.\n. Ahh right, I assumed --help would be nonzero exit status, but that's\nnot necessarily the case. Thanks for explaining :)\n. ",
    "laurentb": "argparse is available as a separate package for older python versions.\n. argparse is available as a separate package for older python versions.\n. ",
    "mravery": "I installed it through brew. I updated it recently to version 19 and this didn't fix the problem. 'update_terminal_cwd' is found in the /etc/bashrc provided (I've attached it here).\nIf I don't include autojump in my .bashrc file, my $PROMPT_COMMAND in emacs using a shell is an empty string.\nIf I /do/ use autojump then it shows up as below.\nAvery\n```\nSystem-wide .bashrc file for interactive bash(1) shells.\nif [ -z \"$PS1\" ]; then\n   return\nfi\nPS1='\\h:\\W \\u\\$ '\nMake bash check its window size after a process completes\nshopt -s checkwinsize\nTell the terminal about the working directory at each prompt.\nif [ \"$TERM_PROGRAM\" == \"Apple_Terminal\" ] && [ -z \"$INSIDE_EMACS\" ]; then\n    update_terminal_cwd() {\n        # Identify the directory using a \"file:\" scheme URL,\n        # including the host name to disambiguate local vs.\n        # remote connections. Percent-escape spaces.\n    local SEARCH=' '\n    local REPLACE='%20'\n    local PWD_URL=\"file://$HOSTNAME${PWD//$SEARCH/$REPLACE}\"\n    printf '\\e]7;%s\\a' \"$PWD_URL\"\n    }\n    PROMPT_COMMAND=\"update_terminal_cwd; $PROMPT_COMMAND\"\nfi\n```\n. I installed it through brew. I updated it recently to version 19 and this didn't fix the problem. 'update_terminal_cwd' is found in the /etc/bashrc provided (I've attached it here).\nIf I don't include autojump in my .bashrc file, my $PROMPT_COMMAND in emacs using a shell is an empty string.\nIf I /do/ use autojump then it shows up as below.\nAvery\n```\nSystem-wide .bashrc file for interactive bash(1) shells.\nif [ -z \"$PS1\" ]; then\n   return\nfi\nPS1='\\h:\\W \\u\\$ '\nMake bash check its window size after a process completes\nshopt -s checkwinsize\nTell the terminal about the working directory at each prompt.\nif [ \"$TERM_PROGRAM\" == \"Apple_Terminal\" ] && [ -z \"$INSIDE_EMACS\" ]; then\n    update_terminal_cwd() {\n        # Identify the directory using a \"file:\" scheme URL,\n        # including the host name to disambiguate local vs.\n        # remote connections. Percent-escape spaces.\n    local SEARCH=' '\n    local REPLACE='%20'\n    local PWD_URL=\"file://$HOSTNAME${PWD//$SEARCH/$REPLACE}\"\n    printf '\\e]7;%s\\a' \"$PWD_URL\"\n    }\n    PROMPT_COMMAND=\"update_terminal_cwd; $PROMPT_COMMAND\"\nfi\n```\n. ",
    "adamv": "Right; though I can understand not wanting to do that and have this be more self-contained.\n. Right; though I can understand not wanting to do that and have this be more self-contained.\n. ",
    "Schabernack": "```\n[ \u2764 :~]$ autojump --version                                                                                                                                             \nautojump release-v20-7\n[ \u2764 :~]$ grep plugins= .zshrc                                                                                                                                             \nExample format: plugins=(rails git textmate ruby lighthouse)\nplugins=(git ruby rails autojump)\n```\nI also tried it without the autojump plugin but the result was the same.\n. ```\n[ \u2764 :~]$ ls -al ~/.local/share/autojump                                                                                                                                    9:26:18 \ntotal 40\ndrwxrwxr-x  2 nico nico 4096 May 21 21:37 .\ndrwxr-xr-x 20 nico nico 4096 May 22 18:18 ..\n-rw-rw-r--  1 nico nico    0 May 15 15:29 .autojump_errors\n-rw-------  1 nico nico   20 May 21 21:37 autojump_py\n-rw-------  1 nico nico   36 May 21 21:24 autojump_py.bak\n[ \u2764 :~]$ autojump --add /tmp                                                                                                                                              18:24:42 \n[ \u2764 :~]$ ls -al ~/.local/share/autojump                                                                                                                                   18:24:55 \ntotal 40\ndrwxrwxr-x  2 nico nico 4096 May 22 18:24 .\ndrwxr-xr-x 20 nico nico 4096 May 22 18:18 ..\n-rw-rw-r--  1 nico nico    0 May 15 15:29 .autojump_errors\n-rw-------  1 nico nico    8 May 22 18:24 autojump_py\n-rw-------  1 nico nico   36 May 21 21:24 autojump_py.bak\n[ \u2764 :~]$ tail ~/.local/share/autojump/autojump.txt                                                                                                                        18:25:03 \ntail: cannot open `/home/nico/.local/share/autojump/autojump.txt' for reading: No such file or directory\n. Yup. Solved the problem for me as well. Some problem in the installation routine perhaps?\n.\n[ \u2764 :~]$ autojump --version                                                                                                                                             \nautojump release-v20-7\n[ \u2764 :~]$ grep plugins= .zshrc                                                                                                                                             \nExample format: plugins=(rails git textmate ruby lighthouse)\nplugins=(git ruby rails autojump)\n```\nI also tried it without the autojump plugin but the result was the same.\n. ```\n[ \u2764 :~]$ ls -al ~/.local/share/autojump                                                                                                                                    9:26:18 \ntotal 40\ndrwxrwxr-x  2 nico nico 4096 May 21 21:37 .\ndrwxr-xr-x 20 nico nico 4096 May 22 18:18 ..\n-rw-rw-r--  1 nico nico    0 May 15 15:29 .autojump_errors\n-rw-------  1 nico nico   20 May 21 21:37 autojump_py\n-rw-------  1 nico nico   36 May 21 21:24 autojump_py.bak\n[ \u2764 :~]$ autojump --add /tmp                                                                                                                                              18:24:42 \n[ \u2764 :~]$ ls -al ~/.local/share/autojump                                                                                                                                   18:24:55 \ntotal 40\ndrwxrwxr-x  2 nico nico 4096 May 22 18:24 .\ndrwxr-xr-x 20 nico nico 4096 May 22 18:18 ..\n-rw-rw-r--  1 nico nico    0 May 15 15:29 .autojump_errors\n-rw-------  1 nico nico    8 May 22 18:24 autojump_py\n-rw-------  1 nico nico   36 May 21 21:24 autojump_py.bak\n[ \u2764 :~]$ tail ~/.local/share/autojump/autojump.txt                                                                                                                        18:25:03 \ntail: cannot open `/home/nico/.local/share/autojump/autojump.txt' for reading: No such file or directory\n```\n. Yup. Solved the problem for me as well. Some problem in the installation routine perhaps?\n. ",
    "liborw": "I have, exactly same problem with bash version, the version and output of above commands is same.\n. I think that the problem is that the database file was never created, running:\ntouch ~/.local/share/autojump/autojump.txt\nsolved this problem for me.\n. I have, exactly same problem with bash version, the version and output of above commands is same.\n. I think that the problem is that the database file was never created, running:\ntouch ~/.local/share/autojump/autojump.txt\nsolved this problem for me.\n. ",
    "eallik": "Awesome, thanks! Maybe add this to the README?\n. AUTOJUMP_KEEP_SYMLINKS is not respected.\n~$ export AUTOJUMP_KEEP_SYMLINKS=1\n~$ mkdir testdir\n~$ ln -s testdir testdir-sym\n~$ j testdir-sym\nautojump: directory 'testdir-sym' not found\nTry `autojump --help` for more information.\n~$ j testdir\n/Users/erik.allik/testdir\n. um... did you even read what I pasted?\n. OK, here's the correct example:\n```\n~$ mkdir foobarbaz\n~$ ln -s foobarbaz foobarbaz-sym\n~$ cd foobarbaz-sym\n~/foobarbaz-sym$ cd ..\n~$ j foobarbaz\n/Users/erik.allik/foobarbaz\n~/foobarbaz$ \n~/foobarbaz$ echo $AUTOJUMP_KEEP_SYMLINKS\n1\n```\nSo what am I missing?\n. Look... I have AUTOJUMP_KEEP_SYMLINKS=1 as I've demonstrated before; the folder I'm testing with is a freshly created one so it cannot exist in the database already. So that leaves the version... is v20 too old for AUTOJUMP_KEEP_SYMLINKS to be respected?\n~/autojumptest$ autojump --version\nautojump release-v20\n~/autojumptest$ echo $AUTOJUMP_KEEP_SYMLINKS\n1\n~/autojumptest$ mkdir newfolder\n~/autojumptest$ ln -s newfolder newfolder-sym\n~/autojumptest$ cd newfolder-sym\n~/autojumptest/newfolder-sym$ cat ~/.local/share/autojump/autojump.txt\n1.0 /Users/erik/autojumptest/newfolder\n. OS X 10.6 and GNU bash, version 4.2.28(2)-release (i386-apple-darwin10.8.0).\n. OK, installing the latest version and removing the DB helped.\n. Awesome, thanks! Maybe add this to the README?\n. AUTOJUMP_KEEP_SYMLINKS is not respected.\n~$ export AUTOJUMP_KEEP_SYMLINKS=1\n~$ mkdir testdir\n~$ ln -s testdir testdir-sym\n~$ j testdir-sym\nautojump: directory 'testdir-sym' not found\nTry `autojump --help` for more information.\n~$ j testdir\n/Users/erik.allik/testdir\n. um... did you even read what I pasted?\n. OK, here's the correct example:\n```\n~$ mkdir foobarbaz\n~$ ln -s foobarbaz foobarbaz-sym\n~$ cd foobarbaz-sym\n~/foobarbaz-sym$ cd ..\n~$ j foobarbaz\n/Users/erik.allik/foobarbaz\n~/foobarbaz$ \n~/foobarbaz$ echo $AUTOJUMP_KEEP_SYMLINKS\n1\n```\nSo what am I missing?\n. Look... I have AUTOJUMP_KEEP_SYMLINKS=1 as I've demonstrated before; the folder I'm testing with is a freshly created one so it cannot exist in the database already. So that leaves the version... is v20 too old for AUTOJUMP_KEEP_SYMLINKS to be respected?\n~/autojumptest$ autojump --version\nautojump release-v20\n~/autojumptest$ echo $AUTOJUMP_KEEP_SYMLINKS\n1\n~/autojumptest$ mkdir newfolder\n~/autojumptest$ ln -s newfolder newfolder-sym\n~/autojumptest$ cd newfolder-sym\n~/autojumptest/newfolder-sym$ cat ~/.local/share/autojump/autojump.txt\n1.0 /Users/erik/autojumptest/newfolder\n. OS X 10.6 and GNU bash, version 4.2.28(2)-release (i386-apple-darwin10.8.0).\n. OK, installing the latest version and removing the DB helped.\n. ",
    "KenMacD": "I still get the same error statement. I added some logging and it does run the second code block, so other than the warning message I don't think it would effect anything.\nWill -pcre-match work for you if you add the line: 'zmodload zsh/pcre'?\n. I asked on IRC about this and as it's a substring match the suggestion was:\n18:33 < Mikachu> kenny: just use =\n18:33 < Mikachu> [[ foo = bar ]]\n. Oh, sorry, I should have previewed. There was an asterisk on each side of 'bar':\n% [[ ting = t ]] && echo 1\n% [[ ting = *t* ]] && echo 1\n1\n. Tested the new commit, works great for me. Thank you.\n. I still get the same error statement. I added some logging and it does run the second code block, so other than the warning message I don't think it would effect anything.\nWill -pcre-match work for you if you add the line: 'zmodload zsh/pcre'?\n. I asked on IRC about this and as it's a substring match the suggestion was:\n18:33 < Mikachu> kenny: just use =\n18:33 < Mikachu> [[ foo = bar ]]\n. Oh, sorry, I should have previewed. There was an asterisk on each side of 'bar':\n% [[ ting = t ]] && echo 1\n% [[ ting = *t* ]] && echo 1\n1\n. Tested the new commit, works great for me. Thank you.\n. ",
    "mikebobroski": "try putting this into your config.fish file (located in ~/.config/fish/):\nfunction j\n    cd (command autojump $argv)\nend\n. try putting this into your config.fish file (located in ~/.config/fish/):\nfunction j\n    cd (command autojump $argv)\nend\n. ",
    "espen": "adding \"function j\" like that in the fish config works, but does not seem to update the database. Does it require the rest of the code to be ported to autojump.fish?\n. I installed z-fish instead. Works good.\n. adding \"function j\" like that in the fish config works, but does not seem to update the database. Does it require the rest of the code to be ported to autojump.fish?\n. I installed z-fish instead. Works good.\n. ",
    "dfang": "add one line to ~/.config/fish/functions/fish_prompt.fish \nautojump -a $PWD  > /dev/null   &\nor define a cd function to overwrite default builtin cd .\nfunction cd\n   if test -d $argv\n      autojump -a $argv\n    end\n   builtin cd\nend\n. add one line to ~/.config/fish/functions/fish_prompt.fish \nautojump -a $PWD  > /dev/null   &\nor define a cd function to overwrite default builtin cd .\nfunction cd\n   if test -d $argv\n      autojump -a $argv\n    end\n   builtin cd\nend\n. ",
    "aeosynth": ":+1: for official fish support\n. :+1: for official fish support\n. ",
    "a13xb": "I've added a shell wrapper for Fish in #209.\n. @uri Homebrew version (21.6.9) is fairly old and doesn't include Fish support, and the instructions coming out of the newest manual installer are actually wrong.\nLook for autojump.fish where all other shell files are installed (/etc/profile.d/autojump.fish for global installs) and source it in ~/.config/fish/config.fish.\n. 1. Yes, Fish syntax is incompatible with POSIX shells, you'd have to source autojump.fish separately, I don't think there is a way around that.\n2. My fault. I did not test with ~/.autojump directory present, so this line was not even executed. Should be fixed now (famous last words).\nAs a side note, I think the usefulness of the .sh wrapper is questionable.\n1. It's sourced from a shell-specific rc file already, so you don't really need a generic wrapper to dispatch on the shell type.\n2. It checks for local installation first, but you can source either a global or a local one explicitly from the init file as directed by install instructions. Maybe if you want to share your rc file across machines, one local installation, another global, but not sure if it's mainstream enough case to be worth added complexity.\nThoughts?\n. Any news on this?\nRe: package managers and .sh wrapper.\n1. Homebrew recipe will have to be updated anyway just to bump the version, so instructions can be updated at the same time.\n2. I've looked at Debian installation, it doesn't install the wrapper script into /etc/profile.d.\nHow terrible is it to break backwards compatibility, really? Any breakage is easy to address with a minor change to your own startup rc file.\n. I've added a shell wrapper for Fish in #209.\n. @uri Homebrew version (21.6.9) is fairly old and doesn't include Fish support, and the instructions coming out of the newest manual installer are actually wrong.\nLook for autojump.fish where all other shell files are installed (/etc/profile.d/autojump.fish for global installs) and source it in ~/.config/fish/config.fish.\n. 1. Yes, Fish syntax is incompatible with POSIX shells, you'd have to source autojump.fish separately, I don't think there is a way around that.\n2. My fault. I did not test with ~/.autojump directory present, so this line was not even executed. Should be fixed now (famous last words).\nAs a side note, I think the usefulness of the .sh wrapper is questionable.\n1. It's sourced from a shell-specific rc file already, so you don't really need a generic wrapper to dispatch on the shell type.\n2. It checks for local installation first, but you can source either a global or a local one explicitly from the init file as directed by install instructions. Maybe if you want to share your rc file across machines, one local installation, another global, but not sure if it's mainstream enough case to be worth added complexity.\nThoughts?\n. Any news on this?\nRe: package managers and .sh wrapper.\n1. Homebrew recipe will have to be updated anyway just to bump the version, so instructions can be updated at the same time.\n2. I've looked at Debian installation, it doesn't install the wrapper script into /etc/profile.d.\nHow terrible is it to break backwards compatibility, really? Any breakage is easy to address with a minor change to your own startup rc file.\n. ",
    "uri": "Is fish support in place? I tried installing via homebrew and then manually and it doesn't seem to work. After the manual installation there's a message referencing a ~/.fishrc file but fish doesn't use a fish.rc file. \nI tried it anyways, [[ -s ~/.autojump/etc/profile.d/autojump.fish ]] && . ~/.autojump/etc/profile.d/autojump.fish but AFAIK fish doesn't even use &&.\n. Thanks @a13xb it's working!\n. No doesn't look like it, typing bi [tab] produces bi__ which looks like it's working as intended.\nThanks guys!\n. Is fish support in place? I tried installing via homebrew and then manually and it doesn't seem to work. After the manual installation there's a message referencing a ~/.fishrc file but fish doesn't use a fish.rc file. \nI tried it anyways, [[ -s ~/.autojump/etc/profile.d/autojump.fish ]] && . ~/.autojump/etc/profile.d/autojump.fish but AFAIK fish doesn't even use &&.\n. Thanks @a13xb it's working!\n. No doesn't look like it, typing bi [tab] produces bi__ which looks like it's working as intended.\nThanks guys!\n. ",
    "BenShaw": "Im having issues getting autojump working in fish shell\nInstalled from apt im on version 2.6\nRan autojump and i get a message to read the config\nConfig does not have instructions for fish\nCan someone confirm the line i need to add to my fish config please. Im having issues getting autojump working in fish shell\nInstalled from apt im on version 2.6\nRan autojump and i get a message to read the config\nConfig does not have instructions for fish\nCan someone confirm the line i need to add to my fish config please. ",
    "lilydjwg": "Thanks, it's much longer, but works!\n. I've checked my backups. It shows about 11K data, more than 200 lines of history were lost in March 6 or 5. It's longer than what autojump keeps for as backup (only 24 hours) before I realize data loss had happened.\n. @sxe I've forked and made some change to avoid the situation I've described. Would you try that and see if it solves the problem for you?\n. I'm sometimes annoyed when I didn't make a typo, but autojump doesn't have that path (I lost many paths in an incident described in #358 ), so it goes to a rather random place.\n. For me the red text isn't as noticeable as white one on my dark terminal...\n2016\u5e742\u67082\u65e5 \u4e0b\u53487:15\uff0c\"Joel Schaerer\" notifications@github.com\u5199\u9053\uff1a\n\nThe red color is important because the destination directory is\nunpredictable. So it's important to draw the user's attention on where he\nended up.\nThat said, maybe j could detect whether the output is a TTY.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wting/autojump/issues/377#issuecomment-178516583.\n. Ah, it happened again someday last week, after so long a time since last time.349 entries was removed, file size shrank from 93K to 77K.. Thanks, it's much longer, but works!\n. I've checked my backups. It shows about 11K data, more than 200 lines of history were lost in March 6 or 5. It's longer than what autojump keeps for as backup (only 24 hours) before I realize data loss had happened.\n. @sxe I've forked and made some change to avoid the situation I've described. Would you try that and see if it solves the problem for you?\n. I'm sometimes annoyed when I didn't make a typo, but autojump doesn't have that path (I lost many paths in an incident described in #358 ), so it goes to a rather random place.\n. For me the red text isn't as noticeable as white one on my dark terminal...\n2016\u5e742\u67082\u65e5 \u4e0b\u53487:15\uff0c\"Joel Schaerer\" notifications@github.com\u5199\u9053\uff1a\nThe red color is important because the destination directory is\nunpredictable. So it's important to draw the user's attention on where he\nended up.\nThat said, maybe j could detect whether the output is a TTY.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wting/autojump/issues/377#issuecomment-178516583.\n. Ah, it happened again someday last week, after so long a time since last time.349 entries was removed, file size shrank from 93K to 77K.. \n",
    "kuerzn": "This is the same problem as #377. i.e. not fixed\n. Without a check for TTY the red color does more harm than good. Auto detecting the tty like other GNU tools (grep, ls, ..) do is an unwritten law in UNIX. Without is one of the key features, namely composability, is destroyed.\n. This is the same problem as #377. i.e. not fixed\n. Without a check for TTY the red color does more harm than good. Auto detecting the tty like other GNU tools (grep, ls, ..) do is an unwritten law in UNIX. Without is one of the key features, namely composability, is destroyed.\n. ",
    "sudishzx": "Thanks!  Also for the completion itself, which is a wonderful addition.\n. Thanks!  Also for the completion itself, which is a wonderful addition.\n. ",
    "zdravi": "Nope, I've been using the 'j' alias from the get-go.\n. console\nzdravi@gitpaste ~ % autojump --version\nautojump release-v20\nzdravi@gitpaste ~ % zsh --version\nzsh 4.3.9 (i386-apple-darwin10.0)\nzdravi@gitpaste ~ % python --version\nPython 3.2.3\nzdravi@gitpaste ~ % setopt\nalwaystoend\nautocd\nautonamedirs\nautopushd\ncdablevars\ncompleteinword\ncorrectall\nextendedglob\nextendedhistory\nnoflowcontrol\nhistexpiredupsfirst\nhistignorealldups\nhistignoredups\nhistignorespace\nhistverify\nincappendhistory\ninteractive\nlonglistjobs\nmonitor\npromptsubst\npushdignoredups\nsharehistory\nshinstdin\nzle\nzdravi@gitpaste ~ %\n. Nope, I've been using the 'j' alias from the get-go.\n. console\nzdravi@gitpaste ~ % autojump --version\nautojump release-v20\nzdravi@gitpaste ~ % zsh --version\nzsh 4.3.9 (i386-apple-darwin10.0)\nzdravi@gitpaste ~ % python --version\nPython 3.2.3\nzdravi@gitpaste ~ % setopt\nalwaystoend\nautocd\nautonamedirs\nautopushd\ncdablevars\ncompleteinword\ncorrectall\nextendedglob\nextendedhistory\nnoflowcontrol\nhistexpiredupsfirst\nhistignorealldups\nhistignoredups\nhistignorespace\nhistverify\nincappendhistory\ninteractive\nlonglistjobs\nmonitor\npromptsubst\npushdignoredups\nsharehistory\nshinstdin\nzle\nzdravi@gitpaste ~ %\n. ",
    "mbixby": "Your issue is repeated with different autojump versions because it stores it's thrash all over the place. You won't find the path to database in the man page; find / -name autojump, delete everything and install. Solved it for me.\nEdit: Post the old files here before deleting if you want to help with debugging.\n. Your issue is repeated with different autojump versions because it stores it's thrash all over the place. You won't find the path to database in the man page; find / -name autojump, delete everything and install. Solved it for me.\nEdit: Post the old files here before deleting if you want to help with debugging.\n. ",
    "taboada": "Hi, I have exactly the same issue here. Using a fresh Lion, and installed with brew. Here is the copy/paste from the Terminal I got :\n\u279c autojump --version\nautojump release-v20\n~\n\u279c zsh --version\nzsh 4.3.11 (i386-apple-darwin11.0)\n~\n\u279c python --version\nPython 2.7.1\n~\n\u279c setopt\n-bash: setopt: command not found\n. I forgot to tell that the difference is that I'm using bash and not zsh but the behaviour is exactly the same : using the j shortcut as instructed, it shows the right path but does NOT jump to it\u2026\n. I'm very sorry : I might have misunderstood the whole point of your work\u2026 Actually, if I'm doing something like :\n$ j devs [tab]\nit expands to '/home/Users/xxxx/Dropbox/devs/' and does NOT jump to it, but I guess it is the expected behaviour. On the other hand, if I'm typing :\n$ j devs [return]\nthen everything is fine, and if I pwd, the path is correct and I'm in the right place. Sincere apologies for this newbie \"noise and babble\".\n. Hi, I have exactly the same issue here. Using a fresh Lion, and installed with brew. Here is the copy/paste from the Terminal I got :\n\u279c autojump --version\nautojump release-v20\n~\n\u279c zsh --version\nzsh 4.3.11 (i386-apple-darwin11.0)\n~\n\u279c python --version\nPython 2.7.1\n~\n\u279c setopt\n-bash: setopt: command not found\n. I forgot to tell that the difference is that I'm using bash and not zsh but the behaviour is exactly the same : using the j shortcut as instructed, it shows the right path but does NOT jump to it\u2026\n. I'm very sorry : I might have misunderstood the whole point of your work\u2026 Actually, if I'm doing something like :\n$ j devs [tab]\nit expands to '/home/Users/xxxx/Dropbox/devs/' and does NOT jump to it, but I guess it is the expected behaviour. On the other hand, if I'm typing :\n$ j devs [return]\nthen everything is fine, and if I pwd, the path is correct and I'm in the right place. Sincere apologies for this newbie \"noise and babble\".\n. ",
    "jrr": "In case this happens to anyone else:\nI had hastily set up a fish abbreviation to turn j into autojump. Don't do that.\nautojump and j have two different meanings, both provided by the autojump installation.. In case this happens to anyone else:\nI had hastily set up a fish abbreviation to turn j into autojump. Don't do that.\nautojump and j have two different meanings, both provided by the autojump installation.. ",
    "nielsbom": "Another option is to make it configurable which commands work together with autojump. The basic installation would then \"just\" add the \"j\" command. The .autojumprc could have a list of commands that \"trigger\" a response from autojump. This would make autojump useful in more cases and futureproof it as well.\n. @wting I too agree with the Unix philosophy. My suggestion for making autojump work with a configurable list of commands would adhere to: Rule of Composition: Design programs to be connected to other programs.\n. Another option is to make it configurable which commands work together with autojump. The basic installation would then \"just\" add the \"j\" command. The .autojumprc could have a list of commands that \"trigger\" a response from autojump. This would make autojump useful in more cases and futureproof it as well.\n. @wting I too agree with the Unix philosophy. My suggestion for making autojump work with a configurable list of commands would adhere to: Rule of Composition: Design programs to be connected to other programs.\n. ",
    "wolfgangw": "Please, pretty please, don't head down Bloat-Alley. +1 for KISS and cd only.\n. Having a list in autojumprc should be a good compromise, no? Users who need it badly enough would tweak completion targets in there (and you might get increasingly funky bug reports every now and then :). The others would get default cd-only completion without side-effects. Not bad at all in my book.\n. Please, pretty please, don't head down Bloat-Alley. +1 for KISS and cd only.\n. Having a list in autojumprc should be a good compromise, no? Users who need it badly enough would tweak completion targets in there (and you might get increasingly funky bug reports every now and then :). The others would get default cd-only completion without side-effects. Not bad at all in my book.\n. ",
    "sent-hil": "Restart of iTerm seemed to have fixed the problem.\n. Restart of iTerm seemed to have fixed the problem.\n. ",
    "zjiekai": "<tab><tab> is cool. But what I was picturing in my mind is that when one types a letter, the directory list immediately updates with highlighting, like ido-find-file in emacs.\n. <tab><tab> is cool. But what I was picturing in my mind is that when one types a letter, the directory list immediately updates with highlighting, like ido-find-file in emacs.\n. ",
    "ibrahima": "I have been thinking that it would be nice if the ranking function penalized non-matching characters somehow. I'm not sure that the result of a jump needs to be predictable, or rather, I'm not sure that the current behavior is intuitive in any way, because personally I would expect when searching (which is effectively what autojump is doing in some sense) I would get the most relevant result first, not necessarily the most popular (which is one factor, but not the only factor). Furthermore, predictability doesn't make a whole lot of sense as a metric of user friendliness because unless I'm going to go around jumpstating all the time, I don't know off the top of my head that I spent twice as much time in foobar as foo, for instance. All I know is that I want to get to foo and typing j foo doesn't get me there which is completely unintuitive. But if it's technically not possible to do this fast then it makes sense to not bother, I think. Some sort of flag might be a good compromise. I might poke into it in a little bit if I have time to see how things are done. Although jumpstat runs pretty fast so I'm not sure that speed is a problem here.\n. I have been thinking that it would be nice if the ranking function penalized non-matching characters somehow. I'm not sure that the result of a jump needs to be predictable, or rather, I'm not sure that the current behavior is intuitive in any way, because personally I would expect when searching (which is effectively what autojump is doing in some sense) I would get the most relevant result first, not necessarily the most popular (which is one factor, but not the only factor). Furthermore, predictability doesn't make a whole lot of sense as a metric of user friendliness because unless I'm going to go around jumpstating all the time, I don't know off the top of my head that I spent twice as much time in foobar as foo, for instance. All I know is that I want to get to foo and typing j foo doesn't get me there which is completely unintuitive. But if it's technically not possible to do this fast then it makes sense to not bother, I think. Some sort of flag might be a good compromise. I might poke into it in a little bit if I have time to see how things are done. Although jumpstat runs pretty fast so I'm not sure that speed is a problem here.\n. ",
    "sebas22": "Hi,Sorry to reply so late, I was out without regular internet.I'll do that tomorrow or the day after.\nIn the meanwhile, if you want to download the 512mb file, it's possible since once compressed, its size is only a few dizains of kb, so it's quick to DL it from tinyupload.comGreatingsSebas\n--- On Wed, 9/26/12, Daniel Hahler notifications@github.com wrote:\nFrom: Daniel Hahler notifications@github.com\nSubject: Re: [autojump] autojump.txt grows up to 512MB (#147)\nTo: \"joelthelion/autojump\" autojump@noreply.github.com\nCc: \"sebas22\" sebas_2@yahoo.com\nDate: Wednesday, September 26, 2012, 9:36 PM\nIt would be great, if you could provide a testcase to reproduce this.\nE.g. by creating a dir like mentioned above, cding to it and then using it from autojump.\n(It is not that useful having to download a 512mb file - and that would just be the lesser part of the issue)\nI am guessing there's an infinite loop involved somewhere, where autojump might be confused about the dir not being added already, while it is.\n```\n          \u2014\n      Reply to this email directly or view it on GitHub.\n\n```\n. Sorry, this bug is not reproductible. I've created a repertory with the same name, but autojump behaves normally, even when I go forth and back.\nGreetings\n. Hi,Sorry to reply so late, I was out without regular internet.I'll do that tomorrow or the day after.\nIn the meanwhile, if you want to download the 512mb file, it's possible since once compressed, its size is only a few dizains of kb, so it's quick to DL it from tinyupload.comGreatingsSebas\n--- On Wed, 9/26/12, Daniel Hahler notifications@github.com wrote:\nFrom: Daniel Hahler notifications@github.com\nSubject: Re: [autojump] autojump.txt grows up to 512MB (#147)\nTo: \"joelthelion/autojump\" autojump@noreply.github.com\nCc: \"sebas22\" sebas_2@yahoo.com\nDate: Wednesday, September 26, 2012, 9:36 PM\nIt would be great, if you could provide a testcase to reproduce this.\nE.g. by creating a dir like mentioned above, cding to it and then using it from autojump.\n(It is not that useful having to download a 512mb file - and that would just be the lesser part of the issue)\nI am guessing there's an infinite loop involved somewhere, where autojump might be confused about the dir not being added already, while it is.\n```\n          \u2014\n      Reply to this email directly or view it on GitHub.\n\n```\n. Sorry, this bug is not reproductible. I've created a repertory with the same name, but autojump behaves normally, even when I go forth and back.\nGreetings\n. ",
    "supervacuo": "I only spent a \u00bd hour or so (thanks, Hnasar!) but this bit me as well. I'm using /etc/profile.d/autojump.*, so there's no scope for me to load autojump.sh later.\n. I only spent a \u00bd hour or so (thanks, Hnasar!) but this bit me as well. I'm using /etc/profile.d/autojump.*, so there's no scope for me to load autojump.sh later.\n. ",
    "vbajpai": "Thanks!\nI see that autojump.zsh for me is at /usr/local/Cellar/autojump/20/etc/ (I used HomeBrew).\nI would personally like to put autojump.zsh in my dotfiles repository.\nWould you say, if I copy autojump.zsh from /usr/local/[...] to  my dotfiles. Make changes there, and then symlink the dot file to $HOME/.autojump/etc/profile.d/autojump.zsh would make it work on Mac/Linux?\n. so this is what I ended up doing:\nfunction cdl(){\n  clear\n  if [[ -d $1 ]]; then\n    cd $1;\n  else\n    j $1;\n  fi\n  tree -LC 1\n}\n. Thanks!\nI see that autojump.zsh for me is at /usr/local/Cellar/autojump/20/etc/ (I used HomeBrew).\nI would personally like to put autojump.zsh in my dotfiles repository.\nWould you say, if I copy autojump.zsh from /usr/local/[...] to  my dotfiles. Make changes there, and then symlink the dot file to $HOME/.autojump/etc/profile.d/autojump.zsh would make it work on Mac/Linux?\n. so this is what I ended up doing:\nfunction cdl(){\n  clear\n  if [[ -d $1 ]]; then\n    cd $1;\n  else\n    j $1;\n  fi\n  tree -LC 1\n}\n. ",
    "xixixao": "I used function renaming to do this:\n``` bash\ncopy-function() {\n  test -n \"$(declare -f $1)\" || return\n  eval \"${_/$1/$2}\"\n}\noldname newname\nrename-function() {\n  copy-function $@ || return\n  unset -f $1\n}\nautojump\n[[ -s brew --prefix/etc/autojump.sh ]] && . brew --prefix/etc/autojump.sh\nrename-function j jc\nj() { jc \"$@\" && lsd && remember; }\n```\n. Makes sense, because I downgraded it back to original after having some issues. Thanks.\n. I used function renaming to do this:\n``` bash\ncopy-function() {\n  test -n \"$(declare -f $1)\" || return\n  eval \"${_/$1/$2}\"\n}\noldname newname\nrename-function() {\n  copy-function $@ || return\n  unset -f $1\n}\nautojump\n[[ -s brew --prefix/etc/autojump.sh ]] && . brew --prefix/etc/autojump.sh\nrename-function j jc\nj() { jc \"$@\" && lsd && remember; }\n```\n. Makes sense, because I downgraded it back to original after having some issues. Thanks.\n. ",
    "reyman": "I have this \n```\nautojump --complete\nUnknown command line argument: option --complete not recognized\nautojump --version\nautojump release-v17-31-g79f2b29-dirty\n.\n$ REPOSITORY_GIT  git clone git://github.com/joelthelion/autojump.git \nCloning into 'autojump'...\nremote: Counting objects: 1441, done.\nremote: Compressing objects: 100% (552/552), done.\nremote: Total 1441 (delta 903), reused 1400 (delta 871)\nReceiving objects: 100% (1441/1441), 261.50 KiB | 479 KiB/s, done.\nResolving deltas: 100% (903/903), done.\n$ autojump git:(master) ./install.sh --zsh\n$ source ~/.zshrc\n$ autojump git:(master) autojump --version\n$ autojump release-v17-31-g79f2b29-dirty\n```\nThis is the same branch after a clean clonning :/\nThis is the master branch per default .. perhaps i can checkout another branch ?\n. Hum, i don't understand the bazar ...\n```\n $ which autojump\n $ /usr/bin/autojump\n$ sudo aptitude search autojump\n $ p   autojump                        - shell extension to jump to frequently used\n```\nI have a link and a binary to autojump in usr/bin, but autojump is not\ninstalled via package manager !? :(\n$ ls -la /usr/bin/ | grep autojump\n $ -rwxr-xr-x  1 root   root       12905 oct.   2 17:26 autojump\nI reinstall and remove it, perhaps that's can help me to solve this problem.\nOn Wed, Oct 3, 2012 at 2:53 PM, William Ting notifications@github.comwrote:\n\nI just checked out master branch, it's on v21-rc2. Run which autojump,\nyou may be running a distro version.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joelthelion/autojump/issues/152#issuecomment-9104997.\n\n\nhttp://stackoverflow.com/users/385881/reyman64\n. I re-install with install.sh --zsh script\nI relaunch zsh with  source ~/.zshrc\n    $ autojump --version\n    $ autojump not found\nI try another command :\n$ j\n$ j:7: command not found: autojump\n. same problem after all this command, autojump not found :/\nA copy paste of a part of my ~/.zshrc\n```\nplugins=(git ruby mvn python brew gem rails3 zsh-syntax-highlighting)\nautoload -Uz compinit\ncompinit\nsource $ZSH/oh-my-zsh.sh\n[[ -s ~/.autojump/etc/profile.d/autojump.zsh ]] && source\n```\n~/.autojump/etc/profile.d/autojump.zsh\nmy zsh version is zsh 4.3.17 (x86_64-unknown-linux-gnu)\nmy oh-my-zsh is the latest pull :\nFri Sep 28 22:52:19 2012 -0700\ncommit 73f777053725ce61d6fada67ff3f174130dd8c94\nOn Wed, Oct 3, 2012 at 7:28 PM, William Ting notifications@github.comwrote:\n\nFirst, remove it from your package manager, run the uninstall script, then\ntry the install script:\n$ sudo aptitude purge -y autojump\n$ git clone git://github.com/joelthelion/autojump.git\n$ sudo ./uninstall.sh\n$ ./install.sh\n$ source ~/.zshrc\n$ autojump --version\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joelthelion/autojump/issues/152#issuecomment-9114751.\n\n\nhttp://stackoverflow.com/users/385881/reyman64\n. Hum, autojump.zsh exist, if i manually source it, j and autojump --version works !\nHow can i resolve automaticaly the problem if the install.sh don't work ?\n. I have this line in my ~.zshrc, but when i source this file, i have no\nerror and autojump don't work.\nIf i copy paste this line in my terminal, autojump work, it's crazy..\nI don't understand where is my problem ? perhaps a conflict with oh-my-zsh\nsourcing ?\nOn Mon, Oct 8, 2012 at 2:24 PM, William Ting notifications@github.comwrote:\n\nIf autojump.zsh exists, then this line in your ~/.zshrc should be sourcing\nthe file properly: [[ -s ~/.autojump/etc/profile.d/autojump.zsh ]] &&\nsource\n~/.autojump/etc/profile.d/autojump.zsh\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joelthelion/autojump/issues/152#issuecomment-9223970.\n\n\nhttp://stackoverflow.com/users/385881/reyman64\n. Perhaps i can post on the issue list of oh my zsh, i search also on ubuntu\nmailling list..\nI post here if i find something.\nOn Mon, Oct 8, 2012 at 3:40 PM, William Ting notifications@github.comwrote:\n\nIf you can run that above command from the terminal and get autojump\nworking, then at this point there is something wrong with your system\nloading ~/.zshrc and not much I can help with. Perhaps try temporarily\nremoving oh my zsh?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joelthelion/autojump/issues/152#issuecomment-9225877.\n\n\nhttp://stackoverflow.com/users/385881/reyman64\n. I have this \n```\nautojump --complete\nUnknown command line argument: option --complete not recognized\nautojump --version\nautojump release-v17-31-g79f2b29-dirty\n.\n$ REPOSITORY_GIT  git clone git://github.com/joelthelion/autojump.git \nCloning into 'autojump'...\nremote: Counting objects: 1441, done.\nremote: Compressing objects: 100% (552/552), done.\nremote: Total 1441 (delta 903), reused 1400 (delta 871)\nReceiving objects: 100% (1441/1441), 261.50 KiB | 479 KiB/s, done.\nResolving deltas: 100% (903/903), done.\n$ autojump git:(master) ./install.sh --zsh\n$ source ~/.zshrc\n$ autojump git:(master) autojump --version\n$ autojump release-v17-31-g79f2b29-dirty\n```\nThis is the same branch after a clean clonning :/\nThis is the master branch per default .. perhaps i can checkout another branch ?\n. Hum, i don't understand the bazar ...\n```\n $ which autojump\n $ /usr/bin/autojump\n$ sudo aptitude search autojump\n $ p   autojump                        - shell extension to jump to frequently used\n```\nI have a link and a binary to autojump in usr/bin, but autojump is not\ninstalled via package manager !? :(\n$ ls -la /usr/bin/ | grep autojump\n $ -rwxr-xr-x  1 root   root       12905 oct.   2 17:26 autojump\nI reinstall and remove it, perhaps that's can help me to solve this problem.\nOn Wed, Oct 3, 2012 at 2:53 PM, William Ting notifications@github.comwrote:\n\nI just checked out master branch, it's on v21-rc2. Run which autojump,\nyou may be running a distro version.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joelthelion/autojump/issues/152#issuecomment-9104997.\n\n\nhttp://stackoverflow.com/users/385881/reyman64\n. I re-install with install.sh --zsh script\nI relaunch zsh with  source ~/.zshrc\n    $ autojump --version\n    $ autojump not found\nI try another command :\n$ j\n$ j:7: command not found: autojump\n. same problem after all this command, autojump not found :/\nA copy paste of a part of my ~/.zshrc\n```\nplugins=(git ruby mvn python brew gem rails3 zsh-syntax-highlighting)\nautoload -Uz compinit\ncompinit\nsource $ZSH/oh-my-zsh.sh\n[[ -s ~/.autojump/etc/profile.d/autojump.zsh ]] && source\n```\n~/.autojump/etc/profile.d/autojump.zsh\nmy zsh version is zsh 4.3.17 (x86_64-unknown-linux-gnu)\nmy oh-my-zsh is the latest pull :\nFri Sep 28 22:52:19 2012 -0700\ncommit 73f777053725ce61d6fada67ff3f174130dd8c94\nOn Wed, Oct 3, 2012 at 7:28 PM, William Ting notifications@github.comwrote:\n\nFirst, remove it from your package manager, run the uninstall script, then\ntry the install script:\n$ sudo aptitude purge -y autojump\n$ git clone git://github.com/joelthelion/autojump.git\n$ sudo ./uninstall.sh\n$ ./install.sh\n$ source ~/.zshrc\n$ autojump --version\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joelthelion/autojump/issues/152#issuecomment-9114751.\n\n\nhttp://stackoverflow.com/users/385881/reyman64\n. Hum, autojump.zsh exist, if i manually source it, j and autojump --version works !\nHow can i resolve automaticaly the problem if the install.sh don't work ?\n. I have this line in my ~.zshrc, but when i source this file, i have no\nerror and autojump don't work.\nIf i copy paste this line in my terminal, autojump work, it's crazy..\nI don't understand where is my problem ? perhaps a conflict with oh-my-zsh\nsourcing ?\nOn Mon, Oct 8, 2012 at 2:24 PM, William Ting notifications@github.comwrote:\n\nIf autojump.zsh exists, then this line in your ~/.zshrc should be sourcing\nthe file properly: [[ -s ~/.autojump/etc/profile.d/autojump.zsh ]] &&\nsource\n~/.autojump/etc/profile.d/autojump.zsh\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joelthelion/autojump/issues/152#issuecomment-9223970.\n\n\nhttp://stackoverflow.com/users/385881/reyman64\n. Perhaps i can post on the issue list of oh my zsh, i search also on ubuntu\nmailling list..\nI post here if i find something.\nOn Mon, Oct 8, 2012 at 3:40 PM, William Ting notifications@github.comwrote:\n\nIf you can run that above command from the terminal and get autojump\nworking, then at this point there is something wrong with your system\nloading ~/.zshrc and not much I can help with. Perhaps try temporarily\nremoving oh my zsh?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joelthelion/autojump/issues/152#issuecomment-9225877.\n\n\nhttp://stackoverflow.com/users/385881/reyman64\n. ",
    "anrao91": "My fix for this issue is - \n1) Execute the zshrc in the bash first, and then change the SHELL, say -\n$~/.zshrc\n$ZSH\nProvided you have followed the installation steps given here - https://github.com/robbyrussell/oh-my-zsh/blob/master/README.markdown\n. My fix for this issue is - \n1) Execute the zshrc in the bash first, and then change the SHELL, say -\n$~/.zshrc\n$ZSH\nProvided you have followed the installation steps given here - https://github.com/robbyrussell/oh-my-zsh/blob/master/README.markdown\nP.S : It worked in mac for me \n. My fix for this issue is - \n1) Execute the zshrc in the bash first, and then change the SHELL, say -\n$~/.zshrc\n$ZSH\nProvided you have followed the installation steps given here - https://github.com/robbyrussell/oh-my-zsh/blob/master/README.markdown\n. My fix for this issue is - \n1) Execute the zshrc in the bash first, and then change the SHELL, say -\n$~/.zshrc\n$ZSH\nProvided you have followed the installation steps given here - https://github.com/robbyrussell/oh-my-zsh/blob/master/README.markdown\nP.S : It worked in mac for me \n. ",
    "alexbw": "21.0.2, right from github.\nI also tried the homebrew install, which I believe was v17 (indicated by a numbered folder that it was placed into. I did not run the --version command, so I could be wrong.)\nOn Oct 31, 2012, at 2:13 PM, William Ting notifications@github.com wrote:\n\nWhich version are you running? autojump --version\nI have inconsistent access to a Mac, so it may take me a while to track down the root cause.\n\u2014\nReply to this email directly or view it on GitHub.\n. Ah, I did a stupid thing that was a combination of a weird MacPorts / Brew overlap (migrated to a new machine, took some of my configurations to it, but not all). \n\nThe \"j\" command was inexplicably gone in my migration, and I didn't understand that it wasn't an alias to \"autojump\", so I set the alias myself. \nUser error, as usual. Sorry to take your time, and thanks for a great tool!\n. 21.0.2, right from github.\nI also tried the homebrew install, which I believe was v17 (indicated by a numbered folder that it was placed into. I did not run the --version command, so I could be wrong.)\nOn Oct 31, 2012, at 2:13 PM, William Ting notifications@github.com wrote:\n\nWhich version are you running? autojump --version\nI have inconsistent access to a Mac, so it may take me a while to track down the root cause.\n\u2014\nReply to this email directly or view it on GitHub.\n. Ah, I did a stupid thing that was a combination of a weird MacPorts / Brew overlap (migrated to a new machine, took some of my configurations to it, but not all). \n\nThe \"j\" command was inexplicably gone in my migration, and I didn't understand that it wasn't an alias to \"autojump\", so I set the alias myself. \nUser error, as usual. Sorry to take your time, and thanks for a great tool!\n. ",
    "stephenluu": "I make an alias \"j = autojump \" , cause the same question . Thanks any way .\n. I make an alias \"j = autojump \" , cause the same question . Thanks any way .\n. ",
    "turingking": "How to solve it?\n. My other computer is a normal, and I can not understand why so\n. @wting  I have read, but the problem still exists. Can not access the directory, it will only print out the directory\n``` shell\n\u279c  ~ j yjy\n/home/king/AndroidStudioProjects/yjysh\n\u279c  ~ j -v\nautojump v22.3.0\n\u279c  ~ j -s\n10.0:   /home/king/AndroidStudioProjects/yjysh\n10.0:   /home/king/gitProjects/autojump\n10.0:   /home/king/gitProjects\n\n30:  total weight\n3:   number of entries\n0.00:    current directory weight\ndata:    /home/king/.local/share/autojump/autojump.txt\n```\n. @wting \n`` shell\n\u279c  yjysh git:(release) \u2717 echo $SHELL\n/bin/zsh\n\u279c  yjysh git:(release) \u2717 which j\nj: aliased to autojump\n\u279c  yjysh git:(release) \u2717 declare -f j\nj () {\n    if [[ ${1} = -* ]] && [[ ${1} != \"--\" ]]\n    then\n        autojump ${@}\n        return\n    fi\n    setopt localoptions noautonamedirs\n    local output=\"$(autojump ${@})\" \n    if [[ -d \"${output}\" ]]\n    then\n        if [ -t 1 ]\n        then\n            echo -e \"\\\\033[31m${output}\\\\033[0m\"\n        else\n            echo -e \"${output}\"\n        fi\n        cd \"${output}\"\n    else\n        echo \"autojump: directory '${@}' not found\"\n        echo \"\\n${output}\\n\"\n        echo \"Try \\autojump --help` for more information.\"\n        false\n    fi\n}\n```\n. @wting Direct use has no effect\n``` shell\n\u279c  ~ autojump -s\n10.0:   /home/king/gitProjects/autojump\n10.0:   /home/king/gitProjects\n10.0:   /home/king/AndroidStudioProjects\n17.3:   /home/king/AndroidStudioProjects/yjysh\n\n47:  total weight\n4:   number of entries\n0.00:    current directory weight\ndata:    /home/king/.local/share/autojump/autojump.txt\n\u279c  ~ autojump yjy\n/home/king/AndroidStudioProjects/yjysh\n\u279c  ~ declare -f autojump\n\u279c  ~ \n```\n. @wting  Thanks ~\n. How to solve it?\n. My other computer is a normal, and I can not understand why so\n. @wting  I have read, but the problem still exists. Can not access the directory, it will only print out the directory\n``` shell\n\u279c  ~ j yjy\n/home/king/AndroidStudioProjects/yjysh\n\u279c  ~ j -v\nautojump v22.3.0\n\u279c  ~ j -s\n10.0:   /home/king/AndroidStudioProjects/yjysh\n10.0:   /home/king/gitProjects/autojump\n10.0:   /home/king/gitProjects\n\n30:  total weight\n3:   number of entries\n0.00:    current directory weight\ndata:    /home/king/.local/share/autojump/autojump.txt\n```\n. @wting \n`` shell\n\u279c  yjysh git:(release) \u2717 echo $SHELL\n/bin/zsh\n\u279c  yjysh git:(release) \u2717 which j\nj: aliased to autojump\n\u279c  yjysh git:(release) \u2717 declare -f j\nj () {\n    if [[ ${1} = -* ]] && [[ ${1} != \"--\" ]]\n    then\n        autojump ${@}\n        return\n    fi\n    setopt localoptions noautonamedirs\n    local output=\"$(autojump ${@})\" \n    if [[ -d \"${output}\" ]]\n    then\n        if [ -t 1 ]\n        then\n            echo -e \"\\\\033[31m${output}\\\\033[0m\"\n        else\n            echo -e \"${output}\"\n        fi\n        cd \"${output}\"\n    else\n        echo \"autojump: directory '${@}' not found\"\n        echo \"\\n${output}\\n\"\n        echo \"Try \\autojump --help` for more information.\"\n        false\n    fi\n}\n```\n. @wting Direct use has no effect\n``` shell\n\u279c  ~ autojump -s\n10.0:   /home/king/gitProjects/autojump\n10.0:   /home/king/gitProjects\n10.0:   /home/king/AndroidStudioProjects\n17.3:   /home/king/AndroidStudioProjects/yjysh\n\n47:  total weight\n4:   number of entries\n0.00:    current directory weight\ndata:    /home/king/.local/share/autojump/autojump.txt\n\u279c  ~ autojump yjy\n/home/king/AndroidStudioProjects/yjysh\n\u279c  ~ declare -f autojump\n\u279c  ~ \n```\n. @wting  Thanks ~\n. ",
    "devth": "Sorry, I forgot to reply to your question.\njc looks like a nice way to handle this. Thanks!\n. Sorry, I forgot to reply to your question.\njc looks like a nice way to handle this. Thanks!\n. ",
    "stefanscheidt": "See #160.\n. Same here. I'm using autojump release-v21.6.9 installed via Homebrew.\n. See #160.\n. Same here. I'm using autojump release-v21.6.9 installed via Homebrew.\n. ",
    "jandubois": "Same here. Fixed it by changing /usr/local/Cellar/autojump/21.0.3/etc/autojump.bash:\n```\n*)   export PROMPT_COMMAND=\"${PROMPT_COMMAND:+$PROMPT_COMMAND ; }$AUTOJUMP\";;\n*)   export PROMPT_COMMAND=\"$AUTOJUMP ; ${PROMPT_COMMAND:-:}\";;\n\n``\n. Same here. Fixed it by changing/usr/local/Cellar/autojump/21.0.3/etc/autojump.bash`:\n```\n*)   export PROMPT_COMMAND=\"${PROMPT_COMMAND:+$PROMPT_COMMAND ; }$AUTOJUMP\";;\n*)   export PROMPT_COMMAND=\"$AUTOJUMP ; ${PROMPT_COMMAND:-:}\";;\n\n```\n. ",
    "ijonas": "Works fine for me. Installed JrC's command-prompt branch running Mountain Lion 10.8 and zsh.  I ran the install.sh script and autojump is happy, behaving as expected. \nHaven't noticed any ill side-effects to auto jump or any other shell software.\n. Works fine for me. Installed JrC's command-prompt branch running Mountain Lion 10.8 and zsh.  I ran the install.sh script and autojump is happy, behaving as expected. \nHaven't noticed any ill side-effects to auto jump or any other shell software.\n. ",
    "jjk-jacky": "I think there might be an issue with the way you've handled it though: if someone uses --local --dry-run (in that order, e.g. --dry-run last) then by the time --dry-run is evaluated (in the switch) it would be the only param left, and therefore set --auto, even though it shouldn't. This would lead to wrong path being shown as well.\n. I think there might be an issue with the way you've handled it though: if someone uses --local --dry-run (in that order, e.g. --dry-run last) then by the time --dry-run is evaluated (in the switch) it would be the only param left, and therefore set --auto, even though it shouldn't. This would lead to wrong path being shown as well.\n. ",
    "wamatt": "Cool. I updated the wiki for you.\n. Cool. I updated the wiki for you.\n. ",
    "higepon": "My pleasure.\n. My pleasure.\n. ",
    "9mm": "1: fails (command not found)\n2: fails (command not found)\n3: works\nOutputs:\n1: /bin/bash\n2: bash\n. When I run the output commands on my local machine (where it works) I get /bin/zsh and zsh\nSo that must be the problem, but it really confuses me because zsh is obviously running? I used the path that it wanted me to from the config file it generated.\nOn the machine that doesn't work:\n``` bash\nPath to your oh-my-zsh configuration.\nZSH=$HOME/.oh-my-zsh\nSet name of the theme to load.\nLook in ~/.oh-my-zsh/themes/\nOptionally, if you set this to \"random\", it'll load a random theme each\ntime that oh-my-zsh is loaded.\nZSH_THEME=\"sorin\"\nExample aliases\nalias zshconfig=\"mate ~/.zshrc\"\nalias ohmyzsh=\"mate ~/.oh-my-zsh\"\nSet to this to use case-sensitive completion\nCASE_SENSITIVE=\"true\"\nWhich plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)\nCustom plugins may be added to ~/.oh-my-zsh/custom/plugins/\nExample format: plugins=(rails git textmate ruby lighthouse)\nplugins=(bundler git github osx vi-mode)\nsource $ZSH/oh-my-zsh.sh\n[[ -s brew --prefix/etc/autojump.sh ]] && . brew --prefix/etc/autojump.sh\nCustomize to your needs...\nexport PATH=:$HOME/.rvm/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin\n```\n. 1: fails (command not found)\n2: fails (command not found)\n3: works\nOutputs:\n1: /bin/bash\n2: bash\n. When I run the output commands on my local machine (where it works) I get /bin/zsh and zsh\nSo that must be the problem, but it really confuses me because zsh is obviously running? I used the path that it wanted me to from the config file it generated.\nOn the machine that doesn't work:\n``` bash\nPath to your oh-my-zsh configuration.\nZSH=$HOME/.oh-my-zsh\nSet name of the theme to load.\nLook in ~/.oh-my-zsh/themes/\nOptionally, if you set this to \"random\", it'll load a random theme each\ntime that oh-my-zsh is loaded.\nZSH_THEME=\"sorin\"\nExample aliases\nalias zshconfig=\"mate ~/.zshrc\"\nalias ohmyzsh=\"mate ~/.oh-my-zsh\"\nSet to this to use case-sensitive completion\nCASE_SENSITIVE=\"true\"\nWhich plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)\nCustom plugins may be added to ~/.oh-my-zsh/custom/plugins/\nExample format: plugins=(rails git textmate ruby lighthouse)\nplugins=(bundler git github osx vi-mode)\nsource $ZSH/oh-my-zsh.sh\n[[ -s brew --prefix/etc/autojump.sh ]] && . brew --prefix/etc/autojump.sh\nCustomize to your needs...\nexport PATH=:$HOME/.rvm/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin\n```\n. ",
    "Amparose": "Just dropping in to say I had similar issue after installing ZSH and seemed to be resolved by reinstalling via Brew and adding the line to .zshrc.\n. Just dropping in to say I had similar issue after installing ZSH and seemed to be resolved by reinstalling via Brew and adding the line to .zshrc.\n. ",
    "xr09": "Thumbs up!! Here some ideas to make it better.\nDetect the OS and omit the config hassle in bashrc.\nhttp://stackoverflow.com/questions/394230/detect-the-os-from-a-bash-script\nUse xdg-open in linux, just open in osx. \nhttp://portland.freedesktop.org/xdg-utils-1.0/xdg-open.html\nOf course, keep the config option in .bashrc in case anyone wants to use another filemanager for autojump.\n. @joelthelion yes a suggestion in the docs with this example will do, using xdg-open would be fm agnostic, anyway autojump users are pretty much CLI fans so editing bashrc is ok.\n. Appending a & at the end of the command will make it more \"instantaneous\".\n. Add source /path/to/autojump.sh to your bashrc, then use it with j.. Thumbs up!! Here some ideas to make it better.\nDetect the OS and omit the config hassle in bashrc.\nhttp://stackoverflow.com/questions/394230/detect-the-os-from-a-bash-script\nUse xdg-open in linux, just open in osx. \nhttp://portland.freedesktop.org/xdg-utils-1.0/xdg-open.html\nOf course, keep the config option in .bashrc in case anyone wants to use another filemanager for autojump.\n. @joelthelion yes a suggestion in the docs with this example will do, using xdg-open would be fm agnostic, anyway autojump users are pretty much CLI fans so editing bashrc is ok.\n. Appending a & at the end of the command will make it more \"instantaneous\".\n. Add source /path/to/autojump.sh to your bashrc, then use it with j.. ",
    "jsliang": "Thank you @xr09, the links you provided are really helpful. I didn't know there's an xdg-open in Linux and that's pretty cool.\n@joelthelion The simpler implementation is so elegant! I changed my commit and now the pull request contains only one commit that just modifies the docs (adding to the Additional Configuration section).\n. Autojump is just too awesome! Glad that I can help. :D\n. To keep this repository clean, the plugin will be maintained in another repository, independent of the autojump repository. Users are asked to install autojump first before they can use the plugin.\n. Hi @wting, thank you. Actually I've started working on it. The repository is https://github.com/jsliang/AutoJump. Since I haven't written a README for this plugin, I have not proposed to add it to autojump's documentation. I'll keep this issue updated. :)\n. Thank you @xr09, the links you provided are really helpful. I didn't know there's an xdg-open in Linux and that's pretty cool.\n@joelthelion The simpler implementation is so elegant! I changed my commit and now the pull request contains only one commit that just modifies the docs (adding to the Additional Configuration section).\n. Autojump is just too awesome! Glad that I can help. :D\n. To keep this repository clean, the plugin will be maintained in another repository, independent of the autojump repository. Users are asked to install autojump first before they can use the plugin.\n. Hi @wting, thank you. Actually I've started working on it. The repository is https://github.com/jsliang/AutoJump. Since I haven't written a README for this plugin, I have not proposed to add it to autojump's documentation. I'll keep this issue updated. :)\n. ",
    "grota": "I added that but j<space><tab><tab> only completes the filenames in current dir\n. cool, thanks\n. Sure, I'll try later, but IIRC I tried launching that command from the prompt and it didn't work. I'll post the confirmation later.\n. Confirmed, it doesn't work. @wting is it possible that the autocomplete functionality was implemented by the _j file that was recently deleted?\n. I just compiled, installed and run zsh 5.0.0 from source but I didn't get the autocomplete\n. yep, thanks!\n. autocomplete for jo seems to be a one liner (same as the one for j) while autocomplete for jc and jco seems to require changes to the script itself, which I am not able to do (I don't know python).\nAny thoughts?\n. ping\n. I might be saying something stupid here because I haven't been using jc for a long time (due in fact to the lack of autocompletion), so if that's the case, apologies in advance.\nI'm assuming that in this case the pwd is / and we are issuing jc fo ba, right? I think the answer to your question would be \"both if both dirs are in the database, and ordered depending on their weight\"\n. For jc and jco I'll try to figure out if filtering the output of autojump --complete $PWD is feasible (using only shell scripting).\nI guess I'll end up with holes in the list numbering but it's better than nothing I guess\n. Ok, so I've transformed this issue in a pull request.\nI've asked and it seems like the use case we outlined above is not possible (in bash).\nI'm not 100% satisfied with the current code but I don't know python so I don't feel comfortable digging further.\n. I've added another commit where I use aliases for jc and jco.\nNot sure if this is the correct approach, it needs another set of eyes.\n. I added that but j<space><tab><tab> only completes the filenames in current dir\n. cool, thanks\n. Sure, I'll try later, but IIRC I tried launching that command from the prompt and it didn't work. I'll post the confirmation later.\n. Confirmed, it doesn't work. @wting is it possible that the autocomplete functionality was implemented by the _j file that was recently deleted?\n. I just compiled, installed and run zsh 5.0.0 from source but I didn't get the autocomplete\n. yep, thanks!\n. autocomplete for jo seems to be a one liner (same as the one for j) while autocomplete for jc and jco seems to require changes to the script itself, which I am not able to do (I don't know python).\nAny thoughts?\n. ping\n. I might be saying something stupid here because I haven't been using jc for a long time (due in fact to the lack of autocompletion), so if that's the case, apologies in advance.\nI'm assuming that in this case the pwd is / and we are issuing jc fo ba, right? I think the answer to your question would be \"both if both dirs are in the database, and ordered depending on their weight\"\n. For jc and jco I'll try to figure out if filtering the output of autojump --complete $PWD is feasible (using only shell scripting).\nI guess I'll end up with holes in the list numbering but it's better than nothing I guess\n. Ok, so I've transformed this issue in a pull request.\nI've asked and it seems like the use case we outlined above is not possible (in bash).\nI'm not 100% satisfied with the current code but I don't know python so I don't feel comfortable digging further.\n. I've added another commit where I use aliases for jc and jco.\nNot sure if this is the correct approach, it needs another set of eyes.\n. ",
    "hammacher": "Same issue here, on Mac 10.7.5 running zsh 4.3.11. I can't get autocompletion working. I tried using the oh-my-zsh plugin, and a plain manual installation. I also tried putting ~/.autojump/bin on the path. Nothing helped.\nAutojump itself works (e.g. \"j src\"), but tab-completion does not. It just shows the files of the current directory.\nAnyway, let me express my deep gratitude for all your development work! I very much would have liked to come up with a solution rather than just a complaint, but I were not able to fix this...\n. Thanks for investigation, but this does not seem to make a difference for me. I removed all other entries from .zshrc, .zshenv and .zprofile, to get a plain zsh, and then run source .autojump/etc/profile.d/autojump.zsh and autoload -U compinit && compinit. Still the same behaviour: autojump works, but no tab completion.\ngrota, can you test on your machine?\n. I just updated my zsh from version 4.3.11 (preinstalled) to 5.0.2 (via macports). In that version, everything works as expected. So maybe we should just add this hint somewhere and leave it at that?\n. Same issue here, on Mac 10.7.5 running zsh 4.3.11. I can't get autocompletion working. I tried using the oh-my-zsh plugin, and a plain manual installation. I also tried putting ~/.autojump/bin on the path. Nothing helped.\nAutojump itself works (e.g. \"j src\"), but tab-completion does not. It just shows the files of the current directory.\nAnyway, let me express my deep gratitude for all your development work! I very much would have liked to come up with a solution rather than just a complaint, but I were not able to fix this...\n. Thanks for investigation, but this does not seem to make a difference for me. I removed all other entries from .zshrc, .zshenv and .zprofile, to get a plain zsh, and then run source .autojump/etc/profile.d/autojump.zsh and autoload -U compinit && compinit. Still the same behaviour: autojump works, but no tab completion.\ngrota, can you test on your machine?\n. I just updated my zsh from version 4.3.11 (preinstalled) to 5.0.2 (via macports). In that version, everything works as expected. So maybe we should just add this hint somewhere and leave it at that?\n. ",
    "praus": "I had the same problem described here with zsh 5.0.0 (from Ubuntu 12.10), tried the solution with adding compinit. But I also needed to add ~/.autojump to fpath to get the completion working:\nsh\nfpath=( ~/.autojump \"${fpath[@]}\" ) # do before sourcing autojump\n. I had the same problem described here with zsh 5.0.0 (from Ubuntu 12.10), tried the solution with adding compinit. But I also needed to add ~/.autojump to fpath to get the completion working:\nsh\nfpath=( ~/.autojump \"${fpath[@]}\" ) # do before sourcing autojump\n. ",
    "lhotari": "Using homebrew zsh worked for me: http://zanshin.net/2013/09/03/how-to-use-homebrew-zsh-instead-of-max-os-x-default/\n. Using homebrew zsh worked for me: http://zanshin.net/2013/09/03/how-to-use-homebrew-zsh-instead-of-max-os-x-default/\n. ",
    "liuyang1": "i love this ieda, and now i implement it partly.\nnow jc can only check child directories, jco also works.\ni add this feature for bash and zsh, as i only know this two shell.\nunder zsh, it seems work good.\nnow i want add auto completion feature for jc under ZSH, but i can't find how to deal it?\nwho can give some tips?\nThanks!\n. I also like this feature.\nWho can add this?\n. i love this ieda, and now i implement it partly.\nnow jc can only check child directories, jco also works.\ni add this feature for bash and zsh, as i only know this two shell.\nunder zsh, it seems work good.\nnow i want add auto completion feature for jc under ZSH, but i can't find how to deal it?\nwho can give some tips?\nThanks!\n. I also like this feature.\nWho can add this?\n. ",
    "andreineculau": "it's done - https://github.com/mxcl/homebrew/commit/c64a01739780366de0990f18d06e0228f8a1723c#Library/Formula/autojump.rb\nFYI for future readers: while a formula gets updated, one can also try brew unlink autojump && brew install autojump --HEAD\n. it's done - https://github.com/mxcl/homebrew/commit/c64a01739780366de0990f18d06e0228f8a1723c#Library/Formula/autojump.rb\nFYI for future readers: while a formula gets updated, one can also try brew unlink autojump && brew install autojump --HEAD\n. ",
    "spinningarrow": "Is zsh your default shell? I had a problem where autojump wouldn't work properly because bash was my default shell but I was using zsh. What do you get when you run echo $SHELL?\n. Try adding this to your .zshrc:\n[[ -s `brew --prefix`/etc/autojump.sh ]] && . `brew --prefix`/etc/autojump.sh\n. I'm getting this issue on the latest version (22.2.4). Should I submit a pull request according to what is mentioned in the above comment?\n. @marcecj I can't explain it but I'm not getting the error any more. I'm still on v22.2.4 :sweat_smile: \n. Is zsh your default shell? I had a problem where autojump wouldn't work properly because bash was my default shell but I was using zsh. What do you get when you run echo $SHELL?\n. Try adding this to your .zshrc:\n[[ -s `brew --prefix`/etc/autojump.sh ]] && . `brew --prefix`/etc/autojump.sh\n. I'm getting this issue on the latest version (22.2.4). Should I submit a pull request according to what is mentioned in the above comment?\n. @marcecj I can't explain it but I'm not getting the error any more. I'm still on v22.2.4 :sweat_smile: \n. ",
    "shepherdwind": "yes, zsh is default shell.\nsh\n$ echo $SHELL\n/bin/zsh\n. Reinstall is fine, no problem, thanks.\n. yes, zsh is default shell.\nsh\n$ echo $SHELL\n/bin/zsh\n. Reinstall is fine, no problem, thanks.\n. ",
    "sloria": "Having the same problem. Strangely, I have changed my default shell using chsh -s /bin/zsh which successfully logs me into a new zsh session when I open Terminal, but when I run echo $SHELL it shows /bin/bash.\n. Having the same problem. Strangely, I have changed my default shell using chsh -s /bin/zsh which successfully logs me into a new zsh session when I open Terminal, but when I run echo $SHELL it shows /bin/bash.\n. ",
    "maxscott": "I'm actually having this issue as well... zsh is default, 'autojump' works whereas 'j' is not found. Just updated and installed to no avail. .zshrc add-in results in:\nautojump: directory '' not found\nTry autojump --help for more information.\n. I'm actually having this issue as well... zsh is default, 'autojump' works whereas 'j' is not found. Just updated and installed to no avail. .zshrc add-in results in:\nautojump: directory '' not found\nTry autojump --help for more information.\n. ",
    "iClosedz": "Got the same problem with maxwerr.\n/bin/zsh\nand I add this on my .zshrc:\n[[ -s `brew --prefix`/etc/autojump.sh ]] && . `brew --prefix`/etc/autojump.sh\nwhen call j:\nautojump: directory '' not found\nTry `autojump --help` for more information.\n. Got the same problem with maxwerr.\n/bin/zsh\nand I add this on my .zshrc:\n[[ -s `brew --prefix`/etc/autojump.sh ]] && . `brew --prefix`/etc/autojump.sh\nwhen call j:\nautojump: directory '' not found\nTry `autojump --help` for more information.\n. ",
    "jbranchaud": "I've had autojump for a long time and it has always worked fine. I just did a huge update of all homebrew stuff and it broke in the way that is being described above. I dug into the \\brew --prefix/etc/to find that instead of a generic executable (autojump), there are now executables for each type of shell (autojump.sh,autojump.zsh,autojump.fish,autojump.bash). Once I updated the setup line in my .zshrc file (as others have mentioned above), it worked great:\nbash\n[[ -s `brew --prefix`/etc/autojump.zsh ]] && . `brew --prefix`/etc/autojump.zsh\nThe trick was to use the zsh one since I am using zsh as my default shell. I realize this issue is closed, but hopefully that helps anyone who comes across this issue.\n. I've had autojump for a long time and it has always worked fine. I just did a huge update of all homebrew stuff and it broke in the way that is being described above. I dug into the \\brew --prefix/etc/to find that instead of a generic executable (autojump), there are now executables for each type of shell (autojump.sh,autojump.zsh,autojump.fish,autojump.bash). Once I updated the setup line in my .zshrc file (as others have mentioned above), it worked great:\nbash\n[[ -s `brew --prefix`/etc/autojump.zsh ]] && . `brew --prefix`/etc/autojump.zsh\nThe trick was to use the zsh one since I am using zsh as my default shell. I realize this issue is closed, but hopefully that helps anyone who comes across this issue.\n. ",
    "bryankennedy": "```\n$ autojump --version\nautojump release-v19\n$ echo $SHELL\n/bin/bash\n```\n. OK, I see my error. I read through the brew Formula and realized I missed the last step of the installation script:\nhttps://github.com/mxcl/homebrew/blob/master/Library/Formula/autojump.rb#L19\nI also noticed that I was using an old version of autojump. I should have checked that first. After uninstalling, re-installing, and adding that line to my bash, all is well. Sorry to clutter up the issue queue.\n. ```\n$ autojump --version\nautojump release-v19\n$ echo $SHELL\n/bin/bash\n```\n. OK, I see my error. I read through the brew Formula and realized I missed the last step of the installation script:\nhttps://github.com/mxcl/homebrew/blob/master/Library/Formula/autojump.rb#L19\nI also noticed that I was using an old version of autojump. I should have checked that first. After uninstalling, re-installing, and adding that line to my bash, all is well. Sorry to clutter up the issue queue.\n. ",
    "maelp": "Yes, this seems more useful than jumping to the most used directory, that you can often reference with one added char anyway :)\n. Probably \n. That could be a possibility (but then indeed things will get weird if you have several tmux sessions in the same dir) although this feature is mostly intended as a quick correction jump after a false positive, so you should never go into another session & simply type j\n. Probably rotate through all matching entries (anyway, another j foo would go back to the first entry, and subsequent j would cycle again, so cycling is not really necessary )\n. Yes, this seems more useful than jumping to the most used directory, that you can often reference with one added char anyway :)\n. Probably \n. That could be a possibility (but then indeed things will get weird if you have several tmux sessions in the same dir) although this feature is mostly intended as a quick correction jump after a false positive, so you should never go into another session & simply type j\n. Probably rotate through all matching entries (anyway, another j foo would go back to the first entry, and subsequent j would cycle again, so cycling is not really necessary )\n. ",
    "mosnicholas": "The autojump.txt file empties, but it's still there. After it deletes all the entries, it starts from scratch to repopulate them.\n. It repeatedly occurs. There's nothing required to reproduce it \u2013 the file just empties without me doing anything. All I do is use it ( with \"j someDir\" ), and then find at some point that the autojump.txt file has been purged\n. The autojump.txt file empties, but it's still there. After it deletes all the entries, it starts from scratch to repopulate them.\n. It repeatedly occurs. There's nothing required to reproduce it \u2013 the file just empties without me doing anything. All I do is use it ( with \"j someDir\" ), and then find at some point that the autojump.txt file has been purged\n. ",
    "brennebeck": "@wting - I actually have this same problem.\nFor me, it feels like it is related to nvm, but I can't directly confirm that. I say it's related to nvm because whenever it does reset, the only remaining entry is an nvm entry. \n$ j -v\nautojump release-v21.5.8\nInstalled via brew\nWhat can I do to help resolve this?\n. Also, the weight for the nvm directory is always substantially higher than any of my other dir\n. @wting - I actually have this same problem.\nFor me, it feels like it is related to nvm, but I can't directly confirm that. I say it's related to nvm because whenever it does reset, the only remaining entry is an nvm entry. \n$ j -v\nautojump release-v21.5.8\nInstalled via brew\nWhat can I do to help resolve this?\n. Also, the weight for the nvm directory is always substantially higher than any of my other dir\n. ",
    "fernandogrd": "It is happening to me:\n$ j --version\nautojump v22.2.2\nI did the standard archlinux installation. The file seems to reset sometimes, when I open a new terminal, but looks very random..\nIf a open a lot of terminals, at the same time, I can see the file becoming empty.\n. It is happening to me:\n$ j --version\nautojump v22.2.2\nI did the standard archlinux installation. The file seems to reset sometimes, when I open a new terminal, but looks very random..\nIf a open a lot of terminals, at the same time, I can see the file becoming empty.\n. ",
    "sxe": "Same happens to me on archlinux version autojump v22.2.2 with bash.\n. Hi lilydjwg, \ni see data loss at my system as well. I make regular backups to the automjump.txt file to be able to restore it but it's happening so often now that it get really annoying. At first I thought there is maybe some kind of database cleanup going on that i did not figure out so far. \n. I will and report back, thx! Give me a couple of days to get some data.\n. @lilydjwg looks really good so far. \nDown below is a log of my backup files.\nThe <- indicates a day where i had data loss. I copied the backup file after it, that's the reason the file size gets bigger again (first column).\nAs you can see after applying your patch it did not happen again. \nAt the very least it got much better but i think it's fixed.\nThanks a lot.\n6469 14. Feb 18:07 autojump.txt.150214\n6672 15. Feb 14:13 autojump.txt.150215\n6672 16. Feb 20:24 autojump.txt.150216\n4565 17. Feb 16:42 autojump.txt.150217 <-\n4586 18. Feb 20:09 autojump.txt.150218\n4541 19. Feb 21:36 autojump.txt.150219 <-\n4351 20. Feb 18:12 autojump.txt.150220 \n4621 21. Feb 22:04 autojump.txt.150221\n6128 22. Feb 18:54 autojump.txt.150222\n5159 23. Feb 19:12 autojump.txt.150223 <-\n5144 24. Feb 20:32 autojump.txt.150224 <-\n6416 25. Feb 21:24 autojump.txt.150225\n6862 26. Feb 21:17 autojump.txt.150226\n7527 27. Feb 22:58 autojump.txt.150227\n5868 28. Feb 17:10 autojump.txt.150228 <-\n4812  1. M\u00e4r 12:21 autojump.txt.150301 <-\n4712  2. M\u00e4r 20:57 autojump.txt.150302 <-\n4958  3. M\u00e4r 20:43 autojump.txt.150303\n 111  4. M\u00e4r 21:54 autojump.txt.150304 <-\n 853  5. M\u00e4r 13:49 autojump.txt.150305\n3248  6. M\u00e4r 18:27 autojump.txt.150306\n8059  7. M\u00e4r 21:06 autojump.txt.150307\n8070  8. M\u00e4r 13:24 autojump.txt.150308\n7093  9. M\u00e4r 13:15 autojump.txt.150309 <-\n5998 10. M\u00e4r 20:43 autojump.txt.150310 <-\n5390 11. M\u00e4r 23:32 autojump.txt.150311 <-\n 664 12. M\u00e4r 22:39 autojump.txt.150312 <-\n8252 13. M\u00e4r 21:36 autojump.txt.150313 -- startet using your build\n10162 14. M\u00e4r 21:37 autojump.txt.150314\n10443 15. M\u00e4r 15:47 autojump.txt.150315\n16860 16. M\u00e4r 14:17 autojump.txt.150316\n16860 16. M\u00e4r 14:17 autojump.txt\n. Same happens to me on archlinux version autojump v22.2.2 with bash.\n. Hi lilydjwg, \ni see data loss at my system as well. I make regular backups to the automjump.txt file to be able to restore it but it's happening so often now that it get really annoying. At first I thought there is maybe some kind of database cleanup going on that i did not figure out so far. \n. I will and report back, thx! Give me a couple of days to get some data.\n. @lilydjwg looks really good so far. \nDown below is a log of my backup files.\nThe <- indicates a day where i had data loss. I copied the backup file after it, that's the reason the file size gets bigger again (first column).\nAs you can see after applying your patch it did not happen again. \nAt the very least it got much better but i think it's fixed.\nThanks a lot.\n6469 14. Feb 18:07 autojump.txt.150214\n6672 15. Feb 14:13 autojump.txt.150215\n6672 16. Feb 20:24 autojump.txt.150216\n4565 17. Feb 16:42 autojump.txt.150217 <-\n4586 18. Feb 20:09 autojump.txt.150218\n4541 19. Feb 21:36 autojump.txt.150219 <-\n4351 20. Feb 18:12 autojump.txt.150220 \n4621 21. Feb 22:04 autojump.txt.150221\n6128 22. Feb 18:54 autojump.txt.150222\n5159 23. Feb 19:12 autojump.txt.150223 <-\n5144 24. Feb 20:32 autojump.txt.150224 <-\n6416 25. Feb 21:24 autojump.txt.150225\n6862 26. Feb 21:17 autojump.txt.150226\n7527 27. Feb 22:58 autojump.txt.150227\n5868 28. Feb 17:10 autojump.txt.150228 <-\n4812  1. M\u00e4r 12:21 autojump.txt.150301 <-\n4712  2. M\u00e4r 20:57 autojump.txt.150302 <-\n4958  3. M\u00e4r 20:43 autojump.txt.150303\n 111  4. M\u00e4r 21:54 autojump.txt.150304 <-\n 853  5. M\u00e4r 13:49 autojump.txt.150305\n3248  6. M\u00e4r 18:27 autojump.txt.150306\n8059  7. M\u00e4r 21:06 autojump.txt.150307\n8070  8. M\u00e4r 13:24 autojump.txt.150308\n7093  9. M\u00e4r 13:15 autojump.txt.150309 <-\n5998 10. M\u00e4r 20:43 autojump.txt.150310 <-\n5390 11. M\u00e4r 23:32 autojump.txt.150311 <-\n 664 12. M\u00e4r 22:39 autojump.txt.150312 <-\n8252 13. M\u00e4r 21:36 autojump.txt.150313 -- startet using your build\n10162 14. M\u00e4r 21:37 autojump.txt.150314\n10443 15. M\u00e4r 15:47 autojump.txt.150315\n16860 16. M\u00e4r 14:17 autojump.txt.150316\n16860 16. M\u00e4r 14:17 autojump.txt\n. ",
    "nengxu": "Copied my comment from #355:\nI'm using Arch Linux. Since autojump v22.2.2, like @sxe and @fernandogrd mentioned, the content of ~/.local/share/autojump/autojump.txt is randomly purged. So the history was totally lost. V22.2.4 still has the same problem.\nThis bug practically makes autojump useless. This is very frustrating to us, long time users of autojump.\n@joelthelion @wting Please look into this issue at your earliest convenience. Thanks.\n. I'm using chruby which may also hook up $PROMPT_COMMAND. \nhttps://github.com/postmodern/chruby\nMay this be the cause of this issue?\n[neng@dolphin:~]$ echo $PROMPT_COMMAND\nprintf \"\\033]0;%s@%s:%s\\007\" \"${USER}\" \"${HOSTNAME%%.*}\" \"${PWD/#$HOME/~}\" ; autojump_add_to_database\n. Sorry, I did not notice that @wting had reopened #208. So this is duplicate.\n. Copied my comment from #355:\nI'm using Arch Linux. Since autojump v22.2.2, like @sxe and @fernandogrd mentioned, the content of ~/.local/share/autojump/autojump.txt is randomly purged. So the history was totally lost. V22.2.4 still has the same problem.\nThis bug practically makes autojump useless. This is very frustrating to us, long time users of autojump.\n@joelthelion @wting Please look into this issue at your earliest convenience. Thanks.\n. I'm using chruby which may also hook up $PROMPT_COMMAND. \nhttps://github.com/postmodern/chruby\nMay this be the cause of this issue?\n[neng@dolphin:~]$ echo $PROMPT_COMMAND\nprintf \"\\033]0;%s@%s:%s\\007\" \"${USER}\" \"${HOSTNAME%%.*}\" \"${PWD/#$HOME/~}\" ; autojump_add_to_database\n. Sorry, I did not notice that @wting had reopened #208. So this is duplicate.\n. ",
    "gonz": "Cool. @spice, @wting: Thanks for working on this one!\n. Cool. @spice, @wting: Thanks for working on this one!\n. ",
    "tenhow": "Wonderful Patch\n. Wonderful Patch\n. ",
    "lkraav": "Hmm, feels like exactly what I was thinking for https://github.com/hut/ranger/issues/91.\n. Hmm, feels like exactly what I was thinking for https://github.com/hut/ranger/issues/91.\n. ",
    "volfyd": "I prefer fasd, and I wrote this to give me a :j command.  You could probably\nadapt it to autojump.\nPut this in .config/ranger/commands.py:\n```\nfrom ranger.api.commands import *\nimport subprocess\nclass j(Command):\n    \"\"\":j\nUses fasd to set the current directory.\n\"\"\"\n\ndef execute(self):\n    directory = subprocess.check_output([\"fasd\", \"-dl1\", self.arg(1)])\n    directory = directory.decode(\"utf-8\", \"ignore\")\n    directory = directory.rstrip('\\n')\n    self.fm.execute_console(\"cd \" + directory)\n\n```\n. I prefer fasd, and I wrote this to give me a :j command.  You could probably\nadapt it to autojump.\nPut this in .config/ranger/commands.py:\n```\nfrom ranger.api.commands import *\nimport subprocess\nclass j(Command):\n    \"\"\":j\nUses fasd to set the current directory.\n\"\"\"\n\ndef execute(self):\n    directory = subprocess.check_output([\"fasd\", \"-dl1\", self.arg(1)])\n    directory = directory.decode(\"utf-8\", \"ignore\")\n    directory = directory.rstrip('\\n')\n    self.fm.execute_console(\"cd \" + directory)\n\n```\n. ",
    "Siosm": "Any update on this one?\nI think the rationale is as follow: Commands executed in scripts don't usually end up in the user bash history. Why should directories used in scripts end up in autojump history?\n. Well, I did a little bit of cleanup in my bashrc/zshrc and I can't reproduce this anymore. I think you're right, must have been my shell config. Sorry for the noise.\n. Thanks @youtux, this looks like valid fix for the last part of the problem.\n. @youtux It's the output folder conventionally used to instruct Makefiles to put all the content at install time in the DESTDIR folder instead of the current /. It depends on where you're storing your PKGBUILD (the file that describe how packages are build for Arch Linux). It could be any one of:\n/home/tim/projects/perso/asp/autojump/repos/community-any/pkg/\n/home/tim/projects/packages/autojump/pkg/\n...\n. @youtux It looks like it would fix it.\n. Any update on this one?\nI think the rationale is as follow: Commands executed in scripts don't usually end up in the user bash history. Why should directories used in scripts end up in autojump history?\n. Well, I did a little bit of cleanup in my bashrc/zshrc and I can't reproduce this anymore. I think you're right, must have been my shell config. Sorry for the noise.\n. Thanks @youtux, this looks like valid fix for the last part of the problem.\n. @youtux It's the output folder conventionally used to instruct Makefiles to put all the content at install time in the DESTDIR folder instead of the current /. It depends on where you're storing your PKGBUILD (the file that describe how packages are build for Arch Linux). It could be any one of:\n/home/tim/projects/perso/asp/autojump/repos/community-any/pkg/\n/home/tim/projects/packages/autojump/pkg/\n...\n. @youtux It looks like it would fix it.\n. ",
    "domenkozar": "mkdir -p Users/admin/.local/share/autojump/ solves it\n. mkdir -p Users/admin/.local/share/autojump/ solves it\n. ",
    "vitorgalvao": "This can be closed, it already happens:\n```\n$ brew info autojump\nautojump: stable 22.3.4 (bottled), HEAD\nShell extension to jump to frequently used directories\nhttps://github.com/wting/autojump\n/usr/local/Cellar/autojump/22.3.4 (23 files, 252K) *\n  Poured from bottle on 2016-08-05 at 20:32:02\nFrom: https://github.com/Homebrew/homebrew-core/blob/master/Formula/autojump.rb\n==> Caveats\nAdd the following line to your ~/.bash_profile or ~/.zshrc file (and remember\nto source the file to update your current session):\n  [[ -s $(brew --prefix)/etc/profile.d/autojump.sh ]] && . $(brew --prefix)/etc/profile.d/autojump.sh\nIf you use the Fish shell then add the following line to your ~/.config/fish/config.fish:\n  [ -f /usr/local/share/autojump/autojump.fish ]; and source /usr/local/share/autojump/autojump.fish\nzsh completion has been installed to:\n  /usr/local/share/zsh/site-functions\n```\n. This can be closed, it already happens:\n```\n$ brew info autojump\nautojump: stable 22.3.4 (bottled), HEAD\nShell extension to jump to frequently used directories\nhttps://github.com/wting/autojump\n/usr/local/Cellar/autojump/22.3.4 (23 files, 252K) *\n  Poured from bottle on 2016-08-05 at 20:32:02\nFrom: https://github.com/Homebrew/homebrew-core/blob/master/Formula/autojump.rb\n==> Caveats\nAdd the following line to your ~/.bash_profile or ~/.zshrc file (and remember\nto source the file to update your current session):\n  [[ -s $(brew --prefix)/etc/profile.d/autojump.sh ]] && . $(brew --prefix)/etc/profile.d/autojump.sh\nIf you use the Fish shell then add the following line to your ~/.config/fish/config.fish:\n  [ -f /usr/local/share/autojump/autojump.fish ]; and source /usr/local/share/autojump/autojump.fish\nzsh completion has been installed to:\n  /usr/local/share/zsh/site-functions\n```\n. ",
    "joehoyle": "a. ma. zing!\n. a. ma. zing!\n. ",
    "cipri-tom": "Well, it doesn't work as you described it. So j wor<tab> gives j 'wor__. Notice there is an open quotation mark. Pressing <tab> a second time closes the quotation mark: j 'wor__' but doesn't offer any choices. Then no matter how many times I press tab it just adds spaces to the end\n. yes, it jumps to /home/cipri/Documents/work, as it's supposed to. just the autocompletion has faults.\n. It would be nice if support for this was added.\n. Well, it doesn't work as you described it. So j wor<tab> gives j 'wor__. Notice there is an open quotation mark. Pressing <tab> a second time closes the quotation mark: j 'wor__' but doesn't offer any choices. Then no matter how many times I press tab it just adds spaces to the end\n. yes, it jumps to /home/cipri/Documents/work, as it's supposed to. just the autocompletion has faults.\n. It would be nice if support for this was added.\n. ",
    "larsyencken": "I've had this problem a little while too. I just checked older versions of autojump, I can confirm that tab completion works correctly as of v21.4.2 in Homebrew but that it fails as described above for v21.6.9.\n. I've had this problem a little while too. I just checked older versions of autojump, I can confirm that tab completion works correctly as of v21.4.2 in Homebrew but that it fails as described above for v21.6.9.\n. ",
    "fxposter": "v21.5.8 works, v21.6.8 doesn't. I've tried to install both via homebrew. v21.6.9 does not fix the issue.\n. v21.5.8 works, v21.6.8 doesn't. I've tried to install both via homebrew. v21.6.9 does not fix the issue.\n. ",
    "mpacer": "This still seems to be an issue?. This still seems to be an issue?. ",
    "ubuntu0": "I got the same thing as you.\nSystem:ubuntu 12.04\nautojump: release-v21.7.1 installed from the source code\n. Hi, serre-lab, commit version 0b25bef134  is OK. I tested and confirmed it\n. I got the same thing as you.\nSystem:ubuntu 12.04\nautojump: release-v21.7.1 installed from the source code\n. Hi, serre-lab, commit version 0b25bef134  is OK. I tested and confirmed it\n. ",
    "serre-lab": "oh, perfect, will try it today and will let you know! thank you very much!\nOn Thursday, October 17, 2013, ubuntu0 wrote:\n\nHi, serre-lab, commit version 0b25befhttps://github.com/joelthelion/autojump/commit/0b25bef134is OK. I tested and confirmed it\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joelthelion/autojump/issues/229#issuecomment-26490146\n.\n\n\nYoussef Barhomi, MSc, MEng.\nResearch Engineer at the CLPS department\nBrown University\nT: +1 (617) 797 9929  | GMT -5:00\n. Hi, it works, but what I noticed was that it was my fault:\nI made an alias to autojump in my ~/.bash_aliases\nbash\nalias j='autojump'\nand apparenlty, when I type \"j\" then few letters of the directory, it prints it then do not go to it. I guess I was confliction with another command line somehow. Deleting the alias made everything work like a charm.\nAnyway, thank you, this tool is amazing!!! \n. oh, perfect, will try it today and will let you know! thank you very much!\nOn Thursday, October 17, 2013, ubuntu0 wrote:\n\nHi, serre-lab, commit version 0b25befhttps://github.com/joelthelion/autojump/commit/0b25bef134is OK. I tested and confirmed it\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joelthelion/autojump/issues/229#issuecomment-26490146\n.\n\n\nYoussef Barhomi, MSc, MEng.\nResearch Engineer at the CLPS department\nBrown University\nT: +1 (617) 797 9929  | GMT -5:00\n. Hi, it works, but what I noticed was that it was my fault:\nI made an alias to autojump in my ~/.bash_aliases\nbash\nalias j='autojump'\nand apparenlty, when I type \"j\" then few letters of the directory, it prints it then do not go to it. I guess I was confliction with another command line somehow. Deleting the alias made everything work like a charm.\nAnyway, thank you, this tool is amazing!!! \n. ",
    "pracj3am": "+1\n. +1\n. ",
    "hossbeast": "good idea ! My only suggestion would be to consider mentioning the alias in the front-facing docs (readme.md), I think it makes a significant addition to usability\n. good idea ! My only suggestion would be to consider mentioning the alias in the front-facing docs (readme.md), I think it makes a significant addition to usability\n. ",
    "Sandmania": "I have also just upgraded to the latest OSX. Aftrer quickly testing autojump it seems to work fine. What I might have done differently / more than tpaviot, I also installed Xcode command line tools.\nxcode-select --install\nMy .bash_profile looks like\nPATH=\"/usr/local/bin:$PATH\"\n[[ -s `brew --prefix`/etc/autojump.sh ]] && . `brew --prefix`/etc/autojump.sh\n. I have also just upgraded to the latest OSX. Aftrer quickly testing autojump it seems to work fine. What I might have done differently / more than tpaviot, I also installed Xcode command line tools.\nxcode-select --install\nMy .bash_profile looks like\nPATH=\"/usr/local/bin:$PATH\"\n[[ -s `brew --prefix`/etc/autojump.sh ]] && . `brew --prefix`/etc/autojump.sh\n. ",
    "bflad": "Works fine for me on fresh 10.9 installation with Xcode command line tools installed as well.\n. Works fine for me on fresh 10.9 installation with Xcode command line tools installed as well.\n. ",
    "tpaviot": "Ok, it seems that is issue is the same as #58. I fxed it by explicitlely setting  PROMPT_COMMAND to \"update_terminal_cwd \" in my .bash_profile although I absolutely don't know why it failed/why it works now. Weird.\n. Ok, it seems that is issue is the same as #58. I fxed it by explicitlely setting  PROMPT_COMMAND to \"update_terminal_cwd \" in my .bash_profile although I absolutely don't know why it failed/why it works now. Weird.\n. ",
    "SchwarzM": "+1\n. +1\n. ",
    "ratheesh": "This problem got fixed in version v21.7.1, when I replaced\ncomplete -x -c j -a '(autojump --bash --complete (commandline -t))' \nwith\ncomplete -x -c j -a '(autojump --complete (commandline -t))'\nin ~/.autojump/etc/profile.d/autojump.fish\n. Even I am looking for that functionality. I am forced to go back to previous version due to this. It would be nice to have configurable parameter to get back partial completion when \n$ j something \nis pressed.\nThanks\n. This problem got fixed in version v21.7.1, when I replaced\ncomplete -x -c j -a '(autojump --bash --complete (commandline -t))' \nwith\ncomplete -x -c j -a '(autojump --complete (commandline -t))'\nin ~/.autojump/etc/profile.d/autojump.fish\n. Even I am looking for that functionality. I am forced to go back to previous version due to this. It would be nice to have configurable parameter to get back partial completion when \n$ j something \nis pressed.\nThanks\n. ",
    "shinokada": "I uninstalled the brew version. brew uninstall autojump and used manual installation and it works.\nGrab a copy of autojump:\ngit clone git://github.com/joelthelion/autojump.git\nRun the installation script:\n```\ncd autojump\n./install.sh [ --local ]\nPlease add the line to ~/.zshrc :\n[[ -s /etc/profile.d/autojump.zsh ]] && . /etc/profile.d/autojump.zsh\nYou need to run 'source ~/.zshrc' before you can start using autojump. To remove autojump, run './uninstall.sh'\n```\n. I uninstalled the brew version. brew uninstall autojump and used manual installation and it works.\nGrab a copy of autojump:\ngit clone git://github.com/joelthelion/autojump.git\nRun the installation script:\n```\ncd autojump\n./install.sh [ --local ]\nPlease add the line to ~/.zshrc :\n[[ -s /etc/profile.d/autojump.zsh ]] && . /etc/profile.d/autojump.zsh\nYou need to run 'source ~/.zshrc' before you can start using autojump. To remove autojump, run './uninstall.sh'\n```\n. ",
    "ilkka": "I'm not well versed in Homebrew formulae but looking at autojump's install.py it seems the formula just doesn't install Python modules like it should when installing with the --HEAD or --devel flag.\n. Okay, I submitted a pull request: https://github.com/Homebrew/homebrew/pull/25729\nThis solved the immediate problem but highlighted another, I'll open another issue.\n. Okay, apparently the issue was related to me having an old autojump db from the previous 21.6.9 installation. After manually deleting autojump's xdg data dir, completion works.\n. I think it was in $HOME/.config somewhere but I don't remember and can't find the files now either, sorry.\n. This also causes the following behavior when trying to complete a dir that does not exist in the db, by typing j w and then repeatedly hitting tab:\n$ j w__1__. . . . . .\nThat is, the first tab completes up to and including the first period and the space thereafter, then following tabs add a period and a space.\n. I'm not well versed in Homebrew formulae but looking at autojump's install.py it seems the formula just doesn't install Python modules like it should when installing with the --HEAD or --devel flag.\n. Okay, I submitted a pull request: https://github.com/Homebrew/homebrew/pull/25729\nThis solved the immediate problem but highlighted another, I'll open another issue.\n. Okay, apparently the issue was related to me having an old autojump db from the previous 21.6.9 installation. After manually deleting autojump's xdg data dir, completion works.\n. I think it was in $HOME/.config somewhere but I don't remember and can't find the files now either, sorry.\n. This also causes the following behavior when trying to complete a dir that does not exist in the db, by typing j w and then repeatedly hitting tab:\n$ j w__1__. . . . . .\nThat is, the first tab completes up to and including the first period and the space thereafter, then following tabs add a period and a space.\n. ",
    "tuananh": "@ilkka could you tell me where is autojump's xdg data dir ?\n. I still have this problem\necho $SHELL return /bin/bash\nwhich j returns nothing\ndeclare -f j returns the function j\nCan someone help me out ?\n. @ilkka could you tell me where is autojump's xdg data dir ?\n. I still have this problem\necho $SHELL return /bin/bash\nwhich j returns nothing\ndeclare -f j returns the function j\nCan someone help me out ?\n. ",
    "mzcu": "Yes, same outcome (Python 2.7.3,  GNU bash 3.2.48(1)-release, i586-suse-linux-gnu).\n. Okay. I'm closing this since nobody else has complained.\n. Yes, same outcome (Python 2.7.3,  GNU bash 3.2.48(1)-release, i586-suse-linux-gnu).\n. Okay. I'm closing this since nobody else has complained.\n. ",
    "mdlawson": "I'll fix everything else up soon. I'll add custom install and error logging back in as well. \nSorry for the errors/sloppy formatting. \n. Should be OK now. Not sure how strict to be about the 80 char line length limits, but its probably best for someone more familiar with python style to cut things off where appropriate. \n. I haven't been using windows for a while, but I'll have a look at autojump on windows again soon and see what's going wrong.\nJust off the top of my head, could you test stuff out in a normal command prompt? Last time I checked clinks support for powershell was super iffy with the way it gets the current directory, which autojump needs. \n. I'd hazard this is something to do with how tabs and other presumably escaped characters are showing up oddly in your terminal. I've just tested a fresh clone of autojump on windows 8 (shouldn't be any different) and my output is displaying without any of the added b characters on strings and \\ts. ~~This looks like something to do with python 2 vs 3, I've only really tested in 3 assuming 2 would still work. I'll do some testing.~~ Scratch that, working fine with both versions for me. @wting Any idea why the byte string literals would show up in the output like that? \n. I'm guessing its something to do with https://github.com/joelthelion/autojump/blob/master/bin/autojump_utils.py#L35\nand sys.getfilesystemencoding(). For me the output of that is mbcs, @Kazark is that any different for you?\nLooks like this might be https://github.com/joelthelion/autojump/issues/279 again.\n. I'll fix everything else up soon. I'll add custom install and error logging back in as well. \nSorry for the errors/sloppy formatting. \n. Should be OK now. Not sure how strict to be about the 80 char line length limits, but its probably best for someone more familiar with python style to cut things off where appropriate. \n. I haven't been using windows for a while, but I'll have a look at autojump on windows again soon and see what's going wrong.\nJust off the top of my head, could you test stuff out in a normal command prompt? Last time I checked clinks support for powershell was super iffy with the way it gets the current directory, which autojump needs. \n. I'd hazard this is something to do with how tabs and other presumably escaped characters are showing up oddly in your terminal. I've just tested a fresh clone of autojump on windows 8 (shouldn't be any different) and my output is displaying without any of the added b characters on strings and \\ts. ~~This looks like something to do with python 2 vs 3, I've only really tested in 3 assuming 2 would still work. I'll do some testing.~~ Scratch that, working fine with both versions for me. @wting Any idea why the byte string literals would show up in the output like that? \n. I'm guessing its something to do with https://github.com/joelthelion/autojump/blob/master/bin/autojump_utils.py#L35\nand sys.getfilesystemencoding(). For me the output of that is mbcs, @Kazark is that any different for you?\nLooks like this might be https://github.com/joelthelion/autojump/issues/279 again.\n. ",
    "bgvaughan": "Iadagro is correct. In /etc/profile.d/autojump.sh \n```\nsource autojump on BASH or ZSH depending on the shell\nshell=echo ${SHELL} | awk -F/ '{ print $NF }'\n```\nSo plainly, the assumption is that SHELL is set to the current shell. However, SHELL is actually set by reading /etc/passwd, so it indicates the user's default shell, not the shell that happens to be in use at any given time.\nFrom this discussion on stackoverflow I suggest determining whether ZSH or BASH are in use by checking whether the environment variables ZSH_NAME or BASH are set.\n. Iadagro is correct. In /etc/profile.d/autojump.sh \n```\nsource autojump on BASH or ZSH depending on the shell\nshell=echo ${SHELL} | awk -F/ '{ print $NF }'\n```\nSo plainly, the assumption is that SHELL is set to the current shell. However, SHELL is actually set by reading /etc/passwd, so it indicates the user's default shell, not the shell that happens to be in use at any given time.\nFrom this discussion on stackoverflow I suggest determining whether ZSH or BASH are in use by checking whether the environment variables ZSH_NAME or BASH are set.\n. ",
    "saamalik": "Just ran into this issue on ArchLinux as well. Best workaround for the timebeing? Should I just copy the autojump.bash to /etc/bash_completion.d?\n. I fixed the issue by adding the following line at the end of /etc/profile.d/autojump.bash:\nexport -f autojump_add_to_database j jc jo jco\nI might be missing other functions, but at leas the above works.\n. Thanks @tpavlic . Created saamalik_autojump.sh\nbash\nexport PROMPT_COMMAND\nexport -f autojump_add_to_database j jc jo jco\nIdeally PROMPT_COMMAND should also be exported in autocommand.sh, but it is not.\n. @tpavlic btw, autojump_saamalik.sh sourced before autojump.sh. Am I missing some bash config option? For the time being renamed my file to saamalik_autojump.sh. Thanks again.\n. $ echo autojump*.sh\nautojump-saamalik.sh autojump.sh\n$ locale\nLANG=en_US.utf8\nLC_CTYPE=\"en_US.utf8\"\nLC_NUMERIC=en_US.utf8\nLC_TIME=en_US.utf8\nLC_COLLATE=\"en_US.utf8\"\nLC_MONETARY=en_US.utf8\nLC_MESSAGES=\"en_US.utf8\"\nLC_PAPER=en_US.utf8\nLC_NAME=\"en_US.utf8\"\nLC_ADDRESS=\"en_US.utf8\"\nLC_TELEPHONE=\"en_US.utf8\"\nLC_MEASUREMENT=en_US.utf8\nLC_IDENTIFICATION=\"en_US.utf8\"\nLC_ALL=\nNot that it makes a huge difference, but I still want to get to the bottom of why my sort order is different. I'll keep you updated. Thanks =)\n. @tpavlic hmm, I had tried underscore as well, but it still didn't fix the issue. Let me try again:\n$ echo autojump*.sh\nautojump_saamalik.sh autojump-saamalik.sh autojump.sh\nNope. Any other ideas? =) BTW thanks for the man ascii, I was looking for this chart.\n. @tpavlic Hmm -- my bash is the same version. Anyway, thanks for all your help. If I find out the root cause, I'll be sure to post here.\n. Just ran into this issue on ArchLinux as well. Best workaround for the timebeing? Should I just copy the autojump.bash to /etc/bash_completion.d?\n. I fixed the issue by adding the following line at the end of /etc/profile.d/autojump.bash:\nexport -f autojump_add_to_database j jc jo jco\nI might be missing other functions, but at leas the above works.\n. Thanks @tpavlic . Created saamalik_autojump.sh\nbash\nexport PROMPT_COMMAND\nexport -f autojump_add_to_database j jc jo jco\nIdeally PROMPT_COMMAND should also be exported in autocommand.sh, but it is not.\n. @tpavlic btw, autojump_saamalik.sh sourced before autojump.sh. Am I missing some bash config option? For the time being renamed my file to saamalik_autojump.sh. Thanks again.\n. $ echo autojump*.sh\nautojump-saamalik.sh autojump.sh\n$ locale\nLANG=en_US.utf8\nLC_CTYPE=\"en_US.utf8\"\nLC_NUMERIC=en_US.utf8\nLC_TIME=en_US.utf8\nLC_COLLATE=\"en_US.utf8\"\nLC_MONETARY=en_US.utf8\nLC_MESSAGES=\"en_US.utf8\"\nLC_PAPER=en_US.utf8\nLC_NAME=\"en_US.utf8\"\nLC_ADDRESS=\"en_US.utf8\"\nLC_TELEPHONE=\"en_US.utf8\"\nLC_MEASUREMENT=en_US.utf8\nLC_IDENTIFICATION=\"en_US.utf8\"\nLC_ALL=\nNot that it makes a huge difference, but I still want to get to the bottom of why my sort order is different. I'll keep you updated. Thanks =)\n. @tpavlic hmm, I had tried underscore as well, but it still didn't fix the issue. Let me try again:\n$ echo autojump*.sh\nautojump_saamalik.sh autojump-saamalik.sh autojump.sh\nNope. Any other ideas? =) BTW thanks for the man ascii, I was looking for this chart.\n. @tpavlic Hmm -- my bash is the same version. Anyway, thanks for all your help. If I find out the root cause, I'll be sure to post here.\n. ",
    "tpavlic": "@saamalik - Using export is a good idea, but I would recommend putting it in your own local user ~/.bash_profile. The effect should be the same. Alternatively, you could create your own \"autojump_saamalik.sh\" in /etc/profile.d that, by nature of alphabetical ordering, will be sourced after autojump. That way your changes don't induce the creation of pacnew/pacsave files (and/or blow your changes away) on the next pacman update.\nFor now, I'm going to keep the symlink into my completion.d directory, but I think your solution is very good.\n. @saamalik - That's weird. As you can see in /etc/profile, the profile.d files are just sourced by using a for:\nfor profile in /etc/profile.d/*.sh; do\n            test -r \"$profile\" && . \"$profile\"\n    done\nSo if you went into /etc/profile.d and typed:\necho autojump*.sh\nthen they should source in the order you see. I suppose your LOCALE settings (like LC_COLLATE) might change how things are sorted. I wouldn't worry too much about it -- I think making the file name start with an \"s\" seems just as reasonable as adding something to the end of it.\n. Ooops! Didn't mean to close.\n. @saamalik - The hyphen gets sorted before the period. That's why it happens. \n. @saamalik - Using an underscore (_) fixes the problem. That's why I didn't have that problem. I used an underscore and not a hyphen, and an underscore sorts after a period. Mystery solved.\nDo a \nman ascii\nI think hyphen, period, and underscore will come in that order.\n. @saamalik - Have you tried bash --version? I'm 4.2.45(2)-release. According to the bash man page:\n\nAfter word splitting, unless the -f option has been set, bash scans each word for the characters *, ?, and [.  If one of these characters appears, then the word is regarded as a pattern, and replaced with  an alphabetically sorted list of file names matching the pattern.\n\nSo \"alphabetically sorted\" should apply here. Maybe there is an shopt option that governs the behavior of sorting non-alphanumeric characters, but I didn't see one after a quick glance. It's still a mystery! Bug?\n. @saamalik - Using export is a good idea, but I would recommend putting it in your own local user ~/.bash_profile. The effect should be the same. Alternatively, you could create your own \"autojump_saamalik.sh\" in /etc/profile.d that, by nature of alphabetical ordering, will be sourced after autojump. That way your changes don't induce the creation of pacnew/pacsave files (and/or blow your changes away) on the next pacman update.\nFor now, I'm going to keep the symlink into my completion.d directory, but I think your solution is very good.\n. @saamalik - That's weird. As you can see in /etc/profile, the profile.d files are just sourced by using a for:\nfor profile in /etc/profile.d/*.sh; do\n            test -r \"$profile\" && . \"$profile\"\n    done\nSo if you went into /etc/profile.d and typed:\necho autojump*.sh\nthen they should source in the order you see. I suppose your LOCALE settings (like LC_COLLATE) might change how things are sorted. I wouldn't worry too much about it -- I think making the file name start with an \"s\" seems just as reasonable as adding something to the end of it.\n. Ooops! Didn't mean to close.\n. @saamalik - The hyphen gets sorted before the period. That's why it happens. \n. @saamalik - Using an underscore (_) fixes the problem. That's why I didn't have that problem. I used an underscore and not a hyphen, and an underscore sorts after a period. Mystery solved.\nDo a \nman ascii\nI think hyphen, period, and underscore will come in that order.\n. @saamalik - Have you tried bash --version? I'm 4.2.45(2)-release. According to the bash man page:\n\nAfter word splitting, unless the -f option has been set, bash scans each word for the characters *, ?, and [.  If one of these characters appears, then the word is regarded as a pattern, and replaced with  an alphabetically sorted list of file names matching the pattern.\n\nSo \"alphabetically sorted\" should apply here. Maybe there is an shopt option that governs the behavior of sorting non-alphanumeric characters, but I didn't see one after a quick glance. It's still a mystery! Bug?\n. ",
    "aldanor": "Seems the same as #235 \n. Seems the same as #235 \n. ",
    "jsharf": "It appears in $XDG_DATA_HOME/autojump.txt (or, if you haven't set that, in ~/.local/share/autojump) there's a number that isn't a valid floating point number.\nIf you're on a mac or windows, this file path will vary. On macs, it should be ~/library/autojump/autojump.txt, and Windows should be C:\\Users{user name}\\AppData\\autojump\\autojump.txt.\nAs for what caused this, I'm not sure. But you can fix this by opening the autojump.txt file in your data path and changing the line which has \"14.14210.0\" to \"14.14210\". Do the same for any lines which contain non-floating point numbers on the LHS of the tab. The format of the file should be:\nfloating-point-num\\tfilepath\nEx:\n10.0\\t/home/user\nAs a fix for this, there are a number of options. The program could ignore entries which are invalid, or attempt to have a more robust form of parsing that chops off extra decimals (and subsequent numbers). It's interesting that this happened in the first place, did you modify your autojump data file?\n. It appears in $XDG_DATA_HOME/autojump.txt (or, if you haven't set that, in ~/.local/share/autojump) there's a number that isn't a valid floating point number.\nIf you're on a mac or windows, this file path will vary. On macs, it should be ~/library/autojump/autojump.txt, and Windows should be C:\\Users{user name}\\AppData\\autojump\\autojump.txt.\nAs for what caused this, I'm not sure. But you can fix this by opening the autojump.txt file in your data path and changing the line which has \"14.14210.0\" to \"14.14210\". Do the same for any lines which contain non-floating point numbers on the LHS of the tab. The format of the file should be:\nfloating-point-num\\tfilepath\nEx:\n10.0\\t/home/user\nAs a fix for this, there are a number of options. The program could ignore entries which are invalid, or attempt to have a more robust form of parsing that chops off extra decimals (and subsequent numbers). It's interesting that this happened in the first place, did you modify your autojump data file?\n. ",
    "halilim": "Same problem here, without the float error. In my case ~/.local/share/autojump/data.tmp actually doesn't exist. Should I manually create it?\nFor what it's worth, I've come across this while I was running\nfor D in */; do echo \"---> ${D}\\n\" && cd \"${D}\" && git pull && cd ..; done\nin a folder (which enters each sub-folder, git pulls and gets out).\n. Traceback (most recent call last):\n  File \"/home/halil/.autojump/bin/autojump\", line 385, in <module>\n    sys.exit(main(parse_arguments()))\n  File \"/home/halil/.autojump/bin/autojump\", line 342, in main\n    save(config, first(add_path(load(config), args.add)))\n  File \"/home/halil/.autojump/bin/autojump_data.py\", line 137, in save\n    move_file(config['tmp_path'], config['data_path'])\n  File \"/home/halil/.autojump/bin/autojump_utils.py\", line 134, in move_file\n    shutil.move(src, dst)\n  File \"/usr/lib/python2.7/shutil.py\", line 301, in move\n    copy2(src, real_dst)\n  File \"/usr/lib/python2.7/shutil.py\", line 130, in copy2\n    copyfile(src, dst)\n  File \"/usr/lib/python2.7/shutil.py\", line 82, in copyfile\n    with open(src, 'rb') as fsrc:\nIOError: [Errno 2] No such file or directory: '/home/halil/.local/share/autojump/data.tmp'\n. @wting quick fix sounds good. If we are sure enough that this is a result of cd spam, I guess most of the times users wouldn't want autojump to remember a whole bunch of automatically called folders in such a situation anyway.\n. @wting indeed, it's fixed, thanks! :+1: \n. FYI: I've started seeing this error in Ubuntu x64 13.10 and the reason was common-aliases plugin of oh-my-zsh (which I've enabled recently): https://github.com/robbyrussell/oh-my-zsh/issues/2989\n. Same problem here, without the float error. In my case ~/.local/share/autojump/data.tmp actually doesn't exist. Should I manually create it?\nFor what it's worth, I've come across this while I was running\nfor D in */; do echo \"---> ${D}\\n\" && cd \"${D}\" && git pull && cd ..; done\nin a folder (which enters each sub-folder, git pulls and gets out).\n. Traceback (most recent call last):\n  File \"/home/halil/.autojump/bin/autojump\", line 385, in <module>\n    sys.exit(main(parse_arguments()))\n  File \"/home/halil/.autojump/bin/autojump\", line 342, in main\n    save(config, first(add_path(load(config), args.add)))\n  File \"/home/halil/.autojump/bin/autojump_data.py\", line 137, in save\n    move_file(config['tmp_path'], config['data_path'])\n  File \"/home/halil/.autojump/bin/autojump_utils.py\", line 134, in move_file\n    shutil.move(src, dst)\n  File \"/usr/lib/python2.7/shutil.py\", line 301, in move\n    copy2(src, real_dst)\n  File \"/usr/lib/python2.7/shutil.py\", line 130, in copy2\n    copyfile(src, dst)\n  File \"/usr/lib/python2.7/shutil.py\", line 82, in copyfile\n    with open(src, 'rb') as fsrc:\nIOError: [Errno 2] No such file or directory: '/home/halil/.local/share/autojump/data.tmp'\n. @wting quick fix sounds good. If we are sure enough that this is a result of cd spam, I guess most of the times users wouldn't want autojump to remember a whole bunch of automatically called folders in such a situation anyway.\n. @wting indeed, it's fixed, thanks! :+1: \n. FYI: I've started seeing this error in Ubuntu x64 13.10 and the reason was common-aliases plugin of oh-my-zsh (which I've enabled recently): https://github.com/robbyrussell/oh-my-zsh/issues/2989\n. ",
    "olaszfiu": "Using:\n- Python 2.7.5\n- Fedora 19\n. hi, any chance you could look into this ? thanks !\n. Using:\n- Python 2.7.5\n- Fedora 19\n. hi, any chance you could look into this ? thanks !\n. ",
    "dearmark": "I delete \n/home/user/.local/share/autojump/autojump.txt\n/home/user/.local/share/autojump/autojump.txt.bak\nand it work in Ubuntu 12.04 .\n. I delete \n/home/user/.local/share/autojump/autojump.txt\n/home/user/.local/share/autojump/autojump.txt.bak\nand it work in Ubuntu 12.04 .\n. ",
    "bariscicek": "autojump.txt\nNot sure how that ^@ characters landed there, but I had a same problem, so reopenning it.. autojump.txt\nNot sure how that ^@ characters landed there, but I had a same problem, so reopenning it.. ",
    "Honghe": "Thanks, it works. \n. Thanks! Forgot when added the line to ~/.bashrc after sudo apt-get install\nautojump\nOn Fri, Mar 7, 2014 at 12:07 AM, William Ting notifications@github.comwrote:\n\nYou have a leftover source line in your ~/.bashrc that needs to be\nremoved.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joelthelion/autojump/issues/268#issuecomment-36903407\n.\n\n\nHonghe\n. Thanks, it works. \n. Thanks! Forgot when added the line to ~/.bashrc after sudo apt-get install\nautojump\nOn Fri, Mar 7, 2014 at 12:07 AM, William Ting notifications@github.comwrote:\n\nYou have a leftover source line in your ~/.bashrc that needs to be\nremoved.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/joelthelion/autojump/issues/268#issuecomment-36903407\n.\n\n\nHonghe\n. ",
    "dphilpot": "Hi wting,\ni've reinstalled Brew, zsh and autojump. I don't receive this error when opening a new zsh shell anymore.\nStill having this error when i execute a \"shell build\" command in sublime text.\nThe Build file contains the following\n{\n    \"shell_cmd\": \"rake rspec\"\n}\nThe error is exactly the same ... \n. Yes i've tryed it with a fresh installation of oh my zsh same problem.\n. Hi wting,\ni've reinstalled Brew, zsh and autojump. I don't receive this error when opening a new zsh shell anymore.\nStill having this error when i execute a \"shell build\" command in sublime text.\nThe Build file contains the following\n{\n    \"shell_cmd\": \"rake rspec\"\n}\nThe error is exactly the same ... \n. Yes i've tryed it with a fresh installation of oh my zsh same problem.\n. ",
    "erbridge": "I'm getting this too using oh-my-zsh on ArchLinux.\n. This is showing up in my .xsession-errors, from /etc/profile.d/autojump.zsh not on the terminal when starting zsh (sorry - not the same symptoms).\nAlso, ArchLinux is on v21.6.9 still, and that code does seem to have changed in v21.7.1. I've flagged it to be updated.\n. Yup, that is where ArchLinux installs it. See https://www.archlinux.org/packages/community/any/autojump/. It looks like that's right, though, looking at install.py (https://github.com/joelthelion/autojump/blob/master/install.py#L170).\nI'll try later those commands later on. Different OS at work.\n. None of sh -i, bash -i, sh -c true, or bash -c true cause the error on my machine, when run in the terminal.\n. With the ArchLinux package:\n$ ls -l /etc/profile.d/autojump*\n-rw-r--r-- 1 root root 2878 Jul 14  2013 /etc/profile.d/autojump.bash\n-rw-r--r-- 1 root root  637 Jul 14  2013 /etc/profile.d/autojump.sh\n-rw-r--r-- 1 root root 2282 Jul 14  2013 /etc/profile.d/autojump.zsh\nWith master, I now get /etc/profile.d/autojump.zsh: line 39: typeset: -U: invalid option instead in .xsession-errors.\nI agree that autojump's files belong elsewhere, but @wting seems to disagree (see #297). Of course, moving them out of /etc/profile.d fixed the issue.\n. Possibly related to #256?\n. Note: I've since realized that this pull request is probably incomplete. I haven't touched uninstall.py, for instance.\n. This is to do with the different nature of strings in python 3. I'm not sure switching away from testify would help. I ran the file manually anyway (since I couldn't use testify).\n. I'm getting this too using oh-my-zsh on ArchLinux.\n. This is showing up in my .xsession-errors, from /etc/profile.d/autojump.zsh not on the terminal when starting zsh (sorry - not the same symptoms).\nAlso, ArchLinux is on v21.6.9 still, and that code does seem to have changed in v21.7.1. I've flagged it to be updated.\n. Yup, that is where ArchLinux installs it. See https://www.archlinux.org/packages/community/any/autojump/. It looks like that's right, though, looking at install.py (https://github.com/joelthelion/autojump/blob/master/install.py#L170).\nI'll try later those commands later on. Different OS at work.\n. None of sh -i, bash -i, sh -c true, or bash -c true cause the error on my machine, when run in the terminal.\n. With the ArchLinux package:\n$ ls -l /etc/profile.d/autojump*\n-rw-r--r-- 1 root root 2878 Jul 14  2013 /etc/profile.d/autojump.bash\n-rw-r--r-- 1 root root  637 Jul 14  2013 /etc/profile.d/autojump.sh\n-rw-r--r-- 1 root root 2282 Jul 14  2013 /etc/profile.d/autojump.zsh\nWith master, I now get /etc/profile.d/autojump.zsh: line 39: typeset: -U: invalid option instead in .xsession-errors.\nI agree that autojump's files belong elsewhere, but @wting seems to disagree (see #297). Of course, moving them out of /etc/profile.d fixed the issue.\n. Possibly related to #256?\n. Note: I've since realized that this pull request is probably incomplete. I haven't touched uninstall.py, for instance.\n. This is to do with the different nature of strings in python 3. I'm not sure switching away from testify would help. I ran the file manually anyway (since I couldn't use testify).\n. ",
    "eklenske": "That would definitely be great!\nIt would feel completely natural if j <Tab> would give me the highest ranked directories, and if  j <Enter> would directly jump to the highest ranked directory.\n. That would definitely be great!\nIt would feel completely natural if j <Tab> would give me the highest ranked directories, and if  j <Enter> would directly jump to the highest ranked directory.\n. ",
    "dummys": "same error here :/\n. same error here :/\n. ",
    "denniskempin": "I have just signed up for a github account to post this comment, but don't have time to figure out how to send in a patch. Change line 405 in autojump to:\nmap(lambda e: e.path, find_matches(entries, needles)),\nthats how I fixed it for me.\n. I have just signed up for a github account to post this comment, but don't have time to figure out how to send in a patch. Change line 405 in autojump to:\nmap(lambda e: e.path, find_matches(entries, needles)),\nthats how I fixed it for me.\n. ",
    "smblott-github": "Here's more info.\nI have a directory which matches the pattern intent. \nOn previous versions, autojump intent__ (an initial, partial zsh completion) outputs the name of the matching directory.  On GitHub/Master, it produces ..\n. Problem starts somewhere between here:\nhttps://github.com/joelthelion/autojump/commit/9112dc97d99d5de7d47a6b830e5f379f94a42efc\nand here..\nhttps://github.com/joelthelion/autojump/commit/b695cc3f7da0192ca69c429b700af46d03e1cfa1\n. @wting . Your j -s won't trigger the problem.\nThis is not specifically a zsh problem, it's an autojump problem, that just happens to be triggered by the input generated by the type of argument generated by a zsh partial completion.\nautojump inte__ produces ., whereas j -s | grep inte produces lots of matches.\nThe issue is addressed by PR #273.\n. Yup.  I see the same thing.\n. This might be related to #271 and #273.\n. Here's more info.\nI have a directory which matches the pattern intent. \nOn previous versions, autojump intent__ (an initial, partial zsh completion) outputs the name of the matching directory.  On GitHub/Master, it produces ..\n. Problem starts somewhere between here:\nhttps://github.com/joelthelion/autojump/commit/9112dc97d99d5de7d47a6b830e5f379f94a42efc\nand here..\nhttps://github.com/joelthelion/autojump/commit/b695cc3f7da0192ca69c429b700af46d03e1cfa1\n. @wting . Your j -s won't trigger the problem.\nThis is not specifically a zsh problem, it's an autojump problem, that just happens to be triggered by the input generated by the type of argument generated by a zsh partial completion.\nautojump inte__ produces ., whereas j -s | grep inte produces lots of matches.\nThe issue is addressed by PR #273.\n. Yup.  I see the same thing.\n. This might be related to #271 and #273.\n. ",
    "simonweil": "+1\n. Using brew on Mac you get the post install message.\nIs it good enough?\n. +1\n. Using brew on Mac you get the post install message.\nIs it good enough?\n. ",
    "TomasTomecek": "Thanks, will update it in Fedora.\n. bash and zsh completions works just fine for me with \"autojump-21.7.1\" (care to do a release again please? 5 months is quite some time)\nI have also packaged git master (@5538cf70 by that time) for Fedora some time ago and this one works too.\nFeel free to close this bug then.\n. @wting great! looking forward\n. How will this work in distriutions? And especially in packaging systems where there is no support for displaying messages when your package is successfully installed. I think that README should contain instructions for installation (the post install message you are talking about).\n. In Fedora, user doesn't need to do anything, because bash (and I'm not sure if zsh too) is sourcing /etc/profile and part of that script is this\nbash\nfor i in /etc/profile.d/*.sh ; do\n  . \"$i\" >/dev/null\ndone\nSince autojump is installed globally it lives in /etc/profile.d/autojump.sh and therefore it gets sourced as soon as you spawn new shell.\nSo you get working autojump out of the box.\nI'm not sure about other distros/shells.\n. Hi, autojump comaintainer in Fedora here. Tried to reproduce the issue but didn't succeed. Looking at version of autojump in Fedora 23, it's quite old so I updated it to latest upstream release:\nhttps://bodhi.fedoraproject.org/updates/autojump-22.3.0-1.fc23\nIt could fix the issue you are having. I tried it locally on my laptop and after putting\n[[ -s /etc/profile.d/autojump.sh ]] && source /etc/profile.d/autojump.sh\nto my ~/.zshrc, it worked just fine.\n. @tuananh how do you initialize autojump? This is what I have in my shell rc file (Fedora distribution):\nshell\n[[ -s /etc/profile.d/autojump.sh ]] && source /etc/profile.d/autojump.sh\n. any update?\n. Thanks, will update it in Fedora.\n. bash and zsh completions works just fine for me with \"autojump-21.7.1\" (care to do a release again please? 5 months is quite some time)\nI have also packaged git master (@5538cf70 by that time) for Fedora some time ago and this one works too.\nFeel free to close this bug then.\n. @wting great! looking forward\n. How will this work in distriutions? And especially in packaging systems where there is no support for displaying messages when your package is successfully installed. I think that README should contain instructions for installation (the post install message you are talking about).\n. In Fedora, user doesn't need to do anything, because bash (and I'm not sure if zsh too) is sourcing /etc/profile and part of that script is this\nbash\nfor i in /etc/profile.d/*.sh ; do\n  . \"$i\" >/dev/null\ndone\nSince autojump is installed globally it lives in /etc/profile.d/autojump.sh and therefore it gets sourced as soon as you spawn new shell.\nSo you get working autojump out of the box.\nI'm not sure about other distros/shells.\n. Hi, autojump comaintainer in Fedora here. Tried to reproduce the issue but didn't succeed. Looking at version of autojump in Fedora 23, it's quite old so I updated it to latest upstream release:\nhttps://bodhi.fedoraproject.org/updates/autojump-22.3.0-1.fc23\nIt could fix the issue you are having. I tried it locally on my laptop and after putting\n[[ -s /etc/profile.d/autojump.sh ]] && source /etc/profile.d/autojump.sh\nto my ~/.zshrc, it worked just fine.\n. @tuananh how do you initialize autojump? This is what I have in my shell rc file (Fedora distribution):\nshell\n[[ -s /etc/profile.d/autojump.sh ]] && source /etc/profile.d/autojump.sh\n. any update?\n. ",
    "ceilfors": "Workaround to use autojump in Windows (Only the j command)\n1. Open C:\\Users{user}\\AppData\\Local\\autojump\\bin\\autojump file\n2. Replace all print_local with print\nWondering if @mdlawson have any clues on this issue.\n. Workaround to use autojump in Windows (Only the j command)\n1. Open C:\\Users{user}\\AppData\\Local\\autojump\\bin\\autojump file\n2. Replace all print_local with print\nWondering if @mdlawson have any clues on this issue.\n. ",
    "shreyasbharath": "This looks very similar to issue #281 I raised a couple of weeks ago. It'd be nice if Windows support was improved.\n. This looks very similar to issue #281 I raised a couple of weeks ago. It'd be nice if Windows support was improved.\n. ",
    "Kazark": "My issue could be Python 3.4-related to. I think that's the Python version I have installed. Now that I've had autojump installed for a few days I'll check and see if anything is different. Maybe I should install Python 2.7 as well?\n. Hm, okay. I did another j -s and nothing has changed, and I still can't do j C:\\github. I must be missing something.\n. I did git pull, uninstalled the old version, installed the new one, and rebooted. Here's what I've got now:\n\nThe blurred-out directories are all valid directories. C:/Program does not exist so not sure what's up with that (I think it's confused about C:/Program Files). Also I haven't been able to get it to actually jump around.\n. j trunk doesn't work either, actually. It gives:\nC:\\MAIDev> j trunk\nautojump: directory trunk not found\ntry `autojump --help` for more information\nI'll get back to you about #289.\n. Per the comment at #289:\n```\n\nwhich jc\nC:\\Users-------\\AppData\\Local\\autojump\\bin\\jc.bat\n``\n. Yes, you are right thattrunk` occurred in the database. So I tried a whole bunch of variations of autojump with something in the database and they all seem to give the same result as posted above about how the directory is not found. Also:\n\nC:\\github> autojump C:\\bitbucket design\nb'.'\nC:\\github> autojump \"C:\\bitbucket design\"\nb'.'\nC:\\github>\nHow mysterious!\n. Here it is in cmd.exe (with Clink):\n\n. I also get mbcs. I will try a fresh download.\n. My issue could be Python 3.4-related to. I think that's the Python version I have installed. Now that I've had autojump installed for a few days I'll check and see if anything is different. Maybe I should install Python 2.7 as well?\n. Hm, okay. I did another j -s and nothing has changed, and I still can't do j C:\\github. I must be missing something.\n. I did git pull, uninstalled the old version, installed the new one, and rebooted. Here's what I've got now:\n\nThe blurred-out directories are all valid directories. C:/Program does not exist so not sure what's up with that (I think it's confused about C:/Program Files). Also I haven't been able to get it to actually jump around.\n. j trunk doesn't work either, actually. It gives:\nC:\\MAIDev> j trunk\nautojump: directory trunk not found\ntry `autojump --help` for more information\nI'll get back to you about #289.\n. Per the comment at #289:\n```\n\nwhich jc\nC:\\Users-------\\AppData\\Local\\autojump\\bin\\jc.bat\n``\n. Yes, you are right thattrunk` occurred in the database. So I tried a whole bunch of variations of autojump with something in the database and they all seem to give the same result as posted above about how the directory is not found. Also:\n\nC:\\github> autojump C:\\bitbucket design\nb'.'\nC:\\github> autojump \"C:\\bitbucket design\"\nb'.'\nC:\\github>\nHow mysterious!\n. Here it is in cmd.exe (with Clink):\n\n. I also get mbcs. I will try a fresh download.\n. ",
    "chrishough": "Currently I am using autojump release-v21.6.9  and actually I misspoke earlier. I am using /bin/zsh as my shell. \n. hmmm.. I do not have setting turned on.  What is that used for @wting?  The db appears to be there, but when I j {folder} it does not appear to find anything.  This used to be awesome but lately it's like the db is either not recording entries, losing their weights, etc. \n. I have export AUTOJUMP_IGNORE_CASE=1 setup as well.  when I try to run j -s | grep {folder} the folders in general are not there.  I then navigate them to manually so they are added to the j db and then I can jump around.  In a few days however, they apparently drop off.\n. hmmm.... that file does not exist on my machine?  I appreciate all of your help. \n. brew install autojump\n. My file located here /usr/local/Cellar/autojump/21.6.9/bin only contains:\n```\n!/bin/bash\nexec \"/usr/local/Cellar/autojump/21.6.9/libexec/autojump\" \"$@\"\n```\nThoughts @wting ? \n. ok, I upgraded to /usr/local/Cellar/autojump/21.7.1/bin/autojump and now that file states:\n```\n!/bin/bash\nexec \"/usr/local/Cellar/autojump/21.7.1/libexec/autojump\" \"$@\"\n``\n. line #508 does not exist in that file though...  what are you referring to?  Thank you for your continued help btw.\n. after updating @justuswilhelm it fixed the issue for me.  I guess I should close this out.\n. I do not have that file where you mention it @jaked122. Thoughts?. Currently I am usingautojump release-v21.6.9and actually I misspoke earlier. I am using/bin/zshas my shell. \n. hmmm.. I do not have setting turned on.  What is that used for @wting?  The db appears to be there, but when Ij {folder}it does not appear to find anything.  This used to be awesome but lately it's like the db is either not recording entries, losing their weights, etc. \n. I haveexport AUTOJUMP_IGNORE_CASE=1setup as well.  when I try to runj -s | grep {folder}the folders in general are not there.  I then navigate them to manually so they are added to the j db and then I can jump around.  In a few days however, they apparently drop off.  \n. hmmm.... that file does not exist on my machine?  I appreciate all of your help. \n.brew install autojump. My file located here/usr/local/Cellar/autojump/21.6.9/bin` only contains:\n```\n!/bin/bash\nexec \"/usr/local/Cellar/autojump/21.6.9/libexec/autojump\" \"$@\"\n```\nThoughts @wting ? \n. ok, I upgraded to /usr/local/Cellar/autojump/21.7.1/bin/autojump and now that file states:\n```\n!/bin/bash\nexec \"/usr/local/Cellar/autojump/21.7.1/libexec/autojump\" \"$@\"\n```\n. line #508 does not exist in that file though...  what are you referring to?  Thank you for your continued help btw.\n. after updating @justuswilhelm it fixed the issue for me.  I guess I should close this out.\n. I do not have that file where you mention it @jaked122. Thoughts?. ",
    "justuswilhelm": "I have the same issue, just updated autojump with Homebrew. I hope the issue is gone!\n. I have the same issue, just updated autojump with Homebrew. I hope the issue is gone!\n. ",
    "callumacrae": "I typod the path. Duh. Thanks!\n. I can't even remember why I had the alias, because it works on all my machines without it. I've deleted it now and it works.\n. And rebooted my machine 6 days ago, which is when the problem started. Must have been using the same session 0_o\nDefinitely PEBKAC here :smile: \n. I typod the path. Duh. Thanks!\n. I can't even remember why I had the alias, because it works on all my machines without it. I've deleted it now and it works.\n. And rebooted my machine 6 days ago, which is when the problem started. Must have been using the same session 0_o\nDefinitely PEBKAC here :smile: \n. ",
    "RX14": "This is a huge problem for me too, using antigen.\n22.4:   /home/rx14/.antigen/repos/https-COLON--SLASH--SLASH-github.com-SLASH-zsh-users-SLASH-zsh-completions.git\n24.5:   /home/rx14/.antigen/repos/https-COLON--SLASH--SLASH-github.com-SLASH-caiogondim-SLASH-bullet-train-oh-my-zsh-theme.git\n24.5:   /home/rx14/.antigen/repos/https-COLON--SLASH--SLASH-github.com-SLASH-zsh-users-SLASH-zsh-syntax-highlighting.git\n24.5:   /home/rx14/.antigen/repos/https-COLON--SLASH--SLASH-github.com-SLASH-zsh-users-SLASH-zsh-history-substring-search.git\n28.3:   /home/rx14/.antigen/repos/https-COLON--SLASH--SLASH-github.com-SLASH-djui-SLASH-alias-tips.git\n28.3:   /home/rx14/.antigen/repos/https-COLON--SLASH--SLASH-github.com-SLASH-robbyrussell-SLASH-oh-my-zsh.git\nWould be nice to blacklist ~/.antigen\n. This is a huge problem for me too, using antigen.\n22.4:   /home/rx14/.antigen/repos/https-COLON--SLASH--SLASH-github.com-SLASH-zsh-users-SLASH-zsh-completions.git\n24.5:   /home/rx14/.antigen/repos/https-COLON--SLASH--SLASH-github.com-SLASH-caiogondim-SLASH-bullet-train-oh-my-zsh-theme.git\n24.5:   /home/rx14/.antigen/repos/https-COLON--SLASH--SLASH-github.com-SLASH-zsh-users-SLASH-zsh-syntax-highlighting.git\n24.5:   /home/rx14/.antigen/repos/https-COLON--SLASH--SLASH-github.com-SLASH-zsh-users-SLASH-zsh-history-substring-search.git\n28.3:   /home/rx14/.antigen/repos/https-COLON--SLASH--SLASH-github.com-SLASH-djui-SLASH-alias-tips.git\n28.3:   /home/rx14/.antigen/repos/https-COLON--SLASH--SLASH-github.com-SLASH-robbyrussell-SLASH-oh-my-zsh.git\nWould be nice to blacklist ~/.antigen\n. ",
    "fairchild88": "I use Mac, which jc which jco output this\n```\njc () {\n        if [[ ${@} = -* ]]\n        then\n                j ${@}\n        else\n                j $(pwd)/ ${@}\n        fi\n    }\njco () {\n        if [[ ${@} = -* ]]\n        then\n                j ${@}\n        else\n                jo $(pwd) ${@}\n        fi\n}\n```\nI think alias is wrong, what should i do to change it.\n. OK forget it\uff0c sorry, It's my misunderstanding. \njc mean jump to previously visited subdir \n. I use Mac, which jc which jco output this\n```\njc () {\n        if [[ ${@} = -* ]]\n        then\n                j ${@}\n        else\n                j $(pwd)/ ${@}\n        fi\n    }\njco () {\n        if [[ ${@} = -* ]]\n        then\n                j ${@}\n        else\n                jo $(pwd) ${@}\n        fi\n}\n```\nI think alias is wrong, what should i do to change it.\n. OK forget it\uff0c sorry, It's my misunderstanding. \njc mean jump to previously visited subdir \n. ",
    "sidazhang": "I installed from apt-get '''sudo apt-get install autojump'''\n. home/parallels/.local/share/autojump does not exist and I have created it although the issue persists.\nTraceback (most recent call last):\n  File \"/usr/bin/autojump\", line 513, in <module>\n    sys.exit(main())\n  File \"/usr/bin/autojump\", line 459, in main\n    config = parse_arg(parse_env(set_defaults()))\n  File \"/usr/bin/autojump\", line 275, in parse_arg\n    db.add(decode(args.add))\n  File \"/usr/bin/autojump\", line 70, in add\n    self.save()\n  File \"/usr/bin/autojump\", line 169, in save\n    delete=False)\n  File \"/usr/lib/python3.4/tempfile.py\", line 599, in NamedTemporaryFile\n    (fd, name) = _mkstemp_inner(dir, prefix, suffix, flags)\n  File \"/usr/lib/python3.4/tempfile.py\", line 339, in _mkstemp_inner\n    fd = _os.open(file, flags, 0o600)\nFileNotFoundError: [Errno 2] No such file or directory: '/home/parallels/.local/share/autojump/tmpbhwroo9o'\nAlthough I have not tried the latest version\n. Manual installation works although I have switched to zsh\nThank you very much for your help!\n. I installed from apt-get '''sudo apt-get install autojump'''\n. home/parallels/.local/share/autojump does not exist and I have created it although the issue persists.\nTraceback (most recent call last):\n  File \"/usr/bin/autojump\", line 513, in <module>\n    sys.exit(main())\n  File \"/usr/bin/autojump\", line 459, in main\n    config = parse_arg(parse_env(set_defaults()))\n  File \"/usr/bin/autojump\", line 275, in parse_arg\n    db.add(decode(args.add))\n  File \"/usr/bin/autojump\", line 70, in add\n    self.save()\n  File \"/usr/bin/autojump\", line 169, in save\n    delete=False)\n  File \"/usr/lib/python3.4/tempfile.py\", line 599, in NamedTemporaryFile\n    (fd, name) = _mkstemp_inner(dir, prefix, suffix, flags)\n  File \"/usr/lib/python3.4/tempfile.py\", line 339, in _mkstemp_inner\n    fd = _os.open(file, flags, 0o600)\nFileNotFoundError: [Errno 2] No such file or directory: '/home/parallels/.local/share/autojump/tmpbhwroo9o'\nAlthough I have not tried the latest version\n. Manual installation works although I have switched to zsh\nThank you very much for your help!\n. ",
    "altosaar": "Thanks - I just substituted $USER instead of my full name. \nI tried sudo mkdir to create the directory but still run into the same issue.\n. Fixed - thank you. It was indeed a permissions issue.\nSteps to make it work:\nsudo mkdir /Users/$USER/.local/share\nsudo chown $USER:staff /Users/$USER/.local/share\nsudo chown $USER:staff /Users/$USER/.local/share/autojump/*\nwhere $USER is the full username (run echo $USER to see it).\nThanks again! Autojump is awesome.\n. Yeah I'm not sure, it could've been something to do with oh my zsh's autojump plugin integration, or that I'm not using OS X's default python so it might have different permissions.\nHere are the permissions:\nls -ld /Users/$USER\ndrwxr-xr-x+ 95 $USER  staff  3230\nls -ld /Users/$USER/.local\ndrwx------  6 $USER  staff  204\nls -ld /Users/$USER/.local/share\ndrwxr-xr-x  4 $USER  staff  136\nHope that helps!\n. Thanks - I just substituted $USER instead of my full name. \nI tried sudo mkdir to create the directory but still run into the same issue.\n. Fixed - thank you. It was indeed a permissions issue.\nSteps to make it work:\nsudo mkdir /Users/$USER/.local/share\nsudo chown $USER:staff /Users/$USER/.local/share\nsudo chown $USER:staff /Users/$USER/.local/share/autojump/*\nwhere $USER is the full username (run echo $USER to see it).\nThanks again! Autojump is awesome.\n. Yeah I'm not sure, it could've been something to do with oh my zsh's autojump plugin integration, or that I'm not using OS X's default python so it might have different permissions.\nHere are the permissions:\nls -ld /Users/$USER\ndrwxr-xr-x+ 95 $USER  staff  3230\nls -ld /Users/$USER/.local\ndrwx------  6 $USER  staff  204\nls -ld /Users/$USER/.local/share\ndrwxr-xr-x  4 $USER  staff  136\nHope that helps!\n. ",
    "amelio-vazquez-reina": "Same problem here. :+1: \n. Same problem here. :+1: \n. ",
    "133794m3r": "I'm seriously surprised that this hasn't gotten any responses or anything. What's the point of providing an alternative to cd if it can't be used as cd is used. Trying to jump to a directory that has special characters causes the thing to just break. For example jumping to one that includes & just prints the directory on the command line as the result but goes no where.\n. I don't program python, and I have no idea about your style guide either so i can't help much. All of my bash programs I put \"\" around them and escape said character throughout hte original string. No idea how to do that in python as I only used it for a couple weeks before getting mad that tabs is flow control and quite a few other things and went back to bash/c.\n. I'm seriously surprised that this hasn't gotten any responses or anything. What's the point of providing an alternative to cd if it can't be used as cd is used. Trying to jump to a directory that has special characters causes the thing to just break. For example jumping to one that includes & just prints the directory on the command line as the result but goes no where.\n. I don't program python, and I have no idea about your style guide either so i can't help much. All of my bash programs I put \"\" around them and escape said character throughout hte original string. No idea how to do that in python as I only used it for a couple weeks before getting mad that tabs is flow control and quite a few other things and went back to bash/c.\n. ",
    "dkfi": "Just wanted to specify that this issue did not exist on previous Ubuntu 12.04 LTS.\n. I'm running the one installed with apt-get on Ubuntu 14.04 LTS... the one from the repo:\nkristian@gem:~$ dpkg -l autojump\n... [remove headers to improve readability] ...\nii  autojump                21.6.9-1         all              shell extension to jump to frequently used director\nkristian@gem:~$ autojump --version\nautojump release-v21.6.9\nShould be version 21.6.9.\n. Hi William,\nI can't seem to find v22.0.0-alpha on any repo... your or joeltherion's.\nAny pointers?\nOn 5 October 2014 02:48, William Ting notifications@github.com wrote:\n\nCan you please install the latest version from git (v22.0.0-alpha) and see\nif you can reproduce the behavior?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/joelthelion/autojump/issues/303#issuecomment-57923045\n.\n\n\nKristian\n. Hi William,\nSorry for not getting back to you earlier. :) Just found the time to bring\nmy git clone up to date and the problem is now fixed. Autojump saves quite\na lot of typing!! ;) Thanks a lot for everything!\nOn Mon Oct 06 2014 at 20:05:47 William Ting notifications@github.com\nwrote:\n\nThis repo's master is v22.x.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/joelthelion/autojump/issues/303#issuecomment-58061597\n.\n. Just wanted to specify that this issue did not exist on previous Ubuntu 12.04 LTS.\n. I'm running the one installed with apt-get on Ubuntu 14.04 LTS... the one from the repo:\n\nkristian@gem:~$ dpkg -l autojump\n... [remove headers to improve readability] ...\nii  autojump                21.6.9-1         all              shell extension to jump to frequently used director\nkristian@gem:~$ autojump --version\nautojump release-v21.6.9\nShould be version 21.6.9.\n. Hi William,\nI can't seem to find v22.0.0-alpha on any repo... your or joeltherion's.\nAny pointers?\nOn 5 October 2014 02:48, William Ting notifications@github.com wrote:\n\nCan you please install the latest version from git (v22.0.0-alpha) and see\nif you can reproduce the behavior?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/joelthelion/autojump/issues/303#issuecomment-57923045\n.\n\n\nKristian\n. Hi William,\nSorry for not getting back to you earlier. :) Just found the time to bring\nmy git clone up to date and the problem is now fixed. Autojump saves quite\na lot of typing!! ;) Thanks a lot for everything!\nOn Mon Oct 06 2014 at 20:05:47 William Ting notifications@github.com\nwrote:\n\nThis repo's master is v22.x.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/joelthelion/autojump/issues/303#issuecomment-58061597\n.\n. \n",
    "vaijab": "Where is version v22? Is it released yet? I just tried latest master and my terminal is super slow when I press and hold enter key.\n. Just tried to update autojump from HEAD and I can confirm that this problem still exists, so my PR is still relevant and fixes slow terminal.\nCan this be reopened and merged please?\n. Where is version v22? Is it released yet? I just tried latest master and my terminal is super slow when I press and hold enter key.\n. Just tried to update autojump from HEAD and I can confirm that this problem still exists, so my PR is still relevant and fixes slow terminal.\nCan this be reopened and merged please?\n. ",
    "bisque33": "I also happened the same error.\nI didn't know what has been set alias j=\"jobs -l\" anywhere.\nHowever, it was resolved by adding alias j=\"jobs\"to the .zshrc.\n. I also happened the same error.\nI didn't know what has been set alias j=\"jobs -l\" anywhere.\nHowever, it was resolved by adding alias j=\"jobs\"to the .zshrc.\n. ",
    "chevdor": "Same as @hcsaustrup \nOut of the box, cd does not add entries but running the -add manually does work.\n. Same as @hcsaustrup \nOut of the box, cd does not add entries but running the -add manually does work.\n. ",
    "leviwilson": "So, this is what I've come up with so far:\ndoskey cd=cd $1 $T autojump -a ^%CD^%\\$1\nThis will alias the cd command to add the directory to autojump. Unfortunately, %CD% isn't updated until after the command is ran, so you have to append the first argument :disappointed: That means it wouldn't work if you did cd %temp% or something like that.\n. FYI you can add that to your <cmdr dir>/config/aliases file. In that case, you'd omit the ^ characters and just add the line:\ncd=cd $*$Tautojump -a %CD%\\$1\n. I've updated this to actually be \ncd=cd $*$Tautojump -i >nul\nThis way it also updates the weights and I do not have to do anything fancy with adding manually.\n. So, this is what I've come up with so far:\ndoskey cd=cd $1 $T autojump -a ^%CD^%\\$1\nThis will alias the cd command to add the directory to autojump. Unfortunately, %CD% isn't updated until after the command is ran, so you have to append the first argument :disappointed: That means it wouldn't work if you did cd %temp% or something like that.\n. FYI you can add that to your <cmdr dir>/config/aliases file. In that case, you'd omit the ^ characters and just add the line:\ncd=cd $*$Tautojump -a %CD%\\$1\n. I've updated this to actually be \ncd=cd $*$Tautojump -i >nul\nThis way it also updates the weights and I do not have to do anything fancy with adding manually.\n. ",
    "frizzr": "One more update to the above...if you don't want it to echo the directory and weight, then you have to use $G to redirect in a macro:\ndoskey cd=cd $*$Tautojump -i $Gnul\n. One more update to the above...if you don't want it to echo the directory and weight, then you have to use $G to redirect in a macro:\ndoskey cd=cd $*$Tautojump -i $Gnul\n. ",
    "raine": "A minor annoyance in that alias is extra empty line that is printed with cd.. Pulled the change and seems to work.. A minor annoyance in that alias is extra empty line that is printed with cd.. Pulled the change and seems to work.. ",
    "crimsonknave": ":+1: That fixes the issue, thanks!\nYou are right, powerline is using chpwd. I'm sure autonamedirs is turned on by oh-my-zsh or something.\n. :+1: That fixes the issue, thanks!\nYou are right, powerline is using chpwd. I'm sure autonamedirs is turned on by oh-my-zsh or something.\n. ",
    "yaykyle": "Sweet!\nOn Friday, September 5, 2014, Joel Schaerer notifications@github.com\nwrote:\n\nHi yaykyle,\nThe great news is, you don't need another flag, this is exactly what the\n\"autojump\" command does:\n[joel@panda flickrapi]$ autojump foo\n/home/joel/workspace/LazyFooHaskell\nThe j shell function actually uses the autojump behind the scenes to\nperform its work.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/joelthelion/autojump/issues/314#issuecomment-54675793\n.\n. Sweet!\n\nOn Friday, September 5, 2014, Joel Schaerer notifications@github.com\nwrote:\n\nHi yaykyle,\nThe great news is, you don't need another flag, this is exactly what the\n\"autojump\" command does:\n[joel@panda flickrapi]$ autojump foo\n/home/joel/workspace/LazyFooHaskell\nThe j shell function actually uses the autojump behind the scenes to\nperform its work.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/joelthelion/autojump/issues/314#issuecomment-54675793\n.\n. \n",
    "ctwise": "The problem is with the 'jo' command. When you're sitting in one of the \"known\" directories and use the 'jo' command (e.g., 'jo current-dir'), it will open a file manager on the other known directory.\nPlease add a deterministic flag so it doesn't jump between directories. The 'jo' and 'jco' aliases will thank you.\n. The problem is with the 'jo' command. When you're sitting in one of the \"known\" directories and use the 'jo' command (e.g., 'jo current-dir'), it will open a file manager on the other known directory.\nPlease add a deterministic flag so it doesn't jump between directories. The 'jo' and 'jco' aliases will thank you.\n. ",
    "eepp": "Oops, I just realized that #311 deals with the same issue. We should close my PR.\nSorry.\n. Oops, I just realized that #311 deals with the same issue. We should close my PR.\nSorry.\n. ",
    "britishdan": "Good question. What do you do in distros that do not display the post message? How do users know to add the line to their bash_profile?\nFyi I'm on Mac and I did see the message (I didn't see it to begin with because I didn't think to look)\n. Being a dumb user and all, I didn't think to look for a post message. Brew finished the install and I closed the terminal. A few days later I see that it's not working. So I go to the README, which didn't help at all.\nIn the end I uninstalled and installed again. I then saw the message.\nI think that to help users in the future, it would be good to have a \"not working?\" section with some helpful hints. The content of the post message could be one such hint.\n. Good question. What do you do in distros that do not display the post message? How do users know to add the line to their bash_profile?\nFyi I'm on Mac and I did see the message (I didn't see it to begin with because I didn't think to look)\n. Being a dumb user and all, I didn't think to look for a post message. Brew finished the install and I closed the terminal. A few days later I see that it's not working. So I go to the README, which didn't help at all.\nIn the end I uninstalled and installed again. I then saw the message.\nI think that to help users in the future, it would be good to have a \"not working?\" section with some helpful hints. The content of the post message could be one such hint.\n. ",
    "thomasmcoffee": "This change in behavior happened to me recently (a few weeks ago) for no apparent reason. I was not able to easily figure out the source of the problem. I can still use autojump without tab completion for substrings I know are unique, but it significantly diminishes usability.. v21.6.9 (from Ubuntu repositories) on bash. As I mentioned, the odd thing was that it used to work and I didn't think I'd made any relevant changes.\n. This change in behavior happened to me recently (a few weeks ago) for no apparent reason. I was not able to easily figure out the source of the problem. I can still use autojump without tab completion for substrings I know are unique, but it significantly diminishes usability.. v21.6.9 (from Ubuntu repositories) on bash. As I mentioned, the odd thing was that it used to work and I didn't think I'd made any relevant changes.\n. ",
    "kdejaeger": "GNU bash, version 4.2.47(1)-release (x86_64-suse-linux-gnu)\n. GNU bash, version 4.2.47(1)-release (x86_64-suse-linux-gnu)\n. ",
    "pirate": "+1\n. +1\n. ",
    "Congee": "brew --prefix takes 36ms or so on my machine. This should be cached\n. brew --prefix takes 36ms or so on my machine. This should be cached\n. ",
    "youtux": "Fix in #339\n. @BenoitZugmeyer mmm, I see. I think that other programs have this kind of issue, do you know how it is solved?\n. @Siosm @BenoitZugmeyer What is the value of pkgdir in your case?\n. Does https://github.com/joelthelion/autojump/pull/328 solve your issue? Although it seems pretty convoluted.\n. @wting Could you please tag the latest version on git? (And maybe also all the future releases). In this way I can test using the brew formula properly, and open a pull request for the new version. Thanks\n. @wting can't still see it. Maybe you forgot to push?\n. This fixes #338\n. Fix in #339\n. @BenoitZugmeyer mmm, I see. I think that other programs have this kind of issue, do you know how it is solved?\n. @Siosm @BenoitZugmeyer What is the value of pkgdir in your case?\n. Does https://github.com/joelthelion/autojump/pull/328 solve your issue? Although it seems pretty convoluted.\n. @wting Could you please tag the latest version on git? (And maybe also all the future releases). In this way I can test using the brew formula properly, and open a pull request for the new version. Thanks\n. @wting can't still see it. Maybe you forgot to push?\n. This fixes #338\n. ",
    "BenoitZugmeyer": "The issue here (for Arch at least) is that the packaging is done in a random directory, and files are put in the system directories during package installation.\nSo, when packaging, the --prefix option needs to be passed as relative to the current directory (so the files are put in /home/aaa/autojump/pkg/usr for example), but the generated autojump.sh tries to source the absolute path where the packaging has occured (/home/aaa/autojump/pkg/usr/share/autojump.sh) instead of the system one (/usr/share/...).\n. @youtux I'm sorry, I have no idea how other packages deal with that. Adding another install.py option, like --destdir, defaulting to --prefix, might help.\nFYI, the Arch maintainer did fix the package with a few sed: https://projects.archlinux.org/svntogit/community.git/commit/trunk?h=packages/autojump&id=b87100cfb5972b67e6249ca3514deba68d96e972\n. The issue here (for Arch at least) is that the packaging is done in a random directory, and files are put in the system directories during package installation.\nSo, when packaging, the --prefix option needs to be passed as relative to the current directory (so the files are put in /home/aaa/autojump/pkg/usr for example), but the generated autojump.sh tries to source the absolute path where the packaging has occured (/home/aaa/autojump/pkg/usr/share/autojump.sh) instead of the system one (/usr/share/...).\n. @youtux I'm sorry, I have no idea how other packages deal with that. Adding another install.py option, like --destdir, defaulting to --prefix, might help.\nFYI, the Arch maintainer did fix the package with a few sed: https://projects.archlinux.org/svntogit/community.git/commit/trunk?h=packages/autojump&id=b87100cfb5972b67e6249ca3514deba68d96e972\n. ",
    "mineo": "It's still a problem because autojump.sh will still try to source files from destdir (like /home/wieland/dev/PKGBUILDS/autojump-git/pkg/autojump-git/usr/share/autojump/autojump.${shell} when the file really is in just /usr/share/autojump/autojump.${shell}) which (according to the GNU Coding Standards) should not actually appear in installed files at all.\n. It's still a problem because autojump.sh will still try to source files from destdir (like /home/wieland/dev/PKGBUILDS/autojump-git/pkg/autojump-git/usr/share/autojump/autojump.${shell} when the file really is in just /usr/share/autojump/autojump.${shell}) which (according to the GNU Coding Standards) should not actually appear in installed files at all.\n. ",
    "0-wiz-0": "I had problems packaging as well, and found this issue. Let me know if I should open a separate issue for this:\nI wanted to use 'install.py -fs -p /usr/pkg -d ${SOMETMPDIR}' but get\nCustom paths incompatible with --system option.\nWhen I try without '-fs', destdir is ignored:\nInstalling autojump to /usr/obj/shells/autojump/work/.destdir ...\ncreating directory: /usr/pkg/bin\ncreating directory: /usr/pkg/share/man/man1\nTraceback (most recent call last):\n  File \"install.py\", line 214, in <module>\n    sys.exit(main(parse_arguments()))\n  File \"install.py\", line 177, in main\n    mkdir(doc_dir, args.dryrun)\n  File \"install.py\", line 29, in mkdir\n    os.makedirs(path)\n  File \"/usr/pkg/lib/python3.4/os.py\", line 227, in makedirs\n    makedirs(head, mode, exist_ok)\n  File \"/usr/pkg/lib/python3.4/os.py\", line 237, in makedirs\n    mkdir(name, mode)\nPermissionError: [Errno 13] Permission denied: '/usr/pkg/share/man'\n*** Error code 1\nPlease let me know what the proper invocation is.\n. I had problems packaging as well, and found this issue. Let me know if I should open a separate issue for this:\nI wanted to use 'install.py -fs -p /usr/pkg -d ${SOMETMPDIR}' but get\nCustom paths incompatible with --system option.\nWhen I try without '-fs', destdir is ignored:\nInstalling autojump to /usr/obj/shells/autojump/work/.destdir ...\ncreating directory: /usr/pkg/bin\ncreating directory: /usr/pkg/share/man/man1\nTraceback (most recent call last):\n  File \"install.py\", line 214, in <module>\n    sys.exit(main(parse_arguments()))\n  File \"install.py\", line 177, in main\n    mkdir(doc_dir, args.dryrun)\n  File \"install.py\", line 29, in mkdir\n    os.makedirs(path)\n  File \"/usr/pkg/lib/python3.4/os.py\", line 227, in makedirs\n    makedirs(head, mode, exist_ok)\n  File \"/usr/pkg/lib/python3.4/os.py\", line 237, in makedirs\n    mkdir(name, mode)\nPermissionError: [Errno 13] Permission denied: '/usr/pkg/share/man'\n*** Error code 1\nPlease let me know what the proper invocation is.\n. ",
    "ryneeverett": "Are you sure this issue is limited to zsh? I get \"command not found\" with bash too.\n. Are you sure this issue is limited to zsh? I get \"command not found\" with bash too.\n. ",
    "bryanbecker": "I found the solution to this problem.  In autojump.fish, the definition of jo has a logical error.  It checks if the directory exists, but has the if/else conditions swapped (i.e. it displays error message on success, and tries to do the jump on fail).\nIf you manually edit it, just swap what's between the if and the else\n. I found the solution to this problem.  In autojump.fish, the definition of jo has a logical error.  It checks if the directory exists, but has the if/else conditions swapped (i.e. it displays error message on success, and tries to do the jump on fail).\nIf you manually edit it, just swap what's between the if and the else\n. ",
    "marcecj": "Wasn't this fixed in f09d23e30d3159db18872a3e8f8f579ed9e77231?\n. @spinningarrow: Yeah, I'm not getting the error either, but that's because Gentoo carries the patch from the commit I referenced above, which is why I was asking.  The fix should be in the current release, so I was wondering why this bug is still open :-) .\n. Wasn't this fixed in f09d23e30d3159db18872a3e8f8f579ed9e77231?\n. @spinningarrow: Yeah, I'm not getting the error either, but that's because Gentoo carries the patch from the commit I referenced above, which is why I was asking.  The fix should be in the current release, so I was wondering why this bug is still open :-) .\n. ",
    "voidl": "All working fine for me!\n. All working fine for me!\n. ",
    "quietshu": "If you are using bash, run this script:\nshell\n$ echo ' [[ -s $(brew --prefix)/etc/profile.d/autojump.sh ]] && . $(brew --prefix)/etc/profile.d/autojump.sh' >> ~/.bashrc && source ~/.bashrc\nFor zsh or fish, just replace the profile name. \nVia https://www.quora.com/How-can-I-source-autojump-a-very-handy-tool-used-in-directory-jumping-in-Mac-OS\n. If you are using bash, run this script:\nshell\n$ echo ' [[ -s $(brew --prefix)/etc/profile.d/autojump.sh ]] && . $(brew --prefix)/etc/profile.d/autojump.sh' >> ~/.bashrc && source ~/.bashrc\nFor zsh or fish, just replace the profile name. \nVia https://www.quora.com/How-can-I-source-autojump-a-very-handy-tool-used-in-directory-jumping-in-Mac-OS\n. ",
    "varunagrawal": "The correct way to do it is to run the following command:\n\n\nBash: echo \"/usr/share/autojump/autojump.bash\" >> ~/.bashrc\n\n\nZSH: echo \"/usr/share/autojump/autojump.zsh\" >> ~/.zshrc\n\n\nFish: echo \"/usr/share/autojump/autojump.fish\" >> ~/.fishrc\n. The correct way to do it is to run the following command:\n\n\nBash: echo \"/usr/share/autojump/autojump.bash\" >> ~/.bashrc\n\n\nZSH: echo \"/usr/share/autojump/autojump.zsh\" >> ~/.zshrc\n\n\nFish: echo \"/usr/share/autojump/autojump.fish\" >> ~/.fishrc\n. \n\n",
    "gorilla001": "@varunagrawal\n ZSH: echo \"/usr/share/autojump/autojump.zsh\" >> ~/.zshrc. @varunagrawal\n ZSH: echo \"/usr/share/autojump/autojump.zsh\" >> ~/.zshrc. ",
    "sbbird": "Got the same issue. \n. Got the same issue. \n. ",
    "victorkashirin": "Exactly the same.\n. Exactly the same.\n. ",
    "wacamoe": "Same here\n. Same here\n. ",
    "ambjlon": "same here\n. same here\n. ",
    "qiny": "same here\n. same here\n. ",
    "Karmaki": "Same problem.. Same problem.. ",
    "yumitsu": "+1. +1. ",
    "jutkko": "For me as well. TABbing in autojump is not doing anything...\n. For me as well. TABbing in autojump is not doing anything...\n. ",
    "nunoh": "bump :smile: \n. bump :smile: \n. ",
    "politicus": "Tabbing in autojump is stil not doing anything.\n. Tabbing in autojump is stil not doing anything.\n. ",
    "cloudyan": "+1,I am just getting the files and folders of the current dir too. why ??? I installed autojump with brew ,but it's not working\n. In mac, it's not working; but in ubuntu it's OK \n. +1,I am just getting the files and folders of the current dir too. why ??? I installed autojump with brew ,but it's not working\n. In mac, it's not working; but in ubuntu it's OK \n. ",
    "chenglou": "FWIW, I'm on Mac too (with zsh). Had this problem a while ago, but it's been fixed for a while for me.\n. FWIW, I'm on Mac too (with zsh). Had this problem a while ago, but it's been fixed for a while for me.\n. ",
    "serialdoom": "I tried to see if there is something wrong with the db file (~/.local/share/autojump/autojump.txt) but nothing seemed wrong in line 171 (i used vim to open the file).\nAfter deleting the database (by accident), the issue went away.\n. I tried to see if there is something wrong with the db file (~/.local/share/autojump/autojump.txt) but nothing seemed wrong in line 171 (i used vim to open the file).\nAfter deleting the database (by accident), the issue went away.\n. ",
    "azriel91": "I've opened a PR which adds support for git bash. Some output that shows it working:\n``` bash\nazrie@timberwolf MINGW64 ~\n$ j -s\n10.0:   C:/Users/azrie\n\n10:      total weight\n1:       number of entries\n0.00:    current directory weight\ndata:    C:\\Users\\azrie\\AppData\\Roaming\\autojump\\autojump.txt\nazrie@timberwolf MINGW64 ~\n$ cd /d/work/github/wting/autojump/\nazrie@timberwolf MINGW64 /d/work/github/wting/autojump (feature/issue-356-support-git-bash-msysgit)\n$ cd /d/work/github/azriel91/\nazrie@timberwolf MINGW64 /d/work/github/azriel91\n$ j auto\nD:/work/github/wting/autojump\nazrie@timberwolf MINGW64 /d/work/github/wting/autojump (feature/issue-356-support-git-bash-msysgit)\n$ j az\nC:/Users/azrie\nazrie@timberwolf MINGW64 ~\n$ j az\nD:/work/github/azriel91\n```\nUpon installation, it displays the /unix/like/path for sourcing in ~/.bashrc.\n``` bash\nazrie@timberwolf MINGW64 /d/work/github/wting/autojump (feature/issue-356-support-git-bash-msysgit)\n$ ./uninstall.py && ./install.py\nUninstalling autojump...\nFound user installation...\ndeleting directory: C:\\Users\\azrie\\AppData\\Local\\autojump\nInstalling autojump to C:\\Users\\azrie\\AppData\\Local\\autojump ...\ncreating directory: C:\\Users\\azrie\\AppData\\Local\\autojump\\bin\ncreating directory: C:\\Users\\azrie\\AppData\\Local\\autojump\\share\\man\\man1\ncreating directory: C:\\Users\\azrie\\AppData\\Local\\autojump\\etc\\profile.d\ncreating directory: C:\\Users\\azrie\\AppData\\Local\\autojump\\share\\autojump\ncopying file: ./bin/autojump -> C:\\Users\\azrie\\AppData\\Local\\autojump\\bin\ncopying file: ./bin/autojump_argparse.py -> C:\\Users\\azrie\\AppData\\Local\\autojump\\bin\ncopying file: ./bin/autojump_data.py -> C:\\Users\\azrie\\AppData\\Local\\autojump\\bin\ncopying file: ./bin/autojump_match.py -> C:\\Users\\azrie\\AppData\\Local\\autojump\\bin\ncopying file: ./bin/autojump_utils.py -> C:\\Users\\azrie\\AppData\\Local\\autojump\\bin\ncopying file: ./bin/icon.png -> C:\\Users\\azrie\\AppData\\Local\\autojump\\share\\autojump\ncopying file: ./docs/autojump.1 -> C:\\Users\\azrie\\AppData\\Local\\autojump\\share\\man\\man1\ncreating directory: C:\\Users\\azrie\\AppData\\Local\\autojump\\etc\\profile.d\ncreating directory: C:\\Users\\azrie\\AppData\\Local\\autojump\\share\\autojump\ncreating directory: C:\\Users\\azrie\\AppData\\Local\\autojump\\functions\ncopying file: ./bin/autojump.sh -> C:\\Users\\azrie\\AppData\\Local\\autojump\\etc\\profile.d\ncopying file: ./bin/autojump.bash -> C:\\Users\\azrie\\AppData\\Local\\autojump\\share\\autojump\ncopying file: ./bin/autojump.fish -> C:\\Users\\azrie\\AppData\\Local\\autojump\\share\\autojump\ncopying file: ./bin/autojump.zsh -> C:\\Users\\azrie\\AppData\\Local\\autojump\\share\\autojump\ncopying file: ./bin/_j -> C:\\Users\\azrie\\AppData\\Local\\autojump\\functions\nPlease manually add the following line(s) to ~/.bashrc:\n    [[ -s /c/Users/azrie/AppData/Local/autojump/etc/profile.d/autojump.sh ]] && source /c/Users/azrie/AppData/Local/autojump/etc/profile.d/autojump.sh\n\nPlease restart terminal(s) before running autojump.\n```\n. I've opened a PR which adds support for git bash. Some output that shows it working:\n``` bash\nazrie@timberwolf MINGW64 ~\n$ j -s\n10.0:   C:/Users/azrie\n\n10:      total weight\n1:       number of entries\n0.00:    current directory weight\ndata:    C:\\Users\\azrie\\AppData\\Roaming\\autojump\\autojump.txt\nazrie@timberwolf MINGW64 ~\n$ cd /d/work/github/wting/autojump/\nazrie@timberwolf MINGW64 /d/work/github/wting/autojump (feature/issue-356-support-git-bash-msysgit)\n$ cd /d/work/github/azriel91/\nazrie@timberwolf MINGW64 /d/work/github/azriel91\n$ j auto\nD:/work/github/wting/autojump\nazrie@timberwolf MINGW64 /d/work/github/wting/autojump (feature/issue-356-support-git-bash-msysgit)\n$ j az\nC:/Users/azrie\nazrie@timberwolf MINGW64 ~\n$ j az\nD:/work/github/azriel91\n```\nUpon installation, it displays the /unix/like/path for sourcing in ~/.bashrc.\n``` bash\nazrie@timberwolf MINGW64 /d/work/github/wting/autojump (feature/issue-356-support-git-bash-msysgit)\n$ ./uninstall.py && ./install.py\nUninstalling autojump...\nFound user installation...\ndeleting directory: C:\\Users\\azrie\\AppData\\Local\\autojump\nInstalling autojump to C:\\Users\\azrie\\AppData\\Local\\autojump ...\ncreating directory: C:\\Users\\azrie\\AppData\\Local\\autojump\\bin\ncreating directory: C:\\Users\\azrie\\AppData\\Local\\autojump\\share\\man\\man1\ncreating directory: C:\\Users\\azrie\\AppData\\Local\\autojump\\etc\\profile.d\ncreating directory: C:\\Users\\azrie\\AppData\\Local\\autojump\\share\\autojump\ncopying file: ./bin/autojump -> C:\\Users\\azrie\\AppData\\Local\\autojump\\bin\ncopying file: ./bin/autojump_argparse.py -> C:\\Users\\azrie\\AppData\\Local\\autojump\\bin\ncopying file: ./bin/autojump_data.py -> C:\\Users\\azrie\\AppData\\Local\\autojump\\bin\ncopying file: ./bin/autojump_match.py -> C:\\Users\\azrie\\AppData\\Local\\autojump\\bin\ncopying file: ./bin/autojump_utils.py -> C:\\Users\\azrie\\AppData\\Local\\autojump\\bin\ncopying file: ./bin/icon.png -> C:\\Users\\azrie\\AppData\\Local\\autojump\\share\\autojump\ncopying file: ./docs/autojump.1 -> C:\\Users\\azrie\\AppData\\Local\\autojump\\share\\man\\man1\ncreating directory: C:\\Users\\azrie\\AppData\\Local\\autojump\\etc\\profile.d\ncreating directory: C:\\Users\\azrie\\AppData\\Local\\autojump\\share\\autojump\ncreating directory: C:\\Users\\azrie\\AppData\\Local\\autojump\\functions\ncopying file: ./bin/autojump.sh -> C:\\Users\\azrie\\AppData\\Local\\autojump\\etc\\profile.d\ncopying file: ./bin/autojump.bash -> C:\\Users\\azrie\\AppData\\Local\\autojump\\share\\autojump\ncopying file: ./bin/autojump.fish -> C:\\Users\\azrie\\AppData\\Local\\autojump\\share\\autojump\ncopying file: ./bin/autojump.zsh -> C:\\Users\\azrie\\AppData\\Local\\autojump\\share\\autojump\ncopying file: ./bin/_j -> C:\\Users\\azrie\\AppData\\Local\\autojump\\functions\nPlease manually add the following line(s) to ~/.bashrc:\n    [[ -s /c/Users/azrie/AppData/Local/autojump/etc/profile.d/autojump.sh ]] && source /c/Users/azrie/AppData/Local/autojump/etc/profile.d/autojump.sh\n\nPlease restart terminal(s) before running autojump.\n```\n. ",
    "davux": "@wting I think it's awesome that @azriel91 contributed some code, as you suggested. What's the next step?. @wting I think it's awesome that @azriel91 contributed some code, as you suggested. What's the next step?. ",
    "gdieguez": "This works with git bash on windows, is the PR going to be accepted?. This works with git bash on windows, is the PR going to be accepted?. ",
    "AaronM04": "I have also experienced data loss every week or so.. I have also experienced data loss every week or so.. ",
    "slhck": "Same issue here. Did you ever resolve it?\n. Getting the same error with v22.5.1, installed on Cygwin 2.8.0(0.309/5/3) via Babun:\n/home/werner/autojump/share/autojump/autojump.bash:34: command not found: complete\nI simply installed autojump by running the install.py script.\nMy ~/.zshrc contains:\n[[ -s /home/werner/.autojump/etc/profile.d/autojump.sh ]] && source /home/werner/.autojump/etc/profile.d/autojump.sh\nApparently it misdetects the shell? Probably a different source of the problem.. Same issue here. Did you ever resolve it?\n. Getting the same error with v22.5.1, installed on Cygwin 2.8.0(0.309/5/3) via Babun:\n/home/werner/autojump/share/autojump/autojump.bash:34: command not found: complete\nI simply installed autojump by running the install.py script.\nMy ~/.zshrc contains:\n[[ -s /home/werner/.autojump/etc/profile.d/autojump.sh ]] && source /home/werner/.autojump/etc/profile.d/autojump.sh\nApparently it misdetects the shell? Probably a different source of the problem.. ",
    "hyperknot": "The problem was having PROMPT_COMMAND exported. That made autojump's changes exported as well.\n. The problem was having PROMPT_COMMAND exported. That made autojump's changes exported as well.\n. ",
    "shivams": "Okay. Cracked the issue, guys. Apparently, there was a directory whose name had some special characters in it, including \"newline\" character. And so, when I checked in the ~/.local/share/autojump/autojump.txt file, I found that it was in this fashion: (the second directory is the culprit)\n10 some/normal/directory\n10 the/malicious/directory-!\nname\n10 another/normal/directory\nSo, its name was overflowing to the next line. \nNow, I had intentionally created this directory to test some of my script (I like to test my scripts for all sorts of weird scenarios including file names containing alien characters). I don't think any user would ever have a directory or file name with newline as a character and so this issue would never occur.\nBut if there is some way to resolve this, do look at it. \nSo let me now re-frame the issue: \nAutojump will stop working if a file/directory name containing newline character gets added to its database.\n. A rudimentary method would be to just detect the faulty lines in the autojump.txt file and delete them, so that they don't cause any problem. But this is just a quick fix, not a proper solution.\n. Okay. Cracked the issue, guys. Apparently, there was a directory whose name had some special characters in it, including \"newline\" character. And so, when I checked in the ~/.local/share/autojump/autojump.txt file, I found that it was in this fashion: (the second directory is the culprit)\n10 some/normal/directory\n10 the/malicious/directory-!\nname\n10 another/normal/directory\nSo, its name was overflowing to the next line. \nNow, I had intentionally created this directory to test some of my script (I like to test my scripts for all sorts of weird scenarios including file names containing alien characters). I don't think any user would ever have a directory or file name with newline as a character and so this issue would never occur.\nBut if there is some way to resolve this, do look at it. \nSo let me now re-frame the issue: \nAutojump will stop working if a file/directory name containing newline character gets added to its database.\n. A rudimentary method would be to just detect the faulty lines in the autojump.txt file and delete them, so that they don't cause any problem. But this is just a quick fix, not a proper solution.\n. ",
    "mslazynski": "Support for xonsh would be indeed a nice feature.\n. Support for xonsh would be indeed a nice feature.\n. ",
    "willsALMANJ": "I have autojump working pretty well in xonsh with https://github.com/willsALMANJ/autojump-xonsh\nOne issue is that I don't see an easy way to integrate it into autojump.sh because the xonsh syntax does not follow shell syntax closely enough (it treats if statements as Python).\n. I have autojump working pretty well in xonsh with https://github.com/willsALMANJ/autojump-xonsh\nOne issue is that I don't see an easy way to integrate it into autojump.sh because the xonsh syntax does not follow shell syntax closely enough (it treats if statements as Python).\n. ",
    "landscape-bot": "\nCode quality remained the same when pulling 1a30211 on leni536:master into 8b525c1 on joelthelion:master.\n. \nCode quality remained the same when pulling f09d23e on CodeMonk:master into 8b525c1 on joelthelion:master.\n. \nCode quality remained the same when pulling 55f4eac on CodeMonk:master into 8b525c1 on joelthelion:master.\n. \nCode quality remained the same when pulling 1a30211 on leni536:master into 8b525c1 on joelthelion:master.\n. \nCode quality remained the same when pulling f09d23e on CodeMonk:master into 8b525c1 on joelthelion:master.\n. \nCode quality remained the same when pulling 55f4eac on CodeMonk:master into 8b525c1 on joelthelion:master.\n. ",
    "jake-low": "I had the same problem when I was first learning autojump. The habit I picked up to fix it is to give autojump two arguments, the first being a substring of the name of the repo. Example (in svn):\n30 /home/jake/some-repo/head/src/include/\n10 /home/jake/some-repo/branches/development-branch/src/include/\nIf I want to jump into the latter directory, I invoke autojump as j devel inc or similar.\n. I had the same problem when I was first learning autojump. The habit I picked up to fix it is to give autojump two arguments, the first being a substring of the name of the repo. Example (in svn):\n30 /home/jake/some-repo/head/src/include/\n10 /home/jake/some-repo/branches/development-branch/src/include/\nIf I want to jump into the latter directory, I invoke autojump as j devel inc or similar.\n. ",
    "victoryxs": "I have not solved the problem. so I uninstall with brew, download the tar file of autojump, install the sh file and update my .zshrc file with [[ -s ~/.autojump/etc/profile.d/autojump.sh ]] && . ~/.autojump/etc/profile.d/autojump.sh\n. I have solved the problem. You need to chang the owner of usr/local. If you don't do that, you can't update and install from brew. \n. I have not solved the problem. so I uninstall with brew, download the tar file of autojump, install the sh file and update my .zshrc file with [[ -s ~/.autojump/etc/profile.d/autojump.sh ]] && . ~/.autojump/etc/profile.d/autojump.sh\n. I have solved the problem. You need to chang the owner of usr/local. If you don't do that, you can't update and install from brew. \n. ",
    "L-P": "@wting can I get some feedback on this ?\n. @wting can I get some feedback on this ?\n. ",
    "pinyitianle": "does autojump dirA work?\n. here is my ~/.zshrc config\nplugins=(git autojump)\nsetting autojump\n[[ -s brew --prefix/etc/autojump.zsh ]] && . brew --prefix/etc/autojump.zsh\n. does autojump dirA work?\n. here is my ~/.zshrc config\nplugins=(git autojump)\nsetting autojump\n[[ -s brew --prefix/etc/autojump.zsh ]] && . brew --prefix/etc/autojump.zsh\n. ",
    "lusfold": "not work\uff0canyway  thx\n. ``` bash\ncat head $(brew --prefix)/etc/profile.d/autojump.sh\ncat: head: No such file or directory\n# the login $SHELL isn't always the one used\n# NOTE: problems might occur if /bin/sh is symlinked to /bin/bash\nif [ -n \"${BASH}\" ]; then\n    shell=\"bash\"\nelif [ -n \"${ZSH_NAME}\" ]; then\n    shell=\"zsh\"\nelif [ -n \"${__fish_datadir}\" ]; then\n    shell=\"fish\"\nelif [ -n \"${version}\" ]; then\n    shell=\"tcsh\"\nelse\n    shell=$(echo ${SHELL} | awk -F/ '{ print $NF }')\nfi\n# prevent circular loop for sh shells\nif [ \"${shell}\" = \"sh\" ]; then\n    return 0\n# check local install\nelif [ -s ~/.autojump/share/autojump/autojump.${shell} ]; then\n    source ~/.autojump/share/autojump/autojump.${shell}\n# check global install\nelif [ -s /usr/local/share/autojump/autojump.${shell} ]; then\n    source /usr/local/share/autojump/autojump.${shell}\nfi\n# check custom install\nif [ -s /usr/local/Cellar/autojump/22.2.4/share/autojump/autojump.${shell} ]; then\n    source /usr/local/Cellar/autojump/22.2.4/share/autojump/autojump.${shell}\nfi\nwhich j\nj: aliased to autojump\nj --version\nauto exit without any tips\nbrew install autojump\nWarning: autojump-22.2.4 already installed\n. not work\uff0canyway  thx\n. bash\ncat head $(brew --prefix)/etc/profile.d/autojump.sh\ncat: head: No such file or directory\n# the login $SHELL isn't always the one used\n# NOTE: problems might occur if /bin/sh is symlinked to /bin/bash\nif [ -n \"${BASH}\" ]; then\n    shell=\"bash\"\nelif [ -n \"${ZSH_NAME}\" ]; then\n    shell=\"zsh\"\nelif [ -n \"${__fish_datadir}\" ]; then\n    shell=\"fish\"\nelif [ -n \"${version}\" ]; then\n    shell=\"tcsh\"\nelse\n    shell=$(echo ${SHELL} | awk -F/ '{ print $NF }')\nfi\n# prevent circular loop for sh shells\nif [ \"${shell}\" = \"sh\" ]; then\n    return 0\n# check local install\nelif [ -s ~/.autojump/share/autojump/autojump.${shell} ]; then\n    source ~/.autojump/share/autojump/autojump.${shell}\n# check global install\nelif [ -s /usr/local/share/autojump/autojump.${shell} ]; then\n    source /usr/local/share/autojump/autojump.${shell}\nfi\n# check custom install\nif [ -s /usr/local/Cellar/autojump/22.2.4/share/autojump/autojump.${shell} ]; then\n    source /usr/local/Cellar/autojump/22.2.4/share/autojump/autojump.${shell}\nfi\nwhich j\nj: aliased to autojump\nj --version\nauto exit without any tips\nbrew install autojump\nWarning: autojump-22.2.4 already installed\n```\n. ",
    "onebraveman": "After searching the problem, i get the page here. \nI just install autojump-zsh package and execute source ~/.zshrc in my Centos machine. Then it works fine.. After searching the problem, i get the page here. \nI just install autojump-zsh package and execute source ~/.zshrc in my Centos machine. Then it works fine.. ",
    "EvanDorsky": "Yes, it does \u2014 thanks for clarifying. I guess I don't see a reason for the shorter j to remove this functionality, though.\n. I think I understand the distinction. I'm just trying to point out that when using $( ), autojump works while j doesn't.\n. @blueyed\n\nj is not meant to be used with $(\u2026), but j is.\n\nI don't think I'm following you \u2014 which of the two js in the quoted sentence was supposed to be something else?\n. Okay. I guess there's a tradeoff in functionality here between j printing in red and being able to use j with $( ) that I don't fully understand. Could you shed some light on that decision? If you feel that everything is working as intended, feel free to close this issue. Thanks.\n. Yes, it does \u2014 thanks for clarifying. I guess I don't see a reason for the shorter j to remove this functionality, though.\n. I think I understand the distinction. I'm just trying to point out that when using $( ), autojump works while j doesn't.\n. @blueyed\n\nj is not meant to be used with $(\u2026), but j is.\n\nI don't think I'm following you \u2014 which of the two js in the quoted sentence was supposed to be something else?\n. Okay. I guess there's a tradeoff in functionality here between j printing in red and being able to use j with $( ) that I don't fully understand. Could you shed some light on that decision? If you feel that everything is working as intended, feel free to close this issue. Thanks.\n. ",
    "eexpress": "I think export an environment parameter for the output ansi color in  /usr/share/autojump/autojump.bash is a good idea. So we can change the color follow \". /usr/share/autojump/autojump.bash\" in .bashrc or etc.\njust like this:\n. /usr/share/autojump/autojump.bash\nexport AJoutputcolor=\"\\[\\e[1;37;42m\"   <- ansi or tput here. I think export an environment parameter for the output ansi color in  /usr/share/autojump/autojump.bash is a good idea. So we can change the color follow \". /usr/share/autojump/autojump.bash\" in .bashrc or etc.\njust like this:\n. /usr/share/autojump/autojump.bash\nexport AJoutputcolor=\"\\[\\e[1;37;42m\"   <- ansi or tput here. ",
    "zhexuany": "Already Fix. \nShould add \nsource /usr/share/autojump/autojump.sh\n. Already Fix. \nShould add \nsource /usr/share/autojump/autojump.sh\n. ",
    "labixiaoxin1990": "I've solved this, thanks!\n. I've solved this, thanks!\n. ",
    "i-cant-git": "Is this going to get merged any time soon?\n. Please try now as #381 is merged, also look at #418 for integration with cd\n. Is this going to get merged any time soon?\n. Please try now as #381 is merged, also look at #418 for integration with cd\n. ",
    "azat": "Hm, but this can hurt with unproper shutdown, maybe leave tmp files but overwriting main db under flock?\n. I guess that problem can be with ENOSPC. I got zeros ('\\0') sometimes, and it fails to parse autojump.txt. Maybe #383 didn't guard all places with flock, but there is more simple approach, but just wrapping the whole autojump inside flock, like:\nalias autojump='flock /tmp/autojump.lock autojump'\n@trou can you test this?\nUPD: fix syntax issue\n. Hm, how this can happens?\nDid you machine powered off abnormally (i.e.  via power button)?\nAlso maybe autojump called from regular sh (instead of bash) in\nparallel? Since in this case bash alias won't work, and in this case you\ncan try by wrapping it via script, something like:\n  mv /usr/bin/autojump{,.orig}\n  echo \"flock /tmp/autojump.lock autojump.orig\" > /usr/bin/autojump\nOr I'm missing something completely.\n. Hm, but this can hurt with unproper shutdown, maybe leave tmp files but overwriting main db under flock?\n. I guess that problem can be with ENOSPC. I got zeros ('\\0') sometimes, and it fails to parse autojump.txt. Maybe #383 didn't guard all places with flock, but there is more simple approach, but just wrapping the whole autojump inside flock, like:\nalias autojump='flock /tmp/autojump.lock autojump'\n@trou can you test this?\nUPD: fix syntax issue\n. Hm, how this can happens?\nDid you machine powered off abnormally (i.e.  via power button)?\nAlso maybe autojump called from regular sh (instead of bash) in\nparallel? Since in this case bash alias won't work, and in this case you\ncan try by wrapping it via script, something like:\n  mv /usr/bin/autojump{,.orig}\n  echo \"flock /tmp/autojump.lock autojump.orig\" > /usr/bin/autojump\nOr I'm missing something completely.\n. ",
    "trou": "FWIW I've run autojump with this PR and it didn't fully fix the problem, it seemed to be less frequent but no hard number.\n. Probably fixed by https://github.com/wting/autojump/pull/383\n. Apparently not fixed. This is really annoying. Any idea ?\n. Hmm I just looked at the code and I don't see any actual locking going on.\nMoreover the backup is done right after the move from the temp file to the real DB, so if the move failed (there's no error checking), we're backuping an empty file.\nI guess improving this should'nt be that hard.\n. I just added it to my bashrc, we'll see.\n. It doesn't seem to help :(\n. I don't know but the issue should be fixed in the code anyway.\n. FWIW I've run autojump with this PR and it didn't fully fix the problem, it seemed to be less frequent but no hard number.\n. Probably fixed by https://github.com/wting/autojump/pull/383\n. Apparently not fixed. This is really annoying. Any idea ?\n. Hmm I just looked at the code and I don't see any actual locking going on.\nMoreover the backup is done right after the move from the temp file to the real DB, so if the move failed (there's no error checking), we're backuping an empty file.\nI guess improving this should'nt be that hard.\n. I just added it to my bashrc, we'll see.\n. It doesn't seem to help :(\n. I don't know but the issue should be fixed in the code anyway.\n. ",
    "jared-hess": "For the record, this is expected behavior. It's not being upgraded by running \"j -s\" per se, it's being upgraded by running any command while your pwd is the directory in question. Weights are determined via the PROMPT_COMMAND hook, so every time you get  a new prompt the weight of your pwd will be upgraded.\n. It appears that the only way to do this currently is to delete the corresponding line from the autjump.txt file, located at \"~/Library/autojump/autojump.txt\". \nI've added this functionality in my fork but have yet to merge it, check it out if you like:\nhttps://github.com/jared-hess/autojump/tree/delete-entry\n. Multiple path support is much more convenient and intuitive than \"--add\" only supporting a single parameter. Without support for adding multiple path at once, if you want to all the child directories of the current directory to the database you'd have to run the command multiple times. Ideally, you could do this:\nj --add *\nBash will use wildcard expansion to expand * into a list of files in the current directory. The current behavior of autojump is to accept this, but only add the first file to the database. Ideally it would add all directories to the database and ignore anything that wasn't a directory, which is what these changes do.\n. There's certainly precedent in Unix utilities for handling more than one item at a time, it's why bash globbing and wildcard expansion exist. In fact most utilities that act on files or directories do accept multiple items if it makes sense to do so, or can be done without creating ambiguity. You don't have to define a convenience function if you want to delete multiple files with \"rm\", it simply accepts multiple files because this is the convenient and intuitive thing to do, and there is no reason not to.\n. Also, do you have any thoughts on what some good test cases would be for this?\n. FYI, this is caused by an indeterminacy introduced in later versions of python with sorting. Basically if it is only sorted by weight, which multiple entries have a tied weight the results returned will be randomized which causes you to cd to the wrong entry. The dev can fix this by adding a secondary sorting attribute that is guaranteed to be unique.\nhttps://github.com/jared-hess/autojump/commit/1fa31610a5c871fb57c4270ef744c6a1e1c0b03b\n. Submitted. Feel free to look through my dev branch, I've made a number of improvements/fixes for my own use that I haven't bothered to submit PRs for.\nhttps://github.com/jared-hess/autojump/commits/dev\n. By the way, if you want to know when this changed or why this indeterminacy exists take a look at the documentation for PYTHONHASHSEED.\n. From my understanding of cdargs it relies completely on manual configuration. Autojump by default installs a hook into your prompt that allows it to automatically update a database of paths and weights based on what directories you spend time running commands in. This allows ambiguous \"needles\" passed to autojump to select the most likely directory for you based on how often you use it. \nI'm sure there are other differences but stands out to me as one of the biggest.\n. For the record, this is expected behavior. It's not being upgraded by running \"j -s\" per se, it's being upgraded by running any command while your pwd is the directory in question. Weights are determined via the PROMPT_COMMAND hook, so every time you get  a new prompt the weight of your pwd will be upgraded.\n. It appears that the only way to do this currently is to delete the corresponding line from the autjump.txt file, located at \"~/Library/autojump/autojump.txt\". \nI've added this functionality in my fork but have yet to merge it, check it out if you like:\nhttps://github.com/jared-hess/autojump/tree/delete-entry\n. Multiple path support is much more convenient and intuitive than \"--add\" only supporting a single parameter. Without support for adding multiple path at once, if you want to all the child directories of the current directory to the database you'd have to run the command multiple times. Ideally, you could do this:\nj --add *\nBash will use wildcard expansion to expand * into a list of files in the current directory. The current behavior of autojump is to accept this, but only add the first file to the database. Ideally it would add all directories to the database and ignore anything that wasn't a directory, which is what these changes do.\n. There's certainly precedent in Unix utilities for handling more than one item at a time, it's why bash globbing and wildcard expansion exist. In fact most utilities that act on files or directories do accept multiple items if it makes sense to do so, or can be done without creating ambiguity. You don't have to define a convenience function if you want to delete multiple files with \"rm\", it simply accepts multiple files because this is the convenient and intuitive thing to do, and there is no reason not to.\n. Also, do you have any thoughts on what some good test cases would be for this?\n. FYI, this is caused by an indeterminacy introduced in later versions of python with sorting. Basically if it is only sorted by weight, which multiple entries have a tied weight the results returned will be randomized which causes you to cd to the wrong entry. The dev can fix this by adding a secondary sorting attribute that is guaranteed to be unique.\nhttps://github.com/jared-hess/autojump/commit/1fa31610a5c871fb57c4270ef744c6a1e1c0b03b\n. Submitted. Feel free to look through my dev branch, I've made a number of improvements/fixes for my own use that I haven't bothered to submit PRs for.\nhttps://github.com/jared-hess/autojump/commits/dev\n. By the way, if you want to know when this changed or why this indeterminacy exists take a look at the documentation for PYTHONHASHSEED.\n. From my understanding of cdargs it relies completely on manual configuration. Autojump by default installs a hook into your prompt that allows it to automatically update a database of paths and weights based on what directories you spend time running commands in. This allows ambiguous \"needles\" passed to autojump to select the most likely directory for you based on how often you use it. \nI'm sure there are other differences but stands out to me as one of the biggest.\n. ",
    "AdUki": "Then there is nothing to do. Thanks for clarification.\n. Then there is nothing to do. Thanks for clarification.\n. ",
    "metaprem": "Closing my pull request as it is same as https://github.com/wting/autojump/pull/386. \n. Closing my pull request as it is same as https://github.com/wting/autojump/pull/386. \n. ",
    "campbellC": "I had the same issue. Following the instructions for a manual install works perfectly so I would guess this is a problem with the macports package.\n. I had the same issue. Following the instructions for a manual install works perfectly so I would guess this is a problem with the macports package.\n. ",
    "jpenney": "See macports ticket #49212\n. See macports ticket #49212\n. ",
    "gled-rs": "it also happens when working with virtualenvs... \nI had to hook my zsh to disable autojump when in a virtualenv to avoid this message...\n. it also happens when working with virtualenvs... \nI had to hook my zsh to disable autojump when in a virtualenv to avoid this message...\n. ",
    "loveencounterflow": "Update I added source /usr/share/autojump/autojump.bash to my .bashrc as recommended by http://askubuntu.com/a/185996. Now the autojump DB does pick up directories as I visit them. \nHowever, now when I do j xxx I do get a suggested target path printed out, but autojump leaves it at that and does not cd into that directory.\nI think the current issue is still valid, so I leave it open.\n. Update I added source /usr/share/autojump/autojump.bash to my .bashrc as recommended by http://askubuntu.com/a/185996. Now the autojump DB does pick up directories as I visit them. \nHowever, now when I do j xxx I do get a suggested target path printed out, but autojump leaves it at that and does not cd into that directory.\nI think the current issue is still valid, so I leave it open.\n. ",
    "jettero": "Hrm, I just looked in autojump.bash and it does an awful lot more than the docs indicated.\nI use PROMPT_COMMAND for something else, but the docs said autojump needs it for things, so I was careful to add 'history -a' as the docs indicated I'd need to do; but, of course, it still didn't pick up new directories.\nSource diving on autojump.bash indicated I really needed to simply source autojump after I add my PROMPT_COMMAND or add 'autojump_add_to_database' (not history -a).\n. Hrm, I just looked in autojump.bash and it does an awful lot more than the docs indicated.\nI use PROMPT_COMMAND for something else, but the docs said autojump needs it for things, so I was careful to add 'history -a' as the docs indicated I'd need to do; but, of course, it still didn't pick up new directories.\nSource diving on autojump.bash indicated I really needed to simply source autojump after I add my PROMPT_COMMAND or add 'autojump_add_to_database' (not history -a).\n. ",
    "mgcrea": ":+1: on ubuntu autojump does not cd, only prints the path\n. :+1: on ubuntu autojump does not cd, only prints the path\n. ",
    "acornejo": "I should add, I am happy to implement this pruning feature in python and submit a pull-request, just don't want to waste work if there is no chance of this getting merged.\n. I should add, I am happy to implement this pruning feature in python and submit a pull-request, just don't want to waste work if there is no chance of this getting merged.\n. ",
    "sbuljac": "Hi,\nSame issue here except I think it only happen after the reboot. \n. Hi,\nSame issue here except I think it only happen after the reboot. \n. ",
    "nvgoldin": "I been using autojump for around a year now, and suddenly - it looks like it cleaned out the entire history. Looking at ~/.local/share/autojump, I see a new file was created. I saw https://github.com/wting/autojump/issues/208, which points here. I'm using:\nautojump-22.3.2-1.fc24.noarch\nAny other debugging info I can provide?\n. I been using autojump for around a year now, and suddenly - it looks like it cleaned out the entire history. Looking at ~/.local/share/autojump, I see a new file was created. I saw https://github.com/wting/autojump/issues/208, which points here. I'm using:\nautojump-22.3.2-1.fc24.noarch\nAny other debugging info I can provide?\n. ",
    "Micha-Btz": "I also have this regularly is there a way to debug this? . I also have this regularly is there a way to debug this? . ",
    "r-barnes": "@wting: You mentioned that one way to resolve the problem might be to switch to an \"append only log\" and calculate weights when autojump is run.\nI suppose you are avoiding this solution because the log might become prohibitively long over time. (And, also, because it would be nice if the existing system worked in the way we think it should.)\nBut perhaps a hybrid solution is possible? Append entries to a log, but add an autojump command that converts them to the database format. When autojump is run, consult both the log and the database to calculate the actual weights.\nThe foremost downside to this is that it requires the user to collapse the database manually. A work around would be to do a random test each time autojump is run to determine if the db should be collapsed. This would, at least, decrease the odds of a race condition.. @azat: I'm going to try your solution.. I did not have 100% success with #482. The database still seems to clear or, perhaps, is limited in size. It doesn't seem to grow much beyond 23 entries for me.. I also have this problem on Lubuntu 17.04, and had it on 16.10 as well.\nI don't recall it having been an issue when I first started using autojump.\nThough I haven't yet read the preceding comments in-depth, a race condition seems possible, since I am running many terminals at once and, at some point, closing them en masse when, e.g., I shutdown the computer.. Look like #391 is where discussion of this issue is happening.. @wting: You mentioned that one way to resolve the problem might be to switch to an \"append only log\" and calculate weights when autojump is run.\nI suppose you are avoiding this solution because the log might become prohibitively long over time. (And, also, because it would be nice if the existing system worked in the way we think it should.)\nBut perhaps a hybrid solution is possible? Append entries to a log, but add an autojump command that converts them to the database format. When autojump is run, consult both the log and the database to calculate the actual weights.\nThe foremost downside to this is that it requires the user to collapse the database manually. A work around would be to do a random test each time autojump is run to determine if the db should be collapsed. This would, at least, decrease the odds of a race condition.. @azat: I'm going to try your solution.. I did not have 100% success with #482. The database still seems to clear or, perhaps, is limited in size. It doesn't seem to grow much beyond 23 entries for me.. I also have this problem on Lubuntu 17.04, and had it on 16.10 as well.\nI don't recall it having been an issue when I first started using autojump.\nThough I haven't yet read the preceding comments in-depth, a race condition seems possible, since I am running many terminals at once and, at some point, closing them en masse when, e.g., I shutdown the computer.. Look like #391 is where discussion of this issue is happening.. ",
    "PorcelainMouse": "Since I implemented a patch proposed in #482, I have not experienced this bug.\nI'm interested in hearing @r-barnes results, too, though.  If successful, is there a reason this \"early locking\" could not be used in autojump?. Argh!  Got an update that overwrote the patch from #482.  It happened on the next reboot.  I don't understand how other people aren't experiencing this.  It happens to me constantly.. I did have 100% success with #482.  April 21 until July 25.  I have 279 entries currently.  This suggests our situations are different, which means there are multiple triggers for this bug.  Whatever I'm doing that causes it, is always related to the different filesystems that autojump uses to managed the db, like @Frefreak suggested.  And, just as I suggested, there could be multiple code paths that lead to the same bug, some of which, I just never use but you do.. What's your distro?  Just trying to assure myself this issue isn't a package problem with my distro.\nYeah, I haven't thought of a way this could happen, so, I figure the authors will know.  I'm glad I'm not the only one experiencing this, too.. @Frefreak Cool, good thinking; I follow your logic. That could be it.\nI'd be happy to try that.  I'm using Fedora.\nDo you know the logic that lead to save()?  Just trying to piece together the scenario that causes this.\nI take it you are speculating about a race condition?  Making the move atomic will help, but I think what you really want is to make autojump_data.save() atomic.  Right?  Just fixing move() doesn't completely work, right?  I could be wrong, I just glanced at that function for a second.\nDo you know what I'm getting at? I worry that the problem is multiple entry into save(), not actually the race condition on move().. Hmm, well, I made the change and we'll see how it goes.\nYou should submit your patch, as it seems reasonable and is an improvement, regardless.  I  reused code I found elsewhere like this:\nxdg_data_home = os.path.join(os.path.expanduser('~'), '.local', 'share')\nxdg_aj_home = os.path.join(xdg_data_home, 'autojump')\ntemp = NamedTemporaryFile(delete=False, dir=xdg_aj_home)\n\nThe first thing I don't understand is why there is a difference between new directory entries and truncated db?  Sounds like you found out that autojump sometimes deletes the whole db.  Please share.  Why does autojump ever do that?\nMy other confusion is why you don't consider this a race condition.  The atomic-ness of mv is irrelevant for any single thread since mv blocks in all cases.  Even if mv is interrupted, no single thread could simultaneously call mv and read the db.  mv could fail, but then autojump would have to ignoring the error and then read.  And, even then, I'm confident mv isn't failing with the mv half completed...hmm, okay, I guess I'm not confident, but then why would mv only be failing for autojump and not other callers?. Thanks r-barnes.  You're right.  I wonder if I should close this bug?  I'm following #391 now.. Since I implemented a patch proposed in #482, I have not experienced this bug.\nI'm interested in hearing @r-barnes results, too, though.  If successful, is there a reason this \"early locking\" could not be used in autojump?. Argh!  Got an update that overwrote the patch from #482.  It happened on the next reboot.  I don't understand how other people aren't experiencing this.  It happens to me constantly.. I did have 100% success with #482.  April 21 until July 25.  I have 279 entries currently.  This suggests our situations are different, which means there are multiple triggers for this bug.  Whatever I'm doing that causes it, is always related to the different filesystems that autojump uses to managed the db, like @Frefreak suggested.  And, just as I suggested, there could be multiple code paths that lead to the same bug, some of which, I just never use but you do.. What's your distro?  Just trying to assure myself this issue isn't a package problem with my distro.\nYeah, I haven't thought of a way this could happen, so, I figure the authors will know.  I'm glad I'm not the only one experiencing this, too.. @Frefreak Cool, good thinking; I follow your logic. That could be it.\nI'd be happy to try that.  I'm using Fedora.\nDo you know the logic that lead to save()?  Just trying to piece together the scenario that causes this.\nI take it you are speculating about a race condition?  Making the move atomic will help, but I think what you really want is to make autojump_data.save() atomic.  Right?  Just fixing move() doesn't completely work, right?  I could be wrong, I just glanced at that function for a second.\nDo you know what I'm getting at? I worry that the problem is multiple entry into save(), not actually the race condition on move().. Hmm, well, I made the change and we'll see how it goes.\nYou should submit your patch, as it seems reasonable and is an improvement, regardless.  I  reused code I found elsewhere like this:\nxdg_data_home = os.path.join(os.path.expanduser('~'), '.local', 'share')\nxdg_aj_home = os.path.join(xdg_data_home, 'autojump')\ntemp = NamedTemporaryFile(delete=False, dir=xdg_aj_home)\n\nThe first thing I don't understand is why there is a difference between new directory entries and truncated db?  Sounds like you found out that autojump sometimes deletes the whole db.  Please share.  Why does autojump ever do that?\nMy other confusion is why you don't consider this a race condition.  The atomic-ness of mv is irrelevant for any single thread since mv blocks in all cases.  Even if mv is interrupted, no single thread could simultaneously call mv and read the db.  mv could fail, but then autojump would have to ignoring the error and then read.  And, even then, I'm confident mv isn't failing with the mv half completed...hmm, okay, I guess I'm not confident, but then why would mv only be failing for autojump and not other callers?. Thanks r-barnes.  You're right.  I wonder if I should close this bug?  I'm following #391 now.. ",
    "psychoslave": "did you find a solution? Same distro, same problem. Looking in every sourced filed documented \nhttp://how-to.wikia.com/wiki/Guide_to_linux_configuration_files and here https://wiki.archlinux.org/index.php/Zsh#Configuration_files adding echo, it looks like the autoujump.bash is sourced somewhere between the ~/.zshenv sourcing and the ~/.zshrc sourcing.\n. did you find a solution? Same distro, same problem. Looking in every sourced filed documented \nhttp://how-to.wikia.com/wiki/Guide_to_linux_configuration_files and here https://wiki.archlinux.org/index.php/Zsh#Configuration_files adding echo, it looks like the autoujump.bash is sourced somewhere between the ~/.zshenv sourcing and the ~/.zshrc sourcing.\n. ",
    "graywen24": "i use \nbrew install autojump  no any issue..\nthen i add the plugin in .zshrc .. after installation finished\ni am also running OSX 10.10\n. thanks all...\nclose it hahaha....\n. i use \nbrew install autojump  no any issue..\nthen i add the plugin in .zshrc .. after installation finished\ni am also running OSX 10.10\n. thanks all...\nclose it hahaha....\n. ",
    "fabianvf": "Same issue currently. Running fedora 23.\n. Same issue currently. Running fedora 23.\n. ",
    "lowks": "~/deployment \u00bb zsh --version\nzsh 5.1.1 (x86_64-ubuntu-linux-gnu)\n. lowks\u00a0\ue0b0\u00a0~\u00a0\ue0b0\u00a0setopt | grep glob                                                                                                                                                     \u00a0\ue0b2\u00a0\ue0a0\u00a0.git\u00a0\nnocaseglob\nextendedglob\nkshglob\n. Could it be a terminal thing ? I tried on gnome-terminal it works but on\nterminator it has this problem. Works on terminology as well.\nOn Wed, 9 Mar 2016 at 11:36 AM, William Ting notifications@github.com\nwrote:\n\nEven mimicking your settings I can't reproduce. I'll need to retry this\nwith zsh v5 when I have more time:\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a\n\u2570\u2500\u27a4  setopt | grep glob\nnocaseglob\nextendedglob\nkshglob\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a\n\u2570\u2500\u27a4  cd *ecd:cd:10: string not in pwd: code\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a\n\u2570\u2500\u27a4\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wting/autojump/issues/402#issuecomment-194098322.\n. ~/deployment \u00bb zsh --version\nzsh 5.1.1 (x86_64-ubuntu-linux-gnu)\n. lowks\u00a0\ue0b0\u00a0~\u00a0\ue0b0\u00a0setopt | grep glob                                                                                                                                                     \u00a0\ue0b2\u00a0\ue0a0\u00a0.git\u00a0\nnocaseglob\nextendedglob\nkshglob\n. Could it be a terminal thing ? I tried on gnome-terminal it works but on\nterminator it has this problem. Works on terminology as well.\nOn Wed, 9 Mar 2016 at 11:36 AM, William Ting notifications@github.com\nwrote:\nEven mimicking your settings I can't reproduce. I'll need to retry this\nwith zsh v5 when I have more time:\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a\n\u2570\u2500\u27a4  setopt | grep glob\nnocaseglob\nextendedglob\nkshglob\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a\n\u2570\u2500\u27a4  cd *ecd:cd:10: string not in pwd: code\n\u256d\u2500ting@noa ~ \u2039python-2.7.3\u203a\n\u2570\u2500\u27a4\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/wting/autojump/issues/402#issuecomment-194098322.\n. \n",
    "marekjm": "It is a regex thing. If the * is passed to autojump it tries to compile it as a special character, and fails - which is what the sre_constants.error: nothing to repeat is about. This pull request should fix the problem.\n. Thanks @wting !\n. It is a regex thing. If the * is passed to autojump it tries to compile it as a special character, and fails - which is what the sre_constants.error: nothing to repeat is about. This pull request should fix the problem.\n. Thanks @wting !\n. ",
    "subcrew": "Just test that on my Mac, LGTM...\nThat's not autojump's problem,  here is the problem:\nimport select\nFile \"/home/liangjj/tools/blocks/blocks/select.py\", line 5, in\n. Just test that on my Mac, LGTM...\nThat's not autojump's problem,  here is the problem:\nimport select\nFile \"/home/liangjj/tools/blocks/blocks/select.py\", line 5, in\n. ",
    "bendem": "wrong repo?\n. #405 \nPlease @burblebee, this is the 3rd time you opened an issue on the wrong repo. This is not https://github.com/cplusplus/draft\n. #405 \nPlease @burblebee, this is the 3rd time you opened an issue on the wrong repo. This is not https://github.com/cplusplus/draft\n. #405 \nPlease @burblebee, this is the 3rd time you opened an issue on the wrong repo. This is not https://github.com/cplusplus/draft\n. Your alias overrides the j command, remove it.\nAlso, https://github.com/wting/autojump/issues/397, https://github.com/wting/autojump/issues/302, https://github.com/wting/autojump/issues/291, https://github.com/wting/autojump/issues/229 all contain the same answer phrased a bit differently.\n. sh\nautojump --purge\n. From the readme:\nDirectories must be visited first before they can be jumped to.\nAlso, it's j --help to get the help (man autojump works too).\n. you might want to take a look at all the reports linked in https://github.com/wting/autojump/issues/416\n. Are you using bash and overriding your PROMPT_COMMAND? Might want to check the known issues.\n. The command is j, not f. If you set up an alias on your previous config, you'll have to do it again (echo \"alias f=j\" >> ~/.zshrc).. From the wiki\n\nManual installation of autojump is very simple: copy autojump to /usr/bin, autojump.sh to /etc/profile.d, and autojump.1 to /usr/share/man/man1. Make sure you source the appropriate file in your .bashrc:\nsh\nsource /etc/profile.d/autojump.sh\n\nIt's true that sourcing should probably be moved to the readme. But the install script's output is pretty clear about it.\n```\nAdd the following line to your ~/.bash_profile or ~/.zshrc file (and remember\nto source the file to update your current session):\n  [ -f /usr/local/etc/profile.d/autojump.sh ] && . /usr/local/etc/profile.d/autojump.sh\nIf you use the Fish shell then add the following line to your ~/.config/fish/config.fish:\n  [ -f /usr/local/share/autojump/autojump.fish ]; and source /usr/local/share/autojump/autojump.fish\n``. I have it working just fine so this has to be something specific to your environment. Make sure your user has the right to write to~/Library/autojump/autojump.txt.. That problem is specified in the man already (under Known issues). You could probably propose a pull request to homebrew (the file to change is https://github.com/Homebrew/homebrew-core/blob/b211145/Formula/autojump.rb#L26). ifj --statdoesn't show any directory, chances are, you haven'tcd'd in enough directories yet. autojump learns from your use ofcd, you can't use it before you've done that for a while.. It has been in the README for [~~4 years~~](https://github.com/wting/autojump/blob/master/README.md#description) [5 years](https://github.com/wting/autojump/commit/efa8bbcf81654347c14a7c4b3da3ae51190d23c7#diff-04c6e90faac2675aa89e2176d2eec7d8R27) now.... just liked you needed quotes to create the directories, you need quotes when invokingj`.\nj \"/home/myusr/a(b\" will work.. What I'm saying is, j /home/pablo/a(b is a syntax error, the command never gets to autojump, it's just not a valid bash command.. the error on j \"/home/pablo/a(b\" implies the user input should be escaped before trying to apply it as a regex search tho. That ought to be fixed. I know this isn't what you want, but what's wrong with cd to get back to your home?. did you try the part where it says \"read the post installation instructions\"?\nhttps://github.com/wting/autojump#installation. and brew install shows you instructions after install. There is a reason it's there.\nhttps://github.com/Homebrew/homebrew-core/blob/b6b9f36c8744c2259b74f12850163c676ae49396/Formula/autojump.rb#L27-L35. wrong repo?\n. #405 \nPlease @burblebee, this is the 3rd time you opened an issue on the wrong repo. This is not https://github.com/cplusplus/draft\n. #405 \nPlease @burblebee, this is the 3rd time you opened an issue on the wrong repo. This is not https://github.com/cplusplus/draft\n. #405 \nPlease @burblebee, this is the 3rd time you opened an issue on the wrong repo. This is not https://github.com/cplusplus/draft\n. Your alias overrides the j command, remove it.\nAlso, https://github.com/wting/autojump/issues/397, https://github.com/wting/autojump/issues/302, https://github.com/wting/autojump/issues/291, https://github.com/wting/autojump/issues/229 all contain the same answer phrased a bit differently.\n. sh\nautojump --purge\n. From the readme:\nDirectories must be visited first before they can be jumped to.\nAlso, it's j --help to get the help (man autojump works too).\n. you might want to take a look at all the reports linked in https://github.com/wting/autojump/issues/416\n. Are you using bash and overriding your PROMPT_COMMAND? Might want to check the known issues.\n. The command is j, not f. If you set up an alias on your previous config, you'll have to do it again (echo \"alias f=j\" >> ~/.zshrc).. From the wiki\n\nManual installation of autojump is very simple: copy autojump to /usr/bin, autojump.sh to /etc/profile.d, and autojump.1 to /usr/share/man/man1. Make sure you source the appropriate file in your .bashrc:\nsh\nsource /etc/profile.d/autojump.sh\n\nIt's true that sourcing should probably be moved to the readme. But the install script's output is pretty clear about it.\n```\nAdd the following line to your ~/.bash_profile or ~/.zshrc file (and remember\nto source the file to update your current session):\n  [ -f /usr/local/etc/profile.d/autojump.sh ] && . /usr/local/etc/profile.d/autojump.sh\nIf you use the Fish shell then add the following line to your ~/.config/fish/config.fish:\n  [ -f /usr/local/share/autojump/autojump.fish ]; and source /usr/local/share/autojump/autojump.fish\n``. I have it working just fine so this has to be something specific to your environment. Make sure your user has the right to write to~/Library/autojump/autojump.txt.. That problem is specified in the man already (under Known issues). You could probably propose a pull request to homebrew (the file to change is https://github.com/Homebrew/homebrew-core/blob/b211145/Formula/autojump.rb#L26). ifj --statdoesn't show any directory, chances are, you haven'tcd'd in enough directories yet. autojump learns from your use ofcd, you can't use it before you've done that for a while.. It has been in the README for [~~4 years~~](https://github.com/wting/autojump/blob/master/README.md#description) [5 years](https://github.com/wting/autojump/commit/efa8bbcf81654347c14a7c4b3da3ae51190d23c7#diff-04c6e90faac2675aa89e2176d2eec7d8R27) now.... just liked you needed quotes to create the directories, you need quotes when invokingj`.\nj \"/home/myusr/a(b\" will work.. What I'm saying is, j /home/pablo/a(b is a syntax error, the command never gets to autojump, it's just not a valid bash command.. the error on j \"/home/pablo/a(b\" implies the user input should be escaped before trying to apply it as a regex search tho. That ought to be fixed. I know this isn't what you want, but what's wrong with cd to get back to your home?. did you try the part where it says \"read the post installation instructions\"?\nhttps://github.com/wting/autojump#installation. and brew install shows you instructions after install. There is a reason it's there.\nhttps://github.com/Homebrew/homebrew-core/blob/b6b9f36c8744c2259b74f12850163c676ae49396/Formula/autojump.rb#L27-L35. ",
    "burblebee": "My apologies.  Issue moved to https://github.com/cplusplus/draft/issues/688\n. My apologies.  Issue moved to https://github.com/cplusplus/draft/issues/689\n. My apologies.  Issue moved to https://github.com/cplusplus/draft/issues/687.\n. My apologies.  Issue moved to https://github.com/cplusplus/draft/issues/688\n. My apologies.  Issue moved to https://github.com/cplusplus/draft/issues/689\n. My apologies.  Issue moved to https://github.com/cplusplus/draft/issues/687.\n. ",
    "najamkhn": "You just have to do brew info autojump and follow the instructions.\n. You just have to do brew info autojump and follow the instructions.\n. ",
    "banshengbushu": "so  cool!!!\n. so  cool!!!\n. ",
    "suzaku": "I have rewritten the core part of autojump in Go myself, so I'll just close this PR.\n. I happened to fix this bug when I rewrote match_consecutive in my PR:\nhttps://github.com/wting/autojump/pull/410/files#diff-8bec6056c55a744413afb81f56117208R83\n. I have rewritten the core part of autojump in Go myself, so I'll just close this PR.\n. I happened to fix this bug when I rewrote match_consecutive in my PR:\nhttps://github.com/wting/autojump/pull/410/files#diff-8bec6056c55a744413afb81f56117208R83\n. ",
    "ivanberry": "THX you guys all, I should Google more before open this issue! sorry for bother. :bow: \n. THX you guys all, I should Google more before open this issue! sorry for bother. :bow: \n. ",
    "Fire-Dragon-DoL": "Just to confirm, I installed autojump today and was really confused why it was always showing a red dot, especially with the jc (since it's a child directory, it was logical for me to work, while I correctly guessed j wouldn't work without first entering in directories). Lucky I digged into issues suspecting I didn't know how to use it.\nThe fact that it's not highlighted in the README, the wiki is very brief (although helped with install instructions) and the --help don't suggest anything, I highly recommend some improvements ;). Just to confirm, I installed autojump today and was really confused why it was always showing a red dot, especially with the jc (since it's a child directory, it was logical for me to work, while I correctly guessed j wouldn't work without first entering in directories). Lucky I digged into issues suspecting I didn't know how to use it.\nThe fact that it's not highlighted in the README, the wiki is very brief (although helped with install instructions) and the --help don't suggest anything, I highly recommend some improvements ;). ",
    "ksrik": "Tried j ebooks\nIt does not work. I added the path again and tried, but it still fails.\nEven j \"My eBooks\" does not work.\nError is autojump: directory \"My ebooks\" not found.\nI am using version 22.2.4.\nRegards,\nSrikk\n. Is any fix coming soon?\n. Tried j ebooks\nIt does not work. I added the path again and tried, but it still fails.\nEven j \"My eBooks\" does not work.\nError is autojump: directory \"My ebooks\" not found.\nI am using version 22.2.4.\nRegards,\nSrikk\n. Is any fix coming soon?\n. ",
    "zlwen": "thx @bendem \n. thx @bendem \n. ",
    "vlachoudis": "I've opened the autojump.txt and it was corrupted. It had several kb of garbage and then it was followed by the normal weight/directory\n. Thanks\n. I've opened the autojump.txt and it was corrupted. It had several kb of garbage and then it was followed by the normal weight/directory\n. Thanks\n. ",
    "wangbourne": "you are right, thanks ,so much :)\n. you are right, thanks ,so much :)\n. ",
    "Ramblurr": "Gah! I thought I was going crazy, then realized fish had gotten an update.\nStrangely, if I manually source the script after my shell is booted up it works, see:\n``` bash\nlast line in fish config\nauto jump\n[ -f /usr/local/share/autojump/autojump.fish ]; and source /usr/local/share/autojump/autojump.fish\n```\n```\nnew shell\n$ j somewhere\ntest: Expected a combining operator like '-a' at index 1\nautojump: directory 'somewhere' not found\nPlease source the correct autojump file in your shell's startup file. For more information, please reinstall autojump and read the post installation instructions.\nTry autojump --help for more information.\n$ source /usr/local/share/autojump/autojump.fish\n$ j somewhere\ncd: The directory 'somewhere' does not exist\n```\nfish 2.3.0 release notes https://fishshell.com/release_notes.html\n. Gah! I thought I was going crazy, then realized fish had gotten an update.\nStrangely, if I manually source the script after my shell is booted up it works, see:\n``` bash\nlast line in fish config\nauto jump\n[ -f /usr/local/share/autojump/autojump.fish ]; and source /usr/local/share/autojump/autojump.fish\n```\n```\nnew shell\n$ j somewhere\ntest: Expected a combining operator like '-a' at index 1\nautojump: directory 'somewhere' not found\nPlease source the correct autojump file in your shell's startup file. For more information, please reinstall autojump and read the post installation instructions.\nTry autojump --help for more information.\n$ source /usr/local/share/autojump/autojump.fish\n$ j somewhere\ncd: The directory 'somewhere' does not exist\n```\nfish 2.3.0 release notes https://fishshell.com/release_notes.html\n. ",
    "pvdb": "Thanks for the clarification, @jared-hess, makes sense... personally, I don't think my workflow would benefit from that kind of functionality, so will stick to cdargs for now... may revisit autojump at a later stage, though!\n. Thanks for the clarification, @jared-hess, makes sense... personally, I don't think my workflow would benefit from that kind of functionality, so will stick to cdargs for now... may revisit autojump at a later stage, though!\n. ",
    "bytor99999": "That is exactly what I followed, and the same with the link bendem posted. That was the first place I looked when it wasn't working. The weird thing is that it only displays the directory and not cd into it.\nI have added \n[[ -s /Users/me/.autojump/etc/profile.d/autojump.sh ]] && source /Users/me/.autojump/etc/profile.d/autojump.sh\nautoload -U compinit && compinit -u\nto my .zshrc and re sourced the file. But this is all I got was the directory displayed not cd'd into.\nBut I think the issue in my case and for people's future reference is a long time ago we needed to have an alias for autojump, so in my alias.zsh file I had a line\nalias j=\"autojump\"\nWhich when I just removed it, autojump started to work. And with just \"j\" and no alias needed.\nThanks\nMark\n. That is exactly what I followed, and the same with the link bendem posted. That was the first place I looked when it wasn't working. The weird thing is that it only displays the directory and not cd into it.\nI have added \n[[ -s /Users/me/.autojump/etc/profile.d/autojump.sh ]] && source /Users/me/.autojump/etc/profile.d/autojump.sh\nautoload -U compinit && compinit -u\nto my .zshrc and re sourced the file. But this is all I got was the directory displayed not cd'd into.\nBut I think the issue in my case and for people's future reference is a long time ago we needed to have an alias for autojump, so in my alias.zsh file I had a line\nalias j=\"autojump\"\nWhich when I just removed it, autojump started to work. And with just \"j\" and no alias needed.\nThanks\nMark\n. ",
    "jpcofr": "Uh thanks. I was aware of that but I do not know why it was opening a new console at the directory given by parameter. (btw it sounds like a good feature to have)\n. Yeah, as you said, I did not copy the entire line at the post-installation message given I just started to use fishshell the last week. I just copy the entire line, not only the first part. Again thanks for your patience. \n. Uh thanks. I was aware of that but I do not know why it was opening a new console at the directory given by parameter. (btw it sounds like a good feature to have)\n. Yeah, as you said, I did not copy the entire line at the post-installation message given I just started to use fishshell the last week. I just copy the entire line, not only the first part. Again thanks for your patience. \n. ",
    "nayefc": "Yup that was it. Didn't notice that. Thanks.\n. Yup that was it. Didn't notice that. Thanks.\n. ",
    "glucas": "Just trying out autojump on Win10 and hit this. The proposed patch seems to work for me.\n. @wting If the tests are not actually executed on Windows, won't the match_consecutive tests pick up the wrong os.sep? The tests won't actually fail unless os.sep is a backslash. \n. Just trying out autojump on Win10 and hit this. The proposed patch seems to work for me.\n. @wting If the tests are not actually executed on Windows, won't the match_consecutive tests pick up the wrong os.sep? The tests won't actually fail unless os.sep is a backslash. \n. ",
    "willyd": "I had the same problem and the suggested fix solved the problem. I guess that an alternative solution would be to run the tests on a windows CI platform such as appveyor.\n. I had the same problem and the suggested fix solved the problem. I guess that an alternative solution would be to run the tests on a windows CI platform such as appveyor.\n. ",
    "scottming": "Thanks, I added the flowing code to my ~/.zshrc and ~/.bashrc, It works.\n``` bash\njump_and_open() {\n    j ${1} && jo ${1}\n}\nalias jo=jump_and_open\n``\n. Thanks, I added the flowing code to my~/.zshrcand~/.bashrc`, It works.\n``` bash\njump_and_open() {\n    j ${1} && jo ${1}\n}\nalias jo=jump_and_open\n```\n. ",
    "shenchsh": "Thanks! I have solved this problem by using this repository and using install.py\n. Thanks! I have solved this problem by using this repository and using install.py\n. ",
    "justpsvm": "Turns out to be the brew doesn't support....\n. Turns out to be the brew doesn't support....\n. ",
    "sodiumjoe": "Hey thanks for the reply!\nBefore you go on, be warned that i know just enough zsh to be dangerous.\n\nEnvironment variables aren't persistent between shells.\n\nin .zshrc you're using the . operator:\nbash\n[[ -s $(brew --prefix)/etc/profile.d/autojump.sh ]] && . $(brew --prefix)/etc/profile.d/autojump.sh\nand in autojump.sh, source:\n``` bash\ncheck global install\nelif [ -s /usr/local/share/autojump/autojump.${shell} ]; then\n    source /usr/local/share/autojump/autojump.${shell}\nfi\n```\nSome quick googling indicates that . and source are basically interchangeable, so I'm not sure what your reasons are for using them respectively, but in both cases, it appears they don't spawn a new subshell, so they would have access to any environment variables. I tested this by setting BREW_PREFIX='/usr/local' and changing the commands to \nbash\n[[ -s /usr/local/etc/profile.d/autojump.sh ]] && . ${BREW_PREFIX}/etc/profile.d/autojump.sh\nand\n```\ncheck global install\nelif [ -s ${BREW_PREFIX}/share/autojump/autojump.${shell} ]; then\n    source ${BREW_PREFIX}/share/autojump/autojump.${shell}\nfi\n```\nand that appears to work fine. You could also put guards in like:\nbash\nBREW_PREFIX=$BREW_PREFIX || $(brew --prefix)\nwherever the env var is referenced.\n\nThis requires manual syncing of the env var and brew installs, and isn't user friendly.\n\nagreed, but it would be nice to have the option to set it directly instead of running brew --prefix, and if the installer just set BREW_PREFIX=$(brew --prefix) in .zshrc, i could just change it myself.\n\nis there any better evidence that localizes the issue to brew\n\nbest i can do is:\nbash\n\u27a4  /usr/bin/time brew --prefix`\nconsistently takes about .1ms\nwhile\nbash\n\u27a4  /usr/bin/time brew\nconsistently takes about .45ms\nIf you have any ideas about how to prove that out further, I'd be happy to do the legwork.\n. > Can you please reproduce these performance results with the version from GitHub (v22.3.5)?\nI was on the latest autojump from brew, which reported it as that version:\nbash\n ~ \u27a4  brew info autojump\nautojump: stable 22.3.5 (bottled), HEAD\nbut I just installed manually and everything is much faster now! (looks like you removed brew --prefix) from the .zshrc snippet)\nnow my zsh startup time averages around:\nbash\n\u27a4  /usr/bin/time /bin/zsh -i -c exit\n        0.18 real         0.12 user         0.06 sys\nchanging ~/.autojump/share/autojump/autojump.zsh to\nbash\nlocal brew_prefix=$(brew --prefix)\nif [[ -d \"${brew_prefix}/share/zsh/site-functions\" ]]; then\n    fpath=(\"${brew_prefix}/share/zsh/site-functions\" ${fpath})\nfi\ncuts out one brew --prefix call and shaves a around .03ms\nchanging it to:\nbash\nlocal brew_prefix=${BREW_PREFIX:-$(brew --prefix)}\nif [[ -d \"${brew_prefix}/share/zsh/site-functions\" ]]; then\n    fpath=(\"${brew_prefix}/share/zsh/site-functions\" ${fpath})\nfi\nand setting BREW_PREFIX myself in .zshrc shaves it another .03ms, while leaving the operation the same if BREW_PREFIX is unset.\nWould you accept that in a PR?\n. oh yikes, i guess that was what the\nbash\ncommand -v brew &>/dev/null &&\nwas for. I'll make a new PR adding that back in and test it with no homebrew install\n. i restored the command -v brew check and tested with brew unset. Is there another way I should test, too?\n. Hey thanks for the reply!\nBefore you go on, be warned that i know just enough zsh to be dangerous.\n\nEnvironment variables aren't persistent between shells.\n\nin .zshrc you're using the . operator:\nbash\n[[ -s $(brew --prefix)/etc/profile.d/autojump.sh ]] && . $(brew --prefix)/etc/profile.d/autojump.sh\nand in autojump.sh, source:\n``` bash\ncheck global install\nelif [ -s /usr/local/share/autojump/autojump.${shell} ]; then\n    source /usr/local/share/autojump/autojump.${shell}\nfi\n```\nSome quick googling indicates that . and source are basically interchangeable, so I'm not sure what your reasons are for using them respectively, but in both cases, it appears they don't spawn a new subshell, so they would have access to any environment variables. I tested this by setting BREW_PREFIX='/usr/local' and changing the commands to \nbash\n[[ -s /usr/local/etc/profile.d/autojump.sh ]] && . ${BREW_PREFIX}/etc/profile.d/autojump.sh\nand\n```\ncheck global install\nelif [ -s ${BREW_PREFIX}/share/autojump/autojump.${shell} ]; then\n    source ${BREW_PREFIX}/share/autojump/autojump.${shell}\nfi\n```\nand that appears to work fine. You could also put guards in like:\nbash\nBREW_PREFIX=$BREW_PREFIX || $(brew --prefix)\nwherever the env var is referenced.\n\nThis requires manual syncing of the env var and brew installs, and isn't user friendly.\n\nagreed, but it would be nice to have the option to set it directly instead of running brew --prefix, and if the installer just set BREW_PREFIX=$(brew --prefix) in .zshrc, i could just change it myself.\n\nis there any better evidence that localizes the issue to brew\n\nbest i can do is:\nbash\n\u27a4  /usr/bin/time brew --prefix`\nconsistently takes about .1ms\nwhile\nbash\n\u27a4  /usr/bin/time brew\nconsistently takes about .45ms\nIf you have any ideas about how to prove that out further, I'd be happy to do the legwork.\n. > Can you please reproduce these performance results with the version from GitHub (v22.3.5)?\nI was on the latest autojump from brew, which reported it as that version:\nbash\n ~ \u27a4  brew info autojump\nautojump: stable 22.3.5 (bottled), HEAD\nbut I just installed manually and everything is much faster now! (looks like you removed brew --prefix) from the .zshrc snippet)\nnow my zsh startup time averages around:\nbash\n\u27a4  /usr/bin/time /bin/zsh -i -c exit\n        0.18 real         0.12 user         0.06 sys\nchanging ~/.autojump/share/autojump/autojump.zsh to\nbash\nlocal brew_prefix=$(brew --prefix)\nif [[ -d \"${brew_prefix}/share/zsh/site-functions\" ]]; then\n    fpath=(\"${brew_prefix}/share/zsh/site-functions\" ${fpath})\nfi\ncuts out one brew --prefix call and shaves a around .03ms\nchanging it to:\nbash\nlocal brew_prefix=${BREW_PREFIX:-$(brew --prefix)}\nif [[ -d \"${brew_prefix}/share/zsh/site-functions\" ]]; then\n    fpath=(\"${brew_prefix}/share/zsh/site-functions\" ${fpath})\nfi\nand setting BREW_PREFIX myself in .zshrc shaves it another .03ms, while leaving the operation the same if BREW_PREFIX is unset.\nWould you accept that in a PR?\n. oh yikes, i guess that was what the\nbash\ncommand -v brew &>/dev/null &&\nwas for. I'll make a new PR adding that back in and test it with no homebrew install\n. i restored the command -v brew check and tested with brew unset. Is there another way I should test, too?\n. ",
    "danielb2": "What do you mean? Fishshell manages to use ~/.config/fish just fine.   neovim uses ~/.config/nvim just fine.  autojump can't ?\n. Freedesktop is an X windows thing, and X windows is not limited to Linux. It's a UNIX thing. It may not be a OSX thing, but OSX is part of the UNIX thing. \nAnyway, I don't care enough. It's just odd since them majority of commandline tools (I'm guessting 99%) follow a convention of using ~/.dotfiles of some form or another to store config files.\n. What do you mean? Fishshell manages to use ~/.config/fish just fine.   neovim uses ~/.config/nvim just fine.  autojump can't ?\n. Freedesktop is an X windows thing, and X windows is not limited to Linux. It's a UNIX thing. It may not be a OSX thing, but OSX is part of the UNIX thing. \nAnyway, I don't care enough. It's just odd since them majority of commandline tools (I'm guessting 99%) follow a convention of using ~/.dotfiles of some form or another to store config files.\n. ",
    "epsilon-phase": "The help says\n\n--purge               remove non-existent paths from database\n\nnon-existent paths\nIf you want to delete the database, then delete the file that shows up with the stats argument as the data file, for me that's ~/.local/share/autojump/autojump.txt. you should try \nautojump -s\nit will print a bunch of information ending with \ndata:<filename>. The help says\n\n--purge               remove non-existent paths from database\n\nnon-existent paths\nIf you want to delete the database, then delete the file that shows up with the stats argument as the data file, for me that's ~/.local/share/autojump/autojump.txt. you should try \nautojump -s\nit will print a bunch of information ending with \ndata:<filename>. ",
    "rmNULL": "this can be handled by moving the shutil call inside the try block. It would be nice if you can be a little more explicit on what \"gracefully handle\" means.. this can be handled by moving the shutil call inside the try block. It would be nice if you can be a little more explicit on what \"gracefully handle\" means.. ",
    "csaid": "Thanks for the response! Regarding your last example: I think if a user attempts to jump to a directory they are already in, perhaps there could just be a message that says \"Already in directory!\" That would be more expected than jumping to a surprise directory.\nBTW, thank you for writing this package. Aside from this one issue, I've found it very useful.\n. Thanks, is there any chance there could be an option or setting to have the behavior I described, for those who want it? \nI'm not sure about other users, but my experience is that when this issue does end up happening, I don't notice initially. And then I do some damage in the directory I'm in (or just am confused for a bit). And then only after some time do I realize what happened. Conversely, I've never needed the use case that you described earlier in the thread. I'm not sure if I'm alone on this though.\n. Thanks, is there any chance there could be an option or setting to have the\nbehavior I described, for those who want it? I'm not sure about other\nusers, but my experience is that when this does end up happening, I don't\nnotice initially. And then I do some damage in the directory I'm in (or\njust am confused for a bit). And then only after some time do I realize\nwhat happened. Conversely, I've never needed the use case that you\ndescribed earlier in the thread.\nOn Thu, Oct 20, 2016 at 3:41 PM, William Ting notifications@github.com\nwrote:\n\nI think it's a better design principle to build something that does what\nthe user asks, rather than try and do better by anticipating the users'\nintent. In the last scenario, what is the user's intent?\n1. Jump to a better result. (This action is reversible.)\n2. User made a mistake, do nothing. (This action is not reversible.)\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/wting/autojump/issues/452#issuecomment-255248165, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AAyvbc5gnRjd7MjSi4UcxhUsYQObEvcAks5q1-4XgaJpZM4KcivT\n.\n. Thanks for the response! Regarding your last example: I think if a user attempts to jump to a directory they are already in, perhaps there could just be a message that says \"Already in directory!\" That would be more expected than jumping to a surprise directory.\n\nBTW, thank you for writing this package. Aside from this one issue, I've found it very useful.\n. Thanks, is there any chance there could be an option or setting to have the behavior I described, for those who want it? \nI'm not sure about other users, but my experience is that when this issue does end up happening, I don't notice initially. And then I do some damage in the directory I'm in (or just am confused for a bit). And then only after some time do I realize what happened. Conversely, I've never needed the use case that you described earlier in the thread. I'm not sure if I'm alone on this though.\n. Thanks, is there any chance there could be an option or setting to have the\nbehavior I described, for those who want it? I'm not sure about other\nusers, but my experience is that when this does end up happening, I don't\nnotice initially. And then I do some damage in the directory I'm in (or\njust am confused for a bit). And then only after some time do I realize\nwhat happened. Conversely, I've never needed the use case that you\ndescribed earlier in the thread.\nOn Thu, Oct 20, 2016 at 3:41 PM, William Ting notifications@github.com\nwrote:\n\nI think it's a better design principle to build something that does what\nthe user asks, rather than try and do better by anticipating the users'\nintent. In the last scenario, what is the user's intent?\n1. Jump to a better result. (This action is reversible.)\n2. User made a mistake, do nothing. (This action is not reversible.)\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/wting/autojump/issues/452#issuecomment-255248165, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AAyvbc5gnRjd7MjSi4UcxhUsYQObEvcAks5q1-4XgaJpZM4KcivT\n.\n. \n",
    "tennysondy": "same issue. meet the same problem. same issue. meet the same problem. ",
    "wangwpf": "I have encountered this problem, is there a solution?\nOS:  Ubuntu 12.04\npython: 2.7.3\nshell: zsh. I have encountered this problem, is there a solution?\nOS:  Ubuntu 12.04\npython: 2.7.3\nshell: zsh. ",
    "ampedandwired": "Same here:\nTraceback (most recent call last):\n  File \"/usr/bin/autojump\", line 420, in <module>\n    sys.exit(main(parse_arguments()))\n  File \"/usr/bin/autojump\", line 392, in main\n    entries = entriefy(load(config))\n  File \"/usr/share/autojump/autojump_data.py\", line 81, in load\n    ifilter(correct_length, imap(parse, f))))\n  File \"/usr/share/autojump/autojump_data.py\", line 71, in <lambda>\n    tupleize = lambda x: (x[1], float(x[0]))\nValueError: could not convert string to float: 'j\ufffd\ufffd\\x16\ufffd\ufffdL'\nLooks like there's some garbage in the database somehow.. I found a database backup in ~/.local/share/autojump/autojump.txt.bak. Restoring this resolved the problem for me. So seems that somehow corrupted data is getting into the autojump DB which causes the exception.. Same here:\nTraceback (most recent call last):\n  File \"/usr/bin/autojump\", line 420, in <module>\n    sys.exit(main(parse_arguments()))\n  File \"/usr/bin/autojump\", line 392, in main\n    entries = entriefy(load(config))\n  File \"/usr/share/autojump/autojump_data.py\", line 81, in load\n    ifilter(correct_length, imap(parse, f))))\n  File \"/usr/share/autojump/autojump_data.py\", line 71, in <lambda>\n    tupleize = lambda x: (x[1], float(x[0]))\nValueError: could not convert string to float: 'j\ufffd\ufffd\\x16\ufffd\ufffdL'\nLooks like there's some garbage in the database somehow.. I found a database backup in ~/.local/share/autojump/autojump.txt.bak. Restoring this resolved the problem for me. So seems that somehow corrupted data is getting into the autojump DB which causes the exception.. ",
    "pabloab": "In my case autojump.txt became completely binary/\"garbage\" after autojump crash (don't know why). strings autojump.txt doesn't give anything useful. Fixed overwriting with autojump.txt.bak. Compared side by side with an hex editor and at least at first look I could't find any pattern. Using v22.2.4, Python 2.7.12.. I do the same steps with a directory with a space in it name and work perfectly. The problem is with parentheses. autojump suggest me the alternatives and just paste the whole path with the parentheses there, if I have to go to the start and to the end to put quotes then is not so handy/fast as it supposed. Either way, I tried with quotes and autojump crash:\npablo ~/a(b $ cd ..\npablo ~ $ j a__\na__1__/home/pablo/Downloads     \na__2__/home/pablo/a(b\npablo ~ $ j /home/pablo/a(b \nbash: syntax error near unexpected token `('\npablo ~ $ j \"/home/pablo/a(b\" \nTraceback (most recent call last):\n  File \"/usr/bin/autojump\", line 420, in <module>\n    sys.exit(main(parse_arguments()))\n  File \"/usr/bin/autojump\", line 414, in main\n    ['.'])))\n  File \"/usr/share/autojump/autojump_utils.py\", line 42, in first\n    return it.__next__()\n  File \"/usr/bin/autojump\", line 287, in <lambda>\n    flags=regex_flags)\n  File \"/usr/lib/python3.5/re.py\", line 173, in search\n    return _compile(pattern, flags).search(string)\n  File \"/usr/lib/python3.5/re.py\", line 293, in _compile\n    p = sre_compile.compile(pattern, flags)\n  File \"/usr/lib/python3.5/sre_compile.py\", line 536, in compile\n    p = sre_parse.parse(p, flags)\n  File \"/usr/lib/python3.5/sre_parse.py\", line 829, in parse\n    p = _parse_sub(source, pattern, 0)\n  File \"/usr/lib/python3.5/sre_parse.py\", line 437, in _parse_sub\n    itemsappend(_parse(source, state))\n  File \"/usr/lib/python3.5/sre_parse.py\", line 781, in _parse\n    source.tell() - start)\nsre_constants.error: missing ), unterminated subpattern at position 13\nautojump: directory '/home/pablo/a(b' not found\n\\n\\n\nTry `autojump --help` for more information.\nAs you can see on the first line the directory exist.. Strange enough, I was able to jump to a folder with a space in it without closing with quotes. Recently I tried again and autojump crash:\nTraceback (most recent call last):\n  File \"/usr/bin/autojump\", line 420, in <module>\n    sys.exit(main(parse_arguments()))\n  File \"/usr/bin/autojump\", line 409, in main\n    find_matches(entries, [tab_needle])))\n  File \"/usr/bin/autojump\", line 405, in <lambda>\n    get_ith_path = lambda i, iterable: last(take(i, iterable)).path\nAttributeError: 'NoneType' object has no attribute 'path'\nautojump: directory 'Aban__1' not found\n\\n\\n\nTry `autojump --help` for more information.\nIf quotes are needed also before autojump is reached maybe bash_completion script should be fixed.\nThis looks pretty critical, I hope @wting (or anyone with the time and knowledge) could see it soon.\nBTW, I'm using autojump v22.2.4.. In my case autojump.txt became completely binary/\"garbage\" after autojump crash (don't know why). strings autojump.txt doesn't give anything useful. Fixed overwriting with autojump.txt.bak. Compared side by side with an hex editor and at least at first look I could't find any pattern. Using v22.2.4, Python 2.7.12.. I do the same steps with a directory with a space in it name and work perfectly. The problem is with parentheses. autojump suggest me the alternatives and just paste the whole path with the parentheses there, if I have to go to the start and to the end to put quotes then is not so handy/fast as it supposed. Either way, I tried with quotes and autojump crash:\npablo ~/a(b $ cd ..\npablo ~ $ j a__\na__1__/home/pablo/Downloads     \na__2__/home/pablo/a(b\npablo ~ $ j /home/pablo/a(b \nbash: syntax error near unexpected token `('\npablo ~ $ j \"/home/pablo/a(b\" \nTraceback (most recent call last):\n  File \"/usr/bin/autojump\", line 420, in <module>\n    sys.exit(main(parse_arguments()))\n  File \"/usr/bin/autojump\", line 414, in main\n    ['.'])))\n  File \"/usr/share/autojump/autojump_utils.py\", line 42, in first\n    return it.__next__()\n  File \"/usr/bin/autojump\", line 287, in <lambda>\n    flags=regex_flags)\n  File \"/usr/lib/python3.5/re.py\", line 173, in search\n    return _compile(pattern, flags).search(string)\n  File \"/usr/lib/python3.5/re.py\", line 293, in _compile\n    p = sre_compile.compile(pattern, flags)\n  File \"/usr/lib/python3.5/sre_compile.py\", line 536, in compile\n    p = sre_parse.parse(p, flags)\n  File \"/usr/lib/python3.5/sre_parse.py\", line 829, in parse\n    p = _parse_sub(source, pattern, 0)\n  File \"/usr/lib/python3.5/sre_parse.py\", line 437, in _parse_sub\n    itemsappend(_parse(source, state))\n  File \"/usr/lib/python3.5/sre_parse.py\", line 781, in _parse\n    source.tell() - start)\nsre_constants.error: missing ), unterminated subpattern at position 13\nautojump: directory '/home/pablo/a(b' not found\n\\n\\n\nTry `autojump --help` for more information.\nAs you can see on the first line the directory exist.. Strange enough, I was able to jump to a folder with a space in it without closing with quotes. Recently I tried again and autojump crash:\nTraceback (most recent call last):\n  File \"/usr/bin/autojump\", line 420, in <module>\n    sys.exit(main(parse_arguments()))\n  File \"/usr/bin/autojump\", line 409, in main\n    find_matches(entries, [tab_needle])))\n  File \"/usr/bin/autojump\", line 405, in <lambda>\n    get_ith_path = lambda i, iterable: last(take(i, iterable)).path\nAttributeError: 'NoneType' object has no attribute 'path'\nautojump: directory 'Aban__1' not found\n\\n\\n\nTry `autojump --help` for more information.\nIf quotes are needed also before autojump is reached maybe bash_completion script should be fixed.\nThis looks pretty critical, I hope @wting (or anyone with the time and knowledge) could see it soon.\nBTW, I'm using autojump v22.2.4.. ",
    "jeffsilverm": "Have you made any progress with this issue?  In my case, the problem was a bad regex: rb\"[(\\#)\" which should be rb\"(\\#)\".  It was my error.. Have you made any progress with this issue?  In my case, the problem was a bad regex: rb\"[(\\#)\" which should be rb\"(\\#)\".  It was my error.. ",
    "RJPercival": "I've noticed that the code explicitly says it doesn't do this (https://github.com/wting/autojump/blob/master/bin/autojump#L139). I'm using the version of autojump packaged with Ubuntu 14.04 LTS, which is v21.6.9. I'll try using the latest version from this repo and see if that fixes it.. Yes, using the latest version resolves this.. I've noticed that the code explicitly says it doesn't do this (https://github.com/wting/autojump/blob/master/bin/autojump#L139). I'm using the version of autojump packaged with Ubuntu 14.04 LTS, which is v21.6.9. I'll try using the latest version from this repo and see if that fixes it.. Yes, using the latest version resolves this.. ",
    "markasoftware": "Thanks for the wiki link, didn't see that.. Thanks for the wiki link, didn't see that.. ",
    "jigargosar": "Just checked. Works perfectly for me. I am using following software versions. Anyone still having problems?\nautojump v22.5.1 \nmacOS Sierra 10.12.3\nfish, version 2.5.0\nHomebrew 1.1.10\nHomebrew/homebrew-core (git revision d88f2; last commit 2017-02-24)\niTerm2 3.0.14\n. @wting this issue can be safely closed. \n@sdondley Please reopen if you still face any issue.\n* Do try a clean install or source install, without using brew. \n. \nJust checked. Works perfectly for me. I am using following software versions. Anyone still having problems?\nautojump v22.5.1 \nmacOS Sierra 10.12.3\nfish, version 2.5.0\nHomebrew 1.1.10\nHomebrew/homebrew-core (git revision d88f2; last commit 2017-02-24)\niTerm2 3.0.14\n. @wting this issue can be safely closed. \n@sdondley Please reopen if you still face any issue.\n* Do try a clean install or source install, without using brew. \n. ",
    "sdondley": "Seems I'm behind in my versions. I have aj version 22.2.4. Homebrew 0.9.5. Running brew update throws a permission error. Ugh. . Seems I'm behind in my versions. I have aj version 22.2.4. Homebrew 0.9.5. Running brew update throws a permission error. Ugh. . ",
    "fntneves": "I'm experiencing the same issue. I'm experiencing the same issue. ",
    "tylucaskelley": "Same issue for me, using Bash 4 on macOS 10.12. Autojump version is 22.5.1. My .bashrc is set up according to the recommendations and there were no installation issues. Whenever I change to another directory, it's not added to the autojump.txt file.\n. Turns out the issue was with my PROMPT_COMMAND being set to something else; should have thought of this but I'd installed autojump well after setting my prompt command. I wonder if it'd be beneficial to not only have this warning in the manpage but also in the post-install text when installing via Homebrew? . Same issue for me, using Bash 4 on macOS 10.12. Autojump version is 22.5.1. My .bashrc is set up according to the recommendations and there were no installation issues. Whenever I change to another directory, it's not added to the autojump.txt file.\n. Turns out the issue was with my PROMPT_COMMAND being set to something else; should have thought of this but I'd installed autojump well after setting my prompt command. I wonder if it'd be beneficial to not only have this warning in the manpage but also in the post-install text when installing via Homebrew? . ",
    "Kerren": "Hey man,\nI use rupa/z on Windows bash and I was getting a very similar error:\n_z_precmd:1: nice(5) failed: operation not permitted\nCheck out my fork to see how I fixed it at https://github.com/Kerren/z.\nBasically, you've got to redirect that standard output to null. Autojump should still work perfectly. Unfortunately, I haven't used autojump and I'm very happy with z so I won't be able to find where this bug comes from but it's definitely able to be fixed! You just need to find the line where autojump_chpwd occurs and add >/dev/null 2>&1 to the end of it.\nGood luck!. Hey man,\nI use rupa/z on Windows bash and I was getting a very similar error:\n_z_precmd:1: nice(5) failed: operation not permitted\nCheck out my fork to see how I fixed it at https://github.com/Kerren/z.\nBasically, you've got to redirect that standard output to null. Autojump should still work perfectly. Unfortunately, I haven't used autojump and I'm very happy with z so I won't be able to find where this bug comes from but it's definitely able to be fixed! You just need to find the line where autojump_chpwd occurs and add >/dev/null 2>&1 to the end of it.\nGood luck!. ",
    "ruixingw": "Hi. Do you also use WSL on Creators Update?\nI think this is not a problem of Autojump, see the issue I just opened https://github.com/Microsoft/BashOnWindows/issues/1887.. @pgrm : @daiconrad has given a good workaround: add this to your .zshrc:\n\nunsetopt BG_NICE\n\nI guess you can close this issue now and let's wait for its origin: https://github.com/Microsoft/BashOnWindows/issues/1838. Hi. Do you also use WSL on Creators Update?\nI think this is not a problem of Autojump, see the issue I just opened https://github.com/Microsoft/BashOnWindows/issues/1887.. @pgrm : @daiconrad has given a good workaround: add this to your .zshrc:\n\nunsetopt BG_NICE\n\nI guess you can close this issue now and let's wait for its origin: https://github.com/Microsoft/BashOnWindows/issues/1838. ",
    "pgrm": "@ruixingw I guess it's the same, yes. But I installed WSL ~a month ago and had insider slow ring. I had another laptop which was running WSL bash for ~half a year with insider fast ring, and I never experienced that issue there ... - weird. @ruixingw I guess it's the same, yes. But I installed WSL ~a month ago and had insider slow ring. I had another laptop which was running WSL bash for ~half a year with insider fast ring, and I never experienced that issue there ... - weird. ",
    "PtkP": "Hi all,\nI have tried to debug it, and i was able to find the issue.\nBasically, I had a alias to j. :'(\nI resolved the issue when i added function before j and the I was able to understand.\nFor now, my final fix was to remove the alias to j. and it works just fine.\nYou can close the ticket, and sorry for the spam.\nThank you,\nPatrick\n. Hi all,\nI have tried to debug it, and i was able to find the issue.\nBasically, I had a alias to j. :'(\nI resolved the issue when i added function before j and the I was able to understand.\nFor now, my final fix was to remove the alias to j. and it works just fine.\nYou can close the ticket, and sorry for the spam.\nThank you,\nPatrick\n. ",
    "emanresusername": "in case anybody else lands here first\nproot and termux-chroot fixed this for me. reopening for further discussion, the termux-chroot path has some legitimate barriers including\n\nslow to have at the start of a ~/.zshrc or similar file so things work automatically in your shell\nrequires root. workaround with zplug using termux-fix-shebang for anybody else who ended up in this situation\n```zsh\nzplug \"wting/autojump\", \\\n      use:\"bin/autojump\", \\\n      as:command, \\\n      hook-build:\"termux-fix-shebang bin/*\"\n\nzplug \"wting/autojump\", \\\n      use:\"bin/autojump.zsh\"\n``. in case anybody else lands here first\n[proot and termux-chroot](https://github.com/termux/termux-packages/issues/98) fixed this for me. reopening for further discussion, thetermux-chroot` path has some legitimate barriers including\n\nslow to have at the start of a ~/.zshrc or similar file so things work automatically in your shell\nrequires root. workaround with zplug using termux-fix-shebang for anybody else who ended up in this situation\n```zsh\nzplug \"wting/autojump\", \\\n      use:\"bin/autojump\", \\\n      as:command, \\\n      hook-build:\"termux-fix-shebang bin/*\"\n\nzplug \"wting/autojump\", \\\n      use:\"bin/autojump.zsh\"\n```. ",
    "yang4515": "use jc instead of j. use jc instead of j. ",
    "farmercode": "on mac sierra,I have the same problem.And use jc instead of autojump is fine!. on mac sierra,I have the same problem.And use jc instead of autojump is fine!. ",
    "dotimes": "@yang4515  @farmercode  thanks\uff0ci will do it as soon as. @yang4515  @farmercode  thanks\uff0ci will do it as soon as. ",
    "entercoder1993": "\u4e5f\u662f\u540c\u6837\u7684\u95ee\u9898. \u4e5f\u662f\u540c\u6837\u7684\u95ee\u9898. ",
    "Frefreak": "This happens very often to me too. Not sure what triggers the deletion. I made a screenshot to show this: https://asciinema.org/a/0fn2g5ni1g768sxxqcu8deu3f. @PorcelainMouse ArchLinux with zsh. What's yours?\nUpdate:\ncould you try the following step?\n- find your corresponding autojump_data.py file and locate this line: https://github.com/wting/autojump/blob/master/bin/autojump_data.py#L123\n- modify it to something like: temp = NamedTemporaryFile(delete=False, dir='/home/user/.local/share/autojump/'), make sure the dir argument is in the same filesystem as your autojump.txt.\nMy database seems to persist after this modification. I guess the problem is that the following mv is not really atomic across different filesystems. (https://stackoverflow.com/questions/3716325/is-pythons-shutil-move-atomic-on-linux). Hi. I was not thinking about race condition, in which case it would only miss new directory entries (this indeed happens sometimes to me though, maybe there's also race condition but that's not the main problem), not truncating database file.\nIIRC when I was debugging the load function occasionally gets empty result, and that's when the file truncating happens. So my guess was maybe at some time the database file is actually empty (possibly during the move since the only part it touches that db file is move_file). So yes, I think atomic is the real problem here, but those are just my thought.\nI haven't experienced this issue since then. Looking forward to your feedback :). I think it's not autojump that deletes the db, it just loads the db and write to a temp file then add a new directory entry, finally mv that to the original db. The problems is that sometimes the load gets empty (or nearly empty) result, maybe its because at the load time the original file is indeed empty (caused by non-atomic move).  Answer in this SO question explains how copyfile works, which is used by shutil.move when not in the same filesystem.\nBut that's just my hypothesis, I'm not so sure and that's why I don't submit a PR, maybe the real problem is somewhere else, or maybe there's a better way. My modification seems more like a workaround. After all, putting tmp files in /tmp is very reasonable. I prefer leaving this to the author.. This happens very often to me too. Not sure what triggers the deletion. I made a screenshot to show this: https://asciinema.org/a/0fn2g5ni1g768sxxqcu8deu3f. @PorcelainMouse ArchLinux with zsh. What's yours?\nUpdate:\ncould you try the following step?\n- find your corresponding autojump_data.py file and locate this line: https://github.com/wting/autojump/blob/master/bin/autojump_data.py#L123\n- modify it to something like: temp = NamedTemporaryFile(delete=False, dir='/home/user/.local/share/autojump/'), make sure the dir argument is in the same filesystem as your autojump.txt.\nMy database seems to persist after this modification. I guess the problem is that the following mv is not really atomic across different filesystems. (https://stackoverflow.com/questions/3716325/is-pythons-shutil-move-atomic-on-linux). Hi. I was not thinking about race condition, in which case it would only miss new directory entries (this indeed happens sometimes to me though, maybe there's also race condition but that's not the main problem), not truncating database file.\nIIRC when I was debugging the load function occasionally gets empty result, and that's when the file truncating happens. So my guess was maybe at some time the database file is actually empty (possibly during the move since the only part it touches that db file is move_file). So yes, I think atomic is the real problem here, but those are just my thought.\nI haven't experienced this issue since then. Looking forward to your feedback :). I think it's not autojump that deletes the db, it just loads the db and write to a temp file then add a new directory entry, finally mv that to the original db. The problems is that sometimes the load gets empty (or nearly empty) result, maybe its because at the load time the original file is indeed empty (caused by non-atomic move).  Answer in this SO question explains how copyfile works, which is used by shutil.move when not in the same filesystem.\nBut that's just my hypothesis, I'm not so sure and that's why I don't submit a PR, maybe the real problem is somewhere else, or maybe there's a better way. My modification seems more like a workaround. After all, putting tmp files in /tmp is very reasonable. I prefer leaving this to the author.. ",
    "Vaelatern": "Bump?. Bump?. ",
    "c02y": "UPDATE4:\nI noticed that autojump or j will get wrong directory from time to time.\nFor instance, this is my ~/.local/share/autojump/autojump.txt\n46.9041575982353    /home/chz/Public/autojump\n10.0    /tmp\n17.320508075663504  /home/chz/Public/tig\n33.16624790355542   /home/chz/Public\n17.3205080757   /home/chz/Public/practicepython\n14.1421356237   /etc/sysconfig/network-scripts\n36.055512754645285  /home/chz/.emacs.d/elpa\n34.641016151342484  /home/chz/Public/hosts\n22.360679774997898  /tmp/emacs/site-lisp\n55.67764362827372   /tmp/emacs\n10.0    /home/chz/Documents\n14.1421356237   /home/chz/NVR/Code/softwareEx\n14.142135623730951  /home/chz/Public/Python-Crash-Course_A-Hands-On_Project-Based-Introduction-src\n10.0    /home/chz/StorageCenter\n41.2310562561   /media/UDISK\n10.0    /home/chz/Public/gdb-dashboard\n34.64101615137891   /home/chz/.emacs.d\n19.999999999978115  /home/chz/Public/ranger\n10.0    /home/chz/Public/SCPython\n10.0    /home/chz/WORK_SAN\n20.0    /home/chz/.local/share/autojump\n\n\nautojump abcsc will get /tmp/emacs, weird, abcsc is a wrong string\nautojump Pub auto will get ~/.local/share/autojump and execute it again, it will get ~/Public/autojump from time to time.\nand several other cases\n\nand I can't reproduce them 100% very time.\nI'm trying to find a replacement of autojump.\nUPDATE5:\nOne simple alternative: \nuse z.fish\nOne more power alternative:\nuse fasd with fish plugin. UPDATE4:\nI noticed that autojump or j will get wrong directory from time to time.\nFor instance, this is my ~/.local/share/autojump/autojump.txt\n46.9041575982353    /home/chz/Public/autojump\n10.0    /tmp\n17.320508075663504  /home/chz/Public/tig\n33.16624790355542   /home/chz/Public\n17.3205080757   /home/chz/Public/practicepython\n14.1421356237   /etc/sysconfig/network-scripts\n36.055512754645285  /home/chz/.emacs.d/elpa\n34.641016151342484  /home/chz/Public/hosts\n22.360679774997898  /tmp/emacs/site-lisp\n55.67764362827372   /tmp/emacs\n10.0    /home/chz/Documents\n14.1421356237   /home/chz/NVR/Code/softwareEx\n14.142135623730951  /home/chz/Public/Python-Crash-Course_A-Hands-On_Project-Based-Introduction-src\n10.0    /home/chz/StorageCenter\n41.2310562561   /media/UDISK\n10.0    /home/chz/Public/gdb-dashboard\n34.64101615137891   /home/chz/.emacs.d\n19.999999999978115  /home/chz/Public/ranger\n10.0    /home/chz/Public/SCPython\n10.0    /home/chz/WORK_SAN\n20.0    /home/chz/.local/share/autojump\n\n\nautojump abcsc will get /tmp/emacs, weird, abcsc is a wrong string\nautojump Pub auto will get ~/.local/share/autojump and execute it again, it will get ~/Public/autojump from time to time.\nand several other cases\n\nand I can't reproduce them 100% very time.\nI'm trying to find a replacement of autojump.\nUPDATE5:\nOne simple alternative: \nuse z.fish\nOne more power alternative:\nuse fasd with fish plugin. ",
    "vunhan": "Use cd to move around some dir first, then type j foo and \\<TAB>\nautojump will show up last dir you have visited which match with foo. This is not issue anymore.\nHey @wting can you close this issue, and update README?. Nice idea @theonlygusti \nCould you please write down some codes and make a Pull Request?\nSorry, I dont have enough time to contribute to this project.. Same problem on Archlinux, but you can find autojump.{bash,fish,zsh} here. Use cd to move around some dir first, then type j foo and \\<TAB>\nautojump will show up last dir you have visited which match with foo. This is not issue anymore.\nHey @wting can you close this issue, and update README?. Nice idea @theonlygusti \nCould you please write down some codes and make a Pull Request?\nSorry, I dont have enough time to contribute to this project.. Same problem on Archlinux, but you can find autojump.{bash,fish,zsh} here. ",
    "youngchan919": "@vunhan No, it doesn't. It reacts nothing at all.\nI met the same problem as @chauzer did.\nWhen I type j, it prints out the current dir.\nWhen I typej aSubDir, it prints out . and does nothing. I am still in the current dir.. Interestingly, after serval days of normal usage without j, I suddenly find that it works well now. Maybe it is referenceable to others on this issue.. @vunhan No, it doesn't. It reacts nothing at all.\nI met the same problem as @chauzer did.\nWhen I type j, it prints out the current dir.\nWhen I typej aSubDir, it prints out . and does nothing. I am still in the current dir.. Interestingly, after serval days of normal usage without j, I suddenly find that it works well now. Maybe it is referenceable to others on this issue.. ",
    "run27017": "mark, too.. mark, too.. ",
    "theonlygusti": "You need to use cd <directory> before you can j <directory>. The reason it works now is because you were using cd. Seriously are you just ignoring everyone here?. Maybe j should print something like You must visit directories with cd before you can visit them with j if people try j before it has indexed anything.. You need to use cd <directory> before you can j <directory>. The reason it works now is because you were using cd. Seriously are you just ignoring everyone here?. Maybe j should print something like You must visit directories with cd before you can visit them with j if people try j before it has indexed anything.. ",
    "titoesteves": "It may be as simple as updating the README.md with this information(you must visit directories with cd before you can visit them with j). Place it towards the top of the README.md and/or use bold font. . I must have missed that. I am guessing most of the people on this thread and those who come to this issue, did as well. Maybe using bold font to make the statement stand out more will help deter more people reporting this issue.. It may be as simple as updating the README.md with this information(you must visit directories with cd before you can visit them with j). Place it towards the top of the README.md and/or use bold font. . I must have missed that. I am guessing most of the people on this thread and those who come to this issue, did as well. Maybe using bold font to make the statement stand out more will help deter more people reporting this issue.. ",
    "blakehurlburt": "If you look at the man page (by running man autojump), you get (excess information elided):\n\nautojump must be loaded before it can be used.\nLoad autojump\n    . /usr/share/autojump/autojump.sh. If you look at the man page (by running man autojump), you get (excess information elided):\nautojump must be loaded before it can be used.\nLoad autojump\n    . /usr/share/autojump/autojump.sh. \n",
    "Houinside": "@paultopia ,  I'm using Bash,  and got the same problem on my Archlinux. it was fixed by this way: \nSTEP 1.  add correct autojump file in your shell's startup file. \necho \"/usr/share/autojump/autojump.bash\" >> ~/.bashrc\nSTEP 2. make sure the autojumpfile has the right permission.\nchmod 755 /usr/share/autojump/autojump.bash\nSTEP 3. check the bashdb has installed,\nsudo pacman -Syy bashdb\nSTEP 4. source the shell's startup file if you want use autojump right now\nsource ~/.bashrc\nFinally, it works!\n. @paultopia ,  I'm using Bash,  and got the same problem on my Archlinux. it was fixed by this way: \nSTEP 1.  add correct autojump file in your shell's startup file. \necho \"/usr/share/autojump/autojump.bash\" >> ~/.bashrc\nSTEP 2. make sure the autojumpfile has the right permission.\nchmod 755 /usr/share/autojump/autojump.bash\nSTEP 3. check the bashdb has installed,\nsudo pacman -Syy bashdb\nSTEP 4. source the shell's startup file if you want use autojump right now\nsource ~/.bashrc\nFinally, it works!\n. ",
    "Hund": "I would like to know this as well. This project seems dead though. :/. Not sure if I should create my own ticket, my I'm having similar issues on one of my Arch Linux computers running the exakt same config as the others.\n$ source ~/.zshrc\n/usr/share/autojump/autojump.zsh:49: defining function based on alias `j'\n/usr/share/autojump/autojump.zsh:49: parse error near `()'\nI've tried both with version 22.5 from the community-repo and currently latest code from git (22.5.1.r12.gb06d686).. I would like to know this as well. This project seems dead though. :/. Not sure if I should create my own ticket, my I'm having similar issues on one of my Arch Linux computers running the exakt same config as the others.\n$ source ~/.zshrc\n/usr/share/autojump/autojump.zsh:49: defining function based on alias `j'\n/usr/share/autojump/autojump.zsh:49: parse error near `()'\nI've tried both with version 22.5 from the community-repo and currently latest code from git (22.5.1.r12.gb06d686).. ",
    "scottkosty": "Doesn't seem like there's much interest/time. I wonder if it would be easy to hack something together with e.g. inotify + activity.sqlite (mentioned above) + ~/.local/share/autojump/autojump.txt. Doesn't seem like there's much interest/time. I wonder if it would be easy to hack something together with e.g. inotify + activity.sqlite (mentioned above) + ~/.local/share/autojump/autojump.txt. ",
    "juanrgon": "Nothing, but I use j more than cd now, so it just feels strange there is a directory that I can't jump to, especially considering that that directory is my home directory, which I go to often and would initially expect to be supported.. Nothing, but I use j more than cd now, so it just feels strange there is a directory that I can't jump to, especially considering that that directory is my home directory, which I go to often and would initially expect to be supported.. ",
    "ndrone": "Received the same this morning as well.. found if I removed the alias j=\"j\" from the .zshrc file. Removes this parsing error. Received the same this morning as well.. found if I removed the alias j=\"j\" from the .zshrc file. Removes this parsing error. ",
    "R4nf7": "Have you already visited the folders manually you want to autojump in after the installation?. Have you already visited the folders manually you want to autojump in after the installation?. ",
    "wulakuer": "I have visited the folder using \"cd\" command, but it still does not work.\n. I have visited the folder using \"cd\" command, but it still does not work.\n. ",
    "jerkovicl": "i got the same issue and same setup aswell and this fix helped me out :\nhttps://github.com/wting/autojump/issues/434. i got the same issue and same setup aswell and this fix helped me out :\nhttps://github.com/wting/autojump/issues/434. ",
    "emaincourt": "It seems that the latest OSX update fixed the issue for both z and autojump. Closing \u2600\ufe0f. It seems that the latest OSX update fixed the issue for both z and autojump. Closing \u2600\ufe0f. ",
    "nikitavoloboev": "I have. For macOS, it only says to brew install it and that's it.. I have. For macOS, it only says to brew install it and that's it.. "
}