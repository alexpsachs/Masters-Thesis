{
    "JakeWharton": "Plenty of examples. OSS apps are starting to appear and will be listed on the website.\n. Done in dev branch.\n. Fixed in 3d4c2dc211356da37ac2638d137d00ee8f1dffe7\n. Add support for logos. Closed by b59200103500036b5689f9e453fc54959320d539.\nWARNING: Manifest reflection is thus far untested!\n. Add drop-down support. Closed by 27881910910fb989d63655328df661785390d97f.\n. Enable standalong JAR generation. Closed by 09164e0ca8159b5a42cb310600b3be06d8478425.\n. The artifacts are now in Maven Central.\nOn Sep 20, 2012 3:18 AM, \"Mykola Nikishov\" notifications@github.com wrote:\n\nhttp://repository.jakewharton.com/ is unreachable due to\nThe DNS server returned:\nName Error: The domain name does not exist.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/6#issuecomment-8722570.\n. Use a python script to manage dependencies and make it easier to properly obtain them. Closed by 970118421f55c01162ed5072363c84d1eeb7eef3.\n. Done as of 0cfdc1c1852b0776fb9fdbf777ce88459a9f7595.\n. Done in dev branch.\n. Out of curiosity, what functionality were you trying to extend that was prevented?\n\nThe reason that a lot of the overrides within the NativeActionBarHandler are final is because their implementation is so direct it was hard for me to see a use-case where someone would need to override them. For example, when the sherlock calls setTitle(int) on the handler and it is for the native action bar, the call is simply marshaled along to the action bar itself.\nI can see why perhaps this would make sense if someone wanted to provide a wholly custom implentation for the native action bar but I'm just struggling to see what exactly is missing that needs the override?\n. Your concern becomes invalid with the new API in the dev branch. On Android 3.0+ you interact with the native action bar using its native API except by calling getSupportActionBar() instead of getActionBar().\nRelease will be by the end of this month.\n. Refs #17.\n\nYour concern becomes invalid with the new API in the dev branch. On Android 3.0+ you interact with the native action bar using its native API except by calling getSupportActionBar() instead of getActionBar().\nRelease will be by the end of this month.\n. Done in dev branch.\n. I agree. I actually still need to port this back to the pre-3.0 action bar now that I think about it...\n. See #23.\n. 99.9% sure this is a bug in Android OS  for API levels 9 and 10. The functionality will not be included in the 3.0 release.\n. Yes it will. I'm not sure exactly what I want to do when run on 3.0 through 3.2 in regards to those new features, however. Luckily I have a few weeks until the ICS source is released to ponder what to do.\n\nI've had some suggestions of just using the ICS version on all platforms rather than trying to switch between the two. Perhaps I'll do that from 3.2 back and only do native on 4.0+.\n. Android 4.0 is being developer in the 4.0-wip branch but is not yet ready for public consumption. The master branch is the latest stable release, 3.4.2, which will work on Android 4.0 fine but still requires that you compile with Android 3.2. If you have a specific issue with your app, please ask on the forum: http://abs.io/\n. An app written using ActionBarSherlock v3.x will work perfectly fine on Android 4.0 since it uses the native action bar on Android 3.0+.\nThere is no reason that you are required to compile against Android 4.0 unless you are specifically using APIs from Ice Cream Sandwich. If you absolutely must compile against Android 4.0 all you should have to do is add a few default implementations to the MenuItemImpl and MenuItemWrapper classes for the new menu interface methods.\nThe 4.0-wip branch is very much a work in progress and represents a significant change in the library. The core is no longer dependent on the compatibility classes. A plugin will be provided to provide an action bar-enhanced version of FragmentActivity.\n. Yes, both the forthcoming v3.5 and v4.0 use ICS's menu and action item logic so you should see identical functionality between the native behavior and ABS's implementation.\nThe dev branch should be stable enough to try provided that you do not use the maps or preference activity base classes or sub menus (they just won't show up). I haven't fully documented the changes yet so tread lightly. It should solve all of the  described problems though (and feedback is always welcome during development).\n. I considered this for 4.0. It certainly will already support the on-action bar overflow button but it is only enabled for devices that do not contain a hardware menu key (decision logic). Perhaps it would be beneficial to allow users to force it being enabled and then just have the menu key trigger its opening...\n. I totally agree. While I will likely leave the logic there since its from the SDK, I like the idea of being able to force the overflow. I'll add a theme attribute, absForceOverflow boolean, to control it.\nI'm trying to ship v3.5 ASAP and hammer out a beta of 4.0 so people can get started porting their apps. I'll file a separate ticket for the forced overflow.\n. Alright folks, the ball is rolling on version 4.\nBugs: http://abs.io/4\nBetas: http://beta.abs.io/\nNo support or questions until I announce (and explain) the betas on my blog.\n. Suite setup done. All that's left is Maven integration.\n. Maven integration done. All that's left is Jenkins.\n. https://jakewharton.ci.cloudbees.com/job/ActionBarSherlock/\n. The 'styled' sample contains two submenus which are created from a menu XML. Here is a snippet of one of them:\nxml\n<item android:id=\"@+id/menu_nav\" android:title=\"@string/action_label_nav\">\n    <menu>\n        <group android:id=\"@+id/menu_nav_group\" android:checkableBehavior=\"single\">\n            <item android:id=\"@+id/menu_nav_tabs\" android:title=\"@string/action_label_nav_tabs\" android:checked=\"true\" />\n            <item android:id=\"@+id/menu_nav_drop_down\" android:title=\"@string/action_label_nav_drop_down\" />\n            <item android:id=\"@+id/menu_nav_label\" android:title=\"@string/action_label_nav_label\" />\n        </group>\n    </menu>\n</item>\nThe <group> tag is only utilized here because the sub-menu items are all checkable.\nCreating the above menu prorgammatically would start something like this:\njava\npublic void onCreateOptionsMenu(Menu menu) {\n    SubMenu subMenu = menu.addSubMenu(0, R.id.menu_nav, 0, R.string.action_label_nav);\n    subMenu.addItem(0, R.id.menu_nav_tabs, 0, R.string.action_label_nav_tabs);\n    subMenu.addItem(0, R.id.menu_nav_drop_down, 0, R.string.action_label_nav_drop_down);\n    subMenu.addItem(0, R.id.menu_nav_label, 0, R.string.action_label_nav_label);\n}\nIn this example I use R attributes for the ids and titles but you may use literal numbers and strings as well.\n. Can you elaborate more on point 1? I'm not sure what you mean as there is only one ID specified in the ids.xml and it is for the layout.\n. This is actually a bug too rather than just an omission on the documentation. The pre-3.0 action bar will honor the attribute but the native 3.0+ one does not map it back to the native android:titleTextStyle. The same goes for every other attribute defined in the action bar or action mode style.\nGlaring omission on my part!\n. This is fixed (rather, worked around) in the dev branch. Read the change log for more info. Will be released with 3.1 in the coming few days.\n. Can you cite where it is said that Java 5 is to be used? Since Android 2.3 the SDK requires Java 6, I only assumed that by extension applications written for API levels equal to or later than that should follow suit. If that is not the case I will make the switch but I am inclined to target the latest version by default which is why the project is such.\nI'll update the documentation regardless once a definitive answer is determined.\n. The Android requirements page states that the JDK 5 or 6 is appropriate. I'd like to use the latter because things like @Overrides afford additional compile-time checks to make sure i'm actually overriding the desired method.\nI will note on the documentation.\n. I'd like to hopefully get the opinion of as many other users as well on this to determine the best course of action.\nThus far this has been by design. As you noted, the support was implemented and then commented out. I chose to do this for two reasons.\n1. If the custom action bar was shown then there is a high probability the application is running on a phone with a relatively small screen. The screen real estate does not usually exist for the type of views which are normally associated with these two attributes.\n2. Both of these attributes override the specified title and icon associated with the menu item. This allows for an automatic yet graceful degredation of functionality.\nFor example, in a project I am working on I utilize Honeycomb's new search widget but I also specify an icon.\nxml\n   <item\n       android:id=\"@+id/menu_search\"\n       android:icon=\"@drawable/ic_menu_search_holo_light\"\n       android:title=\"@string/search\"\n       android:showAsAction=\"always\"\n       android:actionViewClass=\"android.widget.SearchView\" />\nThis will show the widget on Android 3.0+ and allow for its in-place interaction but when run on pre-3.0 only the icon will show and the onOptionsItemSelected event will fire allowing me to use the search popup.\nIs this the correct functionality? I'm not so sure.\nThe library was built to offer as much support as possible for the action bar, the current implementation and API of which has been clearly designed for large-screen devices, on devices with small screens and previous version of Android. Small assumptions have been made to allow for as much out-of-the-box functionality as possible (e.g., not displaying action item text unless explicitly requested to, regardless of the withText flag). The scope of this issue may fall outside that of a small assumption.\nAs a counter argument, here are two ways the exact same functionality I describe above can be achieved if we choose to enable these features.\n1. A custom view can appropriately render itself based off of the screen configuration it detects from its Context instance. On non-xlarge screens it could choose to only display itself as an icon, text, or as a small view.\n2. After menu inflation (or during creation from code) the custom view could be cleared when the device is not approprite.\njava\n   if (Build.VERSION.SDK_INT < Build.VERSION_CODES.HONEYCOMB) {\n       menu.findItem(R.id.menu_search).setCustomView(null);\n   }\nI'd like to get your thoughts on the matter and hopefully other users who also watch the project and utilize the library can also voice their opinions on this matter.\n. I agree. If you're using this library, you are in it all the way. The burden should not be placed on the library to decide what is displayed and how in this case. I will enable them for the forthcoming release.\nI hadn't been thinking about using resource folders to differentiate between the API levels. This also makes me question my choice of hiding the action item text by default as well. The same could be done with resource filtering for menu XML. What are your thoughts on that?\n. No, keep them coming. I'm glad to see people actually using the library and finding out oddities and errors that exist. I can only think of and test so many configurations. Plus your bug reports are extremely descriptive allowing me to understand exactly what your problem is and half the time you even tell me where the problem exists in the library itself.\n. This is a consequence of me writing my own view mechanism for menus. In the native-backport branch I copy the method used by Android which updates any views associated with menu items as methods are called on them. This is the functionality which allows you to hold on to Menu and MenuItem instances beyond creation and affect how they are displayed.\nI will do my best to port this functionality into the upcoming 3.1 release scheduled in the next few days. It might have to be pushed to a 3.1.1 release if I cannot do it in time or simply cannot find the time.\n. Re-opening and changing to milestone 3.2. The release of Android 3.2 SDK and compat lib r3 delayed this. Sorry.\n. The MenuItem-related fixes that I told you would be in 3.1 unfortunately did\nnot make the cut. With the recent release of the Android 3.2 OS (and its\nSDK) as well as the third revision of the official compatibility library it\nwas simply too much. The support for it was almost completed prior to the\nrelease of the two aforementioned items so I assure you it's not far off. I\nrealize that a lot of people are dependent on this as I have gotten numerous\nquestions related to it. I am still pedal to the floor on development as I\nhave a few other features I really want to get integrated (like action\nmodes).\n\nJake Wharton\nhttp://about.me/jakewharton\nOn Jul 23, 2011 5:19 AM, \"drsoran\" \nreply@reply.github.com\nwrote:\n\nRegarding Release 3.1.0:\nDoes this issue still involves the fix for not calling\nonPrepareOptionsMenu()? See\nhttps://groups.google.com/group/actionbarsherlock/browse_thread/thread/9b71ee3d77f27323\nOtherwise there is no chance to initialize an exclusive checkable SubMenu\nto the correct state.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/33#issuecomment-1636900\n. Released with 3.1.3.\n. I've ported more work from the native-backport branch which addresses this activity lifecycle issue. The action bar is now not initialized until you call setContentView() in the activity or commit() a fragment transaction. Once the action bar is attached, an initial invalidateOptionsMenu() is performed. If you are committing a fragment transaction an additional invalidation will occur again once the asynchronous attachment has completed.\n\nThis should hopefully allow you to perform your operations before the call to one of the two above methods. Please report back any troubles you find with it as I have only done fairly simple testing so far.\n. I am incredibly torn on things like this. I definitely agree that tabs and action items in portrait are a crowded affair. However, I'm hesitant to hard-code a limit the action items to only one when in tab navigation mode. I do like the idea of limiting how many items can be displayed (to an extent). I also think that perhaps this is on the responsibility of the implementer on limiting how many items they add, knowing what navigation type they are currently using. Using a menu and menu-v11 version of their XML or setting the showAsAction value programmatically by checking Build.VERSION.SDK_INT allows this manual control with fairly minimal effort.\nI'm going to be doing a lot of work with the action item inflation tomorrow so let me think on it a bit.\n. I think the dev branch version should do this (even though it's currently not displaying items properly). I'll do some testing on the native action bar and see how it operates and make sure the custom implementation mirrors it.\n. Can you provide demo code for this? Either a full activity source, just the onCreateOptionsMenu, or something equivalent and what the correct output should be. I'm very near being able to test this.\n. Released with 3.1.3.\n. While I agree with your logic, the following is from the decompiled sources of Android 3.2's framework.jar file:\n```\nfill-array-data v0, :array_3\nsput-object v0, Lcom/android/internal/view/menu/MenuBuilder;->sCategoryToOrder:[I\n:array_3\n.array-data 0x4\n    0x1t 0x0t 0x0t 0x0t\n    0x4t 0x0t 0x0t 0x0t\n    0x5t 0x0t 0x0t 0x0t\n    0x3t 0x0t 0x0t 0x0t\n    0x2t 0x0t 0x0t 0x0t\n    0x0t 0x0t 0x0t 0x0t\n.end array-data\n```\nUnfortunately I have to elect mirroring the behavior of Android 3.0+ rather than what may seem correct. This order is also present in current versions of the class as well.\n. I am working on this right now actually. Version 3.1 of the library will\ninclude support for building against Android 3.2 and include everything from\nthe new compatibility library revision 3.\nExpect release within the next week.\n\nJake Wharton\nhttp://about.me/jakewharton\nOn Sat, Jul 16, 2011 at 11:40 AM, felixb \nreply@reply.github.comwrote:\n\nI'm not sure, which update broke the build system, and I'm not sure, if\nthis is a bug related to this project, or to the android SDK:\nSince the update to latest Android API / SDK tools and eclipse plugin, I\ncan not build the project, as some references to the platform's resources\nare unknown. Even when leaving the referenced API untouched (E.g. to API-11\nor 12).\nI can reproduce the problem on both systems here.\nOne of it was building the project yesterday without the updates.\nThe marked resources are:\nandroid:actionModePopupWindowStyle\nandroid:actionModeStyle\nwith the four lines\n?actionModePopupWindowStyle\n?actionModeStyle\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/40\n. You can use the v13-hotfix branch to fix this for now. If you don't want to compile against 3.2, delete the values-v13 folder and it should work for 3.0 and 3.1.\n. Fixed in 3.0.3.\n. This is fixed in the dev branch. Will be released with 3.1.\n\n\nJake Wharton\nhttp://about.me/jakewharton\nOn Jul 17, 2011 9:51 AM, \"felixb\" \nreply@reply.github.com\nwrote:\n\nshowing the indeterminate progress bar in action bar does work only in\nAPI11.\ncalling setProgressBarIndeterminateVisibility(true) on <=API10 does\nnothing at all.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/41\n. 3.1 release tonight will have this.\n. Have you looked at this sample? I can confirm it works on 1.6, 2.3.3, and 3.2. You have to use Boolean.TRUE and Boolean.FALSE objects since setProgressBarIndeterminateVisibility(boolean) cannot be overridden.\n. Can't be done because of method visibility on PreferenceManager and PreferenceScreen.\n. This may be possible with a bit of work on second thought...\n. I have the beginnings of the class here: https://gist.github.com/1108374\n\nIt is based on the decompiled source of Android 3.1. It doesn't compile at present but it's a start. There are a lot of internal APIs in use on the official version of the class. We can't depend on PreferenceActivity so some of these methods will have to have their implementations duplicated. I don't have the time to look at it just yet.\n. This is being worked on in a private repo for now. Once it is compiling I'll make it public. It will be at https://github.com/JakeWharton/Android-PreferenceFragment.\n. Haven't touched it since. Working on ABS v4 now. I might try it once that is completed.\n. I believe it uses internal PreferenceManager and PreferenceScreen APIs which is why I gave up on it initially until the sources were available. The tricky part will be ensuring it can still work with things that extend android.preference.Preference. It's not a requirement, but would be great for a proper solution.\n. Cool. Thanks for the link. That method uses reflection to access the internal APIs so I'll still probably have a go at creating a proper implementation eventually. Glad that works for you for now though.\n. This is an ADT layout editor bug and not a problem with the library declared style.\nYou can track it at http://code.google.com/p/android/issues/detail?id=19599\n. Released with 3.1.1.\n. This is a bug in the underlying compatibility library. I suggest that you file it on b.android.com and paste the link here. To maintain my sanity, I am going to solely focus on my action bar implementation.\nI will, however, happily accept patches to fix problems with the underlying compatibility library. I've already had to fix a few to even get the library compiling and working on 1.6. My release cycle is a lot quicker than theirs so it will afford users of this library a more stable implementation. I'm going to leave the actual fixes of these bugs to the community.\n. You are correct. Unlike with the action bar component of this library, the fragments and loader components are used on all platforms of Android. It does not attempt to switch between the native version on 3.0+. Unfortunately, that also means that bugs affect all platforms as well. I'm not sure if this bug is present in the underlying platform or only the compatibility library.\nI'm not sure about the fragment lifecycle either. You may want to call enableDebugLogging() for more information or even ask a question on StackOverflow or the android developer mailing list. There's likely someone who works on Android or has used fragments a ton that will be able to share some insight on that behavior. I agree that the behavior does seem odd but since there has been no definitive best-practices for fragments its hard to say what is really supposed to happen.\n. I'm going to close this since it likely requires a fix that's far too in depth for me to introduce downstream from the official compat lib. If you can create a reproducible test case please file the bug on b.android.com so it gets implemented in the next official revision (and therefore in the next major merge of this library).\n. Released with 3.1.1.\n. Yes, file a bug on b.android.com and add the link to this issue. You can also post to the official android developers mailing list where Dianne or another engineer might post a workaround.\n\nMy temporary solution was to modify ViewPager, but I doubt you want to go this route since ViewPager will likely change in future releases of the ACL.\n\nOn the contrary, I have already fixed a few bugs in the library and would gladly accept more. My release cycle is a lot quicker than Google's compat lib so it allows any changes to be distributed more rapidly.\n. @ChrisSmith can you paste/email/pull request your solution so I can take a look at it and possibly implement it?\n. You're right, that is a hack :)  I filed this on b.android.com and will take a look at implementing a fix hopefully before the 3.1.3 release this weekend.\nI'm fine with changing the behind-the-scenes code of the compat-lib sources as long as the exposed API doesn't change and it still functions as a drop-in replacement to the official jar.\n. Excellent I look forward to it. I was thinking of including a boolean in the info for each fragment as well to remember its original mHasMenu value. This way we handle a case where a fragment would (for who knows what reason) expose its menu in one situation but not another.\n. Thanks for the patch. It inspired me to find a solution which did not require modifying OnPageChangeListener (in order to maintain compliance with the official compat lib).\nGive it a try (a60d03a53aecc00d6c2a58913893ff06a8c2e8a5) and see what you think. I didn't get a change to test it against #56 so if you have a test case for that please give it a try as well.\n. I prefer something along the lines of your method where determining whether or not to contribute a menu is left to the fragment implementation rather than handled by the library directly. On the other hand, I don't like changing APIs that I didn't create, even if they seem like something that should have existed in the first place.\nThe ViewPager is only available with the compat lib and thus modifying Fragment and FragmentManager would only affect users of this library. Since you are forced to use the library-implementations of those two classes as well, it shouldn't make a difference that we are tweaking the functionality. If future versions of the SDK do implement ViewPager natively then I would without a doubt opt to mirror their implementation.\nI posted to the Android developers group so we'll see if anyone has an opinion there. It would be nice to catch Dianne's attention and get her input as she seems to be the steward of the compat lib.\nI might try to hop in the weekly Hangout on G+ with Reto Meier and the other Android devs and/or Romain Guy on IRC to see if they have any thoughts as to what would be an appropriate direction to steer this.\nI will hold off releasing until I can think about it more.\n. So the more that I think about it the more that I think I am favoring a form of your solution. I was thinking of this method declaration:\njava\nvoid onPageSelectionStateChanged(int position, Object object, boolean selected);\nYour use of two methods is a bit misleading because they may be called more than once for each state depending on the calls to populate(). I've just combined them into a single method which will allow you to react appropriately based on the selected argument. It also provides both the page position as the other callbacks do as well as the object to allow us to get our fragment instance out.\nWhat do you think about that?\n. The reason I moved it to populate() was because its implementation removes items from the mItems array if you are jumping quickly or by more than one page via the API. This could probably be overcome by storing additional references to the ItemInfo instance for the last selected page and then placing the call only in setCurrentItemInternal. I'll have to experiment.\nAlso Dianne weighed in on the situation on the mailing list: https://groups.google.com/d/msg/android-developers/_opT-Lr_hgE/f4dLIpHbK-4J\n. Released with 3.2.0\n. This is a dupe of #23.\n. Checkstyle is a maven plugin which will check your Java files for various syntactical stylings (e.g., using spaces and not tabs, uppercase variable names for static final constants, etc.).\nYou can see the checkstyle file on the main library project here. If you are using maven you can run the following command to perform the checks:\nmvn clean checkstyle:checkstyle\nThe output will be in target/checkstyle-result.xml.\nCurrently it's only run on the library and the maps plugin. I'd eventually like to have it be run on all the files since there are some styling inconsistencies with the samples and tests...\n. The maven plugin will run it on everything under the src/ directory for a module. Problem is that you have to include the checkstyle.xml file in each module. I think all I have to do is define the path to it as a variable in the root pom.xml and then use that variable to pass to the plugin in each module.\nJust haven't gotten around to it. Merging in ACLv4r4 is more important :)\n. Thank you for this. I have been referring people to the Google Group posting when they'd email and didn't want to change FragmentActivity to just extend MapActivity. This won't make it into 3.1.1 but I'll consider it for 3.1.2 or 3.2.0.\nI was always a bit wary of this solution since it requires exposing some internals of FragmentActivity but there really is no alternative until someone (hopefully Google) release a true MapView that works like the V3 JavaScript implementation.\n. Haven't forgotten about this. Going to release 3.1.3 and then try and come with a solution that is the least common denominator of suck to support maps. I don't like exposing the private, behind-the-scenes APIs to users of the library. I don't want to have to resort to reflection, however. Maybe two interfaces: one public, one package scoped?\nJust need a damn MapFragment already...\n. This has been implemented in the dev branch using a similar method. Feel free to test and report back your thoughts.\n. Released with 3.2.0\n. Can you provide me with the 9-patch to test with? You're on the right track except from looking at decompiled Android 3.2 code the background is explicitly removed from the ActionBarView rather than the container.\nHave you tried this on Android 3.0+?\n. That's perfect. Will test tonight and (hopefully) push a fix to 3.1.x branch.\n. Try the latest from the 3.1.x branch. I quite literally just pushed a fix for this an hour or two ago. Let me know how it works for you, it certainly works for the styled sample (navigation and background options).\n. The demos sample showcases the use of a custom theme. If you look at res/values/styles.xml you can see how it is declared. I have included it below:\nxml\n<style name=\"Theme.SherlockCustom\" parent=\"@style/Theme.Sherlock.Light\">\n    <item name=\"abBackground\">@drawable/custom_bg</item>\n    <item name=\"abIcon\">@drawable/ic_magnifying_glass</item>\n    <item name=\"abTitle\">Custom Style!</item>\n    <item name=\"abTitleTextStyle\">@style/CustomTitle</item>\n    <item name=\"abSubtitle\">100% set from the style attributes</item>\n</style>\n. If you call setRetainInstance(true) on the fragment (I usually put it in its constructor) the hidden state will be persisted. Leaving this out causes it to re-appear on orientation change. I've confirmed both behaviors using ActionBarSherlock, the official compatibility library r3 .jar, and native fragments on Android 3.0+.\n. Thanks for the code. I will test this with ActionBarSherlock fragments, compat lib fragments, and native fragments on 3.0+ just to make sure they all behave the same, even if that sameness is flawed.\n. Pushed a fix to the dev branch which is thankfully trivial due to the fix for #48. I didn't test it yet but the logic is sound.\n. No. The fix exists outside the scope of the library for now. Depending on what Google does in the r4 compatibility library then perhaps this will be fixed natively.\nThere's a simple workaround I can think of, though:\nExtend FragmentPagerAdapter and override onItemSelected. Copy the functionality of holding on to the last selected fragment in a WeakReference and toggling a boolean of your choice (e.g., mIsSelected). Then, in the context menu callback, just check to make sure mIsSelected is true before handling the event.\nSince your fragments will likely be different classes, implement that property in a custom base class that extends from Fragment, or by applying an interface (e.g., HasViewPagerState) with a single method setIsSelected(boolean) to all your fragments.\n. You can do that, but you have to be careful because the fragment actually does have a context method. You might mess with it registering properly unintentionally. There's also no deselected callback to turn that option back on so you'd still be holding on to the previous fragment in a WeakReference somewhere.\nOn second though, our final solution for the options menu items leaking from fragments was abstract enough potentially apply to fixing this as well.\n@ChrisSmith: What do you think? The final implementation was the toggling of an internal mExposesMenu boolean. Should this apply to all kinds of menus to cover this bug or only be for the options menu?\nIt's difficult because we are going to pure speculation as to what the official Google API will be in the r4 release.\n. Despite being a library project rather than a .jar this library should be a near drop-in replacement for the official compatibility library.\nYou will probably have to change some menu-related imports since I mirror all of them in the android.support.v4.view package to provide action bar-related stuff on pre-3.0. You might have to add a cast on the getActivity() calls in your fragments because of the stupid, stupid, stupid support for map activities and the limitations of Java.\nBut other than than it should function exactly the same. It will only wrap the action bar if you use Theme.Sherlock or Theme.Sherlock.Light.\n. Due to the limited space of a phone the title and subtitle are hidden when you are displaying tabs. I'm not sure how the forthcoming Ice Cream Sandwich version of Android will handle this but I'm not going to change the functionality until its sources are released.\nYou can place the tabs in the activity contents directly and style them to match the Holo theme using the following technique: https://gist.github.com/1126843. This will enable the display of both the title/subtitle and tabs. Since you only want this to happen on phones you would have to use two layouts (layout and layout-v11) and put some checks in the code but it could be managed.\n. You should use android.R.id.home. More information about it can be found here: http://developer.android.com/guide/topics/ui/actionbar.html#Home\n. This already happens.\n. Fixed and released with 3.2.1.\n. This is because I did not follow the official size guidelines when creating that icon. I've updated it in 46b8f42d471d80fc7baf766c30e3efbb0f00c364 and it will be fixed in the next release this weekend.\n. It's also because launcher icons equate to 48dp and the action bar is only 45dp tall. On Honeycomb the action bar is a whopping 56dp tall but that looks a bit ridiculous on phones so I arbitrarily chose 45dp since that seemed to be what everyone else had been using.\n. Released with 3.2.2. Couldn't wait...\n. This is fixed in the dev branch. Will be released this weekend. You can\ndownload the branch from GitHub if you need it ASAP.\n\nJake Wharton\nhttp://about.me/jakewharton\nOn Sep 15, 2011 9:32 PM, \"Ian Lake\" \nreply@reply.github.com\nwrote:\n\nPer this Gist example Android project\nbuilt against ActionBarSherlock v3.2.1  2011-09-12, the context menu for\nthe ListFragment opens successfully on Gingerbread or lower devices.\nHowever, on Honeycomb devices, the following error occurs:\nFATAL EXCEPTION: main\njava.lang.ClassCastException:\ncom.android.internal.view.menu.ContextMenuBuilder cannot be cast to\ncom.actionbarsherlock.internal.view.menu.MenuWrapper\nat\ncom.actionbarsherlock.internal.view.menu.MenuInflaterWrapper.inflate(MenuInflaterWrapper.java:19)\nat\ncom.ianhanniballake.honeycombcontextmenu.ContextMenuListFragment.onCreateContextMenu(ContextMenuListFragment.java:31)\nat android.view.View.createContextMenu(View.java:5138)\nat\ncom.android.internal.view.menu.ContextMenuBuilder.show(ContextMenuBuilder.java:81)\n...\nDue to miscasting the ContextMenu object to a MenuWrapper in the\nMenuWrapper.inflate method.\nSuggested solution (which fixes this in the sample project) is to rewrite\nMenuWrapper.inflate to:\n@Override\npublic void inflate(final int menuRes, final android.view.Menu menu) {\nif (menu instanceof ContextMenu) {\nmNativeMenuInflater.inflate(menuRes, menu);\nreturn;\n}\nmMenuInflater.inflate(menuRes, ((MenuWrapper) menu).unwrap());\n}\nTo match the approach used in MenuInflater (which is used in the\nGingerbread implementation).\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/63\n. Released with 3.2.2. Couldn't wait...\n. I've merged this into the dev branch and will test. It looks like a logical correction, however. Great catch!\n. I would consider it a bug. However, it is a bug with the native compatibility library and not with ActionBarSherlock directly. I suggest you file a ticket for it on b.android.com. This way it can get integrated in the next release of the official compat lib (and then updated in ABS once released).\n\nI'm going to close this, but if (read: when!) you file a ticket please paste the link as a comment so I can track it as well.\nThanks for the report!\n. I'm only accepting bugfix patches for the compat lib since I have a faster release cycle. I'm not going out of my way to solve all the problems though, that would be far too much of a commitment (and headache) for me.\nIf a fix is posted to the issue before the release of the next compat lib revision I'll be sure to get it out as quickly as possible.\n. Released with 3.5.0.\n. The problem here is that fragment transactions are asynchronous and the action bar is only set up when a view is first attached to the activity. Even though you are committing your transaction, the actual attaching of the fragment to the view does not take place until later. In this time your code has moved on and calls getSupportActionBar() which returns null.\nThe solution is to force fragment manager to execute your transaction synchronously so that the action bar setup will occur immediately. You can do this by adding the following line after your commit your transaction:\ngetSupportFragmentManager().executePendingTransactions();\n. Are you declaring Theme.Sherlock or Theme.Sherlock.Light as your activity or\napplication theme in the manifest? Or using a custom theme that inherits\nfrom one of these two?\n\nJake Wharton\nhttp://about.me/jakewharton\nOn Sep 28, 2011 7:28 AM, \"Dominik Schrmann\" \nreply@reply.github.com\nwrote:\n\nThanks for the fast response.\nUnfortunately it does not work. My new code looks like this:\n/*\n- Set up Tabs on create\n  /\n  @Override\n  public void onCreate(Bundle savedInstanceState) {\n  super.onCreate(savedInstanceState);\n// start with blacklist\nBlacklistFragment blacklistFragment = new BlacklistFragment();\ngetSupportFragmentManager().beginTransaction().add(android.R.id.content,\nblacklistFragment)\n.commit();\n// execute transactions before using ActionBar. ActionBar will be null\nbecause without this\n// fragment transactions are asynchronous and ActionBar is not ready at\nonce\ngetSupportFragmentManager().executePendingTransactions();\ngetSupportActionBar().setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);\nActionBar.Tab tab1 = getSupportActionBar().newTab();\nActionBar.Tab tab2 = getSupportActionBar().newTab();\nActionBar.Tab tab3 = getSupportActionBar().newTab();\nException is the same:\n09-28 11:23:47.503: ERROR/AndroidRuntime(463): Caused by:\njava.lang.NullPointerException\n09-28 11:23:47.503: ERROR/AndroidRuntime(463): at\norg.adaway.ui.ListsActivity.onCreate(ListsActivity.java:81)\n09-28 11:23:47.503: ERROR/AndroidRuntime(463): at\nandroid.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1048)\n09-28 11:23:47.503: ERROR/AndroidRuntime(463): at\nandroid.app.ActivityThread.performLaunchActivity(ActivityThread.java:1712)\n09-28 11:23:47.503: ERROR/AndroidRuntime(463): ... 11 more\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/68#issuecomment-2223845\n. Alright. Despite executing synchronously via executePendingTransactions the fragment does not seem to be triggering the native action bar attachment on 3.0 (didn't test 3.1).\n\nHere is my solution:\n``` java\npublic void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n//FORCE the attachment of the action bar on all platforms as inexpensively as possible.\nsetContentView(new FrameLayout(this));\n\n//*** Delete all your code that was here ***//\n\ngetSupportActionBar().setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);\n\n//Everything else...\n\n```\nThe first tab added will automatically have its select() method called so you do not need to attach its contents manually.\nI might add a check for this crazy edge-case inside the library itself to mitigate the error. Something like on the first call to getSupportActionBar() if setContentView() was never called and a fragment transaction was committed to be attached to android.R.id.content then automatically call setContentView with new FrameLayout(this).\nLet me know if this works out for you. Crazy, crazy bug.\n. Closing. Hit up the Google Group if you need more assistance.\n. This is not really an error with this framework (nor the compat lib, really) but rather an oversight in whomever made the samples for the current compat lib. I can't even remember the exact operation that causes the problem but what happens is a loader or handler is created to load the list content and if you page too far away before it resolves the ViewPager will detach the fragment. Obviously since there's no fragment there's no ListView so the ListFragment throws an exception when the callback tries to populate the adapter.\nIf the demo fragment was written properly the loader/handler would be aborted when the fragment was detached. I didn't bother fixing since it's an edge case bug that exists only in the samples and not the library itself.\n..and no one had bothered reporting it yet! Thanks for the report regardless, though.\n. I debated about whether or not this was \"in scope\" of this library a while back and ultimately ended up deciding that it was not.\nFor now, I would recommend supplying two menu XMLs in menu and menu-v11. The former would only specify the icon and the latter would include the search view. If memory serves the search view will not dispatch an event to onOptionsItemSelected so if that even is fired you can react accordingly (likely dispatching a search dialog).\nOnce the Ice Cream Sandwich sources are released I will either include it or release it as a standalone library.\nIf you're feeling ambitious, I can provide the decompiled smali and associated resources from Android 3.2 and you can take a hack at reconstructed the Java...\n. Yeah, but it's a bit down on \"the list\", however. ActionBarSherlock 4.0, scrollable tab indicators for ViewPagerIndicator, and a secret experimental project are above it. If I get bored I'll probably give it a go though.\n. Started in the search-view branch. Lots of internal code related to querying the SearchManager which may need to be stripped out.\n. A preliminary, SearchableInfo-free version of this is incubating on the dev branch. Please try it out.\n. Autocomplete and suggestions are the same thing and are provided by a Cursor. This is not currently in the example inside the 'demos' sample but would make a great addition. Voice search is not available (I forget why it wouldn't work).\n. It's package scoped and annotated with @hide in Android as well.\n. It's in the dev branch. It's not done. I have to re-add SearchableInfo support.\n. Thanks, @yincrash. I will investigate. \n. @yincrash I never got a chance to test this fully and I'm not going to block the 4.2 release for this. Can you do two things:\n1. Create a new issue for this.\n2. Create a pull request against the dev branch which adds an example to the 'known-bugs` sample which shows the issue.\n. This issue is related to the built-in classes of the Android operating system that your tablet is running and not this library. I suggest that you contact your manufacturer's support and raise this issue with them.\n. Thanks for the fix. I cleaned it up a bit and committed @ 87f0d8772d13513b4ea1eca3d8b4bd0c9fdd0510.\n. Haven't had a change to play with r14 yet but you're not the first to report issues with it. I'll try to experiment with it this weekend if I get a chance.\n. I've updated the repo for ADT 14 and instructions for updating implementing projects is here. Let me know if this hasn't been resolved.\n. Nice find. Looking to release either tonight or this weekend after some final testing and tweaking.\nThanks!\n. Relates to 5c315d6140c39c61aa39f96bca10432e957293c8.\n. Good catch. I always use in-code bindings so this slipped through.\nI will also change the callback to use the support version of MenuItem.\nThanks!\n. Merged to dev. Release soon.\n. There will be a new release tonight or tomorrow that changes over to ADT14 style. Thanks for providing quick support @iNoles.\n. To fix ADT problems:\n1. Open your project properties (Right click > Properties).\n2. Under \"Android\" remove the ActionBarSherlock library reference. Click \"Apply\".\n3. Under \"Java Build Path\" remove the ActionBarSherlock src folder reference (usually ActionBarSherlock_src).\n4. Click \"Ok\" to close the properties and apply your changes.\nYour project should change from having a ! icon to just the red x.\n1. Open your project properties (Right click > Properties).\n2. Under \"Android\" add a library reference to the ActionBarSherlock library.\n3. Click \"Apply\" and then \"Ok\".\n4. Enjoy a cup of tea. You're done.\nYou can also never perform close/reopens and cleans of your project too many times. Use it like it's going out of style.\nIf you're only using ant or maven you will need to update the library to 3.3.1+.\n. @francisdb Delete your current ActionBarSherlock project in eclipse as well as the folder on your hard drive and start from scratch. Download 3.3.1, extract it, and go through the process of creating a new project from existing sources. Once you have that done in eclipse with no errors on the library you can move on to the steps listed above for updating your project's reference to the library.\n@frapontillo I'm not sure what's causing empty APKs. Are you sure you've updated both the Eclipse plugin and ADT to version 14? Perhaps try destroying the projects and creating new ones as I mentioned at the top of this post.\nYou also don't need to put a reference to ActionBarSherlock on the ViewPagerIndicator project. It compiles directly against the compatibility library itself which is included in its libs/ folder.\n. Nope. ADT14 conversion-related bug. Move along...\n. Merged to dev @ 5fd238aa31b21370cd979f7e7def4a20031aac70.\n. Merged to dev @ 95f49c75955de3aff708fef390e761f5305a22ec.\n. Merged to dev @ 6f777183d6383a4fd1fbe7288ea4133aa979f2be.\n. Can you email me a test case? I added a ton of tabs and the max action items in landscape on my N1 without a problem.\n\n. Ah, sorry I missed that you said portrait.\nThis was introduced in v3.3.0 when the videos of Ice Cream Sandwich started leaking and showed the tabs displayed below the action bar. If you open your app in an SDK 14 emulator you will see this behavior too. The goal was to make sure that ActionBarSherlock provides the same interaction and layouts as the native action bar on Android 3.0+ which is why the move to this style was made.\n. Already meld-ing against the dev branch. Going to be a week or so, though.\n. This is done in the dev branch. Test 'em if you got 'em.\n. Released as 3.4.0.\n. Landed in commit 6f43855a387059171c4a23fdec8138b1ebdc663f.\n. It's actually in 59d837334a082f90e165beccf77778ad137351da. Stupid merging script automatically applied it to master...\n. Hmm... I somehow disabled notifications for this issue. Didn't know that was possible if you were the repo owner. In any case, glad to see you guys managed to work out the issue!\n. Sample project helped immensely despite being a bit difficult to figure out at first :)\n. This is an error that has to do with what version of the JDK you are compiling with. Interface @Override support was added in Java 1.6 / 6.\nYou should be able to change this by going to Project Structure -> Project -> Project SDK. I'm not an IDEA user though so that location may have changed slightly.\n. Well I know that compilation through both Maven and Eclipse works with Java 1.6 specification. I haven't used IDEA for Android development (or even at all recently) but I'll try to set it up today or tonight and test it out.\nYou definitely shouldn't need to update anything though to get compilation working.\n. I apparently didn't read the original bug report. Android 4.0 compilation is\nnot supported because it introduces new APIs that's cannot be easily\nsupported. You can add the empty stubs for noe just be sure to not use them.\nSupport for this will come in ABS v4. Sorry for leading you on a wild goose\nchase.\n\nJake Wharton\nhttp://about.me/jakewharton\nOn Oct 27, 2011 5:27 PM, \"Xomo\" \nreply@reply.github.com\nwrote:\n\nI have the same error while compiling using Android 4.0.1 with IDEA.\nUntil this is fixed I need to go back to Android 3.2 and everything is\nworking well then.\nIt would be nice to keep this issue open!\nThanks.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/92#issuecomment-2549675\n. Your repo is private but I understand the issue and will look into it. Looking toward a 3.4.0 release this weekend so I hope to get the fix in.\n. Fixed in 4.0-wip branch. Betas to be announced tonight.\n. If you could, try the dev branch. It has the upcoming 3.4.0 version which is based on the r4 ACL that was just released. It also contains a bug fix that should fix the situation you describe.\n. Android 4.0 support will be coming with #23. Unfortunately it's not trivial to support on the current 3.x versions of this library. Only waiting on the release of the Ice Cream Sandwich sources now...\n. GItHub wasn't sending me email updates on new issues by default for some reason. Just noticed this and will investigate later today.\n. Well I can't seem to reproduce this on either my phone or the emulator. The line in question is:\n\njava\n((ViewGroup)view.findViewById(R.id.abs__content)).addView(contentView);\nwhich leads me to believe it's an R.java issue. Are you using the APK from the market/downloads or building yourself?\n. The whole point of the ADT 14 changes was to eliminate this problem. I\nwonder if the maven compilation somehow inlined the values. I'll try\ndisassembling it when I get back to the hotel to see. For now you can set\nit up as another library project which will fix the errors (that's how the\nmarket app was compiled).\n\nJake Wharton\nhttp://about.me/jakewharton\nOn Nov 2, 2011 9:27 PM, \"Nikolay Elenkov\" \nreply@reply.github.com\nwrote:\n\nThe demo app from the market works fine. If I build it myself, or try to\nintegrate into my project, I get the NPE. It does seem that it only happens\nwhen I add the plugin as a jar though -- if I add the preferences project\nas a library project, it works fine. Wonder what the difference is...\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/96#issuecomment-2613159\n. Its a plugin. Check http://abs.io/download\n\n\nJake Wharton\nhttp://about.me/jakewharton\nOn Nov 2, 2011 10:12 PM, \"xDragonZ\" \nreply@reply.github.com\nwrote:\n\nThat's weird , why i cant find any\nandroid.support.v4.app.SherlockPreferenceActivity in the latest 3.4.0\nrelease?\nDid you forget to include it or it only available in demo only?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/96#issuecomment-2613351\n. Both plugins seemed to have their R.java values inlined during compilation due to the use of Maven. The android plugin hasn't been updated to specifically account for ADT 14 and as a result the generated R.java file contains static final ints rather than just static ints.\n\nI've posted to their mailing list and am waiting to hear back. For now, as said previously, use both plugins as additional library projects until I can get new plugins out there.\n. Merged into dev branch.\n. My only potential issue with this is that you are now exposing a new API on ViewPager which is not present in the actual compatibility library. I don't mind including bug fixes in the compat lib classes but I have to be wary of adding methods. I'm not wholly against it, I just need to consider it carefully.\nIs there any reason that you are taking this approach rather than keeping track in an adapter via the setPrimaryItem callback?\n. That was a recent addition with the r4 ACL. GIve it a try and let me know what you think. I'm going to merge this leaving that out for now.\nAnd yeah the tabs and publicizing of the fragment name method (a common question in IRC) looks great.\n. Does this happen on both pre-3.0 and post-3.0 devices? Or is it only happening on pre-3.0?\n. FYI the forthcoming version 3.5 (currently in the dev branch) should fix this as it uses the exact same classes as Android 4.0 for menu and action item control.\n. Couple days max. As of tonight it's stable enough for testing just going to put the word out to some people to try it in their apps for a final testing.\n. Released with 3.5.0.\n. Do you know how does Android 4.0+ handle this? Is the background limited to existing in the primary action bar only or does it extend it down into the tab bar?\n. It looks like they apply their own grey background to the tab navigation. Can you set your background on the 4.0 action bar and take a screenshot just to confirm.\nIf that is indeed the case I will update ActionBarSherlock to mimic the same behavior in the forthcoming 3.4.1 release.\n. Alright I'll get the implemented tomorrow in the dev branch and the release\nis looking to be this weekend.\n\nJake Wharton\nhttp://about.me/jakewharton\nOn Nov 7, 2011 5:56 PM, \"Jon Willis\" \nreply@reply.github.com\nwrote:\n\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/101#issuecomment-2662841\n. Things like that light grey divider will come with ActionBarSherlock v4.0\nwhich will be a full backport of the Ice Cream Sandwich implementation once\nthe sources are released.\n\nI thought the scrolling tabs made it into this release... That might only\nbe for the inline tabs and not the tabs that are below the action bar. I'll\nhave a look and update the dev branch accordingly\n\nJake Wharton\nhttp://about.me/jakewharton\nOn Wed, Nov 9, 2011 at 12:44 PM, Jon Willis \nreply@reply.github.comwrote:\n\nThanks, I switched to the dev branch to try it out and this is working\nbeautifully. The only suggestion I would have is to include the little\nlight grey divider in between tabs for consistency with ICS. Also, are you\nplanning on implementing the scrolling tab bar from ICS?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/101#issuecomment-2686987\n. Abstracting the action bar logic into its own class is something that I do want to move towards but with the 4.x version of ActionBarSherlock.\n\nSome of the choices that you have made, however, I take a bit of issue with. The exposing of internal functionality such as the fragment manager and internal handler as public will inevitably lead to problems with users accessing them. This was the reason for the public internal callbacks method which had package-scoped methods.\nI'll leave this open as it has some things which I do want to move toward.\n. All of the methods that were in the internal callbacks shouldn't be public since they expose the behind-the-scenes implementations of certain fragile things.\n. I'm closing this, if you look that the 4.0-wip progress I am already using a centralized class for management.\n. Merging into #105.\n. Try the jars I just uploaded. You might have to be using the dev branch,\nnot sure.\n\nJake Wharton\nhttp://about.me/jakewharton\nOn Nov 6, 2011 6:55 PM, \"Nikolay Elenkov\" \nreply@reply.github.com\nwrote:\n\nThis is caused by the  in layout-land/abs__screen_action_bar.xml\nand this inflate call in SherlockPreferenceActivity:\nView view = getLayoutInflater().inflate(R.layout.abs__screen_action_bar,\nnull);\nThe root parameter is obviously null, but not sure how to work around this.\nReproduced on Android 2.1-2.3.\nStacktrace:\njava\njava.lang.RuntimeException: Unable to start activity\nComponentInfo{org.nick.wwwjdic/org.nick.wwwjdic.WwwjdicPreferences}:\nandroid.view.InflateException: <merge /> can be used only with a valid\nViewGroup root and attachToRoot=true\n       at\nandroid.app.ActivityThread.performLaunchActivity(ActivityThread.java:1816)\n       at\nandroid.app.ActivityThread.handleLaunchActivity(ActivityThread.java:1837)\n       at android.app.ActivityThread.access$1500(ActivityThread.java:132)\n       at\nandroid.app.ActivityThread$H.handleMessage(ActivityThread.java:1033)\n       at android.os.Handler.dispatchMessage(Handler.java:99)\n       at android.os.Looper.loop(Looper.java:143)\n       at android.app.ActivityThread.main(ActivityThread.java:4196)\n       at java.lang.reflect.Method.invokeNative(Native Method)\n       at java.lang.reflect.Method.invoke(Method.java:507)\n       at\ncom.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:839)\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:597)\n       at dalvik.system.NativeStart.main(Native Method)\nCaused by: android.view.InflateException: <merge /> can be used only with\na valid ViewGroup root and attachToRoot=true\n       at android.view.LayoutInflater.inflate(LayoutInflater.java:379)\n       at android.view.LayoutInflater.inflate(LayoutInflater.java:320)\n       at android.view.LayoutInflater.inflate(LayoutInflater.java:276)\n       at\nandroid.support.v4.app.SherlockPreferenceActivity.ensureSupportActionBarAttached(SherlockPreferenceActivity.java:155)\n       at\nandroid.support.v4.app.SherlockPreferenceActivity.onCreate(SherlockPreferenceActivity.java:262)\n       at\norg.nick.wwwjdic.WwwjdicPreferences.onCreate(WwwjdicPreferences.java:110)\n       at\nandroid.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1093)\n       at\nandroid.app.ActivityThread.performLaunchActivity(ActivityThread.java:1780)\n       ... 11 more\nandroid.view.InflateException: <merge /> can be used only with a valid\nViewGroup root and attachToRoot=true\n       at android.view.LayoutInflater.inflate(LayoutInflater.java:379)\n       at android.view.LayoutInflater.inflate(LayoutInflater.java:320)\n       at android.view.LayoutInflater.inflate(LayoutInflater.java:276)\n       at\nandroid.support.v4.app.SherlockPreferenceActivity.ensureSupportActionBarAttached(SherlockPreferenceActivity.java:155)\n       at\nandroid.support.v4.app.SherlockPreferenceActivity.onCreate(SherlockPreferenceActivity.java:262)\n       at\norg.nick.wwwjdic.WwwjdicPreferences.onCreate(WwwjdicPreferences.java:110)\n       at\nandroid.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1093)\n       at\nandroid.app.ActivityThread.performLaunchActivity(ActivityThread.java:1780)\n       at\nandroid.app.ActivityThread.handleLaunchActivity(ActivityThread.java:1837)\n       at android.app.ActivityThread.access$1500(ActivityThread.java:132)\n       at\nandroid.app.ActivityThread$H.handleMessage(ActivityThread.java:1033)\n       at android.os.Handler.dispatchMessage(Handler.java:99)\n       at android.os.Looper.loop(Looper.java:143)\n       at android.app.ActivityThread.main(ActivityThread.java:4196)\n       at java.lang.reflect.Method.invokeNative(Native Method)\n       at java.lang.reflect.Method.invoke(Method.java:507)\n       at\ncom.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:839)\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:597)\n       at dalvik.system.NativeStart.main(Native Method)\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/105\n. You probably only need to clean your projects so that all of the R.java files are regenerated.\n. You do not need to include Google's compatibility library jar. It will cause conflicts and your app won't compile. You also need to be building your app with Android 3.2 as well as the library.\n\nFor further questions such as this please ask in the forums: http://abs.io/forum\n. Yes. See the samples for more info. They all run back to 1.6.\n. I'll release a new version very soon to fix this but for now:\n``` xml\n\n    <!-- your customizations here --></p>\n<pre><code>&lt;item name=\"actionBarTabBarStyle\"&gt;@style/Widget.MyApplication.ActionBar.TabBar&lt;/item&gt;\n</code></pre>\n\n\n    <item name=\"android:background\">@color/actionbar_tabbar_background</item>\n\n0xFFFF0000\n```\nThis will change it to bright red. Tweak as necessary.\n. I had hoped the style would override the specified value. I'll try to release a new version tonight then which fixes this.\n. Fix released as v3.4.2.\n. The tab backgrounds are a state-list drawable. You provide different\n9-patches for the selected state.\nOn May 30, 2012 12:19 PM, \"Bob Hucker\" \nreply@reply.github.com\nwrote:\n\nHow would I change the color of the bars at the bottom of the tabs that\nshow which tab is selected?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/108#issuecomment-6018786\n. You need to create all new assets for all of the states in all three densities, create your own XML, and then specify that as the tab background in a tab style in your custom theme.\n. The 'Styled' sample has an example of this.\n. Closing this because the following two apps exhibit the same behavior on ICS. That is, no action bar, and no menu anywhere.\n\njava\npublic class ABSTempActivity extends android.app.Activity {\n    public boolean onCreateOptionsMenu(android.view.Menu menu) {\n        menu.add(\"Test\").setShowAsAction(android.view.MenuItem.SHOW_AS_ACTION_IF_ROOM | android.view.MenuItem.SHOW_AS_ACTION_WITH_TEXT);\n        return true;\n    }\n    public void onCreate(android.os.Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        getActionBar().hide();\n    }\n}\njava\npublic class ABSTempActivity extends com.actionbarsherlock.app.SherlockActivity {\n    public boolean onCreateOptionsMenu(com.actionbarsherlock.Menu menu) {\n        menu.add(\"Test\").setShowAsAction(android.view.MenuItem.SHOW_AS_ACTION_IF_ROOM | android.view.MenuItem.SHOW_AS_ACTION_WITH_TEXT);\n        return true;\n    }\n    public void onCreate(android.os.Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        getActionBar().hide();\n    }\n}\n. I guess because on 3.0+ the action bar is the title bar. Never occurred to me when I was running your example. Very good find.\n. Yes but the user-facing custom title bar is much more limited in what it can do once created which is why I chose not to use it.\n. Any update on this? I've never been able to reproduce and around the time when this was filed ADT was being very buggy with library projects, resources, and 9-patch drawables.\n. Sorry, busy couple days. There were a lot of changes in the plugins from the 3.3.x to the 3.4.x releases. Mostly due to working around ADT bugs. Glad you got it resolved, though.\n. Some of these should be fixed in the dev branch for the upcoming 3.5 release. Not sure how to exactly handle disabled items in an action-item submenu just yet as I'm quite fond of just using the build-in AlertDialog list.\n. Released with 3.5.0.\n. The FragmentMapActivity class is exactly the same as FragmentActivity except that it extends from MapActivity. As you rightly guessed, this allows you to use a single MapView anywhere in your view whether it be inflated from XML or created in code on either the activity directly or through a fragment.\nUsing a map with fragments will not be an easy road and you have to be very careful. It is also not supported by Google and the official compatibility library.\nAny future questions like this should be directed toward the mailing list.\n. I think the 4.0 action bar behaves this way to ActionBarSherlock 4.0 will provide this support. There is no way to do this with ABS 3.x. If you have further questions please direct them to the mailing list: http://abs.io/forum\n. I see this too. Looks like a problem with touch interaction only as using the trackball still works.\n. Good catch. I'm going to try to pull in the ICS version of tabs (animated & scrollable) for 3.5 but if it doesn't make it I'll pull in your commit. Thanks.\n. Released with 3.5.0.\n. Should be fixed. Just deployed.\n. Please as questions on the mailing list: http://abs.io/forum, though this question has nothing to do with ActionBarSherlock itself so you might find better luck on the official Android mailing list ( http://groups.google.com/group/android-developers ) or on StackOverflow.\n. This is fixed in the dev branch. Will be released soon.\n. Released with 3.5.0. Actual market APK update will be later tonight.\n. Thanks!\n. This should be fixed in v3.5 which will be out in a few days. I pulled some stuff from the development of v4 to fix some nasty stuff that's been around in 3.x for far too long.\n. Released with 3.5.0.\n. I get this a lot but no one has been able to definitively tell me whether or not the native action bar on 3.0+ supports this.\n. When an app is running on Android 3.0+ it uses the native action bar and not the implementation from the library.\n. I've tested about 15 apps using ActionBarSherlock on my Galaxy Nexus and they all work fine. Are you positive that the error is related to this library? What attribute does 0x7f01000d map to in your R.java? Can you provide a test project that produces this behavior?\n. It is a custom attribute defined in the library. It will always be present because it gets put in your apps R.java and thus is present no matter what platform you are running it on.\nThings like this are usually a result of having different versions of ADT and the ADT Eclipse Plugin. If you can create a reproducible test case I'd be happy to take a look.\n. Er, yeah. Don't know why I thought it was inverse.\n. Trumped by #143.\n. Include the maps plugin, have your activity extend from FragmentMapActivity, and place the MapView in the fragment for the third tab. Take a look at samples/plugins/ for a few examples of a map being used with the library.\nFor questions like this please use the forum at http://abs.io/forum\n. Fixed on dev branch. Feel free to use that until a proper 3.5.1 is released.\n. Released with v3.5.1. Sorry for the delay!\n. Does this work? I get a light action bar on both pre/post 3.0 with this style.\n. Pushed a sample Action Bar/Simple (Dark-Light Theme) for it just specifying the theme in the manifest.\n. Separator logic was changed to match ICS. Looking into this now...\n. Yeah I just added a demo for it. It appears you have to handle clicks yourself on 4.0+ and since ABS 3.5's action menu is ported from the ICS it behaves the same.\n. The action menu will place a divider before an action item if the previous action item is non-custom and has text or if the current item is non-custom and has both text and an icon.\nSee this and this for the code.\n. Those classes come from the Android Compatibility Package which does not contain support for fragment bread crumbs. Please file a feature request for this on http://b.android.com as I think we'd all like to see it.\nI'm going to close this as I am refocusing this library for v4.0 on providing and supporting only the action bar component and not maintaining separate enhancements to the entire compat lib. That's not to say, however, that I won't backport this as a small standalone .jar once 4.0 is released.\n. Took a quick look at the sources, other than requiring a few resources there's no reason why this can't be implemented for the compat lib as far as I can tell. This does mean that until ADT supports bundling resources in .jar files that it will have to be consumed as a library project (or apklib if you're using maven).\nI'll take a stab at this next week. You may want to \"watch\" my profile on GitHub, follow me on Twitter, or circle me on G+ in order to see the announcement as it will definitely be in a separate repo.\n. Proof of concept is working. Needs a bit of polish before a 1.0 release. Follow at https://github.com/JakeWharton/HanselAndGretel\n. This is a feature of the Ice Cream Sandwich action bar and thus will work in ABS 4.0. It is not possible in v3.x.\n. This is a bug in the layout display code. What ABS v3.x does with themes is unconventional but still perfectly valid. I filed a bug on the Android bug tracker a couple months ago about this but it still seems unresolved (http://code.google.com/p/android/issues/detail?id=19599).\nABS v4 will not have this problem.\n. This was already fixed in the dev branch as d023ad37433735b0a39f35c366669779765dc566 and will be released with v3.5.1 hopefully soon. Thanks for contributing though!\n. Released with v3.5.1. Sorry for the delay!\n. Fix'd\n. Yes the Android system title bar is hidden. I think it's probably the fact that I didn't set up methods in the base activities for this yet. The issue is just serving as a reminder.\n. Happens with native PreferenceActivity too. Weird behavior but correct.\n. Man 1.6 is annoying. I'll get a commit for this in tonight. Thanks for reporting!\n. FIxed on dev.\n. Released with v3.5.1. Sorry for the delay!\n. textAllCaps is an API 14+ attribute which is probably why it showed as an error for you. It will be ignored on previous platforms. ABS 4 requires Android 4.0 for compilation.\n. What are you compiling with in Eclipse though? It has to be 4.0 or 4.0.3 and not 3.2 like ABS v3.x.\n. This will not be supported. If you don't want the action bar we'll provide a Theme.Sherlock.NoTitleBar (or you can disable with an attribute in your own theme).\n. Closing as dup of #143.\n. This will come with ABS v4. See http://beta.abs.io/ to try the beta.\n. Thanks. Turns out I forgot to merge the ICS MenuInflater altogether.\n. Released in beta 4 @ http://beta.abs.io/\n. Probably related to https://groups.google.com/d/topic/actionbarsherlock/pWsWWXZp5nQ/discussion. Investigating.\n. Can't figure this out! I'll try stepping through with the debugger this weekend.\n. Well I fixed this bug (the one where they disappear). Now I just have to figure out why the initial state and page don't get their action items displayed. So close!\n. It's definitely fixed. Action items are there when inspected with hierarchy viewer. Seems to be some kind of view invalidation problem.\n. Just built the latest dev branch of SeriesGuide with the latest 4.0-wip of ActionBarSherlock and I no longer observe this problem. Nor do I observe the problem described in my previous comment where non-split action items would be created but not shown anymore. Closing!\n. Definitely a bug. There should be no perceivable difference between the native action bar and ABS4.\n. Good catch.\n\nJake Wharton\nhttp://about.me/jakewharton\nOn Tue, Jan 3, 2012 at 2:20 PM, SimonVT <\nreply@reply.github.com\n\nwrote:\nSplit actionbar is still shown in landscape on phones.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/154#issuecomment-3344682\n. Released in beta 4 @ http://beta.abs.io/\n. Yeah odd. It should be hitting the -w480p when in landscape which disables that. I'll re-open and investigate later.\n. I forgot to prefix the booleans with abs__.... facepalm\n. Even if you modify ABS the behavior won't change on Android 4.0 and newer. I suspect you're running on a newer device which is why you don't see the changes reflected.\n. Released in beta 4 @ http://beta.abs.io/\n. Duplicate of #156. Will be released with beta 4 today. Thanks!\n. Released in beta 4 @ http://beta.abs.io/\n. Did you try beta 4?\n\n\nJake Wharton\nhttp://about.me/jakewharton\nOn Tue, Jan 3, 2012 at 5:11 PM, Neal Sanche <\nreply@reply.github.com\n\nwrote:\nOn ICS, the split action bar (on bottom of screen) combines with the top\npart of the action bar in landscape mode. This is not occurring with ABS\n4.0-wip.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/158\n. Fixed by 77bab795581a119e914cbb7b52ce76407bbfeec4. Will be in beta 5.\n. FYI, ABS 4 never uses the native action bar. I'm re-doing styles now to fix #149 so hopefully this will remedy this as well.\n. Closing as dupe of #143.\n. Native bug. Pushing to 4.0.1. http://b.android.com/24035\n. Were you testing on the emulator? Seems to be a purely emulator-related bug. All of my tests that have rendered incorrectly on the emulator worked perfectly on an actual ICS device.\n. Closing as a native/emulator bug for now. Please send an example .zip or provide a repository for testing if you still see the bug and can create a reproducible test case.\n. This is already fixed on the dev branch but I really appreciate the pull request. I've been sitting on it for about two weeks. I swear I'll release 3.5.1 tonight.\n. The animation which brings the action mode's views in seems to be using a method that is API 11+ only. Relates to #138.\n\nBrilliant bug report! Thanks.\n. Closing this issue. Updated the linked issue to cover both action bar and modes since they're the same problem.\n. The overflow should go into the normal options menu (triggered by menu key) on pre-3.0 by default. If you want to force an overflow menu on the action bar set absForceOverflow to true in your theme.\n. No, sorry. I thought you were referring to ABS 4.0. On 3.x the overflow menu gets pushed to the normal system options menu.\n. Might be the best commit message ever... Thanks!\n. I think I use calls to onPrepareOptionsMenu to trigger this but I probably should be using onKeyDown or something...\n. This is intended behavior of sorts. The whole concept of ABS (especially with v4) is to provide an action bar which looks the same across all devices and API levels. As such, I had to implement my own version of ProgressBar within the library itself in order to properly provide custom theming for it. I chose to go with the ICS style since that's the theme of everything else.\nIt would be trivial, however, to support the blue style on Honeycomb, I'm just not sure if it's what I want to do. I'll have to experiment with it and see how it looks (since the HC and ICS blues are very different). I'll leave this open as a reminder.\nAnd the reason the tabs are blue is because its using the system ProgressBar as just an example of custom views in tabs. I understand why that is a jarring experience. I should probably change that demo regardless so this doesn't happen on any device < ICS.\n. The problem with allowing native styling to be applied is that while some vendors may be polite and only change the drawables, others will change the size, padding, and/or margins of the default indeterminate progress bar widget which will effect how it is positioned. I'm taking the view of the entire action bar functioning as a single custom widget and therefore will have its own styling independent of the system (on pre-4.0).\nSince the action bar is highly themable, however, it's not impossible to achieve a native look simply by having a custom theme for the action bar and specifying the following:\nxml\n<item name=\"indeterminateProgressBarStyle\">?android:attr/indeterminateProgressBarStyle</item>\nThis should accomplish what you are looking for.\nNow as to whether or not I'll be providing a built-in theme for this remains to be seen. I am in the process of rewriting the themes right now to include all three of the system variants. I probably will be providing a version that inherits from Theme.DeviceDefault on API 14+ but I'll have to consider whether that same theme should also attempt to apply native styling the appropriate things on pre-4.0 as well.\nI'm going to move this to the v4.0.1 milestone since my main concern is just getting the core functionality and look done.\n. I've decided not to add this to the core of the library since the Honeycomb market share should be dwindling.\nTo add it yourself you need only do something like the following:\nxml\n<!-- values-v11/ -->\n<style name=\"Theme.MyTheme\" parent=\"Theme.Sherlock\">\n    <item name=\"actionBarStyle\">@style/Widget.MyTheme.ActionBar</item>\n</style>\n<style name=\"Widget.MyTheme.ActionBar\" parent=\"Widget.Sherlock.ActionBar\">\n    <item name=\"indeterminateProgressStyle\">@android:style/Widget.Holo.ProgressBar.Large</item>\n</style>\nThe only downside of this is that the Honeycomb blue and the ICS blue clash a bit so you'd also probably want to set the action bar background to @null or something if you weren't already providing a custom background.\n. I wonder if this happens with the native action bar too? Crazy use case but awesome little bug!\n. Happens in native action bar too but only when the title is specified explicitly. http://b.android.com/24034\n. Going to close this. Since we now proxy to native on 4.0+ I can't fix any bugs like this because the behavior will differ across platforms. However, I did start contributing fixes to AOSP for action bar-related things so I'll try to get to this one so it makes it into the next Android release.\n. We already receive onPostCreate dispatch. Update to force layout init if not already done.\n. Theme.Holo.Light.DarkActionBar was introduced in API 14 and ABS 3.x only officially supports compiling against API 13. Of course, API 14 and 15 are easy enough to support as a compilation target by simply adding a few default method implementations to MenuItemImpl and MenuItemWrapper. This has other implications, however, which is why it hasn't been done officially.\n@chrisbanes I had a problem with something with the implementation which was the reason for the last-minute pull. List navigation perhaps? I can't remember. I was in a hurry to release the null Bundle fix since I had gotten about 4 emails and 2 pull requests with patches and people prodding for it.\n. I'm going to close this for now. It will be present in 4.0 (which I'm targetting for end of the month, fingers crossed!). It shouldn't be terribly difficult for someone to implement this themselves to the degree that's required for their implementation. You should be providing your own style customization anyways.\n. Is this referring to ABS v4? If so it's probably a duplicate of #150. I hadn't spent time properly binding to the native menu yet.\n. I'll try to get to this today.\n. Guess I'll have to dispatch onPause to the ActionBarSherlock class to hide the overflow if it's open. I briefly looked through the window manager code last night to see where it does this but couldn't locate it quick enough.\n. There is no workaround that I know of. I usually just use Theme.Holo when previewing my XML in the layout editor. We're just stuck waiting for the next version of ADT.\nABS v4 won't have this problem.\n. There doesn't seem to be any way for it to stick unfortunately. All we can do is hope the next version of ADT comes along quickly with a fix. Worst part is the fix was supposed to come out with v16 already...\n. The only problem with this is that it won't be reflected on Android 3.0+. I'm not sure how that hard coded value slipped through but tabs should be the same height as the action bar.\n. Overflow on devices with a menu key go into the normal options menu. If you want to force an overflow action item you can do so with the absForceOverflow theme attribute. See the 'Forced Overflow' sample in the demos.\nThere is also a Theme.Sherlock.ForceOverflow which you can use/inherit from.\n. This will be provided by ABS 4 (#143).\nIn order to do this with v3.x, just copy the abs__styles.xml from the values-v11/ folder to values-v14 and change the parent to the appropriate DeviceDefault theme. You will, of course, have to compile with Android 4.0 which means implementing a few empty methods in MenuItemImpl and MenuItemWrapper for the three or four new methods added to the MenuItem interface in ICS.\nI'm not going to put this in the repository since I don't want to impose using 4.0 for compilation.\nGoing to close this but if you have any more questions about accomplishing this don't hesitate to post on the forum (http://abs.io/forum) or email me directly. Best of luck!\n. If you have any troubles feel free to post on the forum http://abs.io/forum or email me directly. \n. Whoops. I already said that... haha. Doing a lot of emails tonight :-)\n. This is covered under v4.0 which will have a release candidate tomorrow. Thanks for the pull request though!\n. ABS v3.x only support compiling with Android 3.2. If you need to compile with 4.0+ then you will need to add additional (empty) methods to MenuItemImpl and MenuItemWrapper to correspond to those added to MenuItem in ICS.\nSupport for Android 4.0 will come with ABS 4.0.\n. Is this for ABS v3.5 or the v4.0 betas?\n. FYI The platform returns mTitle.toString() so they must do something different somewhere else...\n. This bug only exists because debug logging is enabled in the betas (which implicitly calls the toString() method). I'll make sure it's disabled by default in the next beta and release so you'll get no problems.\n. May be a dupe of #153. There's definitely something odd going on with the compat lib.\n. This should be fixed for the next beta. I redid the support library's FragmentActivity and it appears to be behaving a bit better. There's still small bugs (see comments on #153) but I'm closing this for now. If you find problems when I release beta 6 please re-file.\n. Can you provide a super minimal test case in a .zip or the code in a pastebin somewhere? I can debug it very rapidly tomorrow with one.\n. I've narrowed the problem to ActionMenuPresenter#updateMenuView(boolean) not being called the second time. Now figuring out why it's not being called is a whole other matter entirely...\n. If someone smart wants to give this a try, here's the zip: http://dl.dropbox.com/u/6602046/ABS-release4-issue187.zip\nMaybe someone like @SimonVT, the miracle worker :)  I've tried just about everything I know. It has something to do with repeated invalidation of the options menu not triggering the aforementioned method which would cause the view to update. If you compare all the relevant class files they're virtually identical. I'll keep at it but it's currently escaping me.\n. @christopherperry Fixed! g0g0g0!\n. Fixed with #189.\n. Duplicate of #184.\n. PhoneWindow applies this property to the decor view which encapsulates the\ntitle bar and action bar. I'd be curious to see if this bug presents itself\nnatively since its action bar is also transparent. I will test after lunch.\nOn Jan 20, 2012 12:10 PM, \"ChrisSmith\" \nreply@reply.github.com\nwrote:\n\nI was skeptical of the difference it would make on newer devices (that\narticle is 3 years old and using the G1) but there is still a noticeable\nimprovement. I modified Romain Guy's application to use ABS and these are\nmy results (on my G2):\n- @null = 34/35 fps\n- @android:color/transparent  = 30/31 fps\n- @android:color/black = 28 fps\nUnfortunately ABS isn't opaque like the rest of your map view. I'll look\nmore into this later\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/190#issuecomment-3586826\n. A workaround would be setBackgroundDrawable(new ColorDrawable(0xFF000000))\nOn Jan 20, 2012 12:15 PM, \"Jake Wharton\" jakewharton@gmail.com wrote:\nPhoneWindow applies this property to the decor view which encapsulates the\ntitle bar and action bar. I'd be curious to see if this bug presents itself\nnatively since its action bar is also transparent. I will test after lunch.\nOn Jan 20, 2012 12:10 PM, \"ChrisSmith\" \nreply@reply.github.com\nwrote:\n\nI was skeptical of the difference it would make on newer devices (that\narticle is 3 years old and using the G1) but there is still a noticeable\nimprovement. I modified Romain Guy's application to use ABS and these are\nmy results (on my G2):\n- @null = 34/35 fps\n- @android:color/transparent  = 30/31 fps\n- @android:color/black = 28 fps\nUnfortunately ABS isn't opaque like the rest of your map view. I'll look\nmore into this later\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/190#issuecomment-3586826\n. I'm not sure if there is a fix for this one other than simply not doing this or explicitly setting an action bar background (and possibly an action bar split background). We suffer from having to be part of the PhoneWindow's content view rather than the decor view like the native action bar. I'll re-open as a reminder to look into it further but I'm not going to block a release for something like this.\n. If you need to set windowBackground to @null you should also set actionBarStyle to Widget.Sherlock.ActionBar.Solid so that it draws an opaque background.\n. Sample app appears to be fixed! New beta coming soon!\n. This code is part of the Google support library which is included in ActionBarSherlock v3.x. I suggest you file a bug on http://b.android.com or send a patch to http://android-review.googlesource.com.\n. Yep, this could probably happen. Thanks!\n. The action bar affordance is a platform feature for a reason and if it is available there no reason that we should not be using it. I choose to skip Honeycomb because it's implementation is nowhere near as powerful as ICS and its market share will likely never get above a few percent anyways.\n\n\nBy deferring to the native implementation we also stand to gain from any future modifications to how the action bar is displayed. Though never implemented, Google TV experimented with displaying the action bar on the left side of the screen rather than across the top. We don't know what the action bar will evolve into in the coming platforms and its best if we didn't restrict applications to essentially being stuck with an API 14 action bar on every new platform. There's a good chance that a lot of applications won't be updated anyways so by using the native version we can at least ensure their look evolves somewhat with the platform.\nIn any case, it's the right thing to do despite being a hard thing to do. Ignoring that platform implementation altogether would be a mistake.\n. Closing as this is coming along nicely. Lots of wrinkles to iron out but the main implementation is done.\n. I think getSupportFragmentManager() is supposed to initialize the action bar. I'll have to check the platform's Activity source code later tonight. Calling getSupportActionBar() will do it explicitly too which is why that works.\n. Well I was referring to the native Activity class but it does essentially the same. I ended up going with firing initActionBar when onPostCreate is dispatched which should work well enough.\n. You're not targeting API 11 or newer in your manifest.\n. GitHub notifications were off on this by default for some reason. Never got the initial email... sorry!\nThanks for the updated contribution!\n. Is this for v3.x or the 4.0 betas?\n. Fixed with the latest from 4.0-wip. Closing.\n. Not taking any new things on the master branch but I've added this for the next major release. Thanks!\n. Padding isn't applied as generously on the pre-3.0 action bar as is the native variant (the native version is also 56dp as opposed to our 48dp). If you follow the edge guidelines on the icon docs you'll be alright.\nIn any case, version 4.0 handles this properly even if you do not follow the guides.\n. Can you paste your full manifest? Or at least the root tag, application tag, and the activity tag in question (and all their attributes)?\n. The activity name is supposed to be either a fully qualified class name or a relative name from your manifest package (hence the leading period). I suppose that we should also account for ones without it, though, since the Android OS does the same. I'll leave the bug open as a reminder.\n. You should be using the compiled .jar of the support-lib plugin in your apps libs/ folder rather than as a library project.\n. You should include **/Fragment.*,**/Fragment$* too. I seem to have forgotten it in the pom.xml...\n. Is this for version 3 or the version 4 betas?\n. This won't work if the user specified a fully qualified class name in the manifest that is different from their manifest package\nE.g.,\nxml\n<manifest\n    package=\"com.jakewharton.whatever\">\n    <!-- ... -->\n    <activity android:name=\"com.some.library.package.SuperActivity\" />\nNeed to add something like.indexOf('.', 1) == 0 to the conditions.\n. Just thought of another case.\nxml\n<manifest package=\"com.jakewharton.whatever\">\n    <!-- ... -->\n    <activity android:name=\".ui.ThisAndThat\" />\nSo the three cases that need to be handled are:\n- Fully qualified class name (e.g., android:name=\"com.my.package.TheActivity\")\n- Relative class name that starts with '.' (e.g., android:name=\".ui.ThisAndThat\")\n- Unqualified class name (e.g., android:name=\"TechnicallyWrongButStillWorksActivity\")\nI think we might be able to get away with this by simply adding the startsWith('.') check back in as the first condition (since it's the most common case, hopefully) and then or-ing the indexOf.\nI'm going to write up some test cases for this one today...\n. Implemented this myself here along with a juggernaut commit. Tests are here which are run via Maven (and pass!).\nThanks for your help on this.\n. Probably related to #186 and #153. Something odd is going on with FragmentActivity...\n. Going to close as a dupe since it's obviously a problem with measurement.\n. If you look closely I don't think the close button animates on subsequent launches of the action mode either\n. I think this specific bug is fixed. Subsequent action mode close buttons are clickable on all supported platforms. The problem still exists where it doesn't animate on every instance after the first on pre-3.0 which I'm pushing to 4.0.1.\n. Needs re-investigation\n. Damn. That's going to be tricky...\n. I'll have to write a wrapper of some sort around getResources().getBoolean() for pre-3.2 platforms that provides hard coded values for checks against the display metrics to determine the smallest-width dp and regular dp resource qualifiers. I initially had something like this but had hoped I could get away with things like the 'normal' and 'large' metrics. Oh well.\n. I spent two hours trying to get it working. It's in the share-action-provider branch if anyone wants to have a go. Demo is included.\n. It should merge fine as it's mostly new files only. I probably should rebase it against master and push that up.\n. Log spits about reflection in PropertyViewAnimator which should not happen as we're using AnimatorProxy.\n. You don't have to use Maven, the projects use the standard Android directory layout.\nAnything to do with loaders is part of the official support library and you should file bugs on http://b.android.com.\nAlso, ABS v4 drops support for 1.6.\n. Damn it's so obvious now that I look at it! I could literally reach through the internet and hug you right now.\n. You can customize the action bar by specifying an alternate style for actionBarStyle which uses Widget.Sherlock.ActionBar as its parent. There you can modify any of the attributes which control the action bar's appearance.\nHere are the defaults for reference:\n``` xml\nuseLogo|showHome|showTitle\n?attr/actionBarSize\n0dip\n0dip\n0dip\n0dip\n@layout/abs__action_bar_home\n@style/TextAppearance.Sherlock.Widget.ActionBar.Title\n@style/TextAppearance.Sherlock.Widget.ActionBar.Subtitle\n@drawable/abs__ab_transparent_dark_holo\n@drawable/abs__ab_stacked_transparent_dark_holo\n@drawable/abs__ab_bottom_transparent_dark_holo\n?attr/dividerVertical\n@style/Widget.Sherlock.ProgressBar.Horizontal\n@style/Widget.Sherlock.ProgressBar\n32dip\n8dip\n```\nLooking at the default theme and styles is the best way to see what theming options are available.\n. The native action bar does this too. It's part of the collapsing behavior for showing only tabs. Normally you would hide the title as well so that all that remained was the tab bar.\n. Thanks! I pulled in your changes manually since the pull request was against the wrong branch. I also chose to be a bit less forgiving (at least for now) when looking up items. If I see a lot of errors coming up I'll change it to be more forgiving but I prefer to fail fast for now.\n. Yep. Wasn't fully done with that yet. Fixed!\n. You have to use Theme.Sherlock or Theme.Sherlock.Light as your theme.\n. Lets turn this issue into 'Fail gracefully if missing theme' :)\n. So there's no easy way to support this so I settled for providing a more informative error message.\n\n02-07 22:52:03.063: E/AndroidRuntime(5249): Caused by: java.lang.IllegalStateException: You must use Theme.Sherlock, Theme.Sherlock.Light, Theme.Sherlock.Light.DarkActionBar, or a derivative.\n. This has been a bug for the last few betas. Spinner's are the worst widget ever :(\n. The issue is far from being that simple, unfortunately. The problem is the default list item layout is hard coded to use a specific color setting in the theme which is always wrong because of how Spinners normally have a contrasting background. You can see evidence of this all over StackOverflow and the developer mailing list when people try to do the same thing.\n\nThe way it was solved in ABSv3 was requiring users to use a custom layout for the contents. I'm not sure there will be any other way to do for this either.\nI hate Spinners...\n. This stems from our inability to apply (or read) attributes from a non-theme style to something else (in this case just another style with android:-prefixed attributes. See: http://stackoverflow.com/q/6486594/132047)\nI don't know how to solve this (yet) in an easy-to-use way. Before we just moved the attributes into the theme (e.g., abBackground) but this comes with the unintentional side-effect of us applying every defined attribute to its native counterpart which overrides any system styles that have changed. This is why apps built with ABSv3 look like Honeycomb even when run on Android 4.0 and up.\nI have a possible solution that I'm churning in my brain:\nWhen proxying to the native action bar, read the various theme and style attributes and compare them to their default resource IDs. If they are different apply them using the Java API (like you tried to do).\nThe downside of this is that I now have to check every attribute for all three theme variants.\nWhat the current solution would be is that you just have to mirror your style in values-v14/ with native attributes:\nxml\n<style name=\"custom_ActionBar\" parent=\"Widget.Sherlock.ActionBar\">\n    <item name=\"android:titleTextStyle\">@style/custom_TitleStyle</item>\n    <item name=\"android:background\">@drawable/actionbarbackground</item>\n    <item name=\"android:backgroundStacked\">@drawable/actionbarbackground</item>\n    <item name=\"android:backgroundSplit\">@drawable/actionbarbackground</item>\n</style>\nThis isn't exactly the best solution as you have to duplicate any theme and/or style modifications, but it's the only one where you still are afforded the defaults of the platform on Android 4.0+ right now.\n. Yes. There is no clear solution that doesn't have a major caveat with it.\nThe only reason I'm inclined towards forcing people to specify custom things twice is that it affords us the actual defaults on 4.0+ rather than applying ICS to everything 4.0+. Jelly Bean (or whatever) is inevitable and there will likely be tweaks to the drawables and Google TV will get a major update to ICS eventually which will bring its own version of the theming and I would prefer if the native styles were used.\nI just don't know which way is least-bad...\n. The website will be completely redone for v4 and will focus heavily on common usage patterns and learning by examples. Once we hit RC1 I'll start creating it.\n. Well, I fixed the missing split/stacked background APIs on ICS in the 4.0-wip branch. They are not abstract methods in ActionBar which is why they were missed.\nIf you DL the latest from that branch you should be able to do the following:\n``` xml\n values/ \n\n    <item name=\"actionBarStyle\">@style/Widget.MyCustom.ActionBar</item>\n\n\n    <item name=\"titleTextStyle\">@style/custom_TitleStyle</item>\n    <item name=\"background\">@drawable/actionbarbackground</item>\n    <item name=\"backgroundStacked\">@drawable/actionbarbackground</item>\n    <item name=\"backgroundSplit\">@drawable/actionbarbackground</item>\n\n values-v14/ \n\n    <item name=\"android:actionBarStyle\">@style/Widget.MyCustom.ActionBar</item>\n\n\n    <item name=\"android:titleTextStyle\">@style/custom_TitleStyle</item>\n    <item name=\"android:background\">@drawable/actionbarbackground</item>\n    <item name=\"android:backgroundStacked\">@drawable/actionbarbackground</item>\n    <item name=\"android:backgroundSplit\">@drawable/actionbarbackground</item>\n\n```\nYou could probably even combine the two themes into:\nxml\n<!-- values/ -->\n<style name=\"Theme.MyCustom\" parent=\"Theme.Sherlock.Light.DarkActionBar\">\n    <item name=\"actionBarStyle\">@style/Widget.MyCustom.ActionBar</item>\n    <item name=\"android:actionBarStyle\">?actionBarStyle</item>\n</style>\nNow that there are base themes for ICS on the 4.0-wip branch (e.g., Widget.Sherlock.ActionBar maps to Android's Widget.Holo.ActionBar) I think we'd be able to automatically map the custom version of the attributes to their native counterparts so that in the end you'd only have to specify the single actionBarStyle attribute in a theme but still need two versions of the actual styles. This would, of course, have to be well documented with tons of examples...\n. Munich, you say? That's quite a worlds away but you never know...\nClosing as the issue is resolved but theming still needs a hard looking-at before a final release to ensure we're doing what's best...\n. That works too and is going to be the recommended mechanism for theming both pre/post-4.0 action bars. You'll get a resource error logged on pre-3.0 but it's just a warning.\n. Version 4 uses the binary .jar from Google rather than modify any of the sources. The first version will be released tomorrow. Thanks for reporting though! Sorry it took so long for me to respond.\n. Too many damn configurations to worry about. I need to get the test suite back on its feet...\nDidn't test my fix. Still working out how I want to approach cross ICS theming.\n. This is due to the interesting way Android handles enum attributes in themes. You're better of specifying those options in code, unfortunately.\nThe way these are specified changes a bit in version 4 which should mitigate this behavior. The first version of 4 will be released tomorrow night.\n. Fixed by #254.\n. This should be handled properly on calls to setContentView(View, LayoutParams). Or are you referring to something else?\n. Fixed in 4.0-wip. Thanks for the report!\n. You'll need to use android:Widget.Holo.ActionBar as the parent for your -v14 version of the style. Or you could update to the latest version from the 4.0-wip branch.\nI stupidly forgot to include native versions of all the widget styles. I should update the beta on the site with that commit since I assume most people will fall into the same trap.\n. The Android 2.1 classloader will rewrite the byte code of the class during\nload to throw a NoSuchMethodError but since it's wrapped in an if block it\nwill never be executed. It'll log a nasty warning but that's better than\nAndroid 1.6 which would kill the whole class being loaded.\nOn Feb 9, 2012 7:28 AM, \"Marcus Wolschon\" \nreply@reply.github.com\nwrote:\n\npublic void onConfigurationChanged(Configuration newConfig) {\n       if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.FROYO) {\n           super.onConfigurationChanged(newConfig);\n       }\nThis doesn't make any sense.\nOn devices <FROYO this class couldn't even be loaded because it references\na non-existing method \"onConfigurationChanged\".\nSo that method couldn't possibly get executed on such a device.\nClassic ClassNotFoundError .\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/236\n. Can you provide a quick .zip or pastebin of the code to demonstrate this? I'll be able to debug much faster and want to make sure I fix specifically what you're looking for.\n. When I use setCustomView(dashboard, layoutParams) I don't see the problem (I think).\n\nIs this what it's supposed to look like or is this the bug?\nhttp://i.imgur.com/K7La1.png\nhttp://i.imgur.com/kUaVt.png\nhttp://i.imgur.com/18zny.png\n. The only way to do this would be to include the spinner in your custom view. The action bar can only be so dynamic to support all of these cases and it seems that something like this wasn't accounted for unfortunately.\nThat being said, I don't disagree with you that this should be considered as an option. File a bug on http://b.android.com and paste the link to it here for reference. I've already sent in a couple tiny fixes to the AOSP so maybe one day I'll get around to tackling this (or Google will).\n. If you are setting a background for the split style you still need to use backgroundSplit in the style.\nThe following worked for me:\nxml\n<style name=\"Theme.Issue238\" parent=\"Theme.Sherlock\">\n    <item name=\"actionBarSplitStyle\">@style/Widget.Issue238.ActionBar</item>\n</style>\n<style name=\"Widget.Issue238.ActionBar\" parent=\"Widget.Sherlock.ActionBar\">\n    <item name=\"backgroundSplit\">@drawable/abs__list_pressed_holo_dark</item>\n</style>\nRemember, this will only work on pre-4.0. You need to provide a native version of the styling too if you want it to work on ICS as per the discussion on #225.\n. There will be styling samples in the next beta/release candidate.\n. There is no such option on ICS natively. Unless we can figure out a way to make ViewConfiguration.get(context).hasPermanentMenuKey() return false... perhaps with a ContextThemeWrapper? I'll have to investigate.\n. Nope, sorry. It's impossible. Just pray all real ICS devices follow Googles recommendation of omitting the menu key.\n. The problem is that we have no way of controlling whether or not the native action bar shows the overflow item or not. It's done deep within the system. The perfect example is the emulator since it will never show an overflow item due to there being a hardware menu key on the skin (even disabling the skin won't enable it though).\nThis is how the system determines the property: https://github.com/android/platform_frameworks_base/blob/master/core/java/android/view/ViewConfiguration.java#L307-309\n. You can, but that still doesn't disable the system thinking that it has a hardware key. I talked to Xavier about this a few weeks ago when they first added that feature so hopefully future versions of the SDK will fix that tiny bug.\n. Oh, excellent!\n. Nope, sorry. It's impossible. Just pray all real ICS devices follow Googles recommendation of omitting the menu key.\n. I don't necessarily have any advice. We debated this a lot for our apps at Square and ultimately decided that forcing the overflow was a mistake. We are now adhering to whatever the platform default is.\nI agree with @SimonVT that including force overflow was a mistake since it's not supported on ICS. If Android revisits the option in the future then I will to. Until then I'm not an advocate of using the feature.\n. This is a platform bug. This code doesn't not check if mTabSpinner is being used. It always assumes mTabLayout.\nSubmitted a patch to AOSP: https://android-review.googlesource.com/32492\n. Good catch.\n. Compilation is set to Android 4.0 because there are no 4.0.3 artifacts in Maven Central. I try to set the compilation requirement as low as possible while still supporting everything we need for the library. Only when there is an essential feature of a future API level will I bump it up. This way you're not required to always compile with the latest if, for some reason, you don't want to.\nThe targetSdkVersion itself is actually nearly useless. We could set it as low as 11 if we wanted in the sample apps and get rid of it altogether in the library itself. I always set it to the newest API possible so that fancy new things like hardware acceleration and the like is enabled by default. If API 16 comes out with no changes to the action bar API I'd bump it up without raising the compilation target just in case it enables some fancy new thing. The documentation will state, though, that the minimum target to be specified is 11 but it's recommended that you use 14 or higher (to enable hardware acceleration by default).\n. Did you put a theme in values-v14/ with android:windowSplitActionBar as true as per #225? Theming is not fully documented nor fully ironed out yet.\nIf your emulator is small enough, though, the manifest attribute should have been enough. There are examples of split action bars/modes in the sample. Did you take a look at that?\n. Sorry for the confusion, the style attribute is actually an internal attribute and shouldn't be used. The problem was that you didn't have the android-prefix on the XML attribute in your manifest. Once adding it the split action bar worked.\nxml\n<activity android:label=\"@string/app_name\" android:name=\".ActionbarTestActivity\"    android:theme=\"@style/Theme.MDict\"\n          android:configChanges=\"orientation|keyboardHidden\" android:launchMode=\"singleTop\"\n          android:uiOptions=\"splitActionBarWhenNarrow\">\n. I removed the icons from the 'Action Modes' demo and tried on 2.3 and 4.0 and it was the action mode was the same height in all three possible configurations of the action bar (40dp, 48dp, and 56dp). Can you provide a sample which shows the problem?\n. You need to use Widget.Sherlock.ActionButton as the parent style for your action button in order for it to inherit certain properties (like height).\nxml\n<style name=\"Widget.MDict.ActionButton\" parent=\"Widget.Sherlock.ActionButton\">\n    <item name=\"android:gravity\">center</item>\n    <item name=\"android:paddingLeft\">0dip</item>\n    <item name=\"android:paddingRight\">0dip</item>\n    <item name=\"android:scaleType\">center</item>\n</style>\n. MainActivity.java:\njava\npublic class MainActivity extends SherlockActivity {\n    @Override public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.main);\n    }\n    @Override public boolean onCreateOptionsMenu(Menu menu) {\n        getSupportMenuInflater().inflate(R.menu.main_menu, menu);\n        return true;\n    }\n}\nmain_menu.xml:\nxml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <item android:id=\"@+id/menu_first\" android:title=\"first\" android:showAsAction=\"ifRoom|withText\" />\n    <item android:id=\"@+id/menu_second\" android:title=\"second\" android:showAsAction=\"ifRoom|withText\" />\n    <item android:id=\"@+id/menu_third\" android:title=\"third\" android:showAsAction=\"never\" />\n</menu>\nAndroidManifest.xml:\n``` xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<uses-sdk android:minSdkVersion=\"7\" android:targetSdkVersion=\"15\" />\n\n<application android:icon=\"@drawable/ic_launcher\" android:label=\"@string/app_name\" >\n    <activity\n        android:name=\".MainActivity\"\n        android:label=\"@string/app_name\"\n        android:theme=\"@style/Theme.Sherlock.ForceOverflow\"\n        android:uiOptions=\"splitActionBarWhenNarrow\">\n        <intent-filter>\n            <action android:name=\"android.intent.action.MAIN\" />\n            <category android:name=\"android.intent.category.LAUNCHER\" />\n        </intent-filter>\n    </activity>\n</application>\n\n\n```\nYields:\n\nand\n\n. Please provide a sample .zip or pastebin of the class and any menu XMLs required to recreate the bug.\n. This is the proper behavior (as per 4.0.3). Once I added the XML android prefix to your uiOptions in the manifest I got this:\n\n. I had a fix in place for this but it clearly was not working. Just updated it to clear the animation on GONE so it should be fixed if you want to try the 4.0-wip branch.\n. Pushed a possible fix to the 4.0-wip branch. I can test it sometime later but if you want you can pull it in an give it a try now.\n. Confirmed as working. Good find!\n. I don't get a crash. Are you handling any configuration changes in the manfest?\n. No that all looks fine. I know what is causing the problem I just want to be able to reproduce it myself so that I can ensure the fix is the right one to make. I'll keep trying.\n. No crash for me on 2.1 emulator, 2.3.3 emulator, 4.0.3 emulator, and 4.0 device. Are you using the latest from the 4.0-wip branch and the beta 6 version of the support-lib plugin?\n. Try the latest for the library itself: https://github.com/JakeWharton/ActionBarSherlock/zipball/4.0-wip\n. Closing as I'm pretty sure this has been fixed. If that's not the case with the latest from 4.0-wip please let me know.\n. Whoops I should have mentioned that you didn't need to rebuild the support-lib plugin. \nDo you think you could provide a .zip of a simple example where it crashes? Perhaps just by modifying one of the demos or something? I haven't been able to reproduce it locally.\n. I had an idea of what was causing it. Just wanted to make sure I was reproducing the issue correctly before applying a fix. Thanks for reporting!\n. On what OS?\n. You can use 4.0-wip for the library but the plugin needs to be the latest .jar pulled from the beta page.\n. I can reproduce. Investigating...\n. This deals with the fact that setExclusiveChecked is a method on MenuItemImpl so when we are inflating to the native version we were unable to set it properly. Now we just call on the native menu inflater to inflate directly to the native menu. This is better anyways since it will enable new features on new APIs automatically.\nGet the latest 4.0-wip branch for the fix.\n. Thanks for reporting. I'm pretty sure this is a duplicate of #187 so I hope you don't mind that I close this. I've spent two days now trying to debug the issue and get it resolved but it still alludes me. I'm still trying.\n. It's only one or the other. That's the nature of the beast, I'm afraid. More info here: http://developer.android.com/guide/topics/ui/actionbar.html#SplitBar\n. Merged to the 4.0-wip branch. Thanks!\n. Are you using beta 6 or the latest from the 4.0-wip branch?\n. Download the latest 4.0-wip branch for the library and give it a try: https://github.com/JakeWharton/ActionBarSherlock/zipball/4.0-wip\n. Was able to reproduce. Investigating...\n. And fixed!\n. In 4.0-wip\n. It does not. That may be a possibility, however. I'll have to evaluate just how well the pre-3.0 alert dialogs can be styled.\n. Thanks for letting me know!\n. The home icon is disabled by default if you target API 14 or greater and must be enabled with the method call as you mention. If you target a lower API (in our case only 11, 12, and 13 would be possible) it will be enabled by default.\nIn beta 6 pre-ICS was always disabled by default (rather than honoring the targetSdkVersion) but it has been fixed in the 4.0-wip branch to match behaviors. If you'd like, you can download the latest version of the library from that branch and it will still work with the support-lib plugin from beta6 to try.\n. Awesome find. I probably would have totally missed this. Updated to use a weak reference in the proxy. Thanks!\n. If you always want the ICS-style overflow on pre-ICS devices you should use Theme.Sherlock.ForceOverflow (or set the theme attribute absForceOverflow to true in your own theme). By default, though, we'll use the normal options menu to remain consistent.\n. Can you paste a stack trace or provide an demo .zip that exhibits the problem?\n. I forgot to upload new versions of the plugins when I released v3.5.1. Download the new versions and give it a try.\n. Closing as i'm 99.99% sure that will fix it. Comment again if you still have a problem.\n. Woah! I'm glad you sent this. I need to re-meld MenuItemImpl as it looks like it still seems to be from ABS v3.x.\nHere's the ICS version of this method: https://github.com/android/platform_frameworks_base/blob/master/core/java/com/android/internal/view/menu/MenuItemImpl.java#L570\n. Wait, nevermind! This is on master. All development is now on the 4.0-wip branch and I'm about 24 hours away from a release candidate for v4.0. Thanks for the pull request but the version 3.x is about to be heavily deprecated in favor of the new version.\n. Should be a simple fix then. You're not even supposed to be using this yet! :)\nI don't think it works at all on any platform if I remember correctly...\n. Going to close for now because finishing this is still a week or two away. Hold off on filing bugs until it's integrated into the dev branch (4.0-wip branch is becoming dev branch tonight) rather than sitting in a topic branch like it is now. I only pushed it in case someone else wants to take a stab at finishing it.\n. Can you see if you can modify the ForcedOverflowItem demo so that the error shows? I tried a bunch of combinations of always/ifRoom and withText with its 6 items and was unable to reproduce on either 2.1 or 2.3.3 with HVGA and WVGA854.\n. Not needed now that white theme uses .Solid variant for the main action bar background.\n. This is sort of a platform bug, actually. I noticed before the RC but chose to hold off on fixing it.\nBasically what happens is the layout pulls the primary text color from the theme to use in the selected spinner view. On a dark theme the primary color is light and on a light theme the primary color is dark. As you said, the problem arises when you use light/dark because the theme is based on the light theme making the primary text color dark. Since the action bar is explicitly set dark, though, we get the black text on dark gray background.\nThe solution here is to provide your own spinner layout for the selected item which forces the use of a text appearance with a light text color. Since I imagine a lot of people will be having similar problems, I'll provide a sherlock_spinner_item_light_dark or something to save people the trouble.\nWhy did you want the sherlock_spinner_dropdown_item? I thought the built-in one worked fine on all the platforms I tested.\n. http://code.google.com/p/android/issues/detail?id=25624\n. Great catch! I always forget about the themed context.\n. On 2.3.4 it shows up incorrectly on pre-3.0 using the native layouts.\n\n. Use R.layout.sherlock_spinner_item.\n. It will.\n. Tracking this under #279. Thanks for reporting.\n. The problem here is that you are calling setContentView more than once which is not recommended (nor doing what you want). Maps are a fickle beast--especially when they have to be displayed and hidden.\nWhat I would recommend doing is including both the map view and the other tab's view in a single layout XML and just changing the visibility of each depending on which tab was selected. This will be a lot easier to manage.\nIf you wanted to still have separate layouts, you need to remove all of the existing views when changing tabs like this:\njava\nViewGroup content = (ViewGroup)findViewById(android.R.id.content);\ncontent.removeAllViews();\ngetLayoutInflater().inflate(content, R.layout.runmap);\nInflating from XML is an expensive operation though so you may want to only perform the inflation once and store it in a variable.\nThe Google Maps library imposes this restriction of having only one map view in the view hierarchy at once so you need to play by its rules.\n. I'll have to go through the (crazy) callbacks of menu invalidation once more since there is obviously something out of place. Thanks for the sample. I'll try to get it done ASAP.\n. Ok. After far too much debugging of the invalidation callback lifecycle I've found that this bug is in a totally separate area.\nIn order to support dividers between tabs and action items I backported ICS's version of LinearLayout which now supports dividers between children natively. Due to not being in the android.widget package and not being able to access methods marked with @hide, some things were omitted and a lot was stripped so that the only added functionality was the dividers. It would seem that these two factors has led to a few bugs in layout and touch interaction which cause both this and the touch problem you reported earlier.\nI'm going to try to adapt the IcsLinearLayout class to extend from LinearLayout (rather than just ViewGroup) and have its implementation only control drawing the dividers.\nIf you want a stop-gap solution replace IcsLinearLayout with LinearLayout in ActionMenuView.java and comment out anything about dividers. Or perhaps a brutal (semi-untested) hack might work:\njava\n@Override\npublic void invalidateOptionsMenu() {\n    super.invalidateOptionsMenu();\n    getWindow().getDecorView().requestLayout();\n}\n. @jgilfelt Please try: http://dl.dropbox.com/u/6602046/ActionBarSherlock-Bug-FragmentStatePager.apk and let me know how that works for you.\nHere's the zip which requires bleeding edge from 4.0-wip: http://dl.dropbox.com/u/6602046/SherlockFragmentActivityMenuDemo.zip\n. Alright thanks for testing. I'm going to have to take a different approach to fixing this then.\nAlso, I'm surprised you're seeing issues with the latest. That property is a static final constant which means its value should be inlined in the code. I was able to run on two 2.3.3 phones and a 3.0 emulator without incident. I'll have a look.\n. That measurement problem should be fixed. Please test if you get a chance.\nIn other news, I have no idea what's going on with your demo. The fragment menu invalidation fires fine and all the views are assembled properly but they don't show up on the screen. You can even see them in the hierarchy viewer looking correctly rendered but not displayed.\n\n. @jgilfelt Give 'er a try!\n. Good catch. Fixed as well.\n. @aytereschenko Using ViewPager and action items has its own bugs unrelated to this. See #351 and http://b.android.com/29472\n. Supporting LDPI may be a bit of a challenge but I'll try.\n. That's good to know. I'll be sure to try all the samples on LDPI before the next release candidate.\n. I fixed the crash but there still appears to be a measuring problem.\n. Dupe #273. Thanks for reporting, though.\n. Are you specifying styles for both the native and compatibility action bar?\nSomething like this:\nxml\n<style name=\"Theme.Styled\" parent=\"Theme.Sherlock.Light.DarkActionBar\">\n    <item name=\"actionBarStyle\">@style/Widget.Styled.ActionBar</item>\n    <item name=\"android:actionBarStyle\">@style/Widget.Styled.ActionBar</item>\n</style>\n<style name=\"Widget.Styled.ActionBar\" parent=\"Widget.Sherlock.Light.ActionBar.Solid.Inverse\">\n    <item name=\"background\">@drawable/bg_striped</item>\n    <item name=\"android:background\">@drawable/bg_striped</item>\n</style>\n. Fixed in 4.0-wip. Thanks.\n. This is the behavior of the native action bar. The number of action items is limited by a certain number based on the smallest width device-independent pixels of the device and they must extend no further than half of the width of the action bar.\nFeel free to file a bug on http://b.android.com if you feel that it should behave more like the split action bar when both the icon and the title are hidden. Link to it here if you do so I can star it.\n. Pick one:\n- supportSetUiOptions(..)\n- setSupportUiOptions(..)\n- setUiOptions(..)\n- getSupportWindow().setUiOptions(..)\nas executed in the context of the Sherlock activities?\n. getSherlock().setUiOptions(...)\n. I think I may have fixed this already this morning (but forgot to push). Would you mind grabbing the latest library/ from 4.0-wip and giving it a try?\n. Here's the SHA of the possible fix: 656419d648373c98d94a4bb5b7ccf294f628ccce\nedit: On second thought, this would only be for pre-2.2. I'll look into it...\n. Alright there's definitely something wonky going on. I've never dealt with handling config changes before but the emulator behaves differently from real devices. Perhaps it causes a keyboard change on rotation as well or something.\nIn any case. Now that I've temporarily removed a broken IcsLinearLayout class for the action item display I can see things more clearly. Everything is definitely behaving properly when the callbacks are firing. I just have to determine whether or not they fire as expected.\nThe documentation for View says that on API 8 and above the entire view hierarchy will receive configuration change callbacks and on anything less than 8 I dispatch them myself through the tree. I'll have to flash 2.3, 2.2 and 2.1 on my Nexus One to try (or figure out how to get the emulator to not recreate on rotation).\nIf you want, you can grab the library/ from the latest in the 4.0-wip branch and try again to see what you get. Just be careful because anything with animation (e.g., action modes) will force close your app at the moment...\n. Got it working on the emulator. Needed keyboardHidden apparently...\n. I just need to figure out how the platform is able to do this properly with regards to the different view configurations (e.g., split action bar to non-split, stacked tabs to non-stacked) while still maintaining full functionality.\n. On 2.2+. On 2.1 I have to dispatch it manually to all who need to receive it. That was already taken care of.\n. FYI this may never be fully fixed. Avoid handling configuration changes at all costs.\nFrom the Android documentation on android:configChanges:\n\nUsing this attribute should be avoided and used only as a last-resort.\n. Detach the WebView from the window and use non-configuration instance saving to pass across activity restarts.\n. The API for doing this is not stable which is why I commented out the sample at the last minute before RC1. I want to use a callback mechanism rather than an argument to the superclass constructor so that you have a chance to perform some logic about the device first.\n\nIf you want access to it now, check out the \"lost\" sample for it here. Just be warned that you'll likely have to adapt to whatever I change it to on a future release candidate (or the final release). There will be a proper public sample to follow then, though.\n. java\nActionBarSherlock.unregisterImplementation(ActionBarSherlockNative.class)\nNo guarantees that it will work, though.\n. I'm 99% sure this is a result of debug logging. I guess I should change it\nsince everyone is creating menu items without titles.\nOn Feb 17, 2012 8:58 PM, \"mattkranzler5\" \nreply@reply.github.com\nwrote:\n\nI have a screen where by default a menu option is not visible. When\nchanging to a different page in the view pager, the invalidateOptionsMenu()\nis called and it is set to visible. When trying to select the item, I am\ngetting a NullPointerException. Here is the stack trace:\njava.lang.NullPointerException\n       at\ncom.android.internal.view.menu.MenuItemImpl.toString(MenuItemImpl.java:490)\n       at java.lang.StringBuilder.append(StringBuilder.java:202)\n       at\ncom.actionbarsherlock.internal.ActionBarSherlockNative.dispatchOptionsItemSelected(ActionBarSherlockNative.java:75)\n       at\nandroid.support.v4.app.FragmentActivity.onOptionsItemSelected(FragmentActivity.java:283)\n       at android.app.Activity.onMenuItemSelected(Activity.java:2502)\n       at\nandroid.support.v4.app.FragmentActivity.onMenuItemSelected(FragmentActivity.java:632)\n       at\ncom.android.internal.policy.impl.PhoneWindow.onMenuItemSelected(PhoneWindow.java:950)\n       at\ncom.android.internal.view.menu.MenuBuilder.dispatchMenuItemSelected(MenuBuilder.java:735)\n       at\ncom.android.internal.view.menu.MenuItemImpl.invoke(MenuItemImpl.java:149)\n       at\ncom.android.internal.view.menu.MenuBuilder.performItemAction(MenuBuilder.java:874)\n       at\ncom.android.internal.view.menu.ActionMenuView.invokeItem(ActionMenuView.java:490)\n       at\ncom.android.internal.view.menu.ActionMenuItemView.onClick(ActionMenuItemView.java:103)\n       at android.view.View.performClick(View.java:3480)\n       at android.view.View$PerformClick.run(View.java:13983)\n       at android.os.Handler.handleCallback(Handler.java:605)\n       at android.os.Handler.dispatchMessage(Handler.java:92)\n       at android.os.Looper.loop(Looper.java:137)\n       at android.app.ActivityThread.main(ActivityThread.java:4340)\n       at java.lang.reflect.Method.invokeNative(Native Method)\n       at java.lang.reflect.Method.invoke(Method.java:511)\n       at\ncom.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:784)\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:551)\n       at dalvik.system.NativeStart.main(Native Method)\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/284\n. @IbraheemZaman Yeah. I'm going to update in the next release just to avoid this headache.\n. In theory... if it works.\nOn Feb 18, 2012 5:23 AM, \"David Laurell\" \nreply@reply.github.com\nwrote:\nDoes this mean we can use the support package from google instead of the\nmodified support plugin delivered with ABS?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/285#issuecomment-4033222\n. With whitelisting we have to worry about people not being able to figure out how to add stuff. I imagine that even I would forget that I had to do it after a while. Ignoring everything is pretty much the only thing we can do.\n. The problem here is that I've dropped using IcsLinearLayout for ActionMenuView's parent as it was causing problems with measurement and it was not updating properly when subsequent calls to invalidateOptionsMenu were being made (e.g., by FragmentManagerImpl on any fragment change). By doing this we've lost the methods that enabled animation of translate and alpha properties on pre-3.0.\n\nI need to figure out a way to emulate the dividers of ICS's LinearLayout without having to recreate the entire class.\nIf you want a temporary solution to this you can change ActionMenuView to extend from NineLinearLayout which will re-enable animation. I should probably push that into the working branch for now too...\n. Thanks!\n. Does the item have a title?\nOn Feb 18, 2012 9:44 AM, \"Scott1234Abc\" \nreply@reply.github.com\nwrote:\n\nRC1\nSteps:\n1. Derived activity from FragmentActivity (from the support snapshot jar).\n2. Added a single item menu and inflate it in onCreateOptionsMenu with the\nsupportMenuInflater.\n3. Run the app\n4. Bring up the menu\n5. Rotate device with the menu up results in an NPE.\nCrash happens on this call in ActionBarSherlock.java (crashes inside\nonPreparePanel)\n   protected final boolean callbackPrepareOptionsMenu(Menu menu) {\n...\n           result = listener.onPreparePanel(Window.FEATURE_OPTIONS_PANEL,\nnull, menu);\n...\n   }\nPartial stack trace:\njava.lang.NullPointerException\n       at\nandroid.support.v4.app.FragmentActivity.onPreparePanel(FragmentActivity.java:324)\n       at\ncom.actionbarsherlock.ActionBarSherlock.callbackPrepareOptionsMenu(ActionBarSherlock.java:464)\n       at\ncom.actionbarsherlock.internal.ActionBarSherlockCompat.dispatchPrepareOptionsMenu(ActionBarSherlockCompat.java:389)\n       at\nandroid.support.v4.app.FragmentActivity.onPrepareOptionsMenu(FragmentActivity.java:278)\n       at android.app.Activity.onPreparePanel(Activity.java:2233)\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/290\n. How are you attaching the fragment?\nOn Feb 18, 2012 12:15 PM, \"Nikolay Elenkov\" \nreply@reply.github.com\nwrote:\nIt seems the  actionbar height is not taken into consideration when the\nlayout contains some views on top of a ListView. See screenshot. It happens\neven when not using the split AB, and works fine on ICS. The layout I use\nis this:\nhttp://code.google.com/p/wwwjdic/source/browse/branches/2.0/wwwjdic/res/layout/sentence_breakdown_fragment.xml\n\nNot sure if this helps, but ABS log when starting this activity is below:\nI/ActionBarSherlock(30243): Parsing AndroidManifest.xml for\norg.nick.wwwjdic.SentenceBreakdown\nD/ActionBarSherlock(30243): Got <application>\nD/ActionBarSherlock(30243): hardwareAccelerated: true\nD/ActionBarSherlock(30243): debuggable: true\nD/ActionBarSherlock(30243): name: org.nick.wwwjdic.WwwjdicApplication\nD/ActionBarSherlock(30243): icon: @2130837634\nD/ActionBarSherlock(30243): label: @2131361795\nD/ActionBarSherlock(30243): Got <activity>\nD/ActionBarSherlock(30243): uiOptions: 0x1\nD/ActionBarSherlock(30243): windowSoftInputMode: 0x24\nD/ActionBarSherlock(30243): name: org.nick.wwwjdic.Wwwjdic\nD/ActionBarSherlock(30243): Got <activity>\nD/ActionBarSherlock(30243): name: org.nick.wwwjdic.AboutActivity\nD/ActionBarSherlock(30243): Got <activity>\nD/ActionBarSherlock(30243): taskAffinity:\nD/ActionBarSherlock(30243): name: org.nick.wwwjdic.DictionaryResultList\nD/ActionBarSherlock(30243): Got <activity>\nD/ActionBarSherlock(30243): name: org.nick.wwwjdic.DictionaryEntryDetail\nD/ActionBarSherlock(30243): Got <activity>\nD/ActionBarSherlock(30243): name: org.nick.wwwjdic.KanjiResultList\nD/ActionBarSherlock(30243): Got <activity>\nD/ActionBarSherlock(30243): name: org.nick.wwwjdic.ExamplesResultList\nD/ActionBarSherlock(30243): Got <activity>\nD/ActionBarSherlock(30243): uiOptions: 0x1\nD/ActionBarSherlock(30243): name: org.nick.wwwjdic.SentenceBreakdown\nD/ActionBarSherlock(30243): theme: @2131427418\nI/ActionBarSherlock(30243): Returning 1\nD/ActionBarSherlock(30243): [hasFeature] featureId: 8\nD/ActionBarSherlock(30243): [hasFeature] returning true\nD/ActionBarSherlock(30243): [hasFeature] featureId: 1\nD/ActionBarSherlock(30243): [hasFeature] returning false\nD/ActionBarSherlock(30243): [getActionBar]\nD/ActionBarSherlock(30243): [initActionBar]\nD/ActionBarSherlock(30243): [dispatchOnPostCreate]\nD/ActionBarSherlock(30243): [dispatchTitleChanged] title: WWWJDIC for\nAndroid, color: 0\nD/ActionBarSherlock(30243): [dispatchPostResume]\nV/TtsService(29746): TtsService.onCreate()\nV/TtsService(29746): About to load\n/data/data/com.marvin.espeak/lib/libttsespeak.so, applyFilter=false\nE/ActivityThread(29746): Failed to find provider info for\ncom.marvin.espeak.providers.SettingsProvider\nI/TextToSpeech.java(30243): initTts() successfully bound to service\nD/ActionBarSherlock(30243): [dispatchInvalidateOptionsMenu]\nD/ActionBarSherlock(30243): [callbackCreateOptionsMenu] menu:\ncom.actionbarsherlock.internal.view.menu.MenuBuilder@407f0560\nD/ActionBarSherlock(30243): [getMenuInflater]\nD/ActionBarSherlock(30243): [getActionBar]\nD/ActionBarSherlock(30243): [initActionBar]\nD/ActionBarSherlock(30243): [callbackCreateOptionsMenu] returning true\nD/ActionBarSherlock(30243): [callbackPrepareOptionsMenu] menu:\ncom.actionbarsherlock.internal.view.menu.MenuBuilder@407f0560\nD/ActionBarSherlock(30243): [callbackPrepareOptionsMenu] returning true\nW/KeyCharacterMap(30243): No keyboard for id -1\nW/KeyCharacterMap(30243): Using default keymap:\n/system/usr/keychars/qwerty.kcm.bin\nV/TtsService(29746): TtsService.setLanguage(eng, USA, )\nE/eSpeak Engine(29746): lang input param: eng   country input param: USA\nE/eSpeak Engine(29746): Language: en-rUS\nI/SynthProxy(29746): setting speech rate to 100\nE/eSpeak Engine(29746): eSpeak isLanguageAvailable: eng\nV/TtsService(29746): About to load\n/data/data/jp.kddilabs.n2tts/lib/libttsn2.so, applyFilter=false\nD/ActionBarSherlock(30243): [dispatchInvalidateOptionsMenu]\nD/ActionBarSherlock(30243): [callbackCreateOptionsMenu] menu:\ncom.actionbarsherlock.internal.view.menu.MenuBuilder@407f0560\nD/ActionBarSherlock(30243): [getMenuInflater]\nD/ActionBarSherlock(30243): [callbackCreateOptionsMenu] returning true\nD/ActionBarSherlock(30243): [callbackPrepareOptionsMenu] menu:\ncom.actionbarsherlock.internal.view.menu.MenuBuilder@407f0560\nD/ActionBarSherlock(30243): [callbackPrepareOptionsMenu] returning true\nI/ActivityManager(  172): Displayed org.nick.wwwjdic/.SentenceBreakdown:\n+485ms\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/291\n. The problem is that you've done nothing to initialize the decor view before the fragment attachment occurs. I'm willing to bet that if you put a call to getSupportActionBar() above your transaction you'll see that it works fine.\n\nABS v3 was integrated a lot tighter into the support library so it was able to handle this internally but since v4 is much more independent it doesn't operate in the same fashion. I'm not sure if calls to getSupportFragmentManager() should install the decor view or not but that may be the only way to get around cases like this where you aren't triggering it normally.\n. The 'sw' qualifier is only available on 3.2+ which means we have to do our\nbest to fake it using the old crappy filtering.\nI'm open to additional filters to try and emulate the correct behavior. I'd\nlike to get \"correct\" behavior on pre-3.0 devices that are popular. The\nKindle Fire, Nook Touch, and original Galaxy Tab probably will have the\nlargest market share.\nWhat is the screen size (normal, large, xlarge), density (mdpi, hdpi,\nxhdpi), and exact resolution of that Tab?\nOn Feb 18, 2012 4:05 PM, \"Matt Cosentino\" \nreply@reply.github.com\nwrote:\n\nDimensions for the action bar and buttons are defined in the following\nfolders and they shouldn't be:\nvalues-large-land\nvalues-large-land-hdpi\nvalues-large-mdpi\nvalues-xlarge\nIn ICS they are defined only in these folders\nvalues\nvalues-land\nvalues-sw600dp\nThis is causing the action bar to be sized incorrectly on 7\" tablets like\nthe original Galaxy Tab.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/292\n. Also what do you mean by 'incorrectly sized'? Is it 48dp and you think it\nshould be 56dp or is it 56dp and you think it should be 48dp? Or are you\nreferring to it in landscape?\nOn Feb 18, 2012 4:22 PM, \"Jake Wharton\" jakewharton@gmail.com wrote:\nThe 'sw' qualifier is only available on 3.2+ which means we have to do our\nbest to fake it using the old crappy filtering.\nI'm open to additional filters to try and emulate the correct behavior.\nI'd like to get \"correct\" behavior on pre-3.0 devices that are popular. The\nKindle Fire, Nook Touch, and original Galaxy Tab probably will have the\nlargest market share.\nWhat is the screen size (normal, large, xlarge), density (mdpi, hdpi,\nxhdpi), and exact resolution of that Tab?\nOn Feb 18, 2012 4:05 PM, \"Matt Cosentino\" \nreply@reply.github.com\nwrote:\n\nDimensions for the action bar and buttons are defined in the following\nfolders and they shouldn't be:\nvalues-large-land\nvalues-large-land-hdpi\nvalues-large-mdpi\nvalues-xlarge\nIn ICS they are defined only in these folders\nvalues\nvalues-land\nvalues-sw600dp\nThis is causing the action bar to be sized incorrectly on 7\" tablets like\nthe original Galaxy Tab.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/292\n. Check this logic for portrait/landscape configurations please:\n\n\nDefault: values @ 48dp and values-land @ 40dp\nLarge: values @ 48dp and values-large-land @ 48dp\nLarge MDPI: values-large-mdpi @ 56dp and values-large-land @ 48dp (e.g., Nook Color and Kindle Fire)\nLarge HDPI: values-large-hdpi @ 56dp and values-large-land @ 48dp (e.g., original Galaxy Tab)\nXlarge: values-xlarge @ 56dp (e.g., XOOM)\n3.2+: values-sw600dp @ 56dp\n. If I remove values-large-hdpi you'll get 48dp in both portrait and landscape.\nedit: I'm not so concerned about what matches ICS in this regard as to what looks right on the popular pre-3.0 tablets.\n. Why didn't Samsung just update the OS to fix their screw-up in the first place?\n. http://realmike.org/blog/2010/12/21/multiple-screen-sizes-with-processing-for-android/\n\nApparently, that\u2019s also what Samsung found when they made the Galaxy Tab. The Galaxy Tab has a 7\u2033, 1024\u00d7600 screen with 170 dpi. Yet, the Tab does not report its density as \u201cmdpi\u201d but as \u201chdpi\u201d, so the layout looks exactly as in the second screenshot. If they used \u201cmdpi\u201d, the icons would be .28\u2033 wide, with \u201chdpi\u201d, they are .42\u2033 wide\u2014not a big deal, and I must admit, the layout does look prettier this way.\n\nhttp://android-developers.blogspot.com/2010/09/screen-geometry-fun.html\n\nSimilarly, the Galaxy Tab\u2019s screen is at the large end of \u201clarge\u201d, so declaring it as high-density applies a useful compensation.\n\nMeh. Crappy pre-3.0 tablets cause nothing but problems...\n. Yes but the Nook and the Kindle look good with a 56dp action bar because they're MDPI. We put them at 48dp in landscape because they just don't have the room for 56dp in that configuration.\nThe Galaxy Tab and its HDPI looks like complete crap at 56dp because of scaling so we knock it down to 48dp in the portrait case.\nThe key here is getting things to look right on these devices because there will be a lot of them. I'm sure there are plenty of other pre-3.0 tablets where the action bar may be slightly too large or slightly too small but their case is insignificant since they have no market share (and the difference isn't really that bad since the whole OS looks like crap on them anyways).\n. Yeah this needs a second look. Thinking back I was doing the pixel math wrong in my head because of the different DPI.\n. Added it manually. Thanks.\n. The current released version of ActionBarSherlock (v3) was developed before ICS was a blip on anyone's radar and as such accounted for the lack of space on phones differently than the Android team chose to. The next major version (which is only about two weeks away) is a backport of the ICS action bar including all of its behavior. It properly mirrors the behavior of the native ICS action bar on small devices when dealing with list navigation and titles. Keep and eye out for it or try the betas.\n. Can you provide a demo .zip?\n. This appears to be a native bug. Using your code and simply Theme.Light and ListActivity:\n\n. Merged these changes in manually (with some additional tweaks) because I'm not a fan of the heavily indented attribute style. Just my personal preference. Thanks for the contribution!\n. Merged to dev, deployed. Thanks!\n. Are you using version 3 or the version 4 betas?\n. I'm fairly certain this is the correct behavior though. The action bar still exists which is why it is being used as the target for the menu items. If you wanted to remove the action bar altogether you would have to request the window NO_TITLE feature.\n. FYI I have a port started in the share-action-provider branch which is nearly complete to work with ABS v4. Hopefully I'll get some time after the 4.0 release to finish it up (maybe as a plugin).\nAnd I'd agree this looks like a platform bug. Feel free to file on http://b.android.com and post a link here so I can track it. Perhaps if the aforementioned backport is completed we can solve the bug in our version.\n. Force overflow only works on pre-ICS. The native action bar is used on 4.0\nand up and its behavior in this manner cannot be controlled.\nOn Feb 25, 2012 11:02 AM, \"Goddchen\" \nreply@reply.github.com\nwrote:\n\nHey everyone,\ni'm trying to use the Theme.Sherlock.ForceOverflow theme:\nstyles.xml\n\nAndroidManifest.xml\n\nIt is working fine in an Android 2.1 emulator but on my ICS (4.0.3) phone\nit simply doesn't work and the normal behaviour is still present (press\nmenu button to show overflowed menu items on the bottom of the screen).\nAny ideas what might be wrong on my side or whether this is a bug?\nGoddchen\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/304\n. I wonder if it will still fail when using maps on a Google TV though. In any case, it looks like I had it this way initially and commented it out for some reason.\n. Recommending any requestWindowFeature calls are done before super.onCreate calls. This ensures nothing will have triggered decor view creation.\n. Should have been fixed with e249704eb2f0b0891a14ae135cfc76b996eec21c. Thanks for reporting!\n. Is this for the v4.0 betas or v3.x.\n\nIf it's for 4.0, there is an example which shows you how to work around this in the 'demos' sample.\n. Fixed for 4.0-wip\n. Yeah this is arguably a platform bug but it's not like it can be fixed (old platforms). Take a look at the 'List Navigation' example in the demos sample for how to get around this styling limitation.\n. So you're using tabs but in this case there are so many that it has collapsed it down to a list?\n. Out of scope.\n. Blame that @SimonVT for \"fixing\" menu inflater :)\nI'll have a look, thanks for the report.\n. Out of curiosity, what version of Android did this happen on?\n. Dupe #317.\n. I'd love a proper demo .zip of this. I don't really have time to figure out what exactly you were doing and the release is only a few days away. It would help everyone.\n. That's alright. I'm pretty sure this is related to #331 so hopefully once it's fixed this will be too.\n. I replied via email but apparently it was eaten by the lack of cell service crossing Utah and Nevada.\nFrom what I gather you are giving everything API 14 compatibility which is very much not the case and defeats the purpose of these new lint checks. Anything not suffixed with 'Native' or 'Wrapper' is written for API 7 with conditional blocks in some cases for newer APIs.\nA library like this needs to leverage this new feature to its fullest extent since it is required to work on so many platforms. I was going to hold off on integrating this stuff until after the new ADT was released. If you'd like you can update your branch (and thus this request) or just hold off and I'll get to this soon. \n. Trying to manage this crap from my phone while driving through the Rockies... not fun.\n. You didn't happen to try with the latest from the 4.0-wip branch did you? I'm pretty sure we solved this with a completely rewritten IcsLinearLayout class. If not, I will over the weekend...\n. There is another issue already for handling config changes and I really\nhope to resolve it before 4.0. You should only be doing that as a very last\nresort as per the official documentation. I highly suggest you make every\nattempt to avoid such a requirement, if possible.\nOn Mar 2, 2012 7:58 PM, \"barees63\" \nreply@reply.github.com\nwrote:\n\nOK, you're right.. my apologies for the confusion, using Sherlock* classes\nthe original problem is gone.\nI do see a problem if I use the configChanges attribute to bypass the\ndefault orientation handling, then the ActionBar loses its items if you\nchange to landscape and switching back to portrait leaves the AB\nunresponsive on all pages again.. not sure if this is an issue or just the\nway things are?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/324#issuecomment-4298215\n. Accidentally closed #319 instead of this with a commit.\n. This is how the native action bar behaves. I have no explanation for it. I have no idea whether it was an intentional design decision or not. We mimic what the native action bar does...\n\nI'm sure it was part of the collapsed tab navigation feature but it seems odd to me too. Either hide the home icon and the title or show both to avoid this behavior. You can file a bug on http://b.android.com if you think the behavior is incorrect and feel free to paste the link here if you do.\n. Welcome to GitHub then :)  This place is awesome.\n. Good catch. Went a bit further and corrected them in every fragment base class as well.\n. You're setting the padding yourself as 4dp on all sides which is why you're seeing the collapse on the left and right. There is already a default padding set on the widget which you're overriding.\n. Did you follow the 'List Navigation' sample? There are special layouts that must be used.\n. Please. All the themes work fine on my N1.\n. Ok here's the image:\n\nIt looks like you're using android.R.layout.simple_dropdown_list_item instead of R.layout.sherlock_dropdown_list_item.\nAre you sure you've updated the sample app to the latest code? I updated it when I updated the Spinner to be a dropdown.\n. Ah! I totally missed that it was the 'Feature Toggles' and not 'List Navigation'. Good eye!\nIf you'd like to donate, there's a page at http://abs.io/donate. And I thank you in advance :)\n. cc @rtyley @eddieringle @Sleepybear\n. What version are you using? There was a touch-related bug with RC1 that is no longer present in the latest from 4.0-wip.\n. This issue doesn't deal with non-clickable action items but only the double-rendering effect. If your behavior is different please make an example project as you said and post a .zip to the mailing list: http://abs.io/forum\nThanks!\n. I have to write this down lest I forget:\nIdea: toggle a flag in SherlockFragmentActivity when calling up to FragmentActivity to signal that we will be dispatching the create event through the fragment manager. Read that flag in all of the SherlockFragment* classes and aggregate the results of unwrapping the mules and calling the sherlock fragment create method. Once back in SherlockFragmentActivity read the aggregated booleans as the true result of creation and reset the initial flag to false.\n. Made partial headway with fca84af8ee296d510cf6e85eb7c556717845f378 but I'm still getting behavior differences between native and compat. Still under investigation.\n. I'm seeing this on Jelly Bean in the known-bugs sample.\n. http://b.android.com/34000\n. Hmmm... maybe.\nI left it as is originally since it was part of the official document and instead describes how to annotate your stuff with the license. The license itself isn't really mine. I put my name in there when used in the README and other places though.\nPlus I don't want to change it since it is the only file that still shows the 'Initial commit' message. :)\n. You should be using R.layout.sherlock_spinner_item and R.layout.sherlock_spinner_dropdown_item.\n. You need to be using setSupportProgressXxx for 4.0. Take a looks at the\ndemos sample for a full example.\nOn Mar 6, 2012 11:35 AM, \"Navarr Barnier\" \nreply@reply.github.com\nwrote:\n\nOn Pre-ICS devices, using ABS 4.0, calling\nsetProgressBarIndeterminateVisibility(Boolean.FALSE); will not cause the\nprogress bar to disappear under certain conditions.\nAn example is included:\n`````` java\nimport com.actionbarsherlock.app.SherlockActivity;\nimport com.actionbarsherlock.view.Window;\nimport android.os.Bundle;\npublic class IndetermianteProgressBarAsyncActivity extends\nSherlockActivity {\n   @Override\n   public void onCreate(Bundle savedInstanceState) {\n       super.onCreate(savedInstanceState);\n       requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);\n   setContentView(R.layout.main);\n   setProgressBarIndeterminateVisibility(Boolean.TRUE);\n   setProgressBarIndeterminateVisibility(Boolean.FALSE);\n\n}\n}```\nIt is my theory this is because they are called in quick succession, and\nalthough this does not appear to be an issue it can be when using an\nAsyncTask that can run long, but runs short.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/335\n`````\n. The website is stored inwebsite/resources/in thedevbranch and gets deployed automatically by maven (so this would be overwritten). I'd **really** appreciate if you'd make the changes there and submit a pull request againstdev` before 11:55PM PST so I can get it in the 4.0 release. I'm not sure I'll have time to do it manually before then.\n. I have no idea what timezone it is where you are. You're probably asleep...\n. Nevermind. I'm changing the samples page a bit until the full website rewrite.\n. I dropped screenshots for now from the samples page as they take far too long to get working properly and are far too manual of a process. They'll be part of an upcoming full-site rewrite with a mini-market place of ABS apps (hopefully).\n. You're still front and center (and bottom...) on the index.html though!\n. That's not a bad idea either. I'll have to experiment.\n\nIt's too bad the Market doesn't have a proper API for fetching screenshots and leading images and the like. Would make the creation of something like that super easy.\n. Any idea what happens on ICS at the same resolution?\n. It may do the same on ICS due the length of the action item text. In which case I'd put smaller text in your strings.xml and put the full text in values-large/strings.xml or something.\nBut post an ICS screenshot if you can so we can see....\n. What does your menu XML look like? If you're using a lot of showAsAction=\"always\" this would happen. Make sure you're using ifRoom as much as possible.\n. On certain screen sizes only two action items will be displayed on the bar. By using 'always' you force the extra ones which is why they are pushing off the right side.\n. This is not feasible due to its requirement of the internet permission. It's also largely unnecessary for this type of library.\n. Can you re-open this against the dev branch please?\n. Good eye! Thanks for updating the request. We'll have a .1 release soon enough that this will go out with.\n. Good to know. For those wondering the following was reported as an addition for now:\n-keepattributes *Annotation*\nI'll keep this open until its release and then update the documentation to recommend using ADT 17 only.\n. This has already been addressed in the dev branch. Thanks for the pull request, though.\n. From @mrenouf: https://snipt.net/tweakt/sherlocklistviewjava/\n. The action item can only be forced on pre-4.0 (this is noted on the example in the 'Demos' sample). There is no way to control its presence on 4.0 and up. The reason it doesn't show up on the emulator is that it is reporting that it has a hardware menu key. At present, all ICS devices (and likely the vast majority moving forward) will not have a menu key so the action item will always be displayed. It will only be a very, very small minority of devices.\nI'll leave this issue open as a reminder to document this on the website for 4.0.1\n. The action bar will always use an overflow item because all of its menu items are relevant to the action mode only. Whereas when you are adding a menu to a full activity, it is understood that you have control of the whole device (which then includes the menu button).\n. Haha well you're welcome. Glad you were able to get it resolved. I'm stil waiting on who's going to be the first to report some major oversight on my part.\nknocks on wood\n. You missed a couple spaces :)\n. You're saying that this can be activated using the menu key, correct? Not by some other means.\n. Hmm this was supposed to be handled by this code. I'll have to whip up a sample locally and see what's going on...\n. I cannot reproduce this. Please paste the code for a demo activity which exhibits this behavior.\n. Whoops. I was only testing the forced-overflow. Thanks!\n. Probably a dupe/related to #331 but I'll leave it open for now.\n. It's possible but the fix I put in place for menus wasn't expected to fix this. I haven't been able to reliably reproduce anyways so I remain unsure.\n. I'm fairly certain this is a native bug that deals with mismatch of the asynchronous nature of the FragmentManager and the synchronous nature of invalidateOptionsMenu(). Will convert FragmentPagerAdapter to confirm.\n. Bad news, FragmentPagerAdapter adapter already calls executePendingTransactions to perform synchronous creation.\n. It's not really an ActionBarSherlock bug. It will have to be fixed with future changes to ViewPager and FragmentManager in the support library.\n. Due to time, market share, and personal hatred for the classloader on these devices this will not be attempted.\n. Dupe #353\n. setHomeButtonEnabled?\nIf you target 14+ its disabled by default.\nOn Mar 9, 2012 7:37 AM, \"Sebastiano\" \nreply@reply.github.com\nwrote:\n\nI'm using static attachment in an Activity, and I found that the Home\nbutton isn't clickable \"out of the box\". This behaviour was present in RC1\nas well but I did not have time to report it, but now I updated to 4.0\nfinal and I still see the same issue.\nThis is the code I have to use to initialize the ActionBar in onCreate:\nprivate void initializeABS() {\n       mSherlock.requestFeature((int)\ncom.actionbarsherlock.view.Window.FEATURE_INDETERMINATE_PROGRESS);\n       mSherlock.setContentView(R.layout.device_list);\n```\n   // Workaround to get a clickable Home button\n   mSherlock.getActionBar().setDisplayShowHomeEnabled(true);\n   mSherlock.getActionBar().setDisplayHomeAsUpEnabled(true);\n   mSherlock.getActionBar().setDisplayHomeAsUpEnabled(false);\nmSherlock.setProgressBarIndeterminate(true);\n   mSherlock.setProgressBarIndeterminateVisibility(false);\nmSherlock.setTitle(R.string.select_device);\n// This is a workaround for http://b.android.com/15340 from\n```\nhttp://stackoverflow.com/a/5852198/132047\n       if (!ImSyncApplication.isICS()) {\n           BitmapDrawable bg = (BitmapDrawable)\ngetResources().getDrawable(R.drawable.bg_striped);\n           bg.setTileModeXY(Shader.TileMode.REPEAT,\nShader.TileMode.REPEAT);\n           mSherlock.getActionBar().setBackgroundDrawable(bg);\n       }\n   }\nWhat am I missing? I kinda copy-pasted the ABS-related code from the\ndemos...\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/356\n. Yeah it's still in my inbox. I have quite a backlog as you can imagine\nOn Mar 9, 2012 7:49 AM, \"Sebastiano\" \nreply@reply.github.com\nwrote:\nYup, that is the target and that call does indeed enable the Home button.\nIt's just the most obvious thing, the one that I tend to rule out, that\nworks in the end. Sorry I wasted your time, just dodn't know it's disabled\nby default (I'm used to v3.x and assumed it's enabled by default). Better\nadd that to documentation, thou.\nThanks again for the great work!\nPS: about my indeterminate progress bar and padding/margin, I'm not\nopening another issue unless you tell me so...\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/356#issuecomment-4418521\n. None of this was my code. Woot!\n\nMerged to dev.\n. Manually merged to dev. Will go out with the next website deploy. Thanks!\n. On what version of Android are you seeing the exceptions?\n. I'm just curious about the usage that's causing an exception. That code is copied directly from the Android source and I'd need a strong case in order to change it.\nCan you provide a small demo app or something that exhibits the behavior you are seeing?\n. I get why the exception is thrown, I was just wondering how it was being triggered repeatedly enough that it would cause an issue. I have to assume his entire window is being invalidated a high rate which would cause this code to be triggered.\nI'll submit a more efficient method to AOSP and once it's reviewed and accepted by Google I will update the library.\n. @bvgastel I'll try to get to it within the next week or so. Not sure how long it'll take to get approved and accepted but hopefully it can make it into a 4.1 release for ABS. You'll still see the problem on ICS and up even after it's fixed, however.\n. Got AOSP contributions up and going again tonight (see 30c1ded12bfbbf2d7cc9708bbee9f1961cd81fdf) so I'll try to get to this by the weekend. Need to review the code more closely before submitting to AOSP.\n. @hrkdroid Because ICS uses the native action bar and thus will always have this problem until ABS 5.0 where we steal the sources from Jelly Bean and backport it to work on Android 2.x - 4.x and the native only on Android 5.0+.\n. Besides the menu wrappers, the only class in com.actionbarsherlock.internal.* that's used on 4.0+ is ActionBarSherlockNative.java.\n. https://android-review.googlesource.com/39998. Applied from #511.\n. See: https://groups.google.com/d/topic/actionbarsherlock/4RcYSvW3D3g/discussion\nJava settings are at Project Properties > Java Compiter for Eclipse. Ensure they're set to 1.6 like @navarr said.\nQuestions like this are best for the mailing list going forward.\n. Thanks!\n. Closing as part of #279. I strongly recommend you avoid handing configuration changes as per the documentation suggests. I have some ideas on how to fix this but it's not top priority at the moment.\n. Nope. But I'll allow it!\n. Why must you toy with my emotions like this! I'll give it another look with config change handling off and see what I can come up with.\n. We rely on the fact that it does not cause errors because most of the time it has to do with calls to the superclass implementation. If we abstract any of those into static inner clases or (still static) high-level classes we have no way of calling into that superclass implementation. Reflection in this case will also not work because of how polymorphism behaves in that it exists outside the instance of the class (and therefore has no way to call super).\nTricks like leveraging this behavior cannot be done with Android 1.6's class loader which is one of the main reasons that it was dropped. The fact that the 2.x class loader simple replaces the offending code with \"no op\"s allows us certain behavior.\nIt sucks spamming the log like this, but we rely on its behavior for functionality.\n. @xDragonZ That is correct. We use logic to ignore the blocks that are otherwise being replaced by the classloader for containing invalid method calls. Since they're never reached it affects nothing.\n. @jdamcd You've already got the answer. The only difference is that the Sherlock-prefix fragments allow for use of the menus properly. You'll get a nice runtime exception if you attempt to access them without meeting this requirement. It may be worth noting on the docs, however.\n. @wuman Context menus are very integrated into the platform and it would require a great deal of effort to change them to use the \"Sherlockian\" versions (to quote @commonsguy). If you're using an IDE it should immediately warn you if you're doing something wrong.\n@veeti That is a very good idea indeed. I will include that change along with patch for this issue. I'm going to file a separate issue too for adding an example to the Demos sample to show context menu usage along with action items.\n. This is a bug in Android, not the library. See: https://github.com/JakeWharton/ActionBarSherlock/blob/master/samples/demos/src/com/actionbarsherlock/sample/demos/Styled.java#L34-43\n. Use Theme.Holo, Theme.Holo.Light, or Theme.Holo.Light.DarkActionBar when using Eclipse's (very buggy) layout editor.\nSee: http://b.android.com/19599\n. The dialog in the samples is actually a themed activity and not a true dialog. Perhaps I should clarify that in its name.\nThe problem is that you cannot set an activity's theme in the code when it is to be displayed as a dialog. You lose the cool translucent effect of the background.\nIf you're creating a dialog through code you should use the normal dialog creation mechanism: a DialogFragment or an AlertDialog.\n. This is a native bug in Android that does not exist in the library (strangely enough). You can observe its behavior in the native apps like GMail.\nI had initially assumed it was the onOptionsItemSelected blocking the UI thread for a fraction of a second causing the text's state to remain in 'selected' but it doesn't appear to be the case. I guess it has to do with differences between the native ListPopupWindow and my backport IcsListPopupWindow.\n. Yeah I've been considering making this a plugin for the library. Basically what I have seen done is something like this:\n``` java\n@ActionBarSherlock.Implementation(api = 0)\npublic class ActionBarSherlockRobolectric extends ActionBarSherlockNative {\n    public ActionBarSherlockRobolectric(Activity activity, int flags) {\n        super(activity, flags);\n    }\n@Override \npublic void setContentView(int layoutResId) {\n    LayoutInflater layoutInflater = LayoutInflater.from(mActivity);\n    View contentView = layoutInflater.inflate(layoutResId, null);\n\n    shadowOf(mActivity).setContentView(contentView);\n}\n\n@Override \npublic void setContentView(View view) {\n    shadowOf(mActivity).setContentView(view);\n}\n\n}\n```\nThe you must call ActionBarSherlock.registerImplementation(ActionBarSherlockRobolectric.class) in the application setup of your test suite.\nI'll leave this open and revisit it soon and decide what the appropriate course of action is.\n. @Macarse ABS v4 is 2.1+ only.\n. At Square we had to do some epic changes to the Robolectric internals to add proper support for non-native menu classes which was a major blocker on this. It works, but it's a huge pain. We may make an effort to upstream this support but we're putting a larger effort behind dropping Robolectric altogether.\nFor now a simple solution is creating a ShadowSherlockFragmentActivity and returning your own instance of an ActionBar implementation in getSupportActionBar().\n. Robolectric is too slow and too sparsely (and incorrectly) implemented for our needs. In most cases it ends up slowing down proper testing of controls. It's also a giant hassle to do anything custom (like support ABS MenuItems) to justify its use. We use pure JUnit in most places without any hassle. We have our own, non-generalized solution for running the actual Android code on the JVM which yields much faster results.\n. @MichalKarnicki We're driving a lot of this as a potential Robolectric version 2. It should be available in some form early next year.\n. Robolectric 2 is coming soon which doesn't make you want to stab yourself in the face (or at least, not as quickly)! Closing this issue since providing shadows for everything is an awful idea. Use v2 when it comes out.\n. Works for me with 2.0-alpha1 if you change your Build.VERSIONS.SDK_INT to 7-13 for the compat impl or 14+ for the native impl.\n. Good eye! Merged to dev and deployed.\n. Just ran into this yesterday as well doing some testing! Will get a fix up as soon as I can.\n. @glennpratt That's using a TabWidget not the action bar tabs.\n. This has something to do with the drawable not honoring its bounds. It's really odd. Still trying to figure out what's going on.\n. Alright! Anyone want to guess who's to blame?\nThat's right. It's good old Android with a broken implementation of ColorDrawable on pre-3.0.\nUse this instead:\n``` java\npublic class IcsColorDrawable extends Drawable {\n  private int color;\n  private final Paint paint = new Paint();\npublic IcsColorDrawable(int color) {\n    this.color = color;\n  }\n@Override public void draw(Canvas canvas) {\n    if ((color >>> 24) != 0) {\n      paint.setColor(color);\n      canvas.drawRect(getBounds(), paint);\n    }\n  }\n@Override public void setAlpha(int alpha) {\n    if (alpha != (color >>> 24)) {\n      color = (color & 0x00FFFFFF) & (alpha << 24);\n      invalidateSelf();\n    }\n  }\n@Override public void setColorFilter(ColorFilter colorFilter) {\n    //Ignored\n  }\n@Override public int getOpacity() {\n    return color >>> 24;\n  }\n}\n```\n. Make a 3px*3px 9-patch with the center pixel as your color. Use that in the\ntheme.\nOn Mar 17, 2012 2:24 AM, \"greenrobot\" \nreply@reply.github.com\nwrote:\n\n@iNoles I'd prefer to set it once in the theme.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/379#issuecomment-4552835\n. Defining custom drawables in XML would be a really nice addition to the platform. Especially since you can already do the same thing with views in layout XMLs. I haven't yet looked on the bug tracker to see if it has ever been suggested or not.\n. FYI you can use colors in themes on the dev branch now.\n. You should be using MenuItem#setVisibility(boolean) to re-enable the item. Seems like you are using View#setVisibility(int) on the actual action view which has no way of notifying the action bar of its change.\n. You're the second person to notice this. I have to reasons why it stays like it is:\n1. That section is technically just part of the license which tells you how to apply it to your files and not actually something that should be licensed.\n2. This is the only file that exists unmodified from the very first commit. Call me sentimental...\n\nThe license properly includes my name and the year in the README.md file and in the headers of some files. Good eye though!\n. The library provides a normalized look and feel across all platforms it supports. It is up to you to customize to create a branding and experience within your application. There are no docs or guidelines which discuss how an action bar should be presented in functionality or style on pre-Honeycomb so it is up to your to make it your own.\nI do NOT recommend people use an exact Holo look in an application. It is pretty simple to customize a theme to create a simple unique look. I will, however, recommend people take the assets from ICS (e.g., button styles, edit text styles) and customize them rather than starting from scratch.\nIf you have any more questions or thoughts please post on our forum (http://abs.io/forum) and I'll be happy to discuss further.\n. With ABSv3 the themes absolutely destroyed the ADT layout editor. I had hoped a lot of the changes with v4 would mitigate this but it seems like the complexity of the theming is still a problem. I usually tell people to just use the built-in Holo themes when using the editor.\n. Thanks! I chose to implement a bit differently to reduce the changes to code that is directly from Android to make future merges more straightforward.\n. It is. See #352.\n. Sorry but the ICS action bar uses the large size therefore so does this library. The styles are available for your customization as that linked post describes. You should be able to create your own theme which uses the built-in small progress style or grab the ICS ones for a consistent look.\n. Should've been fixed with 3d7c57f6c7f0bd32b3f461a4ce5cf0e21cbc18e4. Download the dev branch and give it a try.\n. Excellent!\n. There is no getTabListener in the ActionBar.Tab API. If it was exposed in previous versions it was by accident and meant for internal use only.\n. Does this happen on ICS, pre-ICS, or both?\n. You can only convert an issue into a pull request from the API. Just create\na new one and reference this issue number in the body.\n\nJake Wharton\nhttp://about.me/jakewharton\nOn Fri, Mar 23, 2012 at 9:17 AM, gabrielittner <\nreply@reply.github.com\n\nwrote:\nIs it possible to add the pull request to this issue or do I have to\nsimply send a pull request which opens a new issue and reference this one\nhere?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/391#issuecomment-4662324\n. Fixed with #402.\n. Nice find! Thanks.\n. I really do appreciate the effort but the main development and compilation of the library is done using Maven and there is no r7 artifact yet. Once Google updates AOSP with the new changes I can start the process of getting it up into central and then (and only then) will I be able to update the dev branch to support it for the next release.\n\nSee the link in #394 if you need a solution before then. It basically describes exactly what you've done, though.\n. Dupe #340\n. If this hasn't happened yet, it's not going to...\n. Provide a screenshot.\nIf you provide xhdpi/hdpi/mdpi icons as per the documentation in all three configurations of the action bar (40dp, 48dp, 56dp) the icon should fit perfectly.\n. The ActionMode instance has setTitle(CharSequence) and setTitle(int) methods.\n. The activity is recreated when you rotate which is why the action mode disappears. In your app you would have to restart the action mode on rotate.\nYou will never see both the icon and text on small views on any screen with a width less than 480dp. That is a rule from the native action bar.\n. ``` xml\n\n    <item name=\"android:actionBarTabTextStyle\">@style/Widget.MyTabText</item>\n    <item name=\"actionBarTabTextStyle\">@style/Widget.MyTabText</item>\n\n\n    <item name=\"android:textSize\">14sp</item>\n\n``\n. Can you add aninstanceofcheck to theifstatement as well? If someone is using tabs inside of a regularSherlockActivityyou'll get aClassCastExceptionon the activity start.\n. See #394. I'll update as soon as possible. I'm blocked by Google not pushing the new changes to theframeworks/support.git` AOSP repository.\n. If you look at the downloads a zipaligned APK with ActionBarSherlock probably only adds ~500KB to the size. In my opinion, a small price to pay to not have to waste time implementing your own pre-Honeycomb action bar.\nYou can also fork the project and delete either the light or dark resources depending on which theme you will be using. That should shave off an additional ~150KB.\nIf you have any further concerns please continue the discussion on the Google Group as @SimonVT said and I'll be happy to answer.\n. A second glance at the output looks like we probably need to use the sonatype-oss-release profile. Just have to make sure this isn't triggered when we do snapshot deploys.\n. http://stackoverflow.com/q/10161340/132047\n. Giving up.\n. This does not afford us any benefits as we still need to override the menu-related callbacks with a final qualifier so that they are not able to be overridden in extending classes.\n. There are a lot of things that went into this decision:\n1. The requirements of ABS are different than that of someone using NOA directly. ABS focuses on porting the ICS action bar back to all platforms with the least amount of changes possible. This involved creating special Nine-prefixed classes which allow for direct access to methods which would otherwise not be available on some platforms (e.g., setTranslationX, setAlpha). There are also a bunch of other methods and implementations which are ripped out in the ABS version. I originally planned to include these in NOA but thought that it would be more clear to users if they had to explicitly wrap their views in order to have direct access to these properties (i.e., AnimatorProxy.wrap(view).setAlpha(.5f).\n2. NOA includes a lot of classes that ABS does not need. Things like the compatibility implementation of ViewPropertyAnimator and the implementations of the Property class are not useful to ABS. This would unnecessarily bloat the library (though very, very minimally).\n3. ADT does not automatically add transitive dependencies when using Eclipse. Most users who develop Android use Eclipse and are required (with ABS v4 and on) to have a copy of the android-support-v4.jar file in their own applications libs/ folder. Having another .jar file that they also had to include would lead to confusion and more support emails.\nThe \"straw the broke the camel's back\" (as they say) is point 3. If (when?) ADT is updated to allow library projects to be distributed as standalone binaries then perhaps I can re-evaluate including NOA directly. If everyone used Maven or Ant or IntelliJ this wouldn't be a problem but a vast majority of people are on Eclipse and it wouldn't be fair to them since a lot already have trouble getting the library set up and usable.\nI'm going to close this issue for now but know that I haven't forgotten nor will I forget about it.\n. Thanks! Merged to dev for next release.\n. Yeah it's only deprecated because of the introduction of PreferenceFragment as @iNoles said. It's still perfectly fine to use for that specific example since we are demonstrating PreferenceActivity.\n. @xDragonZ No, it relies on hidden methods in PreferenceManager which we do not have access to. The only way to support it would be to bring along the entire preference package into a library and that's way out of scope for ActionBarSherlock.\n. That's because your device has a hardware menu key. Try the 'Force Overflow' sample and you'll see it on the action bar (for pre-3.0). Or try it on an ICS device with a menu key and you won't see the overflow on ICS.\n. Do you have any insights as to where the leak was occurring? I can look into this eventually but I'm not sure when I'll have the time.\n. You can post on the Google Group: http://abs.io/forum/\n. Works for me. Must be Heroku troubles. It redirects to: https://groups.google.com/forum/?fromgroups#!forum/actionbarsherlock\n. Handling config changes is not (yet) supported. The Android documentation strongly recommends avoiding them in the first place.\nSee #279. I'll get to this eventually as I'm pretty sure I have a clever solution for this.\n. This may be a platform bug. Can you try testing on ICS with the built-in version? (android.widget.ShareActionProvider)\n. Confirmed that it's a native bug. Seems to already have been filed as http://b.android.com/25467\n. Did you add the core library as a library project?\nSee: http://www.youtube.com/watch?v=4GJ6yY1lNNY\n. If you are still having troubles, please post to the mailing list: http://abs.io/forum\n. This was fixed with v4.0.1.\n. Animating a property whose corresponding method doesn't exist on a certain API level. In this case it was calling setAlpha on a FrameLayout directly.\n. Waiting on Google. See #394.\n. Probably related to #331.\n. Dupe #351, like you said.\n. I would prefer if you commented them out with //UNUSED so that in future merges with AOSP updates it's obvious that they were removed deliberately and are not re-added.\n. Thanks!\n. Thanks! Merged to dev.\n. This is the native action bar so anything you see is beyond this library.\nThe action bar re-uses action item views in an effort to speed up invalidation. When you change a view to use a custom layout it reuses the existing view for the next non-custom action item. Since it will still be in the fade state of its selector it will still appear blue. They should be calling .jumpToCurrentState() (an internal method) but they do not so you see this artifact.\n. Looks like they're using a custom selector for the action item background which has no fade duration specified so it returns to its default state instantly.\n. Was able to reproduce. Only happens with collapsed tab navigation and not with list navigation. Couldn't find anything blatantly obvious that was causing it so I'll have to dig deeper sometime in the next week or two.\n. Well that's somewhat encouraging. At least to the degree that it wasn't something that I introduced. Would be nice to fix it on our at end least.\n. I observe this on Android 4.2 still.\n. Be careful using anything in the internal package as there is no guarantee its API will not change dramatically or disappear completely.\nMerged to dev.\n. This is an Android bug. See #303.\n. Dupe of #422.\n. How are you declaring the adapter? Are you calling setDropDownViewResource?\n. Dupe #279\n. The cause of this is the crap animation system of pre-Honeycomb causing invalidation and layout problems. Still working out a solution but it probably won't make it into today's release.\n. Fixed with 40dae37bedbe7667844430f3275cc29068c3c6c1.\n. It's hardcoded in the platform too: https://github.com/android/platform_frameworks_base/blob/master/core/res/res/layout/dialog_title_holo.xml#L36\nFile a bug on http://b.android.com if you think it should be changed.\n. Thanks for submitting!\n. Out of scope. Added to \"TODO\" list for standalone library/gist.\n. It is using SherlockFragmentActivity and the error occurs outside of a fragments. That's not the problem.\n. Upgrade to 4.1.0\nOn Jun 28, 2012 12:41 PM, \"Jorge Garrido\" \nreply@reply.github.com\nwrote:\n\nCrash again on Jelly Bean!\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/440#issuecomment-6639399\n. I would much rather leave it as a hard dependency. You can always use an exclusion to avoid it.\n\nxml\n<dependency>\n    <groupId>com.actionbarsherlock</groupId>\n    <artifactId>library</artifactId>\n    <version>4.0.2</version>\n    <type>apklib</type>\n    <exclusions>\n        <exclusion>\n            <groupId>com.google.android</groupId>\n            <artifactId>support-v4</artifactId>\n        </exclusion>\n    </exclusions>\n</dependency>\nMaven will not include duplicate transitive dependencies and if you have another library which is dependent on a different version you can use the above technique to remove one of them.\n. I would love a small demo app or if you could condense it into a single class and paste it somewhere.\n. That commit was introduced to workaround a complication in the support library where it always returns true for menu creation which was leading to problems with invalidation. The new behavior more closely emulates what happens natively so I'm surprised to hear about this regression.\nMake sure you are returning true and false appropriately in onCreateOptionsMenu and onOptionsItemSelected. I'll do my best to try and reproduce this.\nAnd if you want to send an APK with DEBUG = true in both ActionBarSherlock.java and SherlockFragmentActivity.java that would be fantastic.\n. Probably a dupe of #351 and a framework timing issue.\n. Yeah I'm not too sure exactly what you're suggesting. I'm using the standard eclipse/ADT project layout in both the library folder and each of the sample folders which works with Maven, Eclipse, and ADT command line builds. I have personally tested all three. I'm not sure modifying the directory structure would solve anything. \n. No IDE-specific project files are provided. In Eclipse you should be\ncreating a new project with existing sources.\nOn Apr 22, 2012 10:33 AM, \"pink\" \nreply@reply.github.com\nwrote:\n\nFinally solved my problem of not being able to import the library\ndirectory by hand-crafting my own .project/.classpath file.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/444#issuecomment-5268504\n. You need to compile with Android 4.0 or newer.\nOn Apr 22, 2012 10:31 AM, \"pink\" \nreply@reply.github.com\nwrote:\nI am using ABS 4.0.2. I have set android:targetSdkVersion=\"11\" as\ndocumented on http://actionbarsherlock.com/faq.html. Nevertheless, I am\ngetting loads of errors similar to this:\n/action-bar-sherlock/library/res/values-v14/abs__styles.xml:6: error:\nError retrieving parent for item: No resource found that matches the given\nname 'android:Widget.Holo.ActionBar.Solid'.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/445\n. Definitely a bug. Put a call out for a stock, rooted adb pull of the framework.jar so we can disassemble and take a look.\n. It's not going to be a View bug. It's probably a bug in TypedArray or the C code that backs its style loading. It looks way beyond ABS.\n\nThanks for the resources @SimonVT\n. Yeah that's the default which is returned if the value isn't found.\n. Well, that's annoying! But it's a good practice despite being cumbersome. Now I have to debate whether or not to recommend people do this...\n. Are they CDD devices? They have the Play Store?\n\nJake Wharton\nhttp://about.me/jakewharton\nOn Sun, May 6, 2012 at 10:07 PM, ChrisSmith <\nreply@reply.github.com\n\nwrote:\nIt at least warrants a note in the documentation under theming, because if\nyou don't then your app won't even open for some users. Hopefully its just\nthese two devices but there could be more.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/446#issuecomment-5544002\n. That crash usually indicates a stale R.java file. Clean the project or rm -rf bin gen.\n. Yes. Anything in the theme related to the action bar and any action bar or action mode style should be in values-v14/ with the android prefix. Everything non-Android prefixed should be in values/ (along with the regular old theme stuff).\n. If you want. They still won't be read except on API 14 and up.\n. It will pick up the on in values-v14/.\n. I'm 99% confident this it out of my control. I'll investigate if I can find time but anyone else is welcome to.\n. Good to know. Thanks for the link! There are two workarounds, the one posted on StackOverflow as the accepted answer and one posted on the bug on the Android bug tracker. Both should work with ABS.\n. When running on ICS ActionBarSherlock does almost nothing but pass things along to the native action bar and menu classes. Without a sample to reliably reproduce the bug there's no way to even debug what's going on. It's highly unlikely that the behavior is related to this library.\n\nIf you find further proof that it is, however, feel free to update the bug (with a sample) and I'll re-open.\n. The decor view hasn't been initialized yet. Will have to investivate ICS behavior and make sure we're duplicating whatever behavior it exhibits.\n. Cool. Working as intended then. You should wait to call this method after setContentView or calling getSupportActionBar.\n. There is now a SearchView on the dev branch which does this. I suggest you look at what it's doing and copy its behavior (or simply use it instead).\n. Done in dev\n. We use instrumentation tests at Square and both of our apps allow this fine.\n. I'm thinking we need to add a 'bugs' module where we can add demos which exhibit all the bugs that are left to fix.\n. There's a fundamental limitation on how the MenuBuilder dispatches callbacks that prevents us from handling this gracefully. There are three possible ways to handle this:\n1. On pre-Honeycomb force the action item into the overflow and just call startActivity in the onOptionsItemSelected callback (remember to check the API level in the callback too).\n2. On pre-Honeycomb force the action item onto the action bar and behavior will be correct.\n3. On pre-Honeycomb use a force overflow theme and behavior wil be correct.\nI don't think I'll ever be able to truly support this operating in the appropriate way since the changes have far too large an impact on how the menu works.\n. Does mvn clean verify pass?\n. Use ${project.version} for the ABS depenedency.\n. That's simply the version that it compiles against. Its provided scope allows us to always substitute the latest version when actually using the library.\n. Yeah it's probably not an issue with the actual Maven configuration as command line building works fine. I've voted for the issue and will watch its progress. I'm also seeing the same errors appear in IntelliJ so it's not just you.\n. Does this happen on ICS too?\n. Probably fixed this with 17a701065e2254fa48a343b0701e5cb98904bdc3 but will need to test before closing the issue.\n. That's because not calling the superclass method doesn't allow the fragment manager to save its state. This is probably just an interaction bug since fragment management and state saving has nothing to do with ActionBarSherlock itself.\n. Provide full code sample please.\n. So always include an ID and/or a tag for your fragments. Good to know moving forward. Thanks @SimonVT.\n. Is it reflected when you rotate the activity?\n. On what versions of Android are you seeing this behavior?\n. Hi @manupeco. If you still were unable to get the project to build, please post to the mailing list at http://abs.io/forum. GitHub issues aren't the best place to have a back-and-forth about what's going on. Please include what version of Maven you are using.\n. Good catch, thanks. Fixed on dev, release this weekend.\n. If the bug is present on ICS only then it is a platform bug and not a library bug. ABS uses the native action bar when running on ICS. Can you reproduce the bug on an activity that's not using ActionBarSherlock?\n. The library doesn't control text wrapping. It's entirely dependent on what\nlayout you use for your adapter.\nOn May 12, 2012 3:49 AM, \"Tom\" \nreply@reply.github.com\nwrote:\n\nPlease see the 2 screenshots, one running in an emulated ICS (4.0.3)\nsession, the other a Nexus One running Gingerbread.  Notice how the the ABS\nimplementation ellipsizes the text while the native implementation wraps\nthe text.\nNative:\nhttps://docs.google.com/open?id=0B4cv2-AZ4shrTGR4LWZtOXNnN2s\nABS:\nhttps://docs.google.com/open?id=0B4cv2-AZ4shrekU4d2tXX2pVa2c\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/468\n. I was not able to reproduce this behavior. The following are two screenshots from a modified version of the \"Tab Navigation\" demo running on Android 2.3.3.\n\n\n\nCan you provide more information about how you were able to produce this? A test case (as a .zip or just the paste of the activity code) and the exact configuration that you used to create an emulator would be ideal.\n. Yes, probably. You are also likely seeing less text because of #427 which reduces the width of collapsed tab navigation because of some bug in the way Android measures views. Once a workaround for that bug is found you may see an additional word displayed before the ellipses.\n. The textfield_searchview_holo_dark.xml layout is not part of the library.\nPerhaps your R.java is stale. Try a clean build.\nOn May 12, 2012 10:12 AM, \"Marco Vettorello\" \nreply@reply.github.com\nwrote:\n\nHello,\nI'm expecting this error when I declare any menu item in my app. My menu\nxml is:\n\n\n\n\nBut when the Activity inflate the menu I can see this error for any menu\nitem in my menu, also if i didn't declare the SearchView as ActionView\nI'm using the last version of ABS 4.0.2 and I'm compiling against API 15\nwith google maps support\nThanks\nW/dalvikvm(22664): dvmFindClassByName rejecting\n'res/drawable/textfield_searchview_holo_dark.xml'\nW/MenuInflater(22664): Cannot instantiate class:\nres/drawable/textfield_searchview_holo_dark.xml\nW/MenuInflater(22664): java.lang.ClassNotFoundException:\nres/drawable/textfield_searchview_holo_dark.xml in loader\ndalvik.system.PathClassLoader[/system/framework/com.google.android.maps.jar:/data/app/com.adnkronos.ldf-2.apk]\nW/MenuInflater(22664):  at\ndalvik.system.PathClassLoader.findClass(PathClassLoader.java:251)\nW/MenuInflater(22664):  at\njava.lang.ClassLoader.loadClass(ClassLoader.java:540)\nW/MenuInflater(22664):  at\njava.lang.ClassLoader.loadClass(ClassLoader.java:500)\nW/MenuInflater(22664):  at\ncom.actionbarsherlock.view.MenuInflater$MenuState.newInstance(MenuInflater.java:463)\nW/MenuInflater(22664):  at\ncom.actionbarsherlock.view.MenuInflater$MenuState.readItem(MenuInflater.java:366)\nW/MenuInflater(22664):  at\ncom.actionbarsherlock.view.MenuInflater.parseMenu(MenuInflater.java:147)\nW/MenuInflater(22664):  at\ncom.actionbarsherlock.view.MenuInflater.inflate(MenuInflater.java:97)\nW/MenuInflater(22664):  at\ncom.adnkronos.ldf.activity.SezioniActivity.onCreateOptionsMenu(SezioniActivity.java:54)\nW/MenuInflater(22664):  at\ncom.actionbarsherlock.app.SherlockActivity.onCreatePanelMenu(SherlockActivity.java:167)\nW/MenuInflater(22664):  at\ncom.actionbarsherlock.ActionBarSherlock.callbackCreateOptionsMenu(ActionBarSherlock.java:542)\nW/MenuInflater(22664):  at\ncom.actionbarsherlock.internal.ActionBarSherlockCompat.preparePanel(ActionBarSherlockCompat.java:476)\nW/MenuInflater(22664):  at\ncom.actionbarsherlock.internal.ActionBarSherlockCompat.dispatchInvalidateOptionsMenu(ActionBarSherlockCompat.java:271)\nW/MenuInflater(22664):  at\ncom.actionbarsherlock.internal.ActionBarSherlockCompat$1.run(ActionBarSherlockCompat.java:981)\nW/MenuInflater(22664):  at\nandroid.os.Handler.handleCallback(Handler.java:587)\nW/MenuInflater(22664):  at\nandroid.os.Handler.dispatchMessage(Handler.java:92)\nW/MenuInflater(22664):  at android.os.Looper.loop(Looper.java:132)\nW/MenuInflater(22664):  at\nandroid.app.ActivityThread.main(ActivityThread.java:4123)\nW/MenuInflater(22664):  at java.lang.reflect.Method.invokeNative(Native\nMethod)\nW/MenuInflater(22664):  at java.lang.reflect.Method.invoke(Method.java:491)\nW/MenuInflater(22664):  at\ncom.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:841)\nW/MenuInflater(22664):  at\ncom.android.internal.os.ZygoteInit.main(ZygoteInit.java:599)\nW/MenuInflater(22664):  at dalvik.system.NativeStart.main(Native Method)\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/469\n. Does the ASUS Transformer use stock Android or a custom ROM? It's probably a result of ASUS being jerks if they use a custom ROM.\n. Fixed with #540.\n. Looks like it was a bad build of the 9-patch drawables. Make sure your developer tools are up to date (and ADT plugin if you use eclipse).\n. This is some kind of race condition which is introduced by using the ViewPager which is almost certainly a duplicate of #351. You'll notice that if you give the same treatment to the regular \"Tabs\" example (.FragmentTabs) this bug is not present.\n\nAlso see: http://b.android.com/29472\n. Will take a look today. This sample was designed for the Android 3.0 action bar and was never updated to the Android 4.0 action bar so it's not unusual to find some things a bit off.\n. Are you sure this wasn't just a bad R.java? I don't see this bug on one of our pre-ICS test phones:\n\n. As this is a framework bug and not an ABS bug I cannot fix this until a new version of Android is released that supports this change.\n. File it on http://b.android.com so it's fixed in the next version of Android!\n. ABS mimics API 14 which has this bug therefore we sadly cannot fix.\n. Dupe #471. This is caused by some sort of race condition in ViewPager and not ABS. If you removing the paging functionality the split action bar works just fine. No workaround is currently known.\n. This will absolutely not be included in ActionBarSherlock simply based on the principle of delegating to the native behavior on the newest versions of the platform.\nHowever, I admire your initiative in finding a solution however 'hacky' it may seem. Changing something like this may also have other side-effects that you should be mindful of and look out for.\nThanks for posting it though!\n. Can you provide a sample? Perhaps add to the 'knownbugs' sample and send a pull request?\n. Cannot reproduce. If you can create a reproducible test case, please submit a pull request with an example added to the 'knownbugs' sample and mention this issue number in the description and I'll re-open.\n\n. Are you using SherlockFragmentActivity?\n\nJake Wharton\nhttp://about.me/jakewharton\nOn Thu, May 17, 2012 at 3:26 PM, Julian Cardona <\nreply@reply.github.com\n\nwrote:\nFragmentTransaction is returning null on tab listener\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/482\n. As per #241 we disable the hardware menu key when action modes are shown.\n. No clue. I'm just imitating what ICS does. Feel free to file a bug on\nhttp://b.android.com to have the behavior changed and link to it here.\n\n\nJake Wharton\nhttp://about.me/jakewharton\nOn Fri, May 18, 2012 at 3:31 PM, Andreas Schildbach <\nreply@reply.github.com\n\nwrote:\nWhy is the menu key handling inconsistently handled between ActionBar and\nActionMode? I'd expect it to be handled consistently: Either it shows the\noverflow menu or not.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/483#issuecomment-5797152\n. Ok, so:\n1. I don't use Eclipse. I construct the directory structure in a manner that's consistent what with Android applications and library projects use so that they can be used with both Eclipse and Ant. Any problems in importing are related to the tooling and not the library. I do not believe that including IDE specific files in the repository is correct and it should never be necessary.\n2. You cannot upgrade the version of the support library without upgrading the version that Maven uses. I use Maven as a build system because it's an actual build system. Ant is Bash shoved into XML and I refuse to use it. However, the project is perfectly compatible with Ant and you can run android update project -p . to get a working Ant-based build. The lack of dependency versioning is not the libraries fault but Ant and ADTs.\n3. You are deleting files from .gitignore that are fundamental to the compilation in IDEs other than Eclipse which will ultimately result in git attempting to track things that should not be revision controlled. I do not force my IDE on others nor my build system which is why the project works with Ant, Maven, Eclipse, and IntelliJ IDEA and the contents of this file are crucial to maintaining that.\n\nIf you require the things which you have contributed in this pull request I suggest you maintain your own fork on GitHub and merge changes from my repository whenever there are updates. I appreciate your contribution but unfortunately these things do not belong in this repository.\n. The one thing I thought about including was a build.xml file for Ant compilation but it still requires you to run android update project -p . anyways. Another reason I haven't made any changes is that Tor and Xavier, the tools developers at Google, have been pretty adamant that bundling library projects into .jars is coming. It sadly just keeps getting pushed back. Once that happens you should theoretically be able to distribute ABS as just another .jar in your libs/ folder and all of these points will be mostly moot.\n@marczych http://www.jetbrains.com/idea/features/google_android.html\n. Thank you! And good job picking up on all the conventions for naming and in the manifest and such.\n. Done on dev.\n. What IDE and/or build system are you using where these are warnings? The @Override annotation is a compile-time enforcement only and has no effect on the resulting bytecode which is why I'm hesitant to include them. Plus a lot of the code you have added them to is copied directly from the Android sources and would create additional merge conflicts moving forward with future versions of the platform.\n. Needs rebase. Code is about to drastically change with Jelly Bean source import as well. You should consider submitting these upstream rather than to ABS.\n. I don't want this in the core library. ABS is large enough. If people truly want this it can exist in a parallel library project.\n. Please re-submit as another top-level module called library-i18n with all AOSP languages included. A script to parse used strings and keep this new module up-to-date given a path to an AOSP clone would also be nice.\n. Upgrade to 4.1.0 and this will be fixed.\n. This is the behavior that ICS exhibits. See #241.\n. Yeah it's been broken for a week or two now. Take a look in sample/known-bugs/target/checkstyle-results.xml for the things that are failing it.\n. Thanks!\n. The ShareActionProvider queries the built-in package manager for intent targets.\nIf anyone has anything further to add please comment on the StackOverflow version of this post.\n. The action bar is transparent by default. Use Widget.Sherlock.ActionBar.Solid for an opaque one.\n. Theme.Sherlock extends from Theme on pre-Android 3.0. Your ROM has modified the default styling of a preference activity from being dark to light which is very non-standard (and would probably be a violation of the CDD if it was official). Theme.Sherlock operates under the assumption that the background will be dark which is why the action bar background is transparent.\n. You need to import com.actionbarsherlock.view.Window so that it secretly uses the long version of this method.\n. Fragments are part of the support library which is a dependency of ActionBarSherlock. Any problems with it can be posted on StackOverflow, the official Android developer mailing list, or the Android bug tracker.\n. Dupe #240\n. Won't fix. Talked elsewhere about it.\n. It's never called by the library.\n. It's part of the internal API so it may be conditionally used in future versions of the library.\n. Dupe #303. Fixed in dev.\n. On what phone are you attempting this on?\nHere's it running on some of my devices:\n- Nexus One: http://i.imgur.com/lb2jb.png\n- Galaxy Nexus: http://i.imgur.com/9Jkpb.png\n. If you look closely it's there. The high contrast of the ugly white system bar against the black background makes it hard to see.\nhttp://i.imgur.com/oHhgq.png\nIt's easier to see with the white theme that it's actually there:\nhttp://i.imgur.com/WmDVz.png\n. Good quote! Hadn't seen that one. I usually cite this one:\n\nNote: Using this attribute should be avoided and used only as a last-resort. Please read Handling Runtime Changes for more information about how to properly handle a restart due to a configuration change.\n\nref: http://developer.android.com/guide/topics/manifest/activity-element.html#config\nAnd yes, this is a dupe of #279 which I hope to resolve eventually.\n. You need to implement CollapsibleActionView interface on the action view so that you get a callback when collapsed. This way you can dismiss the keyboard. See SearchView on the dev branch for an example of this.\n. I like this, but I'll have to get it reviewed and accepted to AOSP before I can merge here since it's code that is from Android. This also relates closely to #360. I have a boatload of free time next week so I'll for sure do it then.\n. https://android-review.googlesource.com/39998\n. This bug is present in the native action bar so you'd only be fixing it for when the compatibility implementation is used. Since creating different behavior across Android versions is much worse than remaining consistent I cannot patch it yet. See #240.\n. This bug cannot be fixed until it's fixed in Android. Otherwise behavior across the API levels would be inconsistent which is much worse than having the same bug on all API levels. Dupe #240.\n. It fixes it for pre-ICS only. On API 14 and newer the native action bar is used which will still exhibit the bug.\n. The ShareActionProvider is a class provided by Android too and I can't deviate its API from what the Android version provides.\nIf you want something like this I suggest you copy the three classes and resources that go into ShareActionProvider, make the customizations you require, and use your version instead.\nYou can also, optionally, file a request on http://b.android.com to have this supported in the next version of Android.\n. The reason the library fragments only accept SherlockFragmentActivity as their parent activity is because they are tightly coupled with the menu callbacks and none of the other base activities provide the fragment support for the support library. There is also the Watson class which lives inside the support library package in order to gain access to package protected members of the FragmentActivity class. If you need to create a heavy customization like this I suggest you either modify the library in a fork directly or you provide your own fragment base classes to coincide with your new base activity.\nAlso, an interface cannot be used since you can't use an instance of it as a context or activity despite knowing that it always would be an instance of one. This was a huge problem with ABS v3 and is something I will do everything in my power to avoid.\n. Are you talking about native action modes (e.g., when editing text in an EditText)? If so, there's no real way to prevent this without breaking other things.\nIf you want to fix this yourself, you need to override onStartActionMode(android.view.ActionMode.Callback), call startActionMode(com.actionbarsherlock.view.ActionMode.Callback) with a wrapper around the original callback instance, and return null to prevent the native action mode.\nThe reason this cannot be done by the library is that this would cause onClick handlers declared in XML to inexplicably fail (see this blog post).\n. What @iNoles said. Compile your app with Android 4.0 or newer.\n. Use getThemedContext() from the action bar for creation. You also shouldn't be using that class on your own since it's marked as being part of the 'internal' packages to ABS and therefore is not guaranteed to even exist in future versions of the library.\n. I don't know. The control wasn't set up or designed to be used outside the context of list navigation. Make sure your adapter is using the appropriate context rather than the one from the activity.\n. Can you create a sample to reproduce the problem?\n. #446 dupe?\n. There's may be a resource ID collision with different types due to the custom ROM. This one doesn't happen in code though so it'll be hard to work around... I'll see if we have either of those devices at work and try to reproduce.\n. No, the collision could stem from custom OEM ROMs using resource IDs that clash with the ones that were added in Honeycomb and/or ICS. Since we read those resource IDs on platforms prior to 3.0, we could be clashing with something that they added. This will be something that's going to be really hard to track down. I forgot to look for a matching device, but I will this weekend or Monday.\n. Probably a dupe of #510\n. I do not have access to one of these. Are you able to debug why it's not iterating over the activities?\n. You can call\ngetSherlock().setUiOptions(ActivityOptions.UI_OPTIONS_SPLIT_WHEN_NARROW)\nbefore calling setContentView\nOn Sep 29, 2012 12:56 AM, \"Nagoya0\" notifications@github.com wrote:\n\nThank you for reply. OK... is there a workaround?\nFor example, set splitActionBarWhenNarrow by code or something...\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/522#issuecomment-9001752.\n. Is toString ever called for any of these? They are likely there for debug purposes where slowness and String concatenation aren't really a concern.\n. Explanation on #523.\n. This code is copied from NineOldAndroids which is copied directly from Android. I prefer not modifying copied code unless it's absolutely necessary because it means more changed lines to merge when new versions of Android come out. As toString would only be called by someone debugging I don't think it's worth making the change.\n. Dupe of #379. ColorDrawable is broken on earlier platforms.\n. Did you call setHasOptionsMenu(true)?\n. You need to call that in your fragment's constructor or in a method that will be called when the fragment is created/attached such as onActivityCreated or onAttach\n. The key part to take away is that you need to inflate the menu before calling findItem. You don't need an icon but a title is required if the item were to be pushed into the overflow menu.\n. It only removes it from the apklib for Maven users. Nice find. I'll get this merged into dev today.\n. Merged to dev. Thanks!\n. Closing as dupe of #530.\n. Patch has spacing problems which fail the build. Please fix.\n. Merged to dev branch. Will release soon. Great find, thanks!\n. MenuMule and MenuItemMule do not exist in ABS v4.1.0. You need to update.\n. Update your ABS. The mule classes no longer exist.\n. Dupe #531.\n. What happens when run on ICS+?\n. As I expected, this is also bug natively since it will also wrap with a ContextThemeWrapper. onClick attributes are not compile-time safe so I would recommend you specify them programmatically in your code.\n. It would still throw an exception when running on Android 4.0 and above since we can't control that code. In my opinion, consistency across the native and custom action bar implementations is more important in this case.\n. Hmm... I'll look into it then.\n. Upgrade to ABS 4.1.0. Dupe #531.\n. Are you handling configuration changes? That is, android:configChanges=\"orientation\" in the manifest?\n. Try adding getWindow().setFormat(PixelFormat.RGBA_8888) to the onCreate? Perhaps its in a different mode which is causing it to round colors up or down.\n. More info here and here.\n\nI think I'm going to deem this as out of scope for ABS since it only affects really old platforms. Thanks for taking the time to research it fully!\n. There is no r9 available for Maven compilation so sadly, no. I will, of course, do it once available.\nIn the mean time, you can update the .jar yourself in your local copy (or by forking and updating your fork).\nIt's equally as frustrating for me to not be able to do this.\n. Fixed on dev. This will be released some time in the next few days. If you can use that branch for now it should fix the problem.\n. Yeah it'll come, just not yet. I'm working with the Googlers as best I can to speed things up.\n. Since a majority of the code is pulled from AOSP I follow its guidelines. I'll put this somewhere...\n. The dialog themes in ABS are for theming activities to look like dialogs and not for dialogs themselves. If you want to theme a dialog you have to provide your own styles.\n. Fixed with #540.\n. It will be updated very soon. The r9 sources just got released in AOSP which means I can deploy a new Maven artifact.\nI couldn't accept this anyways since you didn't update any of the sample projects dependencies.\n. This would be great for a user contribution since I don't use Eclipse (I'm assuming you mean the ADT Plugin introduced these). From my experience showing people the 'Demos' sample is usually enough to get them started.\n. Going to close this since I don't use Eclipse and never plan to again. However, I still encourage someone to pick this up for new users as a third-party contribution. If it works I think it would be incredibly helpful as you say.\nA possible limitation is that using ABS requires a library project which I'm not sure these templates would cover.\n. Dupe #44. ADT bug. There's nothing wrong with the library themes.\n. This is how the action bar on ICS behaves which is why ABS behaves this way. In JB this was fixed only if you are targeting API 16.\n. I will have to try later. I only saw the fix in the JB change log and have not yet had the chance to test myself.\n. Please provide full reproducible demo code. I am unable to reproduce this with the latest dev branch. Closing for now, will re-open if a working demo is provided.\n. We wrap the code in a try/catch internally. Android sucks.\n. Actually, we copy and paste the entire ShareActionProvider sources into our project, wrap that unregister in a try catch, change the onCreateView to return null (so it always shows in icon form), and delete ActivityChooserView things. I've also seen this crash on an ICS-only app using the native widget.\n. I'll wrap the other one too.\n\n. There are way too many changes in the pull request. You are changing this that are totally unrelated to the fix. Please resubmit with only the part of the code that you think has an error.\n. Use setCustomView for the EditText and add a single action item through the normal menu.\nQuestions like this are best suited for StackOverflow or the official Android developer mailing list.\n. I don't see how ABS is affecting this. GridLayout works just fine for me. Are you sure you included it as a library project properly?\n. Included the v7 support library as a library project, that is.\n. Is the v7 library in central or did you deploy it locally? There shouldn't be any overlap.\n. That sounds very much like a configuration or dependency problem which is unrelated to ABS.\n. See: http://corner.squareup.com/2012/08/getting-to-the-bottom.html\nI highly recommend you don't use onClick attributes due to their slowness and lack of compile-time safety. Sadly I'll have to remove these methods from ABS before releasing...\n. Reverted that commit so this should be fixed. You still should not be doing this.\n. This exception makes no sense. I don't think there's really anything to be done, sorry. At the very least it seems related to how aapt is generating the R file. Or maybe proguard screwing it up somehow. Really hard to say.\n. Already fixed on dev for the next release.\n. Because of this, and many other reasons, the force overflow support is going away in a future version. Thanks for reporting. See #617.\n. This is not a viable solution to a problem which is not actually present in ActionBarSherlock itself. If this method is failing then there is a problem elsewhere in Android. Falling back to the resources on pre-API 13 devices will almost always return the wrong result for the desired value.\n. Do you have more info on the device? The API says it's Gingerbread+.\n. Lame. Will add to the next version. Thanks for the report.\n. Dupe #557. Fixed on dev.\n. I merged this to dev a few days ago. Will be released with the next version of the library (hopefully in about two weeks)\n. Is that a necessary part of the fix? I didn't realize the groupId was optional in child modules if it matched the parent. If that is indeed the case I'd like to remove it from all the other children as well.\n. Nope. All over it. Thanks for the tip!\n. ActionBarSherlock is simply a wrapper around the native API. Anything you can do with the native action bar you can also do with ABS. Conversely, you cannot do anything with ABS that cannot be done with the native action bar.\nOnly menu items show up in the split action bar with the current API.\n. You need to provide more information about how to reproduce this or what even caused it. Closing until more info is available.\nAlso, don't obfuscate ABS code.\n. I would prefer to pull in the explicit styles required and avoid the dependency on a platform style. OEMs love to destroy platform styles on pre-3.0 with their own ugliness.\n. ActionBarSherlock's goal is to ensure the action bar looks the same across all devices, not to make sure controls look the same as the device default. Most manufacturers destroy the built-in themes which is why I do not want to rely on their styles--especially not for something as essential as the SearchView component.\n. That sounds like a more reasonable approach.\n. On ICS the progress indicators are actually shown by default just by requesting the feature. This was fixed for Jelly Bean and I will revisit when I sync up with the Jelly Bean sources. It's a non-trivial problem to solve since we use the native action bar on API 14+.\n. Basically, always set the desired visibility in your onCreate method after calling setContentView to ensure it is being displayed properly.\n. Shadow cannot be applied to the action bar title due to how the styles are configured. This is a limitation of the native action bar as well and hence of ABS as well. If you feel like this should be changed you should file a bug on http://b.android.com.\n. We can't upgrade the library until a newer version of the support library makes its way into Maven central. If you need a newer version and you compile with ant (and since Android lacks any semblance of real dependency management), I suggest you maintain your own fork with whatever revision you desire.\n. I mean, I guess that there's no real reason to keep them in sync. And yes, it's for the ant/Eclipse users.\n. Please try out the latest from the dev branch\n. Merged to dev. Thanks!\n. It's a required dependency of the library. You can exclude it using the <exclusions> tag under your <dependency> declaration.\n. Ah, sorry. I misunderstood what you mean. This was fixed by #528 for the next release.\n. The last version of ABS was released about 3 months ago. The Jelly Bean AOSP source was released about a month ago.\nedit: That's a no. I'll get to it eventually.\n. Not going to do this. Use NavUtils from the support library.\n. Fixed by #589. Thanks for the contribution though!\n. Handling configuration changes is currently not supported and should be avoided at all costs in practice anyway. Dupe #279.\n. That's because the action bar is part of the window (and managed as such) whereas on pre-ICS it's part of the content view and managed by ABS in the context of the normal activity lifecycle.\n. Please create a pull request on the dev branch which adds an example to the 'known-bugs' sample demonstrating the behavior.\n. Good catch. Thanks.\n. I'm not sure why I duplicated all the textColor* attributes in the first place. They're all available on the necessary API levels...\n. Yeah you're definitely better off with your own theme attributes to track these values.\n. These new icon sizes aren't correct. The HDPI one in the library is the incorrect size (so good call on that one) but these aren't meant to be used in the action bar. These are used inside the EditText that is part of the SearchView backport and are purposefully smaller.\nFor reference, here's the sizes from AOSP:\n$ identify drawable-*dpi/ic_search_api_holo_light.png\ndrawable-hdpi/ic_search_api_holo_light.png PNG 32x32 32x32+0+0 8-bit DirectClass 2.27KB 0.000u 0:00.000\ndrawable-mdpi/ic_search_api_holo_light.png[1] PNG 21x21 21x21+0+0 8-bit DirectClass 1.54KB 0.000u 0:00.000\ndrawable-xhdpi/ic_search_api_holo_light.png[2] PNG 43x43 43x43+0+0 8-bit DirectClass 3.04KB 0.000u 0:00.000\nWill correct with a commit shortly.\n. Dupe #557. This is fixed on the dev branch.\n. Released.\n. This is the home action item. We fixed this.\n. Branch needs rebased. Looks good otherwise.\n. That method is available from API 1+ as per the docs. If Samsung removed it on the ROM for that device then there isn't much I can do about it. Sorry.\n. If it happens on ICS or Jelly Bean then it is the native action bar, not the compatibility implementation provided by ActionBarSherlock. You should ensure you aren't doing anything funky with handling configChanges or the decor view and then file a bug on http://b.android.com/.\n. Please include a description of the problem, screenshots, code to reproduce, and/or an example application to reproduce your error.\n. This is not the proper avenue for asking support-related questions. If you are having trouble using the library I suggest posting to StackOverflow under the 'actionbarsherlock' tag or by posting to the mailing list (but not both, please).\n. See #581 for why this can't be merged. Plus you left out all the sample apps.\n. Probably not an ABS bug.\n. The cause of your duplicates is because you are creating a new fragment each time. The framework automatically brings fragments back so every time you rotate the device you add another fragment.\n. Please don't use google docs links for image. Upload you image to http://imgur.com and link with ![](url).\n. There is an example of using Android's built-in context menu in the 'demos' sample.\n. You are using tabs instead of spaces which is failing the build. \n. Emulator is part of the support library or something... not my problem.\n. The issue tracker is not the right place to be asking for help. Try the forum or StackOverflow.\n. Yeah, can you rename it to match?\n. Can you detail more about why this is needed? I don't remember having ever seen an issue around this.\n. Relocation pom has been released. Should show up in central in a few hours.\n. Great link @DHuckaby, that is exactly the route I was going to take. \n. This is Android functionality not ABS. ABS is going to implement this as the default for pre-HC in future versions.\n. All the info for doing it yourself is in the link above.\n. Started on the custom-menu branch.\n. This will never happen.\n. Done in #630\n. Can't reproduce. Are you using a .ForceOverflow theme or something?\n. Happens with native SearchView as well. File a bug on http://b.android.com\n. Ah! I can't believe I missed that. I was in an extreme hurry when testing this yesterday in case I had to patch ABS before the release.\n. Can't be auto-merged anymore. I'd prefer to do this without renaming the folder itself. I will implement for 4.2.\n. It's about a week away. Hopefully sooner but it all depends on my workload\nthis coming week.\nOn Sep 29, 2012 2:21 AM, \"Ricardo Gladwell\" notifications@github.com\nwrote:\n\nFair enough, when do you think you'll be releasing 4.2?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/pull/632#issuecomment-9002282.\n. Framework bug: http://b.android.com/24034\n. ABS mimics API 14 which has this bug therefore we sadly cannot fix.\n. Confirmed this doesn't work natively either.\n. Dupe #595. Fixed on dev.\n. Going to need a lot more info than that...\n. Doesn't work on ICS either, the version of Android on which ABS is based.\n. I don't see it on Android 4.0.3. Create a full working sample if you think otherwise.\n. Fix on dev.\n. This is the native action bar behavior which cannot be changed.\n\nSee http://developer.android.com/guide/topics/ui/actionbar.html#ActionItems\n. On dev or master?\n. This is a giant hack for non-standard functionality and is not supported in any way. Try StackOverflow.\nI'll even give you a hint, com.android.internal.view.menu.IconMenuItemView is API 11+.\n. Puzzling. I'm not sure if we'll be able to fix this, sadly. There's no sane way to check keyboard visibility so I'm not sure we can do anything.\n. It's there for me: http://search.maven.org/#artifactdetails%7Ccom.actionbarsherlock%7Cactionbarsherlock%7C4.2.0%7Capklib\n. Oh, I forgot to publish the stupid migration thing as well. Will do that today.\n. I was supposed to deploy a migration pom to central which would allow people to use 'library' but be warned that it changed. Of course, I forgot to do so. Oops!\n. Relocation pom has been released. Should show up in central in a few hours.\n. Merged to dev. Thanks!\n. When the width is greater than or equal to 480dp the action bar is embedded. When it is less than that, it is shown on a separate line. This is the exact same behavior as the native action bar (because it is a direct backport).\n. Interesting policy. Thanks for the clarification. ABS will always reflect the ICS action bar since it would be unwise to exhibit JB behavior on pre-ICS and post-ICS but not on ICS itself.\n. A dialog fragment is simply a wrapper around managing a dialog. A SherlockDialogFragment just adds support for ActionBarSherlock menu items to a normal DialogFragment. If you have questions about dialog fragments and their usage please try StackOverflow or the official Android developers mailing list.\n. This was merged to dev.\n. Did you try the dev branch?\n. Please create a pull request against the dev branch which adds a sample demonstrating the bug in the 'known-bugs' sample.\n. JUnit is a test dependency so it should never be dexed. Maven also correctly knows how to resolve version number conflicts for the same dependency. I don't really see how this is an ABS bug. Seems like Eclipse and/or m2e-eclipse is broken.\n. If you hide the action bar there simply is no menu, sorry.\n. ABS doesn't affect the theme background. Whatever you're seeing is from the platform's Theme.Light.NoActionBar or Theme.Holo.NoActionBar depending on what API level you are running. If you want consistency, you should specify your own android:windowBackground on your theme.\n. ABS compiles with Maven. Maven only has r7. Hence I keep the .jar in sync.\nIf you need a newer version you can simply replace it yourself for now.\n. Looking at a dot release to include this fix in the next week or two.\n. Please create a pull request against the dev branch which adds a sample to the 'known-bugs' project which can demonstrate this behavior.\n. This is a dupe of #351 and a framework bug which has been reported at http://b.android.com/29472\n. I wish I could erase Eclipse from the history of the world. It's just awful for Android and Maven. I guess I have no choice but to rename the folder. Lame software is lame.\n. That violates my rule of not checking in IDE files! However, if it will make Eclipse users' lives much easier then I'm all for it. Especially since I use this naming convention elsewhere which can cause collisions on importing project named 'library' which is just an awful user experience.\nI'll grab Eclipse and do some experimentation to make sure it works for both normal library project importers and m2e-eclipse users.\n. Fixed on dev.\n@Goonie the folder is named \"library\", not the project.\n. The native SearchView does not have this check.\n. I cannot change SearchView behavior unless an associated change is accepted into AOSP for android.view.SearchView. Once that is done I will modify its behavior (and we can re-open this issue).\n. This probably due to the 1px divider we add. We don't modify the children's measurements at all. Le sigh.\n. @Jon4thanGarcia That would only work on MDPI and HDPI devices since the divider is 2px wide on XHDPI.\n. This is the behavior of the native action bar which is mimicked by ABS. File a bug at http://b.android.com/\n. You should use a state-list drawable for this functionality. Provide a resource for state_enable=\"false\" that is different from the normal resource.\n. Dupe #673.\n. Closing for now. If you can create a sample project which demonstrates the issue we can re-open.\n. I don't think these make sense to add. The Theme.Sherlock.* themes are analogous to Theme.Holo.* for pre-HC APIs. We cannot provide every variant of themes since it simply would be too many to maintain. If these had been added in API 11 or 14 along with the action bar that would be a different story.\n. Stack trace? Example code? Demo project?\nIt works on all APIs using the example in the 'demos' sample app.\n. Still can't repro this on any device and we've never seen it in either Square application in the wild.\n. Well I'm certainly not going to be recommending that since I've seen it deployed without incident to hundreds of different devices.\n. I'm happy to try anything to reproduce the problem. I'll test different locales set on the phone with demos that only have certain ones specified.\n. XML inflation should be using the themed context for any widget specified as an action provider.\n. Er, that was supposed to end with: I'll double check tonight.\n. Ah, I see what you're saying now (I was on mobile before). Inflation from menu XML will work because the MenuInflater uses the themed context when creating its LayoutInflater. If you are using any other provided LayoutInflater it will not work and if you are obtaining you own LayoutInflater you must manually give it the themed context from the action bar.\n. @mastro You can't. Inflate it programmatically.\n. Did you use a context theme wrapper to instantiate? Because it works every time when you do.\n. Merged to dev.\n. ActionBarSherlock does almost nothing on Android 4.0 and up. I would try making a sample application with the same configuration without using ActionBarSherlock and see if you get the same behavior. Otherwise, you'll have to provide a sample which demonstrates the bug you describe so I can easily reproduce it.\n. You have all kinds of crazyness up in here with subsequent commits...\nMake a topic branch and resubmit against dev branch please.\n. You can run android update project -p library to get a configured build for ant. If you are using it as a submodule you can invoke this command from your build.xml if one in the library/ folder is not present. This will not be supported in the repository because I'm not going to maintain a fragile, broken \"build system\" that I don't use.\nOnce the new Gradle-based build system matures a bit I will support it, however.\n. The theme is checked first here: https://github.com/JakeWharton/ActionBarSherlock/blob/master/library/src/com/actionbarsherlock/internal/widget/ActionBarView.java#L187\n. You need to also include an attribute without the android prefix for pre-ICS.\n. Thanks!\n. Dupe #686.\n. Collapsible action items have a max width that they can occupy (something like 400dp). It will not always fill the entire width of the action bar.\n. OK then maybe it's 256dp max width. Check the code, it should be defined in a dimension probably.\n. When it's available in Maven central I will update. If you need this update a fork or your local copy manually.\n. Because then everyone who is depending on com.google.android:support-v4 transitively through two libraries (this and another) will get dex errors since all the classes will be added twice.\n. Google is pushing artifacts starting with API 17.\n. I'll do this as soon as it's available. I'm eager for this as much as the next person. Closing the issue for now.\n. It's more clear in my opinion to add an <exclude> for the support library on the <dependency>  for ABS and then have the separate <dependency> for the newer revision.\n. Haha. The GitHub app doesn't escape entities. 1sec, will fix on the site.\n. Good point. We deploy the support library to our local repo with the same groupId and artifactId but with a newer version and IntelliJ seems to handle that properly. Is there a bug filed with JetBrains? They're usually pretty good about fixing things like that.\n. Because deploying to Maven central is a lot more complicated than uploading a .jar into your local repo or your own Nexus.\n. I bug Xav about it all the time :)\n. It's in the dev branch. Will go back out in the next release.\n. Thanks for the detailed investigation! Blindly adding an mMenu == null check is the wrong solution but adding an mMenu == null check with an exact cause is correct.\n. I need to look at it again. I forgot this issue existed.\n. It's fixed on dev. Not released.\n. Moto probably broke resource loading. Probably nothing that can be fixed by the library.\n. Merged to dev\n. ABS doesn't really do anything on Android 4.0 or newer. Are you sure you configured this correctly?\n. Works for me with the demos.\n\nWhat are you seeing?\n. Please add a sample to the known-bugs module which demonstrates this issue and send a pull request.\n. Needs more info. Device? API level? Maybe deobfuscate the stacktrace?\n. How are you referencing your new style? Did you duplicate the attribute in the theme with and without the android: prefix?\n. Merged to dev.\n. Merged to dev.\n. The goal of this library is to backport the action bar to create consistent behavior across all APIs. Since this functionality is counter to the native action bar it will not be added.\n. If you have questions please use StackOverflow or the mailing list.\n. Also, this is really an action bar question not an ActionBarSherlock question.\n. Already fixed on dev\n. Does this manifest itself on the emulator? If so I'll actually be able to test.\n. Merged to dev. Thanks!\n. This looks like a bad tools problem, not an ABS problem. I bet if you deploy from the command line or 'export' the application every time you wouldn't see this.\n. You are using two different revisions of the support library. Delete all of the support library jars and re-copy them into your app, ActionBarSherlock, and any other dependencies.\n. Can you provide a full sample menu XML?\n. Or add a sample to the known-bugs module?\n. I cannot change SearchView behavior unless an associated change is accepted into AOSP for android.view.SearchView. Once that is done I will modify its behavior (and we can re-open this issue).\n. Assets can't be bundled in library projects so I couldn't do this even if I wanted to. Plus I don't think most would appreciate the extra 161K (pre-dex).\n. On what version of Android?\n. No. You have to handle that case yourself. This might help https://snipt.net/tweakt/sherlocklistviewjava/ for now. Not sure if that will ever make it into the library, however.\n. Except for the native wrappers, all of these annotations are incorrect. They are used and working on API 7+.\n. ABS does almost nothing on Android 4.0+ so it's hard to imagine the library affecting anything.\n. Merged to dev.\n. Fixed on dev.\n. When setting homeAsUp in the theme's displayOptions the home action item was NOT enabled on pre-16. Starting with API 16 they now correctly enable the item when set in the theme.\nWe should be able to correct this behavior ourselves.\n. This has nothing to do with ActionBarSherlock. Try StackOverflow or the official Android developer mailing list.\n. ABS isn't even in this stack trace. Do you have any idea when it occurs?\n. All you have to do is update the .jar in the libs/ folder to whatever the latest is.\n. Don't we also need to do this for the compatible action bar?\n. Needs to be against dev branch anyways.\n. Nothing in ActionBarSherlock prevents this functionality. Copy one of the provided base activities and change it to work with whatever base activity they require.\n. I feel like there was an explicit reason why I chose not to use onCreate. Will have to think on it a bit and see if I can remember.\n. I think part of the problem is that you can have code like this:\njava\nsuper.onCreate(savedInstanceState);\nrequestWindowFeature(Window.FEATURE_ACTION_BAR_OVERLAY);\nrequestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);\nsetContentView(R.layout.whatever);\nWhich would cause the action bar to be initialized too soon and lack a progress bar. You also cannot initialize the just the decor view since then you won't get the overlay either.\n. Yeah that should work. Shame we have to resort to such hacks. When ABS was\nintegrated with the support lib it was so much easier.\nMaybe we could add a hook into the FragmentManager. I'm sure the folk at\nGoogle would allow something simple that was package scoped.\nOn Dec 25, 2012 12:46 PM, \"Simon Vig Therkildsen\" notifications@github.com\nwrote:\n\nAh, good point. Hm, well we need some other place to hook in then.\nfindViewById?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/pull/760#issuecomment-11674937.\n. @iNoles We can't instantiate the instance that's used so that won't work.\n. This will not be included. Dialog themes are being removed in the next version as well.\n\nIn values/:\nxml\n<style name=\"Theme.MyApp.DialogWhenLarge\" parent=\"Theme.Sherlock\">\n</style>\nIn values-v14/:\nxml\n<style name=\"Theme.MyApp.DialogWhenLarge\" parent=\"android:Theme.Holo.DialogWhenLarge\">\n</style>\n. Dialogs don't have action bars so you need to guard agains that.\n. This is probably an OEM's custom ROM with a broken resource loader. Or you're not using a theme from the library properly (but probably not).\n. I'll try to pull in your sample to the 'known-bugs' project today.\n. Awesome! Will leave open until release since I don't want the dev branch to not compile.\n. Yeah, will it be soon? I neither use nor follow the project. I suppose I could merge since the plugin isn't actually used in compilation.\n. Excellent. Thank you! If you get a chance, can you rebase it off of the latest dev and rename the module to actionbarsherlock-i18n? If not, I'll do it myself when merging.\n. The class is not meant to be created nor used outside of the context of the action bar.\n. Stack trace? Sample? Can't really do anything with this report.\n. This is a support library bug, not an ABS bug. As you said it can be fixed by updating the dependency to the latest. This library will be updated to include it when it's present in the central repo. For now just update your local copy.\n. Why not just use a normal Logger?\n. I don't see the value-add here. ABS's logging is compiled out due to the static final constant that prefixes each call to Log. If anything we should just switch it to BuildConfig.DEBUG now that it's provided by the tooling to allow enabling and disabling based on your compilation mode rather than flipping a boolean in each file.\n. The BuildConfig boolean is still a static final constant and thus causes javac to just throw away code (you can verify with javap).\n. You should set them in the manifest, same as always and same as the normal\naction bar. You cannot disable UI options once set.\nThe linked thread was for setting programmatically which should be a very\nrare need.\nOn Jan 12, 2013 10:01 AM, \"Jack\" notifications@github.com wrote:\n\nI was checking this thread: #278https://github.com/JakeWharton/ActionBarSherlock/issues/278\nCouldn't find any mentioned method in the newest version of sherlock. How\ndo I set UIPtions now? And what's more important, how to clear the activity\nUiOptions?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/774.\n. If the split action bar is enabled the action items are always at the bottom on phones in portrait. This behavior mirrors the native action bar exactly, obviously.\n. Hasn't changed: getSherlock().setUiOptions(int)\n. Yes there is. https://github.com/JakeWharton/ActionBarSherlock/blob/master/library/src/com/actionbarsherlock/app/SherlockFragmentActivity.java#L30-35\n. What he said was that ABS does nothing extraordinary on ICS+ and delegates to the native action bar for everything. The whole point of the library is providing action bar functionality where it doesn't already exist. When present, the native functionality is used. The library is not designed nor destined to replace the built-in action bar.\n. The Travis build is failing but it's not related to your pull. I'll verify manually tomorrow morning.\n. The action bar is the title bar on pre-Honeycomb. Setting windowNoTitle to true is telling it that you don't want an action bar.\n. Interesting and odd use-case. Will investigate. Thanks for the detailed explanation.\n. FIxed on dev.\n. Does it crash? The classloader should just evict the class since it's type isn't present and we never call it so there's no runtime crash.\n. The API (like all of the ActionBarSherlock APIs) mirrors that of the native SearchView. Please refer to its documentation and tutorials for proper usage.\n. It's a valid lint error that needs fixed.\n. Actually this one might not be, but the other one definitely is. This one is copied code from AOSP so if it's broken there then we need to emulate broken behavior here.\n. This is also \"broken\" in AOSP so for now we're correctly matching their behavior.\n. Awesome. Thanks for the pointer. SOOOOOO annoying since just about every one of my builds here and for work is broken. UGH.\n. @gildegoma Glad to know it's being worked on at least. And yes, it would be nice if that was provided. It's certainly a pain point for a lot of newcomers to the SDK and tools.\n. Yes, anything not based on .DarkActionBar will work.\n. Use ContextThemeWrapper with one of the two other themes as the inflation context.\n. Needs rebased off of the latest dev. Otherwise looks great!\n. \n. As @SimonVT said, this is usually the result of an OEM ROM declaring a bunch of custom attributes and overlapping with ones from future versions of Android.\n. The support library's FragmentActivity is named as such because it extends Activity. This is what inspired the Sherlock-prefixed activities.\n\nAt any rate it's far too late to change something like this now as it would require a major version bump. It's hard enough getting people to use the right classes as it stands now I can't imagine how hard it would be to try and tell beginners that they need to import FragmentActivity but the one from com.actionbarsherlock.app.* instead of android.app.*.\nI agree that it would make things more elegant but it's simply not practical.\n. Merged to dev.\n. Hmm... IcsSpinner is part of the internal API. You really shouldn't be using it yourself. What's your use case for needing it?\n. You can use sub-menus with action items for a normal drop-down. What are you trying to do with the Spinner?\n. Did you correctly include the collapseActionView showAsAction attribute?\n. Also, please add a test case to the 'known-bugs' sample on the dev branch.\n. I can't repro this. Add a sample to the known bugs sample on the dev branch in a pull request.\n. As @SimonVT said, state-list drawables are not supported by the native action bar either.\n. Make pull requests against the dev branch. And I'm 99% sure that the native SearchView has the same behavior.\n. I'm a bit torn on whether to accept this. I'd like to hold out and persist in bugging Google more to do their job in deploying to central rather than having us do it for them...\n. Not merging, but going to push ahead on getting r12 into central.\n. As in, push ahead doing it myself rather than waiting for Google.\n. Just replace the jar in your local copy. Or deploy a newer version of the jar to your local repo if you're using Maven.\nAlso,\n\nI'd really like to nest fragments\n\nNo. No you wouldn't. Trust me.\n. It's always v4. And there's no r14 through r17 so that doesn't count.\n. > But not sure that it's always version-4.\nv4 is for API 4 and up. v13 is for API 13 and up. There's always been two.\n\nAnd I don't understand why the SDK Manager downloads 2 Maven repos\n\nOne for Android (AOSP) artifacts. One for proprietary Google artifacts (e.g., Google Play Services). They have different licenses.\n\n...instead of the artefacts just being deployed to a publicly visible repository.\n\nXav says it's not licensing but I still expect that's part of it. It's also easier for them to manage.\n. Dupe of #762. Do you think you could create a sample which demonstrates this broken behavior?\n. This is a problem with your build system (command line or an IDE), not the library.\n. Without a sample we cannot reproduce. If you can create a reproducible sample, send a pull request against the dev branch adding it to the 'known-bugs' sample.\n. This needs a ton of more info. I know a lot of people using ABS on Juno so it's likely something you are doing. Try asking on StackOverflow, the mailing list, or the official Android developer mailing list. \n. This is using tabs instead of spaces. The manifest also needs updated.\n. This will become moot when the custom-menu branch lands. If only I could find some time to finish it!\n. Just a heads up. I'm not even going to look at this until r11 or newer is in Maven central.\n. On Android 4.0 and newer the native action bar is used. This is the built-in action bar behavior and cannot be modified.\n. ABS is a backport of the 4.0.x action bar to pre-ICS. On API 14 and up the native impl is always used. Adding this functionality would only make it work on API 7 to 13 which doesn't make sense.\n. Are you setting showAsAction properly? Look at the samples.\n. You might want to ask on StackOverflow, the mailing list, or the official Android mailing list. Issues are for bugs.\n. This might be fixed on dev by @SimonVT already. Trying to release a 4.3.0 this week. Have you tried the dev branch?\n. Glad to hear it. Thanks for checking!\n. Beat me to it!\n. If it happens on both it's behaving correctly. This is also a dupe of an\nold ticket.\nOn Feb 21, 2013 7:59 AM, \"Marek Sebera\" notifications@github.com wrote:\n\nThis is simulated with both, native and ABS. So I think this should not be\nclosed.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/836#issuecomment-13896252.\n. This question is probably better suited to StackOverflow, the mailing list, or the official Android developer mailing list. Please ask in one of those locations as it will reach more people.\n. The best place for something like this is a standalone project.\n. > P.S. I think it's corner case because it's not a very common case when you have pointers to(or from) menu items from activity, fragments, etc...\n\nWe do this everywhere. But the assumption is that if onCreateOptionsMenu is called again (i.e., you invalidate the options menu) then those references are no longer valid.\n. Need more info on the phone. Probably some custom OEM ROM that we can't really fix. \n. Dupe #446. \n. Make sure you are setting the style with a duplicated attribute as well.\n. What happens in a normal Fragment? Fragments are not UI components so they would have no effect on this beyond what a normal WebView would. Furthermore, SherlockFragment doesn't have much code in it except for a few menu related methods.\n. On what API levels?\n. Since ABS aims to remain consistent with API 14 I'm going to close this since there's nothing we can do. Hopefully one day it will be fixed.\n. I'll merge to dev sometime today. Did you file a bug against sbt for this?\n. Merged to dev and fixed the other fragment base class imports. And no, I haven't seen anything like this. Its technically valid Java.\n. Dupe #701.\n. This is your layout that you pass to setContentView being inflated into ABS' container. Not an ABS bug.\n. We cannot update the support library since r7 is the latest in Maven central. If you need a newer version you should replace it in your local copy (or use Maven dependencies to trump it by deploying the newer jar). The library is also compiled with API 14 so the properties file is accurate.\n. Is this really required for library projects?\n. Titles only display for action items on sw600dp devices or in landscape. The flags are hints, not law. (Though 'always' is always respected).\n. This means the support library wasn't included in your app somehow. Watson extends from FragmentActivity so you need to make sure the android-support-v4.jar is included in your app.\n. This is not ABS related. Try StackOverflow or the Android developer mailing list.\n. Am I reading this correctly that this uses the expanded view for only one share target?\n. That's not what I meant, but you clarified my concern.\n. When would this ever happen?\n. I'm aware of that. But when would that ever happen?\n. Works for me!\n\n. Thanks for making these against dev, too. Merging manually gets annoying. I promise a release is coming soon.\n. This part of the license is instructing you on how to license your own code, not the actual license itself.\n. You can find this text at the bottom of the README.md.\n. Please add an example to the 'known-bugs' sample so I can easily reproduce.\n. Can't repro. Add a sample to 'known-bugs' (or just ignore 3.2 users!):\n\n. All of this is the native action bar so it's unlikely that it's cased by ABS. Don't use showAsAction=\"always\".\n. If you are removing the window background then you need to use a theme with an action bar background or add one yourself. The action bar draws on the window background so if it is not present you will see ghosting artifacts like the one above.\n. https://github.com/JakeWharton/ActionBarSherlock/blob/4.2.0/library/src/com/actionbarsherlock/internal/app/ActionBarImpl.java#L438\n. It just calls addTab and then it's called internally.\n. Probably because it's not used by ABS. You can expect everything in the internal package to not be usable outside ABS. Hence the package name.\n. I haven't seen this in practice. Create an example on the known-bugs sample which demonstrates the behavior.\n. I believe that is exactly the case. I remember seeing this early on in the 4.x days and just hoping nobody would ever try this :)\n. Dupe #709 \n. Dupe #832.\nThis won't be added because it would create inconsistency. ABS is a backport of the API 14 action bar. Any changes after those API levels will not be supported. If this was added it would only work on pre-ICS and 4.2.2+ which leaves 4.0, 4.1, and 4.2 with different behavior which is wrong.\n. /me sips drink waiting for Travis\n. I'm just going to wait out Travis' incompetence rather than hack up some crazy solution. Thanks for trying, though.\n. Theme.Sherlock.Dialog is going away in the next release as per the release notes of the last version. Like you said, it doesn't have an action bar so there is little point in having ActionBarSherlock provide dialog themes.\nOut of curiosity, what does setting the left icon flag do on ICS+?\n. You should be using Theme.Sherlock.Light as your theme. Using SearchView without using a Theme.Sherlock.* theme OR using it outside of the action bar is not supported.\n. If you want to catch exceptions, do it in your activity's call to super.onDispatch().\nYour real problem is here, which has nothing to do with ABS:\n04-02 11:55:28.485: E/AndroidRuntime(14719): Caused by: java.lang.NullPointerException\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.webkit.WebViewClassic.requestFocus(WebViewClassic.java:10231)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.webkit.WebView.requestFocus(WebView.java:2133)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.view.ViewGroup.onRequestFocusInDescendants(ViewGroup.java:2382)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.view.ViewGroup.requestFocus(ViewGroup.java:2338)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.view.ViewGroup.onRequestFocusInDescendants(ViewGroup.java:2382)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.view.ViewGroup.requestFocus(ViewGroup.java:2338)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.view.ViewGroup.onRequestFocusInDescendants(ViewGroup.java:2382)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.view.ViewGroup.requestFocus(ViewGroup.java:2338)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.view.ViewGroup.onRequestFocusInDescendants(ViewGroup.java:2382)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.view.ViewGroup.requestFocus(ViewGroup.java:2338)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.view.ViewGroup.onRequestFocusInDescendants(ViewGroup.java:2382)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.view.ViewGroup.requestFocus(ViewGroup.java:2338)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.view.ViewGroup.onRequestFocusInDescendants(ViewGroup.java:2382)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.view.ViewGroup.requestFocus(ViewGroup.java:2338)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.view.ViewGroup.onRequestFocusInDescendants(ViewGroup.java:2382)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.view.ViewGroup.requestFocus(ViewGroup.java:2338)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.view.ViewGroup.onRequestFocusInDescendants(ViewGroup.java:2382)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.view.ViewGroup.requestFocus(ViewGroup.java:2341)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.view.ViewGroup.onRequestFocusInDescendants(ViewGroup.java:2382)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.view.ViewGroup.requestFocus(ViewGroup.java:2338)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.view.ViewGroup.onRequestFocusInDescendants(ViewGroup.java:2382)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.view.ViewGroup.requestFocus(ViewGroup.java:2341)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.view.View.requestFocus(View.java:6538)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.view.View.requestFocus(View.java:6517)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.view.View.ensureInputFocusOnFirstFocusable(View.java:4471)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.view.ViewGroup.removeViewInternal(ViewGroup.java:3675)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.view.ViewGroup.removeViewInternal(ViewGroup.java:3635)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.view.ViewGroup.removeView(ViewGroup.java:3567)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.support.v4.view.ViewPager.removeView(ViewPager.java:1259)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1009)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1088)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1070)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.support.v4.app.FragmentManagerImpl.dispatchDestroy(FragmentManager.java:1898)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.support.v4.app.FragmentActivity.onDestroy(FragmentActivity.java:324)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at com.actionbarsherlock.app.SherlockFragmentActivity.onDestroy(SherlockFragmentActivity.java:88)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.app.Activity.performDestroy(Activity.java:5212)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.app.Instrumentation.callActivityOnDestroy(Instrumentation.java:1124)\n04-02 11:55:28.485: E/AndroidRuntime(14719):    at android.app.ActivityThread.performDestroyActivity(ActivityThread.java:3302)\n. ActionBarSherlock doesn't have anything to do with fragments or the fragment manager. It just gives you the tab selection callback and then your code reacts to it. If you're having a problem with fragments as a result of a tab callback then I suggest you ask on StackOverflow or the Android developer mailing list.\n. That'll only incorrectly pull the jar, right?\n. ABS isn't a jar...\nOn Apr 9, 2013 12:21 PM, \"Jonathan\" notifications@github.com wrote:\n\n@JakeWharton https://github.com/JakeWharton It will download jar file\nfrom the maven central and uses that jar file. Yeah.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/891#issuecomment-16134183\n.\n. The Gradle library format is not finalized so I wouldn't publish it to central even if support was added. That said, I'm not opposed to adding the build configuration into the repo for people to deploy locally.\n. d1ea971fe3ea4dc8f401c31af3426cb1c207ffb2\n. The dialog themes weren't anything special. Just a 9-patch for the background that had transparency and a layout for the activity to show the dialog. You should be able to mimic this yourself with a drawable and layout XML.\n. 04-16 16:51:42.224: E/AndroidRuntime(15563): at com.android.internal.policy.impl.PhoneWindow.setContentView(PhoneWindow.java:270)\n04-16 16:51:42.224: E/AndroidRuntime(15563): at com.actionbarsherlock.internal.ActionBarSherlockNative.setContentView(ActionBarSherlockNative.java:135)\n04-16 16:51:42.224: E/AndroidRuntime(15563): at com.actionbarsherlock.app.SherlockFragmentActivity.setContentView(SherlockFragmentActivity.java:262)\n\nThis means you are calling setContentView and ABS is just calling through to the native setContentView on the window. Whatever you have in the layout you are using (specifically on line 101) is what is causing the exception, not this library.\n. Fixed with XML config on dev.\n. The platform wraps all strings in quotes. You can read more about its validity here.\n. This is a fundamental change to the behavior of logging that I don't want to make. ABS allows javac to strip logs at compile time in release builds.\n. Manifests have no effect on the library or your app.\nBut yeah, I'll update it on the dev branch for the next release.\n. This is what happens when you don't make a release for 6 months. You forget everything that needs to be done!\n. Updated. Also added a release walkthrough so I don't miss it again.\n. Sounds like it might be a CyanogenMod bug in their toString method of MenuItemImpl. The stock Android source lines don't match up with your trace. I'm too lazy to look at their source right now...\n. In any case, this will only affect debug builds of your app, thankfully. Release versions won't have any logging!\n. > You really should give your menu items a title.\n100% agree. Regardless, I'll push a dot release soon to save you all from yourselves if you choose not to do this.\n. Fixed on dev. I'll make a release this week at some point with a few other small things.\n. It matches the one in Maven central, r7. You should always replace it with the latest version no matter what build system you are using.\nBlame Google for setting dependency management back a decade :(  Hopefully the move to Gradle will force them to publish artifacts somewhere reasonable.\n. Hmmm it's defined in the base pom.xml of the project: https://github.com/JakeWharton/ActionBarSherlock/blob/master/pom.xml#L175-179\nEclipse isn't smart enough to pick that up? I never understood why Eclipse needed this thing anyway. UGH.\n. I don't mind having it there if it just works. Will merge when I get back to a computer.\n. Hard to repro or debug without more info, sorry. Watson lives in the same package as FragmentManager so that it can spy on some package-private fields. This really can't cause problems because both the support library and ABS are in the same classloader.\n. There was a bug. Updated to 2.0 on dev @ 88f1ffff5ce9eed6f734ca9387c03abe7464a94c\n. The library compiles with API 14 because that's the version of the action bar that it has backported. While this can be annoying, you can definitely change it locally without harm (or just download API 14).\n. This would only affect Honeycomb users since that API was introduced in Honeycomb. I suppose it wouldn't hurt...\n. Done on dev.\n. > When the user touches the icon, the system calls your activity's onOptionsItemSelected() method with the android.R.id.home ID. In response, you should either start the home activity or take the user one step up in your application's structural hierarchy.\nvia http://developer.android.com/guide/topics/ui/actionbar.html#Home\n. There is titleTextStyle and subtitleTextStyle attributes in the style referenced by the actionBarStyle theme attribute.\n. titleTextSize is an attribute on the action bar style referenced from the actionBarStyle attribute on the theme:\nHere's some pseudo-XML\n``` xml\n\n  <item name=\"android:actionBarStyle\">@style/myactionbarstyle</item>\n  <item name=\"actionBarStyle\">@style/myactionbarstyle</item>\n\n\n  <item name=\"android:titleTextStyle\">@style/Widget.Carrental.TitleTextStyle</item>\n  <item name=\"titleTextStyle\">@style/Widget.Carrental.TitleTextStyle</item>\n\n``\n. We've gotten in the habit of just writing our own with a more sane behavior and code using the same concept.\n. Doesn't the platformSearchView` also have this behavior?\n. Agreed. In the eyes of the library, crashing is the correct behavior since it matches the platform behavior.\n. You should make a dialog theme yourself. I'll remove from the documentation this weekend.\n. Done.\n. Dupe #902. \n. Done.\n. What package are you importing Window from?\nOn May 2, 2013 1:35 PM, \"Mark Andrachek\" notifications@github.com wrote:\n\nUsing ABS 4.3.0 with Android 2.3.4, in a SherlockFragmentActivity, this\ncode results in indeterminate progress spinner that won't turn off. This\nsame code works fine and has the desired effect on Android 4.2.2.\n@Overridepublic void setContentView(int layoutResId) {\n    requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);\n    super.setContentView(layoutResId);\n    setProgressBarIndeterminate(true);\n    setProgressBarIndeterminateVisibility(false);   }\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/922\n.\n. Have you tried the indeterminate example in the 'demos' sample app on the\ndevice? It works pre-ICS for me.\nOn May 2, 2013 1:40 PM, \"Mark Andrachek\" notifications@github.com wrote:\nimport com.actionbarsherlock.view.Window;\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/922#issuecomment-17363270\n.\n. The base activity shouldn't matter. They all delegate to the ActionBarSherlockCompat class on pre-ICS. Make sure you're calling super before setting the indeterminate progress. The decor view has to be initialized before any UI state can be triggered. You can make a dummy call to getSupportActionBar() to trigger decor view initialization as well.\n. These files are all created with a script. Is there something specifically wrong with them?\n. The platform wraps all strings in quotes which is where these are pulled from. You can read more about its validity here. I'll have to take a look at the missing string tomorrow. If it's missing from every language then re-running the script should be enough to pull it in for all languages.\n. Dupe #627 \n. All attributes are duplicated in ABS styles. It's much easier to say duplicate all attributes than just X, Y, and Z.\n\nThe mailing list is a great place to ask these question in the future rather than GitHub issues.\n. This is the behavior of the native action bar as well on API 14 and 15. It was fixed in API 16, I think.\nSince ABS emulates API 14 on previous API levels the behavior is expected. Your emulator looks to be either API 14 or 15 and thus is using the native action bar which is exhibiting this behavior.\n. The 'styled' sample shows you how to change the background through a theme and tab style.\nQuestions like this are better directed to StackOverflow or the mailing list.\n. Merged to dev.\n. Thanks. Will redeploy the site shortly.\n. This lint warning is disabled on the dev branch and if you are using CapitalizingTextView outside of ABS then you shouldn't. Having your strings be in uppercase is much easier.\n. ABS does almost nothing on Android 4.0 and up.\n. You should call setHasOptionsMenu in onActivityCreate not onCreate.\n. Yeah there's something racy going on here. There are two other bugs tracking that raciness therefore I am closing this. Stick with what works, though.\n. You'd have to write your own action provider. The built-in lists all applications which can handle an intent. This is the normal behavior of Android for all sharing-like actions.\n. Are you handling config changes in the manifest for orientation? Because if so, that's not supported.\n. Handling orientation changes can't be supported properly because the compatibility view exists inside the content view.\n. What happens when you use a normal ListActivity?\n. If it doesn't work with a normal ListActivity then it's not an ActionBarSherlock problem (nor did I expect it to be one, really). ABS doesn't have anything to do with ListView or how it works.\n. And I use that. Are you seeing this not work or are you trying to use this outside of ABS? The latter is not supported \n. setText is a final method on TextView so it cannot be override. You have to use setTextCompat. That said, using this control is not supported outside of within ABS (hence the internal package name). If you need uppercase text you're better of making it uppercase in your strings directly.\n. Space is always reserved for the up icon. Whether it is visible or not the home icon does not move.\n. AppCompat is the only way to get DrawerLayout support.\n. Add it for the whole project, samples and everything please. Also make pull requests against the dev branch.\n. This is fixed on dev and was added as part of the release process. It'll be updated with the next release.\n. I can't add things like this until the support library is updated in Maven central.\n. Google keeps saying they will... hopefully sooner rather than later.\n. Soon :)\n. > Google has not yet published Android 4.3_r1 or support-v4 r18 to a public Maven repository\nFYI Google has never published API jars or support library jars to Maven central and will not do so moving forward.\n. The 'styled' sample uses a custom actionBarItemBackground which gets shown behind the home icon/logo when pressed.\n. ActionBarSherlock gets deployed to Maven central which means that it can only depend on artifacts that are also available in Maven central. Currently on r7 is deployed which is why the version in this repo is r7 as well.\nSomeday it will be updated and someday we'll all get to enjoy it out of the box. Until then, you just have to update your copy locally.\n. It's based on most used not last used. Share to Facebook 10 times and it'll probably take over. Also, make sure you're using the themed context from the action bar to create views.\n. You'd have to select something twice. It's based on most used not last used.\n. Update it in your local copy. ABS is deployed to Maven central which means that all of its dependencies need to also be in Maven central. Since r7 is the latest there, that's the one ABS references. Google should be deploying a new revision soon which is when I will update this dependency. You should definitely upgrade it locally, however.\n. Yes. It's not in central.\n. What's ridiculous is that the community has to support its creation and\nupload not Google.\nOn Nov 21, 2013 5:02 PM, \"David Montemayor\" notifications@github.com\nwrote:\n\nAny updates on this front? Seems a bit ridiculous that the latest support\nlibrary version in Central is a year+ old. [image: :unamused:]\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/956#issuecomment-29002084\n.\n. Does it work on ICS and up?\n. Then ABS is behaving correctly by mirroring the native action bar behavior. Try posting a Runnable which changes the selection maybe.\n. Don't call invalidateOptionsMenu from onPrepareOptionsMenu.\n. Thanks!\n. Dupe #603.\n. I merged this but removed PopupMenu. If you need this class it can be included in the downstream app and use the internal ABS classes at the risk of them changing behavior or coming/going at any point in the future.\n. Took more than 5 min because of SDK ridiculousness. Oh well.\n. Can you made this fix against the dev branch (in the website/ folder) and then I'll deploy it?\n. Ah, ok. I'll deploy it.\n. I'll fix it in the next release. These serve no purpose on library projects which is why I always forget to update them.\n. Are you handling config changes for 'orientation' by any chance?\n. Handling orientation changes with ABS is not supported. It doesn't allow the library to properly reconfigure itself on rotation.\n\nIf you want to lock the app from rotation use the orientation attribute on the activity declaration.\n. \n. Needs a quick rebase. Should only be one conflict in the root build.gradle that's easily resolved (use the version from dev)\n. Can you make this one commit, please?\n. The platform search resources have this which is why it's echoed in ABS. The fact that it's wrong mirrors the behavior of the native action bar search view.\n. This is probably because on 4.0+ the native action bar's tabs are outside of the content view (managed by the window) and on pre-4.0 they are inside the content view (managed by ActionBarSherlock).\nTwo things: only enable bezel swipe to open the drawer and don't slide the content, have the drawer slide in on top of it. This is the recommendations of the design guidelines.\n. r7 is the latest in Maven central therefore that's what I ship with.\n. You can find a bunch of other pull requests like this where I do a better job of explaining why, if you're interested.\n. I'll merge this when the support library in Maven central gets update to r13. Thanks for the contribution.\n. We've had a couple of these on the mailing list and issues. There's nothing wrong with ABS that's causing this. The fact that it can't find an R class usually indicates something is seriously wrong with the VM. Nothing I can do here.\n. This is fixed on the dev branch. Also it really makes no difference since it has zero effect.\n. Closing since you asked on StackOverflow which is a more appropriate place.\n. If you are using a custom view for the title then you can adjust the typeface like any other normal TextView. StackOverflow or the official Android development mailing list is a better place for this question.\n. These classes are from the support library, not ActionBarSherlock. ABS ships with an old version so you have to update it to r13. Make sure you use r13 everywhere. Not much more I can help with.\n. Er, this is a bug in RelativeLayout, not ABS. No?\n. There's a YouTube video on the website's FAQ page that you can follow step-by-step. For further questions, StackOverflow is the appropriate place.\n. This won't be needed. It will be in Maven central soon.\n. The dialog themes were removed. If you want consistent dialog theming then you'll have to craft your own theme.\n. Why are you using both? The libraries are mutually exclusive.\nOn Jul 27, 2013 3:13 PM, \"clu7\" notifications@github.com wrote:\n\nHey guys, I'm having an issue when I add the android-support-v7-appcompat\nto my project. Basically I'm getting a bunch of these build errors:\n/libs/actionbarsherlock/res/values/abs__attrs.xml:4: error: Attribute\n\"titleTextStyle\" has already been defined\nThe attrs from appcompat library are the same. Is there no workaround for\nthis? Do I need to manually change the styles in the library myself? Seems\nlike there should be a workaround for this.\nThanks!\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/999\n.\n. You can probably just copy out the classes that you need. I don't know, really. The two projects weren't meant to coincide and if Google put more than just the action bar in AppCompat then that's really not smart.\n. They both back port action bars. The Chromecast stuff obviously isn't.\n. aapt doesn't support custom attributes declared multiple times.\n. Conflict with what?\n. > the only one which tested this new .aar version with ProGuard?\ufeff\n\nProbably this one :)\n. Was merged to dev. Will go out in the next release.\n. Merged to dev.\n. Merged to dev.\n. Why don't you pull it from Maven central?\ngroovy\ncompile 'com.actionbarsherlock:actionbarsherlock:4.4.0@aar'\n. Ah, I don't know then. I'm allergic to local dependencies. You should ask on StackOverflow or the ActionBarSherlock mailing list though since that's a better place for discussion and resolution. I'd like to only keep actual issues with the code here.\n. What version of ABS? I think this was already fixed.\n. If you are filing a bug report then file it here. Don't just link StackOverflow.\n. Sorry, no. AppCompat is the way to go if you need DrawerLayout support.\n. Both of the devices you list are ICS+ where the native implementation is used.\n. ActionBarSherlock is just a widget that wraps the content view of an activity. It's on Robolectric to support it, not me.\n. Use Theme.Light.Holo.NoActionBar. Theme.Light.NoTitleBar is a Gingerbread-y theme which has different button paddings.\n. That exception indicates a problem with your Bitmap, not an out of memory error. And that stack trace doesn't even run through ActionBarSherlock.\n. The zip files are created by GitHub automatically. There's a \"contact\" link at the bottom of every page. I would report it to them.\n. The official action bar doesn't support this therefore ABS does not.\n. What version of Android?\nOn Sep 4, 2013 7:22 PM, \"init2winitapps\" notifications@github.com wrote:\n\nIf I use the following flag in my app my menu appears off the screen\nWindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS\nI need the flag above since in some instances my views go off screen\nhowever I'm stuck with what's below. Is there any way I can force the menu\nto show correctly. Maybe a way for me to set the menus coordinates?\n[image: fcbbh]https://f.cloud.github.com/assets/3957990/1085473/d3d3bba8-15d1-11e3-8b97-d45aa6e42b56.jpg\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/1033\n.\n. Well on Android 4.0+ that's the native action bar. The fact that you get the same behavior on both means ActionBarSherlock is doing its job (emulating the native action bar). Sounds like you should file a bug on http://b.android.com for it.\n. There's no way to force it, no. None that I know of at least. On Android 4.0+ ActionBarSherlock does almost nothing. Everything is handled by the normal system. I've never encountered this window flag so I'm afraid I can't help you. Sorry!\n. Can you re-submit this pull against the dev branch? Also please squash to a single commit if possible. Ignore Travis CI.\n. The project is about 2.5 years old so some of the files were created back before I knew how to git properly.\n. This can't be done. Your best bet is to steal a bunch of code from ShareActionProvider (the intent lookup and action provider stuff) and just make your own. Like Switch this has no public theme attributes to affect its styling, unfortunately.\n. > I using ScrollingTabContainerView to create tabs.\n\nThis is an internal widget. You should not be using it yourself.\n. ScrollingTabsContainerView is not meant to be used directly. It is in an internal package of ABS.\n. Merged to dev and deployed.\n. Android 4.2.2 uses the native action bar. ABS does nothing except proxy method calls to the native implementation in this case. I don't know what could be causing this, sorry.\n. > How to change background of menu items. When I tried with actionBarItemBackground it changes the background of logo also.\nYou can try a custom action view perhaps. Otherwise, you might not be able to.\n\nOr Can I add a divider if I have only one action item which is to be shown as text only\n\nNo. Divider logic is fixed.\nPlease ask future questions on the mailing list or StackOverflow.\n. Dupe of #1044.\n. Thanks. I'm looking at a dot release in the next week or two.\n. Add the following to the root element in your XML:\nxml\nstyle=\"?attr/actionButtonStyle\"\nSee settings_action_provider.xml for an example in the \"demos\" sample.\n. This is not the appropriate forum for this. Try StackOverflow.\n. Sonatype doesn't allow promoting artifacts which reference non-existent artifacts. The Maven apklib references the support library in Maven central. The Gradle aar doesn't reference any support library but requires you to always have it added manually.\n. > It's been pushed to Maven, and it's got the new Android support library reference, which is not in the global Maven repos.\nThen they violated the guidelines.\n\nAlso, while the gradle's aar doesn't specifically reference the support library, it's still pulled down and causing compilation issues :(\n\nWorks for me @ https://github.com/JakeWharton/ActionBarSherlock-Gradle-Sample\n. The license you sign when downloading the support library forbids binary\nredistribution. You'd have to compile your own from AOSP to upload. Of\ncourse, it depends on Android 4.3 itself so you should also create an\nartifact for that...\nOn Oct 7, 2013 12:34 AM, \"Artiom Chilaru\" notifications@github.com wrote:\n\nThen they violated the guidelines.\nIs that really true? I haven't found any reference forcing all your\ndependencies to already be there. In fact, I've found this line in their\ndocs:\nIn ideal conditions, all your dependencies should be already in central\nand central repository is self-contained.\nwhich makes me thing that they would obviously rather want you to have all\nyour dependencies already available, but that's not a hard requirement.\nLater on they also state:\nIf some of your dependencies are not in central, please upload them using\nour 3rd-party artifacts bundle upload service.\nSo maybe we could upload the current latest Android support library to\nmaven, so that this wouldn't be a problem? What do you think?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/1050#issuecomment-25789595\n.\n. Thousands of projects rely on the apklib artifact having a reference to the support library. It's too late to change. Besides, just because you can do something doesn't mean you should. If you want to reference a different artifact which represents the support library you can add an <exclusion> to the dependency declaration.\n. Robolectric 2.2 uses the real PhoneWindow for activities. That's going to be your best bet getting ABS working.\n. You shouldn't need ActionBarSherlockRobolectric with 2.2. It uses a real window to hold activities. It should just work normally.\n. Translation isn't used on the content. Are you using things from ABS's internal package that you shouldn't be?\n. Not only should you never override a dimension by convention, but this is something that the native action bar does not allow you to do. How are you supporting Android 4.0+?\n. ABS only offers the API that's available on Android 4.0. Since there's nothing to control the margin in native Android we can't add it to this library. I realize that it inhibits customizability, but the point of this library was not to facilitate a customizable action bar but rather to bring the 4.0 API backwards through all the old APIs one would need to support.\n. When was this implemented for Android? I think it's 4.1 or later which means ABS doesn't support it because it attempts to match the behavior of 4.0.\n. We maintain the translations in accordance with Android 4.0.x since that's the version of the action bar that ABS provides.\n. Show code. You can't set a theme after the decor view has been initialized.\n. The zip on the website is automatically generated from the repo's master branch by GitHub.\n. Because it's mismatched from what's in Maven central.\n. There is no API for this in ABS or the native action bar.\nOn Dec 11, 2013 4:03 AM, \"avarana\" notifications@github.com wrote:\nI want to change the background color of menu items (overflow) in your\nactionbarsherlock, but i can't find any way to do this. I know that i can\nchange it with styles but i need to change dynamically inside the activity\ncode. Now, i have a custom style for the ABS. Can you give me any example\nor tips to do this dynamically?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/1073\n.\n. Every version supports Android 2.2.\n. You have to compile with Android 4.0 or newer.\n. Yes. More info here: http://simonvt.net/2012/02/07/what-api-level-should-i-target/\n. Not without more info\n. IcsLinearLayout is an internal class to the library whose behavior is specific only to the requirements of the action bar. You should not use this directly since it likely will not behave for every use case (just like you are seeing).\n. There are public. Meant to be used by consumers of the library.\n. For the adapter that backs the Spinner used for list navigation. They don't\nhave the same prefix because people shouldn't be using anything prefixed\nwith \"abs__\" ever.\nOn Dec 28, 2013 11:50 AM, \"AndroidDeveloperLB\" notifications@github.com\nwrote:\n@JakeWharton https://github.com/JakeWharton In which way exactly? and\nwhy?\nAnd even if they are meant to be used by consumers, why can't they have\nthis prefix?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/1080#issuecomment-31303475\n.\n. Right. Libraries can't have private resources like Android so a strong\nconvention is all there is.\nOn Dec 28, 2013 11:59 AM, \"AndroidDeveloperLB\" notifications@github.com\nwrote:\nWhat's the difference?\nI mean, people could override them just as they could override any\nresource that starts with \"abs__\", no?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/1080#issuecomment-31303638\n.\n. They don't follow the convention because they are public. You are supposed\nto use them directly. You should never use anything prefixed with\"abs__\"\ndirectly.\nOn Dec 28, 2013 12:04 PM, \"AndroidDeveloperLB\" notifications@github.com\nwrote:\nBut those files didn't follow the convention...\nWouldn't it be better to have all of those files have this prefix, and\nmaybe for files you don't wish other to override, add extra text to the\nprefix?\nHow do you know which files exactly you can use from the library, to\noverride , customize, etc ... ?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/1080#issuecomment-31303733\n.\n. Those not in the internal package.\nOn Dec 28, 2013 12:10 PM, \"AndroidDeveloperLB\" notifications@github.com\nwrote:\nWhat about Java code? which files are OK to be used/customized/extended ?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/1080#issuecomment-31303848\n.\n. They aren't used in the library at all. They are for you to use when making\nadapters for list navigation. Overriding them has no effect.\n\n\nJake Wharton\nhttp://about.me/jakewharton\nOn Sat, Dec 28, 2013 at 1:06 PM, AndroidDeveloperLB \nnotifications@github.com wrote:\n\nBut you've just said that files without this prefix are safe to be\ncustomized, as opposed to those that have this prefix.\nIf those files are internal to the library and shouldn't be overridden,\nthen they should have this prefix too.\nThat's the logic I understand of this prefix.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/1080#issuecomment-31304920\n.\n. Well you can't extend layouts...\n\n\nJake Wharton\nhttp://about.me/jakewharton\nOn Sat, Dec 28, 2013 at 1:16 PM, AndroidDeveloperLB \nnotifications@github.com wrote:\n\nSo you want them to be safe from being overridden, yet you don't give them\nthe same naming protection as the other files?\nI thought that using is the same as customizing, just like I'm allowed to\nuse Java files and therefore can also extend them and customize them.\nYou've just said that Java files in the internal package are unsafe, while\nthe others are safe.\nIf I use this same logic on XML files, it doesn't match what you've\nsaid... :(\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/1080#issuecomment-31305089\n.\n. Breaks Eclipse devs so can't do that. Blame Eclipse and/or ADT.\n. This is fragment manager complaining which is part of the support library, not ABS. Please ask your question on StackOverflow or the official Android developer mailing list.\n. SearchView is an Android component. It is only mirrored here for backwards\ncompatibility reasons. If you would like to suggest improvements you can\nfile a bug at http://b.android.com\nOn Feb 4, 2014 9:08 PM, \"Tarry Chen\" notifications@github.com wrote:\nHi,\nI was wondering why the setSuggestionsAdapter in SearchView.java only took\nin CursorAdapters when mQueryTextView.setAdapter will take in any\nBaseAdapter that implements Filterable.\nWhy not allow users of the SearchView provide an Adapter that implements\nthose requirements?\n\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/1084\n.\n. Correct.\n. I find absolutely no utility in these things. It should always be green, if not it should be emailing people to annoy them.\n. Ya I'll enroll in a Coursera for it.\n. > Class ref in pre-verified class resolved to unexpected implementation\n\nYou have duplicate dependencies in your real and test APK.\n. Stop using ActionBarSherlock! minSdkVersion=\"15\"\n. Can't be done.\n. IcsSpinner is an internal class that shouldn't be used anywhere but inside of ActionBarSherlock.\n. No. ActionBarSherlock only backports the action bar look and functionality. The content of the app is still your responsibility.\n. You have to use a custom tab bar. This isn't supported by the native action bar (and thus nor ActionBarSherlock).\n. SherlockDialogFragment adds no functionality in this regard. It just extends from the normal support library DialogFragment so any behavior you are seeing (or not seeing) is from the support library, not ABS.\n. These aren't related, and SearchView definitely works in a SherlockFragmentActivity. Please try StackOverflow if you are still having problems.\n. No. ActionBarSherlock is for backporting 4 to pre-4 and I highly encourage you to stop using it and minSdkVersion=15\n. ActionBarSherlock is not being actively developed because the time of its use has come and gone. There's no longer a reason to be using it! All new apps being created and new versions of existing apps should all be targeting API 15 or newer.\n. You are looking at the behavior of the native action bar, not the compatibility one from this library. This is just how Android behaves.\n. No. Use AppCompat if you need those features.\nOn Oct 24, 2014 4:45 AM, \"cagkanciloglu\" notifications@github.com wrote:\n\nHi @JakeWharton https://github.com/JakeWharton. Android L showed some\ncool features about action bar, like rotating actionbar icons, fading\nactionbar with scrollbar and listview etc(\nhttps://github.com/ManuelPeinado/FadingActionBar). Do you have any plan\nto update library with new features?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/1116.\n. ActionBarSherlock != AppCompat. See http://android-developers.blogspot.com/2014/10/appcompat-v21-material-design-for-pre.html\n. Yes. Simply having the 'actionbarsherlock' tag will notify a bunch of people to look. Closing the issue though.\n. These libraries cannot and should not be used together as they attempt to serve the same purpose.\n. That widget is in the internal package and not part of the public API.\nOn Feb 3, 2015 9:03 AM, \"metalurgus\" notifications@github.com wrote:\n@JakeWharton https://github.com/JakeWharton that should be awesome, but\nthey do not. If you just read my question before closing it, you'd realize\nthat ActionBarSherlock does not have a set of important features from\nAppCompat. But it has the SpinnerICS widget which I wanted to use. They\nshould not be used together once one of them covers functionality of the\nother. Currently it does not.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/1121#issuecomment-72689545\n.\n. These images are copied directly from AOSP. The warning can just be ignored.\n. Nested activities do not have action bars. This is how the platform behaves.\n. Why would it? They're the same thing.\n\nOn Tue, Jun 2, 2015, 4:27 AM ravipradeep89 notifications@github.com wrote:\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/1125.\n. It is precisely the right solution.\n. ABS has been deprecated for years and the migration to AppCompat was\nsomething you could have done gradually. You extracted value from ABS for\nyears at no cost, so the arrogance doesn't lie on me.\n\nOn Fri, May 20, 2016, 12:45 PM chiaramail notifications@github.com wrote:\n\nActually, it's an arrogant solution, as it does not take into account the\ndifficulties in doing the conversion.\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly or view it on GitHub\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/1129#issuecomment-220701282\n. The platform action bar is used on Android 4.x and newer so I'm not sure\nthere's a whole lot that can be done here. The OEM broke the system action\nbar.\n\nOn Thu, Apr 20, 2017, 2:10 PM JMHaro notifications@github.com wrote:\n\nWe are still using the ActionBarSherlock (and currently cannot change to\nanything else due to customer restrictions) but with the recent release of\nAndroid 7.0, we are seeing issues on 'certain' Samsung devices like the\nNote 5 and the Galaxy 7 Edge. The tab strip is being reduced in size and I\nhave not found any way to increase the size back to normal. Other devices\nlike Nexus 5x (also on Android 7.0) does not see this issue. And we haven't\nhad this issue with previous versions of Android.\nI haven't been able to find search results that might help me do a work\naround for this (either by resetting the tab strip to the correct height,\nor being able to determine when this condition might exist so maybe I could\nreduce the size of the images if needed). I'm looking for any help I can\nget on this since our client is making this an urgent issue. The first\nimage I'm attaching is the way it's being displayed on these certain\ndevices, and the second image is how it should be looking.\n[image: bad tab buttons]\nhttps://cloud.githubusercontent.com/assets/3945942/25248029/5fb83982-25d2-11e7-86f0-da23ba1eb8fe.png\n[image: good tab buttons]\nhttps://cloud.githubusercontent.com/assets/3945942/25248214/05e868f4-25d3-11e7-819b-05b5f5d375f0.png\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/1135, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AAEEEbXykS6fH5keg-bHs8f2HBFH0iiCks5rx624gaJpZM4NDdEw\n.\n. You can't use this library and AppCompat together. You'll need to upgrade to AppCompat only.. Can you confirm these are in ascending order by integer value?\n. These both should be void and prefixed with 'dispatch'. This way all of the logic lives inside of the ActionBarSherlockCompat class and reduces duplication in activities.\n. Should be 0. The comment too.\n. Odd indent.\n. Version numbers should only be specified in the root pom.xml.\n. This is wrong since it works on API 7+\n. Then the declaration should be on the method, not the entire class.\n. The problem is that a lot of the times what we do is a bit complex for lint. It may be useful to just suppress a few overall. @SimonVT is right about the invalidateOptionsMenu call, we override it so that it will technically work for all API levels. I find lint highly useful for applications but it's hard to shove into a library where we rely on certain behavior.\n. This version doesn't seem to be used. It is provided for others to use (despite being in the internal package)?\n. No. It should definitely be kept internal.\n. Space after if. Also the name of the class is IcsToast but we're only using on pre-Honeycomb. Should probably switch the conditional to compare against ICS.\n. Space after if. Same HC/ICS stuff as above.\n. Drop IcsToast. so it's just TAG.\n. Out of curiosity where did you get this value from?\n. Needs four-space indent.\n. Either no brackets or put return on its own line.\n. Needs four-space indent.\n. Either no brackets or put invalidate on its own line.\n. Either no brackets or put invalidate on its own line.\n. Only dependencies in Maven central are allowed, sorry.\n. This file looks like it's formatted with tabs or two-space indents. ABS uses 4 spaces. I'll just fix after merging tomorrow.\n. What's this?\n. Well that's depressing. This is a good start, at least. Thanks!\n. Why?\n. In Android Studio or on the command line?\n. I think you just need to re-import the project from the build.gradle file and delete the existing project when it prompts.\n. \n",
    "manandbytes": "http://repository.jakewharton.com/ is unreachable due to\n```\nThe DNS server returned:\nName Error: The domain name does not exist.\n\n```\n. I've found it already, thank you.\n. ",
    "LorneLaliberte": "The contextual action bar is a pretty sweet interface design IMO...I was impressed by the examples shown in this year's I/O livestream. Reusing the action bar is not only efficient, it serves a purpose by hiding the global actions while in the context of a modal step. I thought making the bar appear \"shifted to the right\" with the button on the top left was a nice affordance.\n. Where does ICS use such a large progress indicator, Jake? The one in Gmail's action bar in Jelly Bean is two thirds the size of the one in ActionBarSherlock.\nI haven't done an exhaustive search, but so far the only large progress indicator I've spotted with this size is the one used in the main view of an activity (e.g. in a listview). I haven't noticed one in the action bar that was this large yet.\n. Yeah, that will show the default action bar implementation, but what I mean is that I've never actually seen such a large indeterminate progress indicator in the wild on ICS or Jelly Bean. I've only ever seen smaller ones (so far).\nI guess the more proper question is why did Google make the action bar's indeterminate progress so big in the first place, if they didn't like the look of it that way either... :)\n. ",
    "appamatto": "Does this include all of the methods marked as API level 14? Are any of these being added piecemeal to 3.x, or will they be exclusive to the 4.x branch?\n. I'm running into the same problem. I printed out the view hierarchy with ids, and the id we're looking for is indeed present in the hierarchy. For some reason findViewById is unable to find it--does it need to be called in an onFinishInflate method?\n. I'm not on r14 by the way. Surprisingly, I think this coincided with a long overdue upgrade from r12 to r13.\n. User error--apparently the way my build system wasn't handling abs resources correctly. The id was slightly different and I think this means findViewById's null was correct after all.\n. I filed this bug: https://github.com/sbt/sbt/issues/696\nI tried to create a minimal test case but no dice. Have you ever seen anything like this before?\n. ",
    "SimonVT": "Considering that ICS is most likely coming to most, if not all, HC tablets, and the fact that the number of HC devices is pretty limited, I don't think you should make any extra effort to support the native implementation on HC.\n. This should really be done by using the already existing OnPageChangeListener rather than exposing new API.\n. Sorry, I mistook getCurrentItem() for a change made by you/Jake.\n. Have you tried getSupportActionBar().hide() ?\n. Split actionbar is still shown in landscape on phones.\n. I believe this is related to line 407 in measureHeightOfChildren of IcsListPopupWindow:\nint returnedHeight = mDropDownList.getTop() + mDropDownList.getBottom();\nOn first measure, returnedHeight is 0. When leaving the activity and returning, measureHeightOfChild is called again, and this time returnedHeight is the height from last measure.\nI can confirm that the overflow menu is dismissed when leaving activity in the ICS implementation, which would also solve this problem.\n. From what I gather, dispatchPresenterUpdate(...) in MenuBuilder is supposed to call updateMenuView(...) when we press back. However, mPresenters is ALWAYS empty when that method is called (it's never empty in the native implementation), causing it to return before updateMenuView(...) is ever called.\nThe first time updateMenuView(...) is called, it's called from getMenuView(...) since mMenuView is null. The next time, it'll return the cached instance of mMenuView.\nAnd that's about as far as I've gotten. Any ideas?\n. If I move updateMenuView(...) out of the if (mMenuView == null), the action items show up correctly.\n. I use getSupportActionBar().setTitle(...) several places in my applications, never had an issue. You might want to check that keyword isn't null.\n. Yeah, you're right. Never noticed that.\n. I'm unable to reproduce this.\n. Would it be possible for you to provide a small sample that displays the behavior?\n. I still can't reproduce this. You're going to have to provide a full sample and instructions on how to reproduce the error.\n. Still can't reproduce, I'm just gonna let Jake debug this one.\n. This appears to be because the animation is not being cleared from the ActionBarView after it's done animating visibility.\nThe ViewGroup does the following check before passing on a touch event:\nif ((child.mViewFlags & VISIBILITY_MASK) == VISIBLE || child.getAnimation() != null)\ngetAnimation() on ActionBarView never returns null on <=2.3, while it correctly does so on 3.0+.\n. An alternative way to handle this is to intercept the touchevent in ActionBarView if visibility != VISIBLE.\n@Override\npublic boolean onInterceptTouchEvent(MotionEvent ev) {\n    return getVisibility() != VISIBLE;\n}\nThis will at least ensure that the child views do not get a touch event when the ActionBarView is GONE.\n. If you're using the beta5 compat lib you have to use the beta5 ABS snapshot as well. It is not compatible with the current 4.0-wip branch.\n. You don't. No action bar means no menu items.\n. Wouldn't it be a major hassle to detect which theme is set? Especially if it's set from code.\n. Defining the few ActionBar related attributes twice does not seem that bad, especially considering that users in most cases will only have to touch a few of them. As long as this is well documented.\nMaybe even a quick tutorial on using intermediary themes (ActionBarStyling extends intermediary extends Theme.Sherlock) for defining all the \"regular\" framework styleables, so at least they won't have to be duplicated.\n. It IS default behavior to hide the overflow button on devices with a menu key. The native action bar is shown on ICS devices, not the ABS implementation.\n. @JakeWharton you can get the emulator to show software keys if you want. Just set the \"Hardware Back/Home keys\" property to no from the GUI avd editor.\n. Huh, it does show the overflow button for me tho.\n. Remember that users with those devices are used to having a menu button. They are NOT used to having an overflow menu. By forcing this you are giving users an inconsistent experience, which is bad.\nImo it was a mistake to ever include ForceOverflow.\n. I'd take consistency over saving a line of text in some tutorial most of your users probably wont read anyway.\n. Google+ doesn't use the native ActionBar.\n. ABS4 only supports 2.1+\n. No worry. I believe Jake mentioned supporting it later, but for now 2.1 is all it does :)\n. I guess the problem is that it translates 56dp into 84px, instead of the correct 56px if it had reported itself as mdpi.\n. It uses the native actionbar on ICS, which has no way to force the overflow icon.\n. \"Also crashes for a normal menu item when android:showAsAction is set on a GB emulator.\"\nWait, so it works on 2.1, but crashes on 2.3.3? oO That's strange.\n. Yeah, it only fails on GB, and only if no android:showAsAction is defined for an item. Apparantly it's trying to load a drawable instead oO\n. No, the attributes were not available on GB.\n. Don't get arrested for driving and merging\n. Keeping annotations is actually the default in ADT17\n. Open up the demos app, then go to \"Indeterminate Progress\". Also, gmail most likely uses an action view or something, and not the action bar's indeterminate progress feature.\n. Update android-support-v4.jar to the newest, and change visibility of SherlockFragmentActivity.supportInvalidateOptionsMenu() to public\n. No, it's not fixed in a branch yet. Jake is waiting for the new support lib to be available in his some Maven repo before updating the bundled lib.\n. This question is probably better suited for google groups: https://groups.google.com/group/actionbarsherlock\n. Can't reproduce this either. Maybe upload your hprof file as well, so we can check it out.\n. @westward Do you have a hprof without ABS?\n. I have no idea. I see no obvious reasons for it to be leaking. I mean, the whole Activity is leaking, which most certainly would lead to some serious issues with larger apps. The only common root they have is a WeakHashMap in the NineOldAndroids implementation, but that's not going to cause any issues.\nI too suspect it could be related to a buggy rom, but that doesn't explain how you're able to reproduce it on the 2.3 emulator\n. I have no idea, strange if that would be the case. Either way, here's an apk compiled by me. I've been unable to reproduce it so far: http://dl.dropbox.com/u/100261/LeakTest.apk\n. Huh, weird. Built with the latest dev branch, tho earlier I tried both current master and the ABS you uploaded. No issues there either. Maybe check your setup, update java, eclipse, sdk, etc\n. I made a project using ABS, and one using the native implementation. Created two AVDs with the same size and dpi. Result can be seen in the image.\n\nSeems to be caused by a framework bug, tho the container is measured a bit larger with the ABS implementation.\n. For some reason this depends on the space taken by action items. If there are no, or very little space is taken, the bug is not there.\nThe size of the popup menu also depends on this, which I find strange.\n. I did something similar, though using state_checked. state_activated should work tho, as the state res id's should be compiled in the xml. This can serve as a start for evaluation.\n``` java\nprivate boolean mChecked;\nprivate static final int[] CheckedStateSet = {\n    android.R.attr.state_activated,\n};\n@Override\nprotected int[] onCreateDrawableState(int extraSpace) {\n    final int[] drawableState = super.onCreateDrawableState(extraSpace + 1);\n    if (isChecked()) {\n        mergeDrawableStates(drawableState, CheckedStateSet);\n    }\n    return drawableState;\n}\n@Override\npublic boolean isChecked() {\n    return mChecked;\n}\n@Override\npublic void setChecked(boolean checked) {\n    mChecked = checked;\n    invalidate();\n    refreshDrawableState();\n}\n@Override\npublic void toggle() {\n    setChecked(!mChecked);\n}\n```\n. There is nothing but a pom file and some random not-project-related files in the root dir. Where exactly is the nesting?\n. @JakeWharton http://simonvt.net/meizu/\nThese should be from a Meizu M9.. Get to deodex'ing\nEdit: Uploaded to my webhost instead\nEdit: And packaged: http://dl.dropbox.com/u/100261/framework.zip\nEdit: And baksmali'd: http://dl.dropbox.com/u/100261/framework-baksmali.zip\nand dex'ed: http://dl.dropbox.com/u/100261/framework.dex\n. I tried making a sample project with nothing but ABS and a setContentView. No errors when running on a Meizu M9.\n. Really? That's the issue? Goddamn, that's why pure ABS doesn't fuck up then.\n. @ChrisSmith Yep, it's confirmed.\n. Apparently they didn't launch with market, but got it with a later update. I kinda doubt they bothered much with the CDD.\n. As far as I can tell, this only seems to apply for the theme, not any styles referenced in either the theme or on a View directly (I use a few newer attributes in my styles, and the guy with a Meizu M9 says everything works perfectly). That's something, at least.\n@JakeWharton As @ChrisSmith said, put this in the documentation. You said it yourself, it's good practice, and fixes issues like this on broken devices.\n. It's a rom issue. The solution is, as mentioned, to put android: prefixed attributes in values-v14.\n. Does this only happen when using SherlockPreferenceActivity, or also PreferenceActivity?\nMaybe try and apply the theme to the activity tag directly, instead of the application tag.\n. This doesn't seem related to ABS at all, judging from where it's crashing. ABS does not override or touch any saved state.\n. The comment in ActionMenu is actually from the AOSP source, so it's Google who wants to make it smarter ;p\n. This is not related to ABS. You should try either stackoverflow or the android developers google group.\n. ABS should behave the same as the native ActionBar. If there are any differences, feel free to report them. As for ActionBar functionality, use an appropriate forum (stackoverflow, android developers google group) for questions related to this.\n. I'm gonna go ahead and guess you're adding the fragment in onCreate, even if it already exists.\n. Can reproduce with ABS, support lib and native implementation if Fragment doesn't have an id or tag. Can not reproduce on any of them if Fragment has an id or tag.\n. Neither Fragment not ViewPager is a part of ABS, so any issue you're experiencing with these should be taken to the appropriate forums (stackoverflow or Android Developers on Google Groups).\nThere's no \"letting\" duplication issues happen. This is how Fragments work, it's up to you to ensure issues like this doesn't happen. If you need to give your fragments in a viewpager a specific ID, make an adapter that lets you give them that.\n. It doesn't, but you can use the same tag in your xml and your adapter for the same fragment.\n. By passing a tag to FragmentTransaction.add(...). Now, please take questions like this to the appropriate forums.\n. ABS does not support android:configChanges=\"orientation\" yet. It is not recommended doing this anyway.\nAnd yes, ActionMode disappearing on configuration changes is entirely expected. It's how the native ActionBar works.\n. It takes very few lines of code to re-start the ActionMode in onCreate, making it appear like it was never closed. Again, the default behavior is that it disappears.\n. http://developer.android.com/guide/topics/resources/runtime-changes.html\n\"This technique should be considered a last resort when you must avoid restarts due to a configuration change and is not recommended for most applications.\"\nBut still, ABS does not support it. There's already an issue open for this.\nIf you still have an ABS specific issue (as in, only happens with ABS, not the native implementation), please supply a sample showing this behavior, as well as an identical sample using the native implementation which does not show the same behavior. I'll be happy to take a look at it. Make sure your samples do not handle orientation changes.\n. Doesn't seem like an error, as it's the only place those variables are assigned. It might be bad style, but it's how they chose to do it in AOSP.\n. No, it shouldn't. Theme.Sherlock.Light.DarkActionBar extends Sherlock.Theme.DarkActionBar.\n. Can reproduce on ICS. Framework bug.\nProtip: Use icons\n. What device is this happening on?\n. Text is only shown in certain configurations (e.g. in landscape, or on tablets). This is not a bug.\n. Again, not an ABS issue. Unless you can provide samples that shows this only an issue with ABS, and not with the native ActionBar, you're in the wrong forum\n. Doesn't sound like an ABS error. Try clean project. I have several animations in my projects, and have never experienced this.\n. Doesn't seem related to ABS. You're sure this library is triggering the bug?\nPlease provide a sample which exhibit this behavior.\n. ABS does not currently support handling configuration changes. An issue has already been registered for this.\n. The strings are all defined in library/res/values/strings.xml. You can copy the languages you need from AOSP, and prefix the strings with abs.\n. This should either be a complete commit which includes all languages in AOSP, or people should manually include strings for languages they support. Just adding 10 is kind of half-assed.\n. Adding a test case to the known bugs sample greatly increases the chances of anyone looking at this.\n. Please add a test case to the known-bugs sample on the dev branch.\n. Can't really use a closed source app for debugging. And besides, a complete app is too much noise. A simple example added to the known-bugs project is preferred.\n. Can't fix broken devices. Besides, pretty sure those are scheduled to get ICS.\n. It's not a bad idea since it ensures no changes to menu resources are necessary to make them work with ABS. Considering it doesn't crash, this is not really a major issue. To stop it from happening completely, simply checking the resource type should be enough (like we do with android:showAsAction).\n. It seems to be crashing when inflating your layout, not any of the ABS layouts. Are you sure this is an ABS issue?\nhttps://github.com/JakeWharton/ActionBarSherlock/blob/master/library/src/com/actionbarsherlock/internal/ActionBarSherlockCompat.java#L857\n. Tabs aren't the only thing affected by runtime changes, which is why this won't be merged. That, and handling runtime changes is horrible.\n. As @iNoles said, put android:actionBarStyle in values-v14. Do not add attributes to themes that are loaded on platforms where said attributes do not exist.\nWhat @danwms posted just hides the issue on a specific set of devices, it in no way solves it. There are more broken devices out there, where the resource id doesn't necessarily point to fast scroll.\n. Closing as it's not really an ABS issue. Just remember to only use attributes on platforms where they exist (version-postfix your values folders, e.g. values-v14).\n. It's closed because there is no ForceOverflow theme anymore, which was mentioned as the cause.\n. Open an issue, and add a test case to the known-bugs project on the dev branch.\n. There's no callback to this method on older platforms when force overflow is used. Maybe make it non-final when that's removed?\n. Please see #581 for why a pull request like this will not be accepted.\n. You're duplicating them so the holo colors are only used in the action bar, and not the rest of a users app.\n. @mrenouf I'm not sure you should be using the textColor* attributes in your app.\nFor example, ?attr/textColorPrimaryInverseDisableOnly would resolve to nothing on API14+ if it was added.\n. This attribute is already defined in the default style. I see no difference between native implementation and when running on 2.3.\n. If you're redefining any theme attribute, make sure you extend the default styles. I've loaded up the samples in a 2.3 emulator and I'm not seeing this behavior.\n. On configuration changes, the FragmentManager will re-add any fragments that were previously added. This means that every time you rotate the screen, you add an extra instance of your fragment to your layout.\nThis is not an ABS issue, and it has nothing to do with setHasOptionsMenu(). It's just you adding several instances of the same fragment to your layout.\nHint: Check if your fragment already exists (give it a tag, and use FragmentManager.findFragmentByTag or something) before you add it.\n. Duplicate of #581.\n. ABS does not in any way modify how fragments display their views. Try stackoverflow or the android developers mailing list.\n. You fixed some checkstyle errors in the second commit, there are still some in the first. Also, please squash it into a single commit.\n. This would require custom View implementations. Probably not very likely to make it into the library. At most you'd get something like ViewCompat.startActionMode(View, ActionMode.Callback), that would ultimately call back to Sherlock*Activity.startActionMode(), which seems pointless.\nHandle this in your Activity.\n. Not testable on the 2.1 emulator: http://code.google.com/p/android/issues/detail?id=2423\nEdit: Ignore this message, it works now.\n. Remove the spaces, amend last commit and force push to this branch. It will update the pull request.\n. You seem to have reformatted the entire file :F\n. It'd be great if you could fix that and squash it into a single commit\n. Backport it.\n. I just realized something.. We have to provide devicedefault variants of the styles as well.\n. Can you provide a sample project?\n. Can you provide a sample? Maybe add it to the known bugs project.\n. I see the same behavior when using the native action bar, so this is a framework bug. Nothing we can do to fix it, I'm afraid. File it at http://b.android.com.\n. That's how the framework makes the text all caps as well, are you sure your spannables work in the native implementation?\n. Nothing we can do about this, your build system is messing up. Check the mailing list if anyone is having the same issue.\n. ABS doesn't change how System.exit(0); works. Also, don't put an exit button in your app. Android apps don't have exit buttons.\n. Please add a test case to the known-bugs project on the dev branch.\n. This sounds more like a question for stackoverflow or some other android developer forum.\n. Can only reproduce with the native action bar. File it at http://b.android.com.\n. Please add a sample displaying this behavior to the known bugs project.\n. Add some samples to the known bugs project, then we'll take a look at it.\n. Probably a duplicate of #522. Blame Sony Ericsson.\n. The searchAutoCompleteTextView attribute is not part of the public android api.\n. Duplicate of #537\n. Try the mailing list or stackoverflow.\n. ABS does not support handling configuration changes.\n. This is probably my fault. The code doesn't account for margins when finding the largest child (getMeasuredWidth() doesn't include this when the measure phase is done, right?), whereas the framework does.\n. Please add a test case to the known-bugs sample on the dev branch.\n. Did you add android:configChanges=\"orientation\"?\n. Add a test case to the known-bugs project on the dev branch.\n. Both of those attributes are already defined in the Theme.Sherlock* themes.\n. You have to use your activity as the context for views.\nOn Sat, Jan 12, 2013 at 3:42 PM, hahnjo notifications@github.com wrote:\n\nFirst, great thanks for your work!\nI created a very minified test application that crashes on my phone. I\nhope that this could help :)\nhttps://github.com/hahnjo/ActionBarSherlock-Test\nhahnjo\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/685#issuecomment-12178890.\n. Thanks for the test case.\nI guess we could fix that, but you're supposed to use getSupportActionBar().getThemedContext().\n. The status is that there is no issue when you use SearchView like you're supposed to. Currently no plans to support wrong ways.\n. Our testing has shown no issues when using the themed context, and we have received no test cases that shows otherwise.\n. I'm assuming he means the LayoutInflater provided in Fragment#onCreateView.. No, that doesn't use the themed context. Only views that go in the action bar should use the themed context.\n. There is an issue open for this, but it's not likely to be added any time\nsoon.\nOn Feb 26, 2013 10:57 AM, \"Daniele Segato\" notifications@github.com wrote:\nWill it be supported in a future version? (just curious)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/685#issuecomment-14103763\n.\n. If there's an issue, submit a test case. So far we've seen no evidence that it's broken in the context of the action bar.\n. That's because you're not passing it ActionBar#getThemedContext.\n. The issue says working as intended.\n. I don't see how this is a bug.\n. ActionBar behavior/look can and do change between platforms. It's up to you as a developer to ensure your app still works. ABS only serves to provide the ActionBar API to older platforms, which is done by backporting the ICS ActionBar. Any changes in JB and later platforms are not something ABS controls, nor is it likely these changes will make it into ABS.\n. Since you say this happens with the native action bar on ICS, I can only assume it's the expected behavior. Will re-open if you have a test case that shows this doesn't happen without ABS.\n. Duplicate of #732 (it has better description)\n. > color=\"#A00080FF\" with no android: namespace\n\nLooks like an oversight, open an issue if we forget.\n\nrequires API level X (current min is 7) [232]\n\nWaste of time to \"fix\" these, and imo it just adds extra complexity. Especially in a library like ABS. In some cases it's not even possible. Keeping the source as close to aosp as possible has its benefits as well.\n\nThe required layout_width and layout_height attributes are missing [5]\n\nMost likely not needed in the way they're used. If it causes issues at runtime, open an issue.\n\nEvery Lint error should be fixed.\n\nFailing a lint check isn't an error. You can probably set it up to fail your build, but it isn't really an error. Lint is there in case you forget about recommendations and best practices, but ultimately you as a developer have to decide whether it makes sense to follow it.\n. Suppressing a lint check is worse than ignoring it. If you want to pay attention to them, you should handle it appropriately. But if you just want to suppress them, add a lint.XML that does just that.\n. I don't see how this adds any value.\nABS will by definition fail api level checks, so it's something that's paid\nvery close attention to during development, and not really an issue.\nOther failed lint checks can be caused by buggy framework code, and the\ngeneral consensus here is that we leave them in, unless they can be worked\naround in the native implementation.\nGenerally abs issues wouldn't be any easier to solve if failed lint checks\nwere handled. There's a lot you have to pay attention to when backporting\nAPIs, none of which lint can help with.\nImplementing this isn't just a one-time deal. It has to be maintained. When\nit adds no value to the people who maintain the library, it shouldn't be\nadded.\nOn Nov 29, 2012 12:45 PM, \"Daniele Segato\" notifications@github.com wrote:\n\nI am disagree.\nIf your suppress without checking It IS bad.\nbut if you check and you know it is a false alarm you can safely suppress.\nThe conditions being:\n- you suppress in the smaller section of code possible\n- you comment above explaining why it is safe to suppress\n- you go and olso comment in the section of code that may invalidate\n  your suppress (if applicable)\nthat's important for lint errors, less important for warnings.\nExample: that method or layout is only used in API level X or greater: it\nis safe to suppress an error and it is correct to do so because you\nintended to write that method / layout targeting that API level.\nA conflict where you wrote the suppress comment may actually help catch an\nissue that would be introduced by merging.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/719#issuecomment-10844168.\n. Please add a test case to the known-bugs sample on the dev branch.\n. Scott ;/ Failure to search for similar issues, and wrong branch.\n. Handle it yourself, e.g. by overriding Activity#onCreateView and checking for TextViews.\n. ABS is just an ActionBar backport, it is not the place for general purpose backports of framework classes. Sure, a lot of functionality is backported, but it is only intended for use with the ActionBar. We can not guarantee it acts as its native counterpart for every use-case, since it's simply not the point.\nIf you wish to have a complete PopupMenu backport, create a repo. Have people use it and contribute.\n. Looks like a duplicate of #487. Are you using the latest version?\n. Add a testcase to the known-bugs project on the dev branch\n. \"E/dalvikvm(22529): Could not find class\" is not a bug, and not related to this issue.\n. The ui isn't going to show until onCreate/onResume/etc returns, and your ui has been drawn. Doing less work in the life cycle methods and reducing the complexity of your layout is going to speed this up. I find it hard to believe that ABS is slowing this down significantly, especially on 4.0+.\nAnd yes, doing work in your Applications onCreate is also going to slow this down, tho just on first launch.\n. How does it look on ICS?\n. Add a sample to the known-bugs project in the dev branch\n. Is this the native actionbar? We have no control of that.\n. You'll have to blame Google then.\n. Please add a test case to the known-bugs sample on the dev branch.\n. Are you using ActionBar#getThemedContext() when inflating the searchview?\n\nWe have no control of the \"Done\" button on ICS+, it's a framework bug.\n. Yeah, you have to pass it the themed context.\n. The framework doesn't do this, why should we?\nAlso, the first two attributes are already inherited from Theme.Sherlock.Light.\n. It has to behave and look as its native counterpart (on ICS). If the native themes don't set these attributes, I'm not sure this is the right approach.\n. What changed exactly?\n. Thanks, but this is was changed some time ago on the dev branch.\n. Doesn't sound like an ABS issue.. Try stackoverflow or one of the mailing lists\n. See if you can create a reproducible test case, then add it to the known bugs project. Framework bugs like this are hard to work around without knowing what exactly is causing it.\n. Add a test case to the known bugs project, please. Just posting a \"me too\" and a bunch of random code isn't going to help.\n. Fragment handling is entirely up to the support library, ABS just extend the classes that handle this.\n. That's just dalvik complaining that certain methods, which are referenced in code, do not exist. Unless they are actually called, there is no issue (it'd crash if they were).\n. Maybe it's enough to call installDecor(). But really, only two things can happen. Either setContentView(...) is called, in which case installDecor()/initActionBar() is called during onCreate anyway, or a fragment is added and the view hierarchy is re-ordered, messing it up.\n. Ah, good point. Hm, well we need some other place to hook in then. findViewById?\n. Alright, I'll get this done tomorrow.\nMaybe, it's worth a try at least. Maybe they'll just tell us to override getSupportFragmentManager() (which could also be a possibility).\n. You can quite easily create the dialog themes yourself.\n. Look at the commit, that's exactly how you do it.\n. I don't believe this is possible. Try asking on stackoverflow or the android developers mailing list.\n. Is there an issue with ABS, or are you just wondering why internal ABS classes doesn't work when you using them in your own code?\n. When using the native action bar, ABS simply proxies setContentView to the framework. You should report this on http://b.android.com, or just stop calling setContentView multiple times.\n. ActionBarSherlock mSherlock = ActionBarSherlock.wrap(this);\nSherlockActivity already does this. Your activity is being wrapped twice, leading to two action bars.\n. The native action bar is used on ICS+, so ABS has nothing to do with how it is styled. If the device is broken, you'll have to report it to the manufacturer or possibly http://b.android.com.\n. Please add a test case to the known bugs sample on the dev branch.\n. Soo.. Is there an issue with ABS or are you just asking questions? Stackoverflow and the mailing list is for questions, not github.\n. Try setting windowNoTitle to false in your new theme. If that doesn't work, it's just a limitation on older platforms.\n. There is no default value for windowNoTitle in the sherlock themes, so the\nprevious value is not overridden when calling setTheme (it applies the\nattributes from the new theme to the existing Theme instance). We need to\nprovide defaults for all custom attributes.\nOn Jan 15, 2013 7:18 PM, \"Jake Wharton\" notifications@github.com wrote:\n\nInteresting and odd use-case. Will investigate. Thanks for the detailed\nexplanation.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/779#issuecomment-12281044.\n. That must be another issue, which is out of our control. It's handled entirely by the framework on JB.\n. As long as that piece of code is never actually reached, this causes no issues. It's just the classloader warning that it encountered a class that doesn't exist.\n. Thanks. Please re-submit against the dev branch. :)\n. Getting \"This pull request cannot be automatically merged.\". You most likely need to base your branch on the dev branch as well.\n. Please add a test-case to the known-bugs sample on the dev branch.\n. SherlockPreferenceActivity just attaches an ActionBar to a PreferenceActivity, it has nothing to do with how the preferences are actually handled.\n. This should be fixed by #653. For future reference, please add test cases to the known bugs project in the dev branch and submit a pull request.\n. Please add your test case to the dev branch. Travis is broken, dont worry about that.\n. Search suggestions shows up just fine here.\n. No, suggestions show up fine with the ABS SearchView.\n. I'd imagine it has to do with you having theme attributes that don't exist on 2.3 in values/\n. No, some devices are just broken. It doesn't cause issues on AOSP.\n. Don't put attributes that don't exist on 2.3 in values/\n. It means, if you have attributes like android:actionBarStyle, only have it in your themes on platforms where it actually exists (v11+ in this case, tho it isn't used until 14).\n. The reason we ask for it to be on the dev branch is that it requires no setup on our part to load it up in an idea and start debugging. Zip packages and code snippets really just get overlooked until we some day decide to crunch through some bugs.\n. If it's not applied on ICS+, then this is the expected behavior.\n. SearchView has to behave as its native equivelant. How does the native SearchView behave?\n. We're not going to change the behavior if it currently matches the native searchview.\n. The issue isn't that it doesn't work, the issue is that r11 isn't in maven central yet. If there is any issues with r11 they're very likely to get looked at, but updating is up to you.\n. How SherlockDialogFragment looks and behaves is completely controlled by the support library and the framework.\nAlso, Theme.Sherlock.Light.Dialog no longer exists.\n. Try stackoverflow or the android developers mailing list.\n. The ics-prefixed classes are internal so we don't have to maintain them for use cases other than ABS. If they were public, they'd be much more complete, and take a lot more time to create/maintain.\nYou're free to maintain your own backport of the spinner, but it's not going to be maintained in abs.\n. No. Unnecessary and wrong to simply suppress the checks. Add a lint.xml to the abs project that disables the api checks if you wish to ignore them\n. Please add a test case to the known-bugs sample on the dev branch.\n. ABS matches the official API. Until this is natively supported, it isn't going to be added to ABS.\n. You're only changing the icon of the menuitem, which has nothing to do with how the SearchView looks.\n. The icon is the collapsed action view, the menu items text/icon isn't shown.\n. Please add a test case to the known bugs sample on the dev branch.\n. You forgot to create it against the dev branch.\n. I see no difference in behavior when extending FragmentActivity instead of SherlockFragmentActivity. Updating the support library solves this however.\n. What does this solve that different resources in menu/ and menu-v14/ wouldn't?\n. That PR only works for 1 level of nested fragments tho. Our users might have more, you never know.\n. Protip: Make your commits pass checkstyle checks\n. Whoops.\n. Make sure any changes your make matches the behavior of the native implementation.\n. Until either the support library is in maven central or android-maven-plugin picks up the repositories in the SDK automatically, nothing's going to happen on this issue.\n. Duplicate of #719\n. Duplicate of #832\n. We can't change the behavior of the native action bar, you're going to have to work around the issue (and report it on http://b.android.com if it's actually a bug).\n. Yes, travis is broken.\n. I don't think that second commit (the one named \"merged\") should be part of the pull request.\n. Make sure the your commits pass all checkstyle checks.\n. Also duplicate of #732\n. Please add a sample to the known bugs project on the dev branch\n. The one not prefixed by android.\n. You've only shown your style, not where you're using it.\nOn Mar 4, 2013 3:04 PM, \"Jack\" notifications@github.com wrote:\nI did that, didn't I?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/842#issuecomment-14381970\n.\n. Internal classes are not meant for use outside the library. If you wish to add additional functionality to them, you'll have to maintain your own fork.\n. You don't set titleTextStyle to youjia_actionbar_title.\n. Removed any notion of ActionBarSherlock from your sample, still didn't work. Not ABS related.\n. Try stackoverflow or the mailing list for api questions. Github is for bugs.\n. We get these a lot. Duplicate of https://github.com/JakeWharton/ActionBarSherlock/issues/search?q=update+support\n. It should behave as the native action bar. If it doesn't, feel free to report the issue.\n. Hardly any libraries have an application tag, not even google's own (e.g. support-v7). Sounds more like an issue that should be reported to the tools team.\nEither way, pull requests go on the dev branch.\n. The samples have an xml folder, and they work fine. This doesn't sound ABS related.\n. Duplicate of #674\n. com.actionbarsherlock. internal\nInternal classes are not intended for use outside of ABS.\n. Github is for issues, try stackoverflow or mailing list.\n. These attributes are not publicly available.\n. Please ensure the code passes all checkstyle checks.\n. Action bar API questions should go on stackoverflow or the android developers mailing list.\n. addTab(tab, mTabs.isEmpty()); <- it calls it right there\n. If there are any inconsistencies between the native ActionBar behavior and ABS, feel free to file an issue.\n. All .Dialog themes are going to be removed in the next version of ABS, as per the release notes. You shouldn't use them.\n. Add a lint.xml to the abs project that disables the api checks if you wish to ignore them.\n. Please re-submit the pull request against the dev branch.\n. Duplicate of #772.\n. This is outside the scope of ABS. Dialogs don't have an action bar.\n. You really should give your menu items a title, even if it's not shown in the action bar. It'll show up when the item is long clicked.\n. Yes, that's the solution. It crashes when it tries to call toString() on mTitle.\n. ABS provides its own menu callbacks, all you have to do is change your imports. Look at http://abs.io/usage or the samples.\nThe native callbacks should not be overridden when using ABS. For starters, menu items added to the native menu will not show up in the compat action bar. Marking these methods final ensures this is caught at compile time\n. For questions about the action bar API, please see stackoverflow or the android developers mailing list.\n. I don't see how that line means shareTargetSelectedListener can't be nulled. It's nulled in setOnShareTargetSelectedListener.\n. mOnShareTargetSelectedListener is nulled when you call setOnShareTargetSelectedListener(null)\n. I don't know, I haven't used ShareActionProvider. It works just like the one provided by the framework, so you should ask on stackoverflow or the android developers mailing list.\n. I get an IndexOutOfBoundsException when selecting an invalid tab position (>= tab count), with both the compat and native implementation. I'm not sure what this really solves.\n. We can't really fix this in the compat implementation then. You should find a way to handle it in your app.\n. You shouldn't use internal ABS classes. The NineOldAndroids included in ABS is a subset of the library that might have been changed to work for specific use-cases.\n. Duplicate #943 \n. We don't set attributes on the DarkActionBar theme we don't use in ABS.\n. I mean, ABS does not define attributes in the DarkActionBar theme on api14+ that it doesn't use itself. The library isn't meant to help you theme your app.\n. Because it uses the same base theme as the <API14 themes. DarkActionBar does not.\n. Entirely expected. As I said, unless ABS uses the attribute we don't set them.\n. The ActionBar does not currently expose any API to change the up button in java. Look at e.g. the support library drawer for how it changes the icon.\n. Wrong project\n. Yes. ABS doesn't know about the child views of your RelativeLayout.\n. They're not prefixed so the only difference between the native and ABS styles is the android: prefix. ABS defines all attributes so it's not a guessing game whether it should be prefixed or not.\nThere's no reason you couldn't just use android:textAppearanceSmall in your own apps, or the ABS-defined textAppearanceSmall.\nBesides, it's too late in the game to change this anyway imo. And if it should be done, it should be done consistently.\nAlso, please don't update the support library.\n. Both libraries are at their end of life. Please use the mailing list for discussing like this.\n. Looks like they just changed it to be an ImageView below the action bar rather than a foreground drawable on the content view (as this would probably be displayed behind the action bar).\nAnyway, when behavior changes it's up to you to handle it. Since ABS just delegates to the native implementation, this is not something we can change.\n. Haha, good point. Nicely spotted\n. Googlers claim they've fixed it internally.\n. The ABS compat implementation follows the behavior of ICS. I don't see this change when checking out ICS, does it work there?\n. If ABS behaves the same as ICS then we can't change it. You'll have to come up with another approach in your app, or drop support for <api16 :p\n. Does it match the behavior on ICS?\n. Pretty sure this is a framework bug on ICS. We can't fix this in ABS.\n. Because the native action bar is used on ICS. You have to work around this in your app anyway, so for easier diacoverability we decided to make it consistent with ICS - including bugs.\n. Please only use the issue tracker for actual issues.\n. We check for emptiness because https://github.com/android/platform_frameworks_base/blob/master/core/java/android/widget/SearchView.java#L518\n. And https://github.com/android/platform_frameworks_base/blob/master/core/java/android/widget/SearchView.java#L1160\n. ABS mirrors the native behavior. If the framework does not offer a way to change this, then neither does ABS.\nIf native classes does not fit your use-case, you should look writing your own.\n. ABS is compiled with API16 (but project.properties isn't used with maven anyway), the support library can't be updated since it's not in central.\nThere's no reason for the rest of the changes, they do nothing but make the codebase more complex.\n. There's no support for using internal classes outside of ABS.\n. The styles you mentioned in the previous issue are not available through the android API. ABS can't change that.\nIf using what's available has any side effects, you have to handle that yourself - just like you would with the native action bar.\n. You have a NullPointerException in your code:\n\n10-12 23:40:52.355: E/AndroidRuntime(1528): Caused by: java.lang.NullPointerException\n10-12 23:40:52.355: E/AndroidRuntime(1528): at com.id11313982.freejokesapp.activities.MainActivity.networkStatusMessage(MainActivity.java:202)\n. No, they are not caused by the verify errors. That's just dalvik evicting calls to methods that don't exist. They aren't called unless they exist.\nThe error is in your code.\n. I don't know, try asking on stackoverflow or some other appropriate forum.\n. If this happens on 4.0+ then it's an issue with your code as ABS just proxies to the native action bar on those platforms. Try stackoverflow.\n. It's a backport of the native action bar, so the javadocs are available here: https://developer.android.com/reference/android/app/ActionBar.html\nUsage instructions are here: http://actionbarsherlock.com/usage.html\n. You have to call setTheme before super.onCreate on older devices. If some part of the theme doesn't work, then it's a framework limitation. Nothing we can fix.\n. The expected behavior pre-kitkat is that the overflow item doesn't show.\n. You are not supposed to customize any resources. You can use any resources not pre-fixed with abs__, or create your own and use those.\n. Noone told you to customize ABS resources. Resources not pre-fixed with abs__ are part of the public API - just like they are part of the public API in Android. Either use them or don't.\n. You're not supposed to override any resources.\n. Noone said they were safe to customize - just that they are safe to consume.\n. Blindly adding annotations to pass lint checks is just wrong, and defeats the entire purpose of lint. You might as well just not run it if this is your approach. A lint.xml that simply ignores the api level check would be more correct.\nAlso, that is not what @TargetApi is for. The proper way of using @TargetApi is to have one method that calls through to newer APIs annotated with an appropriate API level, and a second method exposed that only uses the new method when the API level allows for it. You can split this up further into static classes, if you really want to separate your compatibility code. You do not annotate an entire class just because it overrides/calls a single method that was introduced in a later API level.\nIn this case, just annotating e.g. invalidateOptionsMenu() would also be wrong. The method works perfectly fine on API level 7+. It's basically a design choice to allow the use of invalidateOptionsMenu() on older platforms, since it requires less changes when migrating to/from ABS (pretty much everything exposed by ABS has this in mind).\ntl;dr if you want to go through ABS and annotate it with @TargetApi, do it properly. Don't just blindly annotate classes to pass the tests. If you just want to shut it up, use lint.xml.\n. You can suppress the NewApi check for the entire library with lint.xml. It would also be more correct than your commit, since most of the methods you annotated works perfectly fine on older platforms. They \"just happen to\" (read: on purpose) have the same name as new APIs.\n. xml\n<issue id=\"NewApi\" severity=\"ignore\" />\nto ignore it in the entire library, not just single classes.\n. Okay, some github formatting messed that up it seems.. Can't be bothered to try and fix it from my phone, I'll pastebin something tomorrow if you haven't figured it out yet.\n. You put the lint.xml that ignores NewApi completely in the ABS library\nfolder, not your own project.\nOn Dec 12, 2012 12:41 AM, \"Jan Berkel\" notifications@github.com wrote:\n\nIn library/src/com/actionbarsherlock/app/SherlockActivity.java:\n\n@@ -18,6 +19,7 @@\n import com.actionbarsherlock.view.MenuInflater;\n import com.actionbarsherlock.view.MenuItem;\n+@TargetApi(11)\n\nbtw, what you posted just ignores everything. i still want my own code to\nbe flagged as warnings.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/pull/736/files#r2386779.\n. \n",
    "mwillbanks": "Is this only in the master branch?  Having an issue with the application running on devices running Android 3.2 and Android 4.0 at this point.  For whatever reason the onCreate method is not being called properly when you have an abstract fragment that you extend.\n. ",
    "UweTrottmann": "Just a heads up, as I stumbled over it already: http://developer.android.com/reference/android/app/ActionBar.html#setHomeButtonEnabled(boolean)\nTLDR: The home button has to be explicitly enabled to react to home/up events on API level 14+.\n. Also happens in a 2.1 emulator. As the layouts in that line of code are properly defined it seems like getLayoutManager() is returning null for whatever reason...\nOr the new non-final resource identifiers are to blame.\n. I guess nelenkov did run it on actual devices, I did compile myself (tested with the SeriesGuide source code).\nedit: the demo apk works on my personal device (running a 2.3.7 ROM), it only crashes on config changes.\n. Stumbled over this by accident, too. Trackball really still works. ABS 3.4.2\nIn addition it seems to work in the Eclair emulator, but not in the Gingerbread one if that may help.\n. Confirmed for 2.3.\n. May I get punished. This was caused (at least on my side) by not using the correct layout as demonstrated in your sample.\nYou have to use R.layout.abs__simple_spinner_item for the adapter.\nHowever I did not test it with 4.x, yet (I use the 3.x version on my dev trunk). My original report above was for a 4.0 beta though.\n. I hope it's a problem on my end, but I still get the same behavior (Galaxy Nexus on 4.0.1, Galaxy Tab on 3.1). I debugged with an WVGA800 emulator (4.0.3) and this value here always returns true no matter if it's portrait or landscape. No clue why this doesn't load from the correct resource.\n. I'm feeling for you :-) Glad to see you're still a human being regarding\nthe mawesomeness (learned from a friend: short for MEGAawesome) of the 4.0\nrelease.\nOn Jan 4, 2012 4:48 AM, \"Jake Wharton\" \nreply@reply.github.com\nwrote:\n\nI forgot to prefix the booleans with abs__.... facepalm\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/154#issuecomment-3350353\n. I support this, too. Considering a(nother) potential new release of Google TV this year, this might save us all some headaches.\n. Got up early, is it too late yet? I'm Central European Time (Germany). My clock says it's close to eleven on PST.\n. Awesome :D I just saw the old screenshots and had to do something about that... The mini-market idea sounds great.\nMaybe every app could also add a 'tag' in their description on 'Google Play' so you could search for ActionBarSherlock apps.\n. \n",
    "tasomaniac": "I have downloaded your 4.0wip but i is not working. I have users that have Android 4.0, they are all complaining. Pleaseeee\nWhen I tried to add as a library, It gives errors about Animator classes. Furthermore, there are no support packages available in the zip\n. oh ok. I just need to compile with Android 3.2\nThank you very much. I just donated you 10 bucks for your great effort.\nOn Dec 15, 2011 2:11 PM, \"Jake Wharton\" \nreply@reply.github.com\nwrote:\n\nAn app written using ActionBarSherlock v3.x will work perfectly fine on\nAndroid 4.0 since it uses the native action bar on Android 3.0+.\nThere is no reason that you are required to compile against Android 4.0\nunless you are specifically using APIs from Ice Cream Sandwich. If you\nabsolutely must compile against Android 4.0 all you should have to do is\nadd a few default implementations to the MenuItemImpl and\nMenuItemWrapper classes for the new menu interface methods.\nThe 4.0-wip branch is very much a work in progress and represents a\nsignificant change in the library. The core is no longer dependent on the\ncompatibility classes. A plugin will be provided to provide an action\nbar-enhanced version of FragmentActivity.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/23#issuecomment-3160220\n. I had the same problem which @kingori faced. I was not using ABS at all. I did the same thing and it worked.\n\nIf at the first time, none of the menuitems are visible in the actionbar, you cannot make them visible afterwards programatically. Thats the problem. And it is not just the problem of ABS. Do you know is there a bug report already filed on Android?\n. Thank you. I did search the same issue before posting but o couldn't find\nit.\nOn Jul 4, 2012 8:52 PM, \"xDragonZ\" \nreply@reply.github.com\nwrote:\n\nPlease refer to this\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/537#issuecomment-6741966\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/541#issuecomment-6765024\n. \n",
    "rtyley": "Hey @JakeWharton I noticed that in ABS at the moment there some discrepancies with the way a crowded actionbar will be handled, as compared to ICS:\n1. In ICS, overflow items will go into the '3 dot' menu, but in ABS on pre-honeycomb devices, if you add too many actionbar items they continue presenting in the actionbar, and end up overlapping the home icon on the left-hand-side.\n2. In ICS the 'text' part of the menu item won't be displayed if room is tight, but in ABS it seems the text is always presented in the actionbar, even if the menu item attribute is simply android:showAsAction=\"ifRoom\", ie without even the withText modifier present.\n....do you think those differences will be removed with ABS 4.0?\n. Ah, looks like the dev branch currently (as of fc1ffa70) has a compilation failure on IcsLinearLayout.java...\n$ mvn clean install\n...\n[ERROR] /Users/roberto/development/ActionBarSherlock/library/src/com/actionbarsherlock/internal/widget/IcsLinearLayout.java:[106,8] illegal start of expression\n. Having another go on the dev branch as of f435db06 - looks like the behaviour on an overcrowded actionbar is better, excess items now go into the standard gingerbread menu, rather than swamp the actionbar.\nApologies for being greedy, but do you anticipate being able to support the ICS-style automatic 3-dot-button overflow menu in ABS, in preference to the standard gingerbread menu?\n. That makes sense... The problem with the physical menu button is that there's no visual cue to indicate that it's actually worth pressing - the user doesn't know that there are any further options available to explore.\nThe ICS behaviour - displaying the overflow button - is definitely awesomer, I'd much rather enable it for all devices regardless of whether they have the hardware menu key.\n. ",
    "iNoles": "ah comma on end of the equals = Gravity.FILL, name = \"FILL\") was causing a problem :)\n. I have a some idea of this. \nPreferenceFragment is just abstract class that extends Fragment that depend on PreferenceActivity.\n. When I look into the source code, when loader is not start then It will throw that exception. \n. I made a shell file for checkstyle in my own project. \njava -jar checkstyle/checkstyle-5.4-all.jar -c checkstyle/checkstyle_checks.xml -r $1/src\n. When I was look in http://developer.android.com/guide/topics/ui/themes.html#DefiningStyles\nIt should be parent=\"@style/Theme.Sherlock.Light\"\n. SDK Revision 13 = OK\nSDK Revision 14 = Problem like this one. \n. You have to do \nandroid update lib-project \\\n--target  \\\n--path path/to/your/project\ninside of library directory\n. Real problem is java.lang.ClassNotFoundException: com.Obenkyo.Main\nIt is looking for Main under com.Obenkyo packages.\n. I always wondering, why it need ListView to be added to that view?\n. Oh okay, looks like I need to find another way of doing it. \ngetLoaderManager and ensureSupportActionBarAttached() right?\n. Okay, I put back old internal callback method.\n. adb logcat or ddms will show you a log for it.\n. I fixed it by deleting gen and bin folder. :/\n. in Android, there is like Window.FEATURE_CUSTOM_TITLE that allowed developers to create custom title bar.\n. in ActionBarSherlock, on >= 3.0, it use system action bar. It is very likely for ICS.\n. While I am looking in the docs for this, it show the progress bar in the title. Did we use \"NoTitle\" as theme?\n. I set project target to 15 in project.properties. In AndroidMainfest.xml, I have < uses-sdk android:minSdkVersion=\"8\" android:targetSdkVersion=\"15\" / >[/code] Maybe Android SDK has \"textallCaps\" is under a different theme?\n. I am compiling with Apache's ant build system.\n. In other hand, it doesn't looks like a problem anymore. \n. GREAT SCOTT!\n. Did you look for returnedHeight += child.getMeasuredHeight(); \n. According to FragmentActivity.java, getSupportFragmentManager() is only return FragmentManagerImpl ;)\n. in 4.0.3, that is system bar. You may have set to actionbar disabled in ICS. I would like you to check your styles.xml\n. I can help you to get it to work under apache ant build. \nxml\n<target name=\"-pre-compile\">\n    <unzip src=\"android-support-v4.jar\" dest=\"${out.classes.absolute.dir}\">\n        <patternset>\n            <exclude name=\"**/FragmentActivity*,**/FragmentManager*\" />\n        </patternset>\n    </unzip>\n</target>\nThis goes in build.xml\n. Heh. it would be like \nxml\n<exclude name=\"**/FragmentActivity*,**/FragmentManager*, **/Fragment.*,**/Fragment$*\" />\n?\n. While I am looking for this type of provider, you already have some implementation of it. \nShareActionProvider is just extending ActionProvider with Intent.\n. according to https://developer.android.com/reference/java/util/ArrayDeque.html, API Level 9\n. excuse me to live in the edge. :) at least, I know what is works or not. :P\n. There is View#onConfigurationChanged will be called when you are doing screen rotations. \n. it could be any layout that you have under ListView may causes overlap.\n. if you use just values-large, would it be work with Nook Color, Kindle Fire and Galaxy Tab?\n. But, I see values-large-mdpi and values-large-hdpi have 56 dpi or I miss something here. \n. it looks like there is no value for android:showAsAction then up to crash hard.\nI am wondering this could work\njava\nif (a.hasValue(R.styleable.SherlockMenuItem_android_showAsAction)) {\n    itemShowAsAction = a.getInt(R.styleable.SherlockMenuItem_android_showAsAction, -1);\n} else {\n   itemShowAsAction = -1;\n}\n. Sleepybear, on OP post for menu XML, there is no android:showsAction = crash. if android:showsAction is exists, no crash.\nAccording to TypedArray.hasValue, it supposed to determines whether there is an attribute at index. It seems that typedarray is looking for index that is not existed in 2.1.\n. I am seeing new SimpleSpinnerArrayAdapter(this, mFragment.getBusLine()), this) and SimpleSpinnerArrayAdapter(Context ctx, BusLine busLine), did you forget to remove extra this as arguments?\n. Do you use Eclipse Memory Analyzer?\nunder Listview, Android always recycling any child view in every time you are scrolling.\n. I think it is like \njava\ngetSupportActionBar().setBackgroundDrawable(new IcsColorDrawable(Color.RED));\nor \njava\ngetSupportActionBar().setStackedBackgroundDrawable(new IcsColorDrawable(Color.RED));\n. I believe ActionBarSherlockv4 minimum is 2.1\n. greater than 3.0, It is deprecated in the PreferenceActivity so they want to use it in PreferenceFragment\nless than 3.0, it is okay to use it in the SherlockPreferenceActivity.\n. Caused by: android.content.res.Resources$NotFoundException: Resource is not a Drawable (color or path): TypedValue{t=0x2/d=0x7f010038 a=-1}\ndid you do full clean?\n. \"Make sure you using both SherlockFragmentActivity and SherlockFragment.\" It is very picky on which class you uses.\n. According to http://en.wikipedia.org/wiki/Android_version_history#Gingerbread_2.3.x, 2.3.7 is for GWallet Support in Nexus S 4G\n@yukuku, why return true is after { } for R.id.menuAbout?\n. I really think Splash screen is wrong for Android.\nIf you really want to do Splash screen then you should do Splash > MainActivity instead Main > Splash > back to Main\n. Real error is java.lang.UnsupportedOperationException: Can't convert to dimension: type=0x1\nIt doesn't tell much about the problem. Are you doing dimens.xml?\n. While I am looking in the View.class, I noticed something like -1 in the 2nd parameter of getDimensionPixelSize\n. @willlunniss just Android prefix in 3.0+\n. @RacZo Caused by: android.content.res.Resources$NotFoundException: Resource ID #0x7f02015c\nI think you should do full clean on like bin and gen.\n. Caused by: java.lang.NullPointerException at com.actionbarsherlock.internal.widget.ActionBarView$HomeView.setUp(ActionBarView.java:1302)\nI wondering why that line is NULL\n. @RacZo some times, I wish I see your source code so I may pinpoint problems.\n. @pratikbutani You have to split your custom theme's styes.xml into two files. On styles.xml, anything is related for action bar and action mode with android prefix, it need to be on values-v14.\n. It is hard to find problem without your app source code.\n. I am curious about mFragments.put(position, fragment);\n. in http://developer.android.com/reference/android/support/v4/app/FragmentStatePagerAdapter.html, This class also handles saving and restoring of fragment's state. It is going to be hard to pinpoint problems without full code for FragmentPagerAdapter or FragmentStatePagerAdapter.\n. greater than or equal to 4.0, use system action bar\n< 4.0, use compatibility\n. I think you have 1.5. You could set 1.6\n. did you call startActionMode function?\n. @androidmoney did you call startActionMode function?\n. oh sorry, I wasn't sure you did or not.\n. You need to Build it under API 14 or 15. It is not a bug.\n. i wonder this line would fix the problem\n< style name=\"ActionBar\" parent=\"@style/Widget.Sherlock.ActionBar\" >\n. @Juggeli Did you turn on USB Debugging options? If you type adb devices, it should have your phone device here.\n. Did you tried with http://developer.sonymobile.com/wportal/devworld/downloads/download/xperiapxperiauxperiasoladrivers\n. It should be\n``` java\n@Override\npublic boolean onCreateOptionsMenu(Menu menu) {\n    // TODO Auto-generated method stub\n    getSupportMenuInflater().inflate(R.menu.menuhome, menu);\n    MenuItem menuItem = menu.findItem(R.id.menu_share);\nShareActionProvider mShareActionProvider =  (ShareActionProvider) menuItem.getActionProvider();  //line 387\n\nIntent shareIntent = new Intent(Intent.ACTION_SEND);\nshareIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET);\nshareIntent.setType(\"text/plain\");\n\nshareIntent.putExtra(Intent.EXTRA_TEXT, getString(R.string.sharesubject));\nshareIntent.putExtra(Intent.EXTRA_SUBJECT,getString(R.string.sharetext));\n\nmShareActionProvider.setShareIntent(shareIntent);\n\n}\n```\nyour menu file didn't have title and icon too.\n. I noticed com.actionbarsherlock.internal.view.menu.MenuItemMule.getItemId called after android.app.Activity.onMenuItemSelected, this will explained why there is errors. I have not seen any line for Waston.\n. @danigarciaalva is it same stack trace? Which ABS version?\n. I am curious about Caused by: java.lang.NoSuchMethodException: onNewSource\n. NineFrameLayout has getAlpha() as float, you can check into that.\n. I noticed Android stock browser is 24-bit in Gingerbread while other apps are under 16-bit.\nRGB_565 seems to be default for android emulator.\n. Actually, your problem is different because W/MenuInflater(385): Ignoring attribute 'actionProviderClass'. Action view already specified.\n. Look in R.java, you may find it there.\n. Why not to split ABS and android into different values folder?\nlike android:actionBarStyle to values-v14\n. Real problem was  Observer com.actionbarsherlock.widget.ActivityChooserView$1@405f4658 was not registered.\nThat line called from android.database.Observable.unregisterObserver\n. This is very expected.\n. Can you posted source code for your options menu and selected here? It would be helpful if you do.\n. According to source code for that file, final boolean result = callbackOptionsItemSelected(mMenu.findItem(item)) is Null\nlooks like something skipped dispatchCreateOptionsMenu\n. android.view.WindowManager$BadTokenException: Unable to add window -- token null is not valid; is your activity running?\nDid you declare it in AndroidMainfest.xml?\n. \"Wrong state class, expecting View State but received class android.widget.ProgressBar$SavedState instead. This usually happens when two views of different type have the same id in the same hierarchy. This view's id is id/menu_refresh. Make sure other views do not use the same id.\" Hmm\n. @felipearimateia  java.lang.IllegalStateException: A factory has already been set on this LayoutInflater\nIt seems you can't set it more than once.\n. on\n// Restore action view state before we prepare. This gives apps\n        // an opportunity to override frozen/restored state in onPrepare.\n        if (mMenuFrozenActionViewState != null) {\n            mMenu.restoreActionViewStates(mMenuFrozenActionViewState);\n            mMenuFrozenActionViewState = null;\n        }\nWhen mMenu is NULL, CRASH!!! \nI noticed that stopDispatchingItemsChanged() can set mMenu to null.\n. @jcampbell05 android.content.res.Resources$NotFoundException: Resource is not a ColorStateList (color or path): TypedValue{t=0x2/d=0x7f01002b a=-1}\n. Looks like http://developer.android.com/reference/android/view/MotionEvent.html#ACTION_CANCEL got called while ABS is not aware of it.\n. it looks like mMenu or item is null\n. Which Activity subclass for this?\n. @crossle I think you should use com.actionbarsherlock.app.SherlockFragmentActivity\nIf you move ActionBar code after contentView, it may work in 2.3\n. It looks like in some cases getParent () that wouldn't be LinearLayout. You could check to see that function is really from Linearlayout\n. I think Jake is waiting for android support r11 in maven central.\n. It looks like same stack trace from #487.\n@TonyAlvarez you hit a framework bugs but not ABS itself. The only way to fix this is copy code from popupwindow in the Android 4.0 version.\n. @SimonVT according to http://grepcode.com/file/repository.grepcode.com/java/ext/com.google.android/android/2.3.4_r1/android/widget/PopupWindow.java?av=f#127,  View anchor = mAnchor.get(); is NULL\n. I think you supposed to call it on SherlockFragmentActivity but not in any sherlockfragments\n. I am sure of Google would tell you to override package-scoped FragmentManagerImpl for moveToState methods or Fragment class for package-scoped performCreate methods.\n. I uses this for my applications, http://code.google.com/p/iosched/source/browse/android/src/com/google/android/apps/iosched/util/LogUtils.java\n. the real error message was java.lang.ClassCastException: java.lang.Float cannot be cast to java.lang.String\n. So far, Google is not releasing the latest version of the support library to the maven central.\n. @cliu903 you already have item.setIcon(android.R.drawable.ic_menu_search); Which is a big No-no because any OEM can change the search icon. I don't see the sherlock theme can change the search icon.\n. Do You use any Custom Theme?\n. Did you called addOnMenuVisibilityListener methods with OnMenuVisibilityListener parameters? There is also removeOnMenuVisibilityListener too\n. the application tag is required for < activity >\n. Did you have  setHasOptionsMenu(true) on any Fragment.OnActivityCreated methods?\n. http://developer.android.com/reference/android/database/Observable.html#registerObserver%28T%29 If observed registered more than once, it will throws IllegalStateException. There is unregisterObserver for it.\n. Update your ABS!!! MenuMule is nolonger needed.\n. http://search.maven.org/#artifactdetails|com.actionbarsherlock|library|4.2.0|pom 4.2.0\n. How many tabs you created? like 5 or 6?\n. Not ABS bug.  android.util.AndroidRuntimeException: Calling startActivity() from outside of an Activity context requires the FLAG_ACTIVITY_NEW_TASK flag. Is this really what you want?\n. You don't need maven plugin.\nyou can do compile 'com.actionbarsherlock:library:4.2.0'\n. @JakeWharton It will download jar file from the maven central and uses that jar file. Yeah.\n. Working as Designed. You only uses com.actionbarsherlock.view.* import \n. Why you have this.setHasOptionsMenu(true); in onCreateView? It should be onActivityCreated\n. in the monitor window for logcat, you can set filter such as app: and tag:. You have to set own log prefix in your applications, so you can hide abs logging code.\n. Did you look in https://plus.google.com/+AndroidDevelopers/posts/4Yhpn6p9icf ? com.android.support:support-v4:13.0.0\n. Is there is any kind of policy that prevent Google to push it to the maven central?\n. @schmidp Did you installed Android Support Repo from the SDK Manager?\n. By looking to the stack trace, it looks like you are trying to select a new Tab under View click?\n. ",
    "zumpar": "Hi, \ncould you post some example code that uses submenus? I'm unable to create them programmatically or through a xml menu resource.\nedit: I forgot to mention I'm trying to create them on a phone. Is this possible?\nThanks!\nPaul\n. Thank you!\nOn a tablet, this works great, but I'm unable to get it working on pre-3.0 devices, so I'm guessing it's just for tablets.\n. ",
    "segundoacosta": "Hola, como puedo hacer que al hacer touch en un item se despliegue una lista ??\n. Como se puede hacer el siguiente men\u00fa por c\u00f3digo sin usar un layout.xml.\nTranslate:\nCan this be done straight through Java or must I use layout.xml?\n\n\n```\n\n\n\n\n\n\n```\n\n\n\n. ",
    "Esteth": "Perhaps it was an issue specific to my particular configuration, but when I tried to add ABS as a library project, to an existing app, I needed to change all of my styles to not declare IDs, but to reference IDs defined in ids.xml.\nThis is likely an issue related to my particular app, and me simply having an issue that didn't come to light until using ABS exposed it, so this is a non-issue, I expect.\n. ",
    "ChrisSmith": "What is wrong with using the Java6 compiler? The @Override annotation is allowed on interfaces in 6.\n. Relying on menu and menu-v11 is not enough to get the desired results, you would also have to include qualifiers for port and land, which is far to much duplication in my option.  Doing this in code at inflation is also too much because you have the same checks in every file, not very DRY. \nI understand not wanting to hard code the limit, because sometimes it doesn't apply and the user may want two items instead of one.  So instead of a hard coded limit, what if that limit was exposed via a setter method? Something like setMaxActionItemsPort(int max) and setMaxActionItemsLand(int max). At least this way there is some flexibility and it can be used regardless of navigation mode.\n. Sure, I hadn't posted it because its a hack and I'm not really happy with it.\nAt the end of setCurrentItemInternal inside ViewPager, I just iterate over the fragments and disable their options menu.\nfor(ItemInfo info : mItems){\n            if(info.object instanceof Fragment){\n                Fragment f = ((Fragment)info.object);\n                f.setHasOptionsMenu(info.position==item);\n            }\n        }\nIt would be better if this could be handled by the OnPageChangeListener but the ArrayList<ItemInfo> mItems is private, and the ItemInfo class is too.\n. I think I ended up just manually setting it for the first one (but like I said this is a hack).  I've got a better implementation now that also address Issue 56 that I'll post up soon \n. That's actually pretty close to what I did.\nI modified the OnPageChangeListener interface to include two more methods, and I adjusted the method I posted earlier\n```\npublic void onPageDeselected(Object obj);\npublic void onPageSelected(Object obj);\npublic void updateSelectedPage(int item){\n        if(mOnPageChangeListener==null) return;\n    for(ItemInfo info : mItems){\n        if(info.position==item){\n            mOnPageChangeListener.onPageSelected(info.object);\n        }else{\n            mOnPageChangeListener.onPageDeselected(info.object);\n        }\n    }\n}\n\n```\nThen in my base Fragment class \n```\n    private boolean hasOptions = false;\n    private boolean isHidden = false;\npublic boolean isFragmentHidden(){\n    return isHidden;\n}\n\n\n@Override\npublic void setHasOptionsMenu(boolean hasOptions){\n    this.hasOptions = hasOptions;\n    super.setHasOptionsMenu(hasOptions);\n}\n\n@Override\npublic void onFragmentShown() {\n    isHidden = false;\n    if(hasOptions) super.setHasOptionsMenu(true);\n}\n\n\n@Override\npublic void onFragmentHidden() {\n    isHidden = true;\n    super.setHasOptionsMenu(false); \n}\n\n```\nSo the OnPageChangeListener is responsible for calling the two new methods as needed\n```\n        @Override\n    public void onPageDeselected(Object obj) {\n        ((MyFragment) obj).onFragmentHidden();\n    }\n@Override\npublic void onPageSelected(Object obj) {\n    ((MyFragment) obj).onFragmentShown();\n}\n\n```\nThis applies to #56 because inside public boolean onContextItemSelected(MenuItem item) we can first make a call to isFragmentHidden  and return false, allowing other fragments to continue processing the context item.\n. The menu items appear to be working correctly with your implementation.  \nHowever I feel like modifying the internals of FragmentManager has more consequences than modifying OnPageChangeListener, ie completely different behavior on the 3.0 SDK and the ACL. That said, I'd like to see Google acknowledge this issue and let us know if they are going to address this or not. Besides anyone using ABS will likely stick with it for a substancial period of time just for the ActionBar pre-3.0 support. \n. That seems fine to me. Because of where I had placed the call to notify the listener ( inside setCurrentItemInternal) the methods were only called once and not repeatedly like  populate() but it doesn't get called initially (as blork mentioned).  The extra information will be useful to someone I'm sure.\n. Nice to see the team taking a look at this.\n. Basic modification to the FragmentPagerSupport demo.\nScrolling through the pages and selecting the context menu items you'll see more than one fragment receive the event.\nOne possible solution is have the fragment check the current page and then return false if its not the currently visible, but ideally the FragmentManager could handle this.\nUpdate:\nThis appears to be an issue not with ViewPager but with how FragmentActivity handles context menus, each Fragment receives a notification if its visible, regardless if it 'owns' the menu.  I haven't found it documented anywhere but I'm 90% sure this is the expected behavior when using Fragments with ContextMenus.  So I don't think this is a bug, its just annoying.\n```\n        @Override\n        public void onActivityCreated(Bundle savedInstanceState) {\n            super.onActivityCreated(savedInstanceState);\n            setListAdapter(new ArrayAdapter(getActivity(),\n                    android.R.layout.simple_list_item_1, Cheeses.sCheeseStrings));\n        Log.d(TAG,this.toString()+\" - registerForContextMenu\");\n        registerForContextMenu(getListView());\n    }\n\n    @Override\n    public void onCreateContextMenu(ContextMenu menu, View v, ContextMenuInfo menuInfo){    \n        super.onCreateContextMenu(menu, v, menuInfo);\n\n        Log.d(TAG,this.toString()+\" - onCreateContextMenu\");\n\n        menu.add(Menu.NONE, 1, Menu.NONE, \"Context MenuItem\");\n    }\n\n    @Override\n    public boolean onContextItemSelected(MenuItem item) {\n        Log.d(TAG,this.toString()+\" - onContextItemSelected\");\n\n        return super.onContextItemSelected(item);\n    }\n\n``\n. Found one small bug insideFragmentPagerAdapter, whendestroyItemis called you unconditionally setmViewPagerParticipant = falsebut ininstantiateItemit is conditional.  Issues arrise when the item is thenattached instead ofadded becausemViewPagerParticipant` is still false, causing the MenuItems not to work properly.\nFix:\nif (fragment != null) {\n            fragment.mViewPagerParticipant = true;\n            if (DEBUG) Log.v(TAG, \"Attaching item #\" + position + \": f=\" + fragment);\n            mCurTransaction.attach(fragment);\n        }\n. @JakeWharton I'm not really sure how to approach this right now since Diane has said they are going to work on a fix (although I feel it will be similar to what you've already implemented).\nToggling mExposesMenu should work for all cases that I can think of. What we are trying to accomplish is essentially hiding the Fragment despite it being \"visible\" onscreen.  \nFor other reasons I've still added two methods to OnPageChangeListener that enable me to have more control over when the Fragments are shown and hidden. This is useful because the current Fragment lifecycle doesn't work well with ViewPager\n. I've been stepping through the code for the last couple hours and am getting closer to figuring out what is happening.\nCurrently in ActionBarSherlock.dispatchInvalidateOptionsMenu the method returns early if (!dispatchPrepareOptionsMenu()) which is related to why the menu items are disappearing. Sending an additional call to invalidateOptionsMenu from the Activity will cause the action bar to be refilled.  Checking the logs it appears when the menus are working normally they are invalidated one extra time compared to when they are misbehaving.  If we stop the method from returning early they get an extra invalidate and work normally.\nI have no idea if this is an appropriate fix (going with no), but its a start.\nold \n\nif (!dispatchPrepareOptionsMenu()) {\n       if (mActionBar != null) {\n           mActionBar.setMenu(null, mMenuPresenterCallback);\n       }\n       mMenu.startDispatchingItemsChanged();\n       return;\n   }\n\nnew\n\nif (!dispatchPrepareOptionsMenu()) {\n      if (mActionBar != null) {\n           mActionBar.setMenu(null, mMenuPresenterCallback);\n       }\n       mMenu.startDispatchingItemsChanged();\n   }\n\nThe other places that are potential issues are FragmentActivity.dispatchPrepareOptionsMenu() and ActionBarView.setMenu\n. The font size and padding on the Tabs appears smaller than normal on tablets also. I just checked an emulator and actual device. (4.0-wip branch commit 43f8c324c470624e8026ad393ccbdfea9822d9f4)\n. I couldn't reproduce what you are seeing, can you put a complete demo together? You can just modify my fork of the project if you want to.  I feel like this is related to #193 but using a null window background doesn't give your described behavior either.\n. Ok so this is a duplicate of #193. Any reason in particular you need the windowBackground to be null? The ActionBar is not opaque which is why this is happening. Look at my response in #193 for more details.\n. I was skeptical of the difference it would make on newer devices (that article is 3 years old and using the G1) but there is still a noticeable improvement. I modified Romain Guy's application to use ABS and these are my results (on my G2):\n- @null = 34/35 fps\n- @android:color/transparent  = 30/31 fps\n- @android:color/black = 28 fps\nUnfortunately ABS isn't opaque like the rest of your map view. I'll look more into this later\n. Using a null there is just going to cause the same thing. Try a new ColorDrawable() instead (it's either black or transparent I don't remember) \n193 said the issue didn't appear natively.\n. @carlospuk Yes I knew why you were doing it, but using null doesn't work in this situation because of the issue we're having with the Window, whereas a transparent drawable doesn't experience the issue\n. We should probably keep this issue open since #193 is already closed... Unless of course @JakeWharton has fixed but not committed? \n. This is occurring because the ActionBar doesn't use a solid color background (it's transparent right now) and the DecorView appears to be caching the drawing which is leading to weird results.  I would suggest either using a completely opaque background drawable in the ActionBar or the applications window background.  If you just trying to remove the window background (performance maybe?) you can use a new ColorDrawable() and you won't see this behavior http://developer.android.com/reference/android/view/Window.html#setBackgroundDrawable(android.graphics.drawable.Drawable)\n. I don't think this is a bug. You are adding the Fragments instead of replaceing or checking to see if they exist. Checkout my example here\n. Might be related to #181\n. Its worth noting that there isn't an issue on ICS but I see it on Gingerbread. (Because you don't create a proxy on Honeycomb/ICS)\ncom.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy is leaking with it's static PROXIES variable. While the key is getting cleaned up because it is a weak reference, the value is not (which is a AnimatorProxy in this case). The proxy keeps a reference to the view which is in turn, leaking the entire hierarchy. You should either avoid using WeakHashMap here or keep a weak reference to the view.\n. @JakeWharton I'll look into this also. For some weird reason I like fixing these issues (and need to because my app is memory intensive as it is)\n. I don't see any evidence there is a leak, my native heap increases (because I'm testing with an image) but that is expected. I saw a total of 11kB unaccounted for after 30 changes so I'm not too concerned. \nJust because the number of objects in DDMS is shown as increasing doesn't mean there is a leak, just that they haven't been collected yet. Use the \"Cause GC\" button to verify that, if they aren't decreasing then dump the HPROF and look for leaks with MAT\nThis was running 2.3, but I'm going to check 2.2 now.\nThe test activity can be found in my branch. \n\nState\nDalvik SizeDavlik Allocated\nNative SizeNative Allocated\nLaunched Demos5575294661044732\nLaunched BugLeaks55752999104489064\n30 rotations557530381497213478\nMultiple Forced GC55752989149729103\nBack to SampleList55752957149724782\n\nThe table was creating using adb shell dumpsys meminfo com.actionbarsherlock.sample.demos\nEDIT: Same story for 2.2\n\nState\nDalvik SizeDavlik Allocated\nNative SizeNative Allocated\nLaunched Demos3015249150803672\nLaunched BugLeaks3015253593687996\n30 rotations30152559164328017\nMultiple Forced GC30152538164328018\nBack to SampleList30152506164323718\n\n. It may take multiple GCs for heap space to be reclaimed, Android uses a mark sweep algorithm that takes multiple passes before reclaiming the memory, in my test I would press it a few times until the alloc. heap stayed constant.\nI still find it odd that you are losing 100's of kB while I lost 10.  Which phone are you testing this on? Can you reproduce it in the emulator?\n. Since its the ActionBarView yes, its the pre-ics implementation. Do you have a copy of the project you are testing this with? (github or zip) Or is it just an empty project with ABS? (I can set that up myself)\nWhich branch are you using to test this with? Master or Dev?\n. I still can't reproduce it, once you post your code maybe I can find the source but I'm beginning to think its related to your phone's custom rom. No matter how many rotations, I always endup with one instance of ActionBarView.\nSome quick tips on MAT:\nUse the histogram to see the instances of a class (find one you think is leaking like ActionBarView), right click -> merge paths to gc roots -> exclude week/soft references. You should only have one instance held by the ViewRoot.\nThe Dominator Tree and Leak Suspects are also good at finding leaking classes, but use the \"path to roots\" feature to actually find where its leaking from.\n. I tested with the Master and Dev branches, Eclipse 3.6.2, ADTr17, my android-support-v4.jar is 247,894 bytes but I forget which version it is.\n. For the app yes but nothing todo with the ActionBar. Here's the excerpt from AOSP at android-2.3.5_r1 on View.java\njava\ncase R.styleable.View_nextFocusRight:\n   mNextFocusRightId = a.getResourceId(attr, View.NO_ID);\n   break;\nIt appears they might have modified View.java since the function calls don't line up (the stacktrace shows getDimensionPixelSize, and that function throws the exception when the type isn't TypedValue.TYPE_DIMENSION or TypedValue.TYPE_NULL. Since its 0x1 it could be one of four values docs\nIts entirely possible this is a bug in their customized OS.\n. Interesting I just got the same exception java.lang.UnsupportedOperationException: Can't convert to dimension: type=0x1 inside a subclass of PreferenceActivity when calling super.onCreate(savedInstanceState); Except my PreferenceActivity isn't a Sherlock varient and doesn't use the actionbar :/\n. @SimonVT can you confirm placing the android prefixed values in a separate theme.xml file under android-v14 solves this issue?\n. It at least warrants a note in the documentation under theming, because if you don't then your app won't even open for some users. Hopefully its just these two devices but there could be more.\n. ",
    "schildbach": "I was under the impression that ActionBarSherlock is an Android project, which is currently locked to Java5. If you require Java6, you should at least make that very clear in the docs. And even better, if you import the project as an existing project like I did, Java6 should be pre-selected.\n. @Jake: Currently you are nesting projects. This is not supported with Eclipse 3.x (will probably be fixed by 4.x though). What I am suggesting is that each project should be a leaf in the tree.\n@DHuckaby: importing the library subdirectory does not work, it always imports the root directory instead. I am not alone with this problem, I know of several people who gave up on using ABS because of this. Even if I will solve it with your help at some day, I cannot expect that of fellow developers of my project. Its really a big issue that ABS is such a pita to set up )-:\n. Finally solved my problem of not being able to import the library directory by hand-crafting my own .project/.classpath file.\n. I just compiled a sample project showing the bug but this issue tracker does not allow to attach files. Here is a pasted version of the Activity and the Fragment:\n``` java\npackage de.schildbach.bug;\nimport android.os.Bundle;\nimport com.actionbarsherlock.app.SherlockFragmentActivity;\nimport com.actionbarsherlock.view.Menu;\npublic class MyActivity extends SherlockFragmentActivity\n{\n    @Override\n    public void onCreate(Bundle savedInstanceState)\n    {\n        super.onCreate(savedInstanceState);\n    setContentView(R.layout.main);\n}\n\n@Override\npublic boolean onCreateOptionsMenu(Menu menu)\n{\n    getSupportMenuInflater().inflate(R.menu.activity_options, menu);\n\n    return super.onCreateOptionsMenu(menu);\n}\n\n}\n```\n``` java\npackage de.schildbach.bug;\nimport android.os.Bundle;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport com.actionbarsherlock.app.SherlockFragment;\nimport com.actionbarsherlock.view.Menu;\nimport com.actionbarsherlock.view.MenuInflater;\npublic class MyFragment extends SherlockFragment\n{\n    public MyFragment()\n    {\n    }\n@Override\npublic void onCreate(final Bundle savedInstanceState)\n{\n    super.onCreate(savedInstanceState);\n\n    setRetainInstance(true);\n    setHasOptionsMenu(true);\n}\n\n@Override\npublic View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)\n{\n    return inflater.inflate(R.layout.fragment, null);\n}\n\n@Override\npublic void onCreateOptionsMenu(Menu menu, MenuInflater inflater)\n{\n    inflater.inflate(R.menu.fragment_options, menu);\n\n    super.onCreateOptionsMenu(menu, inflater);\n}\n\n}\n```\n``` java\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<item\n    android:id=\"@+id/option\"\n    android:icon=\"@drawable/ic_launcher\"\n    android:showAsAction=\"always|withText\"\n    android:title=\"FFF\"\n    android:titleCondensed=\"f\"/>\n\n\n```\n. FYI: I just reproduced the bug on a Nexus One (Android 2.3.6).\n. @SimonVT I'm adding the fragment via a layout file, which is a very common pattern.\n. This also happens if I use an id in landscape mode, but create the fragment in a ViewPager programmatically (and thus cannot set an id) in portait mode. Fragments in ViewPager cannot be assembled by a layout.\n. Also, I think you should assert for an ID rather than letting this strange duplication issue happening.\n. > If you need to give your fragments in a viewpager a specific ID, make an adapter that lets you give them that.\nDo you mean a PagerAdapter? How does that help to set an ID (@+id) on a fragment? Can you give an example?\n. How can I use a PagerAdapter to set tags on its contained fragments? This is not obvious from the JavaDoc.\n. When I include 'orientation' in configChanges, ABS does not adapt to the changed config. This means labels do not dis/appear.\nWhen I don't include 'orientation' in configChanges, the action mode entirely disappears when rotating the device.\nBoth behaviours are not expected. I'd expect the action mode to not disappear unless explicitely instructed by API or user. Stil, the action mode should adapt to config changes.\n. Take a look at Google Mail for Android. Its ActionMode stays open during orientation changes. The ActionBar overflow menu also stays open (even with ABS).\n. Who does not recommend android:configChanges=\"orientation\"? It's perfectly valid, and in some cases its preferable to tearing down the activity. Most system UI components support config changes, the action bar should do as well. Though I admit that if the original implementation does not do this it should be fixed there first.\n. Why is the menu key handling inconsistently handled between ActionBar and ActionMode? I'd expect it to be handled consistently: Either it shows the overflow menu or not.\n. Yes, I second this. In my opinion this should have been implemented the same time as .ForceOverflow themes and the absForceOverflow attribute has been removed (v4.2.0). The old options menu is extremely ugly, with some entries having icons and some not, and all entries need a completely different icon set (remember, pre-HC there were no dark/light themes but all-in-one). The non-AB options menu would be a good compromise for devices with menu button.\n. What is the status of this? I really hoped it will make it into 4.3.0. I'm still stuck at 4.1.0, because I cannot present an ugly options menu mixed with and without icons to pre-HC users.\n. @hrk ForceOverflow is nice to have, but not ideal. Really the best compromise would be a backport of these iconless menus that pop up from the bottom (otherwise look identical to the overflow menus). Thanks anyway.\n. I think naming a project just \"library\" is indeed a bad idea, even if it's just a sub-project.\n. @JakeWharton Where does Google push to exactly? API 17 is out for several days now, still no sign pushed artifacts. And who is Google?\n. I wonder if all of you have version 11 bundled themselves (under whatever groupId), why doesn't anyone push this to Maven Central? This would solve the problem for all of us.\n. The tricky part is not preparing and pushing the support library, but the android sdk dependency. Is Xav aware of that? If someone confident in building the sdk (and c in general) helps, we can manage that. I failed because I just don't know what went wrong - don't know anything about all these C warnings and errors.\n. ",
    "drsoran": "I can follow your thoughts why to comment out the code. But every user of your library does this by full intention. And I think everybody does this by supporting phones and tablets at the same. It's not like tweaking a phone to be able to run 3.0+ apps which were designed for tablets only.\nSo I think the people are aware of the fact that they cannot provide tablet-only ActionViews for both worlds. Speaking for me, I would favor to re-enable the attributes. Android provides a good functionality to switch resources by configuration attributes like the screen size. By providing different ActionView layouts for different configurations is a clean and straight way to handle this.\n. I always prefer the resource facility from Android. It's a good separation of concerns. It separates the logic from the visualization. And why to re-implement the decision how to display something if this is already done by the framework. Of course I cannot judge for your special case cause I simply don't know your implementation. I don't know if this fits to some special cases which cannot be handled by a simple XML resource file.\nOff topic: I hope I don't bomb you too much with issues. If think this helps to improve the library and you alone cannot think of every special case someone else will use. Keep up the good work!\n. Regarding Release 3.1.0:\nDoes this issue still involves the fix for not calling onPrepareOptionsMenu()? See https://groups.google.com/group/actionbarsherlock/browse_thread/thread/9b71ee3d77f27323\nOtherwise there is no chance to initialize an exclusive checkable SubMenu to the correct state.\n. Sample code for expected menu item ordering:\n``` java\n   @Override\n   public boolean onCreateOptionsMenu( Menu menu )\n   {\n      super.onCreateOptionsMenu( menu );\n  // Category SECONDARY, SHOW_AS_ACTION_ALWAYS \n  menu.add( Menu.SECONDARY, R.id.item_a, 0, \"ItemA\" )\n          .setShowAsAction( MenuItem.SHOW_AS_ACTION_ALWAYS );\n\n  // Category NONE, SHOW_AS_ACTION_ALWAYS \n  menu.add( Menu.NONE, R.id.item_b, 0, \"ItemB\" )\n          .setShowAsAction( MenuItem.SHOW_AS_ACTION_ALWAYS );\n\n  // Category NONE, SHOW_AS_ACTION_IF_ROOM\n  menu.add( Menu.NONE, R.id.item_c, 0, \"ItemC\" )\n          .setShowAsAction( MenuItem.SHOW_AS_ACTION_IF_ROOM );\n\n  // Category NONE, SHOW_AS_ACTION_IF_ROOM, Order 1\n  menu.add( Menu.SECONDARY, R.id.item_d, 1, \"ItemD\" )\n          .setShowAsAction( MenuItem.SHOW_AS_ACTION_IF_ROOM );\n\n  // Category NONE, SHOW_AS_ACTION_IF_ROOM, Order 0\n  menu.add( Menu.SECONDARY, R.id.item_e, 0, \"ItemE\" )\n          .setShowAsAction( MenuItem.SHOW_AS_ACTION_IF_ROOM );\n\n  return true;\n\n}\n```\nI would expect to see the icons in the following order (assuming there is enough space to show them all):\nItemB <- SHOW_AS_ACTION_ALWAYS, Category NONE\nItemC <- SHOW_AS_ACTION_IF_ROOM, Category NONE\nItemA <- SHOW_AS_ACTION_ALWAYS, Category SECONDARY, Order 0\nItemE <- SHOW_AS_ACTION_IF_ROOM, Category SECONDARY, Order 0 but added later\nItemD <- SHOW_AS_ACTION_IF_ROOM, Category SECONDARY, Order 1\nIf there is space for only 2 icons, I would expect to see:\nItemB <- SHOW_AS_ACTION_ALWAYS, Category NONE\nItemA <- SHOW_AS_ACTION_ALWAYS, Category SECONDARY\nAnd, for example, there is space for 3 items, I would expect to see:\nItemB <- SHOW_AS_ACTION_ALWAYS, Category NONE\nItemC <- SHOW_AS_ACTION_IF_ROOM, Category NONE\nItemA <- SHOW_AS_ACTION_ALWAYS, Category SECONDARY, Order 0\n. Release 3.1.3:\nI think there is a problem with the defined CATEGORY_TO_ORDER look up table in com.actionbarsherlock.internal.view.menu.MenuBuilder. CATEGORY_TO_ORDER is defined as follows:\njava\n private static final int[] CATEGORY_TO_ORDER = new int[] {\n        1, /* No category */\n        4, /* CONTAINER */\n        5, /* SYSTEM */\n        3, /* SECONDARY */\n        2, /* ALTERNATIVE */\n        0, /* SELECTED_ALTERNATIVE */\n    };\nI think CONTAINER = 4 should swap the value with ALTERNATIVE = 2. According to the Android category values, CATEGORY_CONTAINER has the value 0x10000 and CATEGORY_ALTERNATIVE has the value 0x40000. Lower values mean higher priority.\nSo currently CATEGORY_ALTERNATIVE is more prior than CATEGORY_CONTAINER what leads to unexpected icon ordering and appearance in the ActionBar.\n. Do you have more information what causes this bug and how to circumvent it? If you fix these bugs for the compatibility lib, does it mean they do not appear on native 3.X devices? How do you ensure that things behave exactly the same in booth worlds?\nOne more question. If I remove a Fragment by a call to FragmentTransaction.remove() and do a commit(), why are these Fragments still present in FragmentManager.mAdded? They are not longer in FragmentManager.mActive but still FragmentManager.mAdded. When they are going to be destroyed? Has this something to do with retaining some instance state? The problem is even if a Fragment is removed, it can still be found by findFragmentById what I wouldn't expect.\n. I understand. This means there is no homeAsUpIndicator for the native implementation?\n. >  Are you positive that the error is related to this library?\n\nYes. As I said, I tested on Android 4 emulator\nWhat attribute does 0x7f01000d map to in your R.java?\nFrom com.actionbarsherlock.R.\npublic static int homeAsUpIndicator=0x7f01000d;\n\nIt happened to me if I used the ImageButton from above in an arbitrary layout. If the layout is shown on devices which are using your implementation, everything works fine. But If I try this on native devices, I get the error. To be honest, I didn't tried on 3.x devices.\nI worked around the problem by copying your abs__ic_ab_back_holo_dark.png file to my drawable folder.\nI still use your Theme.Sherlock.Light theme as my parent theme on all platforms. Is it possible that the attribute \"homeAsUpIndicator\" is not defined on native platforms?\n. ",
    "felixb": "i'm running your current dev branch and i still have this issue on <=API10 devices.\n. ok thx. it's working.\nOn Fri, Sep 2, 2011 at 17:18, JakeWharton \nreply@reply.github.comwrote:\n\nHave you looked at [this][1] sample? I can confirm it works on both 1.6,\n2.3.3, and 3.2. You have to use Boolean.TRUE and Boolean.FALSE objects\nsince the setProgressBarIndeterminateVisibility(boolean) cannot be\noverridden.\n[1]:\nhttps://github.com/JakeWharton/ActionBarSherlock/blob/master/samples/demos/src/com/actionbarsherlock/sample/demos/app/ActionBarIndeterminateProgress.java#files\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/41#issuecomment-1979948\n. looks good to me.\nhere is my FragmentMapActivity:\nhttps://github.com/felixb/travellog/blob/master/src/android/support/v4/app/FragmentMapActivity.java\n. \n",
    "ChristopheVersieux": "Have you made any progress since Augustus 2010? I would like to set my preference in a ViewPager but that gives me serious headache!\n. Thank a lot for your help, I found this one in the meanwhile: http://forum.xda-developers.com/showpost.php?p=19719977&postcount=1\nWith a perfectly working example.\nGreat job everybody and thank for your quick help.\n. Ok, thanks works fine!\nJust an extra question: Is that possible this keep this theme by default?\nEach time I open a layout, Eclipse give me all tehse annoying crash popups.\n. ",
    "chrisbanes": "@ChristopheVersieux it shouldn't be too difficult to do it yourself, here's the ICS source for PreferenceFragment\n. I've only just seen setPrimaryItem. I'll have a look. \nThe Tabs stuff is good though.\n. setPrimaryItem doesn't really help with this. I've done this instead using the new getCurrentItem method in ViewPager and the up-scoped makeFragmentName.\nThanks\n. My requirement was to get the Object (View, Fragment, etc) not the position int, that's already available in the new ACL library (getCurrentItem).\n. Good point.\n. I was just looking at doing this exact thing this morning. Shouldn't it be called DarkActionBar to follow ICS's? \n. Adding aac902c33e9f5311a6f70d2a22375c482294f87b back in was causing me some build problems so I've reverted it for now.\n. It's working for me, but then again I'm manually setting the Action Bar\nbackground. I'll test it with a standard set-up.\nOn Dec 22, 2011 2:29 PM, \"Jake Wharton\" \nreply@reply.github.com\nwrote:\n\nDoes this work? I get a light action bar on both pre/post 3.0 with this\nstyle.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/pull/130#issuecomment-3249526\n. I did add this in #126 but @JakeWharton reverted it before v3.5.1 was released. Not sure why.\n. I couldn't work out how to fix that, so just changed the popup background back to the light one.\n. MediaRouter builds upon AppCompat. If you want to use MediaRouter with ActionBarSherlock then you're going to need to get the source, and modify it to use ABS' classes instead.\n. \n",
    "pommedeterresautee": "Hi Jake, do you plan to work on it? It s not the most useful class in the world, but it would help to have it :)\n. For few users on Gingerbread I have this error too...\nAny new idea of the reason?\n. ",
    "pc-jkoren": "Please continue development on this, I beg you.\n. ",
    "vaskevich": "Yes - I need to use loaders and fragments in preference activity when some items are clicked and cannot!\n. ",
    "paulpv": "Here seems to be an impressive Unified solution:\nhttps://github.com/saik0/UnifiedPreference\n. ",
    "jeancaffou": "@paulpv did you manage to use UnifiedPreference as a SherlockFragment? I am experienceing the following issue: \n04-18 03:59:26.000: E/AndroidRuntime(8437): FATAL EXCEPTION: main\n04-18 03:59:26.000: E/AndroidRuntime(8437): java.lang.ClassCastException: si.neanonimen.Settings$NetSettingsPrefsFragment cannot be cast to android.support.v4.app.Fragment\n04-18 03:59:26.000: E/AndroidRuntime(8437):     at android.support.v4.app.Fragment.instantiate(Fragment.java:384)\nNetSettingsPrefsFragment extends UnifiedPreferenceFragment \nhttp://stackoverflow.com/questions/16081706/using-preferencefragment-in-sherlockfragmentactivity-with-tabs\n. ",
    "rovertolonegro": "Hello, I have this code, and when trying to adapt it for use actionbarsherlock I can not use the getFragmentManager, that I can do?\nChange to SherlockPreferenceActivity and actionbar by getSupportActionBar, but getFragmentManager fails me ... Why?\npublic class Settings extends PreferenceActivity{\n@Override\n protected void onCreate(Bundle savedInstanceState) {\n  // TODO Auto-generated method stub\n  super.onCreate(savedInstanceState);\nActionBar actionBar = getActionBar();\n    actionBar.setTitle(R.string.preferencias);\n    actionBar.setDisplayHomeAsUpEnabled(false);\n    actionBar.setHomeButtonEnabled(true);\n    actionBar.setIcon(R.drawable.actionbar_cerrar);\ngetFragmentManager().beginTransaction().replace(android.R.id.content,\n                new SettingsFragment()).commit();\n }\n. Hello, I have this code, and when trying to adapt it for use actionbarsherlock I can not use the getFragmentManager, that I can do?\nChange to SherlockPreferenceActivity and actionbar by getSupportActionBar, but getFragmentManager fails me ... Why?\npublic class Settings extends PreferenceActivity{\n@Override\n protected void onCreate(Bundle savedInstanceState) {\n  // TODO Auto-generated method stub\n  super.onCreate(savedInstanceState);\nActionBar actionBar = getActionBar();\n    actionBar.setTitle(R.string.preferencias);\n    actionBar.setDisplayHomeAsUpEnabled(false);\n    actionBar.setHomeButtonEnabled(true);\n    actionBar.setIcon(R.drawable.actionbar_cerrar);\ngetFragmentManager().beginTransaction().replace(android.R.id.content,\n                new SettingsFragment()).commit();\n }\n. ",
    "SebastianEngel": "Hi Jake,\nare you still working on this or do you plan to?\n. ",
    "kolavar": "I wrote a compatibility layer for PreferenceFragment. Java reflection is used extensively to access private/hidden methods and fields. It's available here:\nhttps://github.com/kolavar/android-support-v4-preferencefragment\n. ",
    "mszaro": "@kolavar, your compatibility layer is brilliant, and working perfectly in my app. Thank you so much for the contribution. I have mostly had success using it in combination with ABS by having your PreferenceFragment class extend from SherlockFragment instead of the Fragment class in the support library.\n. ",
    "3mph4515": "@kolavar , yep, compatibility is great! Thank you very much! \n. ",
    "blork": "I've been plagued by this bug for ages. The fix above doesn't seem to work on the first item in a pager - I've found that adding it to the end of the populate() function works best.\n. ",
    "mubashirmeddekar": "Can Anybody please help me, i am trying to use both Vertical and Horizontal Swipes in one Pager.? Please help to solve this.!\n. ",
    "necronet": "what do you mean with Checkstyle ?\n. well I don't think that is ABS main concern\u2026\u2026 you can perfectly added yourself and push it.\u2026\u2026. also there are some person that just don't need to localized string in that dozen of languages. Maybe a full-language distribution for ABS. \nRemember is not a closed project you can fork it and change it anytime you want.\n. yes but what SimonTV said makes sense, you can download the string that you need in those language from the AOSP (http://source.android.com/source/index.html) or go to Grepcode, it has a clone of the repo (http://grepcode.com/file/repository.grepcode.com/java/ext/com.google.android/android/4.0.3_r1/frameworks/base/core/res/res/)\n. ",
    "xperimental": "I do not have the nine-patch available right now, but I can send it to you tomorrow if you need it. It's a very simple one, 5x5 pixel in size, ASCII-art follows:\n```\nT T X T T\nT B B B T\nX B B B X\nT Y Y Y T\nT T X T T\nT = transparent\nX = black\nB = blue\nY = yellow\n```\nWhen the action bar was hidden two lines remained on screen. One blue and one yellow, so I suppose that it was the two \"non-content\" lines from the nine-patch.\nAlso, I did test it on a 3.0.1 Motorola Xoom. It works without problems there.\n. Thanks for the hint, that solved my problem.\n. ",
    "bubbleguuum": "It works perfectly. You're awesome Jake, thanks :)\n. ",
    "virajmody": "Argh, I just got bitten by this. Spent several hours before looking here. Just to confirm, this isn't fixed in the current code, right?\n. Maybe I don't understand this well enough, but won't it be easier/better to set the OnPageChangeListener on the PageIndicator and then toggle the setHasContextMenu value of the underlying Fragment?\nIf you're tried this already and know it won't work, I would appreciate feedback. If not, I'll give it a shot and let you know if it works.\n. Yes, I see that there is no deselected callback, which is a pain. It's still possible to cycle through all Fragments and set the setHasContextMenu to false, and then re-set the current Fragment's value to true. (This is assuming all fragments have/deal with context menu callbacks).\nRelated question: I'm using the currently released Google version of the source, but looking at the fixes you've made I think I should switch over to using yours. Apart from the regular disclaimers about being on-my-own if/when Google update their version, are there any other gotchas to using the source your have here?\n. @JakeWharton you might be interested in this: http://code.google.com/p/android/issues/detail?id=20065\n. ",
    "shaokun": "Wow, that was fast!! It works! Thank you very much...\n. ",
    "steren": "Thanks a lot for this fix. I will test this soon.\nI really think your approach to stick to the official ActionBar API is the right way to do it. (comparing to other actionbar libraries)\n. ",
    "ianhanniballake": "Works perfectly in v3.2.2. Thanks for the quick fix.\n. Thanks, I'll create another pull request if that ever happens.\n. @JakeWharton - as Google is now publishing Support v13 to Maven as per this announcement, would you consider reopening this pull request?\n. @ronaldoeyeem - I've updated my repository (https://github.com/ianhanniballake/ActionBarSherlock) with that fixed. @JakeWharton - would you like me to create a new pull request with these changes and that new commit or wait until we resolve this pull request?\n. ",
    "amirgalor": "ThanX for the quick reply,\nI was not sure if you are keeping a strict integration with the official\ncompatibility library.\nthe is the link for the bug-report,\nhttp://code.google.com/p/android/issues/detail?id=20208&colspec=ID%20Type%20Status%20Owner%20Summary%20Stars\nA.\nOn Wed, Sep 21, 2011 at 5:16 AM, Jake Wharton \nreply@reply.github.comwrote:\n\nI would consider it a bug. However, it is a bug with the native\ncompatibility library and not with ActionBarSherlock directly. I suggest you\nfile a ticket for it on [b.android.com][1]. This way it can get integrated\nin the next release of the official compat lib (and then updated in ABS once\nreleased).\nI'm going to close this, but if (read: when!) you file a ticket please\npaste the link as a comment so I can track it as well.\nThanks for the report!\n[1]: http://b.android.com\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/65#issuecomment-2151986\n. \n",
    "dschuermann": "Thanks for the fast response.\nUnfortunately it does not work. My new code looks like this:\n    /*\n     * Set up Tabs on create\n     /\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n```\n    // start with blacklist\n    BlacklistFragment blacklistFragment = new BlacklistFragment();\n    getSupportFragmentManager().beginTransaction().add(android.R.id.content, blacklistFragment)\n            .commit();\n// execute transactions before using ActionBar. ActionBar will be null because without this\n// fragment transactions are asynchronous and ActionBar is not ready at once\ngetSupportFragmentManager().executePendingTransactions();\n\ngetSupportActionBar().setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);\n\nActionBar.Tab tab1 = getSupportActionBar().newTab();\nActionBar.Tab tab2 = getSupportActionBar().newTab();\nActionBar.Tab tab3 = getSupportActionBar().newTab();\n\n```\nException is the same:\n09-28 11:23:47.503: ERROR/AndroidRuntime(463): Caused by: java.lang.NullPointerException\n09-28 11:23:47.503: ERROR/AndroidRuntime(463):     at org.adaway.ui.ListsActivity.onCreate(ListsActivity.java:81)\n09-28 11:23:47.503: ERROR/AndroidRuntime(463):     at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1048)\n09-28 11:23:47.503: ERROR/AndroidRuntime(463):     at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1712)\n09-28 11:23:47.503: ERROR/AndroidRuntime(463):     ... 11 more\nAs said before it does not occur on Android 3.2\n. I am using Theme.Sherlock defined in AndroidManifest.\nSee my sourcecode on gitorious:\nhttps://gitorious.org/adaway/adaway/trees/master\n. thanks, that worked!\n. I have the same issue.\nI got 30 errors/week in the google play publisher backend with the following comments:\n- force closes as soon as opened\n- Force close on start, reinstall won't help.\n- getting force close at app startup\n- force closes after giving root permissions...I'm running a cm7 nightly\n- Force close after migrated to cyanmobile Rom (Galaxy mini/pop)\n  ...\nI have no more information about this issue. The stacktrace is the same as above.\n. I don't know excatly what caused this, but I have no more bug reports in Google Play backend after I released the new version of my app. Eventually it was the update of ActionBarSherlock 4.0 to 4.0.2\n. ",
    "eburnette": "Ok, thanks\n-----Original Message-----\nFrom: Jake Wharton [mailto:reply@reply.github.com] \nSent: Friday, September 30, 2011 5:05 PM\nTo: Ed Burnette\nSubject: Re: [ActionBarSherlock] IllegalStateException in Action Bars/Tabs and Pager example (#69)\nThis is not really an error with this framework (nor the compat lib, really) but rather an oversight in whomever made the samples for the current compat lib. I can't even remember the exact operation that causes the problem but what happens is a loader or handler is created to load the list content and if you page too far away before it resolves the ViewPager will detach the fragment. Obviously since there's no fragment there's no ListView so the ListFragment throws an exception when the callback tries to populate the adapter.\nIf the demo fragment was written properly the loader/handler would be aborted when the fragment was detached. I didn't bother fixing since it's an edge case bug that exists only in the samples and not the library itself.\n..and no one had bothered reporting it yet! Thanks for the report regardless, though.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/69#issuecomment-2253946\n. Interestingly if you also turn on Tabs navigation mode along with Intermediate Progress Display, you can see both a blue and a gray spinning circle on the screen at once.\n. I'd like to be able to use Theme.DeviceDefault and have everything including the action bar pick up the device specific colors and styles as described in http://android-developers.blogspot.com/2012/01/holo-everywhere.html . So for example if HTC Sense for Android 4 makes the device default use shades of green instead of blue or gray, I want to see green in my app as well so it will fit in.\n. Ok, thanks\n-----Original Message-----\nFrom: Jake Wharton [mailto:reply@reply.github.com] \nSent: Tuesday, February 14, 2012 12:31 AM\nTo: Ed Burnette\nSubject: Re: [ActionBarSherlock] Intermediate Progress Display is Gray rather than Blue on 3.1 (#167)\nI've decided not to add this to the core of the library since the Honeycomb market share should be dwindling.\nTo add it yourself you need only do something like the following:\nxml\n<!-- values-v11/ -->\n<style name=\"Theme.MyTheme\" parent=\"Theme.Sherlock\">\n    <item name=\"actionBarStyle\">@style/Widget.MyTheme.ActionBar</item>\n</style>\n<style name=\"Widget.MyTheme.ActionBar\" parent=\"Widget.Sherlock.ActionBar\">\n    <item name=\"indeterminateProgressStyle\">@android:style/Widget.Holo.ProgressBar.Large</item>\n</style>\nThe only downside of this is that the Honeycomb blue and the ICS blue clash a bit so you'd also probably want to set the action bar background to @null or something if you weren't already providing a custom background.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/167#issuecomment-3955474\n. Yes, that is the one I\u2019m talking about. Thanks for the workaround.\nFrom: Jake Wharton [mailto:notifications@github.com]\nSent: Sunday, September 02, 2012 11:50 PM\nTo: JakeWharton/ActionBarSherlock\nCc: Ed Burnette\nSubject: Re: [ActionBarSherlock] Getting two action bars in 3.1, 3.2 (#516)\nAre you talking about native action modes (e.g., when editing text in an EditText)? If so, there's no real way to prevent this without breaking other things.\nIf you want to fix this yourself, you need to override onStartActionMode(android.view.ActionMode.Callback), call startActionMode(com.actionbarsherlock.view.ActionMode.Callback) with a wrapper around the original callback instance, and return null to prevent the native action mode.\nThe reason this cannot be done by the library is that this would cause onClick handlers declared in XML to inexplicably fail (see this blog posthttp://corner.squareup.com/2012/08/getting-to-the-bottom.html).\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/516#issuecomment-8229136.\n. ",
    "doc-rj": "Hi Jake, I'm also interested in using a SearchView widget with ActionBarSherlock.  The Ice Cream Sandwich source was released a few days ago.  Are you still planning to add support for SearchView?  Thanks! \n. ",
    "bostone": "I tried to get search-view branch and got tons of compilation errors related to the resources I think\n. Just checking if there's any progress on this?\n. Actually - it maybe already there. Not sure what is the state but I'm using\nzip form the dev branch and SearchView is already there\nOn Tue, Aug 21, 2012 at 12:37 PM, Dylan Reid notifications@github.comwrote:\n\nReally looking forward to this\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/70#issuecomment-7913314.\n. Good enough to start coding using this as \"things to come\". Thank you Jake - your stuff rocks!\n. \n",
    "klnusbaum": "Just thought I'd throw my two cents in and say this is something I'd really like to have available. Is there anyway I can help get this feature implemented?\n. ",
    "DylanSale": "This would be very handy for me also. Let me know if I can help.\n. ",
    "yaroslav-v": "+1 for this feature. This'll be very helpful.\n. ",
    "schwiz": "very annoying and my guess is they are just being lazy in using all these internal widgets and resource files. Google confuses me with the support library sometimes. \n. ",
    "imort": "Can this be solved with SeachViewCompat from support package v4?\n. ",
    "navarr": "@imort: It looks like it just presents a constructor for creating a SearchView on platforms it exists on, and returning null otherwise - instead of trying to figure out if it exists or not.\n. @b3hrooz I don't entirely understand it myself, but what it seems to entail is most if not all of the search functionality, including the ability to auto-complete etc. \nhttp://developer.android.com/guide/topics/search/search-dialog.html#SearchableConfiguration\n. Should there be any issues merging the master branch into the share-action-provider branch?\ni.e. Theoretically, will the same code run if copied into 4.0 release?\n. My mistake @.@;\n. I had a problem similar to this.  copying all the code is a good start, as is importing the support-lib.  But you should also make sure that your Java is set to 1.6 instead of 1.5 with the default suppoprt settings.\n. In your eclipse settings though, make sure Java is set to 1.6\n. A work around would be to set up the XML so that ShareActionProvider is always shown in the action bar (taking precedence over other action icons)\n. ",
    "inazaruk": "I've looked at this issue 2 days ago and decided to try and solve it. Didn't know you were working on it too.\nFinished yesterday late. My port takes a slightly different approach than yours (though I still tried to stick with ABS way of porting it). You can take a look at it at: https://github.com/inazaruk/abs-search-view.\nFrom quick look through your version, I'd say that main difference is that my version falls back to native android.widget.SearchView on API levels 11 and higher. This is because I wasn't able to support all the key features related to SearchableInfo, but still wanted to enable those features on platforms that support it.\n. Voice search is configured through SearchableInfo, and because of lack of support of SearchableInfo there is probably no support for voice too. At least this was my understanding when I looked through code.\n. ",
    "b3hrooz": "I'm new to Android so I appreciate it if Jake or anyone else could clarify what the lack of SearchableInfo entails? In other words which features of the vanilla searchView are unsupported? I did review the code but this is not immediately apparent from the code.\n. @navarr I have been reading the dev guide and it seemed to me that the vanilla search widget and dialog are heavily dependent on searchableInfo (but I could be wrong). What's confusing is Jake's comment on the new feature reads \"Add SearchView widget which supports a very large subset of the API.\" and looking at the code I even see SuggestionAdaptors and such... I am trying the code right now but someone with experience using the vanilla searchView widget can probably clarify this much sooner than I can.\nBasically what I want to know is whether this widget has autocomplete, suggestions, and voice input to set it apart from a regular textView.\n. Thanks Jake, that's great news. I'm guessing the lack of voice search is not the biggest problem since we can always just have it as an action provider and feed the results back into the search widget.\n. ",
    "gabrielittner": "Do you plan to add SearchableInfo? If not could you at least add SuggestionsAdapter and com.android.internal.R.layout.search_dropdown_item_icons_2line so we can add suggestions that are closer to the platform?\nIf there is anything I can do to help you just let me know.\n. Some additional things:\nIt's enough to just call getSupportActionBar() without doing anything with it.\nIn my Fragment I add a Custom View to the ActionBar, which looks like this http://goo.gl/JE1QE . When the ActionBar isn't accessed in onCreate the CustomView is drawn to the background http://goo.gl/CAcpB . The Buttons in the CustomView aren't usable in the second case.\n. It's just using the opposite color as it should be. On black theme the font is black, on light it's white.\n. You can remove your fix for that. This isn't a bug, it's using the wrong context. Using getSupportActionBar().getThemedContext() when creating the adapter solves it for me (tested on ics, gingebread and froyo). \n. Just tested it for the normal Holo.Light theme. You can also remove sherlock_spinner_dropdown_item and sherlock_spinner_item (commit was b744d1f/issue 223). Using the simple_spinner_item together with the themed context works fine.\nThis was the code I used:\nArrayAdapter spinnerAdapter = ArrayAdapter.createFromResource(actionBar.getThemedContext(), R.array.app_navigation, android.R.layout.simple_spinner_item);\nspinnerAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\n. I fixed it. Explanation and commit coming in the next hour.\nAlthough I don't know @vRallev had the same issue, because it only occures on ICS for me.\n. Is it possible to add the pull request to this issue or do I have to simply send a pull request which opens a new issue and reference this one here?\n. If an OEM changes the EditText design on pre-3.0  imo the changed style should be used. Otherwise an AutoCompleteTextView would look different than all other EditTexts on this device. I think this wouldn't be very good.\nFor 3.0 and later I will make android:Widget.Holo.EditText parent to avoid OEM changes to the general style.\n. Hey Jake is the current pull request ok for you or should I pull in the EditText style and the EditText background/color for the theme? I would leave it this way, so all EditText look consistent across one device.\n. I got an alternative idea. How about using a new attribute for the AutoCompleteTextView style, which is applied at the SearchView layout file? This way it wouldn't interfere with non ActionBar stuff. Otherwise we need to pull in at least all the Gingerbread and Holo EditText backgrounds (in theory Froyo also has different ones), so that we don't change the platform look and feel.\n. Sorry pressed the wrong button again.\n. New pull request #597\n. Sorry, github closed it when I updated my dev branch before the rebase. I'll open a new pull request.\n. I was able to reproduce this by just adding the SearchVIew as custom view to the ActionBar.\n. This is actually a platform bug. When you have an activity with just the following code you will see the behavior:\n```\n@Override\npublic void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\nSearchView searchView = new SearchView(this);\nsearchView.setIconifiedByDefault(false);\ngetActionBar().setCustomView(searchView);\ngetActionBar().setDisplayShowCustomEnabled(true);\n\n}\n```\nRemoving the searchView.setIconifiedByDefault(false) line will make the SearchView look like a normal one, when it's expanded.\n. ",
    "Shusshu": "+1 replying to get the notifications from this topic as it will be interesting for me in the near future\n. I confirm this is happening for me too only on <ICS\n. This app : https://play.google.com/store/apps/details?id=com.afrogleap.zorgenzekerheid&hl=en should have the problem on android 2.3.x\n. Same problem as @m190 with @purdyk or even @Nevro's code\nI also changed the support-v4 dependency to 13.0.0\nEdit:\nI did menu.clear() in onCreateOptionsMenu before inflating the fragment's menu to solve the problem\n. ",
    "lujop": "I was previously using setSearchableInfo and it's not clear to me how to workarround that.\nMy first big doubt is why SuggestionsAdapter is package protected? It seems that it's usable and makes the job.  I'm ignoring something?\nWhat's the best and recommended way to migrate from searchableinfo to be able to use the SearchView in ActionBarSherlock?\n. I see Jake. But I suppose it's intended to be use by the searchableinfo, isn't it? With actual ABS code it seems that is never used.\nAlso I've been playing a little with it and I think that there are some attributes not set in themes:\n?attr/searchResultListItemHeight, ?attr/searchViewEditQuery ,searchViewEditQueryBackground\n. That's nice Jake. Then will we be able to use the SearchableInfo as in oficial SearchView?\n. ",
    "dylanreid": "Really looking forward to this\n. ",
    "yincrash": "I'm on a22e243de534e235663bd1081e5beaeec7bb0fe5 of the dev branch (the latest commit at time of posting), and i tried adding a recent suggestions provider, but it didn't work. The popup that shows suggestions never pops up. However, switching from the ABS SearchView to the android-16 SearchView immediately had working recent suggestions.\njava\nSearchManager searchManager = (SearchManager) getSystemService(Context.SEARCH_SERVICE);\n((SearchView) menu.findItem(R.id.action_search).getActionView()).setSearchableInfo(searchManager.getSearchableInfo(getComponentName()));\nis replaced with \njava\nSearchManager searchManager = (SearchManager) getSystemService(Context.SEARCH_SERVICE);\nandroid.widget.SearchView searchView = new android.widget.SearchView(getSupportActionBar().getThemedContext());\nsearchView.setSearchableInfo(searchManager.getSearchableInfo(getComponentName()));\nmenu.findItem(R.id.action_search).setActionView(searchView);\n. Created pull request.\nhttps://github.com/JakeWharton/ActionBarSherlock/pull/660\n. I am not using CapitalizingTextView outside of ABS. I am specifically attempting to set the style of the actionBarTabTextStyle to not use all caps. I can't do that without getting a lint error in my styles file. I can write an example if you'd like.\n. This caught me as well. I was calling setHasOptionsMenu in onAttach, and my onCreateOptionsMenu was being called after onCreateView in Android 4.2.2, but before it on my 4.0.4 device.\nMoving to onActivityCreated seems to be acceptable since it ensures that it is consistently called after onCreateView\n. @animaonline that works fine for API 11+ devices, but will still display the caret for older devices.\n. For a temporary solution for the caret if you want to go with @animaonline's (temporary) solution, you can change the up indicator in your Activity's theme with something like\n<!-- DrawerToggle can't affect the ABS Up Icon yet, so set it here. -->\n    <style name=\"AppTheme.Main\">\n        <item name=\"homeAsUpIndicator\">@drawable/ic_drawer</item>\n    </style>\nOf course this won't make the icon slide, but it's a little better graceful degradation than having the up caret.\n. ",
    "amithrai13": "There was one previous issue, which was related to this doRetain in LoaderManager.java which you looked into, can you please have a look and let me direct.\n. ",
    "aectann": "Sent a pull request with fix to that..\n. The support for the styleable is declared in theming http://actionbarsherlock.com/theming.html docs, but looks like it was never implemented.\n. ",
    "mernen": "Also, perhaps it'd be a good idea to support handlers that take an android.support.v4.view.MenuItem (rather than android.view.MenuItem) as a parameter? I was quite surprised when it said my method was not found, I just assumed the library would favor its backport variants at all times over OS-provided classes.\n. I wanted to give them a spin, but I'm a bit underwhelmed. At the moment they are limited to Context/Activity methods, and sometimes (quite often, actually) it makes much more sense to handle actions in their originating Fragment.\n. ",
    "fjjimenez01": "According to the docs:\n\"...To fix all of these issues, we have decided to move to library projects generating a jar file that is directly used by other projects...\"\nhttp://tools.android.com/recent/buildchangesinrevision14\nAccording to the FAQ of ABS:\nWhy is ActionBarSherlock a library project whereas the original compatibility library is only a .jar?\nActionBarWatson, the custom action bar implementation within ActionBarSherlock for pre-3.0 devices, relies on styles, themes, layouts, and drawables in order to display properly. Due to the limitations of Android and .jar files, it can not be accomplished any other way.\nSo, like you,  Im wainting for a fix, announcement, anything.\n. It works, thank you\n. ",
    "francisdb": "Great, big thanks in advance\n. So how do I get his 3.3.1 project working in eclipse?\n. I had to remove Eclipse android tools and re-install it to fix my issues. Somehow the upgrade must have broke some things. Thanks for the pointers Jake.\n. Will also try to reproduce this starting with a simple app\n. This was an issue on my side, wrong package name in test constructor and library deployed twice in app/tests apk. Atomusk I don't think your issue is related to mine, might be better to create a new issue.\n. ",
    "frapontillo": "I have added ActionBarSherlock as a project reference to ViewPagerIndicator and they both compile and generate a jar file. But when I add both library references in my Android application, it says \"Build success\" and generates an empty apk. Will the ViewPagerIndicator update solve this issue?\n. Ok, this is a very strange issue NOT related to your libraries. As it comes out, any Android project won't compile. Even if I start a new one, with the classic activity that inflates a layout.\nApparently, updating to ADT must have messed something in Eclipse or whatever. I'm going to report back asap.\nThank you.\n. Ok, this is how I solved it (thanking http://stackoverflow.com/questions/4714711/android-packaging-problem-resources-ap-does-not-exist/7824904#7824904):\n- Reinstall of Android SDK\n- Reinstall of Eclipse\n- Reinstall of the ADT plugin\n- Deletion of the workspace .metadata folder\nThe last step was the thing that made my projects work again. After all, I think that the first three steps were not necessary. If you have the same problems I had (empty apk), just delete the .metadata folder. You will lose all of Eclipse settings (not the installed plugins, though) and you will have to re-import your projects in Eclipse.\nI hope this is going to help somebody else avoid spending three days on the issue.\n. ",
    "zachlipton": "I've fixed certain weird issues using ABS as a library project in eclipse by quitting eclipse and relaunching with the -clean option (on OS X, you can do this by running /Applications/eclipse/eclipse -clean from the terminal), doing a Build->Clean on both your project and the ABS project, and rebuilding. It seems the eclipse internal caches can get confused somehow, resulting in strange behavior with resources. \n. ",
    "nelenkov": "This has the side effect(?) of pushing the action items on top of the tabs in portrait mode on my N1. Is this intended? If so, anyway to revert to previous layout?\n. Works fine in landscape, but portrait has changed from one row to tow rows. \nHere's how it used to look with ABS 3.2:\nhttp://wwwjdic.googlecode.com/svn/branches/2.0/site/screenshots/dictionary.png\nHere's how it looks now:\nhttp://wwwjdic.googlecode.com/svn/branches/2.0/site/screenshots/two-row-ab.png\nI'd like to keep the original layout. I'll try to put a test project together.\n. Thanks, so it's not (directly) related to #84 then. I may try to override the layouts in my own project to keep the layout (for now). Not a big fan of the two row/split action bar idea, but we'll see :) \n. @franciscojunior I think it's a waste of space (precious on smaller screens), especially with only one or two action items.The ICS presentation shows how cool ICS on the Galaxy Nexus, but it will take quite some time till most people have a similar device.\n. The demo app from the market works fine. If I build it myself, or try to integrate into my project, I get the NPE. It does seem that it only happens when I add the plugin as a jar though -- if I add the preferences project as a library project, it works fine. Wonder what the difference is...\n. Thanks, will use the library project for now, seems to work fine. I'm using ADT15 FWIW. \nBTW, don't think this is related, but the package name in the manifest is 'com.actionbarsherlock.plugin.maps', and there are two R.java files in the library project. \n. It's looks like it's fixed now. I see you are no longer using inflate(). \nBTW, works even without using the dev branch. \n. Ah, here it is:\nhttps://github.com/JakeWharton/ActionBarSherlock/commit/a309e446872b76ff1da6f90e45bf13eb76083b2a\nWorks fine with latest 4.0-wip, I'll switch to wip until 4.0 is released. Long time no Maven, but it's all set up now. \n. I am adding it to android.R.id.content:\nSentenceBreakdownFragment breakDown = SentenceBreakdownFragment\n                    .newInstance(0, sentence, translation);\nbreakDown.setArguments(getIntent().getExtras());\ngetSupportFragmentManager().beginTransaction()\n                    .add(android.R.id.content, breakDown).commit();\n. I've had some more time to look into this, and apparently the problem is not the ListView, but adding the fragment to android.R.id.content. I've changed it to add the fragment to an empty FrameLayout and the view is displayed properly (i.e., under the action bar). \nhttp://code.google.com/p/wwwjdic/source/detail?r=862\nWhether this is a bug might be debatable, but it used to work with 3.5, and works with the native action bar on ICS, so at this should at least be documented. 'Don't use android.R.id.content directly'?\n. Thanks for the fix. I can confirm that with the latest changes, adding to android.R.id.content works as expected. \n. Thanks. I've starred the platform issue and will have a look at the share-action-provider branch when I get some more time. \n. It seems it's actually called the 'Play Store', although 'store' doesn't show up on https://play.google.com/store. The Android launcher shortcut is called 'Play Store' though. Go figure. \n. Thanks. I am actually using the dev branch, but it seems Eclipse hadn't picked up the updated files. Seems to be working fine. Sorry for the noise. \n. I tried this, but it seems to have no effect. Will experiment a bit more tomorrow. Probably shouldn't file issues after 1 o'clock though...\n. Scratch that, wrong style. Works as expected, just released a bug fix version of the app. \n. ",
    "franciscojunior": "I think nelenkov screens will get much better when the action bar buttons be able to flow to the screen bottom. This way you will get the tabs row at the top and the actionbar buttons at the bottom.\nAt least this was the impression I got from the ics presentation.\n. ",
    "enkoder": "First thing that I noticed after the upgrade is the Tab background images are stretched and look awful. If I run into any more problems, I will let you know. Thanks for your support Jake!\n. ",
    "LouieGeetoo": "enkoder, that stretching may be due to this bug with 9-patches in library projects in the ADT r14 preview: http://groups.google.com/group/adt-dev/browse_thread/thread/f1e1e801af487f36\nApparently it's been fixed in the final version but people are still having intermittent issues. See the last message for an apparent resolution (\"clean/compile all, clean/compile the main project\").\n. ",
    "atomusk": "Hi,\nI have the same issue with my app crashing on smartphone after upgrading to ADT 14.\nI get no issue with Honeycomb with actionbar displaying properly\nHere is the crash  Obenkyo beeing my app and \"main\" beein my main FragmentActivity:\n10-22 17:28:56.343: E/AndroidRuntime(13904): Caused by: java.lang.ClassNotFoundException: com.Obenkyo.Main in loader dalvik.system.PathClassLoader[/mnt/asec/com.Obenkyo-2/pkg.apk]\n10-22 17:28:56.343: E/AndroidRuntime(13904):    at dalvik.system.PathClassLoader.findClass(PathClassLoader.java:240)\n10-22 17:28:56.343: E/AndroidRuntime(13904):    at java.lang.ClassLoader.loadClass(ClassLoader.java:551)\nI have tried to update to the very last version and to reload the library without success.\nAlso, I have tried to compile the \"shakespeare\" sample working as expected on both smartphone and tablet. I will have to add features to this template to see where it could go wrong.\nRegards.\n. \"Main\" beeing my Fragment activity class in my com.Obenkyo Package, I wonder why it is ... :/\n. You are right my issue is not related. I have to investigate further. I will open another ticket if I find an issue (sorry for the mistake)\n. ",
    "ai212983": "Yeah, I had that issues about overriding interfaces (and they had another error messages), fixed by switching project sdk / language level. I'll recheck that, though.\n. Just rechecked it - with language level 6 (overrides for interfaces) and SDK 6 Update 20 problem is still here. I don't mind this issue closed though, as it works just fine with dummy methods in above-mentioned classes.\n. Yeah, thanks a lot for that - I love this IDE and would hate to move to Eclipse. =)\nThanks again.\n. That's funny. If in onCreateOptions method we will remove ActionView and reattach it again, then everything will work:\n``` java\n@Override\npublic boolean onCreateOptionsMenu(Menu menu) {\n    getMenuInflater().inflate(R.menu.main_menu, menu);\nMenuItem checkout = menu.findItem(R.id.menu_checkout);\nView checkoutActionView = checkout.getActionView();\nmCheckoutTextView = (TextView) checkoutActionView.findViewById(R.id.checkout_text);\n\ncheckout.setActionView(null);\ncheckout.setActionView(checkoutActionView);\n\nmCheckoutTextView.setText(\"wooot\");  // XXX: Now it will work fine! -df\n\nLog.w(\"Bento\", \"menuitem: \" + checkout + \", textView: \" + mCheckoutTextView + \", its text value: \" + mCheckoutTextView.getText() );\n\nreturn super.onCreateOptionsMenu(menu);\n\n}\n```\n. Thanks. I'm totally overloaded here (sry, has no time to check this bug on post-3 devices),  but I'll check it out once 3.5 is out. Any estimations on release?\nAnd thanks for your totally awesome work, btw. =)\n. Moreover, it has no separator now... I guess something is wrong with MenuItem.setActionView logic.\n. Any chance this bug will be fixed / looked into (or at least this issue commented) any time soon?\nLooks like showstopper severity to me. Maybe custom action views aren't used in many projects, but if they ARE used, 3.5.0 breaks project completely.\n. It's not working with both pre-ICS (Nexus S 2.2.3) and ICS (Galaxy Nexus 4.0.1) devices, btw.\n. Not sure how it will work on 4.0+, but I wasn't able to capture click event on pre-ICS device for some reason, making the whole idea of using custom action views in ABS meaningless. Besides, separators are still bugged. I guess the best idea would be to avoid custom action views at all...\nWill look into your demo though, thanks.\n. I guess it was made to avoid style changes in three different places... Planned to be in 4.0, though. Bad thing its quite unclear when 4.0 is out. =(\n. Actually, main problem with dark actionbar on white content for me is dark text color of action pupup menu items. Any suggestion how I can style it properly?\n. Just if someone will run into the same problem: you can do it with a hack, overriding primary text color in your Theme.Sherlock.Light subtheme, like: <item name=\"android:textColorPrimary\">#ffffffff</item>\nWill work fine with simple apps, when you can control every UI element. \n. AFAIK, the only way you can have both icon and text in actionbar is to create your own actionview, SHOW_AS_ACTION_WITH_TEXT is not mandatory for actionbar and doesn't work in portrait mode (both Sherlock and native)\n. ",
    "Xomo": "I have the same error while compiling using Android 4.0.1 with IDEA.\nUntil this is fixed I need to go back to Android 3.2 and everything is working well then.\nIt would be nice to keep this issue open!\nThanks.\n. Ok, I wrote the Android version to be sure we were speaking about the same issue and that was useful :)\nI'll wait for ABS 4, thanks!\n. Hi,\nI did found the issue: in landscape the tabView parent (HorizontalScrollView) is always visible and is messing with the listView.\nCheck out my fix:\nhttps://github.com/Xomo/ActionBarSherlock/commit/9b485fbc1718a95282a50c1d9fad20c72afa2908\n. Right!\nhttps://github.com/Xomo/ActionBarSherlock/commit/c22a00d1492c27730e6a16e88c8e26350274e550\n. ",
    "erickok": "Oops. Public now. And thanks in advance! \n. ",
    "petedoyle": "Thanks Jake, the dev branch definitely fixes this. :)  Seeing another issue that I'll file separately.\n. Nevermind on the other issue (mentioned above).  I had all my menu items' showAsActions set to always and was seeing too many items in the action bar.\n. On an original Droid, Android 2.3.7\n. Checking it out right now.  I personally wouldn't consider it a blocker for 4.0.\n. Sorry, its at a different resolution (1280x720 instead of 854x480) and the action order is different on ICS for some reason, but it looks like its measuring the text to determine when to overflow:\nhttp://cl.ly/3D3B1z2Q042K1j1A0e2g\nI can try to get one at 854x480 on ICS, but it might take a couple hours to boot up a new ICS emulator and sync data for my app.  The emulator is really slow for me.\n. OK, ICS 854x480:\nhttp://cl.ly/400d1T0R1N3S1R300903\nI have an XML file with all actions set to ifRoom|withText or never.\nIn addition, Edit Details and Stats are added programmatically with MenuItem.SHOW_AS_ACTION_ALWAYS | MenuItem.SHOW_AS_ACTION_WITH_TEXT.  \nI can't remember why I did a couple programmatically.  I can check that out.\nAlso, a couple are set to both hidden and invisible.\n. So ICS seems to show the same thing (even pushing the ... button offscreen).\n. Makes sense.  I think I was trying that to ensure those two actions would always be in the actionbar instead of overflowing to the popup menu.  I figured it would just push anything with ifRoom to the popup menu, but I can try some other ways to do that (probably just make them first in the XML file with ifRoom?).  I just noticed things getting pushed off-screen and thought it might be a bug.\nThanks again for all your crazy hard work, I'm really glad ABS exists.  And from what I can tell 4.0 is really nice (and much cleaner to use) than 3.x.  I was able to just drop in my jar from https://github.com/petedoyle/android-support-v4-googlemaps and go to town.  Really nice.\n. ",
    "xDragonZ": "That's weird , why i cant find any android.support.v4.app.SherlockPreferenceActivity in the latest 3.4.0 release? \nDid you forget to include it or it only available in demo only?\n. Thanks, and i got NPE too... i spend few hours on this... :/ trying this method now https://github.com/JakeWharton/ActionBarSherlock/issues/96#issuecomment-2613159\njava.lang.RuntimeException: Unable to start activity ComponentInfo{com.xxx.xxxcom.xxx.xxx.ui.np}: java.lang.NullPointerException\nat android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1768)\nat android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:1784)\nat android.app.ActivityThread.access$1500(ActivityThread.java:123)\nat android.app.ActivityThread$H.handleMessage(ActivityThread.java:939)\nat android.os.Handler.dispatchMessage(Handler.java:99)\nat android.os.Looper.loop(Looper.java:130)\nat android.app.ActivityThread.main(ActivityThread.java:3835)\nat java.lang.reflect.Method.invokeNative(Native Method)\nat java.lang.reflect.Method.invoke(Method.java:507)\nat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:847)\nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:605)\nat dalvik.system.NativeStart.main(Native Method)\nCaused by: java.lang.NullPointerException\nat android.support.v4.app.SherlockPreferenceActivity.ensureSupportActionBarAttached(SherlockPreferenceActivity.java:156)\nat android.support.v4.app.SherlockPreferenceActivity.onCreate(SherlockPreferenceActivity.java:262)\nat com.xxx.xxx.ui.np.onCreate(np.java:22)\nat android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1047)\nat android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1722)\n... 11 more\njava.lang.NullPointerException\nat android.support.v4.app.SherlockPreferenceActivity.ensureSupportActionBarAttached(SherlockPreferenceActivity.java:156)\nat android.support.v4.app.SherlockPreferenceActivity.onCreate(SherlockPreferenceActivity.java:262)\nat com.xxxpxxxl.ui.np.onCreate(np.java:22)\nat android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1047)\nat android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1722)\nat android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:1784)\nat android.app.ActivityThread.access$1500(ActivityThread.java:123)\nat android.app.ActivityThread$H.handleMessage(ActivityThread.java:939)\nat android.os.Handler.dispatchMessage(Handler.java:99)\nat android.os.Looper.loop(Looper.java:130)\nat android.app.ActivityThread.main(ActivityThread.java:3835)\nat java.lang.reflect.Method.invokeNative(Native Method)\nat java.lang.reflect.Method.invoke(Method.java:507)\nat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:847)\nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:605)\nat dalvik.system.NativeStart.main(Native Method)\n. I think this issue can be closed because I did't receive any crash report about this issue anymore.\n. So you mean this error will not effect the performance of the app or crash the application?\n. It is possible to have PreferenceFragment / SherlockPreferenceFragment support for up coming ActionBarSherlock?\nBecause I want to use PreferenceFragment with Sherlock from Android API less than 3.0 \n. Please refer to this https://github.com/JakeWharton/ActionBarSherlock/issues/537#issuecomment-6741966\n. 10-12 17:21:07.869: E/AndroidRuntime(29713): FATAL EXCEPTION: main\njava.lang.NullPointerException\nat android.view.View.dispatchRestoreInstanceState(View.java:6295)\nat android.view.ViewGroup.dispatchRestoreInstanceState(ViewGroup.java:1211)\nat android.view.View.restoreHierarchyState(View.java:6279)\nat com.actionbarsherlock.internal.view.menu.MenuBuilder.restoreActionViewStates(MenuBuilder.java:361)\nat com.actionbarsherlock.internal.ActionBarSherlockCompat.preparePanel(ActionBarSherlockCompat.java:503)\nat com.actionbarsherlock.internal.ActionBarSherlockCompat.dispatchInvalidateOptionsMenu(ActionBarSherlockCompat.java:272)\nat com.actionbarsherlock.app.SherlockFragmentActivity.invalidateOptionsMenu(SherlockFragmentActivity.java:150)\nat com.evozi.apps.ui.activity.onNavigationItemSelected(activity.java:169)\nat com.actionbarsherlock.internal.widget.ActionBarView$1.onItemSelected(ActionBarView.java:147)\nat com.actionbarsherlock.internal.widget.IcsAdapterView.fireOnSelected(IcsAdapterView.java:861)\nat com.actionbarsherlock.internal.widget.IcsAdapterView.access$2(IcsAdapterView.java:854)\nat com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier.run(IcsAdapterView.java:827)\nat android.os.Handler.handleCallback(Handler.java:587)\nat android.os.Handler.dispatchMessage(Handler.java:92)\nat android.os.Looper.loop(Looper.java:130)\nat android.app.ActivityThread.main(ActivityThread.java:3835)\nat java.lang.reflect.Method.invokeNative(Native Method)\nat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:864)\nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:622)\nat dalvik.system.NativeStart.main(Native Method)\nLine 169 :\ninvalidateOptionsMenu();\ninside \npublic boolean onNavigationItemSelected(int itemPosition, long itemId) {\nUsing ABS 4.2.0 on GB(2.3.7) and got NullPointerException too.\nActionBar.NAVIGATION_MODE_LIST\n\nSherlockFragmentActivity implements ActionBar.OnNavigationListener\n\nSteps to reproduce :\n- Open the application\n- Press power button to turn screen off\n- Leave a few seconds\n- Press power button to turn screen on\n- Select another navigation item in the list\n- Application crash\n. ",
    "bhanupriyach": "still not working\n. ",
    "shashidhar502": "How to avoid actionbar animation while hiding or showing ?\n. i want to use actionbar sherlock even though if the api is greater than 14..\ni dont want to use actionbar Native how ?\n. ",
    "onecoders": "How to remove the Animation ActionBar show/hide?\nWhen actionbar.hide() is called, the ActionBarWrapper's hide() is called, not ActionBarImpl's.\nHow to solve this, please give me help.\nThanks.\n. ",
    "jondwillis": "The tab bar has a slightly off-black color, and scroll horizontally to support extra tabs.\n\n. Yes, sorry, my brain's not working 100% today. I meant to do that in the first screenshot. But yeah, that separate grey background seems to be the case.\n\n. Thanks, I switched to the dev branch to try it out and this is working beautifully. The only suggestion I would have is to include the little light grey divider in between tabs for consistency with ICS. Also, are you planning on implementing the scrolling tab bar from ICS?\n. Ah, that might explain why it showed up today for me. I might've been compiling against your dev branch prior to today. Thanks and keep up the good word! Can't wait to see 4.0 finished.\n. ",
    "ghost": "okay i got it thanks so...it will compile with 3.2 but it can also run on earlier version right like google iosched project\n. This is using the 4.0 Release Candidate.\n. Oh true, you are right, I also occurs in the Gmail app. I thought I had\nchecked , but it apparently I did not :).\nThanks for the prompt answer.\n2012/3/13 Jake Wharton <\nreply@reply.github.com\n\nThis is a native bug in Android that does not exist in the library\n(strangely enough). You can observe its behavior in the native apps like\nGMail.\nI had initially assumed it was the onOptionsItemSelected blocking the UI\nthread for a fraction of a second causing the text's state to remain in\n'selected' but it doesn't appear to be the case. I guess it has to do with\ndifferences between the native ListPopupWindow and my backport\nIcsListPopupWindow.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/376#issuecomment-4477233\n. I had the very same issue on Android 2.2.2. The menu had been drawn correctly, but it wouldn't react  on click events until the Fragment had been switched at least once.\nThe Message containing the \"click event\" was only dispatched after the Fragment disappeared. After this, the onClick() and the dispatchX methods worked as expected only stopping at the isAdded/isVisible test in the Watson.class\n\nI finally solved it by using the proposed \"patch\" in https://github.com/jakewharton/actionbarsherlock/issues/272 (exchanging ICSLinearlayout with a standard LinearLayout)\nSo in a wild guess, i would think that ICSLinearLayout is blocking/spamming the message queue somehow.\n. frisco82, can you provide your workaround in detail?\n. thanks, i'm going to try this out\n. I was not sure where this implementation actually resides, my hope was that it's in an AOSP class which you \"just\" extend making it reachable with a trick.\nIn this case though, thanks for the heads up, Jake!\n. I had the same problem here. I'm not doing much in my app related to ABS yet so I think it is probably a real bug.\n. sorry, it is a question, i am new to github. please close this issue, i will ask it on stackoverflow\n. Oh forget my issue, I had to add the exclusion also for com.viewpagerindicator.\n. Still no solution ??\n. Still looks like going with -dontwarn is the best solution.\n. ",
    "thorinside": "Thanks, I'll give that a whirl.\n. Sorry, your solution wouldn't work even after I made the following substitutions:\nattr -> item and 0x -> # \nI needed to remove line 88 from abs__action_bar.xml to get that working.\n. Thanks!\n. I am seeing this on a 2.1 emulator too. Just getting my head wrapped around all of the great 4.0-wip changes.\n. Well, abs__simple_spinner_item doesn't exist in the 4.0-wip branch. I've been trying to figure out how to make my spinner items have the right text colour for a while now. I have a couple of incomplete workarounds so far.\n. I must riding in the 4.0-wip branch today. I'll check for the beta.\n. I've pulled from your 4.0-wip branch and have confirmed that the action bar unsplits now. Thanks.\n. Okay. I'm a little sad that ABS doesn't use the native action bar, but if we can't tell the difference, who'd be the wiser? :)\n. The font is small, and actually different too. In ICS the font is some sort of smallcaps font. It looks nice, but I can live without the small caps as long as the font size is similar.\n. Reasonable. I haven't seen the problem since I started using icons. I suspect it was just a text layout issue.\n. I've tried the sample app, and it seems to be working as advertised. I'm not sure, yet, how my application gets confused. Still looking, this may indeed be an issue somewhere in my code.\n. Okay, yes, it was a problem with my code. It was so embarassing that I'll keep the details to myself. Oh, by the way (to change the subject quickly) thanks so much for all of your hard work on ABS. You are, indeed, the man (and I am not).\n. ",
    "bhucker": "How would I change the color of the bars at the bottom of the tabs that show which tab is selected?\n. Thank you, but I have tried modifying the images named, for example,\nabs__tab_selected_holo.9.png. I changed all the ones with \"selected\" in the\nname within drawable-hdpi, drawable-mdpi and drawable-xhdpi. It seemed to\nhave no effect. Are these the right images?\nI was looking at the drawables mentioned in abs__tab_indicator_holo.xml.\n--Bob\nOn Wed, May 30, 2012 at 12:22 PM, Jake Wharton <\nreply@reply.github.com\n\nwrote:\nThe tab backgrounds are a state-list drawable. You provide different\n9-patches for the selected state.\nOn May 30, 2012 12:19 PM, \"Bob Hucker\" \nreply@reply.github.com\nwrote:\n\nHow would I change the color of the bars at the bottom of the tabs that\nshow which tab is selected?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/108#issuecomment-6018786\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/108#issuecomment-6018852\n. \n",
    "rock3r": "I have solved the problem. Had to remove <item name=\"android:windowNoTitle\">true</item> from my styles xml. This took me a fairly long styles debugging session. Guess you should write it down somewhere in the docs :)\n. Yup, that is the target and that call does indeed enable the Home button. It's just the most obvious thing, the one that I tend to rule out, that works in the end. Sorry I wasted your time, just dodn't know it's disabled by default (I'm used to v3.x and assumed it's enabled by default). Better add that to documentation, thou.\nThanks again for the great work!\nPS: about my indeterminate progress bar and padding/margin, I'm not opening another issue unless you tell me so...\n. ",
    "roflharrison": "OK, will give this a shot, sorry for the invalid isse\n. ",
    "sealskej": "This bug is invalid. We have upgraded maps plugin yet and everything works fine.\n. Thanks! I appreciate your work.\n. Thanks.\n. ",
    "SelvinPL": "List navigation not working ... not only in landscape but at all on samsung galaxy tab(P1000) with 2.3.3(it was working few (library, not android) versions ago but i don't know exactly version's number)  ... but it's workig on galaxy s(GT-I9000) with 2.3.5 ... \nEDIT: on GT-I9000 not working in landscape too :/\nsome meaningless logcat output: (0 on touch Down, 1 on touch Up)\n12-12 11:29:49.574: I/InputReader(135): dispatchTouch::touch event's action is 0\n12-12 11:29:49.574: I/InputDispatcher(135): Delivering touch to current input target: action: 0, channel '409bb880 pl.osadkowski.mobiletrader/pl.osadkowski.mobiletrader.ui.Goods.GoodsListActivity (server)'\n12-12 11:29:49.671: I/InputReader(135): dispatchTouch::touch event's action is 1\n12-12 11:29:49.671: I/InputDispatcher(135): Delivering touch to current input target: action: 1, channel '409bb880 pl.osadkowski.mobiletrader/pl.osadkowski.mobiletrader.ui.Goods.GoodsListActivity (server)'\n. you should add null check before \nmTabsScrollView.setVisibility(isTab ? View.VISIBLE : View.GONE);\ncoz it will crash on devices where it works before ...(coz there is no R.id.abs__nav_tabs_layout view in layout there)\nif(mTabsScrollView!=null)\n    mTabsScrollView.setVisibility(isTab ? View.VISIBLE : View.GONE);\n. ",
    "pechlambda": "Yep, seems that you are right about home icon's states. \nBut there is another thing: \"selectableItemBackground\" option isn't respected by home button as well, but it is respected on 3.0+ devices (WARNING: don't try to test it on Samsung devices, it doesn't respect this option even for action bar buttons other than home, as usual with Samsung). Tested and confirmed.\nMaybe that was already fixed in post 3.4.2 commits?\n. This issue bugs me as well. The action bar button doesn't dispatch pressed state until any other UI event is happened, for instance, pressing a button (hw or sw), scrolling a list, etc. Can reproduce this in both 4.0.1 and 4.1.0\n. ",
    "AndroidDeveloperLB": "I'm having this problem too, and I don't understand it. \nWhy is this issue closed?\nHow do I fix it?\n. @JakeWharton Could you please refer me to a working class that acts the same, or give me a clue how to do it?\nAlso, doesn't it mean I've found a problem with a class that you are using within the library, that could affect future library versions?\nI've even used IcsListPopupWindow and IcsProgressBar\n. @JakeWharton In which way exactly? and why?\nAnd even if they are meant to be used by consumers, why can't they have this prefix?\n. What's the difference?\nI mean, people could override them just as they could override any resource that starts with \"abs__\", no?\n. But those files didn't follow the convention...\nWouldn't it be better to have all of those files have this prefix, and maybe for files you don't wish other to override, add extra text to the prefix?\nHow do you know which files exactly you can use from the library, to override , customize, etc ... ?\n. What about Java code? which files are OK to be used/customized/extended ?\nIs there a convention there too?\nMaybe you should add a comment at the top of such files, to tell whoever uses the library about such things...\n. What about Java code? which files are OK to be used/customized/extended ?\n. I see.\nCould you please consider adding a comment to the resources files that are allowed to be customized (like those I've mentioned) ?\n. But you've written that you can customize resources - the files I've mentioned.\nI'm confused.\n. Is it OK to make files with the same name as those that don't have the special prefix (therefore overriding them, and allowing the developers to customize them ) or not?\nIf so, can you please consider adding a comment to tell others it's ok ?\n. But you've just said that files without this prefix are safe to be customized, as opposed to those that have this prefix.\nIf those files are internal to the library and shouldn't be overridden, then they should have this prefix too.\nThat's the logic I understand of this prefix.\n. So you want them to be safe from being overridden, yet you don't give them the same naming protection as the other files?\nI thought that using is the same as customizing, just like I'm allowed to use Java files and therefore can also extend them and customize them. You've just said that Java files in the internal package are unsafe, while the others are safe.\nIf I use this same logic on XML files, it doesn't match what you've said... :(\n. you have a point, but there is more than 1 way to use a layout a library gives me for tinkering:\neither copy its content to a new file with the same name (therefore overriding it), or use  tag.\nif you don't want that I'd copy its content , and wish to protect what is written, use the same technique you've done for the other files. When it has a different file name, it \"creates\" (sorry, English isn't my main language) questions about its usage.\nmaybe have an additional text to the prefix, saying it should/shouldn't be used (depending on your preference).\n. ",
    "ajmalsalim": "Hi,\nI am using SlidingMenu along with ABS. So as usual I have 2 fragments. One is MenuFragment and other is ContentFragment. In ContentFragment, I would like to add two tabs in which a TextView in one Tab and a MapView in other Tab. I have tried many solutions but none of them are working as expected. \nI cannot extend FragmentMapActivity as I have extended SlidingFragmentActivity :P\nI have tried this: http://xrigau.wordpress.com/2012/03/15/using-an-actionbar-in-your-application-with-actionbarsherlock/ and it worked !\nBut now when I click on the other fragments and come back to this fragment, both the layout disappeared.  :(\nAny help will be really appreciated :)\n. ",
    "Cpasjuste": "Yes, if i do that it works but the tabs (ActionBar.Tab: Downloads,Filer,Logs on the screenshot) are hidden too.\nBy the way, here is the (good) result on my galaxy note (when using the code on my first message) : http://imageshack.us/photo/my-images/845/actionsherlockbug2.png/\n. ",
    "monicager": "Hi, Sherlockbar is a great api!, and sorry that I'm commenting here, but i need to split the action bar in Tablets 7\", then I deleted de abs__bools from w480 and I put this in values xlarge, but it doesn't work, I tried deleting abs__bools from xlarge too, and no works, what should i do?\nThanks very very much!\n. Hi Jake, thanks for your quick response, yes I'm trying in android 4.1.1, then is not possible in newer devices?\n. ",
    "marcosbeirigo": "Is it avaible on build 3.5.1?\n. ok, I'll try 4.0.\nThank you\n. ",
    "zhen9ao": "Current 4.0-wip branch don't have this problem, the overflow shows automatically. But It only worked for the activity extends SherlockActivity or SherlockFragmentActivity, won't work for the Activity extends an customize base Activity which extends SherlockActivity, and in this case, have to set absForceOverflow to true to make the overflow work.\n. Maybe I think in the git thery, it's all about blacklisting, but not whitelisting, am I right?\n. Yeah, it passed.\n\n[INFO] Reactor Summary:\n[INFO] \n[INFO] ActionBarSherlock (Parent) ........................ SUCCESS [0.432s]\n[INFO] ActionBarSherlock ................................. SUCCESS [29.533s]\n[INFO] Sample (Parent) ................................... SUCCESS [0.005s]\n[INFO] Sample: Demos ..................................... SUCCESS [20.754s]\n[INFO] Sample: Fragments ................................. SUCCESS [18.563s]\n[INFO] Sample: RoboGuice ................................. SUCCESS [18.634s]\n[INFO] Sample: Styled .................................... SUCCESS [16.496s]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 1:45.547s\n[INFO] Finished at: Tue May 08 11:04:00 GMT+08:00 2012\n[INFO] Final Memory: 24M/81M\n[INFO] ------------------------------------------------------------------------\n. Done\n. After changing the explicit version to ${project.version}, the IDE still complain.\n\nI found that Intellij doesn't import the right jar dependency but rather there are two apklib dependencies of Library, one Compile the other Provided.\n. Roboguice-sherlock requires com.actionbarsherlock.library 4.0.2 as a provided one, do we have to change the dependency version of sample-roboguice to 4.0.2?\n. Maybe this is a bug of Intellij, similar to this http://youtrack.jetbrains.com/issue/IDEA-81856\n. Are you using the HEAD of master branch, cause your error message shows it's version 4.0.1, it should be 4.0.2 now.\n. Try the latest code, it should be JakeWharton-ActionBarSherlock-4.0.2-0-gcf437ed\n. Seems no need of this cleanup.\n. It looks like this in my ROM:\nDefault: http://d.pr/i/yK3b\nLight: http://d.pr/i/cvHs\nLight(Dark ActionBar): http://d.pr/i/YkX2\n. It's what it looks like of the sample-demo app of ActionBarSherlock, the Preferences activity.\n. ",
    "shreeshga": "In ActionBarSherlock.java\n@Override\n    public boolean onKeyUp(int keyCode,KeyEvent event) {        \n        if ( keyCode == KeyEvent.KEYCODE_MENU ) {\n            getSupportBar().dispatchOpenOptionsMenu();        \n            return true;\n            }\n        return false;\n   }\ninstead of\n@Override\n    public final boolean onPrepareOptionsMenu(android.view.Menu menu) {\n        return mSherlock.dispatchPrepareOptionsMenu(menu);\n    }\nFixes the issue\n. I just debugged and ...\nJava\n//icsListPopupWindow.java\nprivate int measureHeightOfChildren(int widthMeasureSpec, int startPosition, int endPosition,\n            final int maxHeight, int disallowPartialChildPosition) {\n....\n//int returnedHeight = 0;//DropDownList.getTop() + mDropDownList.getBottom();\nint returnedHeight = 0;\nicsListPopupWindow.show() is called multiple times and the padding keeps getting added and hence returnedHeight overflows. Need to debug more to understand the issue though :-/\n. ",
    "daverix": "Also needed for the actionmode. You should be able to either press the done-button or press back. Only done works now.\n. I now use this in my Activity. I thought you (ChrisSmitch) was right but it still adds items using this approach:\n``` java\npublic class LoginActivity extends FragmentActivity {\n    private LoginFragment mFragment; \n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    if(mFragment == null) {\n        FragmentTransaction ft = getSupportFragmentManager().beginTransaction();\n        mFragment = new LoginFragment();\n        ft.add(android.R.id.content, mFragment);\n        ft.commit();\n    }\n}\n\n}\n```\n. This is working, so it's my fault. ChrisSmitch was right. (Thank you btw) Closing the issue...\n``` java\npublic class LoginActivity extends FragmentActivity {\n    private LoginFragment mFragment; \n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    mFragment = (LoginFragment) getSupportFragmentManager().findFragmentByTag(\"loginFragment\");\n\n    if(mFragment == null) {\n        FragmentTransaction ft = getSupportFragmentManager().beginTransaction();\n        mFragment = new LoginFragment();\n        ft.add(android.R.id.content, mFragment,\"loginFragment\");\n        ft.commit();\n    }\n}\n\n}\n```\n. Does this mean we can use the support package from google instead of the modified support plugin delivered with ABS?\n. Don't know how to attach a zip, could maybe just make a repo but I'm pasting an example class here instead...\nandroidmanifest.xml:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<uses-sdk android:minSdkVersion=\"7\" android:targetSdkVersion=\"14\" />\n\n<application\n    android:icon=\"@drawable/ic_launcher\"\n    android:label=\"@string/app_name\"\n    android:theme=\"@style/Theme.Sherlock.Light\">\n    <activity\n        android:name=\".FastscrollbugActivity\"\n        android:label=\"@string/app_name\" >\n        <intent-filter>\n            <action android:name=\"android.intent.action.MAIN\" />\n\n            <category android:name=\"android.intent.category.LAUNCHER\" />\n        </intent-filter>\n    </activity>\n</application>\n\n\n```\nFastscrollbugActivity.java:\n``` java\npackage net.daverix.fastscrollbug;\nimport java.util.ArrayList;\nimport java.util.List;\nimport com.actionbarsherlock.app.SherlockListActivity;\nimport android.content.Context;\nimport android.os.Bundle;\nimport android.widget.ArrayAdapter;\nimport android.widget.SectionIndexer;\n/\n * This is an example class for the bug in ActionbarSherlock RC 1\n * concerning the fast scroll style on versions earlier than ICS.\n * \n * @author David Laurell david@laurell.nu\n\n/\npublic class FastscrollbugActivity extends SherlockListActivity {\n    / Called when the activity is first created. */\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n    //how many items in list\n    int count = 500;\n\n    //create list with numbers\n    List<String> items = new ArrayList<String>();\n    for(int i=0;i<count;i++) {\n        items.add(\"\" + (i+1) );\n    }\n\n    //init adapter\n    MyAdapter adapter = new MyAdapter(this, 5, items);\n    setListAdapter(adapter);\n    getListView().setFastScrollEnabled(true);\n}\n\n/**\n * Simple adapter that implements the SectionIndexer so that we can show the \n * fast scroll dialog that gets wrong color on the text.\n * \n * @author David Laurell <david@laurell.nu>\n *\n */\nprivate class MyAdapter extends ArrayAdapter<String> implements SectionIndexer {\n    private List<String> mSections;\n\n    public MyAdapter(Context context, int sections, List<String> items) {\n        super(context, android.R.layout.simple_list_item_1, android.R.id.text1, items);\n\n        //create some sections\n        mSections = new ArrayList<String>();\n        for(int i=0;i<sections;i++) {\n            mSections.add(\"\" + (i+1));\n        }\n    }\n\n    @Override\n    public int getPositionForSection(int section) {\n        return section * (getCount() / mSections.size());\n    }\n\n    @Override\n    public int getSectionForPosition(int position) {\n        return position / (getCount() / mSections.size());\n    }\n\n    @Override\n    public Object[] getSections() {\n        return mSections.toArray();\n    }\n}\n\n}\n```\nHere is how it looks:\n\n. ",
    "MarcusWolschon": "A workaround for the app, until this is fixed would be:\nprivate ActionMode mActionMode = null;\n  ...\n   mActionMode = startActionMode(new ActionMode.Callback() {\n       ...\n@Override\n        public void onDestroyActionMode(ActionMode mode) {\n            mActionMode = null;\n        }\n    });\n....\n   @Override\n    public void onBackPressed() {\n        if (mActionMode != null) {\n            mActionMode.finish();\n            return;\n        }\n. This may be related: I see the indeterminate spinner drawn on top of a CustomView that has gravity RIGHT.\n. To fail fast I found it very rewarding to do strict input checking whereever possible.\nAt least checking for null arguments.\n. cool! Thanks\n. Cool!\nOn Thu, Feb 9, 2012 at 14:43, Jake Wharton <\nreply@reply.github.com\n\nwrote:\nThis should be handled properly on [calls to setContentView(View,\nLayoutParams)][1]. Or are you referring to something else?\n[1]:\nhttps://github.com/JakeWharton/ActionBarSherlock/blob/88d255c885b33a27c8dcaab2a1fb2e21a209a0aa/library/src/com/actionbarsherlock/internal/app/ActionBarWrapper.java#L33-42\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/233#issuecomment-3887460\n. Oh, i wasn't aware they changed this in 2.1 .\n. A customView with gravity right...\n\n``` java\nfinal ActionBar supportActionBar = getSupportActionBar();\n            final ImageView dashboard = new ImageView(this);\n                final LayoutParams layoutParams = new ActionBar.LayoutParams(\n                        LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT,\n                        Gravity.RIGHT | Gravity.CENTER_VERTICAL);\n            dashboard.setLayoutParams(layoutParams);\n        dashboard.setImageDrawable(this.getResources().getDrawable(\n                R.drawable.icn_raster));\n        supportActionBar.setCustomView(dashboard);\n\n```\nand in onCreate:\njava\n        requestWindowFeature(Window.FEATURE_PROGRESS);\n        requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);\n                super.onCreate(savedInstanceState);\n        setContentView(R.layout....);\nand then actually show the spinner at some random point in time while the activity is showing.\njava\n        setSupportProgressBarVisibility(true);\n        setSupportProgressBarIndeterminateVisibility(true);\n        setSupportProgress(Window.PROGRESS_END);\n. When the spinner runs for just a second or so, it looks like it is\nsuperimposed on the customView because the customView has not yet\nanimated/moved to the left.\nBefore it gets a chance to do so, the spinner is already gone.\nIs there a way to get the spinner to display to the left of the customView?\nThat would be a simple solution without having icons shifting around.\nThis way http://i.imgur.com/18zny.png looks quite wrong.\nOn Fri, Feb 10, 2012 at 04:42, Jake Wharton <\nreply@reply.github.com\n\nwrote:\nWhen I use setCustomView(dashboard, layoutParams) I don't see the\nproblem (I think).\nIs this what it's supposed to look like or is this the bug?\nhttp://i.imgur.com/K7La1.png\nhttp://i.imgur.com/kUaVt.png\nhttp://i.imgur.com/18zny.png\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/237#issuecomment-3900716\n. \n",
    "JamesCurry": "Yes, it is 4.0 and does look like it's related to #150 (so feel free to close this).\n. ",
    "yanchenko": "Agreed concerning the same height.\nlibrary/res/layout/abs__action_bar.xml should then have\n82 - android:layout_height=\"44dp\"\n82 + android:layout_height=\"?attr/abHeight\"\n. Yeah, I've seen it's package name, but I need a thing like that now. Replacing this with getSupportActionBar().getThemedContext() didn't change anything. Are there any other options?\n. Jake, thanks. Proper adapter context solved it.\n. ",
    "dcaunt": "Sorry, I'd tried absForceOverflow but had applied it to the wrong style. You're absolutely right, thank you.\n. I'm seeing this when scrolling a ListView on a phone and opening the overflow menu. It seems more likely to happen if the list is scrolling quickly, but it doesn't always happen. Height varies, doesn't always fill the screen.\n. I see that this can be used to make an Activity look like a Dialog, but does it allow us to make pre-honeycomb Dialogs look like Holo Dialogs?\n. ",
    "beafdefx": "Thanks for the quick response.  The short term plan sounds like it will work.\n. ",
    "billy1380": "Sound great... looking forward to it... Keep up the amazing work.\n. ",
    "carlospuk": "This is for beta 5 of ABS v4.0.\nThe docs do suggest that a title attribute is always set, but it might be useful to handle it more gracefully.\n. Actually, I'm closing this, because I just tried it on actual API 15 and it does the same.\nC\n. Note that I've had to hard-code the background and text colors in my adapter XML otherwise some themes display the dialog text as white-on-white, i.e. invisible.\n. Okay, I've spent a few hours on this one and, after much hair-tearing, have pinned it down to a null window background issue.\nMy activity's theme is:\n<style name=\"Theme.BCBase\" parent=\"Theme.Sherlock\">\n    <item name=\"android:windowNoTitle\">true</item>\n    <item name=\"android:windowBackground\">@null</item>\n</style>\nIf I comment out the windowBackground attribute, then the problem goes away.\nI've made an entire sample project to demonstrate it, you can grab it here:\nstatic.fatattitude.com/dump/sampleabsissue.zip\nHope this helps,\nCarlos\n. For performance reasons.  It's recommended here:\nhttp://android-developers.blogspot.com/2009/03/window-backgrounds-ui-speed.html\nMy app uses a full-screen map view, and I quote:  \". This trick comes in very handy for any app that uses a MapView, a WebView or any other full screen opaque view.\"\n. I know, pretty crazy huh?  I tried actionBar.setBackgroundDrawable(null);  as a workaround but it didn't seem to fix the issue.\nThanks for looking into this.\n. I can also confirm that the issue doesn't appear using the native actionbar, i.e. ActionBarSherlock with API level 14.\nI'll try that workaround now.\n. That workaround solves the overlap issues I was experiencing with the navigation drop-down.  Unfortunately, the background drawable doesn't seem to be applied to the bottom (split) portion of the action bar.  Therefore, MenuItems on this bottom section fail to correctly un-highlight after being touched.  Presumably, the background of the bottom strip remains transparent.\nFor now, I'm going to stick with keeping the window opaque.\nBy the way, Chris, the reason I suggested passing null to setBackgroundDrawable was something I read in the documentation :\n\n\" Setting the background to null will make the window be opaque. \"\n. Suggest closing this issue now and treating as duplicate of #193\n. Certainly wouldn't expect you to block the release on account of it.  That said, because Google specifically recommends setting a null window background for performance reasons in some cases, it may be an issue that requires a Wiki entry somewhere or extra guidance in the usability notes.\n. Just out of curiosity on my part, can you expand on this?  Wondering what exactly is the issue.\n. Ah, now I understand what you are talking about - thanks.  It wasn't that I didn't agree, it was that I didn't understand what \"Proxy to Native Action Bar on API 14+\" meant - i.e. \"there is an issue because of a proxy\" vs \"we must implement a proxy\".\n\nYes, I think it's a bold but necessary decision - and by making the decision now, at least developers can make intelligent choices based on the knowledge that the implementation of the AB is not a static one.\nExcellent library, by the way.\n. Thanks Jake - appreciate the additional clarification about the attributes too\n. ",
    "christopherperry": "This is still happening. I'm seeing it on the Galaxy S running 2.3.7. It's fixed on my ICS device.\n. I uploaded a zip file to Google docs and shared it with you.\n. Ok, shared the zip with you on Google docs.\nOn Wed, Feb 8, 2012 at 8:55 PM, Jake Wharton <\nreply@reply.github.com\n\nwrote:\nCan you provide a super minimal test case in a .zip or the activity in a\npastebin somewhere? I can debug it very rapidly tomorrow with one.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/187#issuecomment-3882080\n. Maybe the key is the \"virtually\" identical part.\nOn Feb 10, 2012 7:01 PM, \"Jake Wharton\" \nreply@reply.github.com\nwrote:\nIf someone smart wants to give this a try, here's the zip:\nhttp://dl.dropbox.com/u/6602046/ABS-release4-issue187.zip\nMaybe someone like @SimonVT, the miracle worker :)  I've tried just about\neverything I know. It has something to do with repeated invalidation of the\noptions menu not triggering the aforementioned method which would cause the\nview to update. If you compare all the relevant class files they're\nvirtually identical. I'll keep at it but it's currently escaping me.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/187#issuecomment-3918140\n. lol thanks. I'll push an update tonight sometime and send you a copy\nOn Feb 11, 2012 10:07 AM, \"Jake Wharton\" \nreply@reply.github.com\nwrote:\n@christopherperry Fixed! g0g0g0!\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/187#issuecomment-3922270\n. @scompt You could set Build.VERSION.SDK_INT in your test runner, I'm not sure why Robolectric doesn't set this for you based on the info in your AndroidManifest.xml, it is a useful value to set. Several projects I've worked on have logic flows based on Android version. For example, you could set it based on the OS version you built Robolectric against:\n\n``` java\npublic class CustomTestRunner extends RobolectricTestRunner  { \nprivate static final int SDK_INT = Build.VERSION.SDK_INT;\n\npublic CustomTestRunner(Class<?> testClass) throws  InitializationError { \n    super(testClass); \n}\n\n@Override \nprotected void bindShadowClasses() { \n    super.bindShadowClasses(); \n    Robolectric.bindShadowClass(ShadowSherlockActivity.class); \n}\n\n@Override \npublic void beforeTest(final Method method) { \n        final int targetSdkVersion = robolectricConfig.getSdkVersion(); \n        setStaticValue(Build.VERSION.class, \"SDK_INT\", targetSdkVersion); \n}\n\n@Override \npublic void afterTest(final Method method) { \n        resetStaticState(); \n}\n\n@Override \npublic void resetStaticState() { \n        setStaticValue(Build.VERSION.class, \"SDK_INT\", SDK_INT); \n}\n\n} \n```\n. @JakeWharton I'm curious, what will you be dropping Robolectric for? I know Pivotal had a Robolectric 2.0 that was never released to the public, based on actual implementations of Android but it was far from being released. From what I've seen Robolectric is the only way to do effective TDD on Android. Anything that has to run on an emulator will be useless IMO.\n. @JakeWharton That's odd, I haven't noticed Robolectric being slow, especially compared to other 'run your tests on the emulator' type solutions. As far as implementation, it's not meant to be an exact duplication of Android and doesn't claim to be. I don't know at what level you are testing things (I tend to test more behavior rather than implementation details), but I've found it to be quite adequate, and I'm pretty grateful for its existence, given that Google didn't give us developers a proper way to unit test our code. Of course you can use straight JUnit on your pojos, but as far as trying to run Android on the JVM I'm at a loss. Care to share your solution?\n. ",
    "ljian": "hi,i still have this problem on moto with android2.3,the item radomly disappear in the activity which has a viewpager.i use the lastest version\n. ",
    "diegogusava": "Ljian ... I am with same problem .. did you resolve?\n. ",
    "naoak": "Completely works well!\nThank you, Chris.\n. I've checked it works properly. Great!\n. No. My manifest file is simple like this.\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\npackage=\"com.test.mypackage\"\nandroid:versionCode=\"1\"\nandroid:versionName=\"1.0\" >\n<uses-sdk android:minSdkVersion=\"7\" android:targetSdkVersion=\"15\" />\n<application\n    android:icon=\"@drawable/ic_launcher\"\n    android:label=\"@string/app_name\"\n    android:theme=\"@style/Theme.Sherlock\" >\n    <activity android:name=\".MainActivity\"\n        android:label=\"@string/app_name\"  >\n        <intent-filter>\n            <action android:name=\"android.intent.action.MAIN\" />\n            <category android:name=\"android.intent.category.LAUNCHER\" />\n        </intent-filter>\n    </activity>\n</application>\n</manifest>\nAnything wrong with this?\nShould be target sdk 14?\n. Thanks Jake.\nI created a repo for this issue.\nhttps://github.com/bossturbo/testabs\n. No. Both are the beta 6 version. \nI'll test  on other environments, but it may take a while.\nSorry to take up your time.\n. Sorry, I was badly held up on building support-lib plug-in with maven...\nI met the same issue on 2.3.3 emulator with the latest from 4.0-wip.\nChanging device orientation with option menu open surely causes my app to crash.\n. I met the same issue, if I change the file Simple.java in demos to the following.\n``` java\npackage com.actionbarsherlock.sample.demos;\nimport android.os.Bundle;\nimport android.widget.TextView;\n// import com.actionbarsherlock.app.SherlockActivity;\nimport android.support.v4.app.FragmentActivity;\nimport com.actionbarsherlock.view.Menu;\nimport com.actionbarsherlock.view.MenuItem;\n// public class Simple extends SherlockActivity {\npublic class Simple extends FragmentActivity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        setTheme(SampleList.THEME); //Used for theme switching in samples\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.text);\n        ((TextView)findViewById(R.id.text)).setText(R.string.actionbar_simple_content);\n    }\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        menu.add(\"Save\")\n            .setIcon(R.drawable.ic_compose)\n            .setShowAsAction(MenuItem.SHOW_AS_ACTION_ALWAYS);\n        menu.add(\"Search\")\n            .setIcon(R.drawable.ic_search)\n            .setShowAsAction(MenuItem.SHOW_AS_ACTION_NEVER);\n        return super.onCreateOptionsMenu(menu);\n    }\n}\n``\n. It works perfectly!\nAmazed at your quick fix. Thanks.\n. I'll support any of your decisions.\nIf I had to choose one,getSupportWindow().setUiOptions(..)orsetSupportUiOptions(..)` is better.\n. ",
    "robholmes": "I'm 100% behind you here Jake, you're making the right decision for the future of the project, as far as I'm concerned.\n. ",
    "slartus": "hello, can you tell me why in android 4.x action bar not showing?\nall items showing in simple menu.\nin 2.x it's showing correctly\nthanks!\nactionbarsherlock 4.0.0\nandroid 4.0.3\nandroixmanifest.xml\n activity android:name=\"MainActivity\" android:theme=\"@style/Theme.Sherlock\"\npublic class MainActivity extends SherlockFragmentActivity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n```\n    this.requestWindowFeature(Window.FEATURE_NO_TITLE);\nsetContentView(R.layout.main);\n\nFragmentManager fm = getSupportFragmentManager();\nFragmentTransaction ft = fm.beginTransaction();\nmFragment1 = (MenuFragment) fm.findFragmentByTag(\"f1\");\nif (mFragment1 == null) {\n    mFragment1 = new MenuFragment();\n    ft.add(mFragment1, \"f1\");\n}\nft.commit();\n\n}\n```\n. I tried\nuses-sdk android:minSdkVersion=\"5\" android:targetSdkVersion=\"11\"\nand\nuses-sdk android:minSdkVersion=\"5\" android:targetSdkVersion=\"8\"\nand\nuses-sdk android:minSdkVersion=\"5\" android:targetSdkVersion=\"14\"\nhttp://clip2net.com/s/1Hq3w\n. \"You may have set to actionbar disabled in ICS\" it is in Android settings? \nI do not use until the ICS. Only testing in the emulator.\n. I created a test project.\nhttp://www.2shared.com/file/qWaXfZcX/test.html\nActionBar showing in the top of Activity in 2.x and not showing in 4.x\nWhat am I doing wrong?\n. requestWindowFeature(Window.FEATURE_NO_TITLE);\nthat's my fault.\n. confirm. 4.0.2 solves the problem.\nthanks!\n. ",
    "sebastianherp": "Are you sure you are using the correct pixel size for your icons? The home icon (and other actionbar icons) size should be 32dp x 32dp and the icon itself 24dp x 24dp inside of that. See http://developer.android.com/design/style/iconography.html\n. I confirm hat it works better on Version 4, but in the february 14th release it was still not possible to use UseLogo without displaying the title. Except when I Set it in code (which ins fine to me).\n. ",
    "mcnicholls": "Just had a look into the ABS code and I can see what is happening.\nThe name attribute of my activity node is just my class name. ABS code is looking for the . at the start of the name to decide if it\nis within our package. My name attribute didn't have the . and so it didn't use the uiOptions.\nIf I put a . at the start of the class in my activities node name then I get the split ActionBar.\nIs this still a bug as the system allows unqualified class names in the activity's name attribute?\n. I have implemented a simple fix for this locally.\nWant me to fork and put in a pull request with it in?\n. Ahh I hadn't considered that case.\nHow does it look now?\n. Yes of course, I hadn't considered the relative case that has multiple '.''s in it.\nI had a look to see if I could add a test case for this fix, but wasn't too sure how to go about it.\nWill be interested to see how you add the tests.\n. That all looks great.\nWill know what I am doing next time if I need to add a test.\n. ",
    "fuadhamidan": "I'm uses version 4 beta #5 ...\n. I tried getSupportActionBar().setSubtitle(...) .. it runs fine\nbut when I try getSupportActionBar().setTitle(...) keyword is not out, only show text from application name\n. ",
    "jmgrosen": "Woah, I just ran into this issue too. It's not a showstopper, but it's quite annoying.\n. The dark spinner item would be nice, thanks.\nAt least for me, the built-in dropdown spinner item has the same color problem as the built-in spinner item. I could create my own, but I'm too lazy ;)\n. ",
    "chengbo": "hey, I found in your latest version, the close button is still not working when actionmode is second time shown on pre-3.0 version.\nIn your demo app, com.actionbarsherlock.sample.demos.ActionModes Activity, just clicks the Start button twice, you can find that the close button is not react to click. (on 2.3 emulator)\nCould you help to investigate this? Thank you.\n\nupdate:\nI think it's NineLinearLayout's problem, because when I change it back to legacy LinearLayout, problem gone. (of cause, animation is gone :) )\n. I think you can set menu's state in onPrepareOptionMenu, and once your application's state is changed, call invalidateOptionsMenu, it works for me.\n. ",
    "lodlock": "I had the same problem specifically with the \"done\" action being ignored (until another action button is called) on an ActionMode created after a previous ActionMode was finished. I found that by forcing the inflation of the ActionMode each time that it fixed the problem. \nIn the file: src/com.actionbarsherlock.internal.widget/ActionBarContextView.java\nAround line 203:\n\n public void initForMode(final ActionMode mode) {\n        if (mClose == null) {\n            LayoutInflater inflater = LayoutInflater.from(mContext);\n            mClose = (NineLinearLayout)inflater.inflate(R.layout.abs__action_mode_close_item, this, false);\n            addView(mClose);\n        } else if (mClose.getParent() == null) {\n            addView(mClose);\n        }\n\nReplace it with:\n\n public void initForMode(final ActionMode mode) {\n//        if (mClose == null) {\n            LayoutInflater inflater = LayoutInflater.from(mContext);\n            mClose = (NineLinearLayout)inflater.inflate(R.layout.abs__action_mode_close_item, this, false);\n            addView(mClose);\n//        } else if (mClose.getParent() == null) {\n//            addView(mClose);\n//        }\n\nOr you can remove the commented lines if you prefer cleaner code. This would have a negligible impact on performance but I would prefer a minuscule lag over a faulty done button.\n. You can always capture the keyevent for the menu button and have to do your bidding. Personally I have it finish my ActionMode and then return the super so that it's business as usual. So something like:\n@Override\npublic boolean onKeyDown(int keycode, KeyEvent event) {\n    if (keycode == KeyEvent.KEYCODE_MENU) {\n        if (mMode != null) {\n            mMode.finish();\n        }\n    }\n    return super.onKeyDown(keycode, event);\n}\n. ",
    "andrewgoz": "Just run into this problem too and spent several hours vainly searching my own code before searching further afield. Many thanks to lodlock for the workaround. This should be reopened at least, or preferably fixed.\n. My project is Vespucci. Feel free to check out our code and try that. We're tracking this problem ourselves too:\nhttp://code.google.com/p/osmeditor4android/issues/detail?id=114\nIt's possible the bug has morphed a little since the original report and is not \"3.0+ only\" anymore. ICS is OK for me, but GB is not.\n. ",
    "gramotei": "I can confirm the bug, it exists in ABS 4.1 even in included demo ActionMode. Tried both in emulator 2.3.3 (ADT 20.0.3) and PocketBook A10 with Android 2.3.7 using ABS Demos project\n. btw I've noticed that when I click \"Close\" then click Action Item, i get onActionItemClicked and then Close button gets its event:\n09-26 21:23:34.711: D/ABS(1409): on action item clicked\n    09-26 21:23:34.711: D/ABS(1409): java.lang.Throwable\n    09-26 21:23:34.711: D/ABS(1409):    at com.myapp.android.fragments.NewGridMainFragment$SelectionModeCallback.onActionItemClicked(NewGridMainFragment.java:149)\n    09-26 21:23:34.711: D/ABS(1409):    at com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper.onActionItemClicked(ActionBarSherlockCompat.java:1192)\n    09-26 21:23:34.711: D/ABS(1409):    at com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl.onMenuItemSelected(ActionBarImpl.java:771)\n    09-26 21:23:34.711: D/ABS(1409):    at com.actionbarsherlock.internal.view.menu.MenuBuilder.dispatchMenuItemSelected(MenuBuilder.java:738)\n    09-26 21:23:34.711: D/ABS(1409):    at com.actionbarsherlock.internal.view.menu.MenuItemImpl.invoke(MenuItemImpl.java:148)\n    09-26 21:23:34.711: D/ABS(1409):    at com.actionbarsherlock.internal.view.menu.MenuBuilder.performItemAction(MenuBuilder.java:879)\n    09-26 21:23:34.711: D/ABS(1409):    at com.actionbarsherlock.internal.view.menu.ActionMenuView.invokeItem(ActionMenuView.java:510)\n    09-26 21:23:34.711: D/ABS(1409):    at com.actionbarsherlock.internal.view.menu.ActionMenuItemView.onClick(ActionMenuItemView.java:145)\n    09-26 21:23:34.711: D/ABS(1409):    at android.view.View.performClick(View.java:2485)\n    09-26 21:23:34.711: D/ABS(1409):    at android.view.View$PerformClick.run(View.java:9080)\n    09-26 21:23:34.711: D/ABS(1409):    at android.os.Handler.handleCallback(Handler.java:587)\n    09-26 21:23:34.711: D/ABS(1409):    at android.os.Handler.dispatchMessage(Handler.java:92)\n    09-26 21:23:34.711: D/ABS(1409):    at android.os.Looper.loop(Looper.java:123)\n    09-26 21:23:34.711: D/ABS(1409):    at android.app.ActivityThread.main(ActivityThread.java:3683)\n    09-26 21:23:34.711: D/ABS(1409):    at java.lang.reflect.Method.invokeNative(Native Method)\n    09-26 21:23:34.711: D/ABS(1409):    at java.lang.reflect.Method.invoke(Method.java:507)\n    09-26 21:23:34.711: D/ABS(1409):    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:839)\n    09-26 21:23:34.711: D/ABS(1409):    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:597)\n    09-26 21:23:34.711: D/ABS(1409):    at dalvik.system.NativeStart.main(Native Method)\n    09-26 21:23:35.041: D/ABS(1409): clicked\n    09-26 21:23:35.041: D/ABS(1409): java.lang.Throwable\n    09-26 21:23:35.041: D/ABS(1409):    at com.actionbarsherlock.internal.widget.ActionBarContextView$1.onClick(ActionBarContextView.java:216)\n    09-26 21:23:35.041: D/ABS(1409):    at android.view.View.performClick(View.java:2485)\n    09-26 21:23:35.041: D/ABS(1409):    at android.view.View$PerformClick.run(View.java:9080)\n    09-26 21:23:35.041: D/ABS(1409):    at android.os.Handler.handleCallback(Handler.java:587)\n    09-26 21:23:35.041: D/ABS(1409):    at android.os.Handler.dispatchMessage(Handler.java:92)\n    09-26 21:23:35.041: D/ABS(1409):    at android.os.Looper.loop(Looper.java:123)\n    09-26 21:23:35.041: D/ABS(1409):    at android.app.ActivityThread.main(ActivityThread.java:3683)\n    09-26 21:23:35.041: D/ABS(1409):    at java.lang.reflect.Method.invokeNative(Native Method)\n    09-26 21:23:35.041: D/ABS(1409):    at java.lang.reflect.Method.invoke(Method.java:507)\n    09-26 21:23:35.041: D/ABS(1409):    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:839)\n    09-26 21:23:35.041: D/ABS(1409):    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:597)\n    09-26 21:23:35.041: D/ABS(1409):    at dalvik.system.NativeStart.main(Native Method)\n. How to reproduce:\n1. Run ABS:Demos from ABS 4.1\n2. Select Action Modes\n3. Click \"Start\" button\n4. Click \"Done\" on ActionBar (finishes correctly)\n5. Click \"Start\" button\n6. Click \"Done\" on ActionBar (nothing happens)\n7. Click any action item (finishes correctly)\nMy emulator settings:\nhw.lcd.density=120\nsdcard.size=128M\nskin.path=800x480\nskin.name=800x480\nhw.cpu.arch=arm\nabi.type=armeabi\nhw.keyboard=yes\nvm.heapSize=24\nsnapshot.present=true\nhw.ramSize=256\nimage.sysdir.1=platforms/android-10/images/\n. ",
    "XMitja": "I can reproduce it on my 2.3 device with ActionBarSherlock-Sample-Demos-4.2.0.apk, different sequence from gramotei though:\n1. Run ABS:Demos from ABS 4.2\n2. Select Action Modes\n3. Click \"Start\" button\n4. Click \"Done\" (Check Mark) on ActionBar (finishes correctly)\n5. Click \"Start\" button\n6. Click \"Start\" button\n7. Click \"Done\" (Check Mark) on ActionBar (nothing happens)\n8. Click any action item or \"Cancel\" button (finishes correctly)\n. ",
    "adnaan": "Same bug(2.3.7). Hack fix which works for me:\n```\nmodeHandler.postDelayed(new Runnable() {\n            @Override\n            public void run() {\n                newMode = startActionMode(newModeCallback);\n\n            }\n        }, 10);\n\n```\n. ",
    "alexjlockwood": "Same problem here.\n. ",
    "coreform": "Yep this is a problem I've seen a lot, I use a similar solution to the one provided by @adnaan , which is also an effective way of stopping an ActionMode that is invoked after a 'back' button press from consuming that same 'back' button press and closing itself as soon as it's invoked o.0\n. I've got an intermittent bug that manifests similar symptoms to those @incomplateopus describes, though some differences. I will need to work on capturing and examining the bug further to get you better details, but gist of it is:\n- this happens very rarely, after using (opening and dismissing) several ActionMode instances while browsing around the app.\n- an unusual aspect of the app within which this occurs is that it provides a means to navigate 'forward' from an ActionMode and subsequently allow user to navigate 'back' (doing which pops the backstack, then re-opens the ActionMode via a delayed post because I was seeing the ActionMode instantiated by backstack pop consuming the back event that created it and instantly dismissing...but that's how native Android is behaving so I hadn't reported it as a problem to ABS, just lived with it and dealt with it).\n- when this problem manifests, pressing on an ActionItem will not immediately open the ActionMode associated with it, rather that ActionMode opens upon pressing any ActionItem (seemingly) after a call to invalidateOptionsMenu(). So to the User it seems that the first ActionItem doesn't work, then the 2nd ActionItem opens an inappropriate ActionMode (the one the 1st ActionItem should've yielded).\n. this is a duplicate of https://github.com/JakeWharton/ActionBarSherlock/issues/208 a workaround exists on that report\n. you could try setting android:maxLines to 2 in the XML for the style for those TextViews. Let us know if that works.\n. this is a duplicate of https://github.com/JakeWharton/ActionBarSherlock/issues/208 a workaround exists on that report\n. You should find that without ActionBarSherlock, this same problem manifests. Because this problem is to do with Android's native ActionBar implementation it should be reported to Google as an Android bug, not to this project.\nPS: G'day.\n. ",
    "bob9": "I'm experiencing a simliar issue on android 2.3.7. My app working perfectly in ICS. My Callback is in the Fragment not an Activity. When I click a ActionBar \"Edit\" MenuItem this moves the ActionBar into Action mode.\nIf the \"Done\" button is then clicked the ActionBar goes away as expected, however after done is pressed the ActionBar no longer responds to MenuItem Clicks. I can still click the back button but my \"Edit\" MenuItem does not detect clicks anymore.\nI can still get the ActionBar back into Action mode by long holding a ListItem which triggers Action Mode. I expect the user to click my \"Edit\" MenuItem to change to Action Mode however after the ActionBar mode is triggered and Done pressed the MenuItems no longer work.\nAny Assistance is appreciated. I have been buggering with this for a few days now and this issue seems like the closest to the problem.\nI attempted suggested fixes on this page however they didn't work.\nThanks\nbob9\n. ",
    "mattiasbe": "This might be of interest for further development.\nThe just released r7 support lib has this entry:\nChanges for v4 support library:\nAdded ShareCompat, which provides helper classes for sending and receiving content for social sharing applications, including new metadata for attributing shared data to the source app. This class also provides compatible integration with the newShareActionProvider in Android 4.0.\n. ",
    "xeigen": "Thank you very much SimonVT..\nSpent hours trying to figure out the problem, but never thought of such solution..\n. So which one of the four did you implement? I cant find any method related to setUiOptions..\n. My bad, i did try getSherlock() before posting here but doesnt match any method, turns out its due to the version that i'm using (RC1)..its working great with the 4.0 release, thanks for the answer anyway..\n. ",
    "astachowiak": "Thank you. That is sufficient to be able to figure out what is missing.\n. ",
    "ileafdeveloper": "@astachowiak how you resolve this issue? . I am facing same issue.\n. ",
    "tprochazka": "I have the same problem with this style\n<style name=\"AppTheme.Translucent\" parent=\"@android:style/Theme.Translucent.NoTitleBar\">\n    <item name=\"android:windowActionBar\">false</item>\n    <item name=\"windowActionBar\">false</item>\n</style>\nI think that if I use windowActionBar false, actionbar should not initialize. This work in ICS, but on on 2.3\n. I don't understand it. this theme should allow to use ActionBar on the dialog? Because I don't found way how to do it on the android 3.0+.\n. Thanks for great explanation and I agree.\n. I know that it is required dependency, but it is not usual to pack depency directly to the artifact in maven world.\nI mean this http://search.maven.org/remotecontent?filepath=com/actionbarsherlock/library/4.1.0/library-4.1.0.apklib\nThis zip directly contain libs\\android-support-v4.jar\nAnd this dependency should be resolved by maven.\nSo it is not possible to exlclude it via maven  ;-)\n. I agree with this decision, but problem is with already published apps, users using it already and it now disappear in the next update :-(  But if doesn't exist any other way...\n. Is this in 4.3.0 already?\n. I will reply to myself. Yer it is supported from 4.3.0 ;-)\n. ",
    "gentlecat": "I have the same issue. It's always black.\n\n. Okay :)\n. Done.\n. ",
    "IHNEL": "When I use .NoActionBar theme, the actionbar and menu items are hidden. How to show menu items without title bar?\n. I don't want to publish 2 version of my app for android pre ICS and android ICS+. Is there any way to use ABS for android ICS+? My app run on android 2.x +, of course it should run on ICS.\n. ",
    "JuhaniLehtimaeki": "Hey Jake, \nThanks for the suggestion. Unfortunately, that doesn't fix the problem. Still no custom background on ICS. \nWhere should I start debugging? I haven't been given as much time budget to dig into this as I'd like but I'll try to figure out what's going on if I can help to get this issue solved.\n. Great, thanks Jake! This fixes the issue with split action bar! The action mode problem was also fixed by adding \n<item name=\"android:actionModeStyle\">@style/Widget.MyCustom.ActionMode </item> \nand corresponding style in the values-v14. \nHuge thanks for your help and quick response. I'll buy you a Ma\u00df of beer if you ever come to Munich :)\n. ",
    "mlc": "It worked for me to just say\n<style name=\"MyTheme.Sherlock\" parent=\"@style/Theme.Sherlock.Light\">\n        <item name=\"actionBarStyle\">@style/My.Widget.ActionBar</item>\n        <item name=\"android:actionBarStyle\">@style/My.Widget.ActionBar</item>\n    </style>\nin values/styles.xml without bothering to create a separate file in values-v14.\n. ",
    "chrisanderson79": "No problem. After a bit of digging about it seems to be present in the current Android release for certain scenarios.\nThe following might be of use to you if you want to look a little deeper.\nhttp://www.mentby.com/Group/android-developers/scenario-where-initloader-does-not-call-onloadfinished.html\n. ",
    "deviant-studio": "But with native action bar we can do this. I was thinking that there is default behavior. And in this article \nhttp://android-developers.blogspot.com/2012/01/say-goodbye-to-menu-button.html\nsays \"Your activities should provide buttons for important user actions directly in the action bar (or elsewhere on screen). Those that can\u2019t fit in the action bar end up in the action overflow.\"\n. Oh, I see now. Thanks for the clarification. I have tested the app on emulator with menu button enabled.\n. It was a bug but seems they fixed it with last sdk release\n. I see. Thanks Jake.\nWill try to reduce my tabs amount and width :)\n. Awesome! Now it works perfect. Thank you for quick response.\n. Good Luck :)\n. I have the same problem. None of my xml menu do not inflates correctly on 2.3.4 device and 2.3.5 x86 emulator. But all OK on 2.1 emulator and 4.0.3 emulator.\n03-01 13:42:25.795: E/AndroidRuntime(2795):     at com.android.internal.util.XmlUtils.convertValueToInt(XmlUtils.java:122)\n. Oh! I was inattentive. I was sure that I put android:showAsAction everywhere. But miss one item.\nAnyway it really helps as temporary solution :) Thanks\n. thanks Nevro, great fix!\n. i have exactly same issue. Not using cyanogen. Stock firmware.\n. ",
    "yuvidroid": "Sorry to resurrect this after 3 months. But...I'd like to always have the \"overflow menu\" shown, even on ICS devices with an hardware menu key. I know that the native ICS ActionBar won't show the overflow item, but is there a (simple) way to force the ABS implementation of the ActionBar even on API 14+? Thanks!\n. Just take all the existing devices that are being upgraded to ICS....Nexus S runs ICS and it has an hardware menu button, same goes for the Galaxy S2. :(\nAnyway, coming back to my question, maybe I didn't explain myself very well. What I'd like to achieve is to use on ICS the ActionBarSherlockCompat instead of the ActionBarSherlockNative. Anyway the result should be the same and in this way I would be able to force the overflow menu.\nI tried playing a bit with the source code and I removed the line \"registerImplementation(ActionBarSherlockNative.class);\" from ActionBarSherlock.java...and it kind of works...on ICS I get the overflow menu, but I see two action bars (native + compat). I will probably also have to change the layouts used on ICS and pick the NoActionBar stuff...mmm. Little help? :)\n. That's true, those users are used to have an hardware menu button. But still, when they would press it (even when the overflow menu icon is present) the menu would appear, so I don't think it's so bad.\nThe reason I really want to force the overflow menu button is because I want my apps to look the same on all devices, so that when I write tutorials, make videos, help pages, screenshots and whatnot I can always say e.g. \"press the menu icon\", instead of saying \"if your phone has a menu button press that, otherwise press that other thing, but if you run Android 2.x then do that...oh but with Android 3.x you should do that other thing..\".\n. I don't agree...many of my users do read tutorials and I prefer keeping that part clean and consistent.\n. Jake, do you have any advice regarding my previous comment? (https://github.com/JakeWharton/ActionBarSherlock/issues/239#issuecomment-5807766)\nThank you!\n. ",
    "arusahni": "Sadly it appears Samsung is thumbing their nose at Google with the S3.  Granted, I can see why they'd prefer this to having to create the navbar menu button on devices with hardware buttons (e.g. the One X).  Still annoying.\n. ",
    "RawPhunky": "Google+ app has overflow item (on device with hardware menu button).\nTho, it seems that it's just a menu item with sub items. Maybe it's a good way to fake it.\n. I can reproduce same issue on old Samsung device running Android 2.2.1\nI have \nABS4 and ViewPager + ViewPagerIndicator.\nTheme.Sherlock.Light.DarkActionBar.ForceOverflow to force overflow menu\nUsing Android Support Library, revision 10 \nA way to reproduce is to click overflow menu then try to swipe ViewPager, then click overflow menu item again.\nSo basically swiping and clicking overflow menu item gets a crash after few swipes:\n08-30 00:35:26.316: E/AndroidRuntime(28708): FATAL EXCEPTION: main\n08-30 00:35:26.316: E/AndroidRuntime(28708): java.lang.NullPointerException\n08-30 00:35:26.316: E/AndroidRuntime(28708):    at android.widget.PopupWindow$1.onScrollChanged(PopupWindow.java:124)\n08-30 00:35:26.316: E/AndroidRuntime(28708):    at android.view.ViewTreeObserver.dispatchOnScrollChanged(ViewTreeObserver.java:607)\n08-30 00:35:26.316: E/AndroidRuntime(28708):    at android.view.ViewRoot.draw(ViewRoot.java:1253)\n08-30 00:35:26.316: E/AndroidRuntime(28708):    at android.view.ViewRoot.performTraversals(ViewRoot.java:1163)\n08-30 00:35:26.316: E/AndroidRuntime(28708):    at android.view.ViewRoot.handleMessage(ViewRoot.java:1727)\n08-30 00:35:26.316: E/AndroidRuntime(28708):    at android.os.Handler.dispatchMessage(Handler.java:99)\n08-30 00:35:26.316: E/AndroidRuntime(28708):    at android.os.Looper.loop(Looper.java:123)\n08-30 00:35:26.316: E/AndroidRuntime(28708):    at android.app.ActivityThread.main(ActivityThread.java:4633)\n08-30 00:35:26.316: E/AndroidRuntime(28708):    at java.lang.reflect.Method.invokeNative(Native Method)\n08-30 00:35:26.316: E/AndroidRuntime(28708):    at java.lang.reflect.Method.invoke(Method.java:521)\n08-30 00:35:26.316: E/AndroidRuntime(28708):    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:858)\n08-30 00:35:26.316: E/AndroidRuntime(28708):    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)\n08-30 00:35:26.316: E/AndroidRuntime(28708):    at dalvik.system.NativeStart.main(Native Method)\n. purdyk I have tried your implementation and found another issue with ViewPager and FragmentPagerAdapter.\nFragmentPagerAdapter calls setMenuVisibility... but it does not call it for child fragments.\nLets imagine that our Pager has 3 fragments. And one has a child fragment. All of them have menus.\nF1       F2       F3\nF1.1 \nNow let's activate 2nd page with F2.\nFragmentPagerAdapter (on setPrimaryItem) will call F1.setMenuVisibility(false), but will not do it for F1.1\nSo our menu will be F2 + F1.1, not that we expected.\nFor a temp solution i have modified your code:\nI do not dispatch calls to child if parent fragments menu is invisible (you need to do that in all your recursive functions):\n```\nprivate boolean recurseOnPreparePanel(Fragment f, Menu menu)\n{\n    boolean show = false;\n    if (f != null && !f.mHidden && f.mHasMenu && f.mMenuVisible && f instanceof OnPrepareOptionsMenuListener) {\n        show = true;\n        ((OnPrepareOptionsMenuListener)f).onPrepareOptionsMenu(menu);\n    }\nif (!f.mMenuVisible)\n    return show;\n\n// Dispatch calls to any child fragments\nif (f != null && f.mChildFragmentManager != null && f.mChildFragmentManager.mAdded != null)\n{\n    for (int j = 0; j < f.mChildFragmentManager.mAdded.size(); j++)\n    {\n        Fragment f2 = f.mChildFragmentManager.mAdded.get(j);\n        show = recurseOnPreparePanel(f2, menu);\n    }\n}\nreturn show;\n\n}\n```\n. ",
    "toulouse": "@deviant-studio Here's a workaround that may work for you: https://gist.github.com/2657485\n. ",
    "commonsguy": "FWIW, since there didn't seem to be an official issue filed for the underlying Android bug, I went ahead and filed one.\n. Just an FYI for anyone else running into this...\nIf you are crashing when trying to use a SearchView inflated from a menu resource, make sure that you are using getSupportMenuInflater(), and not new MenuInflater(this), to create your MenuInflater. You might think that there's no difference, if you are using com.actionbarsherlock.view.MenuInflater, but there is (somewhere, haven't gone looking to see exactly what). I was able to generate this crash in an app by using new MenuInflater(this) in an activity's onCreateOptionsMenu(), for an app themed as Theme.Sherlock.Light.DarkActionBar, and changing it to getSupportMenuInflater() resolved the problem.\n. ",
    "mohitum007": "I was also experiencing the same issue. Making a lot of research I found the solution here: \n    https://gist.github.com/toulouse/2657485\nI hope this may help someone else too.\nMohit Sharma\nhttp://mohitum.wordpress.com\n. ",
    "raymanzhang": "I tested it with the latest 4.0-wip branch\n. I copyed the style.xml to both values-v14 and values-v15, it still doesn't work. Please see my sample project in #235.\n. Sorry, my fault...\n. Hi, Could you look at this issue again? I have tried both your method and totally removed the action button styling in my project, all have the same result as before.\n.  My fault again, I modified anther project's style.xml... Sorry to bother you with so many false alarms. Thanks!\n. Please download the sample project for #243,#244, #245 from here: http://infolib.net/ActionbarTest.zip. There is a screen-shot directory, You may have a look there first. Also, I manually replace those classes in android-support-v4.jar, wish this is not the cause of the problem.\nBTW, The project can be debugged under IDEA 11. But under eclipse, the IDE can't attach to the debug process, don't know why.\n. Don't know what you mean for \"get the emulator to not recreate on rotation\"(Sorry My English is not good).\nIf you want to avoid activity recreation on rotation, add  android:launchMode=\"singleTop\" and android:configChanges=\"orientation|keyboardHidden\" in AndroidManifest.xml. This works for emulator before ICS. \nIf you just want to rotate the emulator, press Ctrl-F11.\n. ",
    "AAverin": "A little question similar to what's discussed here.\nAny chance to fit 3 text-only items without Overflow menu on split actionBar?\n. Same thing for actionbar items, at least on split actionbar.\nSplitactionbar also clips on API10.\n. ",
    "RomainPiel": "API 8\n. I'm using latest code from branch 4.0-wip. Should I try using a beta instead?\n. Ok cool. The only way I got it working is using the jar file. Sorry to have created an issue for that ;)\n. ",
    "namnx": "I am using the beta 6 version downloaded from http://beta.abs.io/\n. It is still the same :(\n. I use the action bar in overlay mode. At the beginning, I hide the it, my app works correctly. But when I show it and then hide it again, this problem happens.\n. ",
    "xWOLKx": "Sure!\n02-14 08:30:15.916: D/dalvikvm(257): GC freed 3228 objects / 254216 bytes in 69ms\n02-14 08:30:21.917: E/dalvikvm(257): Could not find method android.view.Window.hasFeature, referenced from method android.support.v4.app.SherlockPreferenceActivity.hasFeature\n02-14 08:30:21.917: W/dalvikvm(257): VFY: unable to resolve virtual method 2568: Landroid/view/Window;.hasFeature (I)Z\n02-14 08:30:21.917: W/dalvikvm(257): VFY:  rejecting opcode 0x6e at 0x000a\n02-14 08:30:21.917: W/dalvikvm(257): VFY:  rejected Landroid/support/v4/app/SherlockPreferenceActivity;.hasFeature (J)Z\n02-14 08:30:21.917: W/dalvikvm(257): Verifier rejected class Landroid/support/v4/app/SherlockPreferenceActivity;\n02-14 08:30:21.917: W/dalvikvm(257): Class init failed in newInstance call (Lit/zonde/android/easytracks/PreferencesApp;)\n02-14 08:30:21.917: D/AndroidRuntime(257): Shutting down VM\n02-14 08:30:21.917: W/dalvikvm(257): threadid=3: thread exiting with uncaught exception (group=0x4001aa28)\n02-14 08:30:21.917: E/AndroidRuntime(257): Uncaught handler: thread main exiting due to uncaught exception\n02-14 08:30:21.997: E/AndroidRuntime(257): java.lang.VerifyError: android.support.v4.app.SherlockPreferenceActivity\n02-14 08:30:21.997: E/AndroidRuntime(257):  at java.lang.Class.newInstanceImpl(Native Method)\n02-14 08:30:21.997: E/AndroidRuntime(257):  at java.lang.Class.newInstance(Class.java:1472)\n02-14 08:30:21.997: E/AndroidRuntime(257):  at android.app.Instrumentation.newActivity(Instrumentation.java:1097)\n02-14 08:30:21.997: E/AndroidRuntime(257):  at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2316)\n02-14 08:30:21.997: E/AndroidRuntime(257):  at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2417)\n02-14 08:30:21.997: E/AndroidRuntime(257):  at android.app.ActivityThread.access$2100(ActivityThread.java:116)\n02-14 08:30:21.997: E/AndroidRuntime(257):  at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1794)\n02-14 08:30:21.997: E/AndroidRuntime(257):  at android.os.Handler.dispatchMessage(Handler.java:99)\n02-14 08:30:21.997: E/AndroidRuntime(257):  at android.os.Looper.loop(Looper.java:123)\n02-14 08:30:21.997: E/AndroidRuntime(257):  at android.app.ActivityThread.main(ActivityThread.java:4203)\n02-14 08:30:21.997: E/AndroidRuntime(257):  at java.lang.reflect.Method.invokeNative(Native Method)\n02-14 08:30:21.997: E/AndroidRuntime(257):  at java.lang.reflect.Method.invoke(Method.java:521)\n02-14 08:30:21.997: E/AndroidRuntime(257):  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:791)\n02-14 08:30:21.997: E/AndroidRuntime(257):  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:549)\n02-14 08:30:21.997: E/AndroidRuntime(257):  at dalvik.system.NativeStart.main(Native Method)\n02-14 08:30:22.007: I/dalvikvm(257): threadid=7: reacting to signal 3\n02-14 08:30:22.017: I/dalvikvm(257): Wrote stack trace to '/data/anr/traces.txt'\n. Yes yes work perfectly!\ni'm very sorry but I see the reply too late yesterday!\nGreat, THANKS A LOT\n. ",
    "kevinsawicki": "Oh okay, sorry about that, keep up the great work!\n. Yeah, apologies, I didn't see that pull request you mentioned which is a similar fix to the same issue.\n. > I don't really see how this is an ABS bug. Seems like Eclipse and/or m2e-eclipse is broken.\nYou are right, I use ActionBarSherlock from Eclipse fine without using m2e-android.  You can just use it as a regular Android project.\n. Don't change this, if you want to support Eclipse just check-in a .project file with the name element as ActionBarSherlock, or people using Eclipse can simply rename the project after they import it.\nIf anything I would shorten it from library to lib.\n. IDE files make lives the easiest and allow you to enforce coding standards that will fail in the IDE before they fail in Travis for people making contributions.\n. ",
    "jgilfelt": "Well I was able to reproduce it with the demo by just having a single always|withText item, however it seems like this is just a quirk with the device I am using to test with (a Sony Ericsson X10), as it is fine on the emulator with the same spec AVD: http://twitpic.com/8jwl1f/full\nClosing as a non-issue.\n. Thanks Jake! \nI patched ActionMenuView.java just as you suggested and my dynamic fragment menu actions are now working as expected, plus you're right, that overflow item layout quirk on the WVGA854 device is gone. The subtle loss in rendering of dividers I can live with.\nThanks again for your tireless efforts.\n. Thanks. I've tested this pretty thoroughly and the Fragment actions now behave as expected, with a couple of minor exceptions:\n- On Android 2.1, after the hosting Activity is created the initial Fragment's action items do not appear in the action bar. Once a new Fragment is paged in, the action bar items appear correctly. Reproducible in the project/APK you provided.\n- The combination of WVGA854/landscape/always|withText and my Sony Ericsson Xperia X10 still causes that weird measurement issue for the right-most action item (#264). Still can't reproduce this on the emulator. The only reason I mention it is that it was temporarily fixed by reverting to LinearLayout in ActionMenuView http://dl.dropbox.com/u/3982805/device-2012-02-23-095443.png\nOn a side note, there's currently a bunch of references to DisplayMetrics.DENSITY_TV in 4.0-wip bleeding edge that cause runtime crashes on anything less than 3.2.\n. I dont think the 2.1 problem is regression from the IcsLinearLayout work you've done here. It seems to be present even in 4.0 beta 6, therefore it might be a separate issue entirely.\n. Cool, measurement issue on WVGA854 is sorted. Thanks!\n. Thanks, it is now working consistently in 2.1 and above, though we seem to have lost the action item dividers at some point:\nprevious 4.0-wip (4 days ago):\n \nlatest 4.0-wip:\n\n. Modifying com.actionbarsherlock.internal.view.menu.ActionMenuView to inherit from LinearLayout instead of IcsLinearLayout as proposed earlier in this thread seems to be a valid workaround for this issue in 4.1.0, side effect being that dividers will not display between action items.\n. This was my experience as well. Native Theme.Holo.Light uses the solid style ActionBar by default, whereas Theme.Shelock.Light uses the transparent one with the blue keyline.\nEasy enough to workaround by specifying an actionBarStyle, but I think it's a bug none the less.\n. I believe this is a framework issue:\nhttp://stackoverflow.com/questions/9162521/shareactionprovider-with-a-split-actionbar\n. Platform bug report filed: http://code.google.com/p/android/issues/detail?id=26027\nThe only workaround I've found is to force it into overflow with android:showAsAction=\"never\". That seems not to break the lower action bar layout.\n. Oops I should have tested more thouroughly. Looks like it is only reproducible on the Sony Ericsson Gingerbread roms (well my Xperia Play and X10i anyway). \nA workaround is to specify values-v14 styles seperately.\nI will include https://github.com/romainguy/ViewServer and see if I can figure out what's going on with these devices.\n. It would be cool if this sample (and the themeing guidance on the website) at least did not lump the prefixed and unprefixed style attributes together. ADT now flags these as errors.\n. ",
    "fliese": "Shit, shit, shit...getSupportActionBar().getThemedContext() doesn't work for me.. :( Ahhh what can I do? I searched the whole day for the solution and my app is already online. I'm getting the first negative reviews from people who had this bug. \npublic class DetailSearchActivity extends SherlockFragmentActivity {\n[...]\n    public void onCreate(Bundle savedInstanceState) {\n[...]\nadapter_level = new BaseDataAdapter(getSupportActionBar().getThemedContext(), android.R.layout.simple_spinner_item, levelLst);\nhttp://tinyurl.com/98kd57n <- here is the actual spinner style on android 2.2\nI did not customisations - i'm just using the \"Theme.Sherlock\" theme..\n. It won't work :(\n. ",
    "Draiken": "Is this really fixed?\nI am simply creating menu items (on the onPrepareOptionsMenu) and I can't change the style of the dropdown items with anything.\nI've tried like 10 different styling solutions but the menu shown is always with dark background and the app's default text color (which is dark grey and screws everything up).\nThis sample seems to be when you're creating a navigation spinner and not a menu spinner (the automatically generated when there's no space).\nIf this is not the same issue, could someone please point me in the right direction?\nThanks\n. @fbernhard yes, I have finally found it.\nThe style I successfully used is android:itemTextAppearance. I linked to a style that changed the textColor and voila!\n. @fbernhard Hmm, I wondered if that changed something else too (name is pretty generic), but I only managed to fix that color with this style, fortunately for me I'm not affected by context menus.\nYou can probably change the background in the context menus, but it's not always a viable solution.\n. ",
    "fbernhard": "@Draiken, have you found a solution? I am stuck with the very same problem. Thanks!\n. @Draiken  perfect, thanks a lot, this works nicely!\n. @Draiken I have just realized that this also changes the text color in the \"long press context menu\". I.e. your solutions solves the navigation spinner problem (it is now white font on dark background) but creates a new one for context menues (white font on white background). ;-(\n. ",
    "jschleppy": "I just want to chime in on this thread and say that the only thing that worked for me in the end (testing between 2.3.7 and 4.2.2) was using getSupportActionBarContext() instead of getSupportActionBar().getThemedContext().\nExample:\nactionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_LIST);\nArrayAdapter list = ArrayAdapter.createFromResource(this.getSupportActionBarContext(), R.array.MainActivityTabs, R.layout.sherlock_spinner_item);\nlist.setDropDownViewResource(R.layout.sherlock_spinner_dropdown_item);\nactionBar.setListNavigationCallbacks(list, this);\n. rafeltoledo, not much anyone is going to be able to help you with when you don't post any code you've tried. Which context are you using?\nThough, I also wouldn't know from personal experience at all since our lowest supported api on all our apps is 10. You'd only be getting an additional 0.1% of the market by supporting api 9: http://developer.android.com/about/dashboards/index.html \nIs it worth it for your app?\nThough, I completely understand if dropping support of api 9 isn't an option for you, sometimes it just isn't. You may have to do something specific for that api only even. Best of luck.\n. ",
    "rafaeltoledo": "I'm experiencing this issue when extendind the Light.DarkActionBar theme, running in API 9. Both background and text dark.\n. Hello, jschleppy. You're right, I can upgrade my minimum API level to 10. About the problem, I found a commit here in my project where the property android:textColor was altered in the theme definition. Sorry, my mistake.\n. ",
    "Demostrike": "My bad, I did do a search but didn't see anything obvious - apologies :)\n. ",
    "ru-nekit-android": "I has same error on emulator 2.3.3 - what a solution?\n. ",
    "marcardar": "ABS 4.1.0\nI got a report of this in my dev console today. minSdkVersion is 9.  Sadly dev console gives no further details (such as SDK level, device etc).\n. Is it OK to put the \"android:\" attrs in values-v11 instead of values-v14?  The two relevant attrs I use in my themes were both introduced in v11...\n. Ok, thanks. Though I suppose they (android:actionBarStyle & android:indeterminateProgressStyle) could be used elsewhere.\nOut of interest, a style defined in -v11 with parent=\"@style/Theme.Sherlock.Light\", would that parent be picked up from ABS's -v11 or -v14 style on a level 14 device?\n. ",
    "jaysidri": "I'm getting this on devices running 2.3.6\nException Type: java.lang.VerifyError\nReason: com.actionbarsherlock.app.ActionBar\nActionBarSherlockCompat.java line 146\ncom.actionbarsherlock.internal.ActionBarSherlockCompat.initActionBar\nActionBarSherlockCompat.java line 129\ncom.actionbarsherlock.internal.ActionBarSherlockCompat.getActionBar\n. ",
    "aytereschenko": "I've met the same issue with ABS 4.0.2 on Android 2.3.3.\nMy ActionBar with tabs uses ViewPager and FragmentPagerAdapter. Each fragment has its own options menu. After the configuration change the whole ActionBar becomes unresponsive.\n. No. After changing to LinearLayout the issue is still present. ActionBar becomes unresponsive after configuration change. Tested on Android Emulator with SDK 2.3.3 and ABS 4.1.0.\n. ",
    "pflammertsma": "Jake, does your known-bugs test case reproduce this reliably? I'm willing to make a minimal working example that illustrates the problems I'm having with the options menu.\nThe work-around suggested by jgilfelt appears to work for an SGS2 running 2.3.6 and LG Optimus 2X (CM7) 2.3.7 that were exhibiting the problem.\n. @guillaume-tgl You're absolutely right. It can be reproduced by \"modifying com.actionbarsherlock.internal.view.menu.ActionMenuView to inherit from LinearLayout instead of IcsLinearLayout\" as proposed earlier in the thread and calling startActionMode().\nThe root cause is that no property map exists for LinearLayout. The secondary cause is that an animation is attempted to be performed using setAlpha(), which doesn't exist for LinearLayout. It seems that the workaround might still work with some more tinkering, but it's certainly not straight-forward.\n. This issue is still present in 4.2.0, so I spent a little more time trying to find a workaround that retains functionality in Honeycomb and higher, but applies @roee88 fix for older versions. The simplest solution was to throw in a constant WORKAROUND_FOR_ISSUE_272 in ActionMenuView:\npublic static final boolean WORKAROUND_FOR_ISSUE_272 = \n        Build.VERSION.SDK_INT < Build.VERSION_CODES.HONEYCOMB;\nCheck on this constant in each overridden function in IcsLinearLayout to make it only execute the code from LinearLayout. For instance:\n@Override\npublic int getShowDividers() {\n    if (!ActionMenuView.WORKAROUND_FOR_ISSUE_272) {\n        return mShowDividers;\n    }\n    return super.getShowDividers();\n}\nAlso disable any additional logic in the IcsLinearLayout constructor and add the following function to the class:\n@Override\npublic void setAnimation(Animation animation) {\n    if (!ActionMenuView.WORKAROUND_FOR_ISSUE_272) {\n        super.setAnimation(animation);\n    }\n}\nI've done some testing between various devices, especially around the action mode, and it appears to have resolved all problems I had encountered earlier. Note that this does break the dividers and illustrated by @JakeWharton earlier in this issue.\n. This appears to be related to changes made in ADT 21 preview 5:\n\nThe R classes for library projects are generated with only the IDs needed by the libraries, reducing the risk of hitting dex files limits for fields and methods.\n\nIt appears that the new mechanism is prohibiting the generated R class from being exported out of the library. We'll have to wait and see if the ADT team intends on keeping it this way, so in the meantime I'd recommend reverting ADT back to the release channel.\nSee also this discussion on Google Groups.\n. I have a theory what's going wrong here: you must have two or more projects building with the same package names. It appears the generated R class is only exposed through one of them (not both).\nI've dropped a line on Tor Norbye's G+, but in the meantime you'll have to either resolve the conflict or revert to ADT 20.\n. I'm seeing the same stack trace as PeterRinc mentioned above, but on a Honeycomb 3.2 device (Samsung GT-P7300). As Peter shows, it originates from setHasOptionsMenu(). (I've applied fix #652, but that only targets pre-Honeycomb.)\n. ",
    "guillaume-tgl": "Hi,\nI'm having the exact same problem (a FragmentActivity with tabs and when the second tab is selected, the actions in the action bar are not responsive).\nHas this been solved in a release yet?\nI tried the proposed trick (replace IcsLinearLayout by LinearLayout in ActionMenuView.java), it solves this problem but the action mode does not work anymore..\nI get a crash and the following stacktrace : \n08-29 22:52:49.189: E/AndroidRuntime(15365): FATAL EXCEPTION: main\n08-29 22:52:49.189: E/AndroidRuntime(15365): java.lang.NullPointerException\n08-29 22:52:49.189: E/AndroidRuntime(15365):    at com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder.setupSetterAndGetter(PropertyValuesHolder.java:515)\nHas anyone ever got that same issue?\nI'm using ABS 4.1.0 on Android 2.3.5.\n. @roee88 Thanks for sharing your solution.\nMy workaround was to handle the options menu by the activity and not the fragments (the onCreateOptionsMenu and onOptionItemSelected methods).\nIt's a bit more complex to handle but it's doable and solves the problem of inactive menu options. \n. ",
    "roee88": "@guillaume-tgl  I got the same issue with the dev branch.\nMy workaround:\nRemove view.setAnimation(this); from the constructor of AnimatorProxy \nRemove setAnimation(mProxy); from NineLinearLayout.setVisibility (and possibly other Nine* views).\nYou won't lose animations thanks to the setAnimation call in invalidateAfterUpdate but I barely tested it.\n. ",
    "androidmoney": "Not too sure why this issue is closed, but this is still a problem on a Nexus One running official Gingerbread.   The action buttons don't respond on initial start.  The \"IcsLinearLayout -> LinearLayout in ActionMenuView\" workaround fixes the issue.\n. You are right -- wow -- I cannot believe they write code like that and it's not caught in the code review....\n. Well, I am not specifying an adapter.  It's the tab navigation style that turns into a list when there are too many tabs to show.\nThe screenshots show the result of identical code running on ICS vs. ABS on 800x480 screen size.  I would expect identical results on both. \n. Sorry, it's the Tab Navigation style, that turns into the drop down list when the screen is in landscape orientation on a small screen device.\n. Hi, I can put something together if needed, but maybe the difference is that I had one \"long\" word vs a few shorter words?\n. Not sure.  The width appears to be the same/very close in both cases.  Can\nyou modify your test case and just change it to one long word?  My guess is\nthat this will come down to some difference in the word breaking algorithm\nused on different platforms.\nOn May 14, 2012 11:30 AM, \"Jake Wharton\" \nreply@reply.github.com\nwrote:\n\nYes, probably. You are also likely seeing less text because of #427 which\nreduces the width of collapsed tab navigation because of some bug in the\nway Android measures views. Once a workaround for that bug is found you may\nsee an additional word displayed before the ellipses.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/468#issuecomment-5682093\n. Nexus One.Stock GB\n. This is actually not your problem -- the I still think the state_activated stuff should be factored out as who knows what happens on other devices when getting an unknown state_* constant.\n. I run into this problem and duplicated on my Nexus One Gingerbread.\n\nIt only happens only in Landscape mode, but this is a real problem when you have icons shown/hidden problematically.\nModified ActionModes.java is below.\nSteps to reproduce:\n1) Hit the Start button, this will display the action bar, with Button 2 and 3.\n2) Hit the Cancel button, this will make Button 1 visible\n3) Hit Button 3 by showing the overflow menu, this will make Button 1 disappear\n4) Hit the Start button again, the app crashes.\nIn my \"real app\" I get the crash right after step 3 -- not exactly sure what's the difference.\npublic class ActionModes extends SherlockActivity\n{\n    ActionMode mMode;\n    boolean    visible;\n```\n@Override\nprotected void onCreate(Bundle savedInstanceState)\n{\n    setTheme(R.style.Theme_Sherlock); //Used for theme switching in samples\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.action_modes);\n((Button)findViewById(R.id.start)).setOnClickListener(new View.OnClickListener()\n{\n    @Override\n    public void onClick(View v)\n    {\n        ActionModes.this.visible = false;\n        ActionModes.this.mMode = startActionMode(new AnActionModeOfEpicProportions());\n    }\n});\n\n((Button)findViewById(R.id.cancel)).setOnClickListener(new View.OnClickListener()\n{\n    @Override\n    public void onClick(View v)\n    {\n        ActionModes.this.visible = true;\n        ActionModes.this.mMode.invalidate();\n    }\n});\n\n}\nprivate final class AnActionModeOfEpicProportions implements ActionMode.Callback\n{\n    public AnActionModeOfEpicProportions()\n    {\n        // TODO Auto-generated constructor stub\n    }\n@Override\npublic boolean onCreateActionMode(ActionMode mode, Menu menu)\n{\n    menu.add(\"Button1\") //$NON-NLS-1$\n    .setIcon(R.drawable.ic_compose).setTitle(\"Long button 1\").setShowAsAction(MenuItem.SHOW_AS_ACTION_IF_ROOM | MenuItem.SHOW_AS_ACTION_WITH_TEXT);\n\n    menu.add(\"Button2\") //$NON-NLS-1$\n    .setIcon(R.drawable.ic_search).setTitle(\"Long button 2\").setShowAsAction(MenuItem.SHOW_AS_ACTION_IF_ROOM | MenuItem.SHOW_AS_ACTION_WITH_TEXT);\n\n    menu.add(\"Button3\") //$NON-NLS-1$\n    .setIcon(R.drawable.ic_refresh).setTitle(\"Long button 3\").setShowAsAction(MenuItem.SHOW_AS_ACTION_IF_ROOM | MenuItem.SHOW_AS_ACTION_WITH_TEXT);\n\n    return true;\n}\n\n\n@Override\npublic boolean onPrepareActionMode(ActionMode mode, Menu menu)\n{\n    menu.getItem(0).setVisible(ActionModes.this.visible);\n\n    return true;\n}\n\n\n@Override\npublic boolean onActionItemClicked(ActionMode mode, MenuItem item)\n{\n    ActionModes.this.visible = false;\n    mode.invalidate();\n\n    return true;\n}\n\n\n@Override\npublic void onDestroyActionMode(ActionMode mode)\n{\n}\n\n}\n```\n}\n. This does NOT happen on native ICS, I just tested it.\n. I fixed this in my project by backporting the ICS PopupWindow class.    It's a fairly trivial exercise (4 anims, 2 interpolators, 2 integers, couple of styles copied), but I don't really want to submit a diff as double checking my work would probably take as long as doing it in the first place.  Unless you want me to....\n. Hi, thanks.  I know how to add the missing strings, but that's not the point.  There are only about 10 strings used by ABS.  Adding the top 10 languages would generate an additional 100 strings.  The size increase is insignificant, but users not having to do maintain a separate branch is I think desirable.\n. It is NOT happening on pure ICS, only on ABS.  Will investigate why as I need to have this fixed today.\n. 4.1\n. Of course.  I just changed all my code from Ics* to the built-in Android classes and it works like a charm.  The action bar is shown, just the callbacks are not invoked.\n. These are my callbacks:\n```\n@Override\npublic void onActionModeStarted(ActionMode actionMode)\n{\n    super.onActionModeStarted(actionMode);\nthis.selectBar = actionMode;\nonActionModeStatusChanged();\n\n}\n@Override\npublic void onActionModeFinished(ActionMode actionMode)\n{\n    super.onActionModeFinished(actionMode);\nthis.selectBar = null;\nonActionModeStatusChanged();\nunselectAll();\n\n}\n```\nThe ActionMode object is of class com.actionbarsherlock.view.ActionMode.\n. By the way, should probably make onActionModeStarted(android.view.onActionModeStarted) final in SherlockActivity so it cannot be overridden accidentally, though it's not the issue in my case.\n. @iNotes, yes, I already replied to you.  Of course I call startActionMode or it wouldn't work on ICS.  The Action Bar is shown, just the callbacks are not invoked.  Please don't take me for a dummy.\n. Well, ActionModeNative never seems to call onActionModeStarted(com.actionbarsherlock.view.ActionMode).  Matter of fact, the only place onActionModeStarted(com.actionbarsherlock.view.ActionMode) is called from ActionModeCompat.  So it's not surprising it's not working.\nI believe the native Activity would call onActionModeStarted(android.view.ActionMode) with the wrapped object, so I might be able to use it as a (fragile) work around.\n. Oh, I can't use that as a workaround as the android.view.ActionBar classes don't exist pre-ICS.  So this needs a real fix.\n. @Sleepybear :  Cannot.  android.view.ActionMode doesn't exist pre-HC.\n. For now, I fixed it by changing ActionBarSherlockNative:\n```\n@Override\npublic ActionMode startActionMode(com.actionbarsherlock.view.ActionMode.Callback callback)\n{\n    if (DEBUG)\n        Log.d(TAG, \"[startActionMode] callback: \" + callback);\nif (mActionMode != null)\n{\n    mActionMode.finish();\n}\nActionModeCallbackWrapper wrapped = null;\nif (callback != null)\n{\n    wrapped = new ActionModeCallbackWrapper(callback);\n}\n\n//Calling this will trigger the callback wrapper's onCreate which\n//is where we will set the new instance to mActionMode since we need\n//to pass it through to the sherlock callbacks and the call below\n//will not have returned yet to store its value.\nmActivity.startActionMode(wrapped);\n\n// androidmoney -- Added the next 3 lines\n    if (mActionMode != null && mActivity instanceof OnActionModeStartedListener)\n    {\n        ((OnActionModeStartedListener)mActivity).onActionModeStarted(mActionMode);\n    }\nreturn mActionMode;\n\n}\n@Override\npublic void onDestroyActionMode(android.view.ActionMode mode)\n{\n    mCallback.onDestroyActionMode(mActionMode);\n\n  // androidmoney -- Added the next 3 lines\n    if (mActivity instanceof OnActionModeFinishedListener)\n    {\n        ((OnActionModeFinishedListener)mActivity).onActionModeFinished(mActionMode);\n    }\n}\n\n```\n. Then why have it there?\n. @SimonVT Dude, no offense, but you need to tone it down a bit.  You are absolutely right about what you are saying, but you are coming across as an a-hole on here on all the other threads.\n. Here's the link to the project:\nhttps://docs.google.com/open?id=0B3ZnIh8rsoQxOHZQYzR6WDRLQnc\n. Very is setHasOptionsMenu() meant to be called from?  Not from the Fragment's onCreate()?\n. You are right -- not an ABS bug.  I guess I still don't understand how setHasOptionsMenu() meant to be used.\n. Ok, I changed my code to only add the fragment if (state == null), but I still need to call setHasOptionsMenu() as it is not remembered.  So I am now calling it from onActivityCreated() and that seems to work. \nThanks!\n. But it is -- it's used by IcsSpinner.DropdownPopup\n. You don't get a compiler error because it calls down to setSelection() in IcsAbsSpinner() instead.  But it should be calling IcsListPopupWindow's setSelection().\n. The issue nazi strikes again.\nYes, there would be inconsistencies -- if there were many navigation items on the spinner, on a real Action Bar it would display the currently selected item, but on ABS it would display the first item.\nNo, I won't create a sample project, if you cannot see that this is an issue, I don't really care.\n. Created #882 \n. Thanks.  Perhaps a blurb on top of abs__styles or adding the abs__ prefix to the same-named attributes would be useful.  I just wasted about 90 mins on this as it's not obvious what's going on.\n. @JakeWharton As per his last line, yes.....\n. Hmmm, I just copy/pasted one of the other classes and made a few changes.  It looked fine in my editor.  Sorry about that.\n. ",
    "suomi35": "I am experiencing the issue with action buttons as well. I am not having any luck with the \"IcsLinearLayout -> LinearLayout in ActionMenuView\" workaround, however.\n. ",
    "willlunniss": "OK. So far, everything else I have tried in the sample app and in my app that i'm moving to use ABS in work as expected.\n. I think it is because the actionbar is smaller in landscape mode than portrait and on an LDPI screen its too small for the default progress bar?\nI've overridden the progress bar size to be a smaller and that allows it to display correctly in landscape mode.\n. Just to add i've seen the same problem with an M9 but not any of the other devices that my users have, it has been on my todo list for a while to investiage.\n. Do you have a magical list of the properties that it doesn't like? Is it going to be all android prefixed ones that were introduced in and after honeycomb.\n. I've been looking into the same problem, however, I've got about as far as you for working it out. I have recieved crash reports from useres with ICS 4.0.3 and 4.0.4 on a mix of devices and have been waiting to hear back from them to get more details as I wasn't sure which ROM they were using. I don't have an ICS device, so my next step was to see if it happens in the emulator. Again it is in an activity that doesn't use onRestoreInstanceState.\n. I'll try to put together as small as example as possiable at the wekeend. However the problem is, the exception doesn't go through any of my code, so i'll have to work out what I'm using, that triggers it.\n. I tried to put together an example, but I cannot get it to happen in the emulator (4.0.3). I start the app, then load lots of other apps until I get the \"ActivityManager No longer want package\" message, then start the app again, but it loads fine without any exceptions. I also tried rotating and then starting it again.\n. Just a warning that the new NoticationCompat implementation (the only benifit of rev 10), tries to load the ICS implementation for android 3.2, which then causes a FC due to NoSuchMethodError http://code.google.com/p/android/issues/detail?id=36359 so its not really worth updating.\n. I've started to see reports of this after a recent update that has Fragments in a ViewPager that provide action items with sub menus. I'll see if I can actually reproduce it myself in an emulator (something which is usually a pain for these sorts of bugs) and extract out a small enough example.\n. Are you considering accepting this, or just leaving it open for people to find easily?\nUp until now I've been using a local copy of ABS with this patch applied, but it would be nice to move to the new aar via gradle at some point soon.\n. Search for SherklockNavigationDrawer for how to do it. \nhttps://github.com/tobykurien/SherlockNavigationDrawer\nBasically create a new MenuItem with same id (android.R.id.home) as the Sherklock MenuItem\n. ",
    "AnderWeb": "Hi Jake, I've tested a simple fix and it works, seems to be cause of a bug within RotateDrawable on android 2.1.\nHere on line 991 https://github.com/JakeWharton/UnbreakMe/blob/master/src/asdf/afsd/adsf/IcsProgressBar.java#L991 change to \n\nmIndeterminateDrawable.setBounds(0, 0, right-left, bottom-top);\nmRealLeftBound=left;\nmRealTopBound=top;\n\nAlso you need to store in 2 new class members the real left and top bounds coordinates so we can later move the canvas in line 1008 https://github.com/JakeWharton/UnbreakMe/blob/master/src/asdf/afsd/adsf/IcsProgressBar.java#L1008\n\ncanvas.translate(getPaddingLeft()+mRealLeftBound, getPaddingTop()+mRealTopBound);\n\nSorry for not sending a pull request, but I don't have my ssh keys at work.\n. ",
    "rciovati": "It's pretty strange. I just tried it on:\n-2.2 emulator: ok\n-2.3.3 emulator: ok\n-2.3.7 device: not woking\nI will take a look more in detail.\n. I noticed that the emulator re-create the activity when i rotate the screen, also if i have\nxml\nandroid:configChanges=\"orientation\"\nso it's normal that it works. \n. For me doesn't work, but this is not important. \nOn the device (htc desire with 2.3.7) for avoid activity recreation it's enough \nxml\nandroid:configChanges=\"orientation\"\nbut the problem is that action bar is not properly refreshed. \n. I didn't check on AOSP, i'm sorry about that.\nI thought it was necessary to change the icons because looking into the source code i saw the ImageView inside abs__search_view.xml , that should be the search button on the action bar, when the actionview is collapsed: \nxml\n    <ImageView\n            android:id=\"@+id/abs__search_button\"\n            style=\"?android:attr/actionButtonStyle\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"match_parent\"\n            android:layout_gravity=\"center_vertical\"\n            android:src=\"?attr/searchViewSearchIcon\"\n            android:contentDescription=\"@string/abs__searchview_description_search\"\n            />\nI also noticed that searchViewSearchIcon in the Theme.Sherlock.Light points to @drawable/abs__ic_search_api_holo_light so i thought that action bar icons were wrong. \n. I solved my problem using the right context when i create the ShareActionProvider.\nI was using\nShareActionProvider shareActionProvider = new ShareActionProvider(getActivity());\nbut the right way to create it is:\nShareActionProvider shareActionProvider = new ShareActionProvider(getSherlockActivity().getSupportActionBar().getThemedContext());\n. No, i'm not.\nI've prepared a toy project that demonstrate the issue.\nhttps://dl.dropbox.com/u/6260980/test-app.zip\n(the code is not perfect but it is enough to show the problem).\n. True, it happens also with native SearchView.\nAnyway, making some other tests i found that using android:showAsAction=\"collapseActionView|ifRoom\" (i was just using android:showAsAction=\"ifRoom\")  on the SearchView solves the problem because the SearchView is moved in the top ActionBar when it is not collapsed. \nMaybe i was just using it wrong...\nThanks.\n. Nevermind.\nI solved this problem just setting  in the AndroidManifest.xml, i didn't see that Maven doesn't insert it.\n. ",
    "ocramedl": "I'm using ABS on a HTC smartphone device (800x480) with 2.3.7 too and have issues similar to what rciovati described when using:\nandroid:configChanges=\"orientation\"\nIn particular, if I start my activity in portrait and rotate to landscape, ABS action icons are correctly moved from bottom to top, they also work correctly, but they do not display labels as they should, since I used:\nandroid:showAsAction=\"ifRoom|withText\"\nOn the contrary, if I start the activity in landscape and rotate to portrait, ABS action icons are correctly moved from top to bottom, but they DO NOT work correctly (they do not react to clicks), and they still display labels as if they where on top.\nI know that using the android:configChanges attribute is not recommended, but in some contexts it really comes in handy! (e.g. I have a very complex fragment backstack that I would really not like to save and restore upon screen rotation)\nCould you tell us whether/when you are going to fix up such issues?\nAlternatively, or in the meantime, do you have any suggestion about how we can (at least temporarily) overcome such issue by making some changes in the ABS library code?\nFor instance, is it possible to programmatically recreate just the ABS, instead of the whole FragmentActivity when needed? Or is it possible to modify the code to make this possible?\nThanks in advance (and thanks for your great library, of course!).\n. ",
    "luciofm": "Hi Jake,\nCan you give me some directions on this issue, on where is the problem, and what is your possible solution to it.\nMaybe I could take a look on it\n. I just experienced an extrange behavior here,\nI'm testing on a HTC Desire 2.2, and when using android:configChanges=\"keyboardHidden|orientation|screenSize\" and android:uiOptions=\"splitActionBarWhenNarrow\", when I rotate the device, if I double click and actionbar Tab, when I restore the original orientation, the actionbar finally receives the onTabSelected() on the double touched Tab.\nIf I click only once in another tab, when restoring to the original orientation, the onTabSelected() is not called.\n. ",
    "savascinar": "I have same experience. On 2.3.5 , samsung galaxy player 5.0  ,  and use last version sherlock library.\n. ",
    "chris84": "Is there any workaround or fix for this?\nBesides removing the android:configChanges entry? \n. ",
    "lindalee": "I have this problem too.\nLooks like it is resolved since Jelly Bean(Android 4.1.*) . \nhttp://hala01.com/src/android/android-4.1.1_r1/HTML/S/58637.html#L329\nsetSplitActionBar is called when onConfigurationChanged called, and before 4.1 there was no code dealing with LayoutParam and mActionMenuPresenter(who controls the count of icons?)\nHere is my question:\nCan I replace setSplitActionBar with JellyBean's code?\nMy code runs well so far.\nThank you for your time.\n. ",
    "atermenji": "Is this fixed already?\n. sometimes this exception appears in setHasOptionsMenu(true) method and leads to the same stack trace.\n. I guess, you are right, thanks for the help\n. Assets can be bundled in library project with some kind of hack (http://stackoverflow.com/questions/7610355/font-in-android-library). \nThe other thing if this is really needed.\n. ",
    "tianon": "We are having a similar issue, and we have made one tiny modification to the provided \"demos\" sample application to reproduce it.\nWe added android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize\" to the TabNavigation <activity> tag in the manifest.\nOnce you've got it running with that change, pull up the \"Tab Navigation\" demo on a phone running 2.3 or lower and rotate your screen.  Try clicking any one of the tabs displayed, and they're not clickable.  If you change the demo to instead have 10, 20, or 30 tabs (to force a spinner), then the spinner is also not clickable, and has the odd side effect that if you click it and then rotate back, the screen updates and then the spinner contents display in the new orientation on top of everything else.\n. Indeed, however this is the only way (currently) to have an embedded WebView not reload the entire page every time the screen rotates.\n. What if the WebView is inside a fragment that doesn't get the option of onRetainNonConfigurationInstance?  Is setRetainInstance the alternative, or does our containing Activity have to keep track of saving all of them?\n. Sorry for the double post, but mostly for posterity's sake, I can confirm that using setRetainInstance does indeed work, provided that you do not return the WebView object directly during onCreateView, and instead return some kind of container, and then remove the WebView from the container during onDestroyView, keeping the WebView object as a state variable that you then add back during the next onCreateView (which occurs right after rotation, so be careful not to recreate a new WebView if you already have one stored away).\n. ",
    "sabagithub": "I've read that detaching the WebView from the window during a configuration change, and re-attaching it when a new activity is created will cause the WebView to leak the old activity from which it was created. The reason is that you can't re-assign the WebView's context, so it's still holding onto the old activity. My source: https://groups.google.com/forum/#!msg/android-developers/cWnxkQ8RLeY/RA1n77EDeR8J\n. ",
    "alexzaitsev": "Guys I have a workaround. Look at this stackoverflow answer: http://stackoverflow.com/a/20590052/1140997\nPerfectly works for tabs.\n. ",
    "antonj": "Thanks, I'll try that for now\n. The sample is lost again. Are there any news on this?\n. I've only tried this on Samsung Galaxy Nexus, but this works great with no issues as long as you remove the values-v11 and values-v14 folders from ABS-library.\nThis is really good for heavily customized ActionBars, no need to handle the native ActionBar anymore. Long live ActionBarSherlock!\n. ",
    "Sleepybear": "I know it has issues on ICS if you just force it to use the Compat implementation. I had started to try and iron out the issues but didn't get to them all by the time I got busy with other things.\nTheming was definitely an issue, because Theme.Sherlock.* inherit from ICS Holo themes and so the compat implementation has issues accessing the properties. I can't remember what else was a problem\n. That would definitely solve the Theming issues, but you may want to just\nremove the abs__styles.xml and abs__themes.xml, I can't remember if there\nwere some other dimens.xml or things in there off the top of my head.\nOn Fri, Apr 27, 2012 at 1:29 AM, Anton Johansson <\nreply@reply.github.com\n\nwrote:\nI've only tried on Samsung Galaxy Nexus, but this works great with no\nissues as long as you remove the values-v11 and values-v14 folders from\nABS-library.\nThis is really good for heavily customized ActionBars, no need to handle\nthe native ActionBar anymore. Long live ActionBarSherlock!\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/282#issuecomment-5377014\n. Seems like I remembered wrong, and there is only theme/style stuff in the values-v11/14 dirs. The dimens and other things are handled by screen size resource quantifiers. Will have to remember that in the future.\n. Issue with the layout in layout-large-land, fixed it and added a pull request.\n. Just updated my acer A500 to ICS and made a quick test app not using the ABS library and guess what... same shit happens, so this is a bug in the ICS Source. Going to work on a work around for ABS library. \n\nOnly took me 3 hours of digging through styles/themes to decide to make a native test app...\n. http://code.google.com/p/android/issues/detail?id=26008\nOpened bug report on b.android.com\n. Can fix it on <4.0 by using style attributes, either by adding a new one or changing what attribute the abs__action_mode_close_item.xml references, but since 4.0+ uses native action bar, can't fix it. If you override the textAppearanceSmall attribute to be the light color, then all the text in the content will be un-readable.\nJake, got any thoughts?\n. Same as issue #314\n. It's the way the framework does the default styling. In order to have it correct you need to style it manually\n. Also crashes for a normal menu item when android:showAsAction is set on a GB emulator.\njava.lang.NumberFormatException: unable to parse '@16973911' as integer\n        at java.lang.Integer.parse(Integer.java:383)\n        at java.lang.Integer.parseInt(Integer.java:372)\n        at com.android.internal.util.XmlUtils.convertValueToInt(XmlUtils.java:122)\n        at android.content.res.TypedArray.getInt(TypedArray.java:254)\n        at com.actionbarsherlock.view.MenuInflater$MenuState.readItem(MenuInflater.java:353)\n        at com.actionbarsherlock.view.MenuInflater.parseMenu(MenuInflater.java:146)\n        at com.actionbarsherlock.view.MenuInflater.inflate(MenuInflater.java:96)\n        at us.sleepybear.android.mpgcalcpro.MainActivity.onCreateOptionsMenu(MainActivity.java:59)\n        at com.actionbarsherlock.app.SherlockFragmentActivity.onCreatePanelMenu(SherlockFragmentActivity.java:225)\n        at com.actionbarsherlock.ActionBarSherlock.callbackCreateOptionsMenu(ActionBarSherlock.java:553)\n        at com.actionbarsherlock.internal.ActionBarSherlockCompat.preparePanel(ActionBarSherlockCompat.java:463)\n        at com.actionbarsherlock.internal.ActionBarSherlockCompat.dispatchInvalidateOptionsMenu(ActionBarSherlockCompat.java:269)\n        at com.actionbarsherlock.internal.ActionBarSherlockCompat$1.run(ActionBarSherlockCompat.java:968)\n        at android.os.Handler.handleCallback(Handler.java:587)\n        at android.os.Handler.dispatchMessage(Handler.java:92)\n        at android.os.Looper.loop(Looper.java:123)\n        at android.app.ActivityThread.main(ActivityThread.java:3683)\n        at java.lang.reflect.Method.invokeNative(Native Method)\n        at java.lang.reflect.Method.invoke(Method.java:507)\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:839)\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:597)\n        at dalvik.system.NativeStart.main(Native Method)\n. Believe this has to do with showAsAction not being an attribute until 3.0. When I change to:\njava\nif(Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {\n                itemShowAsAction = a.getInt(R.styleable.SherlockMenuItem_android_showAsAction, -1);\n            } else { // Grab it the old style way\n                itemShowAsAction = attrs.getAttributeIntValue(\"http://schemas.android.com/apk/res/android\", \"showAsAction\", -1);\n            }\nit no longer crashes on GB for when I have showAsAction set on a normal menu item. Was trying to maybe define it in a values-v5 folder, but since you're compiling against 4.0+ it complains that it already exists. The only other option I can think of is to use a non-prefixed attribute. \nAlso works with your menu xml provided.\n. Might be related to: https://github.com/android/platform_frameworks_base/blob/78996c9376ec8568e2bf9fbdee07f618936a7667/core/res/res/values/attrs.xml#L3616\nSeems it used to be an enum then changed to be bit flags. Though shouldn't getInt() work with an enum?\n. I was thinking it might have been put in GB as an enum but non-public and that's why it was having issues, but that doesn't really make sense either.\n. It has a value, it's just not an integer on <2.3 . I can't explain it\nworking on 2.1, I think that has something to do with the submenu. ABS4.0\ndefines it using the android: prefix within the Sherlock.ThemeMenu or\nwhatever it's named, so it would just reference the framework attribute if\nit exists... unless I'm totally confused\nOn Thu, Mar 1, 2012 at 12:27 PM, Jonathan <\nreply@reply.github.com\n\nwrote:\nit looks like there is no value for android:showAsAction then up to crash\nhard.\nI am wondering this could work\n``` java\nif (a.hasValue(R.styleable.SherlockMenuItem_android_showAsAction)) {\n   itemShowAsAction =\na.getInt(R.styleable.SherlockMenuItem_android_showAsAction, -1);\n} else {\n  itemShowAsAction = -1;\n}\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/317#issuecomment-4269521\n``````\n. Do you mean you were calling invalidateOptionsMenu yourself or you removed it from the ABS implementation?\n. Simon's solution is better.\n. Using your provided project, if I switch FragmentActivity and Fragment for SherlockFragmentActivity and SherlockFragment, respectively, I get the correct behavior expected with no unresponsive menus. Are you sure you're using the latest from the 4.0-wip branch as well as the correct imports from the support-lib?\n. Do you have to have your Tabs as SherlockFragmentActivities ? Would regular Fragments not suffice?\n. How about instead of hijacking a github issue you either start a post on the google group at \nhttps://groups.google.com/forum/?fromgroups#!forum/actionbarsherlock or hop on Freenode IRC and join #actionbarsherlock\n. That is a bit odd as I have a custom ActionProvider inside a submenu in my app that works amazingly well, even on pre 3.0. Could be something with the ShareActionPrivder code. I know it's a weird setup when it's in a submenu...\n. Do you happen to have a sample apk and/or source code?\n. ABS automatically uses the native action bar on 4.0+, so this might be an ICS bug. Try testing it without ABS if you can.\n. If this is happening only on ICS it is more than likely a framework bug.\n\nTry it on ICS without ABS and see if you can reproduce. If the behavior is not present on ICS without the ABS library then something needs to be investigated.\n. What version of ABS?\n. Also, are you overriding the correct onActionMode... callbacks, with the com.actionbarsherlock Imports?\n. Try override both onActionModeStarted(com.actionbarsherlock.view.ActionMode) and onActionModeStarted(android.view.ActionMode) for now and see if that will catch both situations.\n. Is this on ICS or pre-ICS? What version of ABS? Got a screen shot and/or sample code?\n. ",
    "1zaman": "This issue is not completely fixed - it needs to be fixed in SherlockFragmentActivity and ActionBarSherlockCompat also.\nI am encountering it after updating to 4.3 because debug logs are enabled by default there.\nSee http://stackoverflow.com/questions/16057108/null-pointer-exception-showing-in-action-bar-sherlock-library\n. Of course - the real bug is in Android MenuItemImpl toString() method which is delegated to title without a null check on it. The debug logging in ActionBarSherlock invokes this bug by implicitly calling toString() on the menu item through String concatenation. Replacing that with an explicit call to getTitle() or getTitleCondensed() fixes this issue.\n. ",
    "berdon": "It looks like the issue is not adding a \"title\" attribute in XML to menu items.\n. ",
    "ianpartridge": "Might be better to just whitelist the stuff we do want managed in git, rather than whack-a-mole-ing forever:\n.gitignore:\n*\n!library/\n!README.md\netc..\n. ",
    "svenmeier": "Thanks for the tip, extending from NineLinearLayout works as a workaround.\n. The workaround works fine here.\nThanks\n. ",
    "Scott1234Abc": "Sorry - my bad, false alarm.  Had reverted to a prior version and forgot. RC1 is fine in this case.\n. ",
    "mattcoz": "Oh, I see, that makes sense.  The Tab is large, hdpi, and has a resolution of 1024x600.  I believe that the reason they use sw600dp is for devices this size that use mdpi, like the Kindle and Nook, so using large-mdpi and xlarge should be pretty close.  It is the other two that are causing the problem on the Tab, especially large-land-hdpi which makes the action bar 56dp when it should be 40dp.  Unfortunately large-mdpi would then incorrectly match some cheap 7\" tablets that have a resolution of 800x480, but I guess it can't be perfect.\n. That's still not right.  The Galaxy Tab should be using values and values-land and the Nook and Fire should be using values-sw600dp.  56dp on the Tab is huge.  values-large-land and values-large-hdpi should be removed.  Honestly, I think 48dp for the Nook and Fire in landscape would be better, but that's not what ICS uses.\n. I guess it comes down to your definition of what looks right.  I'll just change it in my code to match ICS.\n. I didn't think it was a screw-up but a design decision.  What's interesting though is that both the Galaxy Tab 7.0 and Galaxy Tab 2 use MDPI, so for whatever reason they changed their mind.\nIf you think the Nook and Kindle don't have enough room for 56dp in landscape, why would you think the Tab would have enough room for 48dp?  56dp on the Nook/Kindle is 56px while 48dp on the Tab is 72px.  This is why ICS's use of 40dp looks better on the Tab.\n. ",
    "spacecowboy": "I experienced this as well\n. ",
    "neclepsio": "Thank you for your great work.\nOn Mon, Feb 20, 2012 at 9:50 PM, Jake Wharton <\nreply@reply.github.com\n\nwrote:\nAdded it manually. Thanks.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/pull/294#issuecomment-4061466\n. \n",
    "petar-bogdanov": "I wish this had been advertised:\nOn 02/22/2012 07:07 AM, Jake Wharton wrote:\n\nThe current released version of ActionBarSherlock (v3) was developed before ICS was a blip on anyone's radar and as such accounted for the lack of space on phones differently than the Android team chose to.\nThe next major version (which is only about two weeks away) is a backport of the ICS action bar including all of its behavior. It properly mirrors the behavior of the native ICS action bar on small devices when dealing with list navigation and titles. Keep and eye out for it or try the betas.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/295#issuecomment-4098310\nI'll definitely try it. How is it, stability-wise? Would you chance \nreleasing an application with it?\n\n\nPetar Bogdanov\nSoftware developer\nMentorMate\n2101 Hennepin Avenue S, Suite 202\nMinneapolis, MN 55405 USA\nmobile: +359878611948\nskype: mentormate_petar.bogdanov\nwww.mentormate.com http://mentormate.com\n<http://mentormate.com>\nThis e-mail may contain confidential and/or privileged information. If \nyou are not the intended recipient (or have received the e-mail in \nerror) please notify the sender immediately and delete this e-mail. \nThank you.\n. ",
    "bill350": "Hi,\nI have the same problem with Android 2.3.6, so, is it impossible to fix this graphic bug ?\nThere is no problem with other apps which not use ActionBarSherlock,\nThanks\n. Thank you!\n. ",
    "DHuckaby": "@bill350 This is not a ABS bug. For reference here is the fix that I use:\nhttps://gist.github.com/d6b1d9c8e7f9d70c39de\n. Import the subdirectory, works perfectly for me.\n. @Goonie I am using Eclipse 3.6.2v2 with nested projects (Not explicitly just ABS) and they work perfectly fine.\n. This is a known bug in the framework: (Not just abs)\nhttp://stackoverflow.com/questions/2615528/preferenceactivity-and-theme-not-applying\n. This is related to #279, and is one of the complications that occur when you handle configuration changes yourself.\n\"...some developers choose to handle configuration changes themselves which is, in general, a short-term solution that will only complicate their lives later.\"\nref: http://developer.android.com/resources/articles/faster-screen-orientation-change.html\n. The solution within that issue does not work in this instance.\n. That shouldn't be an issue, you can define a parent that way. You can also do it with android defined themes like this 'android:Theme'. I have been doing it that way for years now without issues.\n. Shouldn't the resource ids be changes after a clean/recompile? I have sent my tester multiple builds so it should have fixed it if it was a collision right?\n. This was not an ABS issue.\n. Removing the jar would make it a real pain for new Eclipse users.\n. I have seen this also, but I don't use the configChanges manifest attribute.\n. @JakeWharton That is what I did in my app almost exactly, but before I caught the exception I saw it in the wild.\n. Here is an example of how to do it correctly.\nhttp://sriramramani.wordpress.com/2012/08/30/custom-menu/\n. Any update on this? I am really looking forward to this feature.\n. ",
    "GeorgeBills": "According to the AndroidManifest.xml - Version 3.5.1, version code 55.\n. Sorry about the late reply - I'm requesting FEATURE_NO_TITLE (from com.abs.view.Window) and everything's working correctly. I guess \"hide\" is just for temporary hiding? Either way, works now and thanks for the help.\n. ",
    "doncung": "Just tried out the lastest now and looks like this was fixed at some point with all the changes.\n. ",
    "scottkennedy": "https://github.com/JakeWharton/ActionBarSherlock/pull/503\nI'm submitting the same thing to Google.\n. ",
    "friscoMad": "Just FYI I found you fixed this on dev but I was able to fix it without resource changes in this 2 commits: b2c18a9d175f9092f928dcbda7a5971ab31d6b6b\n4bbfacb16e72dd7c827c929ca53aba66c09c2e1c\nNot sure if the rebase is fully needed but it seemed to fix several glitches on layout changes also.\n. To add more information, this happens to me only when actions that are not visible and become visible after the invalidateOptionsMenu() call.\nFor some strange reason it seems that all the key events are buffered and replayed when I push any physical keys.\n. After some more tests I found that this happens when the visibility of items is changed while the whole action bar is hidden, so I just changed the code to be sure that visibility changes occur only when the bar is shown.\n. I found this problem always on split action bar, the icons at the bottom bar are not clickable until some redraw is done, but for some strange reason the touch events are received but not translated to click events untill something else happens (back button, menu button, orientation change...).\nThis only happens when the view is initialized with an empty menu via onPrepareOptionsMenu returning false (or 0 visible items) or because the actionbar is hidden on onCreate.\nSo to avoid all this problems, I needed to make the action bar enabled by default (and hidden on touch as I am working on an image gallery) and onPrepareOptionsMenu always return true and at least one item.\nThen I can invalidate the menu as many times as I want and all the buttons are clickable even if they where initialized as invisible.\nNot sure what's the underneath problem, I tried to debug everything but it just seems like the touch events are not propagated correctly until something else \"unlocks\" them.\n. You should also wrap with try catch registerObserver, it is not as usual but I was able to reproduce that error also.\n. ",
    "tinspu": "Some how creating a share history file fixes this issue  \nthis can be fixed by using a custom share history file on app install.\ne.g. call CreateShareHisotryFile() on App Create()\n```\n public class YourBrokenAPP extends Application {\n  public static SHARE_HISTORY_FILE_NAME = \"c_share_hist.xml\";\n\n @Override\n public void onCreate() {\n     super.onCreate();  \n     CreateShareHisotryFile(); \n }\n\n private void CreateShareHisotryFile() {\n\n    String data = \"<?xml version='1.0' encoding='UTF-8' standalone='yes' ?> \"+\n                 \"<historical-records>\" +\n                  \"<historical-record activity=\\\"com.google.android.apps.plus/com.google.android.libraries.social.gateway.GatewayActivity\\\" time=\\\"1426500217970\\\" weight=\\\"1.0\\\" />\"+\n            \"</historical-records>\";\n    try {\n        OutputStreamWriter outputStreamWriter = new     OutputStreamWriter(openFileOutput(SHARE_HISTORY_FILE_NAME, Context.MODE_PRIVATE));\n         outputStreamWriter.write(data);\n        outputStreamWriter.close();\n    }\n    catch (IOException e) {\n        Log.e(\"Exception\", \"File write failed: \" + e.toString());\n    } \n}\n\n```\nthen on the fragments on onCreateOptionsMenu use share hist file we just created ....\n```\n     @Override\n    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\n         inflater.inflate(R.menu.main, menu);\n  // Set up ShareActionProvider's default share intent\n    MenuItem shareItem = menu.findItem(R.id.action_share);\n    mShareActionProvider = (ShareActionProvider)\n           MenuItemCompat.getActionProvider(shareItem);\n    mShareActionProvider.setShareHistoryFileName(c_share_hist.xml);\n}\n\n```\nthen it's all good\nENJOY.......\n. ",
    "Goddchen": "ok i see, thanks\n. ",
    "lnanek": "Disappointing change. Users have no clue the menu options exist without this. They don't try to hit the menu button on every activity they go to. I've even seen developers posting about wanting functionality that they think doesn't exist in the Market app that was hidden behind the menu button. So even power users don't check.\n. ",
    "hrj": "Are you sure that FloatMath is fast?\nCheck this discussion: http://stackoverflow.com/questions/15143735/using-floatmath-or-math-and-a-cast\n. ",
    "talklittle": "On ActionBarSherlock 3.5.1 I got around this by moving requestWindowFeature() before the super.onCreate() call.\n. ",
    "keyboardr": "I get the same issue when doing orientation changes on Gingerbread\n. ",
    "MichaelRocks": "After this fix the logcat on 3.X devices is full of warnings like\n08-21 00:45:09.766: W/Resources(19505): Converting to string: TypedValue{t=0x1/d=0x103011c a=2 r=0x103011c}\n08-21 00:45:10.695: W/ResourceType(19505): Requesting resource 0x103011c failed because it is complex\n08-21 00:45:10.695: D/dalvikvm(19505):   JDWP invocation returning with exceptObj=0x40675470 (Landroid/content/res/Resources$NotFoundException;)\nI'm not sure there are no wanings on other versions of Android. Also it seems that this fix is the reason of #540.\n. Attributes in com.actionbarsherlock.R.attr.SherlockMenuItem actually treated as some private attributes different from what they have to be. For instance, on Android 3.2 emulator SherlockMenuItem_android_actionProviderClass (0x01010389) is android:attr/preferenceFrameLayoutStyle. You can easily check this by calling getResources().getResourceName(0x01010389).\nThe reason is that this attribute was added in 4.0, and in previous versions the value of the attribute was used by the internal attribute. Only public attributes preserve their values from version to version, because they are listed in the public.xml file. So declaring attributes with android: prefix is not a good idea.\n. ",
    "ericklee": "But the list is generated by the library.\nIt is a tab navigation when there is enough room for the tabs.\n. Can I explicitly define the list layout only?\nOr do I need to create a separate adapter which includes all items to handle it?\n. Yes.\n. Problem seems solved if I replace \nmActionBar.setSelectedNavigationItem(position) \nwith \nmActionBar.getTabAt(arg0).select()\ninside method onPageSelected()\n. Issue seems still occur.\n. Does the latest 4.0.2 version fix this?\nI cannot recreate the bug now.\n. The code from johanols seems solved the problem!\n. I have this issue on ICS too but not on pre-ICS.\n. ",
    "yukuku": "I'm using 2.3.7\nCyanogenMod-7.1.0\non Nexus One.\n. I tried to strip most of the other classes etc, and the bug disappeared :(\nCurrently it's very hard to isolate it. I spend an hour to make the activity as similar as the project that exhibit the bug, but it failed..\nUnfortunately the project is closed source, but I would like to help as much as I can.\nThe commit in ABS that broke it was fca84af only. Should I try to locate lines within that commit that broke it?\nWill the apk of the app help finding the problem? (probably with DEBUG set to true in the ABS classes)\n. Great. The onCreateOptionsMenu I have where the return value is a boolean is on the activity. It's as below:\n@Override public boolean onCreateOptionsMenu(Menu menu) {\n    if (menu != null) getSupportMenuInflater().inflate(R.menu.activity_main, menu);\n    return true;\n}\nAs for the other onCreateOptionsMenus on the fragments, the return values are void.\nThe onOptionsItemSelected on the fragment is as follows:\n@Override public boolean onOptionsItemSelected(MenuItem item) {\n    switch (item.getItemId()) {\n    case R.id.menuAbout: {\n        SoundEffect.play(Sfx.plastic);\n        startActivity(AboutActivity.createIntent());\n    } return true;\n    default:\n        return false;\n    }\n}\nI tried to change the default case to return super.onOptionsItemSelected(item) but it seems that the super implementation also just return false, so it's the same. \nNo implementation of onOptionsItemSelected is written on the activity itself. Only the fragment.\nThe apk with DEBUG set to true on both the classes you mentioned is downloadable here:\nhttp://dl.dropbox.com/u/128693/tmp-absbug/Turbanizer.apk\nThe bug happens on the first screen after the splash screen where there is (i) button on the top-right corner. \nTo reproduce the bug: tap the (i) button, observe that nothing happens, then tap the select from album button. Suddenly the About screen appears, which should have happened when the (i) button is pressed.\n. @levinotik Yes, the purpose of the { } in the case statement is to create a new scope, in order that each case on the switch statement more self-contained. It doesn't affect the flow. \n@iNoles Version 2.3.7 is used by CyanogenMod, and I have tried this on the Intel x86 Emulator (you can create the AVD for this, it's the API Level 10 Intel Atom x86 System Image -- which seem to be Android 2.3.7, too (from system Settings -> About phone), although in the download list it shows as 2.3.3.\n. I managed to isolate the bug and I can share the complete project tree for examination. \nSource download: http://dl.dropbox.com/u/128693/tmp-absbug/turbanizerabsbug-1.zip\n- the project is located in angelsgate/TurbanizerAbsFail directory.\nAPK download (for convenience): http://dl.dropbox.com/u/128693/tmp-absbug/turbanizerabsbug-1.apk\nABS version 4.1.0.\n\nApparently it happens only if the splash screen is shown. \nIn order to show the bug, when running the app on Android 2.3.x, tap on the About (i) button on top-right, then nothing happens. Then tap on the \"Select from album\" button on the bottom. Suddenly both the \"Whatever\" and \"About\" activity comes out.\nStrangely, if we start the MainActivity without showing the splash screen, everything works well. You can try it by running MainActivity with boolean extra showSplash = false. e.g. by running\nadb shell am start -n yuku.turbanizerabsfail/.ac.MainActivity --ez showSplash false\n. @iNoles I agree with you. However this is a client's order which I have argued not to put splash screen into and I lost. \nBtw, it's not that different from having another activity on top of Main and then back from that activity to Main. \n. I got access to a 3.2 device and found that the action bar is duplicated (on top is the native action bar, below it is the ABS actionbar). Then when the user clicks the logo on the native action bar, that exception is thrown.\nIt was because I have a code similar to this before using ABS, that didn't get removed when integrating ABS.\nif (apilevel >= 11) { \n   setTheme(android.R.style.Theme_Holo)\n}\nThat doesn't seem to affect 4.0+ devices, only 3.x devices. \nSo I think it's my fault and there is no problem with ABS since ABS requires activities to use themes from ABS. Thanks for responding.\n. ",
    "guidedways": "To add on to this, this happens specifically if you call invalidateOptionsMenu(). We've removed all such calls and ensure we don't update or invalidate the ActionMode during or around the time it's hiding.\n. Jake I'd love to give you a demo app but I really don't know where to begin now (since our own app is immensely complex). I've actually forgotten what I was doing however I went back and looked at the code. All I can see is the code that I wrote to 'fix' the problem. I moved all the code from 'onActionItemClicked' within the ActionMode.Callback to the onDestroyActionMode (so basically if the user clicks something, I first close the ActionMode and then open the activity in onDestroyActionMode based on user's selection). This somehow ensured that the ActionMode and it's current animation had ended completely before launching a new Activity.\nIt seems within the current activity I was possibly invalidating or calling 'finish()' again on the actionmode callback in 'onPause' and that might have been killing the actionmode mid-way. Then the next time the actionmode was created, somehow the 'old' stale bar was still showing underneath or on the left if the phone was rotated.\nEither way if I do whatever I want to do in onDestroyActionMode (i.e. open a new activity) I ensure the ActionMode has finished animating completely and is now destroyed. This way I was able to fix the problem completely.\nI should point out this problem (i.e. before my fix to move the code to onDestroyActionMode from onActionItemClicked) does not exist on Icecream Sandwich. It used to work fine there but was failing on all other devices (OS 2.x).\nI do still suspect I was doing something funny (perhaps calling .invalidate() or finish() a second time while the actionmode) while I had already called 'mode.finish()' in onActionItemClicked inside the callback. \nI'm sorry for being vague but I did try to reproduce the issue again just now but wasn't able to (possibly because I've forgotten what was causing it and I made far too many changes to ensure it's fixed).\n. ",
    "UncertainSchrodinger": "Ah damn went to the wrong branch. Closing.\n. I see, a bit of misunderstanding on my part.\nI'll look in to it more thoroughly during the weekend.\n. ",
    "mosabua": "Stop it .. enjoy the rockies and switch off your phone.\n. We are hoping to add aar support to the Android Maven Plugin soon. Xavier is writing up a bit of a doc and hopefully somebody can implement this soon. Then abs can easily publish the aar to central.. \n. Nope.. I have been flooded and not had time to look at it anymore so far. There is branch with a copy of the apklib codebase but nobody has done anything more.. \n. ",
    "barees63": "I used the library project  from WIP 4.0 but the support jar from RC1\n. OK, you're right.. my apologies for the confusion, using Sherlock* classes the original problem is gone.  \nI do see a problem if I use the configChanges attribute to bypass the default orientation handling, then the ActionBar loses its items if you change to landscape and switching back to portrait leaves the AB unresponsive on all pages again.. not sure if this is an issue or just the way things are?\n. No problem, thanks for your responsiveness and good luck with the release.. it's looking really nice :) \n. ",
    "plackemacher": "I'm a little bit new to GitHub. FYI: This applies to the 4.0-wip branch.\n. ",
    "cocoahero": "I am also experiencing this weird defect with the action bar. I opened an issue on the android bug tracker and can be found here: http://code.google.com/p/android/issues/detail?id=36191\nHopefully we will get a definite answer on whether or not this is desired behavior. I for one hope it is a bug.\n. ",
    "chaturadilan": "Create a 1px * 1px .png image and name it noimage.png upload it to your drawable folder and set\ngetSupportActionBar().setIcon(R.drawable.noimage);\nin the action\n. ",
    "furyfred": "Hi. Just found a simple workaround.\nuse the following in your onCreate method :\nView homeIcon = findViewById(android.R.id.home);\n((View) homeIcon.getParent()).setVisibility(View.GONE);\nthis collapses the home button completely.\nPS : i'm using standard ActionBar but this should work the same\n. ",
    "wojanek": "Hellol I had the same problem i solved it with this code .\n```\n    actionBar.setLogo(null); // forgot why this one but it helped\nView homeIcon = findViewById(\n        Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB ? \n        android.R.id.home : R.id.abs__home);\n((View) homeIcon.getParent()).setVisibility(View.GONE);\n((View) homeIcon).setVisibility(View.GONE);\n\nactionBar.setDisplayShowTitleEnabled(false);\n\n```\nwell its like this because in PRE HONEYCOMB there is no android.R.id.home resource.\n. ",
    "czechnology": "The problem with these workarounds is that the title doesn't work as a \"Up\" button like it does when setDisplayShowTitleEnabled is set.\n. ",
    "makovkastar": "Or you can use this code:  actionBar.setLogo(new ColorDrawable(Color.TRANSPARENT)); \n. ",
    "Leandros": "Is there a workaround, where the icon / logo is hidden but the title can act as Up button?\n. Could someone provide a real example how to implement it? \n. I explained it a bit wrong, was late at night.\nI have a SherlockFragment, which open a SherlockDialogFragment via the ContextualActionMode. The Dialog contains a Spinner which closed state can't be themed. (I tried everything.)\nIf a simple Activity open the DialogFragment it work fine.\n. Hm, yeah. I see. I should've searched more before opening a issue. \nThere is already a bug on b.android.com http://code.google.com/p/android/issues/detail?id=36191\nand an old issue of ABS https://github.com/JakeWharton/ActionBarSherlock/issues/327\nSorry. ;)\n. ",
    "chunyan": "This is an old topic but I would like to add one comment about a caveat. The workaround only works if you display options enable DISPLAY_SHOW_HOME. So if for some reason you set your action bar's display options to something else, you need this line: \n        getSupportActionBar().setDisplayOptions(ActionBar.DISPLAY_SHOW_HOME | your_other_settings); \n. ",
    "arunantoney": "All workaround that post above collapsing the home icon but leaving a blank space. For avoiding that you need to set the logo size to zero . Below added my code snippet\n```\nactionBar.setLogo(new ColorDrawable(Color.TRANSPARENT));\n      View homeIcon = findViewById(\n                Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB ? \n                android.R.id.home : R.id.abs__home);\n        ((View) homeIcon.getParent()).setLayoutParams(new LinearLayout.LayoutParams(0, 0));\n        ((View) homeIcon).setVisibility(View.GONE);\n\n```\n. All workaround that post above collapsing the home icon but leaving a blank space. For avoiding that you need to set the logo size to zero . Below added my code snippet\nactionBar.setLogo(new ColorDrawable(Color.TRANSPARENT));\nView homeIcon = findViewById(\n                Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB ? \n                android.R.id.home : R.id.abs__home);\n        ((View) homeIcon.getParent()).setLayoutParams(new  LinearLayout.LayoutParams(0, 0));\n        ((View) homeIcon).setVisibility(View.GONE);\n. ",
    "AruntejaMididoddy": "This worked perfectly fine for me...in all devices\ngetActionBar().setDisplayOptions(-1, ActionBar.DISPLAY_SHOW_CUSTOM | ActionBar.DISPLAY_SHOW_HOME);\n. ",
    "ginkel": "You are absolutely right. Exchanging the padding for a layout_margin fixed the problem. Thanks a lot!\n. ",
    "app2go": "I'm using the sample app included in the 4.0-wip branch (ActionBarSherlock / samples / demos) not my own one. I can send you a screen shot if you need one.\n. Ok found the problem. FeatureToggles is still using the android.R.layout.simple_spinner_dropdown_item instead of R.layout.sherlock_spinner_dropdown_item (you were referring to ListNavigation that was changed with the commit).\nI guess you will do the change? Thanks for your quick answer and solution.\nIs there a way to donate some money? I really like your work and it helps me a lot with my current project and I'd like to show my appreciation somehow.\n. I just ran into that issue on a Kindle Fire 1st Generation.\nStrange about my case was that the exception was only thrown after I introduced a style for a MultiAutoCompleteTextView with android:autoCompleteTextViewStyle.\nI used android:actionBarStyle and android:actionModeCloseDrawable in my theme without problems. Only after the MultiAutoCompleteTextView style was added did it crash with the mentioned exception.\nPutting the two \"android:\" attrs in values-v11 did solve the problem.\nJust wanted to let you know in case someone else runs into that issue.\n. Same here (Android 3.2.1 HTC Flyer and 3.2 Samsung Galaxu Tab 10.1). Happens when the fragments are resumed (screen rotated -> activity restarts, fragments are reattached or activity is resumed (other activity started and terminated)).\nW/Resources( 4869): Converting to string: TypedValue{t=0x1/d=0x103011c a=-1 r=0x103011c}\nW/MenuInflater( 4869): Cannot instantiate class: @16974108\nW/MenuInflater( 4869): java.lang.ClassNotFoundException: @16974108 in loader dalvik.system.PathClassLoader[/data/app/com.onegravity.k10-1.apk]\nW/MenuInflater( 4869):  at dalvik.system.PathClassLoader.findClass(PathClassLoader.java:251)\nW/MenuInflater( 4869):  at java.lang.ClassLoader.loadClass(ClassLoader.java:540)\nW/MenuInflater( 4869):  at java.lang.ClassLoader.loadClass(ClassLoader.java:500)\nW/MenuInflater( 4869):  at com.actionbarsherlock.view.MenuInflater$MenuState.newInstance(MenuInflater.java:463)\nW/MenuInflater( 4869):  at com.actionbarsherlock.view.MenuInflater$MenuState.readItem(MenuInflater.java:366)\nW/MenuInflater( 4869):  at com.actionbarsherlock.view.MenuInflater.parseMenu(MenuInflater.java:147)\nW/MenuInflater( 4869):  at com.actionbarsherlock.view.MenuInflater.inflate(MenuInflater.java:97)\nW/MenuInflater( 4869):  at com.onegravity.app.activity.MyFragment.onCreateOptionsMenu(MyFragment.java:645)\nW/MenuInflater( 4869):  at android.support.v4.app._ActionBarSherlockTrojanHorse.onCreatePanelMenu(_ActionBarSherlockTrojanHorse.java:56)\nW/MenuInflater( 4869):  at com.actionbarsherlock.ActionBarSherlock.callbackCreateOptionsMenu(ActionBarSherlock.java:556)\nW/MenuInflater( 4869):  at com.actionbarsherlock.internal.ActionBarSherlockCompat.preparePanel(ActionBarSherlockCompat.java:483)\nW/MenuInflater( 4869):  at com.actionbarsherlock.internal.ActionBarSherlockCompat.dispatchInvalidateOptionsMenu(ActionBarSherlockCompat.java:273)\nW/MenuInflater( 4869):  at com.actionbarsherlock.internal.ActionBarSherlockCompat$1.run(ActionBarSherlockCompat.java:988)\nW/MenuInflater( 4869):  at android.os.Handler.handleCallback(Handler.java:587)\nW/MenuInflater( 4869):  at android.os.Handler.dispatchMessage(Handler.java:92)\nW/MenuInflater( 4869):  at android.os.Looper.loop(Looper.java:152)\nW/MenuInflater( 4869):  at android.app.ActivityThread.main(ActivityThread.java:4636)\nW/MenuInflater( 4869):  at java.lang.reflect.Method.invokeNative(Native Method)\nW/MenuInflater( 4869):  at java.lang.reflect.Method.invoke(Method.java:491)\nW/MenuInflater( 4869):  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:841)\nW/MenuInflater( 4869):  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:599)\nW/MenuInflater( 4869):  at dalvik.system.NativeStart.main(Native Method)\n. Same issue as #540\n. The overflow button is still there in action mode on GB devices. Do you intend to remove it from there too?\n. ",
    "Berglund": "I've recently bumped into this issue as well. I've got an activity which contains a fragment viewpager. When swiping between the fragments in the viewpager the actionbar items goes wierd and non-clickable, just like in this issue.\nWant me to create a small project using a viewpager which causes this too?\n. RC1. Will try out 4.0-wip. Will report back.\n. @JakeWharton I bump into the same issue using 4.0-wip.\n. @JakeWharton I've updated to bd157f8450616546bf74672af477307fd73728f8 and my issues with actionbar items being non-clickable seems to be resolved. Cannot recreate them, and they don't occur where they used to. Great!\n. ",
    "f-barth": "I'm running into this bug on pre-ICS devices. Is there a fix on the horizon? Or any known workaround?\n. ",
    "krisdb": "I am getting this issue on pre-ICS devices as well.  Here is a SO question I posted about it:\nhttp://stackoverflow.com/questions/15181631/actionbar-icons-overlaying/15182432\nand here\nhttp://stackoverflow.com/questions/15178207/actionbar-retaining-menu-item-in-gingerbread-and-below\nI ended up just checking the SDK version and not animating the menu item for pre-ICS devices.  Not ideal, but not much I can do.\n. ",
    "ened": "@iNoles U got me there for a second! :) The 2nd this is for the callback parameter, while the first is parameter to the Adapter\n@JakeWharton yes that's much better, thank you! :)\nIn case anyone likes to color the current selection, it works by overriding the getDropDownView in the SpinnerAdapter like this:\n``` java\nclass SimpleSpinnerArrayAdapter extends ArrayAdapter implements SpinnerAdapter {\n    public SimpleSpinnerArrayAdapter(Context ctx, BusLine busLine) {\n        super(ctx, R.layout.sherlock_spinner_item, new String[]{\n                ctx.getString(R.string.direction_to_station, busLine.getEndStation().getTranslatedTitle()),\n                ctx.getString(R.string.direction_to_station, busLine.getStartStation().getTranslatedTitle())\n        });\n        this.setDropDownViewResource(R.layout.sherlock_spinner_dropdown_item);\n    }\npublic View getDropDownView(int position, View convertView, ViewGroup parent) {\n    TextView view = (TextView) super.getDropDownView(position, convertView, parent);\n\n    if(position == getSupportActionBar().getSelectedNavigationIndex()) {\n        view.setBackgroundResource(R.color.abs__holo_blue_light);\n        view.setTypeface(null, Typeface.BOLD);\n    }\n    return view;\n}\n\n}\n```\n. ",
    "timroes": "I would consider this a really important topic, since ListViews are imho one of the most important usages of contextual action bars. We implemented a ListView, that does nearly what the native android implementation does. You can find it here: https://github.com/DokuWikiMobile/dokuwikimobile/blob/alpha/src/org/dokuwikimobile/ui/view/ABSListView.java\nI am not so much into the code of ActionBarSherlock, but I guess this code could perhaps be a help for an implementation in ActionBarSherlock. The javadoc shows the usage of the class and some differences to the native android implementation. \nFor an example on the usage, this class https://github.com/DokuWikiMobile/dokuwikimobile/blob/alpha/src/org/dokuwikimobile/ui/activity/ChooserActivity.java might help.\nI really hope this issue will soon be fixed in ActionBarSherlock :-)\n. ",
    "k0smik0": "Ok, i understood about \"no force in 4.x\" and \"no hardware button and other stuff\"... \nbut however it is still something strange.... \ni saw in demos, and i found that ActionModes.java: it shows overflow button in emulator sdk14 and in my phone (froyo)... \nand i would my activity like this. so i modified mine, almost exactly as \"actionmodes\": \nhttp://pastebin.com/Z1mMzWCf\nbut overflow button still doesn't appear in sdk14 emulator ;/\n[ using \"setTheme(R.style.Theme_Sherlock_Light_DarkActionBar_ForceOverflow);\" appears in 2.2 emulator (as expecting) ]\nwhat's wrong, now ;/ ?\n. a full activity is an activity which extends a sherlockactivity ?\ni'm using the static attach way 'cause i'll use roboguice, and then i have to extends from roboguice etc.\nyes, i know it exists a robosherlockactivity, but static attach \"delegate\" way seems cleaner, for me.\nhowever, now extends from sherlockactivity:\nhttp://pastebin.com/05vBnNzA\nbut no overflow button in my activity - and yes in actionmodes ;/\nok, it's 0.51 a.m. - i'm tired and perhaps it's easy to fall in wrong code. i have to sleep.\nhowever, do u find any errors in last code ?\n. ",
    "veeti": "Oops: I'm still a bit new to IntelliJ IDEA (although it has made development a million times less painful already). Unless both that and Notepad++ are lying to me, it should be right now.\n. Yes. \n. Here.\n. I think that it would also be a good idea to mention that context menus use the native classes. Confused me for a while when moving over to ABS4.\n. ",
    "mario20340": "I have the same issue and your fix doesnt seem to help me at all... \nI'm using viewpager to switch between 4 actionbar tabs... there is a fragment in every tab with different action menu items defined in onCreateOptionsMenu()... When I switch too fast between tabs (using slide guesture) action menu items suddenly disappear... This is happening on Froyo device... I cannot check on other devices because I dont have any other devices... In emulator I cannont slide that fast to recreate this behaviour.... any help why is this happening\n. I noticed that, when I've disabled action bar tabs everything works. Im using your viewpager indicator now insted of actionbar tabs and everything is fine... It seems that is something wrong with actionbar tab and its adapter\n. I don't have this bug when I use viewvpager indicator instead actionbar\ntabs... You can check my app on play store its called 9pm - nocni zivot,\nit's on Croatian...\nDana 27. 4. 2012. 10:02 \"Janusz Leidgens\" \nreply@reply.github.com\nje napisao/la:\n\nSo there is no fix or workaround for this bug?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/351#issuecomment-5376594\n. \n",
    "snodnipper": "just for the record...I seem to be able to reliably create this issue with the following demo: https://github.com/snodnipper/page-flipper-race-condition/.  Seems to be anything that changes a view can cause items to become missing.  An admob advert change does it too...clearly changing the images in the demo code exacerbates the problem quite nicely.\nRunning on stock android 4.0.4.\nI haven't yet found a solution.\n\"JakeWharton> snodnipper: I'm willing to bet if you change FragmentPagerAdapter to call executePendingTransactions() rather than letting it run asynchronously you'll see the bug disappear\"\n. Filed a bug report: http://code.google.com/p/android/issues/detail?id=29472\n. ",
    "jleidgens": "So there is no fix or workaround for this bug? \n. ",
    "friedit": "Any news on this? Could really use a fix.\nAt the moment I'm trying to work around this issue but I don't like it.\nhttp://code.google.com/p/android/issues/detail?id=29472\n. ",
    "johanols": "I found a solution to this issue from this post: http://code.google.com/p/android/issues/detail?id=29472\n(Link already mentioned earlier in this thread. However a new comment has shed some light on this topic, which is at the moment of writing is just 6 hours old.)\nIn comment #8 some workarounds are mentioned. The thing I did was to guard the call to viewPager.setCurrentItem described in that comment as workaround #1. By guarding that call, the Action Bar buttons does not disappear anymore.\n. By combining the sample code from Google found on this page: http://developer.android.com/reference/android/support/v4/view/ViewPager.html\nwith the information in my previous post, you can solve this issue easily.\nReplace the code in public void onTabSelected(Tab tab, FragmentTransaction ft) { ... } with \nif (viewPager.getCurrentItem() != tab.getPosition()) viewPager.setCurrentItem(tab.getPosition());\nThe if-statement is what guards the setCurrentItem() method by not resetting the current item with the already selected item. That is namely what is causing this issue to occur. With the guarding in place we no longer suffer from disappearing action bar items.\n. ",
    "flavioarfaria": "Wow! I just made a few tests and it seems it's working perfectly! Thank you johanols!\n. ",
    "mpalka": "@johanols Can you post some code snippet please for the workaround that worked for you?\n. ",
    "helderm": "@johanols A code snippet would be nice, I am too suffering with this issue.\n. ",
    "JesusM": "I have the same problem but i'm not using tabsadaper( i'm only using viewpager and fragmentpageadapter), so I can't use the code proposed for @johanols . Could anyone help me?\n. ",
    "RyanRamchandar": "As mentioned by @JesusM the fix by @johanols does not work when not using a TabAdapter. I can confirm it does not work with Action Bar Tabs on 2.3.6 on a Nexus One. \nI am using the split action bar with a hidden action bar title, a view pager and only showing action bar tabs.\nSee image: https://twitter.com/winnipegbuslive/status/276203149147123712/photo/1\nI am noticing that when the HomeActivity launches none of the action items are selectable on the first page. Swiping to the second page shows no action items at all.\nHowever, pressing on the tab instead of swiping the view pager does show all action items, though not selectable. Which leads me to believe the viewpager is not causing the split action bar to invalidate.\nThat being said, if I press the menu button on my Nexus One all the queued action item presses for the current fragment page are shown properly.\nHomeActivity code: http://pastebin.com/RJf6G0c9\n. ",
    "r3gis3r": "For the record : \nAs I can't drop 1.6 users support on CSipSimple which is opensource/GPL (and so will try to not leave users behind), I have forked the project and started support of 1.6. I decided to switch to ABS for next version.\nIt's already working on 1.6 for my needs (it took me 1day to do), but drops some features that I don't use for now. \nIt's features about accessibility that I plan to bring back soon.\nI did something the very fast (and crappy) way : using reflection for super calls and using a wrapper class for all other needs.\nSo it's probably not clean enough to be merged but if anybody else is in the same case than me, feel free to reuse it :\nhttps://github.com/r3gis3r/ActionBarSherlock\n@JakeWharton : \nI think that it would be interesting and very useful to use lint TargetApi annotation in ABS (it will ensure that you don't use a method not supported)\nAlso, the csipsimple project link, if you want to count it in apps using your great lib : http://code.google.com/p/csipsimple/ -- even if the release with ABS inside is not yet done but under dev in nightly builds ;) .\n. ",
    "bvgastel": "2.3.7. But as the exceptions are caught and handled, they only show up in a memory profiler and not in the console. While scrolling through a list view, most allocations are exceptions from that method.\n. I get the problems in a piece of code with (temporary) lots of invalidates, as an incoming event is displayed. The size of the incoming event grows, so triggers an invalidate. Still want the sample code or do you know enough?\nI looked up the code of API 15, and indeed saw the same code. It is strange though that hasDividerBeforeChildAt() in the superclass of ActionMenuView, namely IcsLinearLayout, handles the border cases properly. (or LinearLayout in AOSP).\n. the memory allocations of the exceptions slows down the animation in my app. it there any progress with the update to ASOP?\n. @iNoles yeah, in conjunction with the DDMS memory allocation tracker. I know listview reuses the views, but the problem is that when a view changes in size, an IndexOutOfBounds exception is thrown (and handled) deep inside the code. This exception can easily be avoided by using a simple bound check.\n. ",
    "hrk": "diff looks fine to me.\n. I don't want to bust into this, but the source of the exception is obvious just looking at the call to \"getChildAt(index -1)\".\nWhen the index is 0, it will be called with an argument of -1. Going up the chain, the implementation is in ViewGroup#getChildAt() and looks like this: \"try accessing an array at the given index, returning null if it goes beyond the bounds of the array\".\nhttp://grepcode.com/file/repository.grepcode.com/java/ext/com.google.android/android/1.5_r4/android/view/ViewGroup.java#ViewGroup.getChildAt%28int%29\n. I'm sorry if I sounded like a teacher, it was not my intention. :)\n. @JakeWharton I don't understand why the problem will be present on ICS if @bvgastel applies his patch (the bound check) to ABS, even if in his own forked repository (It's what I did with mine, by the way). Having said that, merging the bound check in the library seems reasonable to me, knowing that there are broken releases of Android which could possibly never get an update. I can't see why it shouldn't be merged. Please, don't take this as an offence or disrespect, just wondering due to my limited knowledge of the library and your approach.\n. @JakeWharton maybe I see the light... is library/src/com/actionbarsherlock/internal/view/menu/ActionMenuView.java one of the files only used in <4.0?\n. Thanks for the clarification!\n. Thank you. What kind of help could I provide to speed this development up?\n. @schildbach: if you'd rather have UI inconsistency across devices than having a ugly options menu, you can use this patch (http://pastebin.com/HecnkPib) to revert the removal of the ForceOverflow themes.\n. I'm sorry, the patch is missing a...\njava\nimport android.content.res.TypedArray;\nin the java class.\n. ",
    "jfcogato": "I have the same problems up there. Jake, you've going to upload a new version with this bug cleared? you are making a really good works here ;)\n. ",
    "Linoxps": "I have the Version 6 Update 31.\n. Sorry Jake, and Thanks to all, that was the problem. Really thk.\n. ",
    "shaversport": "This is for abs 4.0\nProgram that recreate the issue can be found here: http://bit.ly/wIsVLy\n. Hey Jake, Thanks for the recommendation.\nI've taken your advice and removed the configChanges but I find that the custom view still disappears after an orientation change.  Since this happens in ICS as well, this is not an ABS problem.  (Differently than before, the view will reappear if I rotate back.) Can you think of any reason the custom view would not be shown?  Is this an android bug?\nThanks.\n. Just upgraded to 4.1 and I don't have this issue with abs or 4.0 anymore.  Does that make any sense at all?\n. No, it doesn't make sense!\nSorry, last  comment was incorrect.  I forgot to first move to the tab with the custom view before doing the orientation.  Doing that shows the problem still exists in abs and in ICS. \n. ",
    "marianeum": "Actually, this also happens when the actionbar is not in stacked mode, the search view gets expanded and the tabs no longer fit.\nthe selected custom tab view disappears, sometimes the tabs change to a list navigation (which is fine) and when i try to change the fragment from there both items disappear and never come back until the activity is being recreated\n. ",
    "ericps": "I experience this with ActionBarCompat and customviews, the selected tab disappears on rotation.\nseem to have solved it for myself by removing the configChanges from my activity android:configChanges=\"keyboardHidden|orientation|screenSize\"\nhttps://code.google.com/p/android/issues/detail?id=43213\n. ",
    "pamepros": "@ericps yes, that's what's breaking the tab, but what if I still want it to rotate ? I still need the line:\nandroid:configChanges=\"keyboardHidden|orientation|screenSize\"\nso as to not restart the activity.\n. ",
    "mariotaku": "thanks foryour reply.maybe I will fork your project and do some hack to solute this, then I'll give you a patch.\n. ",
    "jdamcd": "I've been using SherlockFragmentActivity with fragments inheriting from the compatibility package Fragment without issues. I've only found it necessary to inherit from SherlockFragment when the fragment contributes menu items. However, I agree that some clarification on when to use SherlockFragment in the docs would be useful.\n. ",
    "wuman": "I'm curious as to what led to the design decision to use native classes for context menus.  Isn't it easier for developers to use Menu/MenuItem classes from the same package?\n. @JakeWharton Your patch aa9ec27 won't work because you're trying to instantiate the native OnActionExpandListener at MenuItemWrapper construction time.  Doing a lazy instantiation inside the setOnActionExpandListener() method will eliminate the problem.\nPlease reopen this so that I can send another patch.\n. ",
    "AndyScherzinger": "same problem for the light variant.\nBesides this error I also get a StackOverflowException in eclipse using the dark themes, using Light.ForceOverflow just leads to the error mentioned by the ticket. \n. ",
    "grimmdev": "i see what you mean now, i already understand the built in AlertDialog and DialogFragment was just curious what you ment directly. i loved the themed dialog which is why I asked,thanks for clerifying and explaining!\n. ",
    "malacavilla": "Do you know if there is an issue already logged in the Android Open Source issue list (http://code.google.com/p/android/issues/list)?\n. ",
    "scompt": "Awesome, that should work good. I'll give it a shot tomorrow.\nIt'd be nice to have this as a plugin since both ABS and robolectric are best practices for android development. I haven't looked too closely at the plugins, but it'd be cool if there was a roboguice plugin with subclasses for all of the Sherlock classes (SherlockFragment, etc.).\nOn 14.03.2012, at 18:06, Jake Whartonreply@reply.github.com wrote:\n\nYeah I've been considering making this a plugin for the library. Basically what I have seen done is something like this:\n``` java\n@ActionBarSherlock.Implementation(api = 0)\npublic class ActionBarSherlockRobolectric extends ActionBarSherlockNative {\n   public ActionBarSherlockRobolectric(Activity activity, int flags) {\n       super(activity, flags);\n   }\n@Override \n   public void setContentView(int layoutResId) {\n       LayoutInflater layoutInflater = LayoutInflater.from(mActivity);\n       View contentView = layoutInflater.inflate(layoutResId, null);\n   shadowOf(mActivity).setContentView(contentView);\n\n}\n@Override \n   public void setContentView(View view) {\n       shadowOf(mActivity).setContentView(view);\n   }\n}\n```\nThe you must call ActionBarSherlock.registerImplementation(ActionBarSherlockRobolectric.class) in the application setup of your test suite.\nI'll leave this open and revisit it soon and decide what the appropriate course of action is.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/377#issuecomment-4502735\n. \n",
    "Macarse": "I am also getting this when running my app in 1.6 emulators.\n. @JakeWharton: oh. interesting. Hello android:minSdkVersion=\"7\"!\n. ",
    "pocmo": "This approach (registering an implementation for testing) does not work anymore?\nDeriving ActionBarSherlockNative fails when it tries to get the native action bar through getActionBar() (Robolectric seems to not support the ActionBar yet). And ActionBarSherlockCompat fails in installDecor(). There are several small issues but at the end it will fail because Robolectric can't load the resources from the library project.\nHas anyone managed to use Robolectric in conjunction with ActionBarSherlock (4.1.0) successfully?\n. ",
    "oliver-snowden-phe": "Hi Jake, this isn't really the forum to be discussing the future of android testing but I am sure many are keen to hear your thoughts...especially with your comments on the sad state of the android build system.  Clearly robolectric could probably do with some love directly from Google.\nObviously you have some great folk at Square and by the sounds of it you are probably using an MVP/controller approach to bypass awkward areas and simplify testing...and possibly enable code sharing between platforms.  Perhaps controllers and DI are all we need...\n. ",
    "mkarnicki": "@JakeWharton Hi Jake. I've read elsewhere a comment by you that Square's Robolectric fork is 99.9% in sync with upstream Pivotal Robolectric. Does it mean you no longer regard it as pain/not worth to use for Square needs? If you still think of moving away from Robolectric, I'm quite sure lots of folks here would like to hear you elaborate on \"We have our own, non-generalized solution for running the actual Android code on the JVM which yields much faster results.\" :) Thanks.\n. @JakeWharton Sounds like fantastic news, thank you for your work, Jake!\n. ",
    "kennedyshead": "This is not solved by 2.0, as far as I can see anyway\n. As Jake stated earlier in this thread the following will work when using getSupportActionBar()\n``` java\nimport android.support.v4.view.ViewPager;\nimport android.view.View;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.robolectric.Robolectric;\nimport org.robolectric.RobolectricTestRunner;\nimport org.robolectric.annotation.Config;\nimport org.robolectric.util.ActivityController;\nimport static org.hamcrest.CoreMatchers.equalTo;\nimport static org.hamcrest.CoreMatchers.instanceOf;\nimport static org.junit.Assert.assertThat;\nimport static org.junit.Assert.assertTrue;\n/*\n * Created with IntelliJ IDEA.\n * User: magnusknutas\n * Date: 8/27/13\n * Time: 6:25 PM\n * To change this template use File | Settings | File Templates.\n /\n@RunWith(RobolectricTestRunner.class)\n@Config(reportSdk = 13)\npublic class MainActivityTest\n{\n    @Test\n    public void shouldHavePager() throws Exception {\n        MainActivity app = Robolectric.buildActivity(MainActivity_.class).create().get();\n        ViewPager pager = (ViewPager) app.findViewById(R.id.pager);\n        assertThat(pager, instanceOf(ViewPager.class));\n    }\n}\n```\nNotice: @Config(reportSdk = 13)\n. ",
    "kingori": "@JakeWharton ABS works well with 2.0-alpha2 when set Build.VERSIONS.SDK_INT to 14. But, when I set Build.VERSIONS.SDK_INT < 14 (I've set it to 10 ) I got this exception. Anyway, test runs well.\njava.lang.NullPointerException\nat      com.actionbarsherlock.internal.ActionBarSherlockCompat.loadUiOptionsFromManifest(ActionBarSherlockCompat.java:1095)\n    at com.actionbarsherlock.internal.ActionBarSherlockCompat.installDecor(ActionBarSherlockCompat.java:949)\nat com.actionbarsherlock.internal.ActionBarSherlockCompat.setContentView(ActionBarSherlockCompat.java:849)\nat com.actionbarsherlock.app.SherlockFragmentActivity.setContentView(SherlockFragmentActivity.java:262)\n....\nI've traced error and I got null from  am.openXmlResourceParser(\"AndroidManifest.xml\") in ActionbarSherlockCompat.java , line 1093 and I assumed that I got this exception cause ShadowAssetManager in Robolectric does not shadow openXmlResourceParser() method. \nIs there any other way to avoid this exception? I think this problem is related to Robolectric, but I think you can give good advice on it.\n. I got same problem with ActionBarSherlock v4.1.0 version code 90.\nI have two action item and I will show only 1 at a time. \nSo I coded like this.\n``` xml\n\n<item\n    android:id=\"@+id/menu_1\"\n    android:showAsAction=\"always\"\n    android:title=\"menu1\"\n    android:visible=\"false\"/>\n<item\n    android:id=\"@+id/menu_2\"\n    android:showAsAction=\"always\"\n    android:title=\"menu2\"\n    android:visible=\"false\"/>\n\n\n```\n``` java\n@Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        getSupportMenuInflater().inflate(R.menu.menu_file);\n        menu1 = menu.findItem(R.id.menu_1);\n        menu2 = menu.findItem(R.id.menu_2);\n        return true;\n    }\nprivate void toggleOptions( boolean show1) {\n menu1.setVisible( show1 );\n menu2.setVisible( ! show1 );\n}\n```\nIn this case, I can not see any menu at all. \nBut if I put a dummy action item, it works well.\n``` xml\n\n\n\n\n\n```\n``` java\n@Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        getSupportMenuInflater().inflate(R.menu.menu_file);\n            menuDummy = menu.findItem(R.id.menu_dummy);\n        menu1 = menu.findItem(R.id.menu_1);\n        menu2 = menu.findItem(R.id.menu_2);\n        return true;\n    }\nprivate void toggleOptions( boolean show1) {\n menuDummy.setVisible( false ); // I don't want to display dummy anymore\n menu1.setVisible( show1 );\n menu2.setVisible( ! show1 );\n}\n```\n. This error occurs \n1. open activity with 3 tabs ( 3rd tab fragment has collapseActionView menu item)\n2. select 2nd tab\n3. press power button to turn screen off\n4. press power button to turn screen on\n5. screen shows 2nd tab\n6. select 3rd tab and crash.\nmenu of 3rd tab is like below\n\n\n```\n\n\n```\n\n\n. ",
    "lisawray": "I just tried 2.0-alpha3 and I'm getting the same error as @kingori.  Has anyone found a solution?\n. ",
    "denevell": "I'm also getting a NPE on getSupportActionBar() in 2.1.\n. ",
    "rossimo": "I'm setting the reportSdk config var to 16, using ABS 4.3.1 & Robolectric 2.1.1. The NPE throws for me as well.\nCode:\n``` java\npackage com.example;\nimport android.os.Bundle;\nimport com.actionbarsherlock.app.SherlockActivity;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.robolectric.Robolectric;\nimport org.robolectric.RobolectricTestRunner;\nimport org.robolectric.annotation.Config;\n@RunWith(RobolectricTestRunner.class)\n@Config(reportSdk = 16)\npublic class ActionBarTest {\n    private static class ActionBarActivity extends SherlockActivity {\n        @Override\n        protected void onCreate(Bundle savedInstanceState) {\n            super.onCreate(savedInstanceState);\n        getSupportActionBar().setTitle(\"Test\");\n    }\n}\n\n@Test\npublic void test() {\n    ActionBarActivity activity = Robolectric.buildActivity(ActionBarActivity.class).create().get();\n}\n\n}\n```\nException:\njava\njava.lang.NullPointerException\n    at com.example.ActionBarTest$ActionBarActivity.onCreate(ActionBarTest.java:19)\n    at android.app.Activity.performCreate(Activity.java:5008)\n    at org.fest.reflect.method.Invoker.invoke(Invoker.java:112)\n    at org.robolectric.util.ActivityController$1.run(ActivityController.java:119)\n    at org.robolectric.shadows.ShadowLooper.runPaused(ShadowLooper.java:256)\n    at org.robolectric.util.ActivityController.create(ActivityController.java:114)\n    at org.robolectric.util.ActivityController.create(ActivityController.java:126)\n    at com.example.ActionBarTest.test(ActionBarTest.java:25)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.robolectric.RobolectricTestRunner$2.evaluate(RobolectricTestRunner.java:241)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.robolectric.RobolectricTestRunner$1.evaluate(RobolectricTestRunner.java:177)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)\n. ",
    "glennpratt": "I noticed this in the Fragment sample on light theme, is that the same issue or a problem with the Fragment sample?\n\n. ",
    "greenrobot": "Can you give a hint on how to apply the IcsColorDrawable to a theme? Will you put IcsColorDrawable inside of 4.0.1?\n. @iNoles I'd prefer to set it once in the theme.\n. Thanks, Jake! I had hoped there's a way to create custom drawable classes that can be used in xml. Would have come in handy for another issue (not ABS related). So, for now, let's do some work around... ;)\n. ",
    "steveeJ": "Why is this issue closed?\nI'm still experiening it on v4.1.0\n. ABS 4.1.0\nAndroid Emulator using API8\ni have the described behaviour too.\ni create two invisible items in onCreateOptionsMenu().\nin a TextWatcher on a EditText, i want to make those items visible again, with no success.\nbut if a only make one item invisible, the other one shows up on a textchange.\n. ",
    "veonua": "still exists =(\n. as far as I can see -\nActivityChooserModel keeps all model policies, when we create a\nShareAcitivityChooserModelPolicy it keeps whole ShareActionProvider as\n$.this, and keeps mOnShareTargetSelectedListener as the reference to\nthe fragment (my case).\n\nI discovered this bug in situation when I have couple of fragments\n(attached to different activities),\nboth have a ShareActionProvider (with default history filename) in\nActionBar, but in FragmentA I have\nsetOnShareTargetSelectedListener(this)\nI noticed click on the Share button on ActivityB fires\nFragmentA.onShareTargetSelected()  (which should be destroyed when\nActivityA stops), - reason ActivityChooserModel.get returns the\nreference to the Policy that keeps FragmentA.\nOn Wed, Apr 24, 2013 at 5:58 PM, Simon Vig Therkildsen\nnotifications@github.com wrote:\n\nI don't see how that line means shareTargetSelectedListener can't be nulled.\nIt's nulled in setOnShareTargetSelectedListener.\n\u2014\nReply to this email directly or view it on GitHub.\n. ok, when should I null it? Should I null it manually?\n\nOn Wed, Apr 24, 2013 at 6:23 PM, Simon Vig Therkildsen \nnotifications@github.com wrote:\n\nmOnShareTargetSelectedListener is nulled when you call\nsetOnShareTargetSelectedListener(null)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/913#issuecomment-16938398\n.\n. unfortunately, could reproduce using framework ShareActionProvider. it's suck =(((\n. if you interested https://gist.github.com/veonua/5454621 sample code that\nreproduces the bug\n\nOn Wed, Apr 24, 2013 at 9:54 PM, Jake Wharton notifications@github.comwrote:\n\nWe've gotten in the habit of just writing our own with a more sane\nbehavior and code using the same concept.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/913#issuecomment-16956888\n.\n. \n",
    "kingctan": "if this problem have any progress,I also meet it,I set a action bar button invisible and can't change it visible programmaticlly later in code.\n. ",
    "peterdk": "Are you guys sure you are refreshing the menu itself by calling invalidateoptionsmenu?\n. Never mind, it turned out that the icon was so large, it somehow disabled the text. Removing the icon, makes it work again.\n. ",
    "newairhost": "I have just occured this as well but without using sherlock so i think it's android itself.\ninvalidateoptionsmenu doesn't help, for me it make things worst\n. ",
    "josejuansanchez": "The problem continues to exist, but the solution proposed by @kingori works well for me. Thanks!\n. ",
    "chamikarazin": "invalidateoptionsmenu() doesnt work, Kingori solution works for me!\n. ",
    "viper83": "Kingori solution works for me too :) Thanks!!!\nI only want add, that this issue reproduced not only for ABS, but for usual Action bar too\n. ",
    "gaj-programmer": "I am also struggling with this issue then I applied a small hack: \nmenu1.setEnabled(false);\n menu1.setTitle(\"\");\nThen where you want to visible it again : \n menu1.setEnabled(true);\n menu1.setTitle(\"Okay\"); //or you can set text acording to yours given updated values \n. ",
    "jfsso": "Thank you for pointing the reasons. I liked the second one! :)\n. ",
    "mrenouf": "Turns out to be a dupe of:\nhttp://code.google.com/p/android/issues/detail?id=19599\nBut on my system the entire JVM just dies... instead of the stack overflow message.\n. ",
    "timothyjc": "Ok... thanks for such fast responses.\n. ",
    "imminent": "@LorneLaliberte, @SimonVT is correct. If you're looking to Google apps for the default action bar implementation of the indeterminate progress, it will probably be hard to find, they tend to (and with good reason) use a refresh button that they turn into an indeterminate progress indicator when \"progressing\", so the default action bar indeterminate progress indicator won't show up. Check out the source for iosched the 2012 Google Session app if you want to see what they do. It's kind of the Android pull-to-refresh pattern done correctly (aka, it works better than pull-to-refresh for Android).\n. @DHuckaby, doesn't that make your menu stick out from the rest of your own app though? I think the the most jarring effect is the clash between old Android look with ICS look (like the maps app directions dialog).\n. Oh, cool I didn't know about migration pom's, but I like to read the\nchangelog when I upgrade a dependency and I think you mention the artifact\nchange there.\n. Wouldn't ABS use the native Action Bar on those devices? It's left to the\nAction Bar to decide if it can show the tabs inline or have to overflow\nthem to split action bar. It seems that Honeycomb may use slightly slimmer\ntabs that fit easier into the Action Bar.\n. Could you use the  tag? You use to have to do that with roboguice\nand ABS since they used conflicting compatibility libraries.\n. I can say it's working perfectly with IntelliJ, but I can't answer for Eclipse.\n. Did you also say setHasOptionsMenu in the onCreate in the Fragment too? The\nActionBar doesn't know about your Fragment options menu otherwise.\n. @Goonie I've used http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.google.android%22 for 4.1, my guess is someone(s) on the Android team have said somewhere/to Jake that they will make sure to push the artifacts. My guess is they will show up there, when that happens.\n. I made an issue for this: http://youtrack.jetbrains.com/issue/IDEA-98114\n. Are you saying that the action bar didn't flip for you but the up icon did?\nThe action bar worked for me. They use the native action bar when it\nexists, so it should worked. I tested on nexus 7. Did you add the manifest\nflag and set your min SDK correctly?\n. Where is mSherlock coming from, and why are you using it? Have you\nsuccessfully done it without any actions?\nAlso cancel and sign in shouldn't be actions on the action bar, nor are\nthey the right iconography.\nOn Jan 9, 2013 1:29 AM, \"lawrence615\" notifications@github.com wrote:\n\nHi, I have a problem in implementing menu options using abs. The problem\nis, when I add menu options in form of buttons to appear on the action bar\nthere is a duplicate. The image below shows the issue\n[image: login]https://f.cloud.github.com/assets/3224157/53003/5f6ff078-5a3e-11e2-9c18-fdbdfc9c09e5.png\nThis is my code\npackage com.sanisani.kindergarten;\nimport java.util.prefs.Preferences;\nimport android.app.Activity;\nimport android.content.Intent;\nimport android.content.pm.ActivityInfo;\nimport android.os.Bundle;\nimport android.widget.Toast;\nimport com.actionbarsherlock.ActionBarSherlock;\nimport com.actionbarsherlock.ActionBarSherlock.OnCreateOptionsMenuListener;\nimport com.actionbarsherlock.app.SherlockActivity;\nimport com.actionbarsherlock.view.Menu;\nimport com.actionbarsherlock.view.MenuInflater;\nimport com.actionbarsherlock.view.MenuItem;\npublic class LoginActivity extends SherlockActivity implements\nOnCreateOptionsMenuListener {\nActionBarSherlock mSherlock = ActionBarSherlock.wrap(this);\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    // setTheme(SampleList.THEME); //Used for theme switching in samples\n    super.onCreate(savedInstanceState);\n    //\n    // mSherlock\n    // .setUiOptions(ActivityInfo.UIOPTION_SPLIT_ACTION_BAR_WHEN_NARROW);\n    mSherlock.setContentView(R.layout.login);\n// ((TextView)findViewById(R.id.text)).setText(R.string.static_attach_content);\n}\n// @Override\n// public boolean onCreateOptionsMenu(android.view.Menu menu) {\n// return mSherlock.dispatchCreateOptionsMenu(menu);\n// }\npublic boolean onCreateOptionsMenu(Menu menu) {\n    MenuInflater inflater = getSupportMenuInflater();\n    inflater.inflate(R.menu.items, menu);\n    return true;\n}\npublic boolean onOptionsItemSelected(MenuItem item) {\n```\nIntent intent;\nswitch (item.getItemId()) {\ncase R.id.cancel:\n// Launch Preference Activity\nintent = new Intent(getBaseContext(), Preferences.class);\nstartActivity(intent);\nbreak;\n\n}\nreturn false;\n```\n}\npublic void Quit(int id) {\n    Toast.makeText(this, \"function 2 called\", Toast.LENGTH_SHORT).show();\n}\n}\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\"\nandroid:orientation=\"vertical\" >\n\n```\n\n\n<EditText\n    android:id=\"@+id/username\"\n    android:layout_width=\"fill_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_gravity=\"center_horizontal\"\n    android:hint=\"Username\" >\n</EditText>\n\n\n\n<EditText\n    android:id=\"@+id/password\"\n    android:layout_width=\"fill_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_gravity=\"center_horizontal\"\n    android:hint=\"Password\" >\n</EditText>\n\n\n```\n\n\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n\nPlease help\nThanks in advance\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/771.\n. \n",
    "eladnava": "You could control the size of your intermediate progress bar by using an Action View in the onCreateOptionsMenu() like so:\n```\n    //----------------------------\n    // Add refresh in Action Bar\n    //----------------------------\nLoadingItem = OptionsMenu.add(Menu.NONE, Menu.NONE, Menu.NONE, \"Loading\");\n\n//----------------------------\n// Set up the view\n//----------------------------\n\nLoadingItem.setActionView(R.layout.loading);\n\n//----------------------------\n// Specify the show flags\n//----------------------------\n\nLoadingItem.setShowAsAction(MenuItem.SHOW_AS_ACTION_ALWAYS);\n\n```\nR.layout.loading:\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <LinearLayout\n            xmlns:android=\"http://schemas.android.com/apk/res/android\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\">\n        <ProgressBar\n                android:layout_width=\"35dp\"\n                android:layout_height=\"35dp\"\n                android:layout_marginRight=\"5dp\" />\n    </LinearLayout>\nYou would then call LoadingItem.setVisible(); instead of setSupportProgressBarIndeterminateVisibility() from your activity's UI thread to show or hide the loading indicator.\n. ",
    "vRallev": "Happens on both. I had the same issue. The FragmentTransaction is null. So I had to check first whether it is null or not and if so, I've created my own transaction and committed it manually.\n. I'm sorry for the confusion, I've checked it again and the emulator (x86 2.3.3) didn't have this bug now. I think your are right gabrielittner. \n. No problem, I thank you for the awesome work!\n. Thanks for the clarification.\n. ",
    "sareninden": "That might have been the problem, the action bar loads the launcher icon by default which are in my case lhdpi: 36px; M: 48px; H: 72px. Those are the default sizes eclipse creates for me.\nI was looking for a screenshot but i deleted all the old ones when I made screenshots of the new version.\nKind regards\nbtw: great actionbar\n. ",
    "hearbeathorror": "@JakeWharton - thank u sir for the styles.. it does change the size of the tab text, but then when using the same style for android 2.3 infact lower versions than android level 11, lint errors say that the android:actionBarTabTextStyle requires API level 11 (current min is 8) , i tend to clear the lint errors, but then is there any way i could also add these styles to android versions lower than 11?\nthank u once again.\n. @JakeWharton  - sir how did you fix this? i still have the issue on android 2.3.6, please help .thanks\n. @JakeWharton - sir cant this size be changed ? through xml or anything like that?\n. ",
    "SimoneCasagranda": "Hi to all :)\nI don't really like this solution because if you rotate your device the onTabUnselected isn't called and after rotation you'll find two \"lastVisibleFragment\".\nI have solved using directly the FragmentManager. For example for onTabSelected:\npublic void onTabSelected(Tab tab, FragmentTransaction ft) {\n            if (ft == null) {\n                 Log.i(TAG, \"FragmentTransaction == null during Tab selection\");\n                 return;\n            }\n            Fragment fragment = mFragmentManager.findFragmentByTag(mTag);\n            if(fragment == null) {\n                ft.add(android.R.id.content, Fragment.instantiate(mActivity, mClass.getName()), mTag);\n            } else {\n                ft.attach(fragment);\n            }\n        }\nIs this a valid solution?\nThanks a lot (and thanks Jake for your great work!),\nSimone\n. ",
    "jan-kiszka": "So is this something that is already fixed in some branch? I'm on master/4.0.0 ATM.\n. Great, thanks for the information!\n. ",
    "rajkumarwaghmare": "Making translation animation using nineoldandroid. Behavior is as expected/accurate on 4.X devices but when tested on 2.3.X devices there is inaccuracy in exact element positions. \n. ",
    "pierrre": "Ok, thank you very much!\nIt was not a bug, but a feature :P\n. Do you use android:configChanges=\"orientation\" ?\n. +1 @SimonVT \nandroid:configChanges=\"orientation\" is not recommended\n. ",
    "westward": "At this moment - no, I haven't any idea. But maybe I can help in any way?\n10 min ago I did make a completely new, emply Android project with min sdk=7 and target=14, theme=@style/Theme.Sherlock for the single activity and change owner class from Activity to SherlockActivity. ABS 4.0.1 (and in the next test, 4.0.0) was included as library project.That's all, just empty activity + ABS.\nThen, a project has been launched on the phone with android 2.2. Here the mem size values from DDMS:\nChange orientation #1: 2546kb / 51340 objects\nChange orientation #2: 2576kb / 51822 objects\nChange orientation #3: 2606kb / 52304 objects\nChange orientation #4: 2637kb / 52786 objects\nChange orientation #5: 2667kb / 53268 objects\n. Upd: after every iteration there is +30kb allocated memory and +482 objects\n. I pressed the \"Cause GC\" button after each rotation of the device. Ok, will try to use MAT to analyse a dump. For the first time, but I hope that it will be easier than finding the Higgs boson.\n. Chris, another test using adb, 5 screen rotations. \"Cause GC\" after every screen rotation.\nDalvik          Native\n1  3271/2721    6460/5102\n2  3463/2752    6492/5224\n3  3463/2782    6616/5241\n4  3463/2813    6632/5361\n5  3463/2844    6756/5378\n. I used Samsung Vibrant, rooted, custom 2.2 ROM.\nAfter midnight it's too difficult to understand unknown tool. I have not read the tutorial for MAT and tried to use this tool on the move. Therefore, most likely I'm wrong, but trying to analyse hprof dump after 14 orientation changes, I find the MAT's \"Dominator Tree\" button and here is a part of its report:\n```\nClass Name                                                      | Shallow Heap | Retained Heap | Percentage\n\ncom.actionbarsherlock.internal.widget.ActionBarView @ 0x483ed6c8|          480 |        12\u00a0872 |      0,54%\ncom.actionbarsherlock.internal.widget.ActionBarView @ 0x483f6750|          480 |        12\u00a0872 |      0,54%\ncom.actionbarsherlock.internal.widget.ActionBarView @ 0x483fd298|          480 |        12\u00a0872 |      0,54%\ncom.actionbarsherlock.internal.widget.ActionBarView @ 0x48403d18|          480 |        12\u00a0872 |      0,54%\ncom.actionbarsherlock.internal.widget.ActionBarView @ 0x48404688|          480 |        12\u00a0872 |      0,54%\ncom.actionbarsherlock.internal.widget.ActionBarView @ 0x484071e0|          480 |        12\u00a0872 |      0,54%\ncom.actionbarsherlock.internal.widget.ActionBarView @ 0x48423b50|          480 |        12\u00a0872 |      0,54%\ncom.actionbarsherlock.internal.widget.ActionBarView @ 0x4842af28|          480 |        12\u00a0872 |      0,54%\ncom.actionbarsherlock.internal.widget.ActionBarView @ 0x484314d0|          480 |        12\u00a0872 |      0,54%\ncom.actionbarsherlock.internal.widget.ActionBarView @ 0x484394a0|          480 |        12\u00a0872 |      0,54%\ncom.actionbarsherlock.internal.widget.ActionBarView @ 0x484486f8|          480 |        12\u00a0872 |      0,54%\ncom.actionbarsherlock.internal.widget.ActionBarView @ 0x48449c50|          480 |        12\u00a0872 |      0,54%\ncom.actionbarsherlock.internal.widget.ActionBarView @ 0x48450138|          480 |        12\u00a0872 |      0,54%\ncom.actionbarsherlock.internal.widget.ActionBarView @ 0x48457f60|          480 |        12\u00a0872 |      0,54%\n```\nOnly ActionBarView repeated 14 times in this report.\nWill try to make another test in the emulator.\n. Have the same issue on the 2.3.3 emulator. And have absolutely no problems with the same test on the Asus Transformer Prime/ICS tablet. I think, (possible) memory leak appears only in the ABS compatibility mode for pre-honeycomb devices.\n. Just empty project with minimal ABS requirements: theme, api level and SherlockActivity instead of Activity. ABS 4.0.1 Master configured as library project.\nI'm a very beginner at GitHub and don't know how to upload a project here. I can send you zip in the morning, have only 6 hours left to sleep. :) Please tell me email or something else.\n. @JakeWharton Cannot open your URL\nTypeError: Cannot call method 'indexOf' of undefined\n    at ServerResponse.redirect (/app/node_modules/express/lib/response.js:343:13)\n. @JakeWharton @ChrisSmith Posted ABS library & test projects to the Google Group.\nhttps://groups.google.com/forum/?fromgroups#!topic/actionbarsherlock/BlKRj39ssPM\n. @SimonVT hprof dump posted to the same Google Group\n. @SimonVT Posted another HPROF dump, without ABS (removed theme in the manifest and changed LeakTestActivity parent from SherlockActivity to Activity.\n. @SimonVT Maybe you have any idea, why other person cannot reproduce this leak with my absolutely empty test project? Eclipse or compiler options, build target version... ?\n. @SimonVT I downloaded and installed your APK. Can't run app it in debug mode, but I can see it in the DDMS. No problems with allocated memory and objects count. So, there is no memory leak problem in ABS.\nPlease tell me, which ABS version you used when compiling my test? And what I can't understand the difference, why your computer produce the right APK and my make the leaked app. :-( \nP.S. And what version / size of android-support-v4.jar are you using?\n. Ok, maybe it's time to say thank you to all the participants and close the issue. And reinstall the Java, OS and the whole damn world.\n. @JakeWharton @SimonVT @ChrisSmith I found the difference between \"leaked\" and \"correct\" versions, but I can not explain it. \nIf the project is run in debug mode from Eclipse, DDMS showing a memory leaks. But if you just run APK on your phone, DDMS shows no memory leaks.\n. I still can not explain this behavior, sorry.\n. Yes... you're right. Trying to remove ABS for this activity and its width does not change.\nOkay, one more question, please. I think, ABS uses FakeDialogPhoneWindow.java code to get more comfortable width and height, than minimums to wrap content. Maybe you know, how to tell ABS to resize its contents according to the new dimensions?\n. Please, try to understand me. Maybe I'm wrong, but I think that native ActionBar don't have an ability to show some activity that look like a floating dialog. And it is not nesessary, because with native ActionBar developer have all API 11+ system environment including Holo theme.\nJake make the excellent work and one of ABS cool features is ability to create an activity that looks like a Holo dialog. Another ABS cool feature is auto resizing this 'dialog' to be more bigger (and comfortable) if its contents are not so large. I think, this auto resize feature realized in FakeDialogPhoneWindow. Unfortunately, I have enough experience to quickly understand why when 'dialog' resized, its contents (LinearLayout with buttons) don't follows the parent's new dimensions.\nOk, thank you for response. If there is no other answers, I will close this issue.\n. Okay, here is the possible and very simple workaround: ABS\\res\\layout folder, abs__dialog_title_holo.xml\n<FrameLayout\n    android:layout_width=\"wrap_content\" android:layout_height=\"0dp\"\nchange to\nandroid:layout_width=\"fill_parent\"\n. ",
    "micHar": "Really, can't you explain it? Because I have the same problem. If I rotate phone several times (say 8) I get 8 instances of actionbar (seen in hprof in MAT). GC doesn't help. I guess I'll try running apk...\nWell... :O\nExaclty. After launching app from phone menu instead of debug perspective - no memory leak...\nAny comments appreciated\n. ",
    "zaxon": "is it because view stack didn't recycled? \n. ",
    "SteveKChiu": "It's on ActionBarSherlock 4.0.1\n. ",
    "Digipom": "I can reproduce this bug too, and the weird thing is it works if you've opened the list once, with at least two intents. \nFor example:\nTwo activities: Open list.\nChange intent to one that resolves to one activity.\nOpen list: Still works.\nIt doesn't work if you haven't yet opened it.\nSeems related to these lines in ActivityChooserView$ActivityChooserViewAdapter:\nif (!mShowDefaultActivity && mDataModel.getDefaultActivity() != null) {\n                activityCount--;\n            }\nIF you haven't opened the list yet, activityCount gets subtracted by 1, getCount() returns 0 and the button gets disabled. The list still contains one activity.\n. So I tried changing this line:\nprivate boolean mShowDefaultActivity;\nto:\nprivate boolean mShowDefaultActivity = true;\nI was also able to fix the \"clickable first time\" by adding this to updateAppearance(), inside the following block:\nif (activityCount > 0 && historySize > 0) {\n...\nmAdapter.setShowDefaultActivity(false, false);\n}\nThat fixes the issue for me and I haven't had complaints about this issue on the market since then.\n. I'm getting market reports of this exception with Action Bar Sherlock v4.1.0 and the Android Support Library v4 revision 9. It seems to be affecting more than a few users out there.\n. The problem appears to be this line for me:\nView anchor = mAnchor.get();\non ICS it's this:\nView anchor = mAnchor != null ? mAnchor.get() : null;\nI'll try @androidmoney 's idea and see if I still get those crashes in the market.\n. @androidmoney Could you share what you did too? I just want to compare to see if I did things the right way. Thanks!\n. I still get some reports of this exception, but am not comfortable enough with porting over all of the styles etc... (i.e. not sure that what I'm doing would not be breaking something else). If anyone knows how to fix, would be greatly appreciated. :)\n. So I got this without the configChanges:orientation as well. @JakeWharton I'm not sure I understand your comment; do I need to modify my project to fix this crash, or Action Bar Sherlock? Thanks!\n. I can confirm try/catching and ignoring the exception for the two calls to unregisterObserver(mModelDataSetOberver) has fixed the issue for me. All the reported exceptions were in onDetachedFromWindow so maybe that's the important one.\n. Unfortunately nothing. The code looked fine to me so I was surprised to see\nthat crash. Maybe some firmwares don't have it built in for some reason; a\ntry catch to default case might be good to have there.\nThanks!\nOn Aug 8, 2012 8:13 PM, \"Jake Wharton\" notifications@github.com wrote:\n\nDo you have more info on the device. The API says it's Gingerbread+https://developer.android.com/reference/java/util/Locale.html#ROOT\n.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/572#issuecomment-7601769.\n. I've fixed this by downgrading from ADT 21.1 to ADT 21 and same with the tools folder.\n. I submitted new pull requests https://github.com/JakeWharton/ActionBarSherlock/pull/863 and https://github.com/JakeWharton/ActionBarSherlock/pull/864. Thanks!\n. Do you mean the dropdown? Yes, it allows the dropdown when there's only one\nshare target and that target's not already on the action bar as a separate\nicon.\n\nOn Fri, Mar 15, 2013 at 2:15 PM, Jake Wharton notifications@github.comwrote:\n\nAm I reading this correctly that this uses the expanded view for only one\nshare target?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/pull/863#issuecomment-14976591\n.\n\n\n\nDigipom\nhttp://www.digipom.com\n. I think I saw market reports for this, though I added this in a long time ago so I have no idea how often it happens. On the previous pull request, another commentator was asking when it would be integrated as they seem to have seen the same exceptions in the market.\n. Thanks for all of the hard work, Action Bar Sherlock has been a life saver!\n. ",
    "zh163": "Dear, I faced the same problem, but i think it should fixed by the following:\nThere' two problems in ActivityChooserView.java:\nI.\n```\npublic void setActivityChooserModel(ActivityChooserModel dataModel) {\n    mAdapter.setDataModel(dataModel);\nint historysize = mAdapter.getHistorySize();\nif (historysize>0) {\n    mAdapter.setShowDefaultActivity(false, false);\n} else {\n    mAdapter.setShowDefaultActivity(true, true);\n}\n\nif (isShowingPopup()) {\n    dismissPopup();\n    showPopup();\n}\n\n}\n```\nHere i add codes to update mAdapter to decide whether it should show default Activity.\nThis is the Mainly problem.\nII.\n```\nprivate void showPopupUnchecked(int maxActivityCount) {\n    if (mAdapter.getDataModel() == null) {\n        throw new IllegalStateException(\"No data model. Did you call #setDataModel?\");\n    }\ngetViewTreeObserver().addOnGlobalLayoutListener(mOnGlobalLayoutListener);\n\nint historysize = mAdapter.getHistorySize();\nfinal boolean hasHistory = historysize>0 ? true : false;\n\nfinal int activityCount = mAdapter.getActivityCount();\nfinal int maxActivityCountOffset = hasHistory ? 1 : 0;\n\nif (maxActivityCount != ActivityChooserViewAdapter.MAX_ACTIVITY_COUNT_UNLIMITED\n        && activityCount > maxActivityCount + maxActivityCountOffset) {\n    mAdapter.setShowFooterView(true);\n    mAdapter.setMaxActivityCount(maxActivityCount - 1);\n} else {\n    mAdapter.setShowFooterView(false);\n    mAdapter.setMaxActivityCount(maxActivityCount);\n}\n\nListPopupWindow popupWindow = getListPopupWindow();\nif (!popupWindow.isShowing()) {\n    if (mIsSelectingDefaultActivity || !hasHistory) {\n        mAdapter.setShowDefaultActivity(true, hasHistory);\n    } else {\n        mAdapter.setShowDefaultActivity(false, false);\n    }\n    final int contentWidth = Math.min(mAdapter.measureContentWidth(), mListPopupMaxWidth);\n    popupWindow.setContentWidth(contentWidth);\n    popupWindow.show();\n    if (mProvider != null) {\n        mProvider.subUiVisibilityChanged(true);\n    }\n    popupWindow.getListView().setContentDescription(mContext.getString(\n            R.string.activitychooserview_choose_application));\n}\n\n```\nHere I removed the var defaultActivityButtonShown, we should not update the ui by ui element's displaymode, but only depend on the data model!  in MVC model, V depend on M, and controlled by C.\nin here, whether to desplay the defaultActivityButton is depend on the history size, so i changed it.\nin another, for dear Digipom's reply by adding \"mAdapter.setShowDefaultActivity(false, false);\" to updateAppearance(), \ni don't think this a good way to do it.\nit's a bad way to call setShowDefaultActivity() in updateAppearance(), \nbecause setShowDefaultActivity() will cause notifyDataSetChanged() in mAdapter, but see the following code:\nmAdapter.registerDataSetObserver(new DataSetObserver() {\n            @Override\n            public void onChanged() {\n                super.onChanged();\n                updateAppearance();\n            }\n        });\nyes, it registered an observer by calling updateAppearance(), so you known, it's a big problem.\n. ",
    "emilsjolander": "ok great!, sorry had not noticed the update\n. ",
    "mttkay": "What was causing this? I am seeing the same error in my app bubbling up from NineOldAndroids even though I don't even use ActionBarSherlock.\nAny suggestions how to resolve this? It seems to happen randomly, but when it happens, I cannot start my app again without it crashing immediately. Very strange.\n. interesting, thanks for the swift reply!\n. Calling hide() on the ActionBar instance does the trick. However, according to the documentation, there shouldn't even be an AB reference when windowActionBar is false.\n. Hi Jake,\nI figured out the issue was that I didn't mirror the windowNoTitle attribute. I thought you only have to mirror those specific to the Honeycomb and newer API levels.\nMy bad.\n. ",
    "defer": "Yes, please see the pull request, there are a bunch of missing styles.\n. ",
    "thanksmister": "I noticed that on Honeycomb the ActionBar does not show this behavior.   I was trying to duplicate the refresh animation used in the Google+ application.   The Google team seems to have figured it out a workaround.  Thanks for the quick response.\n. Thanks for the insight, I will try that route. \n. Yep, if you set your own custom selector for the action item background you can remove the fade which fixes the issue.  I grabbed the abs__item_background_holo_dark.xml from ActionBarSherlock > Library > res > drawable and the associated graphics to add to my project.  I removed the following line from the  nod in the xml which disables the fade:\n<!--   android:exitFadeDuration=\"@android:integer/config_mediumAnimTime\" -->\nHere is abs__item_background_holo_dark.xml:\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <!-- Even though these two point to the same resource, have two states so the drawable will invalidate itself when coming out of pressed state. -->\n    <item android:state_focused=\"true\"  android:state_enabled=\"false\" android:state_pressed=\"true\" android:drawable=\"@drawable/abs__list_selector_disabled_holo_dark\" />\n    <item android:state_focused=\"true\"  android:state_enabled=\"false\" android:drawable=\"@drawable/abs__list_selector_disabled_holo_dark\" />\n    <item android:state_focused=\"true\"  android:state_pressed=\"true\" android:drawable=\"@drawable/abs__list_selector_background_transition_holo_dark\" />\n    <item android:state_focused=\"false\" android:state_pressed=\"true\" android:drawable=\"@drawable/abs__list_selector_background_transition_holo_dark\" />\n    <item android:state_focused=\"true\"  android:drawable=\"@drawable/abs__list_focused_holo\" />\n    <item  android:drawable=\"@android:color/transparent\" />\n</selector>\nHere is how I set it up in my styles.xml\n```\n\n    <item name=\"actionBarStyle\">@style/Widget.Styled.ActionBar</item>\n    <item name=\"android:actionBarStyle\">@style/Widget.Styled.ActionBar</item>\n    <item name=\"actionBarItemBackground\">@drawable/abs__item_background_holo_dark</item>\n    <item name=\"android:actionBarItemBackground\">@drawable/abs__item_background_holo_dark</item>\n\n\n```\n.",
    "kamoljan": "sorry, figured out it.\nusing onPrepareOptionsMenu instead\n. ",
    "ddewaele": "Most likely issue with the adapter.... images renders fine when popped in a AlertDialog.Builder setSingleChoiceItems but not when used with a spinner control. Also doesn't work in standalone spinner control so issue is not related to ActionBarSherlock.\n. Overriding the getDropDownView method in the customer ArrayAdapter to call getView solved the issue. Images are working fine.... \n. ",
    "slightfoot": "I'm going to use it in my layouts, call me crazy if you will.\n. ",
    "nickburton": "Woot! Jake++\n. ",
    "madhu314": "If the solution is ok, then this issue can be closed\n. ok np..I will check that out..thanks\n. ",
    "davidvavra": "We have released a library this week which allows to style all dialogs in custom colors while maintaining Holo theme. It might be useful for you:\nhttps://github.com/inmite/android-styled-dialogs\n. ",
    "jameswald": "I'm seeing many reports that mention \"cm7.2\".  I haven't ever tried CyanogenMod myself.  I wonder if that could be related this issue.\n. So I've confirmed that this specific trace is fixed with 4.0.2, but I am seeing a very similar issue with 4.0.2.  I will log a separate report for that one.\n. ABS must be compiled as a library project.  http://actionbarsherlock.com/faq.html\nWhy is ActionBarSherlock a library project whereas the original compatibility library is only a .jar?\nThe custom action bar implementation within ActionBarSherlock relies on styles, themes, layouts, and drawables in order to display properly. Due to the limitations of Android and .jar files, this currently can not be accomplished any other way.\n. In honor of Google not yet publishing updated dependencies to public repositories, I've taken this one step further with another implementation.  This one is based on support-v4 r18 source code and includes an ABS demo.\nGitHub repo/branch: https://github.com/jameswald/ActionBarSherlock/tree/navigation-drawer\nMore info from pull request #2:\nProvides navigation drawer support back to API 7 on par with the Android 4.3 implementation.  setHomeActionContentDescription() only has an effect on Android 4.3.  This behavior is identical to the official support implementation.\nSee the ABS demo NavigationDrawer.java for a working example.  In this particular demo, you may notice that the selected item's background will only be highlighted on Honeycomb+.  This is due to the use of the built in activatedBackgroundIndicator added in v11.  It may be replaced with a custom drawable to support all platforms.\nThe Android training guide Creating a Navigation Drawer is still based on r13 and has not yet been updated for r18.  In addition to the training guide, your Activity class must implement ActionBarDrawerToggle.DelegateProvider and should replace the use of ActionBarDrawerToggle with the convenience classes SherlockActionBarDrawerToggle and SherlockActionBarDrawerToggleDelegate.  Alternatively, you may implement your own toggle and toggle delegate classes.\nThis cannot be made available for general use because Google has not yet published Android 4.3_r1 or support-v4 r18 to a public Maven repository.  Until that day comes, this change will prevent ABS from building without additional efforts to get the Android 4.3_r1 and support-v4 r18 dependencies installed in your local Maven repository.\n. user error, sorry\n. ",
    "FireZenk": "Crash again on Jelly Bean!\n. Oh, ok, thanks!\n. ",
    "codeversed": "Confirmed that 4.1.0 fixes this issue running on Jelly Bean.\n. ",
    "lalitsharma1607": "upgrading to 4.4 solved the issue Thanks\n. ",
    "levinotik": "@yukuku what is 2.3.7? I couldn't recreate this issue using 2.3.3...\n. Thanks  @iNoles. Guess its not a release I can create an AVD for, huh? \n@yukuku Wanted onOptionsItemSelected to return true. He could have done without the brackets altogether, but either way that's a legitimate return from the case statement because he hasn't ended the statement with ; yet. Remember you can sprinkle {} wherever you want in java.\n. @SimonVT Well there goes that lol. Thanks!\n. ",
    "jmcaffee": "I'm seeing this issue as well. Building against Java 1.6 using ABS 4.0.2.\nI've hacked up a test project that is currently exhibiting the issue in a 2.3.3 emulator and 2.3.4 G2 phone.\nhttp://dl.dropbox.com/u/5246704/absOptionMenuTest.zip\nIt's ugly because I just stripped out everything I could while still being able to reproduce the issue.\nI've also tried the fixes listed in issue 272 with no luck. This is not unexpected as 272 was brought up before the 4.0.2 release so I'm assuming that 4.0.2 includes the fixes mentioned in that issue. Issue 272 has a great description of the problem though.\nThis issue only appeared in my project after upgrading from ABS 3.5.1.\nLet me know if I can provide any other information.\n. My issue was due to a race condition between ViewPager and ActionBar. If you're using both of these, you might want to look at Issue #476.\nI've also written a post about how I solved the problem if you're interested: http://www.ktechsystems.com/actionbar-menu-items-firing-delayed-events/\n. Ahh! The answer (or at least a workaround).\nThanks for the tip @antoniy. I wrote a post detailing how I implemented your suggestion here: http://www.ktechsystems.com/actionbar-menu-items-firing-delayed-events/\n. ",
    "StenaviN": "Is there some temporary workaround for the issue?\n. Hmm\u2026 I'll take a look onto your workaround, but I have just an activity which displays three buttons and FrameLayout placeholder for three different fragments. Each of fragments has own menu, inflated from xml. And in some conditions I get this issue.\n. Probably, it is the same as Issue #442\n. ",
    "Konsumierer": "I have the same issue. When clicking on an action item, onOptionsItemSelected is not called before I press another hardware button or use the homeAsUp button (HTC Desire). Seeing this also only on Android 2.3.7 (CM 7) with ABS 4.1. ICS and JB both work fine with the same code.\nCan I expect this to be fixed in the near future or should I rather implement the workaround suggested by jmcaffee?\nEdit:\nBy reading through some other issues, I came across problems when calling invalidateOptionsMenu(). When I don\u00b4t call this method - which I don\u00b4t need on Android 2 devices - then I can click the action items normally.\n. Yes, I will use icons, just came across this bug while playing around.\n. Any progress on this issue? Problem still exists in Version 4.2.0. Tested on Android 2.3.7.\n. Thanks for the hint. Gonna try to reproduce it in a test case. No luck so far ...\n. I created a test case and a pull request. Seems like the problem is, that you may not call invalidateOptionsMenu() within the onCreate method of an Activity. This could be the case, if you want to update a Fragment with some data that was passed to the Activity via Intent and then decide which menu items to show in the Fragment.onPrepareOptionsMenu(..).\nP.S. sorry for the first two commits\n. Crazymaik: this is not a good idea. When pressing a hardware menu button, an empty menu item is displayed.\n. I am sorry. I posted this issue directly after the ABS 4.2 release in a wrong GitHub project. Now I cannot reproduce the problem.\n. ",
    "TimMackenzie": "I had the same symptoms.  There may be multiple ways to cause this problem, but here's one (and a workaround).\nSetup:\n- ABS 4.2.0\n- Android 2.2.1 (4.x works correctly)\n- A split action bar and dynamic menu items depending on the tab\n- A derivative of FragmentTabsPager modified to invalidate the options menu when switching tabs (needed to repopulate the menu when sliding rather than explicitly tapping the tab).\nProblem:\nWhen all menu items are added from the fragments and no menu items are added in the main activity, the action item presses are queued up until switching the tab.  This only happens in portrait mode - landscape seems to work fine.\nWorkaround:\nAdding a menu item in the parent activity with the SHOW_AS_ACTION_NEVER option ensures that the message processing occurs, but no additional ActionBar actions are shown.  It might also work to remove the placeholder menu item in each of the fragments but I didn't try it that way.\nPseudo-analysis:\nIt seems that in my setup the message pump for the lower action bar is only started if the parent activity adds menu items.  There may be a cleaner way to work around that, but at least this gives a starting point to investigate.\nHopefully I included enough detail to make this clear (and hopefully this behavior isn't due to other bugs in my code).\n. ",
    "Yria": "Ok, I solve this problem.\nIn Activity, onOptionsItemSelected return false.\nvery simple.\n. The UX should be same throughout the versions.  Some apps may experience unexpected broken UI Layouts.\n. Ok. I understand. thank you.\n. ",
    "foens": "I am still seeing the issue here in android 2.2.2 and using ActionBarSherlock 4.3.1. Is work still ongoing or should I just never upgrade from ActionBarSherlock 4.0.0?\n. Seeing the issue is marked as \"Needs-More-Info\", I have created a test application that shows the error.\nIt is located here: https://github.com/foens/abserrortest\nWith prebuilt apk: https://github.com/foens/abserrortest/raw/master/out/production/abstest/abstest.apk\nIt contains an activity with a fragment inside. The fragment shows one menu item, but initially its visibility is set to false. Then supportInvalidateOptionsMenu is called and it is set to visible.\nNow, pressing the menu item and rotating the device makes the application crash.\nIf the item were initially visible (change line 15 of TestFragment to true), it works as expected.\nHope this helps bashing this bug as it really annoys me.\n. ",
    "coryroy": "I have 3 fragments (2 SherlockListFragments and 1 SherlockFragment) inside an activity with a FragmentPagerAdapter and if you switch between fragments too quickly the menu items disappear and won't return until onConfigurationChanged() is called.  I've tried all kinds of things to get it back. Most notably invalidateOptionsMenu() in many different parts of the code, and none of those calls will recover it.\n. ",
    "rffffffff007": "I met the same problem today, i couldn't find the reason but finally got a solution.\nIt seems that you cannot put any properties that M9 cannot recognize int theme.xml, just like android:actionBarStyle.\nSo the solution is to make a new theme.xml in value-v14, and put all these properties in it.\n. ",
    "RacZo": "Hey guys! Awesome job with the ABS!\nI started using it 1 week ago, everyhting went smoothly implementing it in my HomeActivity (a SherlockFragmentActivity with 5 Tabs, each tab with either an SherlockListFragment or a custom SherlockExpandableListFragment I made... well, there the ActionBar from ABSv4 works great with different Menus for each Tab)... But, (there's always a but...) by 3 days an error that happens when I start a SherlockActivity by tapping on one of my HomeActivity's List items its been driving me crazy, I've googled it, stackoverflowed it, and the closest topic I've found is this post here in GitHub.\nCould you please explain a little bit more how did  you solved it, if there's a solution? What did you meant up there, by saying that copying the \"android\" prefixed values to a separate theme.xml on the values-v14 helped it?\nWell this is the error that's driving me nuts:\n05-16 11:10:43.164: E/AndroidRuntime(3636): FATAL EXCEPTION: main\n05-16 11:10:43.164: E/AndroidRuntime(3636): java.lang.RuntimeException: Unable to start activity ComponentInfo{com.realactionsoft.android.worldcupflags./com.realactionsoft.android.worldcupflags.FlagsSherlockActivity}: android.view.InflateException: Binary XML file line #31: Error inflating class \n05-16 11:10:43.164: E/AndroidRuntime(3636):     at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2663)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2679)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     at android.app.ActivityThread.access$2300(ActivityThread.java:125)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2033)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     at android.os.Handler.dispatchMessage(Handler.java:99)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     at android.os.Looper.loop(Looper.java:123)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     at android.app.ActivityThread.main(ActivityThread.java:4627)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     at java.lang.reflect.Method.invokeNative(Native Method)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     at java.lang.reflect.Method.invoke(Method.java:521)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:868)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:626)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     at dalvik.system.NativeStart.main(Native Method)\n05-16 11:10:43.164: E/AndroidRuntime(3636): Caused by: android.view.InflateException: Binary XML file line #31: Error inflating class \n05-16 11:10:43.164: E/AndroidRuntime(3636):     at android.view.LayoutInflater.createView(LayoutInflater.java:513)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:565)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     at android.view.LayoutInflater.rInflate(LayoutInflater.java:618)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     at android.view.LayoutInflater.rInflate(LayoutInflater.java:621)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     at android.view.LayoutInflater.inflate(LayoutInflater.java:407)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     at android.view.LayoutInflater.inflate(LayoutInflater.java:320)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     at android.view.LayoutInflater.inflate(LayoutInflater.java:276)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     at com.actionbarsherlock.internal.ActionBarSherlockCompat.generateLayout(ActionBarSherlockCompat.java:1042)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     at com.actionbarsherlock.internal.ActionBarSherlockCompat.installDecor(ActionBarSherlockCompat.java:912)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     at com.actionbarsherlock.internal.ActionBarSherlockCompat.setContentView(ActionBarSherlockCompat.java:846)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     at com.actionbarsherlock.app.SherlockActivity.setContentView(SherlockActivity.java:212)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     at com.realactionsoft.android.worldcupflags.FlagsSherlockActivity.onCreate(FlagsSherlockActivity.java:418)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1047)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2627)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     ... 11 more\n05-16 11:10:43.164: E/AndroidRuntime(3636): Caused by: java.lang.reflect.InvocationTargetException\n05-16 11:10:43.164: E/AndroidRuntime(3636):     at com.actionbarsherlock.internal.widget.ActionBarView.(ActionBarView.java:195)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     at java.lang.reflect.Constructor.constructNative(Native Method)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     at java.lang.reflect.Constructor.newInstance(Constructor.java:446)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     at android.view.LayoutInflater.createView(LayoutInflater.java:500)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     ... 24 more\n05-16 11:10:43.164: E/AndroidRuntime(3636): Caused by: android.content.res.Resources$NotFoundException: Resource ID #0x7f02015c\n05-16 11:10:43.164: E/AndroidRuntime(3636):     at android.content.res.Resources.getValue(Resources.java:892)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     at android.content.res.Resources.getDrawable(Resources.java:580)\n05-16 11:10:43.164: E/AndroidRuntime(3636):     ... 28 more\nOh, I forgot to mention that it happens exactly on the activitiy's onCreate, just at setContentView(R.layout.flags) and that flags.xml contains a ScrollView and a couple of includes. It also happens if I want to start a SherlockFragmentExpandableListActivity.\nI have the styles.xml with custom styles I created for UI components of my App and I have theme.xml file with only the Theme.AndroidDevelopers with parent=\"@style/Theme.Sherlock.Light\" wich is applied at the Manifest to all the App, the Widget.Styled.ActionBar style is also at the theme.xml file.\nThanks, and cheers!\n. Thanks for your help, but nope! I deleted all from bin and gen, recompiled the whole project and still have the same errors when launching either a class that extends SherlockFragmentActivity or SherlockExpandableListActivity. Should I clean the com_actionbarsherlock library project wich is among my project's dependencies too?\n. Actually, that resource id corresponds to public static final int title_logo=0x7f02015c; at the com.actionbarsherlock.R class in my project's gen folder and I think it's been always there... I guess, for some reason my App is trying to find it in my project's R class.\n. @iNoles thanks again for your interest in helping me. I have cleaned it for nth time and the error has \"mutated\", so probably a full clean was needed, but now my app crashes since the first reference to ActionBar in the onCreate method of the HomeActivity (a SherlockFragmentActivity), here's the error and it's another InflateException: \n05-16 16:49:29.713: E/AndroidRuntime(1193): FATAL EXCEPTION: main\n05-16 16:49:29.713: E/AndroidRuntime(1193): java.lang.RuntimeException: Unable to start activity ComponentInfo{com.realactionsoft.android.worldcupflags/com.realactionsoft.android.worldcupflags.HomeActivity}: android.view.InflateException: Binary XML file line #31: Error inflating class com.actionbarsherlock.internal.widget.ActionBarView\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2663)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2679)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at android.app.ActivityThread.access$2300(ActivityThread.java:125)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2033)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at android.os.Handler.dispatchMessage(Handler.java:99)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at android.os.Looper.loop(Looper.java:123)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at android.app.ActivityThread.main(ActivityThread.java:4627)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at java.lang.reflect.Method.invokeNative(Native Method)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at java.lang.reflect.Method.invoke(Method.java:521)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:868)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:626)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at dalvik.system.NativeStart.main(Native Method)\n05-16 16:49:29.713: E/AndroidRuntime(1193): Caused by: android.view.InflateException: Binary XML file line #31: Error inflating class com.actionbarsherlock.internal.widget.ActionBarView\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at android.view.LayoutInflater.createView(LayoutInflater.java:513)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:565)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at android.view.LayoutInflater.rInflate(LayoutInflater.java:618)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at android.view.LayoutInflater.rInflate(LayoutInflater.java:621)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at android.view.LayoutInflater.inflate(LayoutInflater.java:407)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at android.view.LayoutInflater.inflate(LayoutInflater.java:320)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at android.view.LayoutInflater.inflate(LayoutInflater.java:276)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at com.actionbarsherlock.internal.ActionBarSherlockCompat.generateLayout(ActionBarSherlockCompat.java:1042)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at com.actionbarsherlock.internal.ActionBarSherlockCompat.installDecor(ActionBarSherlockCompat.java:912)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at com.actionbarsherlock.internal.ActionBarSherlockCompat.initActionBar(ActionBarSherlockCompat.java:137)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at com.actionbarsherlock.internal.ActionBarSherlockCompat.getActionBar(ActionBarSherlockCompat.java:127)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at com.actionbarsherlock.app.SherlockFragmentActivity.getSupportActionBar(SherlockFragmentActivity.java:46)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at com.realactionsoft.android.worldcupflags.HomeActivity.onCreate(HomeActivity.java:231)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1047)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2627)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     ... 11 more\n05-16 16:49:29.713: E/AndroidRuntime(1193): Caused by: java.lang.reflect.InvocationTargetException\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at com.actionbarsherlock.internal.widget.ActionBarView.(ActionBarView.java:235)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at java.lang.reflect.Constructor.constructNative(Native Method)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at java.lang.reflect.Constructor.newInstance(Constructor.java:446)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at android.view.LayoutInflater.createView(LayoutInflater.java:500)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     ... 25 more\n05-16 16:49:29.713: E/AndroidRuntime(1193): Caused by: java.lang.NullPointerException\n05-16 16:49:29.713: E/AndroidRuntime(1193):     at com.actionbarsherlock.internal.widget.ActionBarView$HomeView.setUp(ActionBarView.java:1302)\n05-16 16:49:29.713: E/AndroidRuntime(1193):     ... 29 more\n:(\n. Thanks @JakeWharton!\nWell.. rm -rf bin and rm- rf gen did fixed my HomeActivity, the App launches again, beautifully with it's tabs and list fragments. But, again I'm back to the original issue, when I tap a list item to go to a separate SherlockFragmentActivity, boom! This happens:\n05-16 21:38:35.792: E/AndroidRuntime(788): java.lang.RuntimeException: Unable to start activity ComponentInfo{com.realactionsoft.android.worldcupflags./com.realactionsoft.android.worldcupflags.FlagsSherlockActivity}: android.view.InflateException: Binary XML file line #31: Error inflating class \n05-16 21:38:35.792: E/AndroidRuntime(788):  at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2663)\n05-16 21:38:35.792: E/AndroidRuntime(788):  at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2679)\n05-16 21:38:35.792: E/AndroidRuntime(788):  at android.app.ActivityThread.access$2300(ActivityThread.java:125)\n05-16 21:38:35.792: E/AndroidRuntime(788):  at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2033)\n05-16 21:38:35.792: E/AndroidRuntime(788):  at android.os.Handler.dispatchMessage(Handler.java:99)\n05-16 21:38:35.792: E/AndroidRuntime(788):  at android.os.Looper.loop(Looper.java:123)\n05-16 21:38:35.792: E/AndroidRuntime(788):  at android.app.ActivityThread.main(ActivityThread.java:4627)\n05-16 21:38:35.792: E/AndroidRuntime(788):  at java.lang.reflect.Method.invokeNative(Native Method)\n05-16 21:38:35.792: E/AndroidRuntime(788):  at java.lang.reflect.Method.invoke(Method.java:521)\n05-16 21:38:35.792: E/AndroidRuntime(788):  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:868)\n05-16 21:38:35.792: E/AndroidRuntime(788):  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:626)\n05-16 21:38:35.792: E/AndroidRuntime(788):  at dalvik.system.NativeStart.main(Native Method)\n05-16 21:38:35.792: E/AndroidRuntime(788): Caused by: android.view.InflateException: Binary XML file line #31: Error inflating class \n05-16 21:38:35.792: E/AndroidRuntime(788):  at android.view.LayoutInflater.createView(LayoutInflater.java:513)\n05-16 21:38:35.792: E/AndroidRuntime(788):  at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:565)\n05-16 21:38:35.792: E/AndroidRuntime(788):  at android.view.LayoutInflater.rInflate(LayoutInflater.java:618)\n05-16 21:38:35.792: E/AndroidRuntime(788):  at android.view.LayoutInflater.rInflate(LayoutInflater.java:621)\n05-16 21:38:35.792: E/AndroidRuntime(788):  at android.view.LayoutInflater.inflate(LayoutInflater.java:407)\n05-16 21:38:35.792: E/AndroidRuntime(788):  at android.view.LayoutInflater.inflate(LayoutInflater.java:320)\n05-16 21:38:35.792: E/AndroidRuntime(788):  at android.view.LayoutInflater.inflate(LayoutInflater.java:276)\n05-16 21:38:35.792: E/AndroidRuntime(788):  at com.actionbarsherlock.internal.ActionBarSherlockCompat.generateLayout(ActionBarSherlockCompat.java:1042)\n05-16 21:38:35.792: E/AndroidRuntime(788):  at com.actionbarsherlock.internal.ActionBarSherlockCompat.installDecor(ActionBarSherlockCompat.java:912)\n05-16 21:38:35.792: E/AndroidRuntime(788):  at com.actionbarsherlock.internal.ActionBarSherlockCompat.setContentView(ActionBarSherlockCompat.java:846)\n05-16 21:38:35.792: E/AndroidRuntime(788):  at com.actionbarsherlock.app.SherlockExpandableListActivity.setContentView(SherlockExpandableListActivity.java:212)\n05-16 21:38:35.792: E/AndroidRuntime(788):  at com.realactionsoft.android.worldcupflags.FlagsSherlockActivity.onCreate(PlaceCatalog.java:898)\n05-16 21:38:35.792: E/AndroidRuntime(788):  at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1047)\n05-16 21:38:35.792: E/AndroidRuntime(788):  at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2627)\n05-16 21:38:35.792: E/AndroidRuntime(788):  ... 11 more\n05-16 21:38:35.792: E/AndroidRuntime(788): Caused by: java.lang.reflect.InvocationTargetException\n05-16 21:38:35.792: E/AndroidRuntime(788):  at com.actionbarsherlock.internal.widget.ActionBarView.(ActionBarView.java:195)\n05-16 21:38:35.792: E/AndroidRuntime(788):  at java.lang.reflect.Constructor.constructNative(Native Method)\n05-16 21:38:35.792: E/AndroidRuntime(788):  at java.lang.reflect.Constructor.newInstance(Constructor.java:446)\n05-16 21:38:35.792: E/AndroidRuntime(788):  at android.view.LayoutInflater.createView(LayoutInflater.java:500)\n05-16 21:38:35.792: E/AndroidRuntime(788):  ... 24 more\n05-16 21:38:35.792: E/AndroidRuntime(788): Caused by: android.content.res.Resources$NotFoundException: Resource ID #0x7f020155\n05-16 21:38:35.792: E/AndroidRuntime(788):  at android.content.res.Resources.getValue(Resources.java:892)\n05-16 21:38:35.792: E/AndroidRuntime(788):  at android.content.res.Resources.getDrawable(Resources.java:580)\n05-16 21:38:35.792: E/AndroidRuntime(788):  ... 28 more\nOn the tablet emulator everything works fine.\nBut on the handset, I have a black gap between the ActionBar and the TabHost with the tabs and its content, that does not happen in the tablet tho. I guess if it is related to the blue colorstrip present on ICS what goes in that black gap?\nMy handset emulator is API Level 8 (Android 2.2), and my tablet emulator is API Level 11 (Android 3.0).\nOn a simulator for an ICS handset API Level 15 obviously everything works, I assume it also works on an API Level 14, because is ICS.\nDo I have to specify styles for the ActionBar or other things like attrs or drawables for every version under 14 or something?\nAfter removing the gen and bin folders several times, I see the problem has become kinda cyclic, when the HomeActivity does launches, the other activities won't... the next time I remove the folders and rebuild the HomeActivity will crash.\nI'll get the App on a couple of real phones tomorrow to test, but this is really discouraging, I really want to use Action Bar Sherlock to support ActionBar compatibility across all versions of Android from 8 (because I will use C2DM) to 15, but with this issues, I don't know what to do... :S\nThanks for your help guys!\n. Hey @Sleepybear, my tabs are Fragments, sorry if there's a misunderstanding on my last posts. But if you read the original post, I mentioned there that I could navigate trough all the tabs wich are either SherlockListFragment or custom SherlockExpandableListFragment withouth problems, but when I click on an item of such lists and I want to go to a SherlockActivity let's say the Detail of the clicked item, it crashes.\nAfter cleaning and deleting bin and gen folders I came to the second issue where the HomeActivity would crash making the app not to launch at all. If its not one thing, is the other. \nI have reviewed the Manifest 100s times and it seems ok, the themes.xml seems ok and it does not have modifications, and my custom styles are in a styles.xml file, the Classes are inheriting from what they are supposed to,  the proguard.cfg has the lines it must have, the samples using ABS4 are running ok in the emulators and I can build them with Eclipse without issues... I don't know what else to check?\nCool nickname btw! xD\n. @iNoles, I would like to share the code but it does not depend entirely on me. @Sleepybear I went to that forum before lading here, but did not found any similar thing, I'm already a member tho ;)\nWell sorry if I hijacked this github issue... at this point, I can't dig more on this... I have to meet some deadlines. I'll just resume implementing ABS later.\n. ",
    "bvirlet": "Regarding the original issue, what is the appropriate fix?\nFor instance if I have the following in my styles.xml\n<item name=\"android:actionBarDivider\">@drawable/divider</item>\n    <item name=\"actionBarDivider\">@drawable/divider</item>\nShould I move the first line in the values-v14 folder?\n. Ok, thanks Jake!\n. Hey Jake,\nStill having the issue: should I also move to -v14 styles like the following:\n<style name=\"MyActionBarTabBarStyle\" parent=\"Widget.Sherlock.ActionBar.TabBar\">\n    <item name=\"android:showDividers\">middle</item>\n<item name=\"android:dividerPadding\">0dp</item>\n<item name=\"android:textAllCaps\">false</item>\n    <item name=\"android:divider\">@drawable/divider</item>\n</style>\n. ",
    "janders-evernote": "Thank you so much for posting about this!  It would have taken me forever to figure this one out.  Just released a new app and started seeing this, and was able to have a fix in a day thanks to you.\n. ",
    "beartung": "@JakeWharton \nin my values/themes.xml\n```\n\n    <item name=\"actionBarStyle\">@style/Widget.Styled.ActionBar</item>\n    <item name=\"android:actionBarStyle\">@style/Widget.Styled.ActionBar</item>\n\n\n    <item name=\"indeterminateProgressStyle\">@style/IndeterminateProgress</item>\n    <item name=\"android:indeterminateProgressStyle\">@style/IndeterminateProgress</item>\n    <item name=\"android:background\">#d5f4eb</item>\n    <item name=\"background\">#d5f4eb</item>\n\n```\ni move this file to values-v14 but still not work in meizu. and if i do this, other 2.x android will not find the themes\ncan you give a demo or some details ?\nthanks a lot!\n. and device is  meizu m9 with 2.3.7\n. ok, it's works! \n. ",
    "dingzhihu": "hey,the issue made me nut. have u solved the problem?can u give a quick solution? or it is a ROM bug? many thanks\n. @SimonVT you mean i have to put all attrs prefixed with android: into values-v14? many thanks.\n. following is the screenshot\nhttp://i46.tinypic.com/vey7as.jpg\n. @JakeWharton help~ \n. setting fadingEdgeLength attr to 0dp works\n. ",
    "pratikbutani": "My Question is http://stackoverflow.com/q/18741485/1318946\nI am getting error in layout file, i have used custom actionbar theme but which file i have to put values-v11 or values-v14, i didn't get\nPlease Help me....\nThanks in advance...\n. @iNoles So in values-v11 we don't need to android prefix?\ni have files like:\n\nin values folder\n->styles_apptheme.xml\nhttp://pastebin.com/SbgZMyJk\n->styles_myactionbar.xml\nhttp://pastebin.com/ch3j5T2Y\n->styles.xml\nhttp://pastebin.com/aMwbanza\n\nIn values-v11 folder\n->styles_apptheme.xml\nhttp://pastebin.com/Jw2vdQ3G\n->styles.xml\nhttp://pastebin.com/CAdrJCN5\n\nIn values-v14 folder\n->styles_myactionbar.xml\nhttp://pastebin.com/qr8WzHC4\n->styles.xml\nhttp://pastebin.com/ATYssBut\n\nIn AndroidManifest.xml i have applied theme like\nandroid:theme=\"@style/Theme.Myactionbar\"\nSo now what can i do. i dont understand whats going wrong?\nPlease help me...\nthanks in advance...\n. Finally I got solution that you can find here: http://stackoverflow.com/a/18844713/1318946\n. ",
    "albnok": "Hmmm should this be closed or kept open? Given that this is the only place which has any reply.\nI've cross-posted here:\nhttp://stackoverflow.com/questions/10205306/nullpointerexception-in-onrestoreinstancestate\nhttps://groups.google.com/forum/?fromgroups#!topic/android-developers/FaVG2seV7lM\nAlso, I have found a way to instantly trigger this instead of eventually pushing the app out of memory - in Settings - Developer options - tick \"Don't keep activities\".\nRun the app, press Home, then hit the Task Switcher and load your app again. It should immediately cause the NullPointerException.\n. ",
    "KarthickCk": "I got this error while im using ActionBarActivity in AppCompact\nAndroidRuntime(23268): FATAL EXCEPTION: main\nE/AndroidRuntime(23268): java.lang.RuntimeException: Unable to start activity ComponentInfo{com.adventnet.webmon.android/com.adventnet.webmon.android.NavigationDrawerBaseActivity}: java.lang.NullPointerException\nE/AndroidRuntime(23268):    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2110)\nE/AndroidRuntime(23268):    at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2135)\nE/AndroidRuntime(23268):    at android.app.ActivityThread.access$700(ActivityThread.java:140)\nE/AndroidRuntime(23268):    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1237)\nE/AndroidRuntime(23268):    at android.os.Handler.dispatchMessage(Handler.java:99)\nE/AndroidRuntime(23268):    at android.os.Looper.loop(Looper.java:137)\nE/AndroidRuntime(23268):    at android.app.ActivityThread.main(ActivityThread.java:4921)\nE/AndroidRuntime(23268):    at java.lang.reflect.Method.invokeNative(Native Method)\nE/AndroidRuntime(23268):    at java.lang.reflect.Method.invoke(Method.java:511)\nE/AndroidRuntime(23268):    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1027)\nE/AndroidRuntime(23268):    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:794)\nE/AndroidRuntime(23268):    at dalvik.system.NativeStart.main(Native Method)\nE/AndroidRuntime(23268): Caused by: java.lang.NullPointerException\nE/AndroidRuntime(23268):    at android.view.ViewGroup.dispatchRestoreInstanceState(ViewGroup.java:2831)\nE/AndroidRuntime(23268):    at android.view.ViewGroup.dispatchRestoreInstanceState(ViewGroup.java:2832)\nE/AndroidRuntime(23268):    at android.view.ViewGroup.dispatchRestoreInstanceState(ViewGroup.java:2832)\nE/AndroidRuntime(23268):    at android.view.View.restoreHierarchyState(View.java:12206)\nE/AndroidRuntime(23268):    at android.support.v4.app.Fragment.restoreViewState(Fragment.java:425)\nE/AndroidRuntime(23268):    at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:949)\nE/AndroidRuntime(23268):    at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1104)\nE/AndroidRuntime(23268):    at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1086)\nE/AndroidRuntime(23268):    at android.support.v4.app.FragmentManagerImpl.dispatchActivityCreated(FragmentManager.java:1877)\nE/AndroidRuntime(23268):    at android.support.v4.app.FragmentActivity.onStart(FragmentActivity.java:552)\nE/AndroidRuntime(23268):    at android.app.Instrumentation.callActivityOnStart(Instrumentation.java:1178)\nE/AndroidRuntime(23268):    at android.app.Activity.performStart(Activity.java:5216)\nE/AndroidRuntime(23268):    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2083)\nE/AndroidRuntime(23268):    ... 11 more\nD/WindowManager( 2104): mInputFocus is not null.\n. ",
    "eeVoskos": "I have the same problem on all ICS devices, but only when I call setSupportProgressBarIndeterminateVisibility() before I call setContentView(). Hence, a workaround that works for me is to call setSupportProgressBarIndeterminateVisibility() for the first time in the onPostCreate() method of a base FragmentActivity class, instead the onCreate(). All my other Activities extend from this one and setContentView() is called in the onCreate() of the subclasses. Subsequent calls via listeners, etc, work without problem.\nThis is indeed strange behavior though, connected also to issue #310.\n. ",
    "richhollis": "Sample problem here on both ICS and Motorola Milestone (2.1-update1). onPostCreate as suggested by @eeVoskos  resolves - thanks for the suggestion.\n. Awesome - thanks Jake! Working perfectly now.\n. ",
    "jobi": "Hmm how do you do it? I getSupportActionBar returns null here\n. ok thanks\n. ",
    "fidanov": "I have another problem with ActivityUnitTestCase on older Android versions (2.3 or older). It tells me that a Sherlock theme is not set, which is not true because when I run the app in normal mode everything is just fine and I have set such a theme in the manifest.\nIt happens because ActivityUnitTestCase does not respect the theme set in the manifest file (and probably other values set there).\nThe solution for me was to add this to my SetUp method. \njava\nContextThemeWrapper context = new ContextThemeWrapper(getInstrumentation().getTargetContext(), com.example.app.R.style.MyTheme);\nsetActivityContext(context);\nHowever, this does not solve the getSupportActionBar() returns null problem. It just helps a little bit when using ActivityUnitTestCase.\n. ",
    "orrc": "@fidanov I've seen that problem several times before while writing tests for non-ActionBarSherlock apps, so I don't think it's an issue with this library.\nIt's a shame ActivityUnitTestCases aren't supported though, as they're pretty simple to write and really fast to run.\n. So it looks like this is a property of ActivityUnitTestCase, rather than of ActionBarSherlock.\nCalling either the native getActionBar() or ABS's getSupportActionBar() method causes the activity to initialise an action bar.  But in the call to Activity#initActionBar() it checks whether this Activity has a parent (i.e. isChild()), in which case an action bar shouldn't be added.\nWhen ActivityUnitTestCase starts the activity under test it adds a mock parent, which means no action bar is ever created, which in turn causes the NPE.\n. I'm seeing this too in my app, also on the Galaxy Nexus with 4.1.2.\n. I added logging to ActionBarSherlockNative#dispatchOptionsItemSelected(MenuItem) to see what was happening (and added return false before the NPE would happen).\nIn every case, monkey crashes when clicking on the menu item android.R.id.home \u2014 i.e. the home button/icon.\nMonkey somehow manages to click on a menu item before onCreateOptionsMenu has been called in an activity:\n35.481 ABSherlock: Using implementation: ActionBarSherlockNative\n35.481 ABSherlock: [<ctor>] activity: com.example.FooActivity@441f64f0, flags: 1\n35.481 ABSherlock: [getActionBar]\n35.504 ABSherlock: [setContentView] layoutResId: 2130903075\n35.512 ABSherlock: [getActionBar]\n36.582 ABSherlock: [dispatchOptionsItemSelected] item: null\n36.582 System.out: >>>>>>>> menu fail on item ID '0x102002c', title 'Search'\n36.582 ABSherlock: [dispatchOptionsItemSelected] item: null\n36.582 System.out: >>>>>>>> menu fail on item ID '0x102002c', title 'Search'\n36.590 ABSherlock: [dispatchCreateOptionsMenu] menu: com.android.internal.view.menu.MenuBuilder@420f2690\n36.590 ABSherlock: [callbackCreateOptionsMenu] menu: com.actionbarsherlock.internal.view.menu.MenuWrapper@439e1590\n36.590 ABSherlock: [getMenuInflater]\n36.590 ABSherlock: [getActionBar]\n36.590 ABSherlock: [getMenuInflater]\n36.598 ABSherlock: [callbackCreateOptionsMenu] returning true\n36.598 ABSherlock: [dispatchCreateOptionsMenu] returning true\n36.598 ABSherlock: [dispatchPrepareOptionsMenu] menu: com.android.internal.view.menu.MenuBuilder@420f2690\nAdding a mMenu == null check to dispatchOptionsItemSelected makes the monkey happy, and lets me test my app. :+1: \n. ",
    "AlexBonel": "@orrc Good observation\nThere is also an issue associated with creating of component name in ActivityUnitTestCase's startActivity() method described here\n. ",
    "dabitdev": "What is JakeWharton saying with We use instrumentation tests at Square and both of our apps allow this fine.\nSquare has only Spoon to make test, is Spoon fixing the problem testing the ActionBar?\n@orrc I agree with you I have the same problem.\n@alexBonel I fixed the problem with the componentName addign a setter to the ActivityUnitTestCase, setPackageName(String name), and from the unit test call this before starting the activity \nsetPackageName(getInstrumentation().getTargetContext().getApplicationInfo().packageName);\nComponentName cn = new ComponentName(packageString, mActivityClass.getName());\n. ",
    "jasonphanley": "I can't get the ICS emulator to do 2 config changes in a row, so I can't test. There is an android bug report about this behavior: http://code.google.com/p/android/issues/detail?id=2423. I was seeing this in the 2.2 emulator and it may have been fixed/optimized on later platforms.\n. Tested your commit and it fixes the behavior for the original case I saw it in.\n. ",
    "waninkoko": "That's just a HashMap to store the created fragments (and return them if the ViewPager calls getItem(), to avoid a new instantiation of the Fragment). Anyway, this also happens without it. And ONLY happens when the activity is restarted (I know it gets restarted because, when I enter the application through the notification, onCreate() gets called... so mFragments will be empty at the beginning).\n. This happens when I use FragmentStatePagerAdapter as adapter. When I use FragmentPagerAdapter, everything works ok too, but when the activity gets restarted the menu items are not duplicated but the fragments does NOT show anymore.\nIf I use one I have a problem, if I use the another I have a different problem. This is a big headache for me right now.\n. I checked the code of that class in the v4 support library, and the problems occurs when it adds the fragments with the fragment manager.\nFragmentPagerAdapter checks if the fragment already exists in the fragment manager. If it exists, it just attaches the fragment, if not it asks to create the fragment and adds it. When it has to destroy the pages of the ViewPager, it just deattaches the fragments.\nFragmentStatePagerAdapter always creates a new fragment and adds it to the fragment manager. At first glance I thought it could be adding duplicated fragments, but I checked that old fragments are removed when the ViewPager are destroyed. Also, this class has an array called \"mFragments\" (yeah, like the HashMap I declared in my code, and it works in a similar way too, but I cannot use this array directly as it's declared private) that stores the created fragments and returns them instead of re-creating them (but, when the activity is restarted, this array is empty as the adapter was destroyed and we're working with a new instance of it).\nIf I modify the original FragmentPagerAdapter to always add/remove fragments (instead of adding and then attaching/dettaching), like FragmentStatePagerAdapter does, the same problem of duplicated menu items happens (so it's not a problem about saving and/or restoring the ViewPager state).\nI also checked that, when a fragment is added using the fragment manager, it calls a function called 'dispatchOnCreateMenuOptions()' that just checks which added fragments have the mHasMenu flag enabled and then calls 'onCreateOptionsMenu()' in each one.\nI don't know if I made a mistake in my code (I checked it dozens of times) or it's some kind of bug in the v4 support library. I have to check if this happens without the support lib (but, in that case, my app would only work in HC and ICS).\n. I forgot to say that I use singleTask launch mode (and this happens too with singleTop). If I use standard launch mode, it works ok.\n. If I override onSaveInstanceState() in my activity, and I don't call super.onSaveInstanceState(), the menu items are not duplicated anymore.\n. Correct.\nNow I'll have to find a way to fix this as I already know what happens.\nThanks for your help!\n. ",
    "felipelalli": "I have the same issue yet, in the last version. I don't know exactly in which situation it occurs, but sometimes I have menu items duplicated. I solved like this: http://stackoverflow.com/a/8495697/450148\n. Really? I'll make more tests and tell you again.\n. ",
    "supermanmwg": "You could add\n \n. ",
    "locationad": "Unfortunately not. Specific elements are changing the font size except the action bar and the CAB.\n. ",
    "misapeic": "Already reported as Android bug: http://code.google.com/p/android/issues/detail?id=20493&q=configchanges&colspec=ID%20Type%20Status%20Owner%20Summary%20Stars\n. ",
    "manupeco": "Same errors with 4.0.2. If I go to \"\\JakeWharton-ActionBarSherlock-4.\n 0.1-0-g8fcee10\\JakeWharton-ActionBarSherlock-1a51cf7\\samples\\demos\\target\\unpack\n \\apklibs\\com.actionbarsherlocklibrary_apklib_4.0.2\\res\\drawable\\\" folder the resource is not present. It is present in \"drawable-hdpi\". Why my build process doesn't pick the resource from the folder where it is present?\n. It is exactly what I've tried. If I go to \\JakeWharton-ActionBarSherlock-4.0.2-0-gcf437ed\\JakeWharton-ActionBarSherlock-2eabf25\\samples\\demos\\target\\unpack\\apklibs\\com.actionbarsherlock_library_apklib_4.0.2\\res\\drawable the resources is not present. It is present in drawable-hdpi...why it isn't recognized?\n. Can it be a problem of the Android maven plugin? It seems it can't manage the hierarchy of the drawable folders. If a resource is not present in the drawable, it should search in the other drawable-* folders. Am I wrong?\n. ",
    "hoelle": "You are totally right. It has to be a plattform bug. \nThank you!\n. ",
    "stephanenicolas": "That's right, here is some sample code: \n``` java\n@Override\n    public boolean onPrepareOptionsMenu(Menu menu) {\n        MenuItem menuItemCollapse = menu.findItem(R.id.menu_collapse);\n        MenuItem menuItemExpand = menu.findItem(R.id.menu_expand);\n    menuItemCollapse.setVisible(isSelectionModeActive);\n    menuItemExpand.setVisible(!isSelectionModeActive);\n    return true;\n}\n\n@Override\npublic boolean onCreateOptionsMenu(Menu menu) {\n    getSupportMenuInflater().inflate(R.menu.menu_gallery, menu);\n    return true;\n}\n\n@Override\npublic boolean onOptionsItemSelected(MenuItem item) {\n    boolean expandClicked = item.getItemId() == R.id.menu_expand;\n    setSelectionModeActive(expandClicked);\n    return true;\n}\n\n```\n. This is a nice change. Hope other libraries will adopt that naming convention.\n. Our base class, which provides a lot of features inside our app inherits from RoboSherlockFragmentActivity. I guess a lot of apps are organized this way. The absence of DialogThemes in ABS 4.3.x will lead to code deduplication of the base class, which is quite an horrible pattern. Getting stuck to 4.2.0 is not a nice solution either.\nIs there any chance that this feature could be added back ?\n. Is there any example somewhere that should be mentionned on the wiki of ABS\n?\nI feared to have to add new resources has the commit that removed that\nfeature contained a lot of code + theme + resources.\nThx for your very fast answer.\n2013/5/24 Simon Vig Therkildsen notifications@github.com\n\nYou can quite easily create the dialog themes yourself.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/761#issuecomment-18406443\n.\n\n\nSt\u00e9phane NICOLAS,\nOCTO Technology\nD\u00e9veloppeur & Consultant Android / Java\n..........................................................\n50, Avenue des Champs-Elys\u00e9es\n75008 Paris\n+33 (0)6.26.32.34.09\nwww.octo.com - blog.octo.com\nwww.usievents.com\n...........................................................\n. ",
    "snooplsm": "if(Build.VERSION.SDK_INT>=Build.VERSION_CODES.ICE_CREAM_SANDWICH) {\n    invalidateOptionsMenu();\n}\n. Looks like the LinearLayout is horizontal as well.  Guess they were not testing for the shadow.\n. The hack would be to do something like this:\n@Override\nprotected void onPostCreate(Bundle savedInstanceState) {\n    super.onPostCreate(savedInstanceState);\n    if(Build.VERSION.SDK_INT==Build.VERSION_CODES.JELLY_BEAN_MR2) {\n        View view = findViewById(android.R.id.content);\n        if(view instanceof FrameLayout) {\n            FrameLayout content = (FrameLayout)view;        \n            content.setForeground(getResources().getDrawable(R.drawable.actionbar_shadow));\n        }\n    }\n}\n. ",
    "KyleJahnke": "On my ICS device, setVisible also sometimes did not work, I fixed it by using view's .post(Runnable) method to put the setVisible method on the UI thread. I don't know why it works, but it does. Alternative to using the invalidateOptionsMenu.\n. ",
    "dinhvandev": "Hi all.\nI have same problem but on Android 4.2.2\nI have left menu for Activity when I choose one option in menu I will use replace Fragment by New Fragment\nAnd I change some menu to hide but It hide in seconds and show again when loaded fragment\nPls let me know How to fix it\nThanks\n. ",
    "meetmehdi": "i am facing same problem. Any one can help?\n. ",
    "trinadhkoya": "Hi All,I have a problem with My Fragment .I Added a Menu item for a single fragment for what i need .It works fine ,But when i go for another fragment , it reflects the same (menu item ) showing.I have only one Activity FYI.\n. ",
    "markov00": "I tried (clean the sherlock build and also my project build), and I also create a brand new project with just only a demo activity and with one menuitem and the problem still.\nThe problem seems that the MenuInflater.MenuState.newInstance() wants to create a new instance of a wired class name: if I debug the classname that the menu inflater wants to instanciate is \"res/drawable/textfield_searchview_holo_dark.xml\"\nIt seems to happen only on my asus transformer with 3.2.1 but not with my nexus s 4.0.2\n. The ASUS use a stock rom.  I will investigate with an older version of ABS, if this can be related.\n. ",
    "cqql": "I still don't know, what triggered this but I fixed it by increasing the target version from 14 to 15.\n. ",
    "antoniy": "Sorry for the duplicate and thank you for the quick response.\n. Let me just update the issue. I found a working workaround for me. Instead of set the action items inside each fragment and give ViewPager the chance to mess everything up, I update action items for each fragment from the container fragment activity. I do this each time the user swipe the fragments from onPageSelected() callback method for ViewPager. By also do invalidateOptionsMenu() from this method to the containing fragment we gain faster actionbar redraw instead of wait of swipe animation to finish.\n. I'm glad my solution was useful to you.\nCheers,\nAntoniy\n. @hjudez, actually I haven't used onPrepareOptionsMenu() but only onCreateOptionsMenu() and when need to redraw - invalidateOptionsMenu() method on the Activity triggers the new invocation of onCreateOptionsMenu() and there is no old garbage. I chose this way because I didn't do any updates on the actions but rather I replace them all for each selected fragment.\n. I don't quite understand your workflow. What is the dummy menu for? And if you feel you need to clear the menu for your use-case, by all means - clear the menu. :) In my use-case I don't need to touch the actionbar from within the fragments. This is taken care of the container Activity. The Activity tracks which fragment is visible and set the appropriate actions for the current fragment.\n. Ah, okay. I'll check it out. Thanks.\n. ",
    "hjudez": "@antoniy, don't you have to clear the menu before you inflate it in onPrepareOptionsMenu? If I don't clear it the menu keeps growing with repeated icons every time the overflow menu opens.\n. Inflating a dummy menu with an android:showAsAction=\"never\" item from the Activity onCreateOptionsMenu() and then inflating the real menus from each Fragment onCreateOptionsMenu() also seems to solve the issue. However the menu has to be cleared inside each Fragment\u00b4s onCreateOptionsMenu() before it is inflated in order to remove the dummy item that was added by the Activity.\n. Sorry, my english is not really good. Here https://github.com/JakeWharton/ActionBarSherlock/issues/442#issuecomment-9959173 @TimMackenzie explains the solution. With this approach you can then let the fragment handle the menu creation as expected and you will not have to change anything at the Activity.\n. ",
    "cherrydev": "Here's a screenshot:\n\n. I do not currently have a sample that I can extract from my larger code-base, but it should be trivial to reproduce:\nIn AndroidManifest.xml\nxml\n\u2026\n<application etc\u2026 android:uiOptions=\"splitActionBarWhenNarrow\">\n\u2026\nCreate any menu resource with an icon and title, but without the title showing, such as:\nxml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <item android:id=\"@+id/menu_search\" android:showAsAction=\"always\"\n        android:title=\"Search\" android:icon=\"@android:drawable/ic_menu_search\"></item>\n</menu>\nCreate any SherlockActivity, apply that menu resource as the options menu and then long-tap the icon on the action bar (which should be on the bottom, since the actionbar is set as split).  You will see a toast-style overlay that displays \"Search\" but is at the top of the screen (like the screenshot) instead of the bottom.\nFor reference, the screenshot was taken on a Nexus S running OS 2.3.6.  The Activity was a descendent of SherlockFragmentActivity.  If this isn't trivially reproducible, please let me know and I will find some extra time to package up a self-contained sample.\n. ",
    "victorelli17": "This problem occurs when using the SherlockFragment class. \n\n. ",
    "JulianCardona": "Sorry bro, my mistake ;) i just realizing that when your email arrive. Thanks a lot ... awesome job!!.\n. thanks @purdyk  your solution did work for me. :+1: \n. ",
    "thasmin": "Let me explain my use case. I created an open source podcast player called Podax. It uses your libraries because they're extremely good and they make Podax a better app. Without these files, I need to create detailed instructions on how to download the code, set it up to compile, configure Podax to use it as a library, and then get around Eclipse's oddities in order to share my source code. I'm just trying to make it easy to contribute so the world can have a better podcast player on their phone. Eclipse is the officially supported way to create Android apps, so I chose that.\nI'd argue that this library doesn't support Ant or Eclipse out of the box. It's easier to get Ant working than Eclipse, but both need extra steps to get the code to compile. The files removed from .gitignore are not preventing people from using other compilers. The version of the Android Support library that I committed is the most recent version. If you are only supporting Maven then just say so. That's fine.\nI don't blame the libraries for problems in the tooling. It would be nice if libraries could be self contained on Android and you could distribute APKs. You've clearly put a lot of work in to make some awesome libraries. I'm just asking that there is official support for the officially supported build methods.\nAnyway, thanks for making me look up that Maven can do incremental compiles. I'd love to use vim instead of Eclipse but the long compile times were holding me back.\n. Yeah, that's pretty much it. But Ant compilation takes a long time.\n. ",
    "marczych": "You should take Jake's advice: fork this repository and include all necessary Eclipse files so anybody who wants to use it can easily get it set up. You can of course pull in changes whenever you want (which is what you'd have to do without a fork anyway).\nI'm also very interested in ditching Eclipse for many reasons. Is it really as easy as:\nandroid create project ...\n< edit project >\nant debug\nto do Android development without Eclipse? If you could point me in the direction of some resources that would be great =).\n. I'd rather not use an IDE at all - I much prefer doing things on the command line. I've been using eclim for a while but of course it still requires eclipse. I'll look more into ant when I get back into Android dev.\n. ",
    "Ashot-KR": "Oh, i just clean sherlock action bar project and it works\n. ",
    "annie-l": "Yeah, apparently this was fixed in Honeycomb. Would be nice if this was fixed in ABS so pre-Honeycomb wouldn't experience this crash.\nhttps://android.googlesource.com/platform/frameworks/base/+/749b0eb2c9a52bb188fd8900859b3725889e0ec0%5E!/\n. ",
    "edisonw": "Not sure where to hook the code. But you can certainly fix it via reflection when possible. \nif(Build.VERSION.SDK_INT<Build.VERSION_CODES.ICE_CREAM_SANDWICH){\n    try {\n      final Field fAnchor = PopupWindow.class.getDeclaredField(\"mAnchor\");\n      fAnchor.setAccessible(true);\n      Field listener = PopupWindow.class.getDeclaredField(\"mOnScrollChangedListener\");\n      listener.setAccessible(true);\n      final ViewTreeObserver.OnScrollChangedListener originalListener = (ViewTreeObserver.OnScrollChangedListener) listener.get(window);\n      ViewTreeObserver.OnScrollChangedListener newListener=\n                new ViewTreeObserver.OnScrollChangedListener() {\n                    public void onScrollChanged() {\n                        try {\n                            View mAnchor = (View) fAnchor.get(window);\n                            if(mAnchor==null){\n                                return;\n                            }else{\n                               originalListener.onScrollChanged();\n                            }\n                        } catch (Exception e) {\n                            e.printStackTrace();\n                        }\n                    }\n                };\n      listener.set(window,newListener);\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n  }\n. Google has fixed this in ICS by adding a null check there. The solution would be assigning a scroll listener by reflection.\nif(Build.VERSION.SDK_INT<Build.VERSION_CODES.ICE_CREAM_SANDWICH){\n    try {\n      final Field fAnchor = PopupWindow.class.getDeclaredField(\"mAnchor\");\n      fAnchor.setAccessible(true);\n      Field listener = PopupWindow.class.getDeclaredField(\"mOnScrollChangedListener\");\n      listener.setAccessible(true);\n      final ViewTreeObserver.OnScrollChangedListener originalListener = (ViewTreeObserver.OnScrollChangedListener) listener.get(window);\n      ViewTreeObserver.OnScrollChangedListener newListener=\n                new ViewTreeObserver.OnScrollChangedListener() {\n                    public void onScrollChanged() {\n                        try {\n                            View mAnchor = (View) fAnchor.get(window);\n                            if(mAnchor==null){\n                                return;\n                            }else{\n                               originalListener.onScrollChanged();\n                            }\n                        } catch (IllegalAccessException e) {\n                            e.printStackTrace();\n                        }\n                    }\n                };\n      listener.set(window,newListener);\n    } catch (Exception e) {\n      e.printStackTrace();  \n    }\n  }\n. ^Also note that you have to do this to every PopupWindow that you instantiate in Android 2.3.3...so you could just override the constructors and extend it. \n. Thanks for the correction Thomas.\nI did notice this crash in production. I think it may differ by Android\nversion that the WeakReference was added later.(I did not check the source\ncode though so I may be wrong). IMHO the safest way should be checking for\nthe class instance and have a try catch to ignore Exceptions in production.\nOn May 3, 2013 9:33 AM, \"Thomas Keller\" notifications@github.com wrote:\n\nThe above code from @edisonw https://github.com/edisonw is crashing\nwith a ClassCastException. The problem is that mAnchor is a\nWeakReference, not a plain View, so the correct check should look\nlike this:\nWeakReference mAnchor = (WeakReference) fAnchor.get(>);\nif (mAnchor == null || mAnchor.get() == null) {\n       return;\n} else {\n       originalListener.onScrollChanged();\n}\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/752#issuecomment-17394143\n.\n. haha. cool. that's weird. I guess all my errors were probably surpressed by\nmy catch block. will make this correction in my code too.\n\nThanks for the correction again!\nOn May 3, 2013 10:42 AM, \"Thomas Keller\" notifications@github.com wrote:\n\n@edisonw https://github.com/edisonw Actually I looked at the\nPopupWindow implementations in 1.5, 1.6, 2.2 and 2.3 versions via grepcode\nand they all had a WeakReference, so I really wonder how this could\never work properly :)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/752#issuecomment-17397689\n.\n. \n",
    "mcsarge": "OH, thanks for the information, I will track that issue, this one in unneeded.\n. ",
    "ChristianBecker": "I'm using Eclipse and missing @Override annotations are marked as warnings (at least in my compiler configuration).\nI just was confused that some @Override annotations were available and some were missing in the ABS codebase, so I pulled this changes.\n. That's not the point. Only difference between 1.5 and 1.6 is the fact, that overridden Interface methods should be declared too in 1.6.\n. ",
    "dancefire": "Why this commit is not pulled? It's very handy for apps with multiple language, otherwise {\"abs__xxxx\" is not translated in xx} error will be thrown during export apk. It doesn't hurt anything, so please pull.\n. ",
    "Prototik": "Mmm... For HoloEverywhere i develop \"Translator\" - grabber of strings from AOSP.\nMay be run once it for ABS?\n. @JakeWharton What's stopping you create an artifact support-library in your groupId and hand deploy there newer versions? Yes, not quite right, but the gap to five releases - it is too.\n. You may use HoloEverywhere for holo-styled popupmenu and context menu. \nI don't think that popupmenu a part of actionbar.\n. Try replace requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS); on requestWindowFeature(com.actionbarsherlock.view.Window.FEATURE_INDETERMINATE_PROGRESS);\n. Until release of HoloEverywhere 1.4.2?\n. Yea, soon. 3-4 days, i think. I comment this issue when it will be released.\n. Yea. One moment.\n. > I don't want the dev branch to not compile.\nBy the way dev branch compiles, but if want to manually recompile translates without he translator 1.4.2 - fail, yea.\n. HoloEverywhere 1.4.2 was released, Translator already available in Maven Central.\n. What about this pull request?\n. @JakeWharton fixed.\n. @SimonVT fixed.\n. By the way: dialogs /can/ have a action bar, this behavior uses in PreferenceScreen in native droid, for example. \n. @JakeWharton build tools available only since r22 asdk, but for travis ci we cannot use r22 because it wants to accept some licenses from standard console input. Veeery funny. I don't know how to convince Google that we agree this shit. Ops, sorry, this license.\n. @JakeWharton fu*k, yes, i know! :D\nBut standard way for installing doesn't work for r22 - it's asks about license.\nOf course you can write to asdk devs for providing something more sexy :)\n. i18n module grabs strings from AOSP, i don't think that you should modify it.\nAlthough if Jake allow it - i can show you how to correct override strings for resbuilder plugin.\n. Hm. Yes, don't used, but working. Can be used by devs.\nI can move IcsToast to a com.actionbarsherlock.widget package. Is this necessary?\n. You suggest remove the method makeText(Context, int, int)?\n. It's disable invoking mvn test.\nI don't know why, but on this step local maven repo doesn't have installed abs, and dependencies cannot be resolved. (ie. i18n module cannot find dependency com.actionbarsherlock:library)\n. See\n. ",
    "DineshAnandan": "Thank you it's work fine :)\n. When i apply the android:Theme.Holo.DialogWhenLarge theme in values-v14 folder in samsung galaxy tab 10.1 getSupportActionBar() returns null\n. ",
    "agarwlGaurav": "I am attempting to do this on a Emulator which has Android 2.2\nHere is the screenshot http://i.imgur.com/TBzBH.png\n. @matthewmichihara @csobrinho  Can we safely replaced from r7 to r11? Have you guys replaced it any issues??\n. @matthewmichihara Thx for help.\n. Thnx Simon VT.\nOn Sun, Feb 17, 2013 at 2:32 AM, Simon Vig Therkildsen \nnotifications@github.com wrote:\n\nThe issue isn't that it doesn't work, the issue is that r11 isn't in maven\ncentral yet. If there is any issues with r11 they're very likely to get\nlooked at, but updating is up to you.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/pull/809#issuecomment-13674828.\n. \n",
    "buildhive": "Jake Wharton \u00bb ActionBarSherlock #4 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #7 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #8 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #13 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #14 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #15 FAILURE\nLooks like there's a problem with this pull request\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #16 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #25 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #26 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #27 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #28 FAILURE\nLooks like there's a problem with this pull request\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #29 FAILURE\nLooks like there's a problem with this pull request\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #43 FAILURE\nLooks like there's a problem with this pull request\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #44 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #45 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #48 FAILURE\nLooks like there's a problem with this pull request\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #49 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #46 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #47 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #56 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #68 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #50 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #51 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #52 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #55 FAILURE\nLooks like there's a problem with this pull request\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #57 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #58 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #61 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #69 FAILURE\nLooks like there's a problem with this pull request\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #70 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #72 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #73 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #74 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #76 FAILURE\nLooks like there's a problem with this pull request\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #77 FAILURE\nLooks like there's a problem with this pull request\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #86 FAILURE\nLooks like there's a problem with this pull request\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #81 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #82 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #84 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #87 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #88 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #89 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #90 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #91 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #93 FAILURE\nLooks like there's a problem with this pull request\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #94 SUCCESS\nThis pull request looks good\n(what's this?)\n. Jake Wharton \u00bb ActionBarSherlock #95 SUCCESS\nThis pull request looks good\n(what's this?)\n. ",
    "aguillard": "I've also find a workaround for this issue.\nIn my case, on my first implementation, on the method onCreateOptionsMenu(), I inflated the menu only in one condition. This condition was not true the first time that onCreateOptionsMenu() is called so the issue came during invalidateOptionsMenu(). \nTo solve the issue, it's mandatory the inflate a menu the first time onCreateOptionsMenu() is called. And like this, we can redefine the menu after with invalidateOptionsMenu().\n. ",
    "henrik-lindqvist": "I've got the same issue with 4.2.0. I'am using a ViewPager/FragmentStatePagerAdapter with two Fragments without Tabs. After the first setCurrentItem on the ViewPager the action bar items get unresponsive. Their icons also gets darker, using the light theme with gray icons, so i suspects some double-draw, double-call issue. \nIt works fine if the Activity also adds items.\n. ",
    "michaelzoech": "Happened for me too where I use a FragmentPageAdapter and the Fragments create the options menu. Simply adding\njava\npublic boolean onCreateOptionsMenu(Menu menu) {\n    menu.add(\"\");\n    return true;\n}\nto the activity seems to work around the issue and has no visual changes to the options menu.\n. ",
    "dbc1ever": "Happening here too, the menu.add(\"\") seems to fix it, but why? Still sloppy and who wants an extra menu item hanging around unnecessarily.\nHasn't there been any advance with this issue in 8 months? any news?\n.  Jon4thanGarcia did it work with a 1px divider?\n. ",
    "Ereza": "I just stomped on this bug... I have applied crazymaik's solution, but with one change: adding a boolean variable to my activity so I only add the empty menu the first time. After that, it gets invalidated and does not show up when you press the menu key.\n. After some months, I have modified my workaround, I'll explain it, hoping that it will help someone.\nIn my case, this bug happens because I have a fragment with an options menu, and the activity where it is attached has no menu. I really want to handle the options menu in the fragment, because that simplifies the menu handling on a tablet layout, where the activity does have a menu.\nThat being said, my fix was similar to the one indicated by crazymaik, but instantiating a real menu instead of adding an item. This way, we can better control how it is displayed.\nIn my activity (which had no menu and only contains the fragment which has one), I have added the following code:\njava\nboolean firstTimeMenu = true;\n//...\n@Override\npublic boolean onCreateOptionsMenu(Menu menu) {\n    if (firstTimeMenu){\n        getSupportMenuInflater().inflate(R.menu.fake_menu, menu);\n        firstTimeMenu = false;\n    }\n    return super.onCreateOptionsMenu(menu);\n}\nfake_menu.xml is a menu containing the following:\nxml\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\" >\n    <!-- We use this to workaround ABS bug #510 by instantiating this as a menu on our activity -->\n    <item\n        android:id=\"@+id/menu_fake\"\n        android:orderInCategory=\"100\"\n        android:showAsAction=\"always\"\n        android:icon=\"@null\"\n        android:title=\"@null\"\n        android:enabled=\"false\"/>\n</menu>\nThen, on my fragment I call getActivity().supportInvalidateOptionsMenu() as early as possible, in order to hide the fake menu.\nThe only effect visible to the user is that if you are using a title or subtitle on the action bar, if it is too large it will be shown with \"...\" while the fake menu is shown (only a moment).\nThis improves the previous solution because that solution showed an empty menu if you pressed the hardware menu key, or showed the overflow menu icon if the device had software buttons.\nOf course, the best solution would be to have this bug fixed ;)\n. ",
    "uKL": "I'm using the newest version of ABS but the problem still occurs. Adding empty menu item is just a workaround and users get confused after menu key click. Is there any better solution?\n. Current workround for me is to handle generic onOptionsItemSelected for provider's ID and do as follows:\njavascript\n@Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        switch (item.getItemId()) {\n[...]\n            case R.id.menu_item_share:\n                startActivity(Intent.createChooser(mShareIntent, getString(R.string.share_title)));\n                return true;\n            default:\n                return super.onOptionsItemSelected(item);\n        }\n    }\nBut it'd be nice to see this fixed. :)\n. ",
    "korniltsev": "Having the same problem. Have to inflate all menus in activity...\n. Thanks! Fixed.\n. ",
    "isayamayomi": "Having the same problem.\nI use the workaround supposed by crazymaik with a little change\uff1a\nif (Build.VERSION.SDK_INT < Build.VERSION_CODES.ICE_CREAM_SANDWICH) {\n        menu.add(\"\").setShowAsAction(MenuItem.SHOW_AS_ACTION_ALWAYS);\n    }\n. ",
    "abuchanan-grio": "On the Android change it sounds like they're waiting on feedback from you (\"Jake, do you have any comments to provide based on Adam's review? Thanks!\") based on the inline comments that Adam made:\n\nThis will result in a requestLayout and setTabSelected is called as part of onMeasure in this view. Requesting layout during a layout pass can cause problems.\nWe should probably do something something more direct instead of setTabSelected to animate to the currently selected tab after the size has changed to avoid this.\n\nAny news on whether a different approach will work better?\n. ",
    "dkadlecek": "Jake, I've tested he fix and it works on all API levels. Just trying to help here. \n. Ok, thanks Jake. We'll hack our version for now. It is meeting our client's needs.\nd\nOn Jun 10, 2012, at 8:34 PM, Jake Wharton wrote:\n\nIt fixes it for pre-ICS only. On API 14 and newer the native action bar is used which will still exhibit the bug.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/513#issuecomment-6234750\n. \n",
    "noloman": "why don't you please just use an image uploading service so we can see what's happening?\n. ",
    "krpot": "Thanks, now I got it. I just compile my app with Android 4.03 including your library modifying AndroidManifest.xml to cover sdk 8 to 15.It work charm in my emulator with API 8. So cooool.\n. ",
    "judepereira": "I'm facing this exact issue on my IntelliJ IDE.\nI've created a new android module, and then added org.holoeverywhere:library:1.6.1 as a maven dependency from LIbraries. Imports work fine, but without the android:theme line, the activity refuses to start. I cannot resolve @style/Holo.Light.\n. ",
    "kumien": "I will try to do it today.\n. I found bug in my code so sorry to disturb you. I close this issue.\n. ",
    "zooter": "Hey Kumien, can you please post the fix? I am facing the same issue.\n. ",
    "andyghiuta": "I have the same issue.\nA few more details:\nI have also two fragments, both with lists which they load asynchronously. Both fragments have a refresh button in the menu.\nOnly when loading the activity the first time and going to the second tab, the refresh is not responding (taping it once). But if I tap an item in the list, then it is executing the action it was supposed to.\nThe refresh button in the first tab is disappearing when I click the refresh in the second tab (when it is not responding)\n. ",
    "stevechapce": "but i didnt call getSherlockActivity().invalidateOptionsMenu();\nand it only not showing in the first time and in sdk below 11.\nAnyway will have a try on the 4.01 version tonight, thanks\n. ",
    "samlu": "Yes, I am more than happy to debug for fixing this problem.\nAs I mentioned, I tried to dump each iterated tag in loadUiOptionsFromManifest(), but only got manifest, uses-sdk, skin three tags. Let me know what I can do for the next step.\n. ",
    "Juggeli": "The same issue persists also on Sony Xperia GO. Sadly i cant get the phone to work with adb so i can't debug the problem more closely. \n. @iNoles Yes. I think that i've been trying almost everything that i can think of to get adb to list this device. I've installed Sony PC Companion which let the adb to connect my older Xperia phone, but it didn't help on this one. Xperia developer site has adb drivers for other Xperias but not this one. I even tried to use the Xperia P adb drivers by modifying the .inf files hw id's. It let me install the drivers, but adb was still not listing the phone.\n. Yes those were the drivers that i tried with. Xperia Go wasn't supported by those drivers so i modified the .inf file with the correct hardware id's but it was still no go.\n. ",
    "nagoya0": "Is this issue already fixed?\nMy users report similar behavior.\n(Xperia NX - 2.3.7, Xperia acroHD - 2.3.7)\n. Thank you for reply. OK... is there a workaround?\nFor example, set splitActionBarWhenNarrow by code or something...\n. If onMenuOpened is final, an app lose the chance to catch open-event on not only older platform but also newer platform because of being unable to override.\n. ",
    "bepcyc": "I don't see direct usages, but other toString() methods are already implemented with StringBuilder.\nAnyway, I already made a patch ;)\n. ",
    "hasanakyurek": "android 4.0.4 getSupportedActionBar() return null. how to fix this problem?\n. ",
    "SeanPONeil": "getSupportActionBar()**\n. ",
    "andrelrs": "Yes.\n@Override\npublic void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\n    setHasOptionsMenu(true);\n    inflater.inflate(R.menu.menu_split_principal, menu);\n}\nI have a idea: The package compatibility override hasOptionsMenu. \n. ",
    "dirtyspark23": "I don't get an exception when I open a menu item on Jelly Bean. But Im using SherlockActivity... Jelly Bean actually fixed a lot of problems I was having just getting the application to like ActionBarSherlock.\n. ",
    "jemerick": "I am also getting reports of this same issue.  Galaxy Nexus devices running 4.1.  I have double checked that I am using SherlockFragments and SherlockFragmentActivities everywhere.  Also using ActionBarSherlock 4.1.0.\n. ",
    "gako": "On 4.2.1 the exceptions seems to reappear, at least i'm getting it again:\n12-05 12:14:45.205: E/AndroidRuntime(15788): FATAL EXCEPTION: main\n12-05 12:14:45.205: E/AndroidRuntime(15788): java.lang.IllegalStateException: Cannot interact with object designed for temporary instance passing. Make sure you using both SherlockFragmentActivity and SherlockFragment.\n12-05 12:14:45.205: E/AndroidRuntime(15788):    at com.actionbarsherlock.internal.view.menu.MenuItemMule.getItemId(MenuItemMule.java:71)\n12-05 12:14:45.205: E/AndroidRuntime(15788):    at android.app.Activity.onMenuItemSelected(Activity.java:2554)\n12-05 12:14:45.205: E/AndroidRuntime(15788):    at android.support.v4.app.FragmentActivity.onMenuItemSelected(Unknown Source)\n12-05 12:14:45.205: E/AndroidRuntime(15788):    at com.actionbarsherlock.app.SherlockFragmentActivity.onMenuItemSelected(SherlockFragmentActivity.java:288)\n12-05 12:14:45.205: E/AndroidRuntime(15788):    at com.actionbarsherlock.ActionBarSherlock.callbackOptionsItemSelected(ActionBarSherlock.java:586)\n12-05 12:14:45.205: E/AndroidRuntime(15788):    at com.actionbarsherlock.internal.ActionBarSherlockNative.dispatchOptionsItemSelected(ActionBarSherlockNative.java:78)\n12-05 12:14:45.205: E/AndroidRuntime(15788):    at com.actionbarsherlock.app.SherlockFragmentActivity.onMenuItemSelected(SherlockFragmentActivity.java:191)\n12-05 12:14:45.205: E/AndroidRuntime(15788):    at com.android.internal.policy.impl.PhoneWindow.onMenuItemSelected(PhoneWindow.java:980)\n12-05 12:14:45.205: E/AndroidRuntime(15788):    at com.android.internal.view.menu.MenuBuilder.dispatchMenuItemSelected(MenuBuilder.java:735)\n12-05 12:14:45.205: E/AndroidRuntime(15788):    at com.android.internal.view.menu.MenuItemImpl.invoke(MenuItemImpl.java:149)\n12-05 12:14:45.205: E/AndroidRuntime(15788):    at com.android.internal.view.menu.MenuBuilder.performItemAction(MenuBuilder.java:874)\n12-05 12:14:45.205: E/AndroidRuntime(15788):    at com.android.internal.view.menu.MenuPopupHelper.onItemClick(MenuPopupHelper.java:156)\n12-05 12:14:45.205: E/AndroidRuntime(15788):    at android.widget.AdapterView.performItemClick(AdapterView.java:298)\n12-05 12:14:45.205: E/AndroidRuntime(15788):    at android.widget.AbsListView.performItemClick(AbsListView.java:1100)\n12-05 12:14:45.205: E/AndroidRuntime(15788):    at android.widget.AbsListView$PerformClick.run(AbsListView.java:2749)\n12-05 12:14:45.205: E/AndroidRuntime(15788):    at android.widget.AbsListView$1.run(AbsListView.java:3423)\n12-05 12:14:45.205: E/AndroidRuntime(15788):    at android.os.Handler.handleCallback(Handler.java:725)\n12-05 12:14:45.205: E/AndroidRuntime(15788):    at android.os.Handler.dispatchMessage(Handler.java:92)\n12-05 12:14:45.205: E/AndroidRuntime(15788):    at android.os.Looper.loop(Looper.java:137)\n12-05 12:14:45.205: E/AndroidRuntime(15788):    at android.app.ActivityThread.main(ActivityThread.java:5039)\n12-05 12:14:45.205: E/AndroidRuntime(15788):    at java.lang.reflect.Method.invokeNative(Native Method)\n12-05 12:14:45.205: E/AndroidRuntime(15788):    at java.lang.reflect.Method.invoke(Method.java:511)\n12-05 12:14:45.205: E/AndroidRuntime(15788):    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:793)\n12-05 12:14:45.205: E/AndroidRuntime(15788):    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:560)\n12-05 12:14:45.205: E/AndroidRuntime(15788):    at dalvik.system.NativeStart.main(Native Method)\n. ",
    "gandulf": "Thanks you are right. \nJust because I'm having the newest version of ABS in my development version, doesn't mean its also already in the \"old\" produtive one, which i tested. ;-)\n. ",
    "danigarciaalva": "Hi, I have this problem but I'm using a Google Maps compatibility library and I cant fix it, how can I do?\n. It Looks like this, I'm using a based library with Google Maps support that extends from ABS\n. ",
    "peterfortuin": "You have a stacktrace MyMichael?\n. ",
    "grassick": "Emulator 4.0.3 gives exact same crash.\nOn Sun, Jul 1, 2012 at 1:44 PM, Jake Wharton <\nreply@reply.github.com\n\nwrote:\nWhat happens when run on ICS+?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/533#issuecomment-6695444\n. I switched it to some uglier but functional manual adding of handlers to each item and it works. Would it be possible to add the single if statement to make it get the base context? It would prevent other code from mysteriously breaking when the theme is switched, as onclick isn't deprecated.\n\nThanks for the great library! - Clayton\n. Ah, but it works fine when implemented as native 4.0 code (I just tested\nit). It's only when you use Sherlock classes that it crashes in 4.0.\nOn Sun, Jul 1, 2012 at 3:47 PM, Jake Wharton <\nreply@reply.github.com\n\nwrote:\nIt would still throw an exception when running on Android 4.0 and above\nsince we can't control that code. In my opinion, consistency across the\nnative and custom action bar implementations is more important in this case.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/533#issuecomment-6696347\n. \n",
    "dmstocking": "Oh I didn't search closed issues. >.> sorry.\n. ",
    "bencallis": "Nope. I used to but not anymore (after it messed up the tabs). \n. ",
    "MalcolmEvershed": "Thanks for the fast response. I added the setFormat() call to the onCreate and it produced a window that looks better, but seems to use dithering:\nhttp://img515.imageshack.us/img515/9973/absdemofroyorgba8888.png\nI also tried reading getWindow().getAttributes().format and the existing format was -1 (PixelFormat.OPAQUE) on both Froyo and ICS.\nHmm, I'm not sure what's going on. I'll try to debug into NineFrameLayout when it draws the foreground drawable to check the paint.\n. I debugged this further and found that no special paint is being used and the abs__ab_solid_shadow_holo.9.png file seems to be loading properly into memory (i.e. pixels values are the same as the file).\nBut I did notice that NineFrameLayout.draw() is passed a Canvas with mSurfaceFormat = 4. Looking at the Froyo source, 4 seems to refer to HAL_PIXEL_FORMAT_RGB_565 (aka PIXEL_FORMAT_RGB_565). So the Canvas seems to be 16-bit, if I'm interpreting this correctly.\nI'm running this in the Android Emulator and it says here that the Android emulator has a 16-bit LCD \"display\" (though perhaps only when running older versions of Android).\nSo I guess old Android devices really only could display 16-bit color, so I guess the PNG could be to be reworked to alpha blend better when used on a 16-bit display. Argh, this is so annoying that I don't know whether it fits into the scope of ABS. Thoughts?\n. I ran the demos app on the Gingerbread emulator:\nhttp://img825.imageshack.us/img825/1072/absdemogingerbread.png\nThis is pretty much the same result as running under Froyo with an explicit call to setFormat(RGBA_8888) as Jake suggested.\nThis XDA post suggests that Gingerbread made some changes around pixel formats, so perhaps that explains it.\nI don't know about you guys, but I'm thinking to just live with this Froyo behavior and not mess with it further.\n. My guess is that this same issue is responsible for #469.\n. iNoles, when it says \"Ignoring attribute 'actionProviderClass'\", I don't think that implies that the problem is different because of the following:\nThe com.actionbarsherlock.sample.styled app does not specify actionProviderClass, so the error message is incorrect. Why is the error message incorrect? I broke into the debugger when that error message is emitted and the state was consistent with the problem described above (basically, itemActionProviderClassName was \"@16974108\", from being set a few lines above).\nSo basically, that error message is a red herring because actionProviderClass is not actually set in the menu resource. Thanks.\n. ",
    "mcharmas": "Ok. I guess I will do this locally. Thx for your awesome work.\n. ",
    "mecid": "thanks man\n. ",
    "dsample": "Sorry, it was my error, trying to make my app work on earlier versions I didn't realise View wasn't valid in layouts. Would be helpful if the ADT Lint checks would pick that up.\n. ",
    "alvarolb": "ok! thanks!\n. ",
    "Unlogic-dot-se": "I've tested these changes and they indeed solve the problem with tab rotation when the Activity is configured using android:configChanges=\"orientation|keyboardHidden\" in the manifest.\n. Okay, I understand that the fix may have side effects and cannot be merged. The bug however is valid and causes tabs to become unresponsive when orientation changes on Android 2.x (haven't tested 3.x).\nThe native ActionBar tabs on Android 4.x handles the rotation just fine when android:configChanges=\"orientation|keyboardHidden\" is set on the activity.\nEdit: Ignore this comment, I found Jake's reply on the bug here https://github.com/JakeWharton/ActionBarSherlock/issues/279\n. ",
    "Vad1mo": "The resource is not there. This also includes the file android.R. at least in Version 2.2 -> 2.3.3 \nI was wondering if it is possible that this particular device with this particular android version really doesn't have this resource? \n. ",
    "chrisjenx": "I've seen this before on very specific version of android Galaxy Note Running 2.3.6. A few others.. very odd.\n. ",
    "vashisthg": "getting the same exception in samsung galaxy y running on GINGERBREAD.\n. These errors dont happen when I give drawables for all\nresource configurations. So my guess is that there occurs some kind of out\nof memory error when drawing drawables from other configerations, due to\nwhich resources are not inflated.\nOn Jan 7, 2013 3:13 PM, \"imran1664\" notifications@github.com wrote:\n\ni am also facing this issue. Basically i am setting content view in my\nsplash activity onCreate() methed.This exception occur where i am setting\ncontent View but layout exist in my layout folders..\njava.lang.RuntimeException: Unable to start activity\nComponentInfo{com.platinumapps.facedroid/com.platinumapps.activities.Splash_Activity}:\nandroid.content.res.Resources$NotFoundException: Resource ID #0x7f0300cb\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/551#issuecomment-11945724.\n. @imran1664 I got rid of resources not found exception by adding resources\nfor all ldpi, mdpi, hdpi, xhdpi etc.\n\nOn Mon, Jan 7, 2013 at 3:41 PM, imran1664 notifications@github.com wrote:\n\nisth there are some OutOf Memory isuees. How can i overcome this is\n\n\nRegards,\nGaurav Vashisth\nMob. +91-9718024750\n. ",
    "danwms": "I am also seeing this on SMEC devices (Sony Erricson), all other devices are fine. \nCaused by: android.content.res.Resources$NotFoundException: Resource ID #0x7f0c0059\n        at android.content.res.Resources.getValue(Resources.java:896)\n        at android.content.res.Resources.getDrawable(Resources.java:584)\n        at android.widget.AbsListView.setFastScrollThumb(AbsListView.java:794)\n        at android.widget.AbsListView.setFastScrollEnabled(AbsListView.java:740)\n        at android.widget.AbsListView.(AbsListView.java:670)\n        at android.widget.ListView.(ListView.java:167)\n        at android.widget.ListView.(ListView.java:163)\n        ... 26 more\nandroid.content.res.Resources$NotFoundException: Resource ID #0x7f0c0059\n        at android.content.res.Resources.getValue(Resources.java:896)\n        at android.content.res.Resources.getDrawable(Resources.java:584)\n        at android.widget.AbsListView.setFastScrollThumb(AbsListView.java:794)\n        at android.widget.AbsListView.setFastScrollEnabled(AbsListView.java:740)\n        at android.widget.AbsListView.(AbsListView.java:670)\n        at android.widget.ListView.(ListView.java:167)\n        at android.widget.ListView.(ListView.java:163)\n        at java.lang.reflect.Constructor.constructNative(Native Method)\n        at java.lang.reflect.Constructor.newInstance(Constructor.java:415)\n        at android.view.LayoutInflater.createView(LayoutInflater.java:505)\n        at com.android.internal.policy.impl.PhoneLayoutInflater.onCreateView(PhoneLayoutInflater.java:56)\n        at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:568)\n        at android.view.LayoutInflater.rInflate(LayoutInflater.java:623)\n        at android.view.LayoutInflater.rInflate(LayoutInflater.java:626)\n        at android.view.LayoutInflater.inflate(LayoutInflater.java:408)\n        at android.view.LayoutInflater.inflate(LayoutInflater.java:320)\n        at android.view.LayoutInflater.inflate(LayoutInflater.java:276)\n        at com.actionbarsherlock.internal.ActionBarSherlockCompat.setContentView(ActionBarSherlockCompat.java:857)\n        at com.actionbarsherlock.app.SherlockFragmentActivity.setContentView(SherlockFragmentActivity.java:251)\n        at uk.co.danwms.lfchistory.A_MainMenu.onCreate(A_MainMenu.java:65)\n        at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1047)\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1623)\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:1675)\n        at android.app.ActivityThread.access$1500(ActivityThread.java:121)\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:943)\n        at android.os.Handler.dispatchMessage(Handler.java:99)\n        at android.os.Looper.loop(Looper.java:130)\n        at android.app.ActivityThread.main(ActivityThread.java:3701)\n        at java.lang.reflect.Method.invokeNative(Native Method)\n        at java.lang.reflect.Method.invoke(Method.java:507)\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:866)\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:624)\n        at dalvik.system.NativeStart.main(Native Method)\n. I am interested to see if a solution is possible for this. \nI worked out that it was the fast scroll as well eventually. In order to prevent me from getting hundreds of crash reports a day I have rolled out an update without fast scroll enabled. Not ideal, I know but it has stopped the problem until I can find a fix. \n. Maybe it would be possible to leave the fast scroll enabled and then programatically disable it if the manufacturer is SMEC\n. I have published a post detailing my situation and how I put a fix in, I hope you find it helpful. \nhttp://www.danwms.co.uk/xperiaandsherlock/\n. I have done what I did as I needed a very quick work around as I was having hundreds of error alert emails filling up my inbox . My plan going forward would be to put a more final solution in place. \n. ",
    "SteveMil": "Ditto that.  This crash just appeared in my last release and I am able to reproduce with my device anywhere account.  As far as I can tell, 0x7f0d0059 is the resource ID that SEMC devices use for the fast scroll thumb drawable.  I looked at my auto-generated R.java file (buried down in the gen folder) and 0x7f0d0059 is the same resource ID that my \"android:actionBarStyle\" style uses from my theme.\nMy guess is that when the ListView loads, it tries to load its drawable at 0x7f0d0059 and ends up getting my style instead.  I see this in logcat, which sort of backs up the theory...\nRequesting resource 0x7f0d0059 failed because it is complex\n...and then I see the same stack trace you posted.  I looked at my crash logs, and every single one of them is a SEMC device...\nLT15a  Xperia arc\nLT15i  Xperia arc\nLT18a  Xperia arc S\nLT18i  Xperia arc S\nLT22i  Xperia P\nLT26i  Xperia S\nMK16a  Xperia Pro\nMK16i  Xperia Pro\nMT11a  Xperia neo V\nMT11i  Xperia neo V\nMT15a  Xperia neo\nMT15i  Xperia neo\nMT27i  Xperia sola\nR800i  Xperia PLAY\nSK17a  Xperia mini pro\nSK17i  Xperia mini pro\nST15a  Xperia mini\nST15i  Xperia mini\nST18i  Xperia ray\nST25a  Xperia U\nST25i  Xperia U\nST27a  Xperia go\nST27i  Xperia go\nWT19a  Live with Walkman\nWT19i  Live with Walkman\nX10a   Xperia X10\nX10i   Xperia X10\nStill working on a solution...\n. Thanks all.  What @iNoles said is correct and seems obvious now that I've done it.  You could probably even stick it in values-v11 since that is where the style is defined and pretty much guaranteed to not conflict.  If you are using ABS (like I am), v14 is fine as ABS only uses OS ActionBar starting with v14.\nAlso, anyone who hits this problem should move all android:xxx action bar styles to v11 or later.\n. ",
    "ming13": "I run testing project on Jelly Bean emulator and tabs are still on top (I changed targetSdkVersion to 16 if this matters). Is this a framework bug and should I post it upstream?\n. I checked this issue with a pure-Android realization of the action bar and it seems like a platform issue even in the Jelly Bean. Strange issue BTW. Let me know if you\u2019ll check it and it would be a really platform problem.\n. I have opened an issue at the Android bug tracker but didn\u2019t get any response yet :-(\n. ",
    "goncalossilva": "I'm an idiot. One of the menu items had its drawables exclusively in drawable-X-v9/ and drawable-X-v11/, causing the crash on 2.2. Sorry!\n. Works for me too. Thanks!\n. Yes, it was a bug in ICS which was later fixed.\nWhy can't you apply the JB fix to ABS? I mean, right now ABS is consistent with ICS (buggy). After applying the patch it would be consistent with JB (fixed). What's the catch?\n. :+1:\n. ",
    "ykrapiva": "Hi, \nI need to report I've found the solution but I still don't know why this is happening:\nThe problem root was in AndroidManifest.xml, in the section where TestActivity is declared. Since I was copying this declaration block from my other declarations it happened to leak the following attribute:\nandroid:configChanges=\"locale\"\nSeems not important but when I remove this attribute from TestActivity declaration everything becomes working properly. \n. What do you mean ? Is this a known issue ?\n. ",
    "lexer": "Im using v7 gridlayout support as maven dependency. So I think that Sherlock needs to have it in own dependencies to work correct, but I cannot add it.\n. No. I have installed it using maven android sdk deployer: https://github.com/mosabua/maven-android-sdk-deployer/\nI think the problem is not related directly to this lib.\nI've got my own custom control that is included into primary android project and I also get inflate error on it.\nIm not big expert of maven, but it seems that during inflate process it only see direct dependencies of sherlock library, but my own control and gridlayout are not there.\n. @rfgamaral You can also disable this warning with this line as workaround till next release\n-dontwarn com.actionbarsherlock.internal.**\n. Here is link to google issues tracker: https://code.google.com/p/android/issues/detail?id=58280\n. ",
    "f4bo": "why this issue have been closed? I'm asking since it is already there in the ABS 4.2.0 : you put some test in a collapsible SearchView, you rotate the phone and then the text has gone and this is clearly an issue. The problem is in the SearchView class at line 1289 in the onActionViewExpanded method where the text is set to blank, while should have not. If you comment that line, the issue disappear. My only concern is: was there a real purpose to put such a command there?\n. ",
    "Hemanshu": "This occurs when I'm displaying something on a fragment using getSupportFragmentManager(); \n. Got it, I was detaching the fragment on onPause, How would that affect ABS's behavior ? \n. ",
    "larham": "Duplicated.  Not clear the cause, but this code does not detach during onPause().\nSEVERE: uncaught: \nThrowable occurred: java.lang.NullPointerException\n    at android.support.v4.app._ActionBarSherlockTrojanHorse.onCreatePanelMenu(SourceFile:52)\n    at com.actionbarsherlock.ActionBarSherlock.callbackCreateOptionsMenu(SourceFile:556)\n    at com.actionbarsherlock.internal.ActionBarSherlockCompat.preparePanel(SourceFile:483)\n    at com.actionbarsherlock.internal.ActionBarSherlockCompat.dispatchInvalidateOptionsMenu(SourceFile:273)\n    at com.actionbarsherlock.internal.ActionBarSherlockCompat$1.run(SourceFile:988)\n    at android.os.Handler.handleCallback(Handler.java:587)\n    at android.os.Handler.dispatchMessage(Handler.java:92)\n    at android.os.Looper.loop(Looper.java:130)\n    at android.app.ActivityThread.main(ActivityThread.java:3859)\n    at java.lang.reflect.Method.invokeNative(Native Method)\n    at java.lang.reflect.Method.invoke(Method.java:507)\n    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:839)\n    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:597)\n    at dalvik.system.NativeStart.main(Native Method)\nsys: \nandroid.version: 2.3.6\nbrand/model: MOTO/MB865\n. line 51 can be made to protect against NPE:\nif (mFragments.mActive != null && mFragments.mAdded != null) {\n. Similar problem, similar patch in onPreparePanel, need protection for mFragments.added:\nif (mFragments.mActive != null && mFragments.mAdded != null) {\nSEVERE: problem: \nThrowable occurred: java.lang.NullPointerException\n    at android.support.v4.app._ActionBarSherlockTrojanHorse.onPreparePanel(SourceFile:96)\n    at com.actionbarsherlock.ActionBarSherlock.callbackPrepareOptionsMenu(SourceFile:577)\n    at com.actionbarsherlock.internal.ActionBarSherlockNative.dispatchPrepareOptionsMenu(SourceFile:69)\n    at com.actionbarsherlock.app.SherlockFragmentActivity.onPreparePanel(SourceFile:174)\n    at com.android.internal.policy.impl.PhoneWindow.preparePanel(PhoneWindow.java:421)\n    at com.android.internal.policy.impl.PhoneWindow.invalidatePanelMenu(PhoneWindow.java:747)\n    at com.android.internal.policy.impl.PhoneWindow.restorePanelState(PhoneWindow.java:1677)\n    at com.android.internal.policy.impl.PhoneWindow.restoreHierarchyState(PhoneWindow.java:1627)\n    at android.app.Activity.onRestoreInstanceState(Activity.java:928)\n    at com.thuuz.gtv.activity.game_page.GamePageActivity.onRestoreInstanceState(SourceFile:228)\n    at android.app.Activity.performRestoreInstanceState(Activity.java:900)\n    at android.app.Instrumentation.callActivityOnRestoreInstanceState(Instrumentation.java:1130)\n    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2037)\n    at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2084)\n    at android.app.ActivityThread.access$600(ActivityThread.java:130)\n    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1195)\n    at android.os.Handler.dispatchMessage(Handler.java:99)\n    at android.os.Looper.loop(Looper.java:137)\n    at android.app.ActivityThread.main(ActivityThread.java:4745)\n    at java.lang.reflect.Method.invokeNative(Native Method)\n    at java.lang.reflect.Method.invoke(Method.java:511)\n    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:786)\n    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:553)\n    at dalvik.system.NativeStart.main(Native Method)\nsys: \nandroid.version: 4.1.1\nbrand/model: google/Galaxy Nexus\n. yes, but only on galaxy tab 10 running Android 3.2, and then as warning-level logging from a library layer.  I think it was the 3.1 -> 3.2 OS update that triggered it.  I just updated firmware (3x in a row!) to 4.x and that warning is gone.\n. Have you considered adding icons with the names given? IF you are lucky, it won't use them, just be satisfied it can find them.\nFor me, it caused no issues.  Given that firmware updates both caused and fixed the problem, I'd say it was in the Samsung layer.\n. ",
    "aried3r": "I'm also very interested in this ticket. Two projects of ours now fail tests on our CI server because of this. Will this be resolved in 4.2.0?\n. ",
    "lemval": "Apparently it is also the case when using the default Theme without overflow. Clicking an icon in the bar on the second screen in the above scenario does not activate the menu item. Workaround as above.\nI'll try to strip down until I have a bare app showing this behavior (and share the code).\n. Ok. I have a very bare project now. With APK. Shows on a Samsung Galaxy S (i9100) using 2.3.6. ABS version 90, VPI version 50.\nProject sent via gmail.\nNo problems on a HTC One 4.0.3.\nNo difference between support lib v13 and v4.\nIt seems that android.view.View$PerformClick does not occur before the swipe back/menu button has been pressed.\nThe view in question is an android.widget.ImageButton, supplied to the ActionMenuItemView:onClick method.\nInputReader reports dispatchTouch::touch event's action is 0 (followed by 1). So there is some kind of event triggered.\n. Why close this issue?\nI tried the newest version and it still has this problem, regardless of the absence of ForceOverflow Theme....\n. True, so I understand your action ;) But unfortunately the second comment mentions it is not only the case in the ForceOverflow. Shall I resend the test project? Or would you like to dismiss it, since it does not occur on 4.x versions of Android? :) Shall I test it for 3.x ?\n. Reopened as #806. Sorry for not adding a test case to the known-bugs project.\n. ",
    "rgladwell": "Thanks for that @JakeWharton \n. @JakeWharton is there a reason you didn't also merge commit 21b8777?\n. @JakeWharton no, not required. i can create a new pull request that removes all the redundant declarations in the child poms?\n. Could we do this sooner if we use the Maven relocation feature?\nhttp://maven.apache.org/guides/mini/guide-relocation.html\nThis allows builds to work with the old \"library\" artifactId but gives a warning that the project has moved in the Maven namespace.\nPlease see pull request #632\n. +1\n. Sorry, wrong branch.\n. Fair enough, when do you think you'll be releasing 4.2?\n. Thanks for the feedback.\n. ",
    "mrmaffen": "Thanks a lot dude :-) \n. ",
    "pyricau": "Yes sure, thanks :)\n. I was wondering why the build.xml was in .gitignore, now I know :) .\nI understand your decision, and I won't try to change your mind, but let me just explain my thoughts:\nRunning android update project -p library from the project build.xml will obviously work. However, it puts the effort of writing the extra Ant conf on the user side, for each new project. On the other side, the build.xml is merely an empty shell, with no maintenance required (it's an import of the sdk build.xml).\nAnt is certainly a broken build system, but sadly it's the one maintained by the Android team, and therefore it's widely used. I can't wait for the new Gradle build system :) .\nMaybe updating usage.html  with the extra Ant conf to automatically do the android update project -p library would help Ant users without needing any Ant file mess on the ActionBarSherlock repo ?\n. ",
    "chalup": "The previous version is r7 and the change list of r8 and r9 looks quite useful, for example \"Fixed numerous bugs for ViewPager\" (full list on http://developer.android.com/tools/extras/support-library.html).\nIf the r10 is in fact screwed up, let's bump the support package to r9 (I'll update this pull request as soon as I find the jar).\n. ",
    "PAStheLoD": "Hello, and sorry for digging up these bones, but I'm rather confused about ... why include the support-v4 library at all, if it's referenced in the POM? On the other hand, if you include it, why keep it to the same revision as mvn-central has? Or, maybe for the ant-only users? But they already have to do a bit of android update lib-project.\n. ",
    "fegabe": "I have missed update demos as well and I'm not sure if it's working properly with the updated revision. I'm gonna close and check better before. Sorry!\n. ",
    "peplin": "I think this is mostly a limitation with m2e-android, but I'm still having problems with this .jar file when using the m2e-android plugin. The problem is that the nativeLibrariesDirectory doesn't stop the .jar in libs from being added to the \"Android Dependencies\" section of the ABS project. This eventually causes an \"already added\" exception because both android-support-v4.jar (from libs) and support-v4-r7.jar from the pom.xml are added.\nI'm going to file an issue in m2e-android and see what they think, but if anyone else runs into this issue, the workaround is to just delete the .jar from actionbarsherlock/library/libs.\n. That doesn't work, unfortunately. I changed the dependency to:\n<dependency>                                                             \n            <groupId>com.actionbarsherlock</groupId>                             \n            <artifactId>actionbarsherlock</artifactId>                           \n            <version>4.2.0</version>                                             \n            <type>apklib</type>                                                  \n            <exclusions>                                                         \n                <exclusion>                                                      \n                    <groupId>junit</groupId>                                     \n                    <artifactId>junit</artifactId>                               \n                </exclusion>                                                                                                                                                                                                                   \n            </exclusions>                                                        \n        </dependency>\nbut this isn't picked up in Eclipse even after refreshing and updating the Maven dependencies. I think this is integrally related to JakeWharton/ActionBarSherlock#8 because the junit-4.10.jar dependency actually shows up under \"Android Dependencies\" and if I unlink my project and ABS in Eclipse, junit goes away.\n. I'm curious to know if anyone else is having this issue. I would be shocked if I was the only one, unless I'm just doing something wrong. Anyone using ABS with Eclipse, Maven and m2e-android successfully?\n. The root cause is definitely a problem with Android library projects and the m2e-android plugin, it's nothing in ABS. This could be closed because the only fix I'm proposing at this point is dropping the junit version back to 4.8 (which works fine in my situation) or bumping it up to 4.11 as soon as that is released (see KentBeck/junit#332). \nWe still haven't heard from anyone using Android, Eclipse, Maven and the m2e-android plugin to integrate the three projects. I honestly didn't think this was such an odd configuration, that's the only reason for my continued followup here. Thanks!\n. Ah, nevermind, I just confirmed it's actually still broken with junit 4.11-beta-1. This is clearly a limitation with m2e-android, so I'll leave ABS out of it. Thanks for the input, everyone.\n. ",
    "rayomvox": "Wow, fast but not a solution.  I love what you've done and I'm trying help but it works fine on ICS version where the calls are just wrapped to native code.  Clearly it's doable. \n. ",
    "cliu903": "I also noticed that in follow code. but also no work.\n\n        <item name=\"searchViewSearchIcon\">@drawable/icon_search</item>\n    \nHow to fixed ?\n. I means the icon always show \"  icon :  ic_menu_search \", even though change to other image. \n\n. Can override this icon ?\nI try to using searchViewSearchIcon to override parent style. But it's also not work. \n<style name=\"myTheme\" parent=\"Theme.Sherlock\">\n        <item name=\"searchViewSearchIcon\">@drawable/icon_search</item>\n</style>\n. ",
    "dmarcato": "Ok thanks!\n. ",
    "thunderousNinja": "Hey @JakeWharton, is this fixed on master branch yet? Or is it still on devo?\n. @JakeWharton thanks man :+1:\n. Thanks for the quick response. Why was it working on older builds which had the divider as well?\n. For a quick fix I subtracted \"n-1\" (n being the number of tabs) in the useLargestChildHorizontal() call. Thought I'd share :+1: \n. @JakeWharton Even if I put my own custom 1px divider?\n. ",
    "mandrachek": "Would this be something in my code, or in ABS? The stack trace doesn't even tell me the activity that it was in at the time.\n. import com.actionbarsherlock.view.Window;\n. The sample (https://github.com/JakeWharton/ActionBarSherlock/blob/master/actionbarsherlock-samples/demos/src/com/actionbarsherlock/sample/demos/IndeterminateProgress.java) is a SherlockActivity, not a SherlockFragmentActivity.  I'm also overriding setContentView(), rather than doing it in onCreate().  I will try moving it to onCreate() later this evening.\n. DOH.\nset Support ProgressBarIndeterminateVisibility(false); \n. ",
    "rburgst": "Have the same issue. I can produce this issue quite easily with monkey test. The log tells me that the monkey manages to click an options menu multiple times and then there is a race condition on how fast the new activity comes up. \nIn my case mMenu == null.\n```\n@Override\npublic boolean dispatchOptionsItemSelected(android.view.MenuItem item) {\n    if (DEBUG) Log.d(TAG, \"[dispatchOptionsItemSelected] item: \" + item.getTitleCondensed());\nfinal boolean result = callbackOptionsItemSelected(mMenu.findItem(item));\nif (DEBUG) Log.d(TAG, \"[dispatchOptionsItemSelected] returning \" + result);\nreturn result;\n\n}\n```\nFrom the log I see that \n[dispatchCreateOptionsMenu] menu: com.android.internal.view.menu.MenuBuilder@4195b3f0  => ACTIVITY A\n[dispatchCreateOptionsMenu] returning true => ACTIVITY A\n[dispatchPrepareOptionsMenu] menu: com.android.internal.view.menu.MenuBuilder@4195b3f0, => ACTIVITY A \n[dispatchPrepareOptionsMenu] returning true, => ACTIVITY A\n[dispatchOptionsItemSelected] item: Menu Option, => ACTIVITY A\n[dispatchOptionsItemSelected] returning true => ACTIVITY A\n[dispatchOptionsItemSelected] item: Debug, => ACTIVITY A\n[dispatchOptionsItemSelected] returning false => ACTIVITY A\n[dispatchOptionsItemSelected] item: null, => ACTIVITY B => WTF??\nI am also not entirely sure why item == null in that case. Havent analyzed further.\nProposed fix\n```\n@Override\npublic boolean dispatchOptionsItemSelected(android.view.MenuItem item) {\n    if (DEBUG) Log.d(TAG, \"[dispatchOptionsItemSelected] item: \" + item.getTitleCondensed() + \", \" + mActivity);\n// RBUR: fix for bug found by monkey test\nif (mMenu == null || item == null) {\n    if (DEBUG) {\n        Log.e(TAG, \"[dispatchOptionsItemSelected] discarded stray selected event: \" + item\n                + \" for activity \" + mActivity);\n    }\n        return false;\n}\nfinal boolean result = callbackOptionsItemSelected(mMenu.findItem(item));\nif (DEBUG) Log.d(TAG, \"[dispatchOptionsItemSelected] returning \" + result);\nreturn result;\n\n}\n```\n. ",
    "JulienDev": "I also have this issue with Monkey Test\n. I made some tests and I found this is an IcsListPopupWindow issue, not a theme one. Indeed, using ListPopupWindow there is no problem. On the following screenshots, you can also notice different look & feel. The first one use ListPopupWindow, second one use IcsListPopupWindow.\n\n\n. ",
    "ngdinhtoan": "I can not click on Share item.\n. Could you also fix suggestion behavior when user click on search view?\nCurrently, when we click on search view, it will hide suggestion list view. When we click again, it don't show suggestion again.\nIt should always show suggestion list when user click on search view (even it's focused) like native search view.\nCode:\nCall onQueryRefine(mQueryTextView.getText()); on click on mQueryTextView event.\n(I'm not sure it is the best way, but atleast it works for me)\n. ",
    "bondjpf": "Have the same problem as soon as I add android:actionProviderClass=\"com.actionbarsherlock.widget.ShareActionProvider\"  to my xml file I get InflateException.\nIt happens on any theme.\n. ",
    "paulnicholson": "I am also experiencing this problem on ICS. Switching themes does not seem to make a difference and getSupportActionBar().getThemedContext() does not help.\n. I was able to get this working by setting the theme back to the base Theme.Sherlock theme so it seems that something is missing in the Holo.Theme.Sherlock theme.\n. ",
    "eduardolagares": "I change my theme to android:theme=\"@style/Theme.Sherlock\" and it works, but i need use a custom theme. Does anyone have another solution? My custom theme extends Theme.Sherlock.Light.DarkActionBar.\n. ",
    "raghunandantg": "I am getting improper spacing in actionbar and i also want to remove title bar, as you see in this link i have a screenshot http://imagebin.org/227520. Do i have any special theme which will hide my window title in actionbarsherlock?\n. ",
    "notnil": "The difference was on Android 2.3.\n. Before Addition:\n\nAfter Addition:\n\n. K.  I am just using it in mine so I figured I'd see if it would be useful to others.\n. ",
    "crossle": "3Q\n. If user abs 4.2,  how can I implement the ForceOverflow on pre-HC devices\n. I resolved ..the Class implements ActionBar.TabListener is OK, before I used inner class ,It's no.!!!\n. the problem can't resolve? it's occur agagin?\n. I found if the first in the portrait the ActionTab can click,but change the oritation to Landscape, the ActionTab can't click.. And vice versa?\n. @iNoles\njava\n public class FileExplorerActivity extends FragmentActivity {\n }\n. @iNoles  It's still don't work ..... after contentView\n. @JakeWharton   Can you help me?\n. ",
    "Ganster41": "Sorry, I novice on github, but what's wrong?\n. I don't understand what it want from me. I replaced tabs with spaces, but still \"build failure\". Locally library compiles without any error with my changes.\nMay be I need to create new pull request with all changes in one commit?\n. Thanks for help!\n. Oh, it's windows CR/LF :(\n. If I remember correct, dropDownSelector style attribute can be used to define drawable, displayed as item background, when it selected by arrow keys. It value ignored by IcsSpinner, but works in real Holo Spinner.\ndropDownHorizontalOffset ignored for now too.\nWhen I push this pool request, I develop custom style for spinner, using IcsSpinner from ABS. And it looked better with little bigger margin from left of main element.\n. You need to set background to all ActionBar? Right way to do this  - create custom theme for your activity.\nRead this: http://actionbarsherlock.com/theming.html\n. Look at this sample:\nhttps://github.com/JakeWharton/ActionBarSherlock/blob/master/samples/demos/src/com/actionbarsherlock/sample/demos/FeatureToggles.java\nAnd this method working too:\nhttp://developer.android.com/reference/android/app/ActionBar.html#setDisplayOptions(int)\nJust set ActionBar options as you need in Activity's onCreate method, or any other place.\n. ",
    "codestream": "I've provided layout for activity and it works on 2.3.3. Maybe it works too on 2.3.5 and 2.3.6 because of same API level\n. ",
    "KennyGoers": "As long as there are a number of eyes on this topic, does ActionbarSherlock\nexpose the methods necessary to show a menu in this fashion or is this\nsomething that might be in 4.3?  I essentially have the same problem with\nthe 4.2 implementation.\nThanks,\nKenny.\nOn Tue, Oct 9, 2012 at 1:04 PM, Jake Wharton notifications@github.comwrote:\n\nGreat link @DHuckaby https://github.com/DHuckaby, that is exactly the\nroute I was going to take.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/627#issuecomment-9272488.\n. I understood that it doesn't do it today, I was more wondering/hoping that\nthere might be a way of getting/popping up a themed menu from an exposed\nmethod to make this implementation easier so as to know where to place my\nefforts.\n\nThanks for the quick response.\nOn Tue, Oct 9, 2012 at 1:17 PM, Jake Wharton notifications@github.comwrote:\n\nThis is Android functionality not ABS. ABS is going to implement this as\nthe default for pre-HC in future versions.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/627#issuecomment-9272946.\n. \n",
    "semaphore3000": "Sorry for asking again about the status of the custom-menu branch: Is the merge scheduled for the release of version 4.4? I really would appreciate that.\n. ",
    "fernandocamargoti": "Are there any news about this issue?\n. ",
    "VAdaihiep": "@hrk Thanks, your snippet works fine!\n. ",
    "miroslavign": "Hmm, it's a bit hard to extract what's relevant only for this purpose.\nI am using ABS 4 and a ViewPager for content. \nWill try to describe it with sample images\nThe first one is when it does not set the subtitle\nhttp://imageshack.us/a/img26/9480/device20120923234426.png\nand if I swipe the viewpager to the next page (and back) it gets \nhttp://imageshack.us/a/img528/1036/device20120923234843.png\nwhich is the correct one\n. OK then, will try some workaround.\nThanks for the time spent investigating.\n. ",
    "eric-taix": "Yes sorry! Here is a snippet of my code\njava\n    /**\n     * This method aims to update the tab's title according to the number of comments\n     */\n    private void updateNotesTabTitle(String text) {\n        String text = getText(R.string.notes).toString();\n        final SpannableStringBuilder sb = new SpannableStringBuilder(text);\n        // If there's at least one comment\n        if (currentClip.comments != null && currentClip.comments.data != null && !currentClip.comments.data.isEmpty()) {\n            sb.append(\"    C \");\n            sb.append(\"\" + currentClip.comments.data.size());\n            // The comment icon\n            Drawable d = getResources().getDrawable(R.drawable.ic_comment_tab);\n            d.setBounds(0, 0, d.getIntrinsicWidth(), d.getIntrinsicHeight());\n            ImageSpan span = new ImageSpan(d, ImageSpan.ALIGN_BASELINE);\n            sb.setSpan(span, text.length() + 4, text.length() + 5, Spannable.SPAN_INCLUSIVE_EXCLUSIVE);\n        }\n        getSupportActionBar().getTabAt(1).setCustomView(getTabView(sb));\n    }\nIf you call this method twice (or more), you will see 2 views in the tab's title\nNote: the getTabView returns a View according to the current state of my model (most of time it's a TextView, but it can another kind of view). \n. ",
    "RobertoArtiles": "If you make getSupportActionBar().setIcon(getResources().getDrawable(R.drawable.some_selector))\nthen it will change its state only in native implementation but not in abs.\n. Jake, are you sure?\nWith this piece of code it works on ICS.\n```\npublic class MainActivity extends FragmentActivity {\n@Override\npublic void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n\n    ActionBar actionBar = getActionBar();\n    actionBar.setHomeButtonEnabled(true);\n    actionBar.setIcon(R.drawable.menu_icon_selector);\n}\n\n}\n```\nAnd this piece too (because it invokes native methods on ICS) but on Android 2.3.3 selector doesn't work:\n```\npublic class MainActivity extends SherlockFragmentActivity {\n@Override\npublic void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n\n    ActionBar actionBar = getSupportActionBar();\n    actionBar.setHomeButtonEnabled(true);\n    actionBar.setIcon(R.drawable.menu_icon_selector);\n}\n\n}\n```\n. Oh, I finally understood. I've tested it on Android 4.0.3 and on Android 4.1. On 4.1 it works but on Android 4.0.3 doesn't.\n. ",
    "dmostert": "I've found the following (http://tools.android.com/download/adt-21-preview)\nThere's a new flag to force \"jumbo mode\" for dex which allows a larger number of strings in the dex files; set dex.force.jumbo=true in project.properties\nThis seems to work\n. ",
    "khobaib": "@dmostert solution seems to work. Thank you.\n. ",
    "frmdstryr": "@dmostert your solution worked, thanks!\n. ",
    "abchyw": "Thanks for your prompt reply.\nAside from exit stuff, when RuntimeException occurs, the app doesn't crash.\nI know this problem sounds wired.\nBut could you please try throwing a RutimeException in the ABS sample( not at the root Activity ), the problem does happen. \n. ",
    "petrnohejl": "Yes, I did. On Jelly Bean, it works fine.\n. I don't.\n. ",
    "krisread": "Get this on Android 2.3 works fine on Honeycomb and up.\n. ",
    "kkocel": "It can have something in common with Spinner in Action Bar. Do You have any in Your Action Bar?\n. @JakeWharton So what is exact fix for that issue? I can see no fix for it in master or in dev branch....\nBeside the fact that it not only occurs on monkey but also in the wild.\n. ",
    "Kuitsi": "I get similar stack trace when screen orientation changes and there are Fragments in ViewPager and those Fragments contains submenus in ActionBar. I have open question with sample repo on StackOverflow: http://stackoverflow.com/q/13473165/262462\n. ",
    "just-radovan": "I just met exactly this bug in code. It was caused by inflating Menu in Activity and accessing (searching for MenuItems) it in Fragment. It's probably caused because in some situations (eg. screen rotation) is Fragment re-created faster than Activity and after such event it was accessing Menu not yet inflated.\n. ",
    "LulaV14": "How did you fix it :S?\n. ",
    "flipchen": "I seem to still have this bug. Only comes up with 2.3.x versions though.\nOut of curiosity I switched to the dev branch and tried to get it working with it, but still no chance.\n. ",
    "VeeruPV": "That worked pretty well - sorted the problem. Thanks a lot for pointing me in the right direction.\nSome quick quesiton, \nhow to remove the left arrow next to the icon?\nHow can i remove the icon itself for some activities/fragments?\n. ",
    "ErNaveen": "i have some problem in anctin bar\n\nnot coming Icon \n. ",
    "rakesh-barik": "any work around on this issue ? I am also facing the same problem with id/menu_refresh. I have not used it in anywhere else in my code.\n. ",
    "moallemi": "would you please help me with this: http://stackoverflow.com/questions/12757094/how-to-change-actionbarsherlock-menu-item-font-face-when-using-custom-theme-for\nI explained the problem in more details\nthanks\n. @imminent  @JakeWharton Thank you for your tip. I forgot to add the \nandroid:supportsRtl\nin the manifest file. now this is the result:\n\n. ",
    "felipearimateia": "Error\n02-14 14:55:54.625: E/AndroidRuntime(17743): FATAL EXCEPTION: main\n02-14 14:55:54.625: E/AndroidRuntime(17743): java.lang.IllegalStateException: A factory has already been set on this LayoutInflater\n02-14 14:55:54.625: E/AndroidRuntime(17743):    at android.view.LayoutInflater.setFactory(LayoutInflater.java:277)\n02-14 14:55:54.625: E/AndroidRuntime(17743):    at br.com.aorta.radioskol.ui.HomeActivity.onCreateOptionsMenu(HomeActivity.java:132)\n02-14 14:55:54.625: E/AndroidRuntime(17743):    at android.support.v4.app.Watson.onCreatePanelMenu(Watson.java:45)\n02-14 14:55:54.625: E/AndroidRuntime(17743):    at com.actionbarsherlock.ActionBarSherlock.callbackCreateOptionsMenu(ActionBarSherlock.java:559)\n02-14 14:55:54.625: E/AndroidRuntime(17743):    at com.actionbarsherlock.internal.ActionBarSherlockNative.dispatchCreateOptionsMenu(ActionBarSherlockNative.java:60)\n02-14 14:55:54.625: E/AndroidRuntime(17743):    at com.actionbarsherlock.app.SherlockFragmentActivity.onCreatePanelMenu(SherlockFragmentActivity.java:165)\n02-14 14:55:54.625: E/AndroidRuntime(17743):    at com.android.internal.policy.impl.PhoneWindow.preparePanel(PhoneWindow.java:445)\n02-14 14:55:54.625: E/AndroidRuntime(17743):    at com.android.internal.policy.impl.PhoneWindow.invalidatePanelMenu(PhoneWindow.java:819)\n02-14 14:55:54.625: E/AndroidRuntime(17743):    at com.android.internal.policy.impl.PhoneWindow$1.run(PhoneWindow.java:3148)\n02-14 14:55:54.625: E/AndroidRuntime(17743):    at android.os.Handler.handleCallback(Handler.java:615)\n02-14 14:55:54.625: E/AndroidRuntime(17743):    at android.os.Handler.dispatchMessage(Handler.java:92)\n02-14 14:55:54.625: E/AndroidRuntime(17743):    at android.os.Looper.loop(Looper.java:137)\n02-14 14:55:54.625: E/AndroidRuntime(17743):    at android.app.ActivityThread.main(ActivityThread.java:4898)\n02-14 14:55:54.625: E/AndroidRuntime(17743):    at java.lang.reflect.Method.invokeNative(Native Method)\n02-14 14:55:54.625: E/AndroidRuntime(17743):    at java.lang.reflect.Method.invoke(Method.java:511)\n02-14 14:55:54.625: E/AndroidRuntime(17743):    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1006)\n02-14 14:55:54.625: E/AndroidRuntime(17743):    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:773)\n02-14 14:55:54.625: E/AndroidRuntime(17743):    at dalvik.system.NativeStart.main(Native Method)\n. ",
    "mircobabini": "No solutions?\n. ",
    "NilaySheth": "Anyone got any solutions for this yet ??\n. ",
    "rfgamaral": "I debugged this a little bit further and here's what I've found:\nThe dispatchKeyEvent is the method responsible for handling key presses, like the back button. When running Android 4.0.4, this method doesn't get called when I press the back button to hide the keyboard, but does get called in the next back button press to go back. However, when running Android 2.1 (and maybe other versions), this method does get called when I press the back button to hide the keyboard and to go back.\n. Nice workaround @niqo01.\nI've looked at ABS code and it seems that BuildConfig.DEBUG is only being used once. All other debug checking is using ActionBarSherlock.DEBUG. So it should be just a quick replace (and remove the BuildConfig import of course) to fix it.\n. ",
    "gmazzo": "I'm having a similar issue on Android 2.3.3. I've an activity with a AutoCompleteTextView, when I hit the back button the soft keyboard is hidden but also the activity gets finished. So, no fix or workaround is possible?\n. ",
    "thierryd": "Ah, you changed the artifactId from \"library\" to \"actionbarsherlock\". My mistake. ;)\n. ",
    "Richie97": "I'm having the same issue, anyone figure out what was going on here? \n. ",
    "PeterRinc": "The same issue here. Using ABS 4.2.0 on GB (2.3.3) and got NullPointerException too.\nSteps to reproduce:\n- have activity with 3 tabs\n- be on 1st tab\n- press power button to turn screen off\n- press power button to turn screen on\n- screen shows 1st tab\n- select 2nd tab (tab fragment has collapseActionView menu item)\n- crash...\nStacktrace:\nFATAL EXCEPTION: main\njava.lang.NullPointerException\n    at android.view.View.dispatchRestoreInstanceState(View.java:6273)\n    at android.view.ViewGroup.dispatchRestoreInstanceState(ViewGroup.java:1211)\n    at android.view.View.restoreHierarchyState(View.java:6257)\n    at com.actionbarsherlock.internal.view.menu.MenuBuilder.restoreActionViewStates(MenuBuilder.java:361)\n    at com.actionbarsherlock.internal.ActionBarSherlockCompat.preparePanel(ActionBarSherlockCompat.java:503)\n    at com.actionbarsherlock.internal.ActionBarSherlockCompat.dispatchInvalidateOptionsMenu(ActionBarSherlockCompat.java:272)\n    at com.actionbarsherlock.app.SherlockFragmentActivity.invalidateOptionsMenu(SherlockFragmentActivity.java:150)\n    at com.actionbarsherlock.app.SherlockFragmentActivity.supportInvalidateOptionsMenu(SherlockFragmentActivity.java:156)\n    at android.support.v4.app.Fragment.setHasOptionsMenu(Fragment.java:708)\n    at com.spica.asm.ui.TabLocationsFragment.onActivityCreated(TabLocationsFragment.java:51)\n    at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:891)\n    at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1080)\n    at android.support.v4.app.BackStackRecord.run(BackStackRecord.java:622)\n    at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1416)\n    at android.support.v4.app.FragmentManagerImpl$1.run(FragmentManager.java:420)\n    at android.os.Handler.handleCallback(Handler.java:587)\n    at android.os.Handler.dispatchMessage(Handler.java:92)\n    at android.os.Looper.loop(Looper.java:130)\n    at android.app.ActivityThread.main(ActivityThread.java:3683)\n    at java.lang.reflect.Method.invokeNative(Native Method)\n    at java.lang.reflect.Method.invoke(Method.java:507)\n    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:839)\n    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:597)\n    at dalvik.system.NativeStart.main(Native Method)\n. ",
    "burberius": "I had the same problem and the fix works for me.\n. ",
    "jpozuelo": "It works for me. Thanks!!\n. ",
    "cesards": "Same here and solved too! Thanks! :-)\n. Solved. Thank you!!\n. @ksperling yep!\n\nstyle name=\"X.Theme\" parent=\"Theme.Sherlock.Light.DarkActionBar\"\n        item name=\"android:windowBackground\">@drawable/background_window /item\n        item name=\"android:actionBarStyle\">@style/X.Theme.ActionBar /item\n        item name=\"actionBarStyle\">@style/X.Theme.ActionBar /item\n /style\n\nand\n\nstyle name=\"X.Theme.ActionBar\" parent=\"android:Widget.Holo.Light.ActionBar\">\n        item name=\"android:background\">@drawable/background_actionbar /item\n        item name=\"background\">@drawable/background_actionbar /item\n        item name=\"android:titleTextStyle\">@style/X.Theme.ActionBar.TitleTextStyle /item\n/style\n\n. @ksperling shit I realized of that at the same time I was answering you....\nI don't know why this happened : \n...android:Widget.Holo.Light.ActionBar ...\nThanks so much!\n. ",
    "NiakJudge": "(@pflammertsma) \nI can reproduce the issue on on a Honeycomb  3.2 ( Motorola XOOM MZ601)\nFrom setHasOptionsMenu() too.\nUsing ABS v4.3.1.\n\nFATAL EXCEPTION: main\njava.lang.NullPointerException\n  at android.view.View.dispatchRestoreInstanceState(View.java:8311)\n  at android.view.ViewGroup.dispatchRestoreInstanceState(ViewGroup.java:2018)\n  at android.view.View.restoreHierarchyState(View.java:8295)\n  at com.actionbarsherlock.internal.view.menu.MenuBuilder.restoreActionViewStates(MenuBuilder.java:367)\n  at com.actionbarsherlock.internal.ActionBarSherlockCompat.preparePanel(ActionBarSherlockCompat.java:490)\n  at com.actionbarsherlock.internal.ActionBarSherlockCompat.dispatchInvalidateOptionsMenu(ActionBarSherlockCompat.java:265)\n  at com.actionbarsherlock.app.SherlockFragmentActivity.invalidateOptionsMenu(SherlockFragmentActivity.java:150)\n  at com.actionbarsherlock.app.SherlockFragmentActivity.supportInvalidateOptionsMenu(SherlockFragmentActivity.java:156)\n  at android.support.v4.app.Fragment.setHasOptionsMenu(Fragment.java:763)\n. \n",
    "jeffxchu": "Just a quick note. Yes, looks like it's still happening. \njava.lang.NullPointerException\nat android.view.View.dispatchRestoreInstanceState(View.java:6335)\nat android.view.ViewGroup.dispatchRestoreInstanceState(ViewGroup.java:1297)\nat android.view.View.restoreHierarchyState(View.java:6319)\nat com.actionbarsherlock.internal.view.menu.MenuBuilder.restoreActionViewStates(SourceFile:361)\nat com.actionbarsherlock.internal.ActionBarSherlockCompat.preparePanel(SourceFile:503)\nat com.actionbarsherlock.internal.ActionBarSherlockCompat.dispatchInvalidateOptionsMenu(SourceFile:272)\nat com.actionbarsherlock.app.SherlockFragmentActivity.invalidateOptionsMenu(SourceFile:150)\nat com.actionbarsherlock.app.SherlockFragmentActivity.supportInvalidateOptionsMenu(SourceFile:156)\nat android.support.v4.app.Fragment.setHasOptionsMenu(SourceFile:763)\n. ",
    "deakjahn": "Very much so, I've just run into it on a 3.2 Galaxy Tab. Changing MenuBuilder:357 to\nif (Build.VERSION.SDK_INT < Build.VERSION_CODES.ICE_CREAM_SANDWICH && viewStates == null) {\nseems to take care of it on the devices I have lying around but I can't vote for all of them out there for sure... :-)\n. ",
    "EurigJones": "I'm also seeing this with a \"SmartTab 10\" whatever that is! Not sure which Android version it's using though.\n. My project is using ABS, and I'm using CapitalizingTextView within a view which is not part of the ABS project. If that is what you mean by outside of ABS.\n. ",
    "DSteve595": "Yes!\n. ",
    "intrications": "This issue says what ActionBarSherlock will do in the future to improve the look of the menu on pre-HC devices:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/627\n. Duplicate of #946.\n. activatedBackgroundIndicator was only added in API level 11 but I don't know if this is causing your specific crash.\n. If the problem is on 4.1 then have you tried just testing the\nTheme.Holo.Light.DarkActionBar theme to see if it is the Sherlock version\nof the theme that is causing the problem?\nOn 15 Jun 2013 00:06, \"Nicolas Jafelle\" notifications@github.com wrote:\n\nSorry... I forgot to mention that this crash in my Razr I with 4.1.2 but\nnot in Android 2.3.7, weird.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/973#issuecomment-19486235\n.\n. It seems that AppCompat has everything you want. Why do you want to use ActionBarSherlock which was deprecated a long time ago?\n. \n",
    "MFlisar": "ok, thank you\n. ",
    "gauravar": "I am also Noticing the same issue With HoneyComb. ActionBar integrates with the tab bar in landscape mode.\n. Thanks.\n. ",
    "pmecho": "gauravar: The issue is concerning pre-HC devices.  API 11+ devices will use the native action bar so there is no control over the tab layout.  Landscape on my Jelly Bean and ICS devices integrates the tabs into the action bar.  Portrait puts them below the action bar.\n. Ah! It looks like the embedded tab policy changed in JB.  This explains my issue\nExtract:\n\"New ActionBar policy for embedded tabs: embedded tabs are now always stacked in the action bar when in portrait mode, regardless of the size of the screen.\"\nFrom:\nhttp://developer.android.com/reference/android/os/Build.VERSION_CODES.html#JELLY_BEAN\n. That makes sense.\n. ",
    "kevindmoore": "I'm having the same problem\n. I think I see the problem. Since the search view is being created later in code, the style isn't applying. I seem to be able to apply the styles after I get the actionView in onCreateOptionsMenu when I expand my search menu.\n. ",
    "klevi": "any proper workaround for this?\n. ",
    "AndroidGecko": "this issue seems to still be there\nhttp://stackoverflow.com/questions/13798668/does-actionbarsherlock-4-2-support-search-suggestions-for-a-searchview/14260518#14260518\n. sorry Jake for not checking first, suggestions work fine in dev branch\n. ",
    "grendell": "Is there any reason why I wouldn't want to pull the fix (https://github.com/JakeWharton/ActionBarSherlock/commit/1e880a3a9f5d0e28d6e51cc9fdfb5bb08dee77ea) into my own fork of master?  Just want to make sure there isn't something lurking beneath the surface.  Thanks!\n. ",
    "tbouron": "Ok, I thought it was done directly on ABS. Thanks for the reply!\n. ",
    "pacificsky": "I can consistently repro this on pre-honeycomb devices when I set an actionLayout for a menu item in xml using android:actionLayout=\"@layout/some_layout\"\n. ",
    "justinmuller": "I believe this may be related to https://github.com/JakeWharton/ActionBarSherlock/issues/652 and https://github.com/JakeWharton/ActionBarSherlock/issues/721\n. ",
    "OS-Chris": "In writing a simple test-case, the described issue has disappeared so it's something on my end (I'm using HoloEverywhere which extends SherlockActivity so it COULD be that, I'm guessing it's my code somehow screwing things up though).\n. ",
    "RedNifre": "We dealt with this by using a transparent icon with width = 0.\n. Maybe it's Samsung? We have this problem on these devices only (But we don't have that many test devices so maybe it's not really a pattern):\n- Samsung Gio\n- Samsung SGS2\nIt works in the emulator.\n. Apparently this problem only occurs SOMETIMES. It's now working on the Gio again, without any changes.\n. Further inspection indicates that the problem has to do with the ABS+HoloEverywhere combination.\nI recommend not working on this issue until I found out more.\n. ",
    "voituk": "Actually i have the same problem with v4.2.0, but unfortunately the workaround suggested is not suitable for my case \n. ",
    "highlycaffeinatedcode": "Cheers, I had just spent 20 mins trying to figure why my title wasn't updating - this solved my issue.\n. ",
    "anolivetree": "This issue cannot be reproduced when it's in the known-bugs sample because the Activity must be the first activity of the app. When it's called from another activity, the bug doesn't occur. \nI created a test app to reproduce this issue. Built with ActionBarSherlock v4.3.1.\nhttps://github.com/anolivetree/ActionBarSherlock-Issue677\nI could reproduce it on Desire(2.2) and 2.2 emulator.\nActivityA starts ActivityB in onStart(). If you go back to ActivityA, the title text of Acitivity is missing.\nWhen you go back to ActivityA, onConfigurationChanged() of ActionBarView is called and mTitleLayout is recreated. However, onMeasure() is not called. As a consequence, both width and height of mTitleLayout are 0. I think this is why title text is not shown.\n. ",
    "elprl": "I'm seeing the issue on Android 3.1. It seemed to cause display issues also (I'll see if I could dig out a screenshot). Do you know of any workarounds?\n. Cheers for the response. I did try to add the icons to the ABS Library project to no effect, but I haven't tried added them to my main project. I'll also try different themes to see if that was a cause. I agree it sounds like a Samsung specific UI, but I haven't tried it on other 3.1 tablets. My other tablets are on ICS and above.\n. Adding the icons to my main project didn't resolve the exception, but as you say it causes no issue. I had thought it was effecting the display of something in my code, but that turned out to be my own issue. \n. ",
    "madlymad": "+1\n. ",
    "jcampbell05": "This is the error I got. \n11-03 00:50:22.587: E/AndroidRuntime(928): FATAL EXCEPTION: main\n11-03 00:50:22.587: E/AndroidRuntime(928): android.view.InflateException: Binary XML file line #29: Error inflating class \n11-03 00:50:22.587: E/AndroidRuntime(928):  at android.view.LayoutInflater.createView(LayoutInflater.java:606)\n11-03 00:50:22.587: E/AndroidRuntime(928):  at com.android.internal.policy.impl.PhoneLayoutInflater.onCreateView(PhoneLayoutInflater.java:56)\n11-03 00:50:22.587: E/AndroidRuntime(928):  at android.view.LayoutInflater.onCreateView(LayoutInflater.java:653)\n11-03 00:50:22.587: E/AndroidRuntime(928):  at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:678)\n11-03 00:50:22.587: E/AndroidRuntime(928):  at android.view.LayoutInflater.rInflate(LayoutInflater.java:739)\n11-03 00:50:22.587: E/AndroidRuntime(928):  at android.view.LayoutInflater.inflate(LayoutInflater.java:489)\n11-03 00:50:22.587: E/AndroidRuntime(928):  at android.view.LayoutInflater.inflate(LayoutInflater.java:396)\n11-03 00:50:22.587: E/AndroidRuntime(928):  at com.actionbarsherlock.widget.SearchView.(SearchView.java:264)\n11-03 00:50:22.587: E/AndroidRuntime(928):  at com.actionbarsherlock.widget.SearchView.(SearchView.java:252)\n11-03 00:50:22.587: E/AndroidRuntime(928):  at com.NYXDigital.LookBunnyFind.Activities.LookBunnyFindActivity.onCreateOptionsMenu(LookBunnyFindActivity.java:63)\n11-03 00:50:22.587: E/AndroidRuntime(928):  at android.support.v4.app.Watson.onCreatePanelMenu(Watson.java:45)\n11-03 00:50:22.587: E/AndroidRuntime(928):  at com.actionbarsherlock.ActionBarSherlock.callbackCreateOptionsMenu(ActionBarSherlock.java:559)\n11-03 00:50:22.587: E/AndroidRuntime(928):  at com.actionbarsherlock.internal.ActionBarSherlockNative.dispatchCreateOptionsMenu(ActionBarSherlockNative.java:60)\n11-03 00:50:22.587: E/AndroidRuntime(928):  at com.actionbarsherlock.app.SherlockFragmentActivity.onCreatePanelMenu(SherlockFragmentActivity.java:165)\n11-03 00:50:22.587: E/AndroidRuntime(928):  at com.android.internal.policy.impl.PhoneWindow.preparePanel(PhoneWindow.java:388)\n11-03 00:50:22.587: E/AndroidRuntime(928):  at com.android.internal.policy.impl.PhoneWindow.invalidatePanelMenu(PhoneWindow.java:739)\n11-03 00:50:22.587: E/AndroidRuntime(928):  at com.android.internal.policy.impl.PhoneWindow$1.run(PhoneWindow.java:2833)\n11-03 00:50:22.587: E/AndroidRuntime(928):  at android.os.Handler.handleCallback(Handler.java:605)\n11-03 00:50:22.587: E/AndroidRuntime(928):  at android.os.Handler.dispatchMessage(Handler.java:92)\n11-03 00:50:22.587: E/AndroidRuntime(928):  at android.os.Looper.loop(Looper.java:137)\n11-03 00:50:22.587: E/AndroidRuntime(928):  at android.app.ActivityThread.main(ActivityThread.java:4424)\n11-03 00:50:22.587: E/AndroidRuntime(928):  at java.lang.reflect.Method.invokeNative(Native Method)\n11-03 00:50:22.587: E/AndroidRuntime(928):  at java.lang.reflect.Method.invoke(Method.java:511)\n11-03 00:50:22.587: E/AndroidRuntime(928):  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:784)\n11-03 00:50:22.587: E/AndroidRuntime(928):  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:551)\n11-03 00:50:22.587: E/AndroidRuntime(928):  at dalvik.system.NativeStart.main(Native Method)\n11-03 00:50:22.587: E/AndroidRuntime(928): Caused by: java.lang.reflect.InvocationTargetException\n11-03 00:50:22.587: E/AndroidRuntime(928):  at java.lang.reflect.Constructor.constructNative(Native Method)\n11-03 00:50:22.587: E/AndroidRuntime(928):  at java.lang.reflect.Constructor.newInstance(Constructor.java:417)\n11-03 00:50:22.587: E/AndroidRuntime(928):  at android.view.LayoutInflater.createView(LayoutInflater.java:586)\n11-03 00:50:22.587: E/AndroidRuntime(928):  ... 25 more\n11-03 00:50:22.587: E/AndroidRuntime(928): Caused by: android.content.res.Resources$NotFoundException: Resource is not a ColorStateList (color or path): TypedValue{t=0x2/d=0x7f01002b a=-1}\n11-03 00:50:22.587: E/AndroidRuntime(928):  at android.content.res.Resources.loadColorStateList(Resources.java:2040)\n11-03 00:50:22.587: E/AndroidRuntime(928):  at android.content.res.TypedArray.getColorStateList(TypedArray.java:342)\n11-03 00:50:22.587: E/AndroidRuntime(928):  at android.widget.TextView.(TextView.java:774)\n11-03 00:50:22.587: E/AndroidRuntime(928):  at android.widget.TextView.(TextView.java:442)\n11-03 00:50:22.587: E/AndroidRuntime(928):  ... 28 more\n. And here is the code that triggered it\n```package com.NYXDigital.LookBunnyFind.Activities;\nimport android.os.Bundle;\nimport android.support.v4.view.ViewPager;\nimport com.actionbarsherlock.app.SherlockFragmentActivity;\nimport com.actionbarsherlock.view.Menu;\nimport com.actionbarsherlock.view.MenuItem;\nimport com.actionbarsherlock.widget.SearchView;\nimport com.NYXDigital.LookBunnyFind.Adapters.FragmentViewPagerAdapter;\nimport com.NYXDigital.LookBunnyFind.Fragments.BranchListFragment;\nimport com.NYXDigital.LookBunnyFind.Fragments.FindFragment;\nimport com.NYXDigital.LookBunnyFind.Widget.FragmentViewPagerItem;\nimport com.viewpagerindicator.*;\npublic class LookBunnyFindActivity extends SherlockFragmentActivity {\n```\n/* Called when the activity is first created. /\n@Override\npublic void onCreate(Bundle savedInstanceState) {\nsuper.onCreate(savedInstanceState);\nsetContentView(R.layout.main);\n// Create adapter for pager and add fragments to be displayed\nFragmentViewPagerAdapter adapter = new FragmentViewPagerAdapter(\n        getSupportFragmentManager());\n\n// Local\nFragmentViewPagerItem localFragment = new FragmentViewPagerItem(\n        \"Local\", new BranchListFragment());\nadapter.addFragment(localFragment);\n\n// Find\nFragmentViewPagerItem findFragment = new FragmentViewPagerItem(\"Find\",\n        new FindFragment());\nadapter.addFragment(findFragment);\n\n// Events\nFragmentViewPagerItem eventsFragment = new FragmentViewPagerItem(\n        \"Events\", new BranchListFragment());\nadapter.addFragment(eventsFragment);\n\n// Set the pager with an adapter\nViewPager pager = (ViewPager) findViewById(R.id.pager);\npager.setAdapter(adapter);\n\n// Bind the title indicator to the adapter\nTabPageIndicator mIndicator = (TabPageIndicator) findViewById(R.id.indicator);\nmIndicator.setViewPager(pager);\n\n}\npublic boolean onCreateOptionsMenu(Menu menu) {\n// Create the Search Menu Item\nMenuItem searchItem = menu.add(\"Search\").setIcon(\n        R.drawable.abs__ic_search);\nsearchItem.setShowAsAction(MenuItem.SHOW_AS_ACTION_IF_ROOM\n        | MenuItem.SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW);\n\n// Check Application is running on Android Froyo or Above\nif (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.FROYO) {\n    // Create the search view\n    SearchView searchView = new SearchView(getSupportActionBar()\n            .getThemedContext());\n    searchView.setQueryHint(\"e.g Farm park\");\n\n    // Setup Action View\n    searchItem.setActionView(searchView);\n\n}\n\nreturn true;\n\n}\npublic boolean onOptionsItemSelected(MenuItem item) {\n// If this is the search button then\nif (item.getTitle() == \"Search\") {\n    this.onSearchRequested();\n    return true;\n}\n\nreturn false;\n\n}\n```\n}\n\n. What would cause that error ? Is that something in my code ?\n. Yes I noticed we are both getting a resource not found.\nI think if the sherlock  search view can't be made to wrap the existing\nnative one or does already. Then a warning or error should be thrown and\ndocumentation updated warning that this widget isn't  compatible with all\nandroid 4+ devices. And people encouraged to detect the os versipn and load\nthe correct class accordingly like I ended up dong (i can post code)\nOn Tuesday, 11 December 2012, Nathan Wong notifications@github.com wrote:\n\nOk, this looks like it's due to the Application Theme and theme\ninheritance.\n\u2014\nReply to this email directly or view it on GitHub.\n<\nhttps://github.com/notifications/beacon/jXIouyFjklbiNRrPH22PBl5IGsA-BCvnFhtrw115pl7J409tw1hYQPHZOj2AlWQ7.gif\n. Thats what happened to me. I ended up just using the native search view for the modern OS as a work around as it works the same without the pain.\n\nOn 17 Dec 2012, at 14:53, Pijus Navickas wrote:\n\nI created an empty project and added just a single line to it to get the error:\nSearchView searchView = new SearchView(getSupportActionBar().getThemedContext());\n12-17 16:49:56.844: E/AndroidRuntime(12016): FATAL EXCEPTION: main\n12-17 16:49:56.844: E/AndroidRuntime(12016): android.view.InflateException: Binary XML file line #29: Error inflating class \n12-17 16:49:56.844: E/AndroidRuntime(12016): at android.view.LayoutInflater.createView(LayoutInflater.java:606)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at com.android.internal.policy.impl.PhoneLayoutInflater.onCreateView(PhoneLayoutInflater.java:56)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at android.view.LayoutInflater.onCreateView(LayoutInflater.java:653)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:678)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at android.view.LayoutInflater.rInflate(LayoutInflater.java:739)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at android.view.LayoutInflater.inflate(LayoutInflater.java:489)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at android.view.LayoutInflater.inflate(LayoutInflater.java:396)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at com.actionbarsherlock.widget.SearchView.(SearchView.java:264)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at com.actionbarsherlock.widget.SearchView.(SearchView.java:252)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at com.example.testsearchview.MainActivity.onCreateOptionsMenu(MainActivity.java:23)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at com.actionbarsherlock.app.SherlockActivity.onCreatePanelMenu(SherlockActivity.java:184)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at com.actionbarsherlock.ActionBarSherlock.callbackCreateOptionsMenu(ActionBarSherlock.java:559)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at com.actionbarsherlock.internal.ActionBarSherlockNative.dispatchCreateOptionsMenu(ActionBarSherlockNative.java:60)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at com.actionbarsherlock.app.SherlockActivity.onCreateOptionsMenu(SherlockActivity.java:149)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at android.app.Activity.onCreatePanelMenu(Activity.java:2444)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at com.android.internal.policy.impl.PhoneWindow.preparePanel(PhoneWindow.java:405)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at com.android.internal.policy.impl.PhoneWindow.invalidatePanelMenu(PhoneWindow.java:756)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at com.android.internal.policy.impl.PhoneWindow$1.run(PhoneWindow.java:2852)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at android.os.Handler.handleCallback(Handler.java:605)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at android.os.Handler.dispatchMessage(Handler.java:92)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at android.os.Looper.loop(Looper.java:137)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at android.app.ActivityThread.main(ActivityThread.java:4424)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at java.lang.reflect.Method.invokeNative(Native Method)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at java.lang.reflect.Method.invoke(Method.java:511)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:817)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:584)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at dalvik.system.NativeStart.main(Native Method)\n12-17 16:49:56.844: E/AndroidRuntime(12016): Caused by: java.lang.reflect.InvocationTargetException\n12-17 16:49:56.844: E/AndroidRuntime(12016): at java.lang.reflect.Constructor.constructNative(Native Method)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at java.lang.reflect.Constructor.newInstance(Constructor.java:417)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at android.view.LayoutInflater.createView(LayoutInflater.java:586)\n12-17 16:49:56.844: E/AndroidRuntime(12016): ... 26 more\n12-17 16:49:56.844: E/AndroidRuntime(12016): Caused by: android.content.res.Resources$NotFoundException: Resource is not a ColorStateList (color or path): TypedValue{t=0x2/d=0x7f01001f a=-1}\n12-17 16:49:56.844: E/AndroidRuntime(12016): at android.content.res.Resources.loadColorStateList(Resources.java:2044)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at android.content.res.TypedArray.getColorStateList(TypedArray.java:342)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at android.widget.TextView.(TextView.java:786)\n12-17 16:49:56.844: E/AndroidRuntime(12016): at android.widget.TextView.(TextView.java:454)\n12-17 16:49:56.844: E/AndroidRuntime(12016): ... 29 more\n\u2014\nReply to this email directly or view it on GitHub.\n. Perhaps we should just recommend people to use native component on ICS 4.0 + Devices as that is where the real issue lies.\nOn 6 Jan 2013, at 10:52, Jake Wharton wrote:\nStill can't repro this on any device and we've never seen it in either Square application in the wild.\n\u2014\nReply to this email directly or view it on GitHub.\n. Well it wouldn't hurt all it takes is 3 lines and it works on all devices even on the weird ones like my one.\nOn 6 Jan 2013, at 11:20, Jake Wharton wrote:\nWell I'm certainly not going to be recommending that since I've seen it deployed without incident to hundreds of different devices.\n\u2014\nReply to this email directly or view it on GitHub.\n. I used standard English on mine so it doesn't seem to be localisation. \nOn 6 Jan 2013, at 11:29, Poohdish Rattanavijai wrote:\nCould localization be part of the problem? I force my app to localize in Thai (th). Your demo app works fine on the same device tho. I didnt do anything fancy with the styling either.\n\u2014\nReply to this email directly or view it on GitHub.\n. I used the themed context way but it crashed on the light theme.\nOn 16 Jan 2013, at 15:04, Simon Vig Therkildsen wrote:\nThe status is that there is no issue when you use SearchView like you're supposed to. Currently no plans to support wrong ways.\n\u2014\nReply to this email directly or view it on GitHub.\n. Okay I will check my code and setup :)\n\nOn 16 Jan 2013, at 15:50, Simon Vig Therkildsen wrote:\n\nOur testing has shown no issues when using the themed context, and we have received no test cases that shows otherwise.\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "faridz": "same thing, crash with JB 4.2;  Works with Android 2.2 though.\n. This appears to be related to style inheritance and the default styles.xml file generated by Eclipse Android ADT template for master/detail project. After adding sherlock theme to styles.xml I had something like this:\n\n```\n\n    Base application theme, dependent on API level. This theme is replaced\n    by AppBaseTheme from res/values-vXX/styles.xml on newer devices.\n\n\n    <!--\n        Theme customizations available in newer API levels can go in\n        res/values-vXX/styles.xml, while customizations related to\n        backward-compatibility can go here.\n    -->\n\n Application theme. \n\n    <!-- All customizations that are NOT specific to a particular API-level can go here. -->\n\n```\nreplacing the line:\n<style name=\"AppTheme\" parent=\"@style/AppBaseTheme\">\nwith:\n<style name=\"AppTheme\" parent=\"@style/Theme.Sherlock.Light.DarkActionBar\">\nthe crash goes away.\n. Thanks @kdehairy. That was it.\n. ",
    "inktomi": "We are also seeing a similar crash, though it only seems to effect a few devices. I cannot reproduce it myself, but users report that the app crashes right away. \n```\n    \n@Override\npublic boolean onCreateOptionsMenu(Menu menu) {\n    getSupportMenuInflater().inflate(R.menu.base_menu, menu);\n    mSearchItem = menu.findItem(R.id.menu_search);\nSearchManager searchManager = (SearchManager) getSystemService(Context.SEARCH_SERVICE);\nmSearchView = (SearchView) mSearchItem.getActionView();\nif( null != mSearchView ){\n    mSearchView.setSearchableInfo(searchManager.getSearchableInfo(getComponentName()));\n}\n\nreturn true;\n\n}\n```\njava.lang.RuntimeException: Unable to resume activity {com.zappos.android/com.zappos.android.activities.HomeActivity}: android.content.res.Resources$NotFoundException: String resource ID #0x7f0d008e\nat android.app.ActivityThread.performResumeActivity(ActivityThread.java:2634)\n.......\nCaused by: android.content.res.Resources$NotFoundException: String resource ID #0x7f0d008e\nat android.content.res.Resources.getText(Resources.java:229)\nat android.content.res.Resources.getString(Resources.java:313)\nat android.content.Context.getString(Context.java:292)\nat com.actionbarsherlock.widget.SearchView.updateQueryHint(SearchView.java:1090)\nat com.actionbarsherlock.widget.SearchView.setSearchableInfo(SearchView.java:371)\nat com.zappos.android.activities.BaseActivity.onCreateOptionsMenu(BaseActivity.java:176)\nat com.zappos.android.activities.BaseCartActivity.onCreateOptionsMenu(BaseCartActivity.java:246)\nat com.zappos.android.activities.HomeActivity.onCreateOptionsMenu(HomeActivity.java:323)\nat android.support.v4.app.Watson.onCreatePanelMenu(Watson.java:45)\nat com.actionbarsherlock.ActionBarSherlock.callbackCreateOptionsMenu(ActionBarSherlock.java:559)\nat com.actionbarsherlock.internal.ActionBarSherlockNative.dispatchCreateOptionsMenu(ActionBarSherlockNative.java:60)\nat com.actionbarsherlock.app.SherlockFragmentActivity.onCreatePanelMenu(SherlockFragmentActivity.java:165)\nat com.android.internal.policy.impl.PhoneWindow.preparePanel(PhoneWindow.java:393)\nat com.android.internal.policy.impl.PhoneWindow.invalidatePanelMenu(PhoneWindow.java:747)\nat com.actionbarsherlock.internal.ActionBarSherlockNative.dispatchInvalidateOptionsMenu(ActionBarSherlockNative.java:49)\nat com.actionbarsherlock.app.SherlockFragmentActivity.invalidateOptionsMenu(SherlockFragmentActivity.java:150)\nat com.zappos.android.activities.HomeActivity.onResume(HomeActivity.java:403)\nat android.app.Instrumentation.callActivityOnResume(Instrumentation.java:1184)\nat android.app.Activity.performResume(Activity.java:5132)\nat android.app.ActivityThread.performResumeActivity(ActivityThread.java:2617)\n. ",
    "esteluk": "I don't think that this is a device related issue. I'm encountering the crash in my app, but the sample is running fine (Galaxy Nexus, 4.2.1 stock). I'll see if I can get a minimal testcase.\n. Ok, this looks like it's due to the Application Theme and theme inheritance.\n. If you're using HoloEverywhere: https://github.com/ChristopheVersieux/HoloEverywhere/issues/156\n. ",
    "RobGThai": "So, out of the blue I suddenly get this error. The app was building and running fine and suddenly this happen.\n12-17 17:56:20.901: W/MenuInflater(11863): Cannot instantiate class: com.actionbarsherlock.widget.SearchView\n12-17 17:56:20.901: W/MenuInflater(11863): java.lang.reflect.InvocationTargetException\n12-17 17:56:20.901: W/MenuInflater(11863):  at java.lang.reflect.Constructor.constructNative(Native Method)\n12-17 17:56:20.901: W/MenuInflater(11863):  at java.lang.reflect.Constructor.newInstance(Constructor.java:417)\n12-17 17:56:20.901: W/MenuInflater(11863):  at com.actionbarsherlock.view.MenuInflater$MenuState.newInstance(MenuInflater.java:488)\n12-17 17:56:20.901: W/MenuInflater(11863):  at com.actionbarsherlock.view.MenuInflater$MenuState.setItem(MenuInflater.java:447)\n12-17 17:56:20.901: W/MenuInflater(11863):  at com.actionbarsherlock.view.MenuInflater$MenuState.addItem(MenuInflater.java:468)\n12-17 17:56:20.901: W/MenuInflater(11863):  at com.actionbarsherlock.view.MenuInflater.parseMenu(MenuInflater.java:190)\n12-17 17:56:20.901: W/MenuInflater(11863):  at com.actionbarsherlock.view.MenuInflater.inflate(MenuInflater.java:112)\n12-17 17:56:20.901: W/MenuInflater(11863):  at com.mondial.thailand.rsa.fragment.MapFragment$SearchActionMode.onCreateActionMode(MapFragment.java:586)\n12-17 17:56:20.901: W/MenuInflater(11863):  at com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper.onCreateActionMode(ActionBarSherlockNative.java:233)\n12-17 17:56:20.901: W/MenuInflater(11863):  at com.android.internal.policy.impl.PhoneWindow$DecorView$ActionModeCallbackWrapper.onCreateActionMode(PhoneWindow.java:2550)\n12-17 17:56:20.901: W/MenuInflater(11863):  at com.android.internal.app.ActionBarImpl$ActionModeImpl.dispatchOnCreate(ActionBarImpl.java:871)\n12-17 17:56:20.901: W/MenuInflater(11863):  at com.android.internal.app.ActionBarImpl.startActionMode(ActionBarImpl.java:446)\n12-17 17:56:20.901: W/MenuInflater(11863):  at android.app.Activity.onWindowStartingActionMode(Activity.java:4881)\n12-17 17:56:20.901: W/MenuInflater(11863):  at com.android.internal.policy.impl.PhoneWindow$DecorView.startActionMode(PhoneWindow.java:2256)\n12-17 17:56:20.901: W/MenuInflater(11863):  at android.app.Activity.startActionMode(Activity.java:4864)\n12-17 17:56:20.901: W/MenuInflater(11863):  at com.actionbarsherlock.internal.ActionBarSherlockNative.startActionMode(ActionBarSherlockNative.java:211)\n12-17 17:56:20.901: W/MenuInflater(11863):  at com.actionbarsherlock.app.SherlockFragmentActivity.startActionMode(SherlockFragmentActivity.java:47)\n12-17 17:56:20.901: W/MenuInflater(11863):  at com.mondial.thailand.rsa.fragment.MapFragment.showActionMode(MapFragment.java:576)\n12-17 17:56:20.901: W/MenuInflater(11863):  at com.mondial.thailand.rsa.fragment.MapFragment.onClick(MapFragment.java:570)\n12-17 17:56:20.901: W/MenuInflater(11863):  at android.view.View.performClick(View.java:4202)\n12-17 17:56:20.901: W/MenuInflater(11863):  at android.view.View$PerformClick.run(View.java:17340)\n12-17 17:56:20.901: W/MenuInflater(11863):  at android.os.Handler.handleCallback(Handler.java:725)\n12-17 17:56:20.901: W/MenuInflater(11863):  at android.os.Handler.dispatchMessage(Handler.java:92)\n12-17 17:56:20.901: W/MenuInflater(11863):  at android.os.Looper.loop(Looper.java:137)\n12-17 17:56:20.901: W/MenuInflater(11863):  at android.app.ActivityThread.main(ActivityThread.java:5039)\n12-17 17:56:20.901: W/MenuInflater(11863):  at java.lang.reflect.Method.invokeNative(Native Method)\n12-17 17:56:20.901: W/MenuInflater(11863):  at java.lang.reflect.Method.invoke(Method.java:511)\n12-17 17:56:20.901: W/MenuInflater(11863):  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:793)\n12-17 17:56:20.901: W/MenuInflater(11863):  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:560)\n12-17 17:56:20.901: W/MenuInflater(11863):  at dalvik.system.NativeStart.main(Native Method)\n12-17 17:56:20.901: W/MenuInflater(11863): Caused by: android.view.InflateException: Binary XML file line #29: Error inflating class <unknown>\n12-17 17:56:20.901: W/MenuInflater(11863):  at android.view.LayoutInflater.createView(LayoutInflater.java:613)\n12-17 17:56:20.901: W/MenuInflater(11863):  at com.android.internal.policy.impl.PhoneLayoutInflater.onCreateView(PhoneLayoutInflater.java:56)\n12-17 17:56:20.901: W/MenuInflater(11863):  at android.view.LayoutInflater.onCreateView(LayoutInflater.java:660)\n12-17 17:56:20.901: W/MenuInflater(11863):  at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:685)\n12-17 17:56:20.901: W/MenuInflater(11863):  at android.view.LayoutInflater.rInflate(LayoutInflater.java:746)\n12-17 17:56:20.901: W/MenuInflater(11863):  at android.view.LayoutInflater.inflate(LayoutInflater.java:489)\n12-17 17:56:20.901: W/MenuInflater(11863):  at android.view.LayoutInflater.inflate(LayoutInflater.java:396)\n12-17 17:56:20.901: W/MenuInflater(11863):  at com.actionbarsherlock.widget.SearchView.<init>(SearchView.java:264)\n12-17 17:56:20.901: W/MenuInflater(11863):  at com.actionbarsherlock.widget.SearchView.<init>(SearchView.java:252)\n12-17 17:56:20.901: W/MenuInflater(11863):  ... 30 more\n12-17 17:56:20.901: W/MenuInflater(11863): Caused by: java.lang.reflect.InvocationTargetException\n12-17 17:56:20.901: W/MenuInflater(11863):  at java.lang.reflect.Constructor.constructNative(Native Method)\n12-17 17:56:20.901: W/MenuInflater(11863):  at java.lang.reflect.Constructor.newInstance(Constructor.java:417)\n12-17 17:56:20.901: W/MenuInflater(11863):  at android.view.LayoutInflater.createView(LayoutInflater.java:587)\n12-17 17:56:20.901: W/MenuInflater(11863):  ... 38 more\n12-17 17:56:20.901: W/MenuInflater(11863): Caused by: android.content.res.Resources$NotFoundException: Resource is not a ColorStateList (color or path): TypedValue{t=0x2/d=0x7f01001f a=-1}\n12-17 17:56:20.901: W/MenuInflater(11863):  at android.content.res.Resources.loadColorStateList(Resources.java:2074)\n12-17 17:56:20.901: W/MenuInflater(11863):  at android.content.res.TypedArray.getColorStateList(TypedArray.java:342)\n12-17 17:56:20.901: W/MenuInflater(11863):  at android.widget.TextView.<init>(TextView.java:775)\n12-17 17:56:20.901: W/MenuInflater(11863):  at android.widget.TextView.<init>(TextView.java:449)\n12-17 17:56:20.901: W/MenuInflater(11863):  ... 41 more\nR.menu.interactive_map\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:panel=\"http://schemas.android.com/apk/res-auto\">\n    <item android:id=\"@+id/action_search\"\n          android:title=\"@string/app_name\"\n          android:icon=\"@android:drawable/ic_menu_search\"\n          android:showAsAction=\"always\"\n          android:actionViewClass=\"com.actionbarsherlock.widget.SearchView\" />\n</menu>\nThis is placed inside a Fragment. ActionMode, Menu, and MenuInflater are all ABS.\n```\nprivate class SearchActionMode implements ActionMode.Callback{\n    @Override\n    public boolean onCreateActionMode(ActionMode mode, Menu menu) {\n        Log.d(TAG, \"onCreateActionMode creating inflater\");\n        MenuInflater inflater = new MenuInflater(getActivity());\n        Log.d(TAG, \"onCreateActionMode inflating\"); // **Exception thrown after this line.**\n        inflater.inflate(R.menu.interactive_map, menu); \n        Log.d(TAG, \"onCreateActionMode finding SearchView\");\n        mSearchView = (SearchView) menu.findItem(R.id.action_search).getActionView();\n\n        Log.d(TAG, \"mSearchView: \" + mSearchView);\n        setupSearchView();\n        return true;\n    }\n\n    @Override\n    public boolean onPrepareActionMode(ActionMode mode, Menu menu) {\n        Log.d(TAG, \"onPrepareActionMode\");\n\n        mSearchView.requestFocus();\n        return false;\n    }\n\n    @Override\n    public boolean onActionItemClicked(ActionMode mode, MenuItem item) {\n        Log.d(TAG, \"onActionItemClicked\");\n        return false;\n    }\n\n    @Override\n    public void onDestroyActionMode(ActionMode mode) {\n        Log.d(TAG, \"onDestroyActionMode\");\n        closeTopTray();\n        closeListView();\n    }\n\n}\n\n```\n. Thanks to @esteluk and @Prototik. I fixed it by adding to v14 ofSherlock theme.\n<item name=\"textColorPrimary\">@color/abs__primary_text_holo_light</item>\n    <item name=\"textColorPrimaryInverse\">@color/abs__primary_text_holo_dark</item>\n. Basically, in res/values-v14/abs__themes.xml\nAdded those items to Sherlock.__Theme\n<style name=\"Sherlock.__Theme\" parent=\"android:Theme.Holo\">\n    <item name=\"textColorPrimary\">@color/abs__primary_text_holo_light</item>\n    <item name=\"textColorPrimaryInverse\">@color/abs__primary_text_holo_dark</item>\n</style>\n. @SimonVT TBH I don't know much about styling in Android. In this case when I debug the app it crashes on the TextView in the ActionBar and the textColorPrimary is the only thing on it. Adding these solved the problem that I had. Tested working on three other ICS/JB devices as well.\n@chinhnguyen May be the root cause of your problem is different than mine, try debugging to scope down where the actual problem is that might help you find better answer.\n. Could localization be part of the problem? I force my app to localize in Thai (th). Your demo app works fine on the same device tho. I didnt do anything fancy with the styling either.\n. Is it possible to use themed context in XML? When I'm trying to inflate view using inflater provided in onCreateView and getting this error. I have to manually create it in code using themed context then it works.\n. ",
    "pijusn": "I created an empty project and added just a single line to it to get the error:\nJava\nSearchView searchView = new SearchView(getSupportActionBar().getThemedContext());\n\n12-17 16:49:56.844: E/AndroidRuntime(12016): FATAL EXCEPTION: main\n12-17 16:49:56.844: E/AndroidRuntime(12016): android.view.InflateException: Binary XML file line #29: Error inflating class \n12-17 16:49:56.844: E/AndroidRuntime(12016):    at android.view.LayoutInflater.createView(LayoutInflater.java:606)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at com.android.internal.policy.impl.PhoneLayoutInflater.onCreateView(PhoneLayoutInflater.java:56)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at android.view.LayoutInflater.onCreateView(LayoutInflater.java:653)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:678)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at android.view.LayoutInflater.rInflate(LayoutInflater.java:739)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at android.view.LayoutInflater.inflate(LayoutInflater.java:489)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at android.view.LayoutInflater.inflate(LayoutInflater.java:396)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at com.actionbarsherlock.widget.SearchView.(SearchView.java:264)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at com.actionbarsherlock.widget.SearchView.(SearchView.java:252)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at com.example.testsearchview.MainActivity.onCreateOptionsMenu(MainActivity.java:23)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at com.actionbarsherlock.app.SherlockActivity.onCreatePanelMenu(SherlockActivity.java:184)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at com.actionbarsherlock.ActionBarSherlock.callbackCreateOptionsMenu(ActionBarSherlock.java:559)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at com.actionbarsherlock.internal.ActionBarSherlockNative.dispatchCreateOptionsMenu(ActionBarSherlockNative.java:60)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at com.actionbarsherlock.app.SherlockActivity.onCreateOptionsMenu(SherlockActivity.java:149)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at android.app.Activity.onCreatePanelMenu(Activity.java:2444)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at com.android.internal.policy.impl.PhoneWindow.preparePanel(PhoneWindow.java:405)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at com.android.internal.policy.impl.PhoneWindow.invalidatePanelMenu(PhoneWindow.java:756)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at com.android.internal.policy.impl.PhoneWindow$1.run(PhoneWindow.java:2852)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at android.os.Handler.handleCallback(Handler.java:605)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at android.os.Handler.dispatchMessage(Handler.java:92)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at android.os.Looper.loop(Looper.java:137)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at android.app.ActivityThread.main(ActivityThread.java:4424)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at java.lang.reflect.Method.invokeNative(Native Method)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at java.lang.reflect.Method.invoke(Method.java:511)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:817)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:584)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at dalvik.system.NativeStart.main(Native Method)\n12-17 16:49:56.844: E/AndroidRuntime(12016): Caused by: java.lang.reflect.InvocationTargetException\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at java.lang.reflect.Constructor.constructNative(Native Method)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at java.lang.reflect.Constructor.newInstance(Constructor.java:417)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at android.view.LayoutInflater.createView(LayoutInflater.java:586)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    ... 26 more\n12-17 16:49:56.844: E/AndroidRuntime(12016): Caused by: android.content.res.Resources$NotFoundException: Resource is not a ColorStateList (color or path): TypedValue{t=0x2/d=0x7f01001f a=-1}\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at android.content.res.Resources.loadColorStateList(Resources.java:2044)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at android.content.res.TypedArray.getColorStateList(TypedArray.java:342)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at android.widget.TextView.(TextView.java:786)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    at android.widget.TextView.(TextView.java:454)\n12-17 16:49:56.844: E/AndroidRuntime(12016):    ... 29 more\n. \n",
    "chinhnguyen": "@RobGThai, can you please post an example? Your fix seems to not working on my side. Thanks.\n. @RobGThai, thanks for the snippet. But it doesn't work on my side and I did follow the example code in your first post.\n. ",
    "michaelye": "I encountered this problem too.I copyed the \"SampleList.java\" in demos to my application,then setTheme(SampleList.THEME); in onCreate() method,and it works.\n. ",
    "hahnjo": "First, great thanks for your work!\nI created a very minified test application that crashes on my phone. I hope that this could help :)\nhttps://github.com/hahnjo/ActionBarSherlock-Test\nhahnjo\n. Ok, sorry for that. I recreated the Test-Application and missed a few things, as you noticed.\nBut I think, I have now found the issue I meant in the beginning:\nIf you use the theme Theme.Sherlock.Light.DarkActionBar and create the view with new SearchView(this), it won't work...\nCombinations that will work:\nTheme.Sherlock.Light.DarkActionBar with new SearchView(getSupportActionBar().getThemedContext())\nTheme.Sherlock.Light or Theme.Sherlock.Light with new SearchView(this)\nI hope I have now the correct version on my github ;)\nhahnjo\n. Yes, I'm now doing so\n. At least, this has worked in my case. OK, I have to admin that I only imported the library module by maven. Would have to test that again.\nBut the other dependencies also got parsed correctly from the root pom.xml...\n. ",
    "ffgiraldez": "what's the current status of this issue? i have the same problems on ICS devices\n. ",
    "grossamit": "I used all the possible combinations -> NO SUCCESS\ncrash:\n01-25 15:23:27.654: E/AndroidRuntime(28317): FATAL EXCEPTION: main\n01-25 15:23:27.654: E/AndroidRuntime(28317): java.lang.StackOverflowError\n01-25 15:23:27.654: E/AndroidRuntime(28317):    at android.view.ViewGroup.addFocusables(ViewGroup.java:883)\n01-25 15:23:27.654: E/AndroidRuntime(28317):    at android.view.ViewGroup.addFocusables(ViewGroup.java:883)\n01-25 15:23:27.654: E/AndroidRuntime(28317):    at android.view.View.addFocusables(View.java:6292)\n01-25 15:23:27.654: E/AndroidRuntime(28317):    at android.view.FocusFinder.findNextInputFocus(FocusFinder.java:100)\n01-25 15:23:27.654: E/AndroidRuntime(28317):    at android.view.FocusFinder.findNextFocus(FocusFinder.java:83)\n01-25 15:23:27.654: E/AndroidRuntime(28317):    at android.view.FocusFinder.findNextFocus(FocusFinder.java:65)\n01-25 15:23:27.654: E/AndroidRuntime(28317):    at android.view.ViewGroup.focusSearch(ViewGroup.java:644)\n01-25 15:23:27.654: E/AndroidRuntime(28317):    at android.view.ViewGroup.focusSearch(ViewGroup.java:646)\n01-25 15:23:27.654: E/AndroidRuntime(28317):    at android.view.ViewGroup.focusSearch(ViewGroup.java:646)\n01-25 15:23:27.654: E/AndroidRuntime(28317):    at android.view.ViewGroup.focusSearch(ViewGroup.java:646)\n01-25 15:23:27.654: E/AndroidRuntime(28317):    at android.view.ViewGroup.focusSearch(ViewGroup.java:646)\n01-25 15:23:27.654: E/AndroidRuntime(28317):    at android.view.ViewGroup.focusSearch(ViewGroup.java:646)\n01-25 15:23:27.654: E/AndroidRuntime(28317):    at android.view.ViewGroup.focusSearch(ViewGroup.java:646)\n01-25 15:23:27.654: E/AndroidRuntime(28317):    at android.view.ViewGroup.focusSearch(ViewGroup.java:646)\n01-25 15:23:27.654: E/AndroidRuntime(28317):    at android.view.ViewGroup.focusSearch(ViewGroup.java:646)\n01-25 15:23:27.654: E/AndroidRuntime(28317):    at android.view.ViewGroup.focusSearch(ViewGroup.java:646)\n01-25 15:23:27.654: E/AndroidRuntime(28317):    at android.view.View.focusSearch(View.java:6195)\n01-25 15:23:27.654: E/AndroidRuntime(28317):    at android.widget.TextView.onCreateInputConnection(TextView.java:5707)\n01-25 15:23:27.654: E/AndroidRuntime(28317):    at android.view.inputmethod.InputMethodManager.startInputInner(InputMethodManager.java:1079)\n01-25 15:23:27.654: E/AndroidRuntime(28317):    at android.view.inputmethod.InputMethodManager.restartInput(InputMethodManager.java:1033)\n01-25 15:23:27.654: E/AndroidRuntime(28317):    at android.widget.TextView.setText(TextView.java:3625)\n01-25 15:23:27.654: E/AndroidRuntime(28317):    at android.widget.TextView.setText(TextView.java:3563)\n01-25 15:23:27.654: E/AndroidRuntime(28317):    at android.widget.EditText.setText(EditText.java:100)\n01-25 15:23:27.654: E/AndroidRuntime(28317):    at android.widget.TextView.setText(TextView.java:3538)\n01-25 15:23:27.654: E/AndroidRuntime(28317):    at com.actionbarsherlock.widget.SearchView.setQuery(SearchView.java:534)\n. ",
    "herrlado": "The solutipn was for me to add a Sherlock Theme to the activoty it gets created <activity ....\n             android:theme=\"@style/Theme.Sherlock\"\nIn this case als othe menuInflater works\n. ",
    "kdehairy": "@faridz, the problem is in the style.xml files in values-11/ and values-14/ folders. you sure missed changing the parent of \"AppBaseTheme\" to \"@style/Theme.Sherlock.Light.DarkActionBar\" in both.\n. @chrisstewart check this comment\n. ",
    "smarek": "If working from fragment note that this works for me:\njava\nclass MyFragment extends SherlockFragment\n...\nnew SearchView(getSherlockActivity().getSupportActionBar().getThemedContext());\n. This is simulated with both, native and ABS. So I think this should not be closed.\n. Can you please link the old one? Thanks\n. ",
    "danielesegato": "Sorry, not sure I understand here..\nAre you saying using the SearchView widget from an XML layout is NOT supported by ActionbarSherlock?\nBecause I have this crash and I'm extending Theme.Sherlock.Light.DarkActionBar in my application.\nI have a layout XML which include com.actionbarsherlock.widget.SearchView, when I inflate it from the SherlockFragment in onCreateView I get that error.\nHow am I supposed to give the actionbar sherlock themecontext to the inflater?\n. Ok thanks!\n. Will it be supported in a future version? (just curious)\n. I know a lint check isn't an error.\nI'm just saying that it should be suppressed when it is not.\nBut I understand adding suppress may cause issues in merging from upstream.\nEven if I think it could be a minor issue if you suppress in \"new lines\", git will threat it as a new hunk and more easily merge.\nIt may cause issue in merging in a very few cases and all of them should be very easy to fix\n. I disagree.\nIf your suppress without checking It IS bad. \nBut if you check and you know it is a false alarm you can safely suppress. \nThe conditions being:\n- you suppress in the smaller section of code possible \n- you comment above explaining why it is safe to suppress\n- you go and also comment in the section of code that may invalidate your suppress (if applicable) \nThat's important for lint errors, less important for warnings. \nExample: that method or layout is only used in API level X or greater: it is safe to suppress an error and it is correct to do so because you intended to write that method / layout targeting that API level. \nA conflict where you wrote the suppress comment may actually help catch an issue that would be introduced by merging. \n. Ok then, I'll not insist anymore :)\nThank you for your replies on the topic.\n. It will be a long wait: it is still to r7\nhttp://search.maven.org/#browse%7C-1026250933\n. I don't think an official announcement saying the aar format is final will come.\nBut according to Xavier Ducrohet you can push aars to maven repositories.\nSee here comments in here:\nhttps://plus.google.com/u/1/+XavierDucrohet/posts/jYgsQikmSK5\nSpecifically:\nDevesh Parekh \nIs there any news about aar that I missed? Should library authors publish aars to maven repos now?\ufeff\nXavier Ducrohet\n+Devesh Parekh yes you can upload to repositories. \ufeff\nThey are not going to upload support library and sdk library to maven because they want the user to accept a licence agreement before downloading the library, you can read the discussion here for details:\nhttps://plus.google.com/116539451797396019960/posts/QnCgxgs2fzR\n. ",
    "almozavr": "Got this problem with SearchView as an actionView inside menu item for \u2026Light.DarkActionBar theme.\nSolution (fill up missing attrs):\nxml\n<style name=\"AppTheme\" parent=\"Theme.Sherlock.Light.DarkActionBar\">\n\u2026\n        <!--ActionBar (SearchView) fix-->\n        <item name=\"textColorPrimary\">@color/abs__primary_text_holo_light</item>\n        <item name=\"textColorPrimaryInverse\">@color/abs__primary_text_holo_dark</item>\n        <item name=\"searchDropdownBackground\">@drawable/abs__search_dropdown_dark</item>\n        <item name=\"searchViewTextField\">@drawable/abs__textfield_searchview_holo_dark</item>\n        <item name=\"searchViewTextFieldRight\">@drawable/abs__textfield_searchview_right_holo_dark</item>\n        <item name=\"searchViewCloseIcon\">@drawable/abs__ic_clear</item>\n        <item name=\"searchViewSearchIcon\">@drawable/abs__ic_search</item>\n        <item name=\"searchViewGoIcon\">@drawable/abs__ic_go</item>\n        <item name=\"searchViewVoiceIcon\">@drawable/abs__ic_voice_search</item>\n        <item name=\"searchAutoCompleteTextView\">@style/Widget.Sherlock.SearchAutoCompleteTextView.DarkActionBar</item>\n\u2026\n</style>\n\u2026\n<style name=\"Widget.Sherlock.SearchAutoCompleteTextView.DarkActionBar\">\n        <item name=\"android:textColor\">?attr/textColorPrimaryInverse</item>\n</style>\n. It's all about menu inflation, and yes, as you said it's themed context\n\nInflation from menu XML will work because the MenuInflater uses the themed context when creating its LayoutInflater.\n\nI posted this kind-a-solution 'cause yeah \u2026Light.DarkActionBar theme + SearchView gives inflation errors (during menu inflation) due to missing attrs on v14. Also the problem seems to remain on dev branch (but didn't doublecheck it, sorry).\n. Forgot to mention I use ABS via HoloEverywhere, so maybe the problem is in how HE creates context for menu inflater when on \u2026Light.DarkActionBar \nThanks for you comments, should have tested it standalone before posting.\n. ",
    "HenriqueRocha": "I'm also having this problem. I suppose the problem is in HoloEverywhere.\nIf I use parent=\"Holo.Theme.Light\" the SearchView works perfectly, but if I use parent=\"Holo.Theme.Light.DarkActionBar\" it doesn't work in Android 4.2 but works in 2.2.\n. ",
    "chrisstewart": "I was having the same problem and the above comment fixed it for me: https://github.com/JakeWharton/ActionBarSherlock/issues/685#issuecomment-12947636\n. ",
    "wangqi060934": "@kdehairy  yes,you are right\n. ",
    "kapeels": "If anybody else comes across this issue, https://github.com/JakeWharton/ActionBarSherlock/issues/685#issuecomment-12947636 solved this for me. \nThanks!\nI was following the instructions from here - http://developer.android.com/reference/android/app/LoaderManager.html\n. ",
    "mohamad-amin": "Hi,\nI also had the same problem.\nThis was my code in my fragment : \n\nSearchView sv = new  SearchView(getSherlockActivity());\n        sv.setQueryHint(\"Search...\");\n        sv.setOnQueryTextListener(this);\n        menu.add(0, search, 0, \"Search\").setActionView(sv)\n        .setIcon(R.drawable.ic_action_search_new).setShowAsAction(\n                MenuItem.SHOW_AS_ACTION_IF_ROOM | MenuItem.\n                SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW);\n\nBut it gave me Force Close After I changed the theme of the activity.\nThe problem was with this line : \n\n                SearchView sv = new  SearchView(getSherlockActivity());\n\nI changed it to : \n\nSearchView sv = new     SearchView(getSherlockActivity().getSupportActionBar().getThemedContext());\n\nAnd it's working now!\n. ",
    "jovannovkovic": "How can i fix this bug? How to find in which class to implement fix?\n. ",
    "slott": "I have have had the exact same system - the lack of the basic build.xml for easy integration with ant which is the de facto build tool for Android. For others with the same issue here is a simple build target to help you solve the problem - it is easy to add multiple dependencies as you will see.\n```\n\n${path}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n. ",
    "gorodechnyj": "Sorry, had a mistake in menu xml resource.\nAfter changing android:actionViewClass to \"com.actionbarsherlock.widget.SearchView\" the issue solved itself\n. ",
    "rmack": "I have the same issue.  When testing on Jellybean I receive the following error \"12-12 22:24:19.820: W/InputEventReceiver(20995): Attempted to finish an input event but the input event receiver has already been disposed.\" \nIn addition, I also notice the artifact and it looks like a Flicker.  I have received reports that the flicker prevents the use of the SubMenu options on some devices such as the Razor. I have just started diagnosing the issue and I wanted to report it here. I didn't have this issue with Android versions prior to Jellybean.\nCurrently if I add more than 4 SubMenu options the flicker appears.  If I have 4 or less the flicker does not occur, but I still get the error in the logcat.\nI do not have to hammer the menu for the artifact to appear, and it isn't consistent.\nAnother note is that I had to change to the new Android support library to get my application to compile.  I have not tested to see if I get the same issue when compiling with the support library provided by ActionBarSherlock.\nIf I figure anything out I will post it here.  \nThank you.\nUpdate: 12/17/12 -------------------------------------------------------------------\nThanks iNoles... I was aware of this, but I couldn't find any code I could change within ActionBarSherlock to account for an action cancel for SubMenus...\nI rooted around in ActionBarSherlock code for a while and I couldn't find any specific way to prevent the \"Flicker\" artifact from taking place.  I have received 6 e-mails with people not being able to use the ActionBar SubMenues at all; which makes my app useless... so...\nMy current work around:\nCheck the build and create two different sets of SubMenus based on Jellybean.\nIf the device is at JellyBean I would make sure each submenu only had four items.  If there were more then four I would group the extras into more SubMenus with no more than 4 items.\nIf the device is not at Jellybean I create my submenus how I would normally.  I might try making lists instead of SubMenus.  I haven't tried this yet.\nI need to get a new version out with these fixes and then I will potentially research the problem more within ActionBarSherlock.\nCheers...\n. ",
    "Vandalko": "I think it's related to https://github.com/JakeWharton/ActionBarSherlock/issues/725. I've fixed this NPE in my project by modifying restoreActionViewStates method so it would not call View.restoreHierarchyState if bundle is NULL or view's id == View.NO_ID\n. > /home/travis/build.sh: line 107: android: command not found\nlooks like travis feeling bad :(\n. > I don't think that second commit (the one named \"merged\") should be part of the pull request.\nIt's because my commit originally applied to master - on \"Files changed\" tab you can see that only 2 files changed. maybe i should consider reordering this commits.\n\nMake sure the your commits pass all checkstyle checks.\n\nI still can't get used to Warton's code style... :( i'll fix it in a moment\n. ok. cleaned code as much as i can...\n. changed my eclipse prefs to fit code style\n. Yeah, but it's very sad when the only reason you have memory leak is because of MenuWrapper's internal logic(like it was with tags in old Android versions). So instead of writing tons of boilerplate code again and again(to clear pointers) in every project, we could just fix MenuWrapper ;) (like they did in Android :) )\n. It's very rare case but i'm working hard with FragmentTransaction.replace() method which is a little buggy.\n. just extracted duplicated code\n. ",
    "StingerAJ": "Sorry, but I have to disagree. This screenshot is on a Nexus 10 and the width of the searchview is more like 256dp, an estimated fifth of the screen width (2560px and logical density of 2.0px per dp):\n\n. According to this line, there should be possibility to set the maxWidth in XML or in code:\nhttps://github.com/JakeWharton/ActionBarSherlock/blob/master/actionbarsherlock%2Fsrc%2Fcom%2Factionbarsherlock%2Fwidget%2FSearchView.java#L301\nI think I used setMaxWidth in code and set it to 4000 to accomplish something like fill_parent.\n. Does that mean there is no support for CHOICE_MODE_MULTIPLE or CHOICE_MODE_MULTIPLE_MODAL in ABS, neither for ListView nor for GridView?\nOr is it only not available on all API levels below API level 11 (Honeycomb)?\n. I have no problems using the ShareActionProvider with simply using Theme.Sherlock.Light as my base theme:\n<style name=\"AppBaseTheme\" parent=\"@style/Theme.Sherlock.Light\">\n   ...\n</style>\n<style name=\"AppBaseViewPagerTheme\" parent=\"@style/AppBaseTheme\">\n    <item name=\"vpiTitlePageIndicatorStyle\">@style/AppBaseTitlePageIndicator</item>\n</style>\n. ",
    "serj-lotutovici": "by the way... who knows why google is not adding these libs to the maven central? it's quite strange realty...  I already had a  few problems with google analytics when moving all projects to our CI server...\n. Yes, it should... I've build already 2 apps using ABS... and one had custom ActionBar. ABS works great on all versions...\n. You have to use getSupportActionBar() method. Which you will find in any SherlockActivity.\n. For example, you have an activity:\n```\npublic class Simple extends SherlockActivity {\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    // Here you can setup the actionbar\n    getSupportActionBar().setTitle(\"Hello!\");\n}\n\n}\n```\nABS will use the appropriate method depending on the OS version, on what you app will run. (On Android 4.0 it will call the getActionBar() method, on lower versions it will do it's compatibility job.)\nI would suggest you to give a closer look on the samples that Jake Warton provides with ABS. Yo can finde them here https://github.com/JakeWharton/ActionBarSherlock/tree/master/actionbarsherlock-samples.\n. As far as I know in ABS there is a com.actionbarsherlock.internal.view.menu package... I would suggest you to start you're research there. I my self din't try this... if I'll have some more time, I will try to post here an example (if its possible of course).\n. @androlizer As far as I see, https://github.com/mihirjoshi21/ActionBarSherlock uses the same code of PopupMenu as in the support v7 package. So you can just copy the PopupMenu class in you're cloned copy of ABS and use it.\n. I think there is no native support for that...  but you can create a custom view with a TextView, which will represent the title. But this aproach will require some additional coding, because the setTitle() method wont work for that.\n. ",
    "hameno": "I figured out how to do this without forking or modifying external libraries:\njust add the following dependency declarations to your pom and use the maven android sdk deployer to deploy the compatibility-v4\n<dependency>\n            <groupId>android.support</groupId>\n            <artifactId>compatibility-v4</artifactId>\n            <version>11</version>\n        </dependency>\n        <dependency>\n            <groupId>com.google.android</groupId>\n            <artifactId>support-v4</artifactId>\n            <version>r7</version>\n            <scope>provided</scope>\n        </dependency>\nIt will work just fine and you can use the new APIs from rev 11\n. What? I think your post is missing some words... :)\n. Yes, this would be cleaner but unfortunately IntelliJ seems to have an issue with exclusions for apklibs (atleast version 12.0.1), where it won't find the classes inside the apklibs, so for me (and I think many other) this is probably the easiest solution - at least until maven central repo is updated...\n. I'm not sure, I did a quick search but didn't find anything in their tracker. But since it's 3:00 AM here in Berlin, Germany I'm going to bed now :) \nMaybe if I have some time in the coming days I will submit an issue...\n. :D\n. Ahh I should probably change the install command so that it isn't \"quiet\"...\n. Well, seems to be working...\n. I think that is all I can do for now - not sure why the tests are failing, seems to be a problem with the dependencies and scope maybe?\n. Well, you did read the error message, right? :) The parent style seems to be wrong (maybe in one of the configurations?)\n. ",
    "mingfai": "Perhaps we need more people to vote for putting the support library to Maven central\nhttps://code.google.com/p/android/issues/detail?id=54697\n. ",
    "tkhduracell": "Thanks!\njava\nfinal boolean result = ( mMenu == null ? false : callbackOptionsItemSelected(mMenu.findItem(item)));\n. ",
    "matthewmichihara": "I'm curious why you closed https://github.com/JakeWharton/ActionBarSherlock/pull/803 but not this? It seems like they are the same bug, but the fix (https://github.com/JakeWharton/ActionBarSherlock/commit/e9180ef9ea727e4bc0afbce682f80890ca40cd28) looks like it's still just a null check.\n. Thanks Jake!\n. This has been discussed in more detail here: https://github.com/JakeWharton/ActionBarSherlock/issues/701\nUnfortunately, it sounds like just adding that null check is not the optimal solution.\n. Works great for me.\n. Understandable. Let me know if there's any way I can help.\n. Oops sorry wrong repo.\n. ",
    "blundell": "@JakeWharton What version of ABS is this fixed in? Is there an easy way to work that out for myself, so I don't have to ask next time?\n. Any idea on a release timeframe? We have MonkeyRunner as part of our CI and it's exploding each night\n. ",
    "motameni": "Siavash name should appear every where :+1:\n. ",
    "rsvijay": "Thanks for replying me, Jonathan. The above code is a function within MyActivity class.\nI am sure that the exception is not thrown at line \"LinearLayout tabContainer = (LinearLayout) view.getParent().getParent();\" because i surrounded the whole block with try {} catch (Exception e) {}. It was never caught atleast once.\nI am thinking that adding a LinearLayout object to the Action bar has resulted the issue. Because the Actionbar may be designed to contain only TabView(subclass of LinearLayout class) objects.\nFurther the code works fine in many Android mobiles(Sony with ICS, Gingerbread, Samsung with Gingerbread, Froyo, Jellybean) except Galaxy S, Galaxy S3(may be a lot of mobiles like this). I can't figure out why so...\n. ",
    "velvetk": "Hi Jake,\nHere is how I reference it:\n``` xml\n@style/MyActionButtonStyle\n@style/MyActionButtonStyle\n",
    "niftynei": "In my tests, this isn't related to ActionBarSherlock -- the issues is that the onMeasure logic for ActionBarMenuItems has changed from 4.0.x to 4.1.x.  \nAdding a height attribute to your ActionBar style seems to fix it for 4.0.x:  \n<style name=\"MyActionBar\"  parent=\"whoever\">\n<item name=\"android:height\">56dp</item>\n<item name=\"height\">56dp</item>\n</style>\n. ",
    "magicgoose": "Same problem. All attempts to change size/padding of action buttons gave nothing, on android 2.3 there is padding around buttons.\n. ",
    "Rahulrsannidhi": "i am using Default Action Bar instead of Sherlock Action Bar also using the custom theme also how to increase the size of action bar and size of the icons.\n. ",
    "nishal": "Sorry about posting it in here.\nI found the ActionProviders.java demo which is loading my layout correctly for me, but the layout file doesn't have a button, so the entire view is not clickable. Was wondering how I could make it clickable retaining the proper ActionBarSherlock theming.\nIf thats not possible, I might have to add an empty button behind the custom layout to make it clickable.\n. ",
    "jjara22": "??\nDate: Mon, 26 Nov 2012 12:17:19 -0800\nFrom: notifications@github.com\nTo: ActionBarSherlock@noreply.github.com\nSubject: [ActionBarSherlock] Custom Action View... (#716)\nHow to create a custom action view that is clickable like a standard Action item?\n```\n          \u2014\n      Reply to this email directly or view it on GitHub.\n\n```\n. ",
    "aisk": "thx\n. ",
    "Nevro": "I create sample in known bugs, but now i found that the problem is only on Samsung devices with Gingerbread...\nCommit sample to known bugs? \n. No need to add any font to abs library, just add the setTypeface(Typeface tf) to getSherlock() which will then apply to all textviews in abs...\n. Thanks Simon! Amazing tip! Work like charm! :+1: \n. god damn... too much beautiful to work :(\n@Override\npublic View onCreateView(String name, Context context, AttributeSet attrs) {\n    if (\"TextView\".equals(name)) {\n        TextView text = new TextView(context, attrs);\n        text.setBackgroundColor(Color.RED);\n        Typeface tf = Typeface.createFromAsset(getAssets(),\"fonts/roboto_regular.ttf\");\n        text.setTypeface(tf);\n        return text;\n    } else if (\"com.actionbarsherlock.internal.widget.CapitalizingButton\".equals(name)) {\n        CapitalizingButton text = new CapitalizingButton(context, attrs);\n        Typeface tf = Typeface.createFromAsset(getAssets(),\"fonts/roboto_regular.ttf\");\n        text.setTypeface(tf);\n        return text;\n    } else\n        return super.onCreateView(name, context, attrs);\n}\nCapitalizingButton is ok, but with TextView not work at all... background is red, but typeface is not correct!\nAny suggestions? \n. https://github.com/Nevro/ActionBarSherlock/commit/341490dbaedcbd5781cbf75f8833710380ab4505\n. Probably never! All maven library stuck on android 4.1.1.4 and support library r7 forever... :(\n. Try with latest abs version and with my watson class. If not work, commit some simple sample to your git and post url here... \n. Copy ViewPager from r12 and wait for official ActionBarCompat....\n. ",
    "4nd3250n": "Executed on 2.3.5. Compiled with 4.2.\n. Any news?\n. ",
    "incompleteopus": "I'm experiencing the same problem on a HTC Desire HD (Android 2.3.5). I'm using ActionBarSherlock version 4.2.0 and support library r11.\nThe \"done\" button works for the very first time the contextual action bar is displayed, but after that it does not react immediately when clicked. However, after clicking the done button (when it does not work), clicking a selectable item in a list causes the done button click to be registered (the button is highlighted and the contextual mode is hidden).\nSo the steps are the following:\n1. start action mode\n2. click done -> it works\n3. start action mode\n4. click done -> does not work\n5. click a selectable item -> done button click is registered\n-> steps 3-5 repeat after this -- done button never works properly again\nThe action buttons are not affected by the problem.\n. ",
    "TheNephilim88": "Any news on this? Is a workaround available?\n. ",
    "aperomsik": "Thanks for the pointer. Interesting that PopupMenu in HoloEverywhere depends only on ActionBarSherlock classes, not other HoloEverywhere classes. So if someone needs only PopupMenu, adding the whole HoloEverywhere might be overkill. Still, whatever ActionBarSherlock decides is fine-- just a suggestion.\n. ",
    "toadzky": "Yep, I'm using 4.2. \nIf it helps determine if this is a duplicate, my Action Bar has a SearchView, a Refresh button, and a Help button. I have 2 menu layouts, one for phone and one for tablets. The phone version uses an overflow menu so the actions don't cut off the title. \n. ",
    "raphaelfrota": "Same issue here:\n02-13 11:02:56.648: E/dalvikvm(22529): Could not find class 'com.actionbarsherlock.widget.SearchView$11', referenced from method com.actionbarsherlock.widget.SearchView.\n. ",
    "pykaso": "Could not find class 'com.actionbarsherlock.widget.SearchView$5', referenced from method com.actionbarsherlock.widget.SearchView.\n. ",
    "yccheok": "Dear JakeWahrton, just wondering, do you wrote https://snipt.net/tweakt/sherlocklistviewjava/ ? Is there any reason why it is not being accepted into your great actionbarsherlock?\n. ",
    "apkelly": "I'm seeing the same problem too, I thought it might have been my code, but this gives me hope that it maybe related to the library...however I haven't seen it happen with the ABS Demos or Fragments applications.\n. @abredykhin Do you have a custom Application class in your app? I do and in there I create my image cache for downloads etc, I wonder if creating the disk part of the cache is causing the delay in startup.\n. Have you tried using the latest dev branch? ActionBarSherlock as far as I know doesn't do an awful lot on ICS and JB devices as they already have a native ActionBar, it's only on earlier devices where ABS gets heavily involved.\n. ",
    "2m": "On API 15 text also wraps.\n\n. Specifying width of layout_weight resulted in the same result. Will add sample to known-bugs project,\n. Pull request submitted.\n. ",
    "karabox": "Yep =(\nAndroid 4.2.1 \n+\npackage=\"com.actionbarsherlock\"\nandroid:versionCode=\"100\"\nandroid:versionName=\"4.2.0\"\n+\nandroid-support-v13.jar 350\u00a0075  bytes\n. http://stackoverflow.com/questions/11992173/android-actionbar-padding-left-of-first-tab\na similar problem ?\n. tried to use the latest android-support-v13.jar  402,581 bytes the bug remains =(\n. I did some tests, it is a bug to Google Framework\npardon me =)\nAndroid 2.3.3  + SAB\n\nis normal\n. ",
    "ToniAlvarez": "This was introduced in 4.2.0 release, I downgraded to 4.1.0 and the problem is solved.\nNow the ShareActionProvider looks perfect after use it for first time:\n\n. I can't reproduce the error because I test my apps with Android 4.2, and I think this bug only affects to Gingerbread and erlier versions, and the bug is not affecting to emulator.\n. Im using \"Theme.Sherlock\" style, and I have this exact error in my Developer Console. This is my Manifest:\n<application\n    android:icon=\"@drawable/ic_launcher\"\n    android:label=\"@string/app_name\"\n    android:theme=\"@style/Theme.Sherlock\" >\n. ",
    "sevar83": "Hi Simon, 10x for the reply! I create the searchview like one of the samples...\n```\n            @Override\n    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater)\n    {\n        inflater.inflate(R.menu.activity_project_list, menu);\n    // Place an action bar item for searching.\n    MenuItem itemSearch = menu.findItem(R.id.action_search);\n    View searchView = SearchViewCompat.newSearchView(getActivity());\n    if (searchView != null)\n    {\n        SearchViewCompat.setOnQueryTextListener(searchView, new OnQueryTextListenerCompat()\n        {\n            @Override\n            public boolean onQueryTextChange(String newText)\n            {\n                // Called when the action bar search text has changed. Since this\n                // is a simple array adapter, we can just have it do the filtering.\n                mCurFilter = !TextUtils.isEmpty(newText) ? newText : null;\n                getListAdapter().getFilter().filter(mCurFilter);\n                return true;\n            }\n        });\n        itemSearch.setActionView(searchView);\n    }\n}\n\n```\n. Cool, 10x very much, bro! It looks as it should now!\nI made it in this way:\nProjectListActivity activity = (ProjectListActivity) getActivity();\nView searchView = SearchViewCompat.newSearchView(activity.getSupportActionBar().getThemedContext());\nIf the devs are reading this... I suggest them to make this change in LoaderCustomSupport sample of ABS Demos accordingly.\n. ",
    "DDRBoxman": "Ah, that makes more sense. I was looking at the menu on a 2.3 device and it had the incorrect background color, not text color.\nShould have checked on the Nexus S first.\n. I noticed that the background value for the CompactMenu themes is set to null. Would it have any adverse effects if those were set to the theme background colors?\n. I did some research into the panel menu background and this seems to make the most sense.\n. In that case it seems that the only way to style that is to bypass the native menu completely and use a custom panel in it's place. \n. ",
    "duncandee": "Have you tried look / posting @ stackoverflow.com\nOn Wed, Dec 19, 2012 at 7:21 AM, coder015 notifications@github.com wrote:\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/747.\n. Use getSupportLoaderManager();\n\nOn Monday, December 24, 2012, ikermart wrote:\n\nI'm having the same issue too.\nHappens, when I try to refresh a Fragment from a FragmentActivty.\nFrom FragmentActivity (onOptionsItemSelected(MenuItem item)) I call a\npublic method of a Fragment that request a\ngetLoaderManager().restartLoader(0x01, null, this);\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/752#issuecomment-11652883.\n. \n",
    "sherpya": "you need to intercept onKeyUp\n. ``` java\nimport java.lang.reflect.Method;\nimport android.annotation.SuppressLint;\nimport android.app.Activity;\nimport android.graphics.drawable.Drawable;\nimport android.support.v7.app.ActionBar;\nimport android.support.v7.app.ActionBarActivity;\nimport android.util.Log;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ImageView;\n@SuppressLint(\"InlinedApi\")\npublic class ActionBarIndicator\n{\n    private static final String TAG = \"ActionBarIndicator\";\n    private final SetIndicatorInfo mInfo;\n    private ActionBar mActionBar;\npublic ActionBarIndicator(ActionBarActivity activity)\n{\n    mInfo = new SetIndicatorInfo(activity);\n    mActionBar = activity.getSupportActionBar();\n}\n\npublic void setActionBarUpIndicator(Drawable drawable){\n    if (mInfo.setHomeAsUpIndicator != null)\n    {\n        try\n        {\n            mInfo.setHomeAsUpIndicator.invoke(mActionBar, drawable);\n        } catch (Exception e)\n        {\n            Log.w(TAG, \"Couldn't set home-as-up indicator via JB-MR2 API\", e);\n        }\n    }\n    else if (mInfo.upIndicatorView != null)\n        mInfo.upIndicatorView.setImageDrawable(drawable);\n    else\n        Log.w(TAG, \"Couldn't set home-as-up indicator\");\n}\n\npublic void setActionBarUpIndicator(Drawable drawable, int contentDescRes)\n{\n    if (mInfo.setHomeAsUpIndicator != null)\n    {\n        try\n        {\n            mInfo.setHomeAsUpIndicator.invoke(mActionBar, drawable);\n            mInfo.setHomeActionContentDescription.invoke(mActionBar, contentDescRes);\n        } catch (Exception e)\n        {\n            Log.w(TAG, \"Couldn't set home-as-up indicator via JB-MR2 API\", e);\n        }\n    }\n    else if (mInfo.upIndicatorView != null)\n        mInfo.upIndicatorView.setImageDrawable(drawable);\n    else\n        Log.w(TAG, \"Couldn't set home-as-up indicator\");\n}\n\nprivate static class SetIndicatorInfo\n{\n    public Method setHomeAsUpIndicator;\n    public Method setHomeActionContentDescription;\n    public ImageView upIndicatorView;\n\n    SetIndicatorInfo(Activity activity)\n    {\n        try\n        {\n            setHomeAsUpIndicator = ActionBar.class.getDeclaredMethod(\"setHomeAsUpIndicator\", Drawable.class);\n            setHomeActionContentDescription = ActionBar.class.getDeclaredMethod(\"setHomeActionContentDescription\", Integer.TYPE);\n            // If we got the method we won't need the stuff below.\n            return;\n        } catch (NoSuchMethodException e)\n        {\n            // Oh well. We'll use the other mechanism below instead.\n        }\n\n        int id_home = android.R.id.home;\n        View home = activity.findViewById(id_home);\n\n        if (home == null)\n        {\n            id_home = activity.getResources().getIdentifier(\"home\", \"id\", \"android.support.v7.appcompat\");\n            home = activity.findViewById(id_home);\n        }\n\n        if (home == null)\n        {\n            // Action bar doesn't have a known configuration, an OEM messed with things.\n            return;\n        }\n\n        final ViewGroup parent = (ViewGroup) home.getParent();\n        final int childCount = parent.getChildCount();\n        if (childCount != 2)\n        {\n            // No idea which one will be the right one, an OEM messed with things.\n            return;\n        }\n\n        final View first = parent.getChildAt(0);\n        final View second = parent.getChildAt(1);\n        final View up = first.getId() == id_home ? second : first;\n\n        if (up instanceof ImageView)\n        {\n            // Jackpot! (Probably...)\n            upIndicatorView = (ImageView) up;\n        }\n    }\n}\n\n}\n```\nusage\njava\nmActionIndicator = new ActionBarIndicator(this);\nmActionIndicator.setActionBarUpIndicator(getResources().getDrawable(R.drawable.ic_ab_back), 0);\n. yes sorry you must change this line:\nid_home = activity.getResources().getIdentifier(\"home\", \"id\", \"android.support.v7.appcompat\");\nwith\nid_home = activity.getResources().getIdentifier(\"abs__home\", \"id\", \"com.actionbarsherlock\");\nit should work\n. ",
    "ikermart": "I'm having the same issue too.\nHappens, when I try to refresh a Fragment from a FragmentActivty.\nFrom FragmentActivity (onOptionsItemSelected(MenuItem item)) I call a public method of a Fragment that request a getLoaderManager().restartLoader(0x01, null, this);\n. I changed in a different ways, getSupportLoaderManager(), but still throws the same error.\n@Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        GuiaFragment refreshGuiaFragment = (GuiaFragment) getSupportFragmentManager().findFragmentByTag( tab );\n        switch (item.getItemId()) {\n        case android.R.id.home:\n            toggle();\n            break;\ncase R.id.guia_tudos:\n        mOptionsMenu.findItem(R.id.guia_choose_type).setTitle(\"Tudos\");\n        refreshGuiaFragment.refreshFragment(getSupportLoaderManager(), 0);\n        break;\n}}\nThen on my refreshFragment method:\npublic void refreshFragment(LoaderManager loader, int skip_profile){\n        mParams.putInt(\"skip-profile\", skip_profile);\n        loader.restartLoader(0x01, null, this);\n//      getActivity().getSupportLoaderManager().restartLoader(0x01, null, this);\n//      getLoaderManager().restartLoader(0x01, null, this);\n    }\n. ",
    "realdadfish": "The above code from @edisonw is crashing with a ClassCastException. The problem is that mAnchor is a WeakReference<View>, not a plain View, so the correct check should look like this:\n\nWeakReference<View> mAnchor = (WeakReference<View>) fAnchor.get(<<instance>>);\nif (mAnchor == null || mAnchor.get() == null) {\n    return;\n} else {\n    originalListener.onScrollChanged();\n}\n\n. @edisonw Actually I looked at the PopupWindow implementations in 1.5, 1.6, 2.2 and 2.3 versions via grepcode and they all had a WeakReference<View>, so I really wonder how this could ever work properly :)\n. ",
    "jromero": "It appears that this \"fix\" from @edisonw should go into: com.actionbarsherlock.internal.widget.IcsListPopupWindow\nChanges on 4.2:\n(If it works for everyone maybe someone could create a patch/pull request)\n```\npublic IcsListPopupWindow(Context context, AttributeSet attrs, int defStyleAttr) {\n    mContext = context;\n    mPopup = new PopupWindow(context, attrs, defStyleAttr);\n    mPopup.setInputMethodMode(PopupWindow.INPUT_METHOD_NEEDED);\n    fixPopupWindow(mPopup);\n}\n@SuppressLint(\"NewApi\")\npublic IcsListPopupWindow(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {\n    mContext = context;\n    if (Build.VERSION.SDK_INT < Build.VERSION_CODES.HONEYCOMB) {\n        Context wrapped = new ContextThemeWrapper(context, defStyleRes);\n        mPopup = new PopupWindow(wrapped, attrs, defStyleAttr);\n    } else {\n        mPopup = new PopupWindow(context, attrs, defStyleAttr, defStyleRes);\n    }\n    mPopup.setInputMethodMode(PopupWindow.INPUT_METHOD_NEEDED);\n    fixPopupWindow(mPopup);\n}\nprivate void fixPopupWindow(final PopupWindow window) {\n    if (Build.VERSION.SDK_INT < Build.VERSION_CODES.ICE_CREAM_SANDWICH) {\n        try {\n            final Field fAnchor = PopupWindow.class\n                    .getDeclaredField(\"mAnchor\");\n            fAnchor.setAccessible(true);\n            Field listener = PopupWindow.class\n                    .getDeclaredField(\"mOnScrollChangedListener\");\n            listener.setAccessible(true);\n            final ViewTreeObserver.OnScrollChangedListener originalListener = (ViewTreeObserver.OnScrollChangedListener) listener\n                    .get(window);\n            ViewTreeObserver.OnScrollChangedListener newListener = new ViewTreeObserver.OnScrollChangedListener() {\n                @Override\n                public void onScrollChanged() {\n                    try {\n                        WeakReference mAnchor = (WeakReference) fAnchor.get(window);\n                        if (mAnchor == null || mAnchor.get() == null) {\n                            return;\n                        } else {\n                            originalListener.onScrollChanged();\n                        }\n                    } catch (IllegalAccessException e) {\n                        e.printStackTrace();\n                    }\n                }\n            };\n            listener.set(window, newListener);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n```\n. ",
    "ksperling": "The real bug in PopupWindow is that when the anchor view is detached, PopupWindow has no way to get to the original ViewTreeObserver anymore. It ends up talking to a new \"floating\" VTO that is local to the detached view, the removeListener call does nothing (the floating VTO is empty), and the lIstener is still on the real (ViewRoot) VTO and has been leaked.\nThe fix that's in ICS (checking for null mAnchor) is really just hiding the problem rather than fixing it -- the listener still leaks, it just doesn't blow up if/when it gets called eventually. The real fix is to prevent the leak by keeping track of the VTO the handler is registered on (see my PR #963).\nThat said, the whole VTO isActive / merge mechanism is kind of broken by design (and the docs about keeping long-lived references are misleading at best). Essentially there are three cases to consider:\n- A listener gets registered via the VTO retrieved from an attached view (i.e. the shared VTO owned by ViewRoot), and unregistered before the view is detached. Everything is fine.\n- A listener gets registered via the VTO retrieved from an attached view. The view is now detached and gets a new (empty) floating VTO. To unregister the listener, a \"long lived\" reference to the original VTO must have been retained, otherwise the listener is leaked.\n- A listener gets registered on a floating VTO retrieved from a detached view. The view is then attached and the VTO gets merged into the shared ViewRoot VTO. At this point we'd need to update our long-lived VTO reference to point to the shared VTO to avoid the leak should the view get detached, unfortunately there seems to be no good way to do that (other than OnAttachStateChangeListener which is only in Honeycomb and up).\nAs far as PopupWindow is concerned, the best approach seems to only register with the VTO if we know we're not dealing with a floating VTO from a detached view, as that allows us to safely unregister the listener later (and there isn't much point anchoring a popup in relation to a view that isn't attached).\n. @m3n0R is your app theme extending an ABS theme? http://actionbarsherlock.com/theming.html\n. mvn clean verify passes for me, the Travis failure seems to be a gradle problem.\n. See my more detailed comment regarding the underlying problems with ViewTreeObserver: https://github.com/JakeWharton/ActionBarSherlock/issues/752#issuecomment-19018122\n. Any chance of releasing a 4.4.1 with the fix in it?\n. ",
    "rotosonic": "Thanks. It worked great, my app is in review at Amazon. I blogged about it also. http://radarbuddy.wordpress.com/2013/01/01/android-ui-update-to-halo-for-android-2-x-to-4-x-devices/  \nHave a belated Happy New Years. \n. ",
    "diegomontoya": "Oops. Misread the doc. The listener is for menu of actionbar, not actionbar menu. Ahhhhhh...\n. ",
    "Eido95": "@diegomontoya, What was your solution for listening to any ActionBar visibility changes using either hide() or show()?\nEDIT:\nMy current solution is to wrap, in each activity I want to handle ActionBar visibility changes, getSupportActionBar().hide() inside custom hideSupportActionBar() method and getSupportActionBar().show() inside custom showSupportActionBar() method, because the Android SDK doesn't provide neither straightforward listening to activity's ActionBar visibility changes nor overriding activity's ActionBar methods.\nConsider the following code as an implementation for the above described solution:\n```\nprivate void showSupportActionBar() {\n    // implement your code here before showing the ActionBar\nthis.getSupportActionBar().show()\n\n}\nprivate void hideSupportActionBar() {\n    // implement your code here before hiding the ActionBar\nthis.getSupportActionBar().hide()\n\n}\n``\nUseshowSupportActionBar()andhideSupportActionBar()` respectively as desired to get your code running.. ",
    "alaeri": "This fix works in my app.\n. ",
    "GuillaumeLachaud": "I know this issue has been closed for a while now but it might be helpful to others : \nJust add\n<item name=\"listPopupWindowStyle\">@style/Widget.Sherlock.Light.ListPopupWindow</item>\nto your theme whom parent is Sherlock.Light.DarkActionBar and everything works fine.\n. ",
    "marvinlix": "\n. ",
    "lawrence615": "Hey Simon,\nThanks a lot for your help. I removed the mSherlock and the other action bar disappeared. The reason for having it was because initially the class was extending Activity instead of SherlockActivity. Since I was not understanding that line I left it that way when I was modifying the class.\nThe sign in and cancel buttons were initially at the bottom but decided to put them at the action bar just to change the way I always design my login page. But I can remove them if that's not the right way to do it.\nThe icons I will change them, they were just for testing.\nThanks again for the help, I greatly appreciate.\n. ",
    "robUx4": "This is a heavy class to use. An interface that mimics android.util.Log is a lot easier to implement and calls are easy to replace without making any mistakes. \n. Not sure having the static boolean centralized will remove the code like it does now (pretty sure it doesn't). \nIf you haven't seen my G+ post, the idea is to be able to redirect the logs of any libs to your own logger. The java Logger could fit but is too heavy. A simple interface that just replaces the Android Log class is easy for everyone. \nThe question of whether a lib needs some logs known to the upper level is another question that varies depending on each lib. \n. I understand, but the ones that are behind a BuildConfig.DEBUG check will not be executed (and likely not generate code). The others are supposed to be noticed, but if the library user want to generate 0 logs, they can set their own Logger that does nothing.\n. ",
    "xylian": "I got a feeling that when list navigation enabled, actions are always moved to bottom, no matter if there is space or not. It's not such a big pain, but it starts to be when I enable action mode. I got whole upper action bar free, but still action mdoe actions are on the bottom\n. Didn't know that. Still kinda curious, where are the UI set methods gone?\n. getSherlock()? What class owns such method? There is none I can use from SherlockFragmentActivity\n. Oh it's protected. That explains a lot. Thanks\n. Which duplicated attribute?\n. I did that, didn't I?\n. ",
    "milek": "I've probably not stated myself very correctly. I understand that setting windowNoTitle to true will result in ActionBar not there, and getSupportActionBar() returning null, that's very correct. But my problem is a bit different. Let my try to explain once more\nI have activity that in AndroidManifest.xml has setup theme that contains following entries in style\nxml\n<style name=\"ThemeNoTitle\" parent=\"Theme.Sherlock.Light.DarkActionBar\">\n    <item name=\"windowNoTitle\">true</item>\n    <item name=\"android:windowNoTitle\">true</item>\n</style>\nNow when Activity is launched, in onCreate() I have following code\n``` java\nprotected void onCreate(Bundle bundle)\n{\n    setTheme(createCinema().getCinemaTheme());\n    super.onCreate(bundle);\ngetSupportActionBar().setLogo(R.drawable.helios_logo);\ngetSupportActionBar().setTitle(\"\");\n\n}\n```\nMethod getCinemaTheme() returns theme ThemeHelios which looks like this\nxml\n<style name=\"ThemeHelios\" parent=\"Theme.Sherlock.Light.DarkActionBar\">\n    <item name=\"actionBarStyle\">@style/Widget.Helios.ActionBar</item>\n    <item name=\"actionBarItemBackground\">@drawable/actionbar_item_background</item>\n    <item name=\"android:actionBarStyle\">@style/Widget.Helios.ActionBar</item>\n    <item name=\"android:actionBarItemBackground\">@drawable/actionbar_item_background</item>\n</style>\nNow the reason I'm posting:\n- On Android 4.0.4 this works correctly, I don't have NullPointerException on getSupportActionBar()\n- On Android 2.3.4 (real device and emulator) this doesn't work, I receive NullPointerException when I want to access ActionBar. Reason for that is, original theme that came from manifest contains style windowNoTitle and ActionBarSherlock (or Android 2.x, for that matter) when applying new theme still thinks that windowNoTitle is set, while it isn't and should be ignored.\nI hope I stated this correctly :-)\nAt the moment I've found workaround to add \nxml\n<item name=\"windowNoTitle\">false</item>\nto theme ThemeHelios which will explicitly override previous value.\nI filled this as issues, as this is not consistent across native implementation and custom.\n. ",
    "mdumrauf": "Happens also with Jelly Bean.\n. ",
    "thphuoc": "for the problem getSupportActionBar() always return NULL\nThat is because you set theme NoActionBar in AndroidManifest.xml\nTheme.Sherlock.Light.NoActionBar\nIf your application does not use action bar then no need use that method.\n. ",
    "trancebeat": "No crash in runtime.\nBut, the Eclipse debugger is stopped when I have debugged on Android 2.3 device, and the logcat shows this error message.\nWhen my app is running on Android 4.1 device, the debugger does not stop and show no error logcat message.\nI found like this issue in stackoverflow.\nhttp://stackoverflow.com/questions/14110399/classnotfoundexception-with-actionbarsherlock-searchview\nI only feel strange about this issue.\n. ",
    "CoatedMoose": "This should work. I hope.\nThanks for your patience. The contribution guidelines page didn't mention this, but I should have known better anyway.\n. ",
    "IgorGanapolsky": "Is this a Lint error, or a compilation error?  If it is just a lint error then you can get rid of it by right clicking your android project (in Eclipse) and choose Android Tools-> Clear Lint Markers\n. I see the addTab(Tab tab, boolean setSelected) method, but where in the Styled project is that method called to set the first tab as selected?\n. You mean in ActionBarImpl.java?\n    @Override\n    public void addTab(Tab tab) {\n        addTab(tab, mTabs.isEmpty());\n    }\nI just don't see where that method is referenced by the library...\n. Aaah, I see the method documentation now:\n\"Add a tab for use in tabbed navigation mode. The tab will be added at the end of the list. If this is the first tab to be added it will become the selected tab.\"\nThank you!\n. There should have been some output in the LogCat, such as it couldn't fetch the ad or there wasn't enough ad inventory.  Are you running into this problem on a real device or in the emulator??\n. I am getting the same problem.  I must delete the android-support-v4.jar file from actionbarsherlock/libs, and relink it to my own project's /libs folder.  But that creates a circular dependency!\n. ",
    "f2prateek": "not a complete fix yet :(\n. waiting on this to be merged https://github.com/travis-ci/travis-cookbooks/pull/137\n. Can you post the relevant code?\n. You can't do this directly with typecasting.\nActivity -> SherlockActivity\nActivity -> FragmentActivity -> Watson -> SherlockFragmentActivity\nAs you can see the, hierarchies are not common. Only Activity is common between SherlockFragmentActivity and SherlockActivity.\n. ",
    "gildegoma": "Thanks @f2prateek to refer to travis issue, which actually does not seem to be the good way to fix this problem. Travis core team is aware of this integration problem, and plans to provide as soon as possible a solution for Android projects (maybe a 32-bit worker dedicated to android platform). It would be nice to report to Google, that a full 64-bit packaging for their SDK would help keeping modern servers clean ;-)\n. ",
    "yaming116": "I also encountered the same problem, even I click SearchButton, onOptionsItemSelected method will not be executed.\n. Why I enter a letter,SearchAutoComplete did not appear android no  filter. How to support voice\n. ",
    "lity": "I created a project to show this issue. Please see https://github.com/lity/BugReproduce\n. How to make the Travis to retry? I modified an annotation.\n. I think what shows up fine is the SearchView  of  android official  version. I committed  the  test case with  android official SearchView to tell you the correct behavior of search suggestions. Notice the  import part and manually  switch to ActionBarSherlock version, no  suggestions pop up.\n. ",
    "MattyBoy4444": "This also happens to me.  If you switch to Theme.Sherlock.Light it seems to work.\n. Anything we can do to get it to work??\n. ",
    "xiaoym": "So many thanks,  this puzzled me for a few days. Wish quickly fixed.\n. ",
    "petrnalevka": "Hello, thanks a lot for the response. I will try to investigate this. But on the other hand this would probably cause the dialogs to fail on on all 2.3 firmwares. But unfortunately I cannot simulate this issue on some 5 phones with 2.3.X in my surrounding...\n. Thank you guys for your help. But is there anything we could do about it apart from using a custom layout in all our dialogs? I need to approve this but it seems only dialogs with items (adapter) are affected. But for example the whole PreferenceActivity would need to be replaced as the issue occurs for example when changing a ListPreference.  Thank you.\n. Is this equivalent to \"Don't use ABS\" or am I missing something? \nIn fact we don't use any special attributes or styles. The issue may be reproduced on the affected firmwares just by creating a SherlockActivity with the Theme.Sherlock and making the following call:\nAlertDialog.Builder builder = new AlertDialog.Builder(context);\n    builder.setTitle(\"Hello\");\n    builder.setItems(new String[] {\"test1\", \"test2\"}, new DialogInterface.OnClickListener() {...});\n    builder.create();\nThis will cause the NumberFormatException\nThanks a lot.\n. Hello Simon, you are completely right. Thanks a lot for pointing this out and resolving our issue. We did indeed have such attributes in the pre-v11 values. Sorry for choosing probably a wrong place for the issue and again many thanks.\n. ",
    "dskinner": "thanks, I seem to forget that FragmentActivity is a v4 support lib only class for some reason but just shooting off a question more appropriate for twitter or the likes. Thanks for responding.\n. ",
    "hwrdprkns": "There should probably be a space between the variables and the operator...\n. ",
    "emmby": "what is the right solution?\n. ",
    "TangKe": "OK, got it, Is there any way to provide compatible dropdown feature for lower API level?\n. thx, It seems that sub-menus can not been style in android 4.2.1 by override the popMenuStyle, android:popMenuStyle,  dropDownListViewStyle, android:dropDownListViewStyle\n. ",
    "Ruxton": "Yeap sorry for not following up more, I can confirm this is indeed a Platform bug.\n. ",
    "webbp": "workaround:\nxml\n<SearchView\nandroid:iconifiedByDefault=\"false\"\nandroid:paddingLeft=\"-48dp\"\nandroid:layout_marginLeft=\"10dp\" />\n. ",
    "ikravchenko": "I have checked the native behaviour. You were right. I should have checked it first, sorry. I'll make pull requests to dev thereafter.\n. ",
    "csobrinho": "although you can always fork it and place your own like I did\n. ",
    "mauimauer": "So...any ETA when this will turn up? I'd really like to nest fragments :D\n. ",
    "william-ferguson-au": "Jake, what's happened to getting the android-support jars into Maven central?\nIt's become really hard to maintain builds of open-source projects because you essentially have to manually include the libs in each and every project. Using ABS and HoloEverywhere and anything that relies on the jars a real pain.\nI kind of hoped Google had grown up with the move to Gradle.\n. But there's been nothing released since v4-r7 (which was released by Jake I believe). The support library is now up to v13-r18. That's a long time between drinks.\n. OK, so perhaps there's no 14 through 17, though that's not obvious from the SDKManager.\nBut not sure that it's always version-4.\nLatest SDKManager downloads also include:\n  Android-sdk\\extras\\android\\m2repository\\com\\android\\support\\support-v13\\13.0.0\n  Android-sdk\\extras\\android\\m2repository\\com\\android\\support\\support-v13\\18.0.0\nas well as\n  Android-sdk\\extras\\android\\m2repository\\com\\android\\support\\support-v4\\13.0.0\n  Android-sdk\\extras\\android\\m2repository\\com\\android\\support\\support-v4\\18.0.0\nWhich suggest v4-r13, v4-r18, v13-r13 and v13-r18.\nAnd I don't understand why the SDK Manager downloads 2 Maven repos instead of the artefacts just being deployed to a publicly visible repository.\n. It's also easier for them to manage.\nIt's not making it any easier for us. And there's a lot more of us. :-(\nI'm a huge fan of Maven, but decisions like this and the need to follow the Android design guidelines etc are causing my projects to devolve back to shipping libraries in the source. Very 1990s.\n. ",
    "atilazz": "i slolve my problem by  change this code\n``` java\n    sherlock.setContentView(R.layout.main_switch);\n\n```\nto :\njava\n                 setContentView(R.layout.main_switch);\n. ",
    "Tolriq": "After getting some more information by user the problem is on all android 2.X so internal ABS code when you disable the actionbar in the theme\n<item name=\"android:windowNoTitle\">true</item>\n        <item name=\"android:windowActionBar\">false</item>\nSince this does not happens in official ActionBar for 4.x + and that users can change theme that will or won't show the actionbar is there a way to have this case solved or at least catched on my side ?\n. Because the SDK 22 is now more smart about library dependency :)\nWith the side effect that now when you compile external library of your libraries are no more automatically embed in the final APK.\nYou just need to copy your libraries external JARs to your main application libs :)\n. ",
    "NathanWA": "Since this is closed, does that mean it is fixed?\nI'm seeing crash reports of it since using ActionBarSherlock 4.4\n. ",
    "modislaszlo": "I also see crash reports on SCH I605 and Samsung SGH I747 with ActionBarSherlock 4.2.\n. ",
    "dhaag": "I have a related issue where calling openOptionsMenu() only shows the menu briefly and is then immediately closed. It seems timing dependent, as it seems to almost never happen when running the debugger and certainly doesn't happen when stopped at a breakpoint in the menu code. \n. Well, sure I added the listener OnMenuVisibilityListener. That's how I figured out it was working on a new JB device, but then not on the older GB device.\n. ",
    "kylebuch8": "@cliu903, did you get this figured out? I'm also trying to change the search icon to use the most recently released version of the icon pack from developer.android.com.\n. ",
    "Artgit": "the same issue, this is my question http://stackoverflow.com/questions/16971359/couldnt-change-actionbarsherlock-searchview-icon\n. What is the difference between\nandroid:showAsAction=\"ifRoom\"\nand \nandroid:showAsAction=\"ifRoom|collapseActionView\"\nIn the second variant I'm able to change icon via android:icon=\"@android:drawable/ic_menu_search\"\n. @mparodi , thanks!\n. ",
    "emmx": "http://stackoverflow.com/questions/20123177/how-to-keep-expanded-searchview-on-the-right-side-of-actionbar-while-using-cust\nUsing ActionBarSherlock that would be:\njava\n((View) searchView.getParent()).setLayoutParams(new android.app.ActionBar.LayoutParams(Gravity.RIGHT));\n. ",
    "Igna1980": "Any news on the original post?\n. ",
    "bentalbot91": "Done, if you could just check I did it correctly, that would be great (new to GitHub)\n. ",
    "cketti": "\nWhat does this solve that different resources in menu/ and menu-v14/ wouldn't?\n\nYou want light icons in a dark action bar (regardless of Android version). Now if you only know at runtime which icons  go to the action bar and which ones to the overflow menu, different menu resources don't really help.\n. ",
    "purdyk": "Resolution for the issue can be found on my fork:\nhttps://github.com/purdyk/ActionBarSherlock/commit/30750def631aa4cdd224d4c4550b23e27c245ac4\nI will issue a pull request if you'd like when you move to r11.\nCheers.\n. Yes, I noticed this earlier today and resolved it in a later commit.  Thanks for looking over it.\nProperly recursive implementation is here:\nhttps://github.com/purdyk/ActionBarSherlock/commit/cab97d6a33685963b402b61db1343b3fea802598\n. Looks like a handy tool. I've gone over my changes and resolved all the offending lines created by my changes.\n. ",
    "tkeunebr": "Hey guys! Do you have any idea on when this issue might be addressed?\n. Well that's bad news... This issue is actually preventing me from shipping. I modified Watson.java using the above implementation but I'm still getting duplicated MenuItems when I use child fragments along together with a ViewPager. \n. I'm actually having the same issue, would be cool if someone had a fix :)\n. ",
    "m190": "Hi Nevro, \ndon't you know why inner fragments menu is not destroyed? :) \nI tried to use last abs and your fix, but once created, menu is shown all the time, even if you switch the tab.\nI debugged the code (Watson class), and it look like the menu is destroyed, but on the screen I see other things. \nShould I override onDestroyOptionsMenu or to do something other?\nThanks.\n. ",
    "ekux44": "I can't believe this issue isn't more public. Took me an entire afternoon to isolate this issue in a codebase I'm backporting with ABS\n. ",
    "rddimon": "I have same problem as @m190 \nfor solve this i did:\n@Override\n    public void onPause() {\n        setHasOptionsMenu(false);\n        super.onPause();\n    }\nmaybe another way to fix this in Watson class?\n. I haven't read about Maven and Gradle). Thanks, I'll try use Marven.\n. ",
    "BurntBrunch": "Does the fact that the SDK now ships with a maven repository for the support library (which, frankly, I find to be an awful hack) change the project's stance on this bug? \nIn case you didn't know, there's a repository (that the Gradle builds get automagically) in $ANDROID_HOME/extras/android/m2repository/\n. ",
    "LOG-TAG": "can anybody explain in detail how to solve this bug?  http://stackoverflow.com/questions/14137230/actionbar-menu-items-disappear-in-nestedfragments\n. ",
    "brannpark": "Okay, Anyway thanks for your reply! :)\n. ",
    "kaushikwavhal": "i've tried every possible value for the showAsAction property.Still not helping.\n. ",
    "MaciejCzekanski": "Actually, on older versions of Android it should behave the same way as before. On Android >= 4.2.2 ABS uses native implementation of ActionBar, so there is no work required.\n. ",
    "leonman30": "Just pulled in dev branch, rebuilt and TADA the problem went away!\nLooking forward to the official 4.3.0 release\nThank you!\n. ",
    "Arne517": "Ahh, didn't see it was already requested :) Strangely enough it didn't appear in the list of issues :/\n. ",
    "banxi1988": "well,sorry for cant give more info,it's a chinese MEIZU M9 smartcellphone.\nen,can you give me some tip to find the bug? Thank you.\n. ",
    "andrew-knott": "I've left some detail out of the issue which is important (issue updated). I think it's something to do with the tabbed interface since that is what changes depending on the Android Version.\n. It would be great if someone else could confirm this issue?\n. Example case... Created from the builtin ABS samples,\n1. Replace FragmentStackSupport.java with https://gist.github.com/andrew-knott/5070472\n2. Add the web.xml layout https://gist.github.com/andrew-knott/5070477\n3. Replace FragmentTabs with  https://gist.github.com/andrew-knott/5070465\n4. Add  android.permission.INTERNETto manifest.\nRun the samples and select Tabs example at bottom of Sample list.\nScroll down to the 'Choose Shipping Method' select menu.\nYou will notice that the Jquery Mobile native select menu works once and then they all fail.\nI've tested using the examples page on JqueryMobile:\nhttp://jquerymobile.com/demos/1.0a4.1/docs/forms/forms-selects.html#../../docs/lists/lists-forms.html\nThe selects on the same page work in the browser.\nThe selects work in a standard WebView inside a standard Android TabHost in all versions\nThe selects fail in a standard WebView inside a SherlockFragment/Fragment in a Tabbed interface provided by ActionBarSherlock \n. ",
    "ckra": "API  8 - I can test 10 as well. I will also look at 17.\nI've de-trashed the patch - no more project garbage.\n. I took a look at API 17 sources, and found that the defect is upstream. I'll open an Android ticket.\nhttps://code.google.com/p/android/issues/detail?id=52297\n. ",
    "iamstuffed": "I don't really know if it's absolutely necessary, but according to the documentation linked, it's required. I had issues with the new Gradle based build system validating the AndroidManifest.xml file and failing because it couldn't find the application element. \nOther libraries have an empty application tag. \n. ",
    "linxingyun": "Great! Thanks a lot for the help! \n. ",
    "KonstantinEfimenko": "Hi! But I have same problem. It worked fine until yestarday, when I updated sdk. Now my project compiles, but when it start, I get this errors:\n05-18 16:20:43.478: W/dalvikvm(15143): Unable to resolve superclass of Landroid/support/v4/app/Watson; (111)\n05-18 16:20:43.478: W/dalvikvm(15143): Link of class 'Landroid/support/v4/app/Watson;' failed\n05-18 16:20:43.478: W/dalvikvm(15143): Unable to resolve superclass of Lcom/actionbarsherlock/app/SherlockFragmentActivity; (119)\n05-18 16:20:43.478: W/dalvikvm(15143): Link of class 'Lcom/actionbarsherlock/app/SherlockFragmentActivity;' failed\n05-18 16:20:43.478: W/dalvikvm(15143): Unable to resolve superclass of Lua/privatbank/gps/android/view/outlays/OutlaysListActivity; (277)\n05-18 16:20:43.478: W/dalvikvm(15143): Link of class 'Lua/privatbank/gps/android/view/outlays/OutlaysListActivity;' failed\n05-18 16:20:43.478: E/dalvikvm(15143): Could not find class 'ua.privatbank.gps.android.view.outlays.OutlaysListActivity', referenced from method ua.privatbank.gps.android.view.MainActivity.onClick\n05-18 16:20:43.478: W/dalvikvm(15143): VFY: unable to resolve const-class 754 (Lua/privatbank/gps/android/view/outlays/OutlaysListActivity;) in Lua/privatbank/gps/android/view/MainActivity;\n05-18 16:20:43.478: D/dalvikvm(15143): VFY: replacing opcode 0x1c at 0x000a\nWhat else? I have another small project with just one SherlockActivity and one SherlockListActivity, and this project works fine.\nI tried to create another workspace and restore code in another IDE - same effect.\nI use ActionBarSherlock like progect.\n. xiegeo, thank You. It works.\n. ",
    "xiegeo": "Real smart.\nFor me I also had to include libs, which now appears under 'Android Private Libraries', in export.\nhttp://code.google.com/p/android/issues/detail?id=55304\n\nNikolay's workaround works for me:\nFor all projects (app and library):\n1. Right click the project, and choose Properties\n2. Go to Java Build Path-Order and Export.\n3. Tick 'Android Private Libraries'\n. \n",
    "kutothe": "This was driving me mad, thank you xiegeo.\n. ",
    "jasonhaihuang": "Thank you Tolriq, your solution helped me fix my issue, which came up recently after I upgraded my SDK to version 22. \nThank you so much!\n. ",
    "Cealtea": "It works now. Thanks a lot. This was driving me mad too :)\n. ",
    "fabiancz": "Thanks Xiengeo for help. I needed to reorder \"Android Private Libraries\" to first position, to get it working.\n. ",
    "Felixomni": "God bless you, Xiegeo.\n. ",
    "DicksonGT": "Thank you, Xiegeo!\nInterestingly its a warning, not an error, ignored for a while until I spent hours...\n//Remember to clean all libs and projects \n. ",
    "dauglus": "Thanks, Xiegeo!\n. ",
    "daimajia": "Thanks, Xiegeo and Tolriq !!\n. ",
    "jayhilwig": "Xiego/Nikolay solution worked for me as well, thanks.\nOddly, my project would run when built from my Mac but not from Eclipse on my Win7 box.\n. ",
    "allenmanning": "Xiego/Nikolay - thank you!\n. ",
    "Dellaso": "thanks, xiegeo!\n. ",
    "NagaMalleshM": "How to do this in Android Studio on Mac? I dont find a option to tick 'Android Private Libraries'\n. ",
    "Dacesilian": "Yes, I understand. It's unbelievable but I don't have anythink else then basic ABS code and it behaves like this.\n. ",
    "NameX44": "yes of course without it wont works on api > 8 so i have it.\ni followed the tabs pager exemple... \n'''\npublic class AgendaFragment extends SherlockFragment{\n    @Override\n    public void onActivityCreated(Bundle savedInstanceState) {\n        // TODO Auto-generated method stub\n        // Permet d'activer le menu (lance le onCreateOptionMenu)\n        setHasOptionsMenu(true);\n        super.onActivityCreated(savedInstanceState);\n    }\n```\n@Override\npublic boolean onOptionsItemSelected(MenuItem item) {\n    // TODO Auto-generated method stub\n    switch (item.getItemId()){\n    case R.id.action_add:\n            // todo\n        break;\n    }\n    return super.onOptionsItemSelected(item);\n}\n@Override\npublic void onCreateOptionsMenu(com.actionbarsherlock.view.Menu menu,\n        MenuInflater inflater) {\n    super.onCreateOptionsMenu(menu, inflater);\n    menu.clear();\ninflater.inflate(R.menu.menu_main_agenda_list, menu);\n\n}\n```\n}\n'''\ni tried it in the public void onCreate(Bundle savedInstanceState)  method but doesn't work too.\n. ",
    "mikke123": "Nobody? ;(\n. ",
    "sameersegal": "I am on the master branch -- [maven-release-plugin] prepare release 4.2.0. What version should I be using?\n. Sorry about this. I thought I was running 4.2, I did a git checkout / reset and its working. Thanks for the help\n. ",
    "exister": "I have the same problem with api level 12 and 13.\n. No, just 3.\n. ",
    "alphamu": "The problem is only on Android 4.2 only... and some how it seems to be acting peculiar because of how the project is set up. I downloaded the sherlock api demos and they work perfectly! \nWhats so peculiar about the setup I dont know, I have a BaseActivity which is extended by MyMainActivity in which I setup the Spinner and the Intermediate progress indicator... \nI can reproduce it without fail on the Galaxy Nexus on JB 4.2. I dont have the Nexus 4, but I'll try it on my Nexus 7 and see if the same issue occurs.\n. I have changed my code to the point where it is near identical to the api samples and the problem still persists.\nI'm reverting to ABS 4.1 to see if that works better. If the problem is not there in the API samples app, it can't be an OS issue. the only thing that explains that the API samples dont have the same issue is that they are either built on newer or older source.\n. Okay, after using Sherlock 4.1 the issue(s) disappeared. This is definitely a problem with Sherlock 4.2 on JB 4.2.\nThat being said my code seems broken now for other reasons :-P\n. The problem came down the me setting this style attribute\n<item name=\"android:windowBackground\">@null<item>\nThis was supposed to prevent over draw... however it seems to mess around with the spinner in the actionbar and the progress indicator... the problems were only observed in JB 4.2.2 with Sherlock 4.2 and on GB 2.3.3 with Sherlock 4.1... not sure if this is a real bug or not any more.\nNote: Issue disappeared on Android 4.2 when using ABS 4.1 but then it appeared on Android 2.3.3. Similarly when using ABS 4.2 the issue disappears on 2.3.3 but appears on Android 4.2.\n. ",
    "Zordid": "Actually, I think it's okay not to do this do stay consistent. But in my case, even on 4.2.2 it does not work due to me using a custom title. How can I get the clickable title behavior on 4.2.2 using ABS and a custom title? Any hint? Thx!\n. ",
    "andreynovikov": "Just the same as in 2.x - sets an icon before title. If Theme.Holo.Dialog is used.\nAs \"workaround\" I've switched to SherlockDialogFragment which appeared to be more conceptually right in my case. (I'm slowly redesigning my old 2.x application, not writing it from scratch.)\n. ",
    "tucson-tom": "Figured it out.  It had to do with a detached WebView not being cleaned up properly.  The problem manifested itself as a crash in ABS.  Sorry to bother you.\n. My problem wasn't onDestroy() (I ran into a crash bug with code similar to yours as well).  I was replacing the current ad with a new one.  It ended up being fairly simple:\n```\nif (adView != null)\n{\n  RelativeLayout rl = (RelativeLayout)findViewById(R.id.ad_wrapper);\nrl.removeView(adView);\n  adView.destroy();\n}\n```\nI don't know how well findViewById() will work from within onDestroy().  In theory, it should automatically clean it up.\nIMO, the documentation on AdMob and DFP is wrong and, for whatever reason, iOS is listed first, which implies that the Android stuff is being treated like a second-class citizen.\n. @technohowl - Haven't seen any issues with it here but that doesn't mean anything.  Calling a UI function to find a UI element in a call like onDestroy() is just asking for trouble later on if the Android OS changes :)\n. ",
    "pepitoria": "Hi,\nI am having this issue too. I have the problem with a fragment I use to insert ads from admob. \n@tucson-tom how did you make to fix this?\nIn my case is due to this piece of code in onDestroy of the fragment:\nif (adView != null) {\n   adView.destroy();\n}\nIf I remove it, it stops crashing. Admob uses a webview internally so I wonder how did you managed to clean it up.\n. Looks like that solved my issue too. Thanks!\n. ",
    "technohowl": "@tucson-tom \nIt solved my issue too... Did you get into any trouble while using findViewById in ondestroy?\n. ",
    "httpdispatch": "updated project url, previous was wrong\n. The demo may repeat the issue on android 2.1 emulator also. Original shots was from my ICS 4.0.3 device. The last menu item should not disappear and be unavailable even via menu button.\n. Keep digging on this issue. Seems that not exactly adapter.notifyDataSetChanged() causes invalid look, but the requestLayout call by the AdapterView.AdapterDataSetObserver which is listening for the data set changed event in the ListView. @JakeWharton any ideas?\n. ",
    "dungelin": "Yes, this is not ABS.\n. ",
    "kaciula": "On maven, the format of the library is apklib. What is needed is the format aar  . I don't really need for the aar to be up on maven, but just to be able to create the aar for ABS locally. \nThe build.gradle listed above creates the .aar successfully but it crashes when run on device so maybe there are some subtle things I'm missing in regard to ABS. Or maybe the build system is buggy when creating the aar.\n. ",
    "twaddington": "+1 for having an .aar file up in maven central.\n. ",
    "gary-cloudsherpas": "+1 to AAR considering \"Android Studios\" now revolves around gradle\n. ",
    "devesh": "Although I still haven't seen any official Android announcements, I've confirmed with @ducrohet that it's now fine to publish AARs to maven repos, which implies that the package format is now final: https://plus.google.com/u/1/+XavierDucrohet/posts/jYgsQikmSK5\n. ",
    "stefanhoth": "@mosabua Any news on this front? I would LOVE to kick the downloaded version of ASB off my gradle project and include the remote aar just like maven users can.\n. ",
    "ankushg": "@stefanhoth @mosabua I'd love to be able to use an AAR too; I can't even get the dev branch to compile in Android Studio as a module... I always get errors with the R.java or resources.\nI found this: https://github.com/skyisle/abs-aar but am running into an issue with it detecting ABS's resources (https://github.com/skyisle/abs-aar/issues/2) so I'm just hoping someone will get something published as an AAR soon...\n. An update for this would be greatly appreciated!\n. ",
    "codinguser": "So @SimonVT what is recommended to use instead. Release notes just say \"removed dialog themes\".\n. ",
    "panzerfahrer": "Dialogs indeed (can) have an action bar:\nhttps://github.com/android/platform_frameworks_base/blob/master/core/java/android/app/Dialog.java#L266\n. ",
    "austynmahoney": "You're right, just wanted to make sure you didn't forget it :)\n. ",
    "bhaskarmurthy": "As an aside, if I remove the logging statement, it works fine. \n. Sounds good. I'll just comment it out during development.\nThanks for the quick reply.\n. The exception goes away if you have a title for your menu item.\n. ",
    "hooked82": "I have the same issue on stock firmware.  (Galaxy Nexus)\nCommenting out the line of code fixes the problem, but what is the root cause of this?  I've never ran into this until updating to the latest version recently.\n. Is this the real solution?  I didn't see that as a suggestion here otherwise I would have just done that.  Thanks for the tip.\n. ",
    "neoh-zz": "In the inevitable case that the menu item is purposely not set, this nullpointerexception can be solved by making the toString() method in com.android.internal.view.menu.MenuItemImpl class to do a null string check before return:\n@Override\npublic String toString() {\n    return (mTitle != null)? mTitle.toString(): \"\";\n}\n. ",
    "Derevko": "I've this issue also in my production build when running in Android 2.x :\\\n```\nE/AndroidRuntime( 1013): FATAL EXCEPTION: main\nE/AndroidRuntime( 1013): java.lang.NullPointerException\nE/AndroidRuntime( 1013):    at com.actionbarsherlock.internal.view.menu.MenuItemImpl.toString(MenuItemImpl.java:489)\nE/AndroidRuntime( 1013):    at java.lang.StringBuilder.append(StringBuilder.java:203)\nE/AndroidRuntime( 1013):    at android.support.v4.app.Watson.onMenuItemSelected(Watson.java:115)\nE/AndroidRuntime( 1013):    at com.actionbarsherlock.ActionBarSherlock.callbackOptionsItemSelected(ActionBarSherlock.java:603)\nE/AndroidRuntime( 1013):    at com.actionbarsherlock.internal.ActionBarSherlockCompat.onMenuItemSelected(ActionBarSherlockCompat.java:516)\nE/AndroidRuntime( 1013):    at com.actionbarsherlock.internal.view.menu.MenuBuilder.dispatchMenuItemSelected(MenuBuilder.java:744)\nE/AndroidRuntime( 1013):    at com.actionbarsherlock.internal.view.menu.MenuItemImpl.invoke(MenuItemImpl.java:148)\nE/AndroidRuntime( 1013):    at com.actionbarsherlock.internal.view.menu.MenuBuilder.performItemAction(MenuBuilder.java:885)\nE/AndroidRuntime( 1013):    at com.actionbarsherlock.internal.view.menu.ActionMenuView.invokeItem(ActionMenuView.java:510)\nE/AndroidRuntime( 1013):    at com.actionbarsherlock.internal.view.menu.ActionMenuItemView.onClick(ActionMenuItemView.java:146)\nE/AndroidRuntime( 1013):    at android.view.View.performClick(View.java:2506)\nE/AndroidRuntime( 1013):    at android.view.View$PerformClick.run(View.java:9112)\nE/AndroidRuntime( 1013):    at android.os.Handler.handleCallback(Handler.java:587)\nE/AndroidRuntime( 1013):    at android.os.Handler.dispatchMessage(Handler.java:92)\nE/AndroidRuntime( 1013):    at android.os.Looper.loop(Looper.java:130)\nE/AndroidRuntime( 1013):    at android.app.ActivityThread.main(ActivityThread.java:3835)\nE/AndroidRuntime( 1013):    at java.lang.reflect.Method.invokeNative(Native Method)\nE/AndroidRuntime( 1013):    at java.lang.reflect.Method.invoke(Method.java:507)\nE/AndroidRuntime( 1013):    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:864)\nE/AndroidRuntime( 1013):    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:622)\nE/AndroidRuntime( 1013):    at dalvik.system.NativeStart.main(Native Method)\n```\n. ",
    "jeanmatthieud": "I have the same issue. The FragmentTransaction seems to be commited between each tab change, but not after the call of getSupportActionBar().removeAllTabs().\n. After some investigations, it seems that the custom implementation of the ActionBar commits the fragment transaction, but not the native one.\n. ",
    "gonzalo-rodriguez": "Have you found at least a workaround for this? I'm getting overlapping fragments all over the place because of this... :(\n(Thanks!)\n. ",
    "ElMassimo": "I have replicated the issue with the 4.3.1\n. ",
    "worr": "How am I supposed to use ActionBarSherlock in code that overrides these methods then?\n. ",
    "ohmerhe": "Thank you!\nI get it and solve it perfect.\n------------------ \u539f\u59cb\u90ae\u4ef6 ------------------\n\u53d1\u4ef6\u4eba: \"Jake Wharton\"; \n\u53d1\u9001\u65f6\u95f4: 2013\u5e744\u670824\u65e5(\u661f\u671f\u4e09) \u665a\u4e0a11:32\n\u6536\u4ef6\u4eba: \"JakeWharton/ActionBarSherlock\"; \n\u6284\u9001: \"ohmerhe\"; \n\u4e3b\u9898: Re: [ActionBarSherlock] how to get click event of home item? (#911)\nWhen the user touches the icon, the system calls your activity's onOptionsItemSelected() method with the android.R.id.home ID. In response, you should either start the home activity or take the user one step up in your application's structural hierarchy.\nvia http://developer.android.com/guide/topics/ui/actionbar.html#Home\n\u2014\nReply to this email directly or view it on GitHub.\n. ",
    "kdhr83": "I also raised a question on stackoverflow, from where I think it not a question about API, but how to style action bar in xml.\n. this is what I asked and some nice guy suggested a possibility while I couldnt follow it to make it effect\nhttp://stackoverflow.com/questions/16189877/possible-to-change-text-size-color-for-actionbar/16205463#16205463\n. Hi, great to see reply from author. In values/themes.xml\n<style name=\"Widget.Carrental.TitleTextStyle\" parent=\"TextAppearance.Sherlock.Widget.ActionBar.Title\">\n    <item name=\"android:textSize\">@dimen/action_bar_title_text_size</item>\n</style>\n<style name=\"Theme.Carrental.Light.DarkActionBar\" parent=\"Theme.Sherlock.Light.DarkActionBar\">\n    <item name=\"titleTextStyle\">@style/Widget.Carrental.TitleTextStyle</item>\n</style>\n\nand in values-v11/themes.xml\n<style name=\"Theme.Carrental.Light.DarkActionBar\" parent=\"Theme.Sherlock.Light.DarkActionBar\">\n    <item name=\"titleTextStyle\">@style/Widget.Carrental.TitleTextStyle</item>\n    <item name=\"android:titleTextStyle\">@style/Widget.Carrental.TitleTextStyle</item>\n</style>\nI thought the android:textSize will override that defined in your library, but it makes no difference.\n. ",
    "futureer": "you can clear the query text in the editbox of SearchView after executing submit method for the first time by adding \"sv.setIconified()\"after your onSubmitQuery(),so that codes of submit method won't run as ACTION_UP triggers onQueryTextSubmit() because you have just empty querytext.\n. ",
    "droidster": "I also faced this problem with SearchView on HTC desire running Android 2.2. The search intent is called twice. Works Alright on Nexus 4 running 4.3. \n. ",
    "Ahmy000": "I also faced this problem with SearchView on Emulator while input Enter with my hard keyboard.\n. ",
    "vineetjain495": "Thanks #futureer...its worked\n. ",
    "GoMino": "The crash happen when trying to reselect a tab that has not been added to the actionbar (compat mode) the crash still happen in the native implementation, but I didn't have the time to report the problem yet.\n. ",
    "azwar": "@ character is not integer type, you can remove it if you want to parse to integer\n. I also have this problem before. There is an issue with Share Action Provider widget, caused by ActionbarSherlock style. While you wait this issue to be resolved, you can use Theme.Sherlock.Light.DarkActionBar  as your AppBaseTheme to be overide with your style. It works for me.\n. ",
    "androidder": "ok I find it!\n<item name=\"android:displayOptions\"></item>\n<item name=\"displayOptions\"></item>\n. ",
    "rk4an": "the last line missing, and why we have quote around text? thanks,\nabs__searchview_description_voice\n. ",
    "ds23": "Learn to script by linux or another programs( ubuntu or pyton) another\nthink there's aks or view it on gifhub thx and have a nice day from\nberlin...\nAm 05.05.2013 18:41 schrieb \"signpainter\" notifications@github.com:\n\nI'm using ABS 4.2.0 and a custom Theme which I created with\nhttp://jgilfelt.github.io/android-actionbarstylegenerator/ It relies on\nthe Dark Theme. The icons I use are white (80% opacity as suggested by\nGoogle). On pre-3.0 devices the overflowing menu entries are moved to the\noptions menu accessed via the menu key.\nThe problem is that the background color of the options menu still is\nwhite and therefore the icons are nearly invisible and only the text is\nvisible. How can this be solved?\nI would expect the color of the options menu to be changed to a dark\ncolor. Otherwise it might be possible to use dark icons for the overflowing\nitems.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/926\n.\n. \n",
    "vvhof": "http://stackoverflow.com/a/12975254\n. ",
    "yuzhongxingke": "thank you very much!You are very good!\n. ",
    "martinpelant": "I have this stackTrace from sony Xperia pro running 4.0.4\njava.lang.RuntimeException: Unable to start activity ComponentInfo{cz.eman.imes/cz.activity.TrafficActivity}: java.lang.NullPointerException\n    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1967)\n    at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:1992)\n    at android.app.ActivityThread.access$600(ActivityThread.java:127)\n    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1158)\n    at android.os.Handler.dispatchMessage(Handler.java:99)\n    at android.os.Looper.loop(Looper.java:137)\n    at android.app.ActivityThread.main(ActivityThread.java:4441)\n    at java.lang.reflect.Method.invokeNative(Native Method)\n    at java.lang.reflect.Method.invoke(Method.java:511)\n    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:784)\n    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:551)\n    at dalvik.system.NativeStart.main(Native Method)\nCaused by: java.lang.NullPointerException\n    at cz.fragment.traffic.ParkingListFragment.onCreateOptionsMenu(ParkingListFragment.java:189)\n    at android.support.v4.app.Watson.onCreatePanelMenu(Watson.java:55)\n    at com.actionbarsherlock.ActionBarSherlock.callbackCreateOptionsMenu(ActionBarSherlock.java:559)\n    at com.actionbarsherlock.internal.ActionBarSherlockNative.dispatchCreateOptionsMenu(ActionBarSherlockNative.java:65)\n    at com.actionbarsherlock.app.SherlockFragmentActivity.onCreatePanelMenu(SherlockFragmentActivity.java:165)\n    at com.android.internal.policy.impl.PhoneWindow.preparePanel(PhoneWindow.java:407)\n    at com.android.internal.policy.impl.PhoneWindow.invalidatePanelMenu(PhoneWindow.java:758)\n    at com.actionbarsherlock.internal.ActionBarSherlockNative.dispatchInvalidateOptionsMenu(ActionBarSherlockNative.java:52)\n    at com.actionbarsherlock.app.SherlockFragmentActivity.invalidateOptionsMenu(SherlockFragmentActivity.java:150)\n    at com.actionbarsherlock.app.SherlockFragmentActivity.supportInvalidateOptionsMenu(SherlockFragmentActivity.java:156)\n    at android.support.v4.app.Fragment.setHasOptionsMenu(Fragment.java:763)\n    at cz.fragment.traffic.ParkingListFragment.onCreate(ParkingListFragment.java:104)\n    at android.support.v4.app.Fragment.performCreate(Fragment.java:1437)\n    at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:877)\n    at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1088)\n    at android.support.v4.app.BackStackRecord.run(BackStackRecord.java:682)\n    at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1444)\n    at android.support.v4.app.FragmentActivity.onStart(FragmentActivity.java:551)\n    at cz.activity.base.BaseFragmentActivity.onStart(BaseFragmentActivity.java:161)\n    at android.app.Instrumentation.callActivityOnStart(Instrumentation.java:1133)\n    at android.app.Activity.performStart(Activity.java:4475)\n    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1940)\n    ... 11 more\n. Ok thx.\njust of pure curiosity, is it officially documented somewhere that I shouldn't call it from onCreate?\n. Because on this page it says \n\" In order for this method to receive calls, however, you must call setHasOptionsMenu() during onCreate(), to indicate that the fragment would like to add items to the Options Menu (otherwise, the fragment will not receive a call to onCreateOptionsMenu()).\"\nhttp://developer.android.com/guide/components/fragments.html\n. ",
    "takashius": "well, the click does not work\n. ",
    "vinceng": "This is because ActionBarDrawerToggle expects the android version of MenuItem not the actionbar sherlock version.\n. ",
    "ethervoid": "Yep i had not make the question correctly. What im asking for is if there\nwill be a way to implement this with ABS :)\n\nMario de Frutos\nEl 16/05/2013, a las 21:48, vinceng notifications@github.com escribi\u00f3:\nThis is because ActionBarDrawerToggle expects the android version of\nMenuItem not the actionbar sherlock version.\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/941#issuecomment-18024584\n.\n. Great i,ve seen that issue yesterday but i have not time to debug it. Thx\n:)\n\nMario de Frutos\nEl 22/05/2013, a las 04:29, Anton Lopyrev notifications@github.com\nescribi\u00f3:\nIt's weird, but it only worked when I manually called syncState:\nmMenuToggle = new ActionBarDrawerToggle(this, mMenuDrawer,\nR.drawable.ic_drawer, R.string.app_name,\nR.string.app_name);mMenuToggle.syncState();mMenuDrawer.setDrawerListener(mMenuToggle);\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/941#issuecomment-18253999\n.\n. Indeed\nWhat i've done is a new style called Root, that applies style for the icon\n\n        <item name=\"homeAsUpIndicator\">@drawable/ic_slide_menu</item>\n    \nEl 23/05/2013, a las 11:05, Kang Kyung Koo notifications@github.com escribi\u00f3:\n\n@tokudu But in Gingerbread, syncState() doesn't work. :( \"ic_drawer\" doesn't applied.\n\u2014\nReply to this email directly or view it on GitHub.\n. In my case i'm doing there and does not work.\n\nEl 25/05/2013, a las 19:04, patriksletmo notifications@github.com escribi\u00f3:\n\n@kyungkoo Make sure you call syncState() in onPostCreate(Bundle savedInstanceState), like this:\n@Override\nprotected void onPostCreate(Bundle savedInstanceState) {\n    super.onPostCreate(savedInstanceState);\nactionbarDrawerToggle.syncState();\n}\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "troymccabe": "Quick temporary workaround:\npublic boolean onOptionsItemSelected(MenuItem item) {\n        switch (item.getItemId()) {\n            case android.R.id.home:\n                if (mDrawerLayout.isDrawerOpen(mDrawerList)) {\n                    mDrawerLayout.closeDrawer(mDrawerList);\n                } else {\n                    mDrawerLayout.openDrawer(mDrawerList);\n                }\n                return true;\n. @tokudu That isn't ABS, you're missing the initialization that is mentioned here: http://developer.android.com/training/implementing-navigation/nav-drawer.html#ActionBarIcon (more comments here: http://www.reddit.com/r/androiddev/comments/1eldjx/android_ui_patterns_the_new_navigation_drawer/ca1q5ox?context=3 )\n. Feel free to message me (reddit, here, troymccabe at gmail) if it's still not cooperating.\n. ",
    "tokudu": "There is another issue is that the up caret icon is not replaced with the new sliding ic_drawer icon.\n. Weird. For some reason it still doesn't work for me. I'll debug. Thanks!\n. It's weird, but it only worked when I manually called syncState:\njava\nmMenuToggle = new ActionBarDrawerToggle(this, mMenuDrawer, R.drawable.ic_drawer, R.string.app_name, R.string.app_name);\nmMenuToggle.syncState();\nmMenuDrawer.setDrawerListener(mMenuToggle);\n. ",
    "leofirespotter": "Same issue for me, I have all the. Even when I build https://github.com/tobykurien/SherlockNavigationDrawer\n. ",
    "kyungkoo": "@tokudu But in Gingerbread, syncState() doesn't work. :( \"ic_drawer\" doesn't applied. \n. @ethervoid Thanks :) it works well :) \n. @patriksletmo  yes, I used that method.\n@ethervoid This is my sample app, try this :D \nhttps://github.com/kyungkoo/SampleNavigationDrawer.git\n. @aeroperf  maybe this sample will help you. :D \nhttps://github.com/antoniolg/LimeApp\n. @aeroperf  sorry. if you upload your code like gist, maybe other people can help you easier. \n. ",
    "patriksletmo": "@kyungkoo Make sure you call syncState() in onPostCreate(Bundle savedInstanceState), like this:\n``` java\n@Override\nprotected void onPostCreate(Bundle savedInstanceState) {\n    super.onPostCreate(savedInstanceState);\nactionbarDrawerToggle.syncState();\n\n}\n```\n. ",
    "aeroperf": "I'm having an issue where the ic_drawer icon remains full extended and does not animate to a narrower state when the drawer is opened. Anyone dealt with that?\n. @kyungkoo Great source, thanks. But still not working :-(\nI have to use the ethervoid's style fix from above to even get the three line to show instead of the up caret. And even then, it only shows for GB and not ICS and on. There's something else I'm missing here...\n. ",
    "cyberrob": "sample app from @kyungkoo worked for me.\nmake sure overwrite the right onOptionsItemSelected() function, which is the 2nd one:\n```\npublic boolean onOptionsItemSelected(MenuItem item) \npublic boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem item) \n```\n. ",
    "zaslam3": "I know I am late in this discussion. I'm having an issue where the ic_drawer icon remains full extended and does not animate to a narrower state when the drawer is opened. It animate on 4.0 and above. but on 2.3.5 and lower it does not animate. I have used \n    @Override\n    protected void onPostCreate(Bundle savedInstanceState) {\n        super.onPostCreate(savedInstanceState);\n        // Sync the toggle state after onRestoreInstanceState has occurred.\n        mDrawerToggle.syncState();\n    }\n@Override\npublic void onConfigurationChanged(Configuration newConfig) {\n    super.onConfigurationChanged(newConfig);\n    mDrawerToggle.onConfigurationChanged(newConfig);\n}\nbut still does not animate. Anyone know about this. Thanks\n. ",
    "grosssmutttr": "Change import android.support.v4.app.ActionBarDrawerToggle; to \nimport android.support.v7.app.ActionBarDrawerToggle;\nand remove the icon when you create a new instance of the mDrawerToggle:\nmDrawerToggle = new ActionBarDrawerToggle(\n                getActivity(),                    /* host Activity /\n                mDrawerLayout,                    / DrawerLayout object /\n                R.string.navigation_drawer_open,  / \"open drawer\" description for accessibility /\n                R.string.navigation_drawer_close  / \"close drawer\" description for accessibility */\n        )\nThis helped on my side...\n. ",
    "animaonline": "any updates folks?\n. Here is an alternative way to do it:\n@Override\npublic boolean onOptionsItemSelected(MenuItem item) {\nif (item.getItemId() == android.R.id.home) {\nif (mDrawerLayout.isDrawerOpen(mDrawerList)) {\nmDrawerLayout.closeDrawer(mDrawerList);\n} else {\nmDrawerLayout.openDrawer(mDrawerList);\n}\n}\nreturn super.onOptionsItemSelected(item);\n}\nOn Thu, Jun 13, 2013 at 12:22 PM, kihaki notifications@github.com wrote:\n\nThis is very important for our project, any updates? :D\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/pull/946#issuecomment-19383439\n.\n\n\nRoman Alifanov - MCAD - MCTS - MCP - MCT\nhttp://www.animaonline.com\n. ",
    "kihaki": "This is very important for our project, any updates? :D\n. ",
    "ronaldoeyeem": "I found an issue on this commit. 'onOptionsItemSelected' must return true whenever it consumes the event.\n. ",
    "GBouerat": "A method like FragmentManager.enableDebugLogging(boolean enabled) or LoaderManager.enableDebugLogging(boolean enabled) will be great.\n. ",
    "minlite": "I agree the logging is quite too verbose and floods the Logcat easily. +1\n. It works fine when I target to android 3+ using native action bar. (not using sherlock). \nFor my software it should be there because I prepare my menu options there.\nWhere should I call it from when using Sherlock?\n. ",
    "marcosalis": "Using the app: filter won't hide ABS logs as they're coming from the same process, and some apps might not use the same logging tag. I still think that being able to disable the logging completely would be useful.\n. This definitively works, thank you for the suggestion!\n. ",
    "karllindmark": "@marcosalis:\nYou could setup your filters to be excluding, rather than including. I'm currently using these settings (at the moment) as they tend to clog the log:\n\nThat way, I don't see the ActionbarSherlock messages, nor dalvikvm/ResourceCompat. Hope I didn't misinterpret your post. :-)\n. ",
    "rampo": "Good Idea\n. ",
    "nicolasjafelle": "I make it work by copy and paste this two files/classes:\n- ActionBarDrawerToggle.java\n- ActionBarDrawerToggleHoneycomb.java\nThen change onOptionsItemSelected(com.actionbarsherlock.view.MenuItem item) in ActionBarDrawerToggle and that is all. It Should work.\nNOTE: remember to update the Support package to v13.\n. I am trying to draw the 3 row lines in the Home Button of the ActionBarSherlock what when I try to invoke this:\nfinal View home = activity.findViewById(android.R.id.home);\nIn devices pre honeycomb I could not get it. Do you know how to solve it?\nEDIT: I made it, we should change this lines:\nfinal View home = activity.findViewById(android.R.id.home);\nif (home == null) {\n     // Action bar doesn't have a known configuration, an OEM messed with things.\n     return;\n}\nfor this ones:\nint homeRes = android.R.id.home;\nView home = activity.findViewById(homeRes);\nif (home == null) {\n     home = activity.findViewById(R.id.abs__home);\n     homeRes = R.id.abs__home;\n}\nI upload my project, check it:\nhttps://github.com/nicolasjafelle/SherlockNavigationDrawer\n. Sorry... I forgot to mention that this crash in my Razr I with 4.1.2 but not in Android 2.3.7, weird.\n. Sorry SimonVT I don't understand, are you saying that ActionBarSherlock does not use Light.DarkActionBar?\nIntrications yes! I tested to change the:\nxml\nandroid:background=\"?activatedBackgroundIndicator\"\nfor this:\nxml\nandroid:background=\"?android:attr/activatedBackgroundIndicator\"\nWhich is the original attribute and works.\nThe stacktrace:\nFATAL EXCEPTION: main\nE/AndroidRuntime( 1574): android.view.InflateException: Binary XML file line #2: Error inflating class \nE/AndroidRuntime( 1574):        at android.view.LayoutInflater.createView(LayoutInflater.java:613)\nE/AndroidRuntime( 1574):        at com.android.internal.policy.impl.PhoneLayoutInflater.onCreateView(PhoneLayoutInflater.java:56)\nE/AndroidRuntime( 1574):        at android.view.LayoutInflater.onCreateView(LayoutInflater.java:660)\nE/AndroidRuntime( 1574):        at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:685)\nE/AndroidRuntime( 1574):        at android.view.LayoutInflater.inflate(LayoutInflater.java:466)\nE/AndroidRuntime( 1574):        at android.view.LayoutInflater.inflate(LayoutInflater.java:396)\nE/AndroidRuntime( 1574):        at android.view.LayoutInflater.inflate(LayoutInflater.java:352)\nE/AndroidRuntime( 1574):        at android.view.View.inflate(View.java:16119)\nE/AndroidRuntime( 1574):        at com.senddinero.app.view.PlatformItemView.init(PlatformItemView.java:37)\nE/AndroidRuntime( 1574):        at com.senddinero.app.view.PlatformItemView.(PlatformItemView.java:23)\nE/AndroidRuntime( 1574):        at com.senddinero.app.adapter.PlatformsAdapter.getView(PlatformsAdapter.java:50)\nE/AndroidRuntime( 1574):        at android.widget.AbsListView.obtainView(AbsListView.java:2267)\nE/AndroidRuntime( 1574):        at android.widget.ListView.makeAndAddView(ListView.java:1769)\nE/AndroidRuntime( 1574):        at android.widget.ListView.fillDown(ListView.java:672)\nE/AndroidRuntime( 1574):        at android.widget.ListView.fillFromTop(ListView.java:733)\nE/AndroidRuntime( 1574):        at android.widget.ListView.layoutChildren(ListView.java:1622)\nE/AndroidRuntime( 1574):        at android.widget.AbsListView.onLayout(AbsListView.java:2102)\nE/AndroidRuntime( 1574):        at android.view.View.layout(View.java:13754)\nE/AndroidRuntime( 1574):        at android.view.ViewGroup.layout(ViewGroup.java:4362)\nE/AndroidRuntime( 1574):        at android.widget.RelativeLayout.onLayout(RelativeLayout.java:948)\nE/AndroidRuntime( 1574):        at android.view.View.layout(View.java:13754)\nE/AndroidRuntime( 1574):        at android.view.ViewGroup.layout(ViewGroup.java:4362)\nE/AndroidRuntime( 1574):        at android.widget.FrameLayout.onLayout(FrameLayout.java:448)\nE/AndroidRuntime( 1574):        at android.view.View.layout(View.java:13754)\nE/AndroidRuntime( 1574):        at android.widget.FrameLayout.onLayout(FrameLayout.java:448)\nE/AndroidRuntime( 1574):        at android.view.View.layout(View.java:13754)\nE/AndroidRuntime( 1574):        at android.view.ViewGroup.layout(ViewGroup.java:4362)\nE/AndroidRuntime( 1574):        at android.widget.FrameLayout.onLayout(FrameLayout.java:448)\nE/AndroidRuntime( 1574):        at android.view.View.layout(View.java:13754)\nE/AndroidRuntime( 1574):        at android.view.ViewGroup.layout(ViewGroup.java:4362)\nE/AndroidRuntime( 1574):        at android.widget.FrameLayout.onLayout(FrameLayout.java:448)\nE/AndroidRuntime( 1574):        at android.view.View.layout(View.java:13754)\nE/AndroidRuntime( 1574):        at android.view.ViewGroup.layout(ViewGroup.java:4362)\nE/AndroidRuntime( 1574):        at android.widget.LinearLayout.setChildFrame(LinearLayout.java:1649)\nE/AndroidRuntime( 1574):        at android.widget.LinearLayout.layoutVertical(LinearLayout.java:1507)\nE/AndroidRuntime( 1574):        at android.widget.LinearLayout.onLayout(LinearLayout.java:1420)\nE/AndroidRuntime( 1574):        at android.view.View.layout(View.java:13754)\nE/AndroidRuntime( 1574):        at android.view.ViewGroup.layout(ViewGroup.java:4362)\nE/AndroidRuntime( 1574):        at android.widget.FrameLayout.onLayout(FrameLayout.java:448)\nE/AndroidRuntime( 1574):        at android.view.View.layout(View.java:13754)\nE/AndroidRuntime( 1574):        at android.view.ViewGroup.layout(ViewGroup.java:4362)\nE/AndroidRuntime( 1574):        at android.view.ViewRootImpl.performLayout(ViewRootImpl.java:1866)\nE/AndroidRuntime( 1574):        at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:1687)\nE/AndroidRuntime( 1574):        at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:998)\nE/AndroidRuntime( 1574):        at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:4212)\nE/AndroidRuntime( 1574):        at android.view.Choreographer$CallbackRecord.run(Choreographer.java:725)\nE/AndroidRuntime( 1574):        at android.view.Choreographer.doCallbacks(Choreographer.java:555)\nE/AndroidRuntime( 1574):        at android.view.Choreographer.doFrame(Choreographer.java:525)\nE/AndroidRuntime( 1574):        at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:711)\nE/AndroidRuntime( 1574):        at android.os.Handler.handleCallback(Handler.java:615)\nE/AndroidRuntime( 1574):        at android.os.Handler.dispatchMessage(Handler.java:92)\nE/AndroidRuntime( 1574):        at android.os.Looper.loop(Looper.java:137)\nE/AndroidRuntime( 1574):        at android.app.ActivityThread.main(ActivityThread.java:4745)\nE/AndroidRuntime( 1574):        at java.lang.reflect.Method.invokeNative(Native Method)\nE/AndroidRuntime( 1574):        at java.lang.reflect.Method.invoke(Method.java:511)\nE/AndroidRuntime( 1574):        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:786)\nE/AndroidRuntime( 1574):        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:553)\nE/AndroidRuntime( 1574):        at dalvik.system.NativeStart.main(Native Method)\nE/AndroidRuntime( 1574): Caused by: java.lang.reflect.InvocationTargetException\nE/AndroidRuntime( 1574):        at java.lang.reflect.Constructor.constructNative(Native Method)\nE/AndroidRuntime( 1574):        at java.lang.reflect.Constructor.newInstance(Constructor.java:417)\nE/AndroidRuntime( 1574):        at android.view.LayoutInflater.createView(LayoutInflater.java:587)\nE/AndroidRuntime( 1574):        ... 55 more\nE/AndroidRuntime( 1574): Caused by: android.content.res.Resources$NotFoundException: Resource is not a Drawable (color or path): TypedValue{t=0x2/d=0x7f010047 a=-1}\nE/AndroidRuntime( 1574):        at android.content.res.Resources.loadDrawable(Resource\n. But why it works with Theme.Sherlock.Light ?? It should be the same. So if I need to use Theme.Sherlock.Light.DarkActionBar I cannot use the attribute defined by ABS for 14+ ?\n. Oooh!! So is it a bug? Or a expected behaviour?\n. So what do you recommend?? Create a layout-v11 and put there the value that it works?\n. I could fix it by creating a values-v11 and create specific xml for this.\n. ",
    "LeandroSe": "When I select a different item of Twitter is not marked as default.\n. ",
    "jelgh": "How can I upgrade it locally? Do you mean I should get the ABS source code, set it to a higher revision, rebuild and upload to our own Maven Repository? Or can I force ABS to use another version of its dependency?\n. @JakeWharton Alright, I'll rebuild ABS then. Thanks for your help!\n@iNoles Too bad they didn't upload it to Maven central. \n. ",
    "davidmontemayor": "Any updates on this front? Seems a bit ridiculous that the latest support library version in Central is a year+ old. :unamused: \n. \"Open source!\" \u00ac\u00ac \n.... Yeah. Oh well. \n. ",
    "tkiela": "Tested on 2.3.6. and 4.2.2 and it does not work. \n. Posting a     Runnable worked. Thanks.\n. ",
    "SimonMarquis": "You should not explicitly call it, unless you want to update the states of your menu items.\nThis method is a way to notify the Menu that something has changed and it is no longer updated. (For example, inside a clickListener, remove this menu item)\nBy the way, you should rather call supportInvalidateOptionsMenu();\nEdit: ooops, apparently, supportInvalidateOptionsMenu() just call invalidateOptionsMenu() ... U_u\n. ",
    "PR3x": "Happy to help! It was due to the new Build-tools split.\n. ",
    "JoanZapata": "Someone fixed it already in this branch, but it seems that the website is not up-to-date.\n. ",
    "dodgex": "have you at least tried to use the @style/Theme.Sherlock.Light.DarkActionBar directly, does that work?\n. Error \u2014 The Travis CI build could not complete due to an error (Details)\nNo idea whats wrong with Travis, but this is invalid.\nFor me it builds successfully. :)\n. ",
    "voydz": "this seem to work, since this is the case for splash activity which is launched before the login activity, and i got no crashes for it\n. Reference to #966 ?\n. ",
    "loop": "This happens to me as well. I changed my styles.xml style name to Theme.Sherlock.Light as it was originally Android:Theme.Light. Having the latter caused crashes, and seems to be affected devices with 2.3.6 or below.\n. ",
    "xiaoli": "Also happens on Galaxy Tab 7.0 Plus (GT-P6200).\njava\njava.lang.RuntimeException: Unable to start activity ComponentInfo{com.example/com.example.MainActivity}: java.lang.IllegalStateException: You must use Theme.Sherlock, Theme.Sherlock.Light, Theme.Sherlock.Light.DarkActionBar, or a derivative.\nat android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1815)\nat android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:1831)\nat android.app.ActivityThread.access$500(ActivityThread.java:122)\nat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1024)\nat android.os.Handler.dispatchMessage(Handler.java:99)\nat android.os.Looper.loop(Looper.java:132)\nat android.app.ActivityThread.main(ActivityThread.java:4123)\nat java.lang.reflect.Method.invokeNative(Native Method)\nat java.lang.reflect.Method.invoke(Method.java:491)\nat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:844)\nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:602)\nat dalvik.system.NativeStart.main(Native Method)\nCaused by: java.lang.IllegalStateException: You must use Theme.Sherlock, Theme.Sherlock.Light, Theme.Sherlock.Light.DarkActionBar, or a derivative.\nat com.actionbarsherlock.internal.ActionBarSherlockCompat.generateLayout(ActionBarSherlockCompat.java:976)\nat com.actionbarsherlock.internal.ActionBarSherlockCompat.installDecor(ActionBarSherlockCompat.java:902)\nat com.actionbarsherlock.internal.ActionBarSherlockCompat.setContentView(ActionBarSherlockCompat.java:836)\nat com.actionbarsherlock.app.SherlockFragmentActivity.setContentView(SherlockFragmentActivity.java:261)\nat com.example.MainActivity.onCreate(MainActivity.java:74)\nat android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1050)\nat android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1779)\n... 11 more\n. ",
    "xMikeTx": "I experienced the same issue on the\nXOOM (wifi_hubble) and\nGT-P7510\n. ",
    "nirvik66": "I also had this problem but I solved it. In my case it was generated because I have two themes.xml files with the style for the actionbar one under values and another under values-v11 and I was trying to use Theme.Sherlock.Light for versions prior honeycomb and Theme.Holo.Light for the rest of them. Once I deleted the v11 themes.xml and just left the one that use Theme.Sherlock.Light that error dissapeared. \n. ",
    "DipaliShah": "hello , i m using ecllipse 10 with the latest updates and getting error in \"Error retrieving parent for item: No resource found that matches the given name 'Theme.AppCompat.Light' \" . Even my 2 month old successfully running projects are now showing me error\n. ",
    "renclav": "Sorry, the com.projectname.Custom.StyledButton class referenced in the menu xml is just a simple extended ImageButton.\npublic class StyledButton extends ImageButton {\n```\npublic StyledButton(Context context) {\n    super(context, null, R.attr.actionButtonStyle);\n}\npublic StyledButton(Context context, AttributeSet attrs) {\n    super(context, attrs, R.attr.actionButtonStyle);\n}\npublic StyledButton(Context context, AttributeSet attrs, int defStyle) {\n    super(context, attrs, R.attr.actionButtonStyle);\n}\n```\n}\nI needed the menu item view to attach a badge to it (displays unread message count)\n. Yes I am. Which is to say, they are ignored (the app requirement is to not rotate the screen).\nExample activity in the manifest\n<activity\n        android:name=\"com.private.Screens.WelcomeScreen\"\n        android:configChanges=\"orientation|screenSize\"\n        android:label=\"Welcome\"\n        android:screenOrientation=\"nosensor\" >\n    </activity>\n. The problem being that ! already lock the app from rotation (see previous comment).\nAlthough I have sidestepped this issue by changing my design, I am still interested as to reasoning behind this crash.\n. ",
    "bri822": "Thanks Simon, I found the ActionBarDrawerToggle was merged in two days ago. https://github.com/JakeWharton/ActionBarSherlock/pull/946\nThe ActionBarDrawerToggle is exactly what I am looking for and am excited to see the support libs finally updated to allow ABS to merge it in.  Can't wait for the next release to try it out.\n. ",
    "felipecsl": "is this in the latest release already? can't find in the changelog\n. There is a Pull Request that was never merged in: https://github.com/JakeWharton/ActionBarSherlock/pull/946\n. ",
    "googolmo": "@JakeWharton done\n. @JakeWharton i sync project with gradle file and it show failed\ni think this is android studio 2.0 's bug\n. i think this it's a bug,\nif remove it gradle build will failed\n. Android Studio\n. ok i will try it \nand i have deleted it\n. ",
    "JustJavaGuy": "Thanks for the reply.\nTried SlidingMenu to slide only for content and not for whole window.\nsetSlidingActionBarEnabled(false);\nThis has couple of issues :\nThis makes the app show a blank white page when it is loaded first. I have multiple tabs shown in action bar , so the first tab is shown as selected but the content is empty.\nIf I slide when say I am in tab 2 , then the back page (or behind page) content is visible but it also overlaps with what is shown currently on tab2.\nThis one does not look like Sherlock issue.\n. ",
    "spencerg1": "Thanks, will do. I glanced over the most recent PRs and didn't see any so I assumed it just wasn't updated yet.\n. ",
    "curioustechizen": "@JakeWharton Unfortunately, it does have an effect. I spent an hour debugging an ABS issues where I wasn't seeing some errors but my teammate was. The first thing I compared was the versionCode and versionName to ensure we were using the same version of ABS.\nTurns out we weren't and that was the root cause of the issue :-( . I finally figured it out from pom.xml - but that was just by chance (we aren't using Maven).\n. ",
    "strgev": "Thank you very much!!! It is worked by adding r13.\n. ",
    "schmidp": "Could you please add a comment on how to use ABS with your changes as a subproject?\nI can't manage to get my settings.gradle and build.gradle setup correctly.\n. ",
    "danikula": "I have the same problem on my HTC Desire (android 2.2). Look at my tiny activity https://gist.github.com/danikula/6384575#file-leakedactivity-java. It just starts itself and logs allocated native memory. I run this activity and tap on button for starting new activity. Every new activity extended from SherlockFragmentActivity consumes about 1.5MB!  Log says:\nAllocated 5950808 bytes in native memory\nAllocated 7309864 bytes in native memory\nAllocated 8668864 bytes in native memory\nAllocated 10027840 bytes in native memory\nAllocated 11292576 bytes in native memory\nI have no problem if I extend activity from SherlockActivity. Every new activity consumes 10 times less (0.15Mb):\nAllocated 4724600 bytes in native memory\nAllocated 4839096 bytes in native memory\nAllocated 5010320 bytes in native memory\nAllocated 5181608 bytes in native memory\nAlso I have no problem if use FragmentActivity from android-supoort library without ActionBarSherlock. This bug isn't reproduced on android 4.3\n. ",
    "rajuashok": "Thanks Jake.  Sorry for the non-issue.  I don't know what I was thinking.\n. Hey Jake, I'm still having issues with this. Basically I need to include android.support.v7.mediarouter in my project, which depends on appcompat library.  How can I do this when my project also depends on actionbarsherlock?\n. Agreed.  Hmm so this is pretty bad because apps using actionbarsherlock will not be able to integrate chromecast without major modifications to libraries.  Is there anyway to remove appcompat from actionbarsherlock so that i can add it to my workspace as a separate project?\n. I've filed a bug against google-cast sdk.  Hopefully it will get looked at.  Just an FYI, here's a related stackoverflow thread: http://stackoverflow.com/questions/17864891/unable-to-find-package-com-google-cast\ngoogle-cast-sdk bug: https://code.google.com/p/google-cast-sdk/issues/detail?id=13&thanks=13&ts=1375199054\n. ",
    "elBradford": "Black tiger, did you ever resolve this? I'm going to be adding Chromecast compatibility to my app soon, and wonder if you solved this problem.\n. ",
    "pschichtel": "@JakeWharton Just out of curiosity: Why are the libraries mutually exclusive?\n. Sure, it doesn't make sense, but are there technical reasons?\n. Thank you\n. ",
    "KernHu": "i meet the troublesome too\u00b7\u00b7\u00b7\u00b7\n. ",
    "sephiroth74": "it will conflict with most of existing user applications. \"textAppearance\" is a very common attribute name. Is there a particular reason why all the attributes dont have a prefix like \"abs_\" ?\n. ",
    "niqo01": "<- This one too ^^. Same error. Easy to fix when recompiling ourselves though. \n. An easy hack while waiting this to be solved is to create the following class manually:\n```\npackage com.actionbarsherlock;\n/\n * Hack while waiting ABS to fix AAR issue.\n * https://github.com/JakeWharton/ActionBarSherlock/issues/1001\n /\npublic class BuildConfig {\npublic static final boolean DEBUG = .BuildConfig.DEBUG;\n}\n```\n. ",
    "seva-ask": "I'm very glad that this issue was fixed. Hope new release will be deployed soon.\n. ",
    "Kisty": "Still getting the same problem using the 4.4.0@aar version. The -dontwarn line @lexer recommended worked for me.\n. ",
    "ashughes": "I'm also still getting the proguard warning with the 4.4.0@aar version. The -dontwarn line worked for me as well (but it would be nice to not have to have it).\n. ",
    "jblack10101": "Yea, still happening for me with 4.4.0@aar as well.\n. ",
    "mcginty": "Also having this issue with 4.4.0@aar\n. ",
    "tererecool": "My solution was to merge the background of the actionbar with the shadow 9path into one drawable.\n. ",
    "lxqxsyu": "\u5f88\u597d\uff0c\u89e3\u51b3\u4e86\u6211\u7684\u95ee\u9898\uff0cThank you\n. ",
    "ol-v-er": "It looks like an Android bug.\nIn Android 4.0.4, the code source of the performItemAction method is the same as the one in ABS.\nIn Android 4.1, they fixed it as the one in the pull request.\nThe commit related on Android code source:\n```\ncommit f77f480800a84ceb377e47cc200baf2bae4f5d9a\nAuthor: Adam Powell adamp@google.com\nDate:   Mon May 14 16:44:43 2012 -0700\nFix ActionProviders that have submenus\nAutomatically create a submenu for items with ActionProviders that\nprovide a submenu when the item was not initially configured to have\none.\nBug 6493376\nChange-Id: I27218e2ab205e87534f235eb04042b185d99d143\n```\n. ",
    "alefranz": "I prefer to use directly the sources with git submodule, so I could put my hands on the libraries code.\nBut I can't understand what's wrong with gradle :\\\n. ",
    "josemando": "Version 4.4.0\n. ",
    "KamilLelonek": "I've implemented ActionMode with SherlockActionBar and everything works fine, but only on devices post HONEYCOMB.\nOn older APIs I have the following problem:\nEverything is fine when I start my app\n\nAll goes well even when I start action mode and select a couple of items\n\nBut when I exit (finish) action mode ActionBarSherlock crashes. I mean that it's no loger visible, only when I start or finish action mode, it blinks very shortly that I can see icons\n\nSo only updates show ActionBar for a short moment, but after that it remains \"hidden\" again.\nHas anyone similar problem? Is there any sollution for that?\n. \n. Yes, I've tested it with both 4.2 and 4.3.\n. Are u  using some custom list view or something or everything goes the \"normal way\"?\n. What does NOA stand for? Is the problem solved?\n. I use modified ABS without NOA package, which is provided from external library project, because previous configuration (NOA package and NOA library which is required by project) caused conflicts.\n. ",
    "bradmcmanus": "I am seeing the same exact behavior. Are you using ABS 4.3? I am investigating it now. I'm going to try updating to latest, too.\n. Ah, strange. I only see the unwanted behavior on a device running Gingerbread. I suspected it was a problem with the ported ActionMode and other ActionBar related classes necessary for 2.3 devices.\n. Seems to be a problem either way. In one case the ActionBar is using a customView, in another case the ActionBar just has an icon and title set on it.\n. FYI, we tracked it down to being an issue with NOA. We removed the ABS included NOA in favor of the NOA jar, and this was the source of the contextual action bar issue.\n. Ah, NineOldAndroids. ABS includes a stripped down version of NineOldAndroids in its source but there is also a standalone NineOldAndroids library with more features. Our problem was resolved by making sure to use the com.actionbarsherlock.internal.nineoldandroids (as happens by default, unless you modify the ABS source).\n. ",
    "rishabhmhjn": "I had the same problem in an Android version 4.3 device\n. My problem is when I scroll through a list in the activity, the actionbar disappears and come backs upon touching at its position. I do not use action mode though.\n. Did you try fragmentTransaction.commitAllowingStateLoss(); ?\n. @Im0rtality Dont remember correctly but I also faced the same problem long time ago.\nTry my solution mentioned here - http://stackoverflow.com/a/16995117/842214\n. ",
    "jenzz": "Yep. I can confirm using the com.actionbarsherlock.internal.nineoldandroids methods instead of an external .jar fixes this issue.\n. ",
    "blacelle": "Hi Simon,\nI understand from the first referred piece of code that calling setQuery with an empty String should not call onSubmitQuery. Still, why not allowing to override this behavior inside onSubmitQuery since this check is done in advance where necessary.\nIn my case (which is exactly your second reference), the call to onSubmitQuery comes from mOnEditorActionListener: I'd like the search to be executed even if the user did not entered anything. Is there any other way to handle this use-case ?\nThanks\n. Fine. Thanks for your support!\n. ",
    "Tamas-": "I don't have a bitmap in the custom layout, it's just a linearlayout(without a background image) and a textview. \nIf I recreate them programmatically, it also works. But if I set the custom layout as an xml file, it will crash.\nAlso, if you include the above layout in a hello world app, it will also crash.\nhere is a hello world sample project: pastelink.me/dl/853c78#sthash.GsVTyWmb.dpuf\nplease note, that it only crashes for me on the galaxy ace (2.3.6)\n. ",
    "youranshul": "I am also having same issue.I am trying to setQuery(\"test\",false); in a method but i dont see the text visible in the searchView.Please fix this.\n. ",
    "551780457": "I am also having this issue......are there anyone can help to fix it....\n. ",
    "dandar3": "Your problem is caused by the fact that when you click to expand the SearchView it will call SearchView.onActionViewExpanded() where it sets the text to blank (if you put a breakpoint and debug the code you'll see it):\n1289        mQueryTextView.setText(\"\");\nhttps://github.com/JakeWharton/ActionBarSherlock/blob/master/actionbarsherlock/src/com/actionbarsherlock/widget/SearchView.java#L1289\nMaybe it could set it to mUserQuery instead, I don't know...\nIf what you want to is to default a search value for when the user expands the search view, you could try overriding the OnActionExpandListener, e.g.:\n```\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        [...]\n    // Search...\n    MenuItem searchMenuItem = menu.add(\"Search\");\n    searchMenuItem.setIcon(isLight ? R.drawable.ic_search_inverse : R.drawable.abs__ic_search)\n                  .setActionView(searchView)\n                  .setShowAsAction(MenuItem.SHOW_AS_ACTION_IF_ROOM | MenuItem.SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW);\n\n    searchMenuItem.setOnActionExpandListener(new OnActionExpandListener() {\n        @Override\n        public boolean onMenuItemActionExpand(MenuItem p_menuItem) {\n            SearchView searchView = (SearchView) p_menuItem.getActionView();\n            searchView.onActionViewExpanded();\n            searchView.setQuery(\"TEST\", true);\n            return true;\n        }\n\n        @Override\n        public boolean onMenuItemActionCollapse(MenuItem p_menuItem) {\n            return true;\n        }\n    });\n\n    return true;\n}\n\n```\nYou may notice that inside onMenuItemActionExpand() I am calling searchView.onActionViewExpanded() - if you don't call it in there, it will get called afterwards and it will blank your search value again (again, found by putting a breakpoint in ABS SearchView code).\nHTH,\nDan\n. ",
    "igtsekov": "This save me thank you :)\n. ",
    "Im0rtality": "Nope, application does not have such functionality. \n. @rishabhmhjn, as wrote in initial message, not using FragmentTransaction.commit() anywhere in code\n. @rishabhmhjn I have wrapped up plausible locations with isFinishing() and log sending if is actually finishing. Gonna post results after deployment.\n. Thanks, that isFinishing() solved it.\n. ",
    "swatigoel": "@Im0rtality can you please tell me where to use isFinishing() to avoid this problem.\n. ",
    "rasik1010": "@Im0rtality , @rishabhmhjn  still not working even implemented same as the link  http://stackoverflow.com/a/16995117/842214\n. ",
    "hamid97m": "wow. ",
    "init2winitapps": "My phone is using 4.1.1 it's a HTC DNA but the issue also occurs on my tablet running 3.2 and it's a Samsung Galaxy Tab 10.1\nThanks for the quick reply\n. I just ran it again on my tablet and sorry I thought it was exactly the same (been a little while since I've used the tablet) but on my tablet it actually doesn't show the menu at all, nothing is visible on screen but if i press where the menu would be the intents still trigger. \nThe issue has affected a few others as well (one example below) but they all solved it by removing the flag. I, however, need the flag unfortunately\nhttp://stackoverflow.com/questions/11603210/overflow-menu-incorrectly-positioned\nSo my next question, since I haven't gone through your library much yet is there no way to force the menu where to show? Is that all done by Android\n. Is there no way then to force the location of the menu? Is that handled by Android? if so I'll file a bug report but I want to be sure I can't force it by an edit in your library. Thank you\n. Okay thank you just wanted to know, before I went all through your library trying to fix it. Thanks for the responses it's much appreciated. I'll close the issue and file an issue with Android thanks for the help!\n. ",
    "johnjohndoe": "Done here. You are welcome to pick settings from my git config.\n. Understandable. I had to learn this, too. No offense please. Thanks for the merge.\n. ",
    "rekire": "Thank you for your comment! Could you have another look to my StackOverflow question? I did some more reseach and updated my question there, but I'm stuck again maybe you have an idea? The point com.actionbarsherlock.R.attr.listPopupWindowStyle vs com.android.internal.R.attr.popupWindowStyle vs android.R.attr.popupWindowStyle make me headage. I don't understand the attr and styleable stuff.\n. Finally I got it sloved:\n```\n\n\n    <item name=\"android:popupBackground\">@drawable/menu_dropdown_panel_mystyle</item>\n    <item name=\"android:divider\">#081925</item>\n    <item name=\"android:dividerHeight\">1dp</item>\n\n```\nPossible that you can inherent that style in some other way. Not sure however that works for me!\n. Well I wanted to link to the javadoc like here:\n-linkoffline http://developer.android.com/reference \"file:/android-sdk/docs/reference\"\n-link http://docs.oracle.com/javase/6/docs/api/\n-link http://www.xbill.org/dnsjava/dnsjava-current/doc/\n-link http://google-gson.googlecode.com/svn/tags/gson-2.2.4/docs/javadocs/\nBut e.g. com.actionbarsherlock.app.SherlockFragmentActivity uses another namespace and linking is not possible.\n. ",
    "JULI-ya": "I am import com.actionbarsherlock.internal.widget.ScrollingTabContainerView; and create it tabsNavigator = new ScrollingTabContainerView(this);\nI never using internal widget, but I have this error the same\n. ",
    "accuratecompass": "Hi Igor,\nThe issue is fixed. It is working fine now.\nIt happened in the device only.\nMany thanks,\nGurunathan\nOn Fri, Nov 8, 2013 at 11:49 PM, Igor Ganapolsky\nnotifications@github.comwrote:\n\nThere should have been some output in the LogCat, such as it couldn't\nfetch the ad or there wasn't enough ad inventory. Are you running into this\nproblem on a real device or in the emulator??\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/1049#issuecomment-28084917\n.\n. \n",
    "artiomchi": "Seems like There is a way to get it to work. Maybe it's thanks to the new gradle build plugin (I seem to remember they changed the way library packages work) or something.. \nThanks for the 4.4.0 release with the aar artifacts :)\n. Actually, no.. It worked for some reason, but once I ran \"gradle clean\" it stopped working, complaining about the same classes being added in both libraries. I really think you should be referencing the correct new support library reference.\n. I understand what you're saying, Jake, but what about this library?\nhttp://search.maven.org/#artifactdetails%7Ccom.prolificinteractive%7Cactionbarsherlock%7C4.3.1%7Caar\nIt's been pushed to Maven, and it's got the new Android support library reference, which is not in the global Maven repos.\nAlso, while the gradle's aar doesn't specifically reference the support library, it's still pulled down and causing compilation issues :(\nAnd as I said in the original issue, everyone building Android apps will have the SDK installed, which means they can get access to the local SDK repo with the support library there\n. > Then they violated the guidelines.\nIs that really true? I haven't found any reference forcing all your dependencies to already be there. In fact, I've found this line in their docs:\n\nIn ideal conditions, all your dependencies should be already in central and central repository is self-contained. \n\nwhich makes me thing that they would obviously rather want you to have all your dependencies already available, but that's not a hard requirement.\nLater on they also state:\n\nIf some of your dependencies are not in central, please upload them using our 3rd-party artifacts bundle upload service.\n\nSo maybe we could upload the current latest Android support library to maven, so that this wouldn't be a problem? What do you think?\n. > Works for me @ https://github.com/JakeWharton/ActionBarSherlock-Gradle-Sample\nIf that's all I build - yes, it does work. But if I try to add another dependency (a library that depends on ABS 4.4.0 and the support library) the build stops working.. (\n. Ok, fair enough.. What about my point that Sonatype don't force you to have all the dependencies to be already deployed? Or am I missing some terms of theirs elsewhere that contradict that sentence on their docs?\n. Ok.. There's some logic in there.. I would still personally move to the other library with a version bump, but that's your library, and your choice.\nAlso, the exclusion list is a perfect solution to this issue! I guess I should have thought of that earlier. Thanks :+1: \n. By the way, on a slightly related note.. Any chance of you uploading an aar build of ViewPagerIndicator to maven? :)\nJakeWharton/Android-ViewPagerIndicator#254\n. ",
    "tokunbo": "So, blindly wandering about I decided to look at ActionBarSherlockCompat.java... I see that the following returns null:\nViewGroup contentParent = (ViewGroup)mDecor.findViewById(R.id.abs__content);\nSo, I tried changing that part of code into...\nViewGroup contentParent = (ViewGroup)mDecor.findViewById(R.id.abs__content);\nif (contentParent == null) {\n    contentParent = new LinearLayout(mActivity.getApplicationContext());\n    //throw new RuntimeException(\"Couldn't find content container view\");\n    }\nBut that just created a nullptrEx somewhere else...\njava.lang.NullPointerException\n    at com.rackspace.cloudmobile.ui.AboutActivity.onCreate(AboutActivity.java:24)\n    at android.app.Activity.performCreate(Activity.java:5008)\n    at org.fest.reflect.method.Invoker.invoke(Invoker.java:112)\n    at org.robolectric.util.ActivityController$1.run(ActivityController.java:119)\n    at org.robolectric.shadows.ShadowLooper.runPaused(ShadowLooper.java:256)\n    at org.robolectric.util.ActivityController.create(ActivityController.java:114)\n    at org.robolectric.util.ActivityController.create(ActivityController.java:126)\n. Hmm, ok. I've downloaded https://oss.sonatype.org/service/local/repositories/releases/content/org/robolectric/robolectric/2.2/robolectric-2.2.jar\nSo now I'm at the issue of \"shadowOf(mActivity).setContentView(view);\", where setContentView() is not defined for a ShadowActivity in ActionBarSherlockRobolectric.java . I'm kind-of new to AndroidDev; you mentioned \"PhoneWindow\", I assume you're talking about https://github.com/android/platform_frameworks_base/blob/master/policy/src/com/android/internal/policy/impl/PhoneWindow.java \nDoes this mean I should try to replace the usage of Activity class in ActionBarSherlockRobolectric.java, to instead use PhoneWindow?\n. Oh really?!!! So I don't need this anymore?\nActionBarSherlock.registerImplementation(ActionBarSherlockRobolectric.class);\nActionBarSherlock.unregisterImplementation(ActionBarSherlockNative.class);\nActionBarSherlock.unregisterImplementation(ActionBarSherlockCompat.class);\nOkay, I've commented that stuff out, now I got:\njava.lang.RuntimeException: java.lang.IllegalArgumentException: Resource path must end in \"/res\"\nI'm not sure what this is about, but I'll try and figure it out. I see a folder called \"res\" in my android project with things that look like resources.(anim  color  drawable  drawable-hdpi  drawable-ldpi  drawable-mdpi  drawable-tvdpi  drawable-xhdpi  drawable-xxhdpi  layout  layout-land  menu  values  values-v11  values-v14  xml) \nI'll see if I can get past this. Thanks a lot! \nEDIT:.... oh... https://github.com/JakeWharton/gradle-android-test-plugin/issues/28\nNot entirely sure if this'll solve my issue, but trying stuff out...\n. Okay, I will close this issue since I've stopped using ActionBarSherlockRobolectric.class.\nIt's a whole different situation now.\nThanks,\n. ",
    "alexliubj": "It always crash when I open the music balance settings page.\n2013/10/23 Philip Schiffer notifications@github.com\n\nWell, you did read the error message, right? :) The parent style seems to\nbe wrong (maybe in one of the configurations?)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/1053#issuecomment-26881960\n.\n\n\nAlex.Liu\n. ",
    "thuannv": "When you use actionbarsherlock,  in your AndroidManifest.xml you should be specify theme which is inherit from sherlock theme.\nex:\n\n\n. You should specify theme inherits from Theme.Sherlock in your activity instead of your application, as my AndroidManifest.xml below:\n```\n    \n\n    <intent-filter>\n        <action android:name=\"android.intent.action.MAIN\" />\n\n        <category android:name=\"android.intent.category.LAUNCHER\" />\n    </intent-filter>\n</activity>\n\n```\n. ",
    "sogrEEN": "2013/12/16 Thuan Nguyen notifications@github.com\n\nYou should specify theme inherits from Theme.Sherlock in your activity\ninstead of your application, as my AndroidManifest.xml below:\n```\n\n\n<intent-filter>\n    <action android:name=\"android.intent.action.MAIN\" />\n\n    <category android:name=\"android.intent.category.LAUNCHER\" />\n</intent-filter>\n\n\n```\n\u00a1\u00aa\nReply to this email directly or view it on GitHubhttps://github.com/JakeWharton/ActionBarSherlock/issues/1053#issuecomment-30628756\n.\nOh\u00a3\u00a1\u00a3\u00a1I Know......thank you for your help\u00a3\u00a1\u00a3\u00a1\n. \n",
    "devilmac": "Hi Jake,\nI use the ABS how explained from the documentation and stop. I'm not using anything from ABS's internal package, I only extended my activities from Sherlock activities. Before yesterday, ABS worked very well. I searched for the getTranslationY method of the FrameLayout widget and I have noticed that this method was added into SKD from API Level 11, while Android 2.3.X is API Level 10.\n. ",
    "ZawnHtut": "i think that null pointer exception is caused by \n: Could not find method com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout.onHoverEvent, referenced from method com.actionbarsherlock.internal.widget.ActionBarContainer.onHoverEvent\n10-12 23:40:51.905: W/dalvikvm(1528): VFY: unable to resolve virtual method 4266:  \nis that right? because whenever i clean my project , delete the app and restart the phone and run the project again, it works again like a magic. i am using abs for the action bar and because i am getting unable to resolve virutal method error ,  i am having null pointer exception when fetching views by their id from the main layout. this is what i think. but please correct me if i am wrong and help me solve this problem. thanks heaps\n. aww ok. but why do u think when i restart the phone and ADT and delete the app and run the project again, it works? i just make me feel my app is not consistent and not reliable at all.\nif u want to look at my main code, i can show it to you. thanks million.\n. ",
    "fomojola": "Ah, actually I am: it renders fine on 4.0+ but not on 2.2. Didn't realize that overriding the dimension was verboten: this was explicitly a way to control the margins on <4.0, since I saw many many many attempts to adjust the left margin that simply didn't work when deployed, but this one did. Its in my private copy of ActionBarSherlock: I'd thought to share it but if there's a better way to make that margin adjustable I'd love to get it in: for something that small it seems particularly complex to require a custom home layout.\n. ",
    "heenwang": "tt\n. ",
    "xtreme-bozhidar-lenchov": "Thanks Simon - turns out setting explcit padding on the home icon did the trick. http://stackoverflow.com/a/19793804/155390 in case it helps someone else in the future.\n. ",
    "FireAndIce": "On 11/08/2013 06:56 AM, Azwar Akbar wrote:\n\ncan you show your class activity?\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/JakeWharton/ActionBarSherlock/issues/1064#issuecomment-28023705.\nI've updated the class activity on stackoverflow. Please check this link \nhttp://stackoverflow.com/questions/19835815/shareactionprovider-not-working-with-actionbarsherlock-types. \n\nThanks.\n. ",
    "EatHeat": "Its just a simple SherlockActivity calling setTheme before setContentView. The ActionBar comes below the standard pre HC TitleBar.\nI'm trying to change theme of app at runtime and in NoActionBar theme, the ActionBar goes away but the TitleBar stays.\nA bad workaround I found was setting the theme both in manifest and programmatically. With a few tweaks like setting the background colour again, I was able to make it work. It had a few glitches though like in the Theme.Sherlock theme, the blue line below the ActionBar was not coming under the ActionBar menus.\nAlso I can't switch to fullscreen theme when setting the theme in both manifest and programmatically. The manifest theme seems to have a higher priority.\nHope you fix it.\n. ",
    "TomRK1089": "Hmm, seems like I had a mix-up somewhere then. Is there any reason the repo can't include the latest version of the support library?\n. ",
    "chandujujare": "i added to 2.2 it gives the issues\nactionbarsherlock\\res\\values-v14\\abs__themes.xml:6: error: Error retrieving parent for item: No resource found that matches the given name 'android:Theme.Holo.Light'.\nactionbarsherlock\\res\\values-v14\\abs__themes.xml:8: error: Error retrieving parent for item: No resource found that matches the given name 'android:Theme.Holo.Light.DarkActionBar'\nlike more than 20 issues \nhow to fix those\n. if i compile with 4.0 is it works in 2.2 device\n. but i tried it 2.1 device it doen't work do u know y it is?\n. i done as defined in more info but its not worked\ngot this issue\njava.lang.NoSuchMethodError: com.ntc.bhihakhims.LoginActivity.getActionBar\n. hi @serj-lotutovici \nhow to use that getspportaction bar and plz provide for some android 2.2 example\n. ",
    "nitinmishra27": "@serj-lotutovici how about this forked version https://github.com/mihirjoshi21/ActionBarSherlock I think he has ported POPUP MENU, what do you think?\n. @serj-lotutovici i've implemented & tested it successfully \n. ",
    "Kozlov-V": "I make it with CustomView and RelativeLayout\n. ",
    "RuellBrown": ":+1: \n. ",
    "vipinhelloindia": "Thanks Jake, I will report accordingly \n. ",
    "paulvi": "You should have learned basic Travis configuration.\n. Already outdated, but @JakeWharton does not seem to care even to comment\n. @JakeWharton Please update site or at least README\n. ",
    "bsvTag": "You can set customView and not use setTitle/setSubtitle methods\n. ",
    "liufsd": "oh yes.\nThanks.\nI fixed it.\n. ",
    "krishnalalstha": "@sherpya  you are using ActionbarActivity. No use of ActionbarActivity while using SherlockActionBar isnt it ?\nI am  using following  method to get HomeUpIndicator\npublic static ImageView getHomeAndUpIndicator(Context context) {\n        ImageView res = null;\n        if (android.os.Build.VERSION.SDK_INT > android.os.Build.VERSION_CODES.GINGERBREAD) {\n            res = (ImageView) ((Activity) context)\n                    .findViewById(com.android.internal.R.id.up);\n        } else {\n            res = (ImageView) ((Activity) context)\n                    .findViewById(com.actionbarsherlock.R.id.abs__up);\n        }\nreturn res;\n}\nBut Here ,  problem is that is doesn't work all device. basically on device with android 4.04\n. ",
    "androidoutput": "Hi thanks for your quick reply. i'm using actionbarsherlock lib. i need to use spinner in my app which should give me same look and feel of ICS even in android 2.2 also, how to do with help of your library?. does your lib support that?. \n. ah, i understood now. So then i will use the default spinner itself. Thanks for your quick reply. Thank you very much :+1: \n. ",
    "Tobiaqs": "This issue better describes the bug:\nhttps://github.com/JakeWharton/ActionBarSherlock/issues/1097\n. ",
    "alexsilva": "Try 1:\ndependencies {\n    compile 'com.actionbarsherlock:actionbarsherlock:4.4.0@aar'\n}\nError:Module version com.actionbarsherlock:library:4.2.0 depends on libraries but is not a library itself\nTry 2:\ndependencies {\n    compile 'com.actionbarsherlock:actionbarsherlock:4.4.0'\n}\nError:Artifact 'com.actionbarsherlock:library:4.2.0:library.apklib' not found.\nTry 3:\ndependencies {\n    compile project(':library:ActionBarSherlock-v4.4.0:actionbarsherlock')\n}\nError:Artifact 'com.actionbarsherlock:library:4.2.0:library.apklib' not found.\n. ",
    "tevjef": "can you post your build.gradle?\n. ",
    "nixlong": "!@\n\u53d1\u81ea\u6211\u7684\u5c0f\u7c73\u624b\u673a\nAkshay Mukadam notifications@github.com\u7f16\u5199\uff1a\n\nI want to get involved in this project but I am confused how to get started\n\u2014\nReply to this email directly or view it on GitHub.\ufffc\n. \n",
    "protocol10": "what is this \n. ",
    "Nordin-010": "Remove the support library v4 from your project's libs folder. Than go to menu Project->Clean to clean the project and I think you're ready to go :)\nGood luck!\n(Assuming you're using Eclipse IDE)\n. ",
    "andytriboletti": "Nevermind this wasn't the issue.  I calling invalidateMenuOptions in onCreateOptionsMenu and it was working in 4.x but not 2.3.  I changed it to use onPrepareOptionsMenu and it's working fine now.\n. ",
    "QuickBrownFoxy": "I have seen #1106, very sad\n. ",
    "hurelhuyag": "please ignore it. I submitted wrong tab.\n. ",
    "metalurgus": "@JakeWharton that should be awesome, but they do not. If you just read my question before closing it, you'd realize that ActionBarSherlock does not have a set of important features from AppCompat. But it has the SpinnerICS widget which I wanted to use. They should not be used together once one of them covers functionality of the other. Currently it does not.\n. ",
    "kdhunter": "Have a modified version of the files, but can't attach a ZIP.  Guess I'll have to set up a pull request.\n. ",
    "KrzysiekWu": "I have the same problem after SDK update. \nhttp://stackoverflow.com/questions/33047492/actionbarsherlock-type-madded-cannot-be-resolved-or-is-not-a-field-watson-java\n. Yeah, since this project is deprecated move to the native actionbar bar with AppCompat library.\n. Hahaha @chiaramail you're so, so restitutionary ingrate. I'm so ashamed of your arrogance, no comment.\n. I have the same problem after SDK update. \nhttp://stackoverflow.com/questions/33047492/actionbarsherlock-type-madded-cannot-be-resolved-or-is-not-a-field-watson-java\n. ",
    "fmaxx": "Guys, do you have a solution?\n. ",
    "chiaramail": "That's not a solution, as converting to AppCompat can be time-consuming and difficult, as it is in my case. It's a good long-term solution, but for those (like myself) who need a quick answer to this problem, it's probably best to look to StackOverflow for a helpful solution. Your's is NOT.\n. Actually, it's an arrogant solution, as it does not take into account the difficulties in doing the conversion. \n. ",
    "liuzhen2008": "I bet sherlock himself made this project.. ",
    "JMHaro": "Thanks, I was finally able to workaround for this issue.  I had to add a small paddingBottom (15dp) to the tabs button image view which decreased the size of the image on these affected devices.  It also seemed that even with the paddingBottom being applied, the non-affected devices really had no size differences of the button images on them.  So at least this worked for now. You can close this issue.. ",
    "jberkel": "it does, but it overrides an API level 11 method:\nhttp://developer.android.com/reference/android/app/Activity.html#invalidateOptionsMenu%28%29\ni just followed lint's output. without these annotation any project embedding ABS will fail linting, even though in practice it will work on 7+. that's what the @TargetApi annotations are for (telling lint that it's actually ok and temporarily changing the sdk level)\n. guess i was a bit too eager there. i went through it again to just annotate the specific methods (soundcloud/ActionBarSherlock@23d3cea1dbd3a213cbfdb6c5554499dae26c2b97). \n@SimonVT didn't find a way to exclude NewApi errors for certain packages, maybe this would be the preferable approach. On the other hand, having ABS checked by lint itself is not a bad idea either.\nI guess the quick solution is just to exclude ABS from lint, since it's known to work on 7+.\n. ok, that's a much better solution. only (minor) problem is that all classes have to be listed since lint doesn't accept recursive ignores (example here for reference: http://stackoverflow.com/questions/13516327/writing-custom-lint-xml)\n. that would be great, thanks, can't find any documentation on this feature.\n. btw, what you posted just ignores everything. i still want my own code to be flagged as warnings.\n. i build my project using maven so there is no ABS library folder per se (get recreated for each build) so this might not be applicable. thanks for your help anyway!\n. "
}