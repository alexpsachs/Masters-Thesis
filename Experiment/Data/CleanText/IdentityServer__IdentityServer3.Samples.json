{
    "brockallen": "Session state has nothing to do with your authentication session, so the calls to Session.Clear, etc. are unnecessary and unrelated.\nChecking for the cookies \"FedAuth\" and then \"FedAuth1\" etc is brittle and you should be relying upon the SAM to do that cleanup properly. I think it's best to identify why the call to the Signout isn't doing what it should. \n. Any updates?\n. We have enough samples that show each extensibility point, so that should be enough to show you how to do this. If you create a public sample, we would be happy to link to it on the wiki.\n. If it's a simple fix, then you can propose a PR to address it. But we're not in a position to support something that's VSExpress specific.\n. What is the response_type in the authorize request? You get back all the claims in the id_token only if it's just \"id_token\", otherwise those claims are available at the user profile endpoint. You can also get the claims by marking them \"always include in id token\".\n. The OIDC spec basically states that the main thing in the id_token is the subject and all other claims are supposed to be available at the user profile endpoint (accessed with the access_token). Now, it also states that it's possible to put more claims in the id_token, but that's an implementation choice and/or detail. In IdSvr we have a flag on the ScopeClaim to indicate if it should always be included in the token. \nThe best complete sample (as of right now) that shows the additional calls to the user profile endpoint is the WPF client on the dev branch.\n. @galenp we just released beta1-2 today (dev branch merged to master) and now you can indicate what claims should always be in the access token.\n. @RhysC use the access token to hit the user profile endpoint (not the id_token). The id_token is meant just fro the client app to validate and consume.\n. @galenp on the scope, there's a Claims property on the Scope class. When the Type is ScopeType.Resource then the claim is always included in the token. When the Type is ScopeType.Identity then the claim is available at the user info endpoint, and can optionally be included in the token via the alwaysInclude propery on the ScopeClaim.\nHTH\n. Any update?\n. @galenp  you're on the least version of the dev branch?\n. The form post sample is only requesting response type of \"id_token\" -- if that's all your authorization request is then you always get all the claims in the id_token. If you also request \"code\" or \"token\" then the claims are only in the id_token if they're marked on the ScopeClaim as alwaysInclude.\n. No problem.\n. This was fixed on dev already. Thx tho :)\n. Yea, we've already updated all our samples on the dev branch. Thx.\n. thanks for posting the follow-up. this will be useful for others that need to understand the mismatch between OIDC claims and WIF claims.\n. This is now fixed. Thanks.\n. Does this help at all?\nhttp://leastprivilege.com/2014/10/02/401-vs-403/\n. Ok, I'll look at it. Thx.\n. Yep, I'll get to fixing this up. Thx.\n. This was fixed in beta3\n. It was removed in beta3 in favor of the new DI system.\n. Did you read this? https://github.com/thinktecture/Thinktecture.IdentityServer.v3.Samples/tree/master/source/Certificates\n. Connect in what sense? There are already samples for AspId and MR in the samples repo.\n. There are two different samples -- one for the identity system and another for EF for the IdentityServer configuration. You' will have to look at the both and merge them into your project.\n. Did you read the docs on the wiki?\n. Dup of: https://github.com/thinktecture/Thinktecture.IdentityServer.v3/issues/505\n. Dup\n. Done on dev.\n. JS sample updated -- token manager now supports id_tokens\n. I can't tell where the error is coming from. It sounds like you're modifying the source code directly of IdentityServer -- if you're doing that, then debug into it. \n. done on dev\n. Well, I'd suggest looking at the MR samples in the MR repo, and then see how you'd do the partial login with the AspId samples.\n. Can you elaborate with a concrete example of what you need to do when the scopes are different values?\n. Notice what's in the map -- there is a difference.\n. Not necessarily. In this sample, IIRC, the /core is from the hosting URL, not from an OWIN map.\n. Done on dev\n. thx.\n. \"RegisterFirst\" makes the user register first to create the record for the user in the DB. The other one creates the record first then makes the user fill in the registration.\n. Use case for the two is just how you want to code the user service and how your identity mgmt library works.\nFrom a user's perspective, you are probably right.\n. You can watch this video that discusses how OWIN and Katana relate to the host:\nhttp://vimeo.com/97329189\n. thanks.\n. IdentityServer is a token service which issues tokens for existing users. IdentityServer does not create users.\nCreating new users is a function of your identity management system and your user management application (which is something you'd need to build).\n. No, IdentityServer doesn't. There's no place IdentityServer needs to create user. This is why there's no API on the user service to do so. \nYour user service might internally, so that's fine -- use your identity management library API to create the user according to your own logic.\n. That's in the user service. IdentityServer doesn't know about it.\n. Enable the logs and see what they say.\n. Just an oauth2 sample, you mean?\n. Do you mean for user authentication?\n. Yes, it makes sense, but I think I'm missing the whole story. That's ok - the short answer is that we have the PreAuthenticate hook in the user service to allow for host-based authN scenarios (like windows authN). I have a TODO to build a sample for this, but haven't had time as of yet.\n. 1) We don't have a sample for windows authentication, but the PreAuthenticate method on the user service will be involved.\n2) The user service is what allows you to map from your user DB to the claims identityserver issues. Check the docs:  https://thinktecture.github.io/Thinktecture.IdentityServer.v3.Documentation/docs/advanced/userService.html\n3) This are the \"Logout\" and \"Login With a Different Account\" links in the UI.\n. That's the correct behavior. 1) You did not send a token to authenticate, and 2) Using the browser is not the typical use case (APIs are programmatic, not interactive).\n. Added a new simple JS client to clients project\n. From https://github.com/thinktecture/Thinktecture.IdentityServer.v3/issues/483\n. on dev. the same doesn't do the auto login -- it uses PreAuthN to do HRD. \n. There are lots of samples in the samples repo. In fact, there's one for PreAuthenticate (under the CustomHrd folder). \nAlso, HRD means \"home realm discovery\".\n. From: https://github.com/thinktecture/Thinktecture.IdentityServer.v3/issues/482\n. already done on eula sample\n. Well, the sample is working as-is. I think you mean that if you update the IdMgr NuGet, then it's no longer working.\nThe sample on the dev branch is already updated. Once we do RTM then we'll merge all dev samples to master.\n. Do you need to use the http module? In other words, why don't you use the OIDC Katana middleware? That's actually supported by Microsoft.\n. Well, the http module we built was more of an educational exercise and we didn't really put as much effort into it as we do for other things that we intend to support. \n. The other idea would be to look at the \"MVC Code Flow Manual\" sample from the samples repo -- in there we show how to do the whole OIDC protocol manually without protocol helper libraries.\n. IIRC, the katana middleware does. You're saying it doesn't?\nIn any event, the \"MVC code flow manual\" doesn't use any katana middleware -- that's the point of it. To show how you'd do this without a protocol library.\n. Correct. In short their middleware doesn't implement all of the protocol.\n. can't repro\n. Added session code back to JS Sample that uses TokenManager.\n. This is essentially done (tho, i'd like this to be part of the token mgr class). Closing.\n. Customizing views is covered in the docs.\n. Thanks for the kind words.\n1) The samples (on master) should be referencing from MyGet, which should be the same code that is released on NuGet. We did it that way because it's a tremendous hassle to update each sample to point to the same build on NuGet that we have on MyGet.\n2) We don't have a MR tutorial, just the sample in the samples repo. MR is (slightly) documented on the MR repo wiki on github.\n3) The exception dialog doesn't really help. Did you enable logging to see the actual errors?\n. So did you get it all sorted out now?\n. The user service is what interacts with your identity management library. We have one for MembershipReboot and another one for AspNet Identity. Those are two different implementations.\n. The docs: http://identityserver.github.io/Documentation/\n. If the user service docs don't help, then (as of right now) the other thing I can suggest is to read the source code for the AspNet Identity user service.\n. I'm not sure why you want both MembershipReboot and AspNetIdentity -- they do the same thing. Also, it's hard to tell if you need anything else -- I don't know what your requirements are. Our NuGets provide different features based upon your need.\nWe already have many samples and a walk though and we try to document the NuGets and what they are for. Perhaps you need consulting then if what's already been provided isn't sufficient. \n. It's not so much WebForms -- it's OWIN/Katana that you'd need to learn (given that you pretty much want to use the OpenID Connect middleware). And you will have to make time to learn a new programming model, because ASP.NET 5 is just more of this new way. Sorry to be the bearer of bad news.\n. In which environment? Also, what did the IdentityServer logs say?\n. That looks like an emulator, yes? If so, then it sounds like the emulator isn't even hitting the network -- that's what you need to debug. Also, we've not tested on windows 10 technical preview, so it's not something we can support right now.\n. Yea, we could enhance it to accept the hash as a param. \n. Ok, added to dev branch to OAuthJS sample.\n. Yep, good catch. thanks. fixed on dev (again).\n. thx.\n. thx.\n. It's because your user is not logged in, a html page is being displayed, and the XFO is kicking in. For the silent renew to work, your user has to have marked \"remember my consent\".\n. If you've disabled consent in the server, then that avoids the prompt as well. \n. Your client needs to have trust in the SSL cert (or its issuer). If you have a PS account, watch the first video from Dom's \"web api\" security module. It covers all of this.\n. Hmm, ok, thanks. I'll look into it.\n. Ok, I tracked it down. Fixed on dev. Thanks.\n. We have an OAuth2 client helper in the IdentityModel project/NuGet. Also, look at the samples to get an idea for what you can do (or what needs to be done).\n. Yes, look into the custom grant validator extensibility point.\n. That's the sample.\n. Use this, then: https://www.npmjs.com/package/oidc-client\nThe source is here: https://github.com/IdentityModel/oidc-client-js/tree/dev\nAnd we have an updated IdSvr sample suing it on dev: https://github.com/IdentityServer/IdentityServer3.Samples/tree/dev/source/Clients/JavaScriptImplicitClient\n. So you want to protect your Web API with both cookies and tokens? Tokens are solving the security vulnerability of cookies, and it's simpler to just use one form of authentication (i.e. tokens). I'd not suggest trying to do this.\n. I don't know if it's possible, but 2 different APIs might be an option. But if that's not an option, then yes, you'll need 2 different interception components to do your security.\n. What do you want shown? Just the key/value pairs?\n. Ok, I now see what you mean. Fixed on dev.\n. Try to use reference tokens for API calls and see if the URL is short enough.\n. You would need to create a new ASP.NET project, or you can look at the core host as a sample. Some of our samples are self hosted, others are web hosted. They all basically have the same structure -- they need a Startup,cs to load Katana and IdentityServer.\n. The problem with that PR was it's not the right approach.\n. But the user might want to go back, no?\n. Ah yes -- I buy that. Done on dev. Thanks for the hint.\n. Done -- thanks for the heads up.\n. Your code must be under same path as idsvr 's mapped path, otherwise its code won't run. \n-Brock\n\nOn Mar 8, 2015, at 6:25 PM, Steven notifications@github.com wrote:\nLooking at the example CustomUserService project I see that we are able to access the Owin IAuthenticationManager using the following\n// this verifies that we have a prtial signin from idsvr\n    var ctx = Request.GetOwinContext();\n    var authentication = await ctx.Authentication.AuthenticateAsync(Constants.PartialSignInAuthenticationType);\nWhen I use this same approach in my IdSrv I get a null returned from teh AuthenticateAsync method. When I look in the Owin environment dictionary I am missing several of the IdSrv keys that I get in the sample. I don't see any particular line of code that is making the sample work and mine not. Can you point it out to me?\n\u2014\nReply to this email directly or view it on GitHub.\n. No -- that's a security threat. How can the inner window be sure the containing window is safe to communicate with?\n. Ok, I re-read your post... I think I misunderstood -- the issue is that the loaded iframe just needs to post back to its parent, not the the top -- is that right?\n. This was fixed on dev, and then merged to master.\n. Well, this isn't documented/supported yet really, but you can look at the OAuthJS sample.\n. Yes, at some point.\n. ASP.NET Identity is an identity management library. IdentityServer3 is a token service.\n. Possibly -- feel free to submit a PR (and sign the CLA, too please).\n. Let me guess -- github for windows?\n. I wasn't making fun of you -- I was more making a comment about github for windows. We see these sort of accidental PRs all the time, so I think something about github for windows might be to blame (at least partially).\n. Look at SourceTree -- it's a nice UI that seems to make sense of git:\nhttp://www.sourcetreeapp.com/\n. CLA signed?\n. thanks!\n. You'll have to grab the samples from dev -- they're updated with the right feed. Alternatively, you can remove the reference and add the reference from NuGet.\n. Ok, thanks - we're in the middle of moving over to a different myget feed, so the old one have gone stale. Sorry.\n. I just ran the AspId sample (with the latest IdSvr nuget) and it's working fine. I think you need to check the server logs and do some debugging.\n. Any progress?\n. Ok, I'll close this out then. Feel free to open a new issue if you have other issues/questions.\n. Hmm, perhaps we have a bug in the NuGet dependencies -- can you update the EF nuget to the latest?\n. Ok, thanks -- keep us posted.\n. Same issue as this, perhaps? https://github.com/IdentityServer/IdentityServer3/issues/1105\n. Ah, not a bad change -- I'll consider adding into the library.\n. Also, you can always change the storage being used to session storage.\n. Well, I'd suggest not doing it on each tab and coordinate so only one does the automatic token renewal.\n. Sure -- you can disable the silent review all but one.\n. FYI all future oidc.js issues should be directed here:\n\nhttps://github.com/IdentityModel/oidc-client\nor here:\nhttps://github.com/IdentityModel/oidc-token-manager\nI'll close this for now and if you still have problems, open a new issue in the correct repo. Thx.\n. So I'm a bit behind on this issue -- what's the status and are you asking us to do anything?\n. Also, FYI all future oidc.js issues should be directed here: \nhttps://github.com/IdentityModel/oidc-client\nor here:\nhttps://github.com/IdentityModel/oidc-token-manager\n. I'll close this for now and you can open a new issue in the correct repo.\n. No -- you should only have to sign it for the project (so IdentityServer3 in this case). Do you use different github accounts?\n. On master or dev?\nYou'll also need Thinktecture.IdentityManager.AspNetIdentity\n. Thanks.\n. I think this was fixed when we merged from dev to master.\n. Thanks -- I'll take a look when I get time next week.\n. Looks like merging from dev to master has fixed these issues. I'll close this. Thanks.\n. I don't follow. It's a sample and the callback is configurable.\n. The OAuthJS sample is really a place to showcase the token manager library and the different ways it can provide callbacks. \n. Just configure the token manager settings to use the current page, and then you'd have to ensure that URL is also configured as a legal redirect URL in the client config in IdSvr.\n. Yes, in general it might make the most sense to put callback logic into a dedicated page (especially since that's where the token handling will be).\n. Ok, then that's why I've not been very helpful on this thread -- because I'm still confused. What address? You code the client to know which callback page you are using, that URL is then used in the config in the client app for the redirect, and then you also need configure that URL in IdSvr. What am I missing?\n. Oh I see now -- you need to remember the original URL the user requested. So yes -- that's normally done with some state management within your client app -- like you suggested: local storage, cookie, something.\n. Because you don't want open redirect attacks.\n. None really -- OAuthJS will go away now that the oidc-client and oidc-token-manager repos are now finally active.\n. https://github.com/IdentityModel/\n. I don't understand.\n. What exact version of IdSvr, and what do the logs say?\n. Perhaps related? https://github.com/IdentityServer/IdentityServer3/issues/1293\n. Oh sorry -- Your Ajax call is to your API, not to IdSvr. Maybe that's why your CORS code in IdSvr is not called -- it's your API that needs to allow CORS.\n. Any progress?\n. Did you ever resolve this? I was just working with that sample the other day and it was working fine.\n. Good question. \n. So I looked at this PR -- it's got many additions that are unclear to me why they were added. I don't mind the comments -- those are all good, but there are so many other code changes that I just don't know why they were added, removed, and/or changed. \nAlso I just ran this sample (from the master branch) and it's working fine from the MVC OWIN Client sample. So I'm going to reject this PR -- I don't see this sample as broken. Possibly under documented, so like I said, the additional comments are fine, so feel free to make another PR with those, but without all the additional unnecessary changes. Thanks.\n. Yea, create a global TokenMgr and inject it into as a constant into NG. That's one idea -- i'm sure there are others.\n. Yes, I do this in IdentityManager -- here's the route[1]/controller[2] that accept the token via the hash fragment:\n[1] https://github.com/IdentityManager/IdentityManager/blob/master/source/Core/Assets/Scripts/App/ttIdmApp.js#L16\n[2] https://github.com/IdentityManager/IdentityManager/blob/master/source/Core/Assets/Scripts/App/ttIdmApp.js#L96\n. Oh and for everyone, here's how i inject the token manager:\nhttps://github.com/IdentityManager/IdentityManager/blob/master/source/Core/Assets/Scripts/App/ttIdm.js#L253\nand then I wrap it with my own service:\nhttps://github.com/IdentityManager/IdentityManager/blob/master/source/Core/Assets/Scripts/App/ttIdm.js#L57\n. You need to run the API sample host as well.\n. If you want to build a registration page you should look at the MR samples: https://github.com/brockallen/BrockAllen.MembershipReboot/\n. I'd make sure the Web API is still pointing to the correct metadata for IdSvr. Not sure what else to say, other than to trace the HTTP calls to find out where it dies.\n. I'm not sure if there's an OIDC MW yet for ASP.NET 5.\n. Well, reading the documentation for 10 min can save you a day of try/fail tactics\nI wish everyone knew that! :)\n. In any event, the docs save time -- that's for sure.\n. It looks like you got back a valid access token -- what's wrong? \nTo use it, you then need to pass it as the Authorization header to the API.\n. I guess it depends on how your API is coded to validate the token. Did you follow the sample code in the API sample?\n. This is your IdSvr config, not your API config.\n. Any update?\n. You're using MembershipReboot? See the MR samples: https://github.com/brockallen/BrockAllen.MembershipReboot/tree/master/samples\n. I think any of the single tenant samples configures the email event handler. Also, you don't need to use the built-in email event handlers - you can use your own custom event handlers (https://github.com/brockallen/BrockAllen.MembershipReboot/wiki/Account-Events).\n. Here are the events raised: https://github.com/brockallen/BrockAllen.MembershipReboot/blob/master/src/BrockAllen.MembershipReboot/AccountService/UserAccountEvents.cs\n. Hmm, not sure. You'd need to debug some more into why the API is rejecting the token.\n. @RahulNET any update?\n. The other samples do it. Check the docs -- we do support it.\n. We will put one out when we can. I'll close this for now.\n. Hey Matt -- \nAll of our samples reference myget deliberately. Is there a problem you're running into?\n. Yea, we're in the middle of doing an update for 2.0, so the samples will get reworked soon. I'll close this, since it'll get sorted in the next few days. In the mean time, it seems you've got it working on your side. I'll close this for now. Thanks.\n. And what are the errors? \n. Hi, thanks for this. A couple of things: we don't accept PRs to master, but also we're in the middle of upgrading to 2.0 right now, so there will be more changes needed in the samples (which we'll be doing in the coming days/weeks). Thanks anyway.\n. @patrickhuber any update?\n. Ok. @leastprivilege thoughts?\nAlso, @patrickhuber you've still not signed the CLA.\n. You need to check the authenticated user via the OWIN environment extensions exposed from IdSvr.\n. By work, you mean the call will be allowed in? Yes. But if you're using scopes and the caller does not have the right scope then you want to reject the call.\n. If you're on 2.0.0 then you need to set AllowedScopes on the Client config.\n. G'dluck -- I've not ever tried that myself.\n. Not sure -- inspect the token with http://jwt.io\n. Use LINQ\n. That's Microsoft's fault -- they're changing the claims types because they think it's helpful. Add this line of code to your app at startup time and they won't do that:\nJwtSecurityTokenHandler.InboundClaimTypeMap = new Dictionary<string, string>();\n. ScopeClaim.AlwaysIncludeInIdToken\nhttps://identityserver.github.io/Documentation/docs/configuration/scopesAndClaims.html\n. We have \"AlwaysInclude\" versions of our StandardScopes.\n. Yep, this is known. I'll be getting to it this week (hopefully).\n. I just released 2.0 and updated all the samples. Thanks!\n. Dup #150\n. I just released 2.0 and updated all the samples. Thanks!\n. Ahhh -- so sorry! I completely overlooked the samples repo. Thanks.\n. I just released 2.0 and updated all the samples. Thanks!\n. what's the expression in the ng-show? If it's a collection, then make sure to add the .length -- something changed in angular at some point where it was necessary to use .length.\n. I just released 2.0 and updated all the samples. Thanks!\n. Hit F4 on your project in visual studio to see what URL IIS express is configured to use.\n. So enable logging in IdSvr and see what it says. If you don't have anything in the log, then I wonder if you have anon disabled in IIS.\n. Check the docs.\n. All the samples point to myget -- it's just easier for us that way. There's a nuget.config in the project directory that should configure your VS for the right URLs.\n. Also, please open new issues when asking unrelated/new questions.\n. Sorry, I don't understand what the issue is.\n. It should be passed back since in the view it's using  Html.BeginForm() to build the form. \nThe signin param is passed from IdSvr's login page via the LoginPageLink config: https://identityserver.github.io/Documentation/docs/configuration/authenticationOptions.html\n. It's hard to tell, but might be an SSL issue. Any more info (call stack maybe)?\n. I can't tell from that, sorry. \n. For that sample there are 3 projects that each need to be run. Perhaps you didn't launch the server and then the client?\n. Ok, then something about connecting to it is failing -- it's some network related issue from the little bit I can tell. DNS not resolving, you have the wrong port maybe, or the SSL cert is not trusted?\nTry visiting the server in the browser: https://localhost:44333/permissions and see what that does for you.\n. Use the labels if you need to look at a specific version.\n. Ah yes, in the samples repo -- I see your point. We'll try harder for this one. One workaround is to look at the dates on the core repo for the releases, and then look at when those were merged in samples. Not perfect, but there is correlation. \n. done on dev\n. Ah, thanks for catching that!\n. Not sure why updating to 2.0 would have changed that. The WS-Fed config you link might be a red herring. \n. > Talk about shitty design... For some reason, Microsoft made those two properties static on the JwtSecurityTokenHandler class.\nAmen.\n. AntiForgery is a MVC5 feature.\n. If you have a open repo with it, we can link to it from our docs.\n. We accept PRs :)\n. thanks\n. thanks\n. Is this an IdentityManager question, then (if so, wrong repo)? I'm a bit unclear on the exact issue, though.\n. RAMMFAR? Do you see 404s from the HTTP requests for the assets (JS, etc)?\n. Well, since the request wasn't being handled by the IdMgr middleware (or even Katana), it's hard to have to emit a log messaging saying you should have been invoked.\n. It should be returning the 404. I'm confused why you didn't see any 404s tho...\n. So we can close this issue?\n. For the ASP.NET ID sample it's relying upon EF auto creating the DB on first use. Also, it's using IdentityManager as a way to allow you to create users for testing.\n. If you need each layer to have its own scope, but want to shield the client from knowing these details you could do something like act-as tokens. This would be done as a custom grant validator -- we have extensibility points for this (but no sample currently).\n. Well, you're trusting the client of this endpoint to ask for tokens without any further proof. Normally when we use this technique the input is the access token. This can then be validated and the subject extracted from that.\n. This would be a great sample or blog post that we'd happily link to from our docs.\n. All of our samples always point to the myget feeds. Are you saying you can't access them, or is the real problem that the version being referenced is no longer available on myget?\n. So yea, our myget feed deletes anything older than 5 or 10 versions. Version 195 is the last \"pinned\" version (that won't be deleted). We're happy for a PR for that update :)\n. merged, and thx\n. Thanks :)\n. Not sufficient? https://github.com/IdentityServer/IdentityServer3.Samples/tree/master/source/Clients/ConsoleResourceOwnerRefreshTokenClient\n. All samples always use the myget builds -- it's just easier for us to work that way. To make it easy for folks such as yourself to compile these projects we pin certain versions of the binaries on myget to ensure you can restore. \nAre you having a problem restoring?\n. Very sorry for the delay -- slipped thru the cracks. I just looked at it and it's fine -- there are a couple of error codes to cleanup, but I'll do that. Thanks!\n. Is this in the callback in the html or in the JS library itself?\n. Moved to the oidc-client repo.\n. fixed, thx\n. Can you make the PR against dev, plz. Thx\n. To configure security for IdentityManager, check the IdentityManager repo and samples: https://github.com/IdentityManager/IdentityManager/\nFor for claims in the id_token and access_token, this depends on how you configure the type of scopes. Check the scope docs or the and the issue tracker history as this has been asked before many time. Also, there is no identity token with resource owner password flow.\n. nice, thanks!\n. I don't think IdMgr will work with AspId3.\n. I think he means check the IdSvr logs.\n. Check the docs for how to enable logging.\n. So now you have your answer.\n. That's a question for Microsoft. \n. This endpoint is provided in the sample and it's using IdentityManager. Check that repo for more info.\n. You must have been pointing at the wrong server, or running the wrong one. Recall if you open multiple VS instances with the same IIS Express port settings, the last one wins.\n. This is a MVC hybrid sample client: https://github.com/IdentityServer/IdentityServer3.Samples/tree/master/source/Clients/MVC%20OWIN%20Client%20%28Hybrid%29\nIs this not what you're looking for?\n. The OIDC MW in ASP.NET Core does many of those addition steps that the OIDC MW did not do in Katana. IOW, it exchanges the code for token(s) and accesses the user profile endpoint.\nThe best thing is to read their code.\n. If you have multiple copies of VS open all running IIS Express on the same port, then the last one you open wins. All of our samples that host IdSvr use the same port. Perhaps you're getting routed to the wrong one? Are you running multiple copies of VS with different samples hosting IdSvr?\n. Not sure then. Check the IdSvr logs. If that turns up nothing, then the next thing is to debug into the source.\n. I think that's what I was trying to say above :)\nGlad you got it all sorted out.\n. This would just be a client app of IdSvr that can access the user database.\n. To take over the UI workflow from the user service you return a partial login. You can send the user to as many pages as you want before returning back into IdentityServer.\n. The HTML files are cached by default -- you probably want to disable the cache during development. It's a flag on the default view service options. You can do this in one of two ways:\nfactory.ConfigureDefaultViewService(new DefaultViewServiceOptions\n{\n    CacheViews = false\n});\nor \nfactory.ViewService = new DefaultViewServiceRegistration(new DefaultViewServiceOptions\n{\n    CacheViews = false\n});\nAlso, feel free to find the spot in the docs where you feel this could be added and submit a PR :)\n. Done with new oidc-client-js implementation\n. Is your access token lifetime very short?\n. Well, the silent renew runs when there's only 1 minute left before expiration. So this might explain why it's renewing the token frequently. \nWhy do you only set it to 2 minutes? That's a tad low.\n. Ok. So then does this answer your original question? Or is there still an issue? Perhaps I didn't understand the original question(s).\n. I'm still confused. If you change the access token lifetime to something longer, like 10 minutes, does this still happen?\nIf you can provide the smallest sample to reproduce the problem I can look when I have some time.\n. Any update?\n. Put that MW in the pipeline and check it wherever you need to (in the user service, mainly). You can inject the OWIN environment into your ctor in the user service.\n. It's just another cookie middleware with a diff name -- they should not conflict. In fact, IdSvr uses 3 diff cookie middlewares.\n. OIDC sends a token to the MVC app to authenticate the user. This happens once. You'd not want it to happen on each request into the MVC app, so the MVC app takes the token and issues a cookie to then represent the user. This is standard security when dealing with external authentication.\n. > will the IdSvr know that it's the same user that it logged in before?\nYes, since IdSvr uses its own authentication cookie and that cookie will most likely only have the user's subject and name claims (not email, for example).\n. Sounds like something in your app -- i'd compare yours to the working samples.\n. The webforms sample would be the same as the MVC ones, except instead of controllers you have aspx pages. The Startup code would be the same and that's the most important part.\n. Not sure -- does your Configuration run?\n. I suspect it's something configured from system.web that's interfering. If I have some time I can try to create a quick web forms sample.\n. WebForms sample is now on dev branch. You'll also need the corresponding update on the IdSvr dev branch (for the new client config).\n. No idea. It's not clear where this error is coming from.\n. With XHR2 you can do programmatic file uploads (and thus set the access token as the authorization header). But if you can't use that then just send the token in an input field.\n. All of our samples use MyGet and thus might need the versions updated. Can you try that and let us know>\n. Also, we just updated our references. Please try it again.\n. Thanks for the PR. You certainly have brought to light that our config for the samples is not ideal, but we decided that a shared library wasn't the approach we wanted to take. As such, we're reject the PR. \nBut given your prod, we've taken another approach and hopefully the samples are less painful to keep in sync with the main core config. \nThanks!\n. Ah yes, thanks -- I meant to come back in here and talk to you about that. Sorry.\n. We recently updated many of them. Please check again and see if the situation is improved. Thanks.\n. They describe a sample web api -- one API for \"reading\" data, and another API for \"writing\" data.\n. I don't follow -- what does \"embedded mode\" mean?\n. We recommend that you use IdentityServer via a NuGet reference. \n. You're asking lots of fundamental questions that can be answered by reading the docs, or watching the intro video. https://identityserver.github.io/Documentation/\n. You need to define the claim in both the identity scope and the resource scope that the client is requesting.\n. I'd check the GetProfileData implementation in your user service -- it should get called once for each token (and there's a context param that indicates which token is being populated).\n. Use client credentials flow. We have samples of that.\n. You can implement the IViewService interface. Check the docs on custom view service.\nAlso, if you're doing ASP.NET 5, then maybe you'd prefer using IdentityServer4: https://github.com/IdentityServer/IdentityServer4/\n. Oh yea -- I think so. Yep, looks like there's this:\nfactory.ConfigureDefaultViewService(new IdentityServer3.Core.Services.Default.DefaultViewServiceOptions\n{\n    CustomViewDirectory = \"c:\\\\views\"\n});\n. Sounds similar: https://github.com/IdentityModel/oidc-token-manager/issues/51\nYou'll have to wait for the oidc-client library to be rewritten (https://github.com/IdentityModel/oidc-client/issues/2) to get this bug fixed.\n. You can use any data store you want with IdSvr, you just need to implement the various extensibility points that we document here: https://identityserver.github.io/Documentation/docsv2/configuration/serviceFactory.html\n. Most of the context params have the Client as a property.\n. > What prevents someone from extracting or capturing it and the client ID and impersonating your app?\nNothing. For public clients the secret is not really secret. For public clients it's best to not make authorization decisions based on the client.\n. > Does it make sense conceptually?\nI've never had a customer ask for this. But do whatever you need to -- IdSvr is sufficiently flexible to allow it.\n. I think this got merged. Closing. Thx.\n. thanks\n. Is that working for you? That piece of how you manage the DB for you users is really up to you. Our AspId library is really more of a sample to get you started, and at the end of the day it's your code that you need to manage. \n. We suggest people use GUIDs for the sub claim, since things like username might change or technically could get reused for different people.\n. Sure, I get it.\nSo are we all set on this issue?\n. Oh, yes -- we refuse off host requests by default. You need to configure some security for the admin portion as shown in the IdMgr samples.\n. Yep. Again, the samples have a sample config for that.\n. 1: you'd have to do that via a custom view service.\n2: no\n3: you can inject the OwinEnvironmentService into the ctor of your LocalizationService.\n. If you want info about the user in the web api, then you can pack any claims you want for the user into the access token by configuring the scope claims on the scope.\n. And does your GetProfile API on the user service return this claim when asked? We doc how to bbuild a user service here: https://identityserver.github.io/Documentation/docsv2/advanced/userService.html\n. All of the samples pretty much show this. The samples are preconfigured for the sample host from the core IdentityServer3 repo.\n. https://github.com/IdentityServer/IdentityServer3/blob/master/source/Host.Configuration/IdentityServerExtension.cs#L78\n. Yes, that's also possible. I have no idea what other IdPs you're using, so you'd have to check their docs to learn how to configure an OIDC IdP. \n. Closing as there are answers on SO.\n. Check the commit history -- it was renamed to DefaultViewService\n. It's now been fixed.\n. What are you logging settings?\n. The \"remote cert is invalid\" sounds like you just don't have SSL and the trust properly configured. That's all unrelated to IdentityServer.\n. I think you found it.\n. Or the host from the core repo -- all the configs match the clients samples.\n. Looks like CORS is not enabled on the web api. Either we forgot it, or you changed the port of the client.\n. To improve discoverability of frequently asked and/or more general questions, we decided to move those questions to StackOverflow:\nhttps://stackoverflow.com/questions/tagged/?tagnames=identityserver3&sort=newest\nWe actively monitor SO as well but hope to create a community there so questions can get answered faster when we are not available.\n. Where are you triggering login from? If it's not from a OIDC client (e.g.e the permissions page), then it's possible that it's null.\n. Client id should be passed if you are properly triggering an authorization request from an OIDC/OAuth2 client.\nEnable logging and see if it shows anything.\n. Ah, ok. Then that might not be something we support. Check the WS_Fed repo issue tracker and see if there's an open issue. If not, create one.\n. IdSvr3 requires client secret, even if it's not a secret for public clients. We try to make it well known (like google does).\nAs for secret-less, PKCE is all about having a secret, albeit dynamically created. Perhaps you're aware of that, and that's not what you mean.\n. Nice, thanks,.\n. Not sure what the problem is, but you can always make your own certs: https://brockallen.com/2015/06/01/makecert-and-creating-ssl-or-signing-certificates/\n. thanks!\n. It wouldn't -- that's not the normal scenario for a browser client. If you don't want user authentication from a browser client (meaning JS) then the API might as well be anonymous.\n. Oh sorry -- this fell off my radar. You could always do a client certificate endpoint via a partial login.. What's the issue?\n. The new library is here: https://github.com/IdentityModel/oidc-client-js. If you're using your own module loader, then you use what's from ~/lib. If you're not then you use the self-contained file (polyfills & all) from ~/dist.\n. This is a property from the client configuration. . This is a client-side OIDC library for JS: https://github.com/IdentityModel/oidc-client\nIt's not a sample, just a library. \n. It's static\n. Sounds like you are accidentally using a singleton to get your data from MR/database?\n. That looks right, AFAICT.\nSo in short, I don't know. You'll have to debug thru it.\n. I'll close since this issue didn't get very far. If you need to reopen.. Silent renew, meaning from a JS client app? Silent review only works if you use the authorize endpoint to log the user in initially.\n. You'd have to look here: https://openid.net/developers/libraries/\n. InMemoryUser was only designed for testing. You would need to build your own user infrastructure.. Does it work if you browser to ~/core?. You said that you did not see any sign of IdentityServer working when visiting the root of the web server. All of our samples are configured to run at ~/core (this is discoverable by looking in Startup), so I was trying to show you that it is running. \nAs for your custom login pages, thin about when that's shown with IdentityServer... a login page is only needed in the context of trying to signin to a client application.. They're there: https://github.com/IdentityServer/IdentityServer3.Samples/blob/master/source/AspNetIdentity/WebHost/WebHost.csproj#L153\nThey're linked files. You need the entire repo.. Sorry -- totally missed this question/issue. I'm assuming the apps are MVC/cookie based for authentication? You'd need to share the cookies and have both apps validate the same cookie. It can be done, but this is more of a question for the Microsoft support forums.. We've done this before for other customers, but requires some internal knowledge of how to get IdSvr to \"do the right thing\" for these workflows. Since this issue fell thru the cracks, I imagine you have moved on. I'll close. Sorry for delay.. PR?. Closing. If you still have issues, feel free to reopen.. I asked for a PR. Did you submit one and I missed it?. > No - I think I helped enough by submitting this issue.\nThat's the FOSS spirit!. > Windows Security dialogue appearing\nDo you only have Windows auth enabled? You need to enable anonymous.. Somewhere in your app something is triggering a challenge.. This seems to be a general question about IdentityServer - not a bug report or an issue.\nPlease use StackOverflow for that. This has the advantage that questions and answers can be easily found by search engines, and that there are more people answering questions than just us.\nFor IdentityServer3\nhttps://stackoverflow.com/questions/tagged/?tagnames=identityserver3&sort=newest\nFor IdentityServer4\nhttps://stackoverflow.com/questions/tagged/?tagnames=identityserver4&sort=newest\nFor commercial support\nhttps://identityserver.io/. Check the logs. Having said that, this seems to be a general question about IdentityServer - not a bug report or an issue.\nPlease use StackOverflow for that. This has the advantage that questions and answers can be easily found by search engines, and that there are more people answering questions than just us.\nFor IdentityServer3\nhttps://stackoverflow.com/questions/tagged/?tagnames=identityserver3&sort=newest\nFor IdentityServer4\nhttps://stackoverflow.com/questions/tagged/?tagnames=identityserver4&sort=newest\nFor commercial support\nhttps://identityserver.io/. are you using the oidc-client library?. @maxmantz has a react library on oidc-client. Also, IdSvr4 doesn't expose a x5c if you don't use a x509 cert. see how oidc-client handles this.. Closing. If you still have issues, feel free to reopen.. What's this PR for?. Issue a \"sub\" claim at login time, and in the profile service look up your use by \"sub\". This will require digging a bit more into the IdentityServer model beyond what the ASP.NET Identity helpers provided for IdentityServer abstract you from.. Override this: https://github.com/IdentityServer/IdentityServer4.AspNetIdentity/blob/dev/src/IdentityServer4.AspNetIdentity/UserClaimsFactory.cs#L24\nand remove the claim from the collection for the PK that the base class adds.. > At the end of the day the session is still denoted by a cookie so any sign out will only affect the browser it occurred in\nWhat @mackie1001 says.. I'm not following exactly, but if you want a specific claim type then you need to add it to one of the scope definitions being requested.. Many thanks!. This repository is no longer in active development or maintenance, other than reported security vulnerabilities.\nIf you have questions and are seeking free support, see here for more details.\nIf you require commercial support, see here for more details.. ",
    "RhysC": "Cool, thanks for that. I will keep you in the loop as i will be working with this flow for a future piece of work. It may have been an issue on my side, (I'm still getting my head around everything)\n. Thanks Brock and Galen\nWill check out the WPF app and go from there  \nRhys\n. Looks like this blog post summarizes what issues I am hitting : http://www.appetere.com/Blogs/SteveM/August-2014/Getting-started-with-OpenID-Connect\nLooks like a mismatch between IDSrv3 and the M$ owin middleware\n. I may be on the wrong track here (and sorry for being annoying) but i dont seem to be getting a access_token returned.\nResponseType = \"id_token token\"\nwhich means I cant hit the user endpoint to get the other claims\nSample response here : \n```\nPOST http://localhost:51207/ HTTP/1.1\nHost: localhost:51207\nConnection: keep-alive\nContent-Length: 1943\nCache-Control: max-age=0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,/;q=0.8\nOrigin: http://localhost:3344\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2062.120 Safari/537.36\nContent-Type: application/x-www-form-urlencoded\nReferer: http://localhost:3344/core/connect/authorize?client_id=implicitclient&redirect_uri=http%3A%2F%2Flocalhost%3A51207%2F&response_mode=form_post&response_type=id_token%20token&scope=openid%20email%20profile&state=OpenIdConnect.AuthenticationProperties%3DSSnkooKW3Qgvz-TMs0PlsqiydVT2xulAR7qWbUOjnQd9rD2fgSb30LDv9YK0jOlxzLCUjeqht2HFuqQvKRgr91Nn4QyBEC7aany8F0xDZ2Kq6ynA_2fT-0iPSvqkiJdFtmKWZwYSor_eWtrRaznwS6cJxClKzOXPH9mqpqrLbA0Cjkviasj4dcJPZm8hrVCTXXwdAmqj1-bkDNf1kYTRKA&nonce=635472273783219349.NTVkMWQ0YzktNGE2Zi00MmVhLWE3MjEtMDFiMzAxYTJiZmI4MTQ2OTZkNDUtNWI1My00NjlkLThmZTctZDU2NzJjNzI1Nzgy\nAccept-Encoding: gzip,deflate\nAccept-Language: en-GB,en-US;q=0.8,en;q=0.6\nCookie: OpenIdConnect.nonce.OpenIdConnect=Rjg5dEVTNllVcThJQXY1a28yd2prQ04tUnY0RGR3eHE0blRmLTlKVURiV0VUUnBZcGxhc3VmNklUMEpRS0xGU1FjVmR2MkQtYVg4YTEzVTJIampQYmFPZUk1ZEdJeXN4ODVyMVJCMXVMT21SWTlGdFJMWUYwQ2ItWGtBOEdxa1lJdWZ0UEwyRENGc3RlQXlxLW9Md1dDVUNwYnlLQ2dfQUVGLWFGRTFCdFRWOGZoNkNHUWZtVUR4dTlXM3c1NXpyM0xIMGh5MHIzNGZ5cXBTLWlxbDhTSGlfTFY2Y0I4MV9GOE10MnlHM2JFdw%3D%3D; idsrv=AQAAANCMnd8BFdERjHoAwE_Cl-sBAAAAeXY61rX1YUeZOHgVwwifngAAAAACAAAAAAADZgAAwAAAABAAAAA6jS2WRgQn600JrQUPJzBoAAAAAASAAACgAAAAEAAAABUqB9VeLUTwKu_Hd3HAE9TIAAAAJXxlwRYTSPOefP8-EiRMi6C98je6mEIRxEpu9Ot6LaSSKn9ehWxngHE0z6oW-OsUJGywgwcHA7y75UHjDfE4I5AJ-aE-96k7NIMA5kYDjidGI9g4Q9c9o3gb-sQJKeVOmdlRPG6UkWb5f6FjmrmEAVMIOXsuS5oNw1CbIP8-xYPcWHB4JmLkm6lV9-IjHdsem6VtXCLHTn6Uz7fa1GI52U_rBp6getmvDmABQnWAclbxuuP9pqJy0QjGBi-UkIQz3pIVHeCHOsYUAAAApaxMeqF96ilg-lQVDvBk6eMDc4o\nid_token=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6ImEzck1VZ01Gdjl0UGNsTGE2eUYzekFrZnF1RSJ9.eyJub25jZSI6IjYzNTQ3MjI3Mzc4MzIxOTM0OS5OVFZrTVdRMFl6a3ROR0UyWmkwME1tVmhMV0UzTWpFdE1ERmlNekF4WVRKaVptSTRNVFEyT1Raa05EVXROV0kxTXkwME5qbGtMVGhtWlRjdFpEVTJOekpqTnpJMU56Z3kiLCJpYXQiOjE0MTE2MzA1ODUsImF0X2hhc2giOiJUdmY5RVl6aEJJSUhMVnJ1NWt3T2J3Iiwic3ViIjoiYWxpY2UiLCJhbXIiOiJwYXNzd29yZCIsImF1dGhfdGltZSI6MTQxMTYzMDU4NSwiaWRwIjoiaWRzcnYiLCJuYW1lIjoiYWxpY2UiLCJpc3MiOiJodHRwczovL2lkc3J2My5jb20iLCJhdWQiOiJpbXBsaWNpdGNsaWVudCIsImV4cCI6MTQxMTYzNDE4NSwibmJmIjoxNDExNjMwNTg1fQ.K_ho72NL06HMHOyPNYNl2cF5EGGQwnrQQQnLAn5rC4QIdWR4UJxXovIPg32WSr4GwEaRbDzQq70VbdcbXSD3ZNHhQSnpgVkb3aVK8sUg8hR0gQm7FnqAYE4qgsX1Bv2TzXDd39jG-x03R7dPqJotNv_6gMMQx7EEYhhQvWf2b9OJ6WHkKtZrItBL0tlsbM7wnYCm8OxG5VfMbu6dpITyHeXvtUkttHX3iiNCBqn5Qes-1WP6Aizvz6K3xyk-F_Nxbg0PjnxmBzPs37VIFRP_r6f9mxeHzbcuSA3Bo61ra-z4mUUbHlAjxUxsoQeABca_pHq4FXFtGuq5oyvAHRk2yg&token=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6ImEzck1VZ01Gdjl0UGNsTGE2eUYzekFrZnF1RSJ9.eyJjbGllbnRfaWQiOiJpbXBsaWNpdGNsaWVudCIsInNjb3BlIjpbIm9wZW5pZCIsImVtYWlsIiwicHJvZmlsZSJdLCJzdWIiOiJhbGljZSIsImFtciI6InBhc3N3b3JkIiwiYXV0aF90aW1lIjoxNDExNjMwNTg1LCJpZHAiOiJpZHNydiIsIm5hbWUiOiJhbGljZSIsImlzcyI6Imh0dHBzOi8vaWRzcnYzLmNvbSIsImF1ZCI6Imh0dHBzOi8vaWRzcnYzLmNvbS9yZXNvdXJjZXMiLCJleHAiOjE0MTE2MzQxODUsIm5iZiI6MTQxMTYzMDU4NX0.fh_jyoyLQpu3LcbHb18KUXYZwux-zEeUXChVjsmP3BAoDz_GIVl92PkJNcMdRcLztuUjQuj0dqC__sfxV7d_kMRE7CtqysN4sl3Ex-RPZEJ6j6JqcMUASJXhjzaENvY2I4VA4VuTmv2DfzbwyOGT5tfjo4L8TQtIjRV7n97JuW6LhBs8A10A2tLUp6TqCIB_1Y3PthY96yGl_waq1eff_Lah8D2ray6n1v6EyO4NSSsUItR5SRUujMF7TvB_Dfpcr5MZxUXLbnta7dJONea-R_Ne_OJWYdzHKiUJ2p-rF9esN3J8RpoThZO8AOmuW_bdioAcDz99q8Rq_AIqYtu-_g&expires_in=3600&state=OpenIdConnect.AuthenticationProperties%3DSSnkooKW3Qgvz-TMs0PlsqiydVT2xulAR7qWbUOjnQd9rD2fgSb30LDv9YK0jOlxzLCUjeqht2HFuqQvKRgr91Nn4QyBEC7aany8F0xDZ2Kq6ynA_2fT-0iPSvqkiJdFtmKWZwYSor_eWtrRaznwS6cJxClKzOXPH9mqpqrLbA0Cjkviasj4dcJPZm8hrVCTXXwdAmqj1-bkDNf1kYTRKA\n```\n. Sorry @brockallen : how do i get the access token? My understanding was that is was to be sent back on the auth response but as the example i posted above there is no access token in the reponse\nhttp://openid.net/specs/openid-connect-core-1_0.html#ImplicitAuthResponse\n. @galenp ok coolm so i must be doing something wrong - I am running the MVC Owin sample - will try the JS one today\n. JS client in samples works as expected for me. I assume there is a mismatch between the M$ OWIN middleware and idsvr3 or i have mis-configured it (or have an incorrect expectation of what i should be getting)\n. @brockallen also the MVC form post works as expected (i.e. i can return other claims) - i assume this is why the sample exists - is the OWIN client known to have issues?\n. thanks so much @brockallen - that makes a lot more sense. \nHave gone back to the spec and the original samples - I had made cascading changes that lead me down the wrong path. Wiped the slate and have got the implicit and code flows working as expected. Thanks for your patience\nRhys\n. ",
    "mikeandersun": "It is better if exist an IIS/Web Sample with MembershipReboot and EntityFramework together.\nBest,\n. ",
    "leastprivilege": "Check the sample Web API in the \"Clients\" sample.\n. The access token is not used for authentication in the client - it is used for api access.\nFor authentication you would use the identity token - check the form post manual sample - it has all the necessary steps.\n. https://github.com/thinktecture/Thinktecture.IdentityServer.v3.Samples/blob/master/source/Clients/MvcFormPostClient/Controllers/AccountController.cs#L49\n. Yes - use the JwtSecurityTokenHandler.\n. You need this to use the Katana authentication middleware from Nancy\nhttps://github.com/damianh/Nancy.MSOwinSecurity\nAsk Damian directly when there are more questions.\n. The sample works as expected - the reference token was by design - you can of course change it to Jwt - but this will make your cookie much bigger.\nThe service requires a scope of either \"read\" or \"write\" - so you need to request that on the first page to be able to access it.\n. I think that is a \"race condition\" that might occur when doing the walkthrough. I will keep this open so I can maybe change it when I continue working on the docs.\nthanks\n. I added a null check in dev\n. The debugger in VS let's you point to the source files - that's how I debug stuff.\n. That's not what I meant - but glad you got it working.\n. done\n. done in some of the samples\n. I don't think this is documented right now - but have a look at the CSP options (off of the main IdentityServerOptions in startup).\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v3/blob/master/source%2FCore%2FConfiguration%2FCspOptions.cs\n. ah it was documented ;)\n. Nice ;) @brockallen you just got hit by an injection attack ;))\n. I agree.\n. You requested scopes must include openid to be able to access the userinfo endpoint.\n. The validation endpoints simply validate a token and return its contents. The userinfo endpoint returns user profile data (based on the openid scopes in the acccess token).\nWhile this might look similar - they are different use cases.\n. The token endpoint allows for extensibility - you can use so called custom grant types and take over the validation process. Check the samples repo for the two custom grant types solutions.\n. yep - this should be fixed now.\n. thanks! Will merge after NDC\n. thanks!\n. is this resolved?\n. then add one ;)\n. ok. updated.\n. We don't have an example - but you can use the standard JWT security token handler.\n. What do you mean with built-in - Web API v1 did not have built-in support for that. \nYou'd write a MessageHandler to inspect incoming requests and then validate the tokens.\n. PR to what?\n. why don't you upgrade to v2?\n. you probably can use the Thinktecture IdentityModel AuthenticationHandler library for that...\n. well it does - but you need MVC in addition.\n. fixed in hackathon repo\n. fixed in hackathon repo\n. IIRC fixed in hackathon repo\n. Hey!\nthanks! I also realized that I need the PR on the dev branch. I will update the Win8.1 sample manually - could you send me a separate PR for the phone sample as a stand alone solution?\n. Sorry - i am late. But when you look at the commits - it first adds the sample and then moves it. I can't merge that. Could you provide me a new fresh PR with just the phone sample.\nthanks!\n. Wrong repo for that question.\nWe realize that the docs are not fully synced with the code right now - we are working on it, and things will become better by RTM time (end of jan). The samples should have most of what you need though.\n. we still need a simple JS client without all the bells & whistles.\nInitiate request, validate callback - extract token\n. yes\nFrom:  Brock Allen\nReply-To:  \"IdentityServer/Thinktecture.IdentityServer3.Samples\"\nDate:  Mittwoch, 28. Januar 2015 02:18\nTo:  \"IdentityServer/Thinktecture.IdentityServer3.Samples\"\nCc:  Dominick Baier\nSubject:  Re: [Thinktecture.IdentityServer3.Samples] Update JS Client to \nuse Token Manager (#52)\nJust an oauth2 sample, you mean?\n\u2014\nReply to this email directly or view it on GitHub.\n. wanna merge to master?\n. oh - did i forget that? that's a bug. thanks!\n. updated on dev - will be merged to master for RTM\n. wanna merge to master?\n. thanks!\n. Try Microsoft's OWIN room on Jabbr.\n. Not sure I understand that comment - you care to explain?\n. I still can't make the connection here - Brock was just telling you that if documentation and samples are not enough - you might need some consulting for the basics. Not necessarily from us.\nWe are indeed a small team and try to help wherever we can - but we also have a \"day job\".\n. Yes that's what I am saying - play around with it and feel free to open issues when you have more specific questions.\n. It's SSL - SSL must be setup correctly.\n. Check the docs on CORS \nSent from my iPhone\n\nOn 11.02.2015, at 10:55, MMK notifications@github.com wrote:\nusing JavaScript Implicit Client - TokenManager as client and SelfHost (Minimal) as IDP but when test get the following error :\nXMLHttpRequest cannot load https://localhost:44333/core/.well-known/openid-configuration. No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'http://localhost:21575' is therefore not allowed access.\n\u2014\nReply to this email directly or view it on GitHub.\n. SPAs use implicit flow. ADAL is for MS backends only.\n. The WPF browser control uses IE - IE has a limitatio of 2048 bytes.\n\nhttps://stackoverflow.com/questions/812925/what-is-the-maximum-possible-length-of-a-query-string\nAs Brock said - either use reference tokens to keep the size small (or less claims) - or use something like https://github.com/cefsharp/CefSharp (chrome browser control).\nOr a third options (something I haven't investigated) - see if you can use a response_mode of form_post - this would result in a form post instead of a redirect. Let me know if this works with the WPF browser control.\n. https://github.com/IdentityServer/IdentityServer3.Samples/blob/dev/source%2FClients%2FWpfClient%2FLoginWebView.xaml.cs#L48\n. with HTTP\nhttp://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n. RAMMFAR!!!\nhttps://github.com/IdentityServer/Thinktecture.IdentityServer3.Samples/blob/master/source/WebHost%20(minimal)/WebHost/Web.config#L12-L14\n. IdSrv is running in a self host - the rest is not.\nVisual Studio sets up SSL on the above mentioned port range. If Visual Studio and IIS Express are setup correctly, this should not be an issue.\n. Feel free to move IdSrv to any other port (or IIS Express) or try using plain HTTP first (set the RequireSsl to false on the options). \n. true. Learn to SSL :p\n. No - you can use any SSL certificate for self hosting. But it must be trusted in the SSL sense from a client point of view.\nI had no specific reason to use a self host for this sample (besides just showing a different approach opposed to most other samples).\nIf Visual Studio is setup correctly - it does pre-configure the 44300 above address range with listening permissions and a localhost cert.\nYou can move to IIS Express if self hosting does not work for you or investigate how to manually configure HTTP.SYS (e.g. using netsh).\n. You all know the concepts of PRs - this is not a product - it's an OSS project.\nIf you think you can add value to it (fix a bug, simplify the code, add instructions) - please do.\nSorry @bcreech - comments like this remind me of https://twitter.com/eranhammer/status/679163371707568129\n. Sorry - I won't add that line of code. This API shouldn't even exist.\n. First of all - why are you using that code. All you need the OIDC MW (and maybe some claims transformation).\nMicrosoft's template code assumes Microsoft's claim types. We use the standard claim types for OIDC - that's why their sample code fails.\n. Core would be also better suited for these kind of questions - since this is not an issue with one of our samples - is it?\n. It is a portable library. That's all.\n. wrong repo.\n. Well - it might be worth looking at the html that gets returned (or looking at the endpoint using a browser) - I bet it is an error message ;)\n. And you are sure that there is your Web API Controller listening on the URL you are trying to reach? Why would it return HTML?\nThe HTML looks like it is from IdentityServer - not the API controller (maybe you want to have a look at the sample code)\n. Never saw that error before, sorry.\n. wrong repo\n. The HTTP tracing and MVC in the same web app breaks MVC. Turn off the tracing and see if this changes anything.\n. Yes EnableHttpLogging. I should add a note to the docs..\n. https://identityserver.github.io/Documentation/docs/configuration/logging.html\n. :) no worries.\n- clone the repo\n- create a new branch\n- do just the one thing you want to fix on that branch\n- use that branch for the PR\n. Clients do not login. Users do.\n. ..and wrong repo.\n. :) no worries.\nclone the repo\ncreate a new branch\ndo just the one thing you want to fix on that branch\nuse that branch for the PR\n. closing this one\n. - Clone the \"dev\" branch\n- Created a new (local) branch from this \"dev\" branch\n- Made a change in the local branch\n- Commit the change in the local branch\n- Push the branch to your repo on github\n- Make a pull request on github\n. https://guides.github.com/activities/contributing-to-open-source/\nSent from my iPad\n\nOn 14 Mar 2015, at 18:06, Vincent van der Kroef notifications@github.com wrote:\nI realy feel like a fool, but I am stuck at \"Push the branch to your repo on github\".\nDo you mean my own repository or a branch on the IdentityServer repository? A branch on the IdentityServer repository is not working (I don't have rights) and to my own, well.. I just can't figure out how this can be done.\n\u2014\nReply to this email directly or view it on GitHub.\n. We don't have one for the samples. Should we?\n\nSent from my iPad\n\nOn 15 Mar 2015, at 00:10, Brock Allen notifications@github.com wrote:\nCLA signed?\n\u2014\nReply to this email directly or view it on GitHub.\n. That's fine thanks!\n\nSent from my iPad\n\nOn 15 Mar 2015, at 09:21, Vincent van der Kroef notifications@github.com wrote:\nI've signed a CLA, but it's for the IdentityServer project.\n\u2014\nReply to this email directly or view it on GitHub.\n. Hard to say if you missed a step ;)\n\nyou can always check with the full sample \"solution\".\n. Then learn to SSL ;)\n. There\u2019s an \u201cedit\u201d link on each page. Feel free to add that.\n\u2014\u00a0\ncheers\nDominick Baier\nOn 18 Sep 2015 at 22:33:06, Ryan Gates (notifications@github.com) wrote:\n@leastprivilege it would be nice to provide a heads up in the documentation, repository or somewhere else that configuring ssl is required for the example to work. I ran into the same issue.\n\u2014\nReply to this email directly or view it on GitHub.\n. Don't have a VS2015 machine around right now.\nIs this really necessary since we are setting the provider manually?\n. got it. This must have changed. \nthanks!\n. Look at the IUserService interface, the user service documentation and then ASP.NET Identity and MembershipReboot integration repos.\n. thanks!\n. Well - the above can't work - you are not validating the audience.\n. You can't access the 2fa controller directly - it must be part of a login flow.\n. Hi, \ncouple of things - \nwe haven't discussed if this is the right way of doing it and when you look at your changes - this is pretty messy. So I can't accept this.\nAre you now doing it the way I recommended to you? If yes, show me the code first and then we can see if we add a separate sample to the repo (not part of the Clients solution).\n. @brockallen why assign to me? you wrote that sample?\n. Sure. Check the custom user service samples. \nSent from my iPhone\n\nOn 23.05.2015, at 14:54, peske notifications@github.com wrote:\nI'm trying to implement IdentityServer3 with MembershipReboot + external providers. But when a user uses external provider I would like to enforce him to pick local username (instead of using auto-generated username). I've saw Brock Allen's video at vimeo where he's mentioned that such custom workflows are possible, but he hasn't explained how to accomplish this. (There he's promised that this topic will be explained in other video but obviously it hasn't happened.)\nIs there any sample where any kind of custom registration workflow is implemented?\nThanks!\n\u2014\nReply to this email directly or view it on GitHub.\n. hi, \n\nthanks - but why do you need to install those certs?\n. thanks!\n. IIRC - you need to do this\n``` csharp\napp.UseOAuthBearerAuthentication(options =>\n{\n    options.Authority = \"https://base_address_of_idsrv\";\n    options.Audience = \"https://base_address_of_idsrv/resources\";\noptions.AutomaticAuthentication = true;\n\n});\n```\nIf you have manually configured the issuer name of idsrv then you need to use issuerName/resources as audience.\n. The scope checking has to be done manually as well.\n. https://github.com/IdentityServer/IdentityServer3.Samples/tree/dev/source/AspNet5Host\n. We are using Autofac - not ninject. And this has been discussed before - the DI system will stay as is.\n. we recently updated to beta8 - maybe that makes it easier. Besides that - I don't see a point in running idsrv on a beta host (katana works just fine).\n. My money is on ssl problems between web api server and idsrv. \nIn any case - we use katana logging for more info. \nSent from my iPhone\n\nOn 21.08.2015, at 13:08, Taiseer Joudeh notifications@github.com wrote:\nHi @brockallen, in the clients samples repo (MvcCodeFlowClientManual). There is a client with id \"codeclient\" configured in the IdentityServer to use reference access tokens not JWTs. Everything is working correctly and we are able to receive reference access tokens, but once this client tries to call the Api (Resource Api which is protected by the Identity server) and by sitting the reference access token in the Authorization header using Bearer scheme, we always receive 401, taking in consideration that once we try to validate this reference access token using the endpoint \"connect/accesstokenvalidation\" we receive 200 and this token is valid.\nIf we tried to change the access token type for this client to JWT everything works correctly, we receive a JWT, and we are able to use it to access the Resource API, so I believe receiving 401 has nothing to do with missing scopes or misconfigurations between client, Identity Server, and Resource API.\nI guess I missed something when I tried to configure Identity Server so those reference access tokens are not validated correctly.\nCan you guide me where to look further and try to debug the issue?\nRegards,\nTaiseer\n\u2014\nReply to this email directly or view it on GitHub.\n. please do that.\n. thanks...\n\nbut why did you have to install the certs at all? All samples work without explicitly installing the cert - IIRC\n. thanks - I will update the text\n. You need to set the SigningCertificate - check the walkthrough.\n. we have a MVC view service sampe now\n. idsrv is just a standard web app - i don't know of any special steps necessary. If you have written a tutorial or walkthrough let us know.\n. As always - turn on logging. \nSent from my iPad\n\nOn 01 Oct 2015, at 16:38, majhoos notifications@github.com wrote:\nIn Self-Host Project everything works perfectly fine when I use the default configuration and Cert.cs in particular however when I load the certificate from the Certificate Store using the following code :\npublic static X509Certificate2 LoadFromStore()\n   {\n    var s = \"\u200e\u200e600bc077f3494b38277ab640038ae61fb6bdd968\"; // hardcoded for testing \n```\nvar thumbprint = Regex.Replace(s, @\"[^\\da-zA-z]\", string.Empty).ToUpper();\nvar store = new X509Store(StoreName.Root, StoreLocation.LocalMachine);\ntry\n{\n    store.Open(OpenFlags.ReadOnly);\nvar certCollection = store.Certificates;\nvar signingCert = certCollection.Find(X509FindType.FindByThumbprint, thumbprint, false);\nif (signingCert.Count == 0)\n{\n    throw new FileNotFoundException(string.Format(\"Cert with thumbprint: '{0}' not found in local machine cert store.\", thumbprint));\n}\n\nreturn signingCert[0];\n\n}\nfinally\n{\n    store.Close();\n}\n```\n}\nI still manage to run the Host with no problem and browser doesn't complain either but on the client side I get Internal Server Error :\n{StatusCode: 500, ReasonPhrase: 'Internal Server Error', Version: 1.1, Content: System.Net.Http.StreamContent, Headers:\n{\n  X-SourceFiles: =?UTF-8?B?Rjpcc291cmNlXFJlZlwwNC0wNC0yMDE0XERpc3RyaWJ1dGVkUmVmZXJyYWxcSG9zdFxjb25uZWN0XHRva2Vu?=\n  Date: Thu, 01 Oct 2015 11:41:22 GMT\n  Server: Microsoft-IIS/10.0\n  X-Powered-By: ASP.NET\n  Content-Length: 8455\n  Content-Type: application/json; charset=utf-8\n}}\nTo be more precise I managed to narrow down the problem to the RequestAsync method of the OAuth2Client :\n```\npublic async Task RequestAsync(Dictionary form, CancellationToken cancellationToken = default(CancellationToken))\n{\n    var response = await _client.PostAsync(string.Empty, new FormUrlEncodedContent(form), cancellationToken).ConfigureAwait(false);\nif (response.StatusCode == HttpStatusCode.OK || response.StatusCode == HttpStatusCode.BadRequest)\n{\n    var content = await response.Content.ReadAsStringAsync().ConfigureAwait(false);\n    return new TokenResponse(content);\n}\nelse\n{\n    return new TokenResponse(response.StatusCode, response.ReasonPhrase);\n}\n\n}\n```\nIf I use default certificate (the one which comes with the project) above code happily works and response.Status == HttpStatusCode.OK however when I load the certificate from the store as explained above it gets into the\nelse\n    {\n        return new TokenResponse(response.StatusCode, response.ReasonPhrase);\n    }\nwith ResponsePhrase = 'Internal Server Error\"'.\nHow can I capture what is going wrong on Host? I tried to play around with the inital setup to resolve the issue but no luck:\n```\n    var certificate = Certificate.LoadFromStore();\nvar options = new IdentityServerOptions\n{\n    SiteName = \"Thinktecture IdentityServer3 (EntityFramework)\",\n    SigningCertificate = certificate,\n    //SecondarySigningCertificate = certificate,\n    Factory = Factory.Configure(connectionString)\n    ,RequireSsl = true\n    //Factory = InMemoryFactory.Create(\n    //            users: Users.Get(),\n    //            clients: Clients.Get(),\n    //            scopes: Scopes.Get())\n\n};\n\napp.UseIdentityServer(options);\n\n```\n[Certificate is valid and is located inside Trusted Root Certificate of the same machine which both client and server are running]\n[Both client and server are running with administrative privileges]\n\u2014\nReply to this email directly or view it on GitHub.\n. But some documentation\n. There should be a nuget.config in every sample - and VS should pick the myget feed up automatically.\n. The lifetime of the id_token is not related to the length of the authentication session in your client.\n\nYou set a cookie in your client - the parameters of its lifetime is up to your client app (you can synchronize their lifetime using the UseTokenLifetime setting on the OIDC MW).\n. @brockallen can you look into that?\n. cool. thanks!\n. thats a MS bug - fixed in RC2\n. No - it works for me. Take the sample from the samples repo. \nI am just saying that the RC1 MW throws when it cannot validate the token.\n. That's wrapped up here:\nhttps://www.nuget.org/packages/IdentityServer3.AccessTokenValidation.Integration.AspNet/\n. just pull a newer version from nuget.\n. closing - feel free to re-open if necessary.\n. IIRC we did not design the end session endpoint to be called by AJAX. If you think this is an oversight - please open an issue in the main repo.\n. I don't follow. feel free to re-open (maybe rather on core than here).\n. seems like a problem with the MS middleware. would need to do some more tests myself. feel free to re-open when you made progress / have more questions\n. thanks! let's talk again once asp.net 5 is released. too much beta code right now.\n. thanks!\n. would need much more info. But I think this step isn't even necessary anymore.\n. Feel free to re-open if still an issue\n. thats the wrong repo. Use core.\nBut as always - first check the logs.\n. You should really use the certificate store - and not a file on disk.\nhttps://azure.microsoft.com/en-us/blog/using-certificates-in-azure-websites-applications/\n. Maybe some URL is wrong - hard to tell.\n. thanks!\n. You can try porting this to Mono:\nhttps://github.com/IdentityServer/IdentityServer3.Samples/tree/master/source/Clients/MvcFormPostClient\n. thanks!\n. thanks!\n. access token lifetime is set on the client config in idsrv.\nthe sender either proactively makes sure the token is valid (e.g. using refresh tokens) - or it waits for an error from the service. \n. They need separate names as they model different things - identity vs apis.\n. no - they are using the linked files in the parent dir\n. I think you also added a property to specify where to load the files from, no?\n. The sample works. It is hard to tell what's might be wrong with your setup\n. Is it that you cannot reference Katana at all - or that you can't use an IAppBuilder?\n. JS clients use implicit flow.\n. ..and IE has a restriction of 2 KB on URLs.\nYou can use the userinfo endpoint to make your id_tokens smaller, and reference tokens to make the access tokens smaller. Has been discussed here numerous times. search the archives.\n. IdentityServer is \u201cauthentication as a service\u201d. Authorization is an application concern.\n\u2014\u00a0\ncheers\nDominick Baier\nOn 27 April 2016 at 16:40:23, mirac61 (notifications@github.com) wrote:\nHello, I am developing a multi client project, and I try using Identity Server on authentication and authorization layer. But I don't want use roles, I need authorize user based, I will preapre authorize templates, while new user join system select one of them and can customize later. forexample: user x can access y page, user x can't delete on y page... Is possible can do it with identity server?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\n. That's C# 6 features. You need to remove them on 2013.\n. I am sorry if this is inconvenient for you. Maybe download the free VS2105 community edition?\n. Why is validate issuer set to false?\n. Validating the issuer name is part of validating a token.\nAn issuer could be muli-tenant and use the same cert for all tenants. You would need to check if the token is coming from the right logical issuer. AAD e.g. does it like that.\n. client secrets are not logged IIRC.\n. It certainly depends on the logging settings - e.g. when you log http traffic - all secrets will be in the logs.\nLogging is not made for production use as the docs explain.\n. As I said before - I think yes. (unless you prove me wrong ;))\n. IIS requires a / at then end. IIS Express not (make sense, right?)\n. did you read the docs?\nhttps://identityserver.github.io/Documentation/docsv2/consuming/diagnostics.html\n. are you using JWTs or reference tokens?\nCan you access the needed endpoints from the resource server?\n. For JWTs the access token validation endpoint is not used. \nThe disco doc is retrieved at API startup and would throw an exception if it fails.\nyou can inject a middleware after the token validation to inspect the claims - that what I would try.\n. JWT and validation endpoint does not make sense. Set it to local.\n. set it to local and check the logs again.\n. so then token validation succeeded before.\nDo you have SuppressDefaultHostAuthentication somewhere in your web api config?\n. add a middleware after the access token one that checks the ClaimsPrincipal on the OWIN context\n. if loading the disco doc would fail - you would actually get an exception at start time\n. To improve discoverability of frequently asked and/or more general questions, we decided to move those questions to StackOverflow:\nhttps://stackoverflow.com/questions/tagged/?tagnames=identityserver3&sort=newest\nWe actively monitor SO as well but hope to create a community there so questions can get answered faster when we are not available.\n. To improve discoverability of frequently asked and/or more general questions, we decided to move those questions to StackOverflow:\nhttps://stackoverflow.com/questions/tagged/?tagnames=identityserver3&sort=newest\nWe actively monitor SO as well but hope to create a community there so questions can get answered faster when we are not available.\n. To improve discoverability of frequently asked and/or more general questions, we decided to move those questions to StackOverflow:\nhttps://stackoverflow.com/questions/tagged/?tagnames=identityserver3&sort=newest\nWe actively monitor SO as well but hope to create a community there so questions can get answered faster when we are not available.\n. If you don't specify anything special in initializeData - it will use the current directory (trace.log). Make sure the process has write access.\n. thanks\n. thanks\n. To improve discoverability of frequently asked and/or more general questions, we decided to move those questions to StackOverflow:\nhttps://stackoverflow.com/questions/tagged/?tagnames=identityserver3&sort=newest\nWe actively monitor SO as well but hope to create a community there so questions can get answered faster when we are not available.\n. dupe\n. That's correct.\nIf you need to require multiple scopes, use multiple middlewares.\n. the sample has not been updated - you probably rather wanna have a look at idsrv4 for asp.net core.\n. This sample is deprecated. @brockallen has a new one. right?\n. PKCE and client secret are unrelated.\nHere's the issue to eliminate the need for the secret in the client lib\nhttps://github.com/IdentityModel/IdentityModel.OidcClient/issues/25\n. Not the only - but the recommended.\nhttps://tools.ietf.org/html/draft-ietf-oauth-native-apps-03\n. You haven't read the spec - I am not saying to use IE - I am saying \"use the system browser\".\n. Head less servers don't have interactive users. They use client credential flow.\nYou can use resource owner flow - with the known limitations.\n. This seems to be a general question about IdentityServer - not a bug report or an issue. \nPlease use StackOverflow for that. This has the advantage that questions and answers can be easily found by search engines, and that there are more people answering questions than just us.\nFor IdentityServer3\nhttps://stackoverflow.com/questions/tagged/?tagnames=identityserver3&sort=newest\nFor IdentityServer4\nhttps://stackoverflow.com/questions/tagged/?tagnames=identityserver4&sort=newest\nFor commercial support options - visit\nhttps://identityserver.io\n. Ask your internal CA?\n. You need one that is capable of signing data for token signatures - or a normal SSL/TLS cert for HTTPS. No special requirements, e.g.:\nhttps://brockallen.com/2015/06/01/makecert-and-creating-ssl-or-signing-certificates/\nhttps://identityserver.github.io/Documentation/docsv2/configuration/crypto.html\n. This seems to be a general question about IdentityServer - not a bug report or an issue. \nPlease use StackOverflow for that. This has the advantage that questions and answers can be easily found by search engines, and that there are more people answering questions than just us.\nFor IdentityServer3\nhttps://stackoverflow.com/questions/tagged/?tagnames=identityserver3&sort=newest\nFor IdentityServer4\nhttps://stackoverflow.com/questions/tagged/?tagnames=identityserver4&sort=newest\nFor commercial support options - visit\nhttps://identityserver.io. thanks!. ",
    "megamindbrian": "@leastprivilege Thumb down for not providing a link or any reference material.\n. ",
    "galenp": "Having the same issue using the membership reboot extensions. Pretty sure the method that handles building the claims up from the db also accepts a parameter listing the claims requested by the client. If this is empty then all claims are returned. However... During my testing its never empty and always has just the 'sub' claim by default. Thus excluding the other claims.\nSounds like the same issue.\n. The response type in my case has been : token id_token\nand the scope in my case has been: openid profile read write email\nWhich as I understand it returns an encoded OpenId identity token and an OAUTH authorization token with the encoded claims.\nUsing the sample js application this represents the 'Login with Profile and Access Token' use case.\nI'm guessing now that this is expected that the access token should only contain these 'standard' claims and that the expected procedure is another request is made to the userinfo endpoint with the auth token sent in the headers.\nSo my workflow is now : \n- the JS client using the above implicit flow to authenticate with IdSvr3 now making a http request to the API server with the auth token in the header.\n- the server API would perform another request to the IdSvr3.userinfo endpoint to retrieve the full claims for the user and set  these in the ClaimsPrinciple. \nIs this workflow covered in one of the samples as it represents the missing piece of the puzzle for me? \nThanks in advance.\n. Thanks Brock that does make sense... however I guess I'm still confused by the following:\nMy understanding is It's the access_token not the id_token that will be used in the HTTP header on subsequent calls by the client JS application to the Resource Server (API).\nIf that's the case I would want to have some common claims included in that access token. User display name and email for example so when the resource server does some operation I at least have that minimum information regarding the end-user without having to call the userinfo endpoint.\nSo is it possible using the OIDC implicit flow to tell IdSvr to add these additional claims into the access token? \n. @brockallen thanks for the update, ive updated all the packages and samples. can you direct me to where you configure what claims should go into the access token?\n. @RhysC I'm getting Access tokens sent back fine running the samples.... what are you doing different? \nIf you point the JavaScript client sample to your IdSvr instance whats the result?\n. Hi Brock\nI've moved away from trying to solve this through a populated access token. Instead I get the userId from the subject part of the access token and queried membership reboot directly.\nHowever I did try and test your proposal....\nI created a new scope like so\n``` c#\n new Scope {\n    Name = \"userdata\",\n    DisplayName = \"User Data\",\n    Type = ScopeType.Resource,\n    Claims = new List()\n    {\n        new ScopeClaim()\n        {\n            Name = ClaimTypes.Name,\n        },\n        new ScopeClaim()\n        {\n            Name = ClaimTypes.Email\n        },\n        new ScopeClaim()\n        {\n            Name = ClaimTypes.MobilePhone\n        },\n    } \n}\n```\nIn clients I added this scope to the implicitclient client\nc#\n ScopeRestrictions = new List<string>\n{ \n    Constants.StandardScopes.OpenId,\n    Constants.StandardScopes.Profile,\n    Constants.StandardScopes.Email,\n    \"read\",\n    \"write\",\n    \"userdata\"\n},\nNow what I'm expecting to see when I use the JS client with the following configuration:\nrequest('openid profile read write email userdata', 'id_token token')\nIs my 3 claims populated in the access_token... instead my access token comes back as:\njson\n{\n  \"client_id\": \"implicitclient\",\n  \"scope\": [\n    \"openid\",\n    \"profile\",\n    \"read\",\n    \"write\",\n    \"email\",\n    \"userdata\"\n  ],\n  \"sub\": \"fa62a30c-b38b-4800-873a-3d0ff3a6c3bc\",\n  \"amr\": \"password\",\n  \"auth_time\": 1411955794,\n  \"idp\": \"idsrv\",\n  \"iss\": \"https://id.propertycompass.com.au\",\n  \"aud\": \"https://id.propertycompass.com.au/resources\",\n  \"exp\": 1411956380,\n  \"nbf\": 1411956020\n}\nI must be missing something... but not sure what.\n. To clarify... I have an authenticated end-user performing a request with a valid token set by IdentityServer implicit flow/\nWhat I want to do is have my Nancy middleware being able to identify that the user is 'authenticated' and also be able to pull the users Id (and whatever else is in the claims).\nI don't want to specifically build this up in Nancy itself as this same process would be required in other middleware that this app installs so I want to do it once at the top level.\n. Thank you for that reference Dominick .. this is useful as it shows me how to access the security context from within Nancy.\nWhat about the correct configuration in my Startup.cs\nIs there more beyond the UseIdentityServerJwt required?\n. I'll answer my own question.\nNope nothing further required.\nstartup.cs\nc#\npublic void Configuration(IAppBuilder app)\n        {         \n            SecurityConfig.Register(app);                   \n            app.UseNancy();\n        }\nClaimsPrincipalExtensions.cs\n``` c#\n public static class ClaimsPrincipalExtensions\n    {\n        public static Guid CurrentUserId(this ClaimsPrincipal principal)\n        {\n            var subject = principal.Claims.GetClaimValue(\"sub\");\n            Guid userId;\n        if (!Guid.TryParse(subject, out userId))\n            throw new ApplicationException(String.Format(\"Invalid userid {0}\", subject));\n\n        return userId;\n    }\n\n    public static string GetClaimValue(this IEnumerable<Claim> claims, string type)\n    {\n        var claim = claims.FirstOrDefault(x => x.Type == type);\n\n        return (claim != null ? claim.Value : null);\n    }\n}\n\n```\nnancyModule\nc#\n this.RequiresMSOwinAuthentication();\nvar userId = Context.GetMSOwinUser().CurrentUserId();\n. Just looking for you now @RPM1984 ...\n. These are the packages I'm using.\nxml\n  <package id=\"Nancy\" version=\"1.2.0\" targetFramework=\"net45\" />\n  <package id=\"Nancy.Hosting.Owin\" version=\"0.16.0\" targetFramework=\"net45\" />\n  <package id=\"Nancy.MSOwinSecurity\" version=\"1.0.1\" targetFramework=\"net45\" />\n  <package id=\"Nancy.Owin\" version=\"1.2.0\" targetFramework=\"net45\" />\n  <package id=\"System.IdentityModel.Tokens.Jwt\" version=\"4.0.0\" targetFramework=\"net45\" />\n  <package id=\"Thinktecture.IdentityModel.Client\" version=\"4.0.1\" targetFramework=\"net45\" />\n  <package id=\"Thinktecture.IdentityModel.Owin\" version=\"1.0.0-beta1\" targetFramework=\"net45\" />\n  <package id=\"Thinktecture.IdentityModel.Owin.ResourceAuthorization\" version=\"1.0.1\" targetFramework=\"net45\" />\n  <package id=\"Thinktecture.IdentityServer3.AccessTokenValidation\" version=\"1.1.0\" targetFramework=\"net45\" />\n``` c#\n  public static class SecurityConfig\n    {\n        public static void Register(IAppBuilder app)\n        {\n            JwtSecurityTokenHandler.InboundClaimTypeMap = new Dictionary();\n        //Token Check\n        //app.UseOAuthBearerAuthentication(new OAuthBearerAuthenticationOptions {\n        //    Provider = new EnhancedAuthenticationProvider(),\n        //    AuthenticationMode = AuthenticationMode.Active\n        //});\n\n        app.UseIdentityServerBearerTokenAuthentication(new IdentityServerBearerTokenAuthenticationOptions\n        {\n            AuthenticationMode = AuthenticationMode.Active,\n            Authority = IdSvr.BaseAddress\n        });\n\n    }\n}\n\n```\nRegistered in startup  Configuration\nc#\n  SecurityConfig.Register(app);\nI've got this extension method\n``` c#\n public static class NancyModuleExtensions\n  {\n    public static bool HasAuthNancyUser(this INancyModule module)\n    {\n      return module.Context.CurrentUser != null && UserIdentityExtensions.IsAuthenticated(module.Context.CurrentUser);\n    }\npublic static void RequireKatanaAuthOtherwiseNancyAuth(this INancyModule module)\n{\n  ModuleExtensions.AddBeforeHookOrExecute(module, (Func<NancyContext, Response>) (ctx =>\n  {\n    IAuthenticationManager authenticationManager = NancyContextExtensions.GetAuthenticationManager(ctx, false);\n    if (authenticationManager == null || authenticationManager.User == null || !authenticationManager.User.Identity.IsAuthenticated)\n    {\n      if (NancyModuleExtensions.HasAuthNancyUser(module))\n        return (Response) null;\n      return (Response) HttpStatusCode.Unauthorized;\n    }\n    ctx.CurrentUser = (IUserIdentity) new NancyPropertyCompassUserIdentity(authenticationManager.User);\n    return (Response) null;\n  }), \"Requires MS Owin authentication\");\n}\n\n}\n```\nWhich allows me to just add this in the constructor of each Nancy module\nc#\n  this.RequireKatanaAuthOtherwiseNancyAuth();\nAnd in each Nancy method you can do \nc#\n var user = Context.CurrentUser;\nSo from my recollection (and its been a while):\nApp is configured to validate incoming tokens with IdentityServer.\nRequests to modules that have RequireKatanaAuthOtherwiseNancyAuth have a hook that validates that we have a identity in context.\n. ",
    "Eriluw": "Sorry, I think didn't explain it properly.\nOur solution also includes an api, and it neither uses owin/webapi . \nSo the problem remains the same, validate the access token.\nCan it also be done with the JwtSecurityTokenHandler or is a completely different thing?\n. Yes, great. \nI had to change the output assembly name from Thinktecture.IdentityServer.Core to Thinktecture.IdentityServer, add the project to the same solution and the breakpoints started to be hit.\nThank you for the advice.\n. ",
    "jmichas": "Well, I apologize for maybe posting prematurely. My suspicion was correct and a little trial and error and I figured it out. For anyone else looking to do this add this to your startup.auth\nJwtSecurityTokenHandler.InboundClaimTypeMap = new Dictionary<string, string>\n{\n    {\"role\", System.Security.Claims.ClaimTypes.Role}\n};\n. ",
    "RPM1984": "@galenp @leastprivilege is this information still relevant? I'm trying to get my Nancy API up and running with IS.. installed the Nancy.MSOwinSecurity package, but i can't find a reference to app.IdentityServerJwt or SecurityConfig.Register or app.UseJsonWebToken. It seems all these methods/techniques have been deprecated.\nBy the looks of the current methods and the samples i've read, i should be using app.UseIdentityServerBearerTokenAuthentication in a similar way to here\nCan either of you advise and/or point me to the latest sample of how i should be setting up IdentityServer3 in Nancy?\n. Thanks @galenp ! :smile: :clap: \n. Awesome, i'll give this a try... thanks so much @galenp !\n. @brockallen is this still the case? Can't we pass an additional querystring param to the authorise endpoint (signifying the original url), which IdSrv can then echo back in the redirect uri along with the token? Using cookies/locskstorage etc to remember a url seems hacky.. \n. ",
    "DennisWelu": "Any thoughts or good samples for Nancy + IdentityServer4 all on NetCore? The part I feel I'm missing right now is a compatible rough equivalent to Nancy.MSOwinSecurity that works with NetCore.. Just to tie off my question: http://stackoverflow.com/questions/43006280/nancy-and-identityserver4-on-net-core. . ",
    "kansberry": "It may, I will have to review. The main issue I am reporting is that the Sample code does not appear to work out of the box. If I had a working example, I think I could get my app to work. The main item I would like to verify is whether the access token returned from the token endpoint for the authorization code flow is correct and should look something like this:\n\"f71523f92b464fb5a232007aaf7df9e9\"\nFor both my app and the MVC CodeFlowClient, the access token looks like the one above, which I don't think looks right (i..e not like the access token used in the implicit code flow example show above).\n. I believe I have debugged this. There seems to be two issues with the example code. First, the IdentityServer \"Host\" project has the \"Client.cs\" file with \"codeclient\" set to return an \"AccessTokenType\" of \"AccessTokenType.Reference\". Because of this, the token endpoint was always returned the another code and not the access token. By setting AccessTokenType within the \"codeclient\" to \"AccessTokenType.Jwt\", the first trip to IdentityServer was returning a code, as expected, and the second trip now returns a valid access token when \"OAuth2Client.RequestAuthorizationCodeAsync\" is called passing the code.\nThe 403 issue was exactly as stated in the article you referenced in your first post. \"Profile\" was not a valid scope so 403 was returned. \nBy changing the \"Host\" projects Client.cs file and removing \"profile\" from the scope, the code executes correctly.\n. Thanks. I finally found my issue. After review of the latest version the \"SelfHost (Minimal)\" project, I realized I did not have AccessTokenValidationEndpoint enabled in my IIS version of IdentityServer. Enabling this allowed reference tokens to work. Who would have thought that!\nThanks for all your help and guidance.\n. ",
    "skorlipara": "brockallen, I am not finding beta3. Please send me URL. DisposableIdentityManagerService still gives errors. Thanks for all your help.\n. ",
    "pramodgehlot": "Mean how we can connect aspid database in my host server \ni have not code getting in sample i saw video http://vimeo.com/91520314\ni want to this type\n. ",
    "skatukojwala": "Duplicate of other question https://github.com/thinktecture/Thinktecture.IdentityServer.v3/issues/504. \nSo closing this. \n. Thank you for quick response.  On the same machine your clients samples work without any problem, but our application was failing.  I will look into this SSL setup next week.\n. Thank you Allan, I will take a look into it.  This information is very helpful to us. \nIs there anyway of generating Delegated AccessToken using you IdentityServer. The idea is \nThe WebApplication which loads the SPA will request for AccessToken and RefreshToken.\nIt will again request AccessToken without RefreshToken for SPA using this AccessToken that we got for WebApplication loader. \n. Thank you Allan. \n. Is this something from SelfHost.Extensions.CustomGrantValidator() from ..\\Thinktecture.IdentityServer3.Samples-master\\source\\Custom Grants (more customization) \n. Thank you for Clarifying it. \n. ",
    "jameskeongchen": "yep that did the trick thanks!\nfor anyone else with similar issues this reading helped:\nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v3/wiki/CSP\nhttp://en.wikipedia.org/wiki/Content_Security_Policy\n. yes - I left it enabled for better protection and for the font-src I used the following workaround:\nCspOptions = new CspOptions\n                {\n                    Enabled = true,\n                    ReportEndpoint = EndpointSettings.Disabled,\n                    ScriptSrc = \"ajax.googleapis.com\",\n                    StyleSrc = \"maxcdn.bootstrapcdn.com; font-src maxcdn.bootstrapcdn.com\",\n                },\nThanks again - the docs were very helpful!\n. ",
    "zoltanFlavius": "Hello,\nThank you very much.\nI had the same problem. I have implemented the IViewService interface and I could not load any resource into my page (style, image, etc). Setting the CspOptions solved the issue.\n. Hello,\nThank you for your response.\nI have tried to modify the default behavior by implementing the GetClaimsFromAccount  method and set my own subject ID. \nIn the client, when I get the claims from the token I end up with 2 \"sub\" claims. One is the default sub (the user ID) and the other one is the subject I have set in GetClaimsFromAccount  method. Is this the desired behavior?\nThank you. ",
    "johnkors": "I realized this is somewhat duplicating what Microsoft.Owin.Security.OpenIdConnect is doing thru app.UseOpenIdConnectAuthentication().  Might be that this is an uneccessary abstraction.\n. ",
    "sercangurbuz": "I noticed that \"accesstokenvalidation\" endpoint works well in resource owner flow and results all registered claims of the subject.This seems almost identical with what userinfo endpoint does on this aspect.\nSo should it be wise to use such a scenario on resource owner flow,to use reference token,get claims information for client consumption by requesting validation endpoint and update the userinfo obj according to resulting json.\n. Well,Story is like that.There are currently working in-house asp.net projects using forms authentication whose users are authorized on their own user tables seperately.We have started to develop mobile versions (phonegap) of those asp.net projects which will be available on the internet obviously and decided to use idenitiy server and MembershipReboot for authorization and authentication processes.However first leg of this process is to authenticate the users consuming their own webapi's of seperate projects including \"Authorize action\" since there is no common user table or repository.\nPerhaps the second leg will be to gather up all users of all projects into one common user tables then use it for all authorization consumptions.It will be much more easy way to do \u0131 think :)\nLet's say,token request is like that \nhttps://localhost:44301/identity/connect/token/grant_type=password&username=bob&password=secret&response_type=token&client_id=roclient&client_secret=secret&scope=ynl offline_access\nScope value \"ynl\" is resource name which means its a one of the asp.net projects name.What i want to do is to make a request to ynl webapi to validate the client.\nThats the story.By the way your projects and your efforts are really amazing.:)\n. Using custom grant flow,is it possible to return error_descripton to client.As 'public async Task ValidateAsync(ValidatedTokenRequest request)' returns ClaimsPrincipal,it seemed returning null will be the only way when invalid authz attempts.\n. ",
    "dagimf": "if it is possible can you also add a sample for membership reboot, i personally have never used aspidentity, and my user service has implemented membershipreboot. I already have the email and the sms events hooked in, jus need a little pointer on how to implement the 2fa. \n. ok will look into that, thanks for the pointer, and the awesome work you guys are doing.\n. ",
    "cb55555": "I would have, if I knew the purpose of the project. :)\n. Is there a reason for this difference?\n. Yes, I know that the AspNetIdentity sample creates a factory for IdentityManager and maps for it, but doesn't it still need to map for IdentityServer as well?\n. What's the use case for the 2nd one?\n. Also, from the user's perspective, there doesn't appear to be any difference when I test out both classes.\n. That's not actually the case though. When a user authenticates with a third-party authentication service, a new user is added to the database. So in that sense, IdentityServer does create users.\n. CreateNewAccountFromExternalProviderAsync doesn't create a new user?\n. ",
    "danielbsig": "Is that one built in?\n. OK I will figure this out. If successful (which I hope!) I may do a PR with that.\n. Adding a new sample, unless you don't want that of course :-)\n. We are using the API Documentation Area project, and apparently it doesn't work with the OWIN version (am I told).\n. Ah OK I'll look into that. Thanks!\n. ",
    "Olivercomputing": "Thanks.\n. ",
    "ahmedshuhel": "@brockallen I have been using owin and katana for my projects for over 3 months now but I must say my understanding from the birds eye view was not very clear before I watched your presentation. It was an enlightening talk and an eye opener for me.\n. ",
    "dotnetrules": "Hi all, I'm having an issue with this project (AspNetIdentity_2fa) in that when accessing /admin I'm getting the same error as mentioned above, accessing /core is ok.  I have the most recent version of the master branch.  Was there any outcome with this or info?  The only additional info I can add is /admin reports back a 500 error with result {\"message\":\"An error has occurred.\"}.  Any thoughts?\nThanks :)\n. Hi @brockallen , this is the logs for the error I'm getting when I go to /admin on a production win 2012R2 server. It's working fine on my win 8.1 dev machine.  Being new to Identity Server could you please let me know if you've seen this error and what the likely cause is?  Thanks mate :) \nw3wp.exe Warning: 0 : [IdentityServer3.Core.Configuration.IdentityServerServiceFactory]: 6/6/2015 2:36:27 PM +00:00 -- AuthorizationCodeStore not configured - falling back to InMemory\nw3wp.exe Warning: 0 : [IdentityServer3.Core.Configuration.IdentityServerServiceFactory]: 6/6/2015 2:36:27 PM +00:00 -- TokenHandleStore not configured - falling back to InMemory\nw3wp.exe Warning: 0 : [IdentityServer3.Core.Configuration.IdentityServerServiceFactory]: 6/6/2015 2:36:27 PM +00:00 -- ConsentStore not configured - falling back to InMemory\nw3wp.exe Warning: 0 : [IdentityServer3.Core.Configuration.IdentityServerServiceFactory]: 6/6/2015 2:36:27 PM +00:00 -- RefreshTokenStore not configured - falling back to InMemory\n. ",
    "KevinDockx": "Hi Dominick - just commited my changes, latest pull request includes the new WinPhone sample in a separate solution.  If you need anything else, just let me know :-)\n. Hi Dominick,\nmy bad - you should see a new PR with just the sample now - separate dir, separate solution.\n. Happy to contribute :)\nOn Mon, Feb 1, 2016 at 6:15 PM, Dominick Baier notifications@github.com\nwrote:\n\nthanks!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/IdentityServer/IdentityServer3.Samples/pull/227#issuecomment-178075194\n.\n\n\nKevin Dockx\nFreelance solution architect (mobile/web), Pluralsight author & consultant\nMicrosoft MVP\nTwitter: @KevinDockx https://twitter.com/kevindockx\nSite & blog: https://www.kevindockx.com/\nCourses: http://www.pluralsight.com/author/kevin-dockx\n. ",
    "kirkpabk": "Yes, need to make sure that a challenge is made if the user is on the domain to pick up the account, match it with a registered account. {e.g. Custom account or Google} while being able to go to another server within a subdomain and use domain resources {with or without kerberos} .  Does that make sense?\n. ",
    "kalanbates": "Meh...thinking through the problem in a way to prepare it for asking the question has helped me answer the question; I need to decode the token during Authorization and pull the claims out of it. The claim doesn't exist on my ClaimsPrincipal because I have to put it there manually.\n. ",
    "vigsgb": "I totally missed the documentation on the IUserService interface and Factory information.    This along with the other tidbits of information is what I needed.\nThanks for the quick reply and all the work you are doing on this project.\n. ",
    "giulianob": "Hey is this sample available somewhere now? I couldn't find it and was really curious how to implement auto login with PreAuthenticate. \n. ",
    "sania13": "Anyone found sample how to use PreAuthenticate? \nWhat does that mean \"PreAuthN to do HRD\" ?\n. Thank you Brock. \nI am trying to get Current User Name from WindowsPrincipal, but not successful. ('Windows Authentication' is Enabled and 'Anonymous Authentication' is Disable. I will host the app on IIS.\nAny suggestions?\n. ",
    "gwinnem": "Tnxs for the quick reply, and for the awesome work you guys are doing.\nTotally correct that i updated the IdMgr Nuget, but i mentioned that in \nthe issue.\nIll wait until the RTM before i say anything more :)\nBest Regards\nGeirr\nOn 18/01/2015 15:32, Brock Allen wrote:\n\nWell, the sample is working as-is. I think you mean that if you update \nthe IdMgr NuGet, then it's no longer working.\nThe sample on the dev branch is already updated. Once we do RTM then \nwe'll merge all dev samples to master.\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/thinktecture/Thinktecture.IdentityServer.v3.Samples/issues/64#issuecomment-70410300.\n\n\nBest Regards\nGeirr Winnem\n. ",
    "danutzplusplus": "Well, I've got two scenarios, one client which is built over MVC 5, but I also have one over MVC4. And was wondering if there was an issue with the http module, or if I'm just missing something. And it's also a curiosity of mine as to how that cookie is set on the response, if it is, and I'm just not seeing it.\n. Ok, cool, thanks. It's no problem really. I'm really appreciative for the work that you guys put in, and by no means was this a stab at the quality of your work. Just something that was puzzling me, that I maybe missed something.\n. Yeah, and that one works fine. Except for the little issue that the Katana middleware doesn't seem to validate the state parameter it generates to counter CSRF. At least I'm able to post to the callback action with any or no state. I've looked at the Microsoft.Owin.Security.OpenIdConnect dll in dotPeek, and there seems to be some code that seems to attempt to validate the state, but for some reason it's not running through that code. And I'd hate to have to figure out what they're doing to generate the CSRF token to validate it manually. That would be a pain.\n. Oh, I must have had an older version of the code flow manual sample.\nBut as far as the katana middleware, it's very weird. I've got the main controller action that I want to protect, it's decorated with Authorize, and I've configured the katana middleware to perform the whole openId code flow . And it works fine. \nOn the redirection to the callback action (which has no Authorize restriction, right?) I take the auth code, and exchange it for an id token/access token handle. And I'm also getting the state and nonce posted, which is fine, even though, technically I shouldn't care about them since the katana middleware should have validated them before execution reaches the callback action, right?\nAnyways, posting to the callback action, with or without the state or nonce in the request, doesn't seem to be validated by the katana middleware. I perform a manual barebones post to that callback action, and execution reaches the extraction of the auth code, which is null, and that value is attempted to be sent to the IdSrv for validation and exchange for a real token.\nI was thinking that maybe it's something in the way I've configured the katana middleware. Here's how that looks:\napp.UseOpenIdConnectAuthentication(new OpenIdConnectAuthenticationOptions\n{\n          ClientId = \"clientid\",\n          Authority = \"https://localhost:44333\",\n          RedirectUri = \"https://localhost:44302/home/callback\"\n          ResponseType = \"code\",\n          Scope = \"openid profile\",\n          SignInAsAuthenticationType = \"Cookies\"\n}\nAs I said, I've checked the OpenId dll from Microsoft in dotPeek, and I can see a check for the state value, but it's part of the last else in a series of if elses.\nawait this.get_Options().Notifications.MessageReceived(messageReceivedNotification);\nif(((BaseNotification) messageReceivedNotification).get_HandledResponse())\n{\n ....\n}\nelse if ((BaseNotification) messageReceivedNotification).get_Skipped())\n{\n.....\n}\nelse\n{\n//and here's where the state validation seems to be performed:\nAuthenticationProperties properties = this.GetPropertiesFromState(openIdConnectMessage.get_State());\nif(properties == null)\n{\n      LoggerExtensions.WriteWarning(this._logger, \"The state field is missing or invalid.\", new string[0]);\n      authenticationTicket = (AuthenticationTicket)null;\n      goto label_62;\n}\nCan you make more sense out of this?\n. Sorry to open this again, but I have some new info to share and some other question.\nI've been talking with people in the Owin chat room on Jabbr, and after some further investigation it seems I should be handling the exchange of authcodes for tokens in the notification handlers that the katana OIDC client exposes (AuthorizationCodeReceived, SecurityTokenReceived, etc).\nAnd I've tried that, but apparently that only seems to work if I explicitly request id_token among the other scopes). If I just request \"code\", as I did up until now, the notification handlers don't seem to be called (except fro MessageReceived, but that doesn't help).\nI've then checked msdn for the AuthorizationCodeReceived handler, and apparently that only gets called after the security token validation (I imagine the identity token).\nI've then checked the sample clients here (https://github.com/thinktecture/Thinktecture.IdentityServer.v3.Samples/tree/master/source/Clients). And noticed something interesting, which I didn't notice before. For the OWIN MVC clients there only seems to be samples for the hybrid (id_token and code) or the implicit flow. Is code flow not supported when requesting just an authcode which will be exchanged later on for the proper id token? I know the IdentityServer v3 does support it, but the katana OIDC middleware doesn't seem to trigger what I'd expect.\nEDIT: Some further discussion on the owin chat room, and it seems the katana OIDC middleware can't make sense of the openid callback if no id token is in the response. (if you don't request the id token explicitly, (id_token)). Meaning it does not support code flow for the identity token, just for the access token. So this seems like the reason for this behavior.\n. ",
    "laitang2000": "Ah I've been the doc so many times! And until you insisted it was there I didnt do a ctl+f!\nMany thanks and keep up the good work!\n. ",
    "OscarAgreda": "Thanks\nI am sure it is something silly that i am probably doing. I will continue doing my homework :) \nI realize I need Thinktecture.IdentityServer3.MembershipReboot with the BrockAllen.MembershipReboot and BrockAllen.MembershipReboot.Ef packages.  Which will give me the user service, then I need Thinktecture.IdentityServer3.EntityFramework for the rest of the services.\nRegards\n. And for anyone arriving here from a search engine.\nI will suggest to start here \n1-http://chimera.labs.oreilly.com/books/1234000001708/ch16.html#_client_applications\nthen go here\n2-http://identityserver.github.io/Documentation/docs/overview/terminology.html\nlisten to this podcast\n3-http://www.dotnetrocks.com/default.aspx?showNum=1089\nat this point, you will be thinking how come this amazing code is open source.. And if you are like me, i was doing all of this by myself, and realized in 3 weeks i have only accomplished 5% of what Identity Server can do; therefore it would have taken me and my team almost a year to accomplish all of this, besides the code will  probably not be so elegant and simple as the one one IdentityServer  plus Dominick  and Brock Allen are such experts on .Net Security , all of that makes this crucial for a good software architecture on modern applications.\nat last, do this tutorial \n4-http://identityserver.github.io/Documentation/docs/overview/mvcGettingStarted.html\n. I have been trying to fight my out out of this, but with so many different packages and naming convention is really hard .. once i get the package i need working the path is easy, logic and expected, nice .NET code. But is hard to make sense of so much with nothing more than the nuget packages and intellisense available for this awesome security gem.\nI am using the MembershipReboot inside Thinktecture.IdentityServer3.Samples\nas my base project  and here is my connection string http://grab.by/EiHu\nand the StartUp http://grab.by/EiHW http://grab.by/EiI0\nMy only road block is\nhow do i make IdentityServer to also allow ASPIdentity as one of the Identityprovider http://grab.by/EiIc\nthe following screenshot is from your AspIdentity Sample http://grab.by/EiIC , how do you make identity server to recognize users registered on aspIdentity there   ?\nRegards\n. where could I read more about all of this ? any blog, article, sample code, pluralsight video or book ?\n. I have  spent my week on those docs\nthe typical user case nowadays will be to have identity server 3 managing authentication using a couple of providers like aspNetIdentity and Google, then using the power of Identity Manager do its thing plus having membership reboot to do a lot more , like multi-tenant for example all of this to Authorize some webapi resources.\nI think is a very common scenario for most users\n. yes, i understand, but i am not saying for the help, as if i expect free consulting services.. i am saying that the documentation is obviously confusing on the fact that there are so many nuget packages , and i mean a loot of possibilities based on just the name of the package.\nso you are saying that I will be bale to use indentity server 3 (fully and the the way it was created for) just by reading the sample and the documentation ?  because if that is the case, then i have not done my homework.\n. ok.\n. After many nights, lots of pain and frustration , a week ago i was able to get the whole stack working.\nit is so awesome .\nin case someone wants to start from zero to full, i have a recommendation \n-this is a great product, actually is simple the best, unfortunately when you are novice as i was 3 weeks ago, the documentation and samples will never get you anywhere and it is frustrating.\n-But,, yes there is a \"but\" .. once you have done your homework and reviewed every single piece of code that makes up identity server 3 you will see how the documentation is perfect , is right to the point and very precise super awesome...\nso the only way to get it all figured out is to endure the pain of confusion and conquer.\nspend lots of time with the sample til you get it, you have to use them all to really learn.\nthis open source project is recommended by the Microsoft Patterns and Practices team https://msdn.microsoft.com/en-us/library/hh534483.aspx\nhttp://xneterp.com/i/4W2g.png .\nthat is huuuuuge.\nin the end I used the MembershipReboot + IdentityServer3 and pushed the identity server setting to azure using entity framework .\nNow we have lots of Angular SPAs that use WebAPI and use Identity Server Bearer Token Authentication. Everything working in perfect synchronization. It is so awesome.\n. After feeling conformable with the Identity Server 3 code. I recommend these samples\n1-https://github.com/brockallen/BrockAllen.MembershipReboot/tree/master/samples/SingleTenantOwinSystemWeb\n2-https://github.com/IdentityServer/Thinktecture.IdentityServer3.MembershipReboot/tree/master/source\n3-https://github.com/IdentityServer/Thinktecture.IdentityServer3.EntityFramework/tree/master/Source\n4-https://github.com/IdentityServer/Thinktecture.IdentityServer3.Samples/tree/master/source/MVC%20Authentication\nonly then the following tutorial will totally makes sense\nhttp://identityserver.github.io/Documentation/docs/overview/mvcGettingStarted.html\nthen here for more  on  Authorization\nhttp://leastprivilege.com/2014/06/24/resourceaction-based-authorization-for-owin-and-mvc-and-web-api/\nThe authorization manager is part of Thinktecture.IdentityModel\nhttps://github.com/IdentityModel/Thinktecture.IdentityModel\n. Hello,\nfirst things first.\nyou must get familiar with the samples\nhttps://github.com/IdentityServer/IdentityServer3.Samples\nIdentity Server is not only for MVC as you will see on the many many different samples\n. @achaffman \nhow is it going with your journey ?\n. ",
    "achaffman": "Oscar, do you want to write up a walk through?  My problem is I'm still in webforms world, trying to understand the MVC code is not always straight forward.\n. Honestly, I haven\u2019t gotten anywhere with Identity Server.  I still feel like it\u2019s not super clear for Webforms and I really don\u2019t have the luxary of time to dissect the MVC code.  If you can share any code or advice, I would appreciate it.  A blog or something would go a long way!  Thanks for checking in though!\nFrom: OscarAgreda [mailto:notifications@github.com]\nSent: Wednesday, May 20, 2015 12:35 PM\nTo: IdentityServer/IdentityServer3.Samples\nCc: Albert Chaffman\nSubject: Re: [IdentityServer3.Samples] Identity Server tutorial - Identity Server First Steps - getting started (#69)\n@achaffmanhttps://github.com/achaffman\nhow is it going with your journey ?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/IdentityServer/IdentityServer3.Samples/issues/69#issuecomment-103951770.\n. ",
    "khushalpatel1981": "Nothing logs in the trace.log file, but when running clients project it is  logging events in the file.\nEnvironment: Windows 10 Technical Preview, Visual Studio 2013\n\n. Yes, emulator is hitting the network and IdentityServer also but don't know why it is keep cancelling... may be some environmental issue, i will debug this on the real device and with a test server once i finish. I will update you in any case...\n. Yes @brockallen you are right its working with the real device thanks for the help :)\n. ",
    "claq2": "The problem is that the phone emulator doesn't trust the localhost cert. You can put the cert on a web server and open it on the phone. This gives you the choice to install it, which seems to add it to the root CAs. Details are in this blog post.\nRunning the SelfHost project I now get the IdentityServer3 UI, but it doesn't recognize the client. I'm guessing because the phone project is sending \"implicitclient\" but there's no such client defined in _sharedConfiguration\\Clients.cs, but that's a different issue.. Ah, I get it. Don't assign rights based solely on the client's ID e.g. don't make it an admin tool capable of managing your whole system. Base access only on the user. Someone might clone your app and cause a copyright issue, but users can't do any more or less. \nThanks.\n. ",
    "israelpereira": "The change was made on oidc.js file.. but it is the output of the oidc.js.bundle\nI think it was a mistake, wasn't it?\nIdentityServer/Thinktecture.IdentityServer3.Samples@8c529829f9fcca926b7a2881bf8ab538f5e755d1\nThanks\n. ",
    "mikebluestein": "My mistake, I had an error in the controller.\n. ",
    "devlz303": "Thanks for pointing me in the right direction. There was another problem, but your comment \"a html page is being displayed\" made me look into the actual response in Fiddler.\nThe problem was I did not add the url for the frame.html to the redirecturi's for this client, which resulted in: The client application is not known or is not authorized.\nAfter I added the redirecturi, the client was known resulting in a response with tokens.\nThere was another problem I ran into. To test the silent renew I had set the AccessTokenLifetime to 60 seconds. But the clientside tokenmanager is fetching a new token 60 seconds before the old token expires. So after fetching a new token, the tokenmanager would trigger a new fetch.\nAfter chaning the AccessTokenLifetime setting to 120 seconds all was fine.\nKind regards!\n. Oh, and I forgot to mention: it wasn't needed to mark remember my consent to make te silent renew work.\n. I think you're right. But I don't think you want to go back to the callback page (because the only purpose of the callback page is retrieving the token from the hash and redirecting to index page).\nIn my own callback page I have changed the script to do a location.replace so when the user uses the back button they don't end up at the callback page. I also changed the code in the oidc.js, but maybe that's not correct (or needed).\nedit: so it's the callback.html that \"needs\" the change\n. Are you sure this is a security threat? I don't see it..\nIt's the targetOrigin parameter in the postMessage call that makes sure the origin of the target window is the same origin as the origin of the inner window. The code in the oidc.js is preventing communication with windows that do not have the same origin as the inner window by specifying this targetOrigin parameter.\nRight now, the code is preventing communication with the top window and that's correct because my top window is not the same origin as the inner window. But I want to communicate with the inner window's parent, which is the same origin.\nLet me ask you this question: Wouldn't it be strange if the inner window would communicate with another window than it's parent? The code in the oidc.js id creating a child window, so the child should (in my opinion) only communicate with it's parent. The targetOrigin parameter is there to make sure this parent window is from the same origin.\nI would like to know what's wrong in my thinking..\n. Yes, that's correct.\nThe parent is the one that created the child (not the grandparent :)).\nSo the child should always talk to it's parent (using postMessage).\nAnd the targetOrigin parameter is used to prevent to post the message to someone elses parent (not the same origin).\n. Okay, I have never made a pull request so I have to figure out how to do this. :-)\nAnd where can I sign the CLA?\n. I have made a pull request for this issue, but I still don't know where and how to sign the CLA.\n. As a newbie to Github I'm already stuck on the \"clone the repo\" step.\nThe \"Clone in Desktop\" button only opens the Github for Windows app.\nI will take a look at this later, because I have some work to do right now.\n. I think I did something terribly wrong here. :-(\n. Yep. I've never worked with Github (we use SVN), so it's all new for me.\nMaybe I have to follow a Github for Dummies course on Pluralsight. :)\n. I'm not offended by your comment. I am making fun of myself. ;)\n. I am looking into this Git thing right now, but it is a bit confusing to me.\nThe steps I have take so far are:\n- Clone the \"dev\" branch\n- Created a new (local) branch from this \"dev\" branch\n- Made a change in the local branch\n- Commit the change in the local branch\n- Uhhhm, what's next. Make a pull request?\nBut somehow I don't think this is the right way to do it. I can't create a remote branch because I don't have rights to do it. I will have to take a look at it this when I have more time for it.\nI don't want to bother you with this, but can you just tell me if I'm on the right track?\n. Thanks, I will give it a go.\n. I realy feel like a fool, but I am stuck at \"Push the branch to your repo on github\".\nDo you mean my own repository or a branch on the IdentityServer repository? A branch on the IdentityServer repository is not working (I don't have rights) and to my own, well.. I just can't figure out how this can be done. \n. Thank you for the link. I think this is the information I need.\n. Thanks for helping me out with this Brock & Dominick. I think I have successfuly made my first pull request. :)\n. I've signed a CLA, but it's for the IdentityServer project.\n. It look likes the same issue. In the meantime I think I have found a solution.\nEach tab has it's own TokenManager and is renewing the tokens on their own. But once a token is received, the token is saved in localstorage and at this moment the \"storage\" event is fired and all listening tabs will load the token. At this time the token refresh interval is automatically synchronized between the tabs, so the silent renew of each tab is going to happen almost at the same time.\nRight now I have changed the readResponseAsync function of the OidcClient and make sure the \nrequestData is only removed from localstorage if the result.state is the same as the state in the data stored in localstorage.\nNow, when the first response comes in and the result.state doesn't match the data.state it will cause an \"Invalid state\" error. But when the response with the valid state arrives, the data still exists in localstorage and the token can be stored.\nSo the change I made is as follows:\nif (result.state !== data.state) {\n            return error(\"Invalid state\");\n }\nsettings.store.removeItem(requestDataKey);\ninstead of\nvar data = settings.store.getItem(requestDataKey);\nsettings.store.removeItem(requestDataKey);\nOfcourse it would be nicer if there was only one TokenManager in charge of renewing the tokens, but I think that is a bit harder to do.\n. Yes, I think this little change will solve the problem but I still think it's not nice to send a token request in each tab when they all end up having one shared token.\nAnd because I have to support IE9 at this moment I don't think I can use sessionStorage.\nWhich brings me to another problem I \"solved\" regarding IE9. My STS is on a different domain and using IE9 you can't use the XmlHttpRequest object to make an crossdomain request. So I made a change to use the XDomainRequest object in this case. But that's another problem, so I will open a new issue for that one.\n. Yeah, I think that is the best way to do it. Right now the token renewal is done 60 seconds before the token lifetime ends. I was thinking about a solution where one tokenmanager is \"in charge\" to renew tokens. But the problem is, who is \"the one\"? And what happend if \"the one\" is not available anymore (because the tab is closed or some other cause).\n. Sure, but this has to be \"dynamicly updateable\", it's exactly the same application running in different tabs. I can open a new tab and navigate to my application and when the application starts it has to determine if there is already another application running that is renewing the tokens. And if so, when that instance of the application stops the one (or another) has to take over this renewal task.\n. This pull request is related to issue #112 and issue #111\n. I've already signed the cla for the Thinktecture.IdentityServer once (because there isn't a cla for the Samples repository). Do I have to sign the agreement for each pull request?\n. No, I have only one account (as far as I know :)), and I have signed the agreement already for my previous pull request.\n. I'm closing this pull request because the fix for issue#112 isn't working because in IE9 hash fragment is when redirecting to the callback page is removed. So for IE9 the implicit flow still isn't going to work.\n. Update: After all the fix IS working. However, after retrieving the tokens I needed to make a calls to Web API's using the access token. For this I implemented the xdomain javascript library which interfered with the oidc.js code. After removing the xdomain library I could sign in again. I will take a look if I can make it work even with the xdomain library in place.\n. Well, we are using a modified version of the oidc.js. I have modified the getJSON function inside the DefaultHttpRequest function. Below you will find my version of the getJSON function.\nNow, with this change in place you should be able to sign in with IE9. However, if your web api's are on a different domain you can't use the XDomainRequest object because you can't set additional headers with it (so you can't add access tokens to the header).\nTo make this work our callback page redirects to the \"main\" application, where we have configured the xdomain library (https://github.com/jpillora/xdomain). See below for an example.\nFor us this \"solution\" is working fine and we are able to use the application in IE9.\nWorth mentioning: this library has been moved to https://github.com/IdentityModel/oidc-client and here https://github.com/IdentityModel/oidc-token-manager so if you still have problems you should post your issues there.\n``` javascript\nthis.getJSON = function (url, config) {\n            return _promiseFactory.create(function (resolve, reject) {\n            try {\n\n                var xr = null;\n\n                if (url.indexOf(window.location.protocol + '//' + window.location.host + \"/\") == -1 && (typeof XDomainRequest != \"undefined\")) {\n                    log(\"cross-domain request using IE8/9\");\n                    xr = new XDomainRequest();\n                    xr.open(\"GET\", url);\n                }\n                else {\n                    xr = new XMLHttpRequest();\n                    xr.open(\"GET\", url);\n\n                    try {\n                        xr.responseType = \"json\";\n                    }\n                    catch (e) {\n                        log(\"Setting json responseType not supported for \" + navigator.userAgent);\n                    }\n\n                    if (config) {\n                        if (config.headers) {\n                            setHeaders(xr, config.headers);\n                        }\n                    }\n                }\n\n                xr.onload = function () {\n                    try {\n                        var response = null;\n                        if (xr.status === 200) {\n                            response = xr.response;\n                        }\n                        else if (typeof xr.status == \"undefined\" && typeof xr.responseText != \"undefined\") {\n                            response = xr.responseText;\n                        }\n                        else {\n                            reject(Error(xr.statusText + \"(\" + xr.status + \")\"));\n                        }\n\n                        if (typeof response === \"string\") {\n                            response = JSON.parse(response);\n                        }\n                        resolve(response);\n                    }\n                    catch (err) {\n                        reject(err);\n                    }\n                };\n\n                xr.onerror = function () {\n                    reject(Error(\"Network error\"));\n                };\n\n                xr.send();\n            }\n            catch (err) {\n                return reject(err);\n            }\n        });\n    };\n\n```\n<!--[if lte IE 9]>\n<script src=\"//cdn.rawgit.com/jpillora/xdomain/0.6.17/dist/xdomain.min.js\"></script>\n<script>\n    xdomain.slaves({\n        \"<url-to-proxy-file-on-webapi1>\",\n        \"<url-to-proxy-file-on-webapi2>\"        \n    });\n</script>\n<![endif]-->\n. Hi Danny,\nGood to hear you've got it working now. I have not ran into the issue of the failing calls myself.\nThanks for the update!\n. ",
    "bcbeatty": "I'm running on the localhost, But I'm getting this error also. Do you have insights on what could be wrong with SSL ?\n```\nvar tokenClient = new OAuth2Client(\n    new Uri(IdConstants.TokenEndpoint),\nIdConstants.ClientId,\n\"secret\");\nvar response = await tokenClient.RequestAuthorizationCodeAsync(n.Code, n.RedirectUri);\nif (response.IsError)//always returns true \n{\nthrow new Exception(response.Error);\n    }\n```\n. ",
    "yusbel": "Do we use custom grants for SPA? - Can we use implicit flow using ADAL.js for SPA?\n. yes, I'm aware that we need to use implicit flow. I was hoping to leverage the ADAL.js to do the client side part. Do we have a sample for spa implicit flow or hybric flow?, I would like to leverage some of the javascript code already tested.\n. ",
    "kavinho": "@brockallen: thanks for your reply. \nYes, both will be in place and any requests that can satisfy either of these will be able to use the WebApi.\nI know tokens are enough to protect, however there are legacy systems(MVC.NET) that are using WebApi already. That's a constraint that needs time to be removed.\nfor the mean time,  how can a the WebApi , detect and relay the authorization to the matching authorizer(forms OR token)?\n. ",
    "evilgamr": "As a temporary workaround we changed the RedirectUrl from oob://localhost/... to http://oob/...\nThe size limit problem does not appear using this protocol in the url.\nI will try the form_post solution and let you know.\n. ",
    "alex-bogomaz": "response_mode=form_post works just fine. Just add additionalValues: new Dictionary<string,string> { {\"response_mode\", \"form_post\"} } parameter to the OAuth2Client.CreateAuthorizeUrl call.\nIn this case it is not possible to create AuthorizeResponse object inside webView_Navigating. Instead you should grab form data from the Html document (using dynamics): \ncsharp\n  var forms = ((WebBrowser)sender).Document).IHTMLDocument2_forms as IEnumerable;\n  var form = forms.OfType<dynamic>().First() as IEnumerable;\n  var values = form.OfType<dynamic>().ToDictionary(x => (string) x.name, x => (string) x.value);\n. ",
    "mschulz531": ";)\nOn Feb 24, 2015 6:47 AM, \"Dominick Baier\" notifications@github.com wrote:\n\nwith HTTP\nhttp://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/IdentityServer/Thinktecture.IdentityServer3.Samples/issues/84#issuecomment-75750243\n.\n. I assume you are using IIS Express and localhost...if so, your IIS Express is not configured correctly for SSL.  Google for it and you will find instructions.  IIS Express config files are located in your Documents\\IIS Express\\Config folder, that should get you started.\n. \n",
    "MohammadKani": "thank you Dominick.\n. ",
    "fabriciomurta": "Is there a reason anywhere for the server to only work with a port number matching the 443NN pattern?\nWeird. After setting it to a port in the range 44300-44399, it stopped to just drop connections, and now it's complaining about the certificate. Unexpected, at least to me. At least some progress here.\n. The pull request on IdentityServer/IdentityServer3.Samples#87 was the way I found to overcome the issue.\nBasically I set up SSL to accept invalid certificates no matter what on the test projects. Something @leastprivilege deeply condemned, and ultimately refused the pull request. =]\n. Well, the pull request allows you to use self-hosted owin instance, effectively disabling certificate verification (SOMEWHAT like adding a self-signed certificate and adding its CA to the local trusted certs list)\n. I agree that the simplest walkthrough should be made simpler -- as meant to run in a local, testing environment, free of any SSL-whatsoever attacks and focusing the main feature of the project.\nBut I can't simply agree it is all garbage. Just could use a little trimming =]\n. actually, there was one. :P\nno hard feelings (from my side, at least) [github reference: #87]\n. The SSL error on the API client side is worse, cause it is not logged anywhere (at least I couldn't find it). Without the SSL ignore on the API client, all we can see is that the console client always gets 401 error (as suggested only should happen if we access via the browser on the walkthrought).\n. ",
    "cabrinoob": "I have the same issue with the \"Simplest OAuth2 Walkthrough\" sample. I'am not sure this sample is using IISExpress because the IdSrv is self hosted in a console application.\n. Yes the API is running under IISExpress and it's working good on my computer. It respond but I have a 401 Unothorized which is the expected behavoir.\nBut the IdSrv, which is running on port 44333, does not seem to respond. \nThe GetClientToken() crashes when calling the RequestClientCredentialsAsync method.\n```\nstatic TokenResponse GetClientToken()\n    {\n        var client = new OAuth2Client(\n            new Uri(\"https://localhost:44333/connect/token\"),\n            \"silicon\",\n            \"F621F470-9731-4A25-80EF-67A6F7C5F4B8\");\n    return client.RequestClientCredentialsAsync(\"api1\").Result;\n}\n\n```\nAnd in the IdSrv console I still have :\nIdSrv.vshost.exe Warning: 0 : [Thinktecture.IdentityServer.Core.Configuration.Id\nentityServerServiceFactory]: 16/03/2015 11:01:09 +00:00 -- AuthorizationCodeStor\ne not configured - falling back to InMemory\nIdSrv.vshost.exe Warning: 0 : [Thinktecture.IdentityServer.Core.Configuration.Id\nentityServerServiceFactory]: 16/03/2015 11:01:09 +00:00 -- TokenHandleStore not\nconfigured - falling back to InMemory\nIdSrv.vshost.exe Warning: 0 : [Thinktecture.IdentityServer.Core.Configuration.Id\nentityServerServiceFactory]: 16/03/2015 11:01:09 +00:00 -- ConsentStore not conf\nigured - falling back to InMemory\nIdSrv.vshost.exe Warning: 0 : [Thinktecture.IdentityServer.Core.Configuration.Id\nentityServerServiceFactory]: 16/03/2015 11:01:09 +00:00 -- RefreshTokenStore not\nconfigured - falling back to InMemory\nIdSrv.vshost.exe Warning: 0 : [Startup]: 16/03/2015 11:01:09 +00:00 -- No signin\ng certificate configured.\nserver running...\n@fabriciomurta : Did you find a solution to this problem??\nThank you\n. ok, so I remove the SSL (RequireSsl = false) and it's working perfectly. I'll continue without ssl with next samples.\nThank you for your help Dominick\n. what does \"PR\" stand for?\n. ",
    "florinc": "I've just ran into the same issue. Yes, the cause was that the IIS Express was not configured for SSL. Easy fix: Properties (F4) on Apis proj and switch SSL Enabled to true.\n@leastprivilege suggestion: a note w/ this in the tutorial would have saved me (and probably others new to this) off some time googleing for a solution. Thanks!\n. ",
    "longpshorn": "I may be missing something, but, the solutions so far are either to turn off SSL or move from OWIN to IISExpress in order to get SSL set up. I assume there is a way to get SSL working with a self-hosted OWIN instance, right? I have googled a fair amount but can't find any info on getting this set up. Does anyone have any pointers to a tutorial to do this?\n. First off, thank you for your response.\nAm I correct in interpreting your statement as that when self-hosting an OWIN instance, you can't use a self-signed certificate without disabling the cert verification? Said another way, when using OWIN self-hosting, one MUST have CA-signed cert?\nIf that is correct, I guess I can accept that. I feel like there should be a better solution though.\n. ",
    "bcreech": "Really, Really handwavey stuff here. \nThat the 'simplest' walkthrough does not work out of the box is very telling. I think I have wasted about enough time with this garbage. \n. Look, if the people who wrote the product cant provide a working example then ... yea... I tend to want to flee. \nAlso, think about it. If the 'simplest'  thing dosent work can you imagine dealing with this in production? \nI will leave it to you all. good luck. \nIm moving on. Its not me- its them .\n. @leastprivilege, so your 'how this works' code, well... doesn't and all you can do is make smartass comments?\nPerhaps this line of work isnt for you?\n. ",
    "pircjernej": "I also found : \n-- Nonce required for implicit flow with openid scope\nin server log, so I will check this also...\n. I change scope to \"write\" and now work OK\n. ",
    "pomeh": "Ok, so my problem is really weird. There's nothing you can do about it so the close seems fair :)\n. ",
    "ConstruKction": "Sorry for taking a shamefully long time responding to this.\nAs far as I can see, there's no error message in this garbled HTML code.\nYou can check the more readable, raw form right here.\nhttps://gist.github.com/ConstruKction/2e2ee0c309facff7f537\n\"<!DOCTYPE html>\\r\\n<html ng-app=\\\"app\\\" ng-controller=\\\"LayoutCtrl\\\">\\r\\n<head>\\r\\n    <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\" />\\r\\n    <title>Thinktecture IdentityServer v3</title>\\r\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://localhost:44301/identity/assets/styles.min.css\\\">\\r\\n</head>\\r\\n<body lang=\\\"en\\\">\\r\\n    <div class=\\\"navbar navbar-inverse navbar-fixed-top\\\">\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n            <a href=\\\"https://localhost:44301/identity\\\">\\r\\n                <span class=\\\"navbar-brand\\\">\\r\\n                    Thinktecture IdentityServer3\\r\\n                </span>\\r\\n            </a>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"welcome-page container\\\">\\r\\n        <div class=\\\"row page-header\\\">\\r\\n            <div class=\\\"col-sm-10\\\">\\r\\n                <h1>\\r\\n                    Welcome to Thinktecture IdentityServer3\\r\\n                    <small>(build 1.1.1.0)</small>\\r\\n                </h1>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n                <p>\\r\\n                    IdentityServer publishes a\\r\\n                    <a href=\\\"https://localhost:44301/identity/.well-known/openid-configuration\\\">discovery document</a>\\r\\n                    where you can find metadata and links to all the endpoints, key material, etc.\\r\\n                </p>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n                <p>\\r\\n                    IdentityServer allows users to view and revoke\\r\\n                    <a href=\\\"https://localhost:44301/identity/permissions\\\">application permissions</a>\\r\\n                    previously granted to client applications.\\r\\n                </p>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n                <p>\\r\\n                    Here are links to the \\r\\n                    <a href=\\\"https://identityserver.github.io/Documentation\\\">documentation</a>,\\r\\n                    and <a href=\\\"https://github.com/identityserver/Thinktecture.IdentityServer3.Samples\\\">ready to use samples</a>.\\r\\n                </p>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</body>\\r\\n</html>\\r\\n\"\nAfter further inspecting, the output appears to be the HTML of the https://localhost:44301/identity page, which in return, returns the aforementioned exception.\nMore break point details:\nDescription: An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code. \nException Details: Newtonsoft.Json.JsonReaderException: Unexpected character encountered while parsing value: <. Path '', line 0, position 0.\nc#\nLine 57: \nLine 58:             var json = await client.GetStringAsync(\"https://localhost:44301/identity\");\nLine 59:             return JArray.Parse(json).ToString();\nLine 60:         }\nLine 61:\nI put the break point on line 58. The exception marks line 59 red.\n. Hey, thank you for the speedy response.\nYour suggestion was accurate; some of my URL ports were wrong.\nHowever, after changing the ports to correct ones, I'm receiving a 401 response error. (Yep, I'm logged in)\n\nSo I tried to experiment a little, and disabled SSL, as suggested here (though, of course, we wouldn't want to do that in the end): http://stackoverflow.com/a/28685522\nBut then this happens.\n\nWould you perhaps have any hints on how to proceed further?\n. ",
    "cptJack22": "I was having the exact same error messages. I discovered that I had not enabled SSL on the Api project in visual studio, so client.GetStrignAsync was going to the wrong URL to call the API. I hope that helps.\n. ",
    "stevenfirstrowinc": "do you mean that when I map IdSrv to\n            app.Map(\"/identity\", idsrvApp =>\n    ....\nMy controller must have \n        [Route(\"identity/eula\")]\nas well?\n. nevermind that did it.  Thank you very much\n. I do get this message in my IdSrv logs but I don't think it's directly related.  Despite the error the page appears anyway, but that log entry does not appear in your sample. so maybe they are related.\n13:42 [Debug] 13   HTTP Response\n{\n  \"StatusCode\": \"NotFound\",\n  \"Headers\": [],\n  \"Body\": \"{\\\"Message\\\":\\\"No HTTP resource was found that matches the request URI 'https://localhost:44310/identity/changepassword'.\\\",\\\"MessageDetail\\\":\\\"No route data was found for this request.\\\"}\"\n}\n. WHOOT!  \nWhich setting in particular is the one? I set all of \nLoggingOptions = new LoggingOptions\n                {\n                    EnableHttpLogging = false,\n                    EnableWebApiDiagnostics = false,\n                    IncludeSensitiveDataInLogs = false,\n                    WebApiDiagnosticsIsVerbose = false,\n                },\n                EventsOptions = new EventsOptions\n                {\n                    RaiseErrorEvents = false,\n                    RaiseFailureEvents = false,\n                    RaiseInformationEvents = false,\n                    RaiseSuccessEvents = false,\n                }\nI am guessing maybe EnableHttpLogging?\nwhole day so far shot for this.  THANK YOU!\n. ",
    "RajMondaz": "implementation of silent_redirect_uri for  JavaScript Implicit Client and mvc client. can we excpect in the future\n. ya i need a information about users only.. i need like with same client id how many user are logged in.\n. ",
    "pjirsa": "Thanks. I did try the full solution and it had the same result. I am running this on a windows 10 preview machine. everything seems to work fine on my win 8.1 build. i'll chalk it up to the \"preview\". thanks.\n. ",
    "zhangkefeng2010": "When I have removed Https in Server and Client, they are work. Please see following screenshot, \nLeft is Server, right is Client(replace https://localhost:44333 links to http://localhost:44333)\n. \n. ",
    "dzolnjan": "Yes, nuget worked without specifying version >> Install-Package IdentityManager -Pre\n\n. ",
    "JoshKewleyEdoc": "FWIW, master appears to still have the issue as of today. Dev seems fine. Perhaps readme.md should suggest using dev until master is fixed.\n. ",
    "cletisgipson": "Yes, I was able to get the samples working and build up my own proof of concept.  However, I do not what the issue was at this point.\nFrom: Brock Allen [mailto:notifications@github.com] \nSent: Monday, April 06, 2015 1:56 PM\nTo: IdentityServer/IdentityServer3.Samples\nCc: Cletis Gipson\nSubject: Re: [IdentityServer3.Samples] AspNetIdentity Sample not sending id_token. (#109)\nAny progress?\n\u2014\nReply to this email directly or view it on GitHub https://github.com/IdentityServer/IdentityServer3.Samples/issues/109#issuecomment-90175387 . \n. ",
    "felippeDev": "I\u00b4ve just updated all nugget content in the projects and doesnt work.. =*(\nHowever, i remove my reference to pure Idsrv project and copy IdentityServer3.dll from EF example. \nThis action resolve the problem for now.. But if i will customize views of Login page (for example) or something from Idsrv i think i will need customize Pure Idsrv3 proj and use this references on web UI proj and the issue will show up again..\nI will use a couple of days to test Idsrv + EF + ADFS + WAAD + APIs until customize some entities and... ufff i have too much work ahead studying all of this ;) so.. when i face this issue again i will investigate better and re-open this thread.\nThx Brock! :+1: \n^LF.\n. ",
    "dannycallaghan": "Are there any updates on this? We're having the same issue, and would love to see a fix in place.\n. Thank you, that's a great start for us, we'll give it a go.\n. Thanks @devlz303, I've managed to get IE9 working, using your rewritten getJSON function.\nJust a FYI for anyone else who might be using this, I found that IE9 was failing to make one of the calls, and not showing any errors. Banged my head against the wall for some time, then managed to find this:\nhttp://stackoverflow.com/questions/8058446/ie-xdomainrequest-not-always-work\nIt turns out that - in IE9 - unless you specify all possible events for the XDomainRequest call, it can silently fail. Editing the above getJSON, I added the following:\n``` javascript\nxr.onprogress = function () {}\nxr.ontimeout = function () {}\n```\nAnd IE9 started making the call successfully. Crazy.\n. Apologies, was I not clear?\nWe use this version in production:\nhttps://github.com/IdentityModel/oidc-token-manager/blob/master/oidc-token-manager.js\nI was informed that this was updated, so came here to see the sample of the new JS client, to look at upgraded the version we're using. Was hoping to find the plain old JavaScript, but it's a 1.8MB webpack bundle. I was just wondering if there is a non-webpacked sample I can look at here, or a pointer if I'm looking in the wrong place.\nThanks!\n. Great, thanks, and thanks for the quick response.\n. ",
    "omidkrad": "In master. I made a PL with the fixes #115\n. ",
    "dnfclas": "Hi @omidkrad, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla2.dotnetfoundation.org.\n    \nTTYL, DNFBOT;\n. @omidkrad, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, DNFBOT;\n. Hi @davidpeden3, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, DNFBOT;\n. Hi @jhuntoo, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, DNFBOT;\n. Hi @Xavina, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla2.dotnetfoundation.org.\n    \nTTYL, DNFBOT;\n. Hi @Chebur9tina, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla2.dotnetfoundation.org.\n    \nTTYL, DNFBOT;\n. @Chebur9tina, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, DNFBOT;\n. Hi @owmf, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, DNFBOT;\n. Hi @nelsonmorais, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla2.dotnetfoundation.org.\n    \nTTYL, DNFBOT;\n. @nelsonmorais, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, DNFBOT;\n. Hi @patrickhuber, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla2.dotnetfoundation.org.\n    \nTTYL, DNFBOT;\n. @patrickhuber, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, DNFBOT;\n. Hi @vairam-svs, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla2.dotnetfoundation.org.\n    \nTTYL, DNFBOT;\n. @vairam-svs, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, DNFBOT;\n. Hi @vairam-svs, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by .NET Foundation and real humans are currently evaluating your PR.\nTTYL, DNFBOT;\n. Hi @dhiraj, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla2.dotnetfoundation.org.\n    \nTTYL, DNFBOT;\n. @dhiraj, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, DNFBOT;\n. Hi @leonmeijer, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla2.dotnetfoundation.org.\n    \nTTYL, DNFBOT;\n. @leonmeijer, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, DNFBOT;\n. Hi @leonmeijer, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by .NET Foundation and real humans are currently evaluating your PR.\nTTYL, DNFBOT;\n. Hi @ryanvgates, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla2.dotnetfoundation.org.\n    \nTTYL, DNFBOT;\n. @ryanvgates, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, DNFBOT;\n. Hi @delRyan, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, DNFBOT;\n. @delRyan, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, DNFBOT;\n. Hi @ryanvgates, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by .NET Foundation and real humans are currently evaluating your PR.\nTTYL, DNFBOT;\n. Hi @billpratt, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla2.dotnetfoundation.org.\n    \nTTYL, DNFBOT;\n. @billpratt, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, DNFBOT;\n. Hi @billpratt, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by .NET Foundation and real humans are currently evaluating your PR.\nTTYL, DNFBOT;\n. Hi @KMC13, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla2.dotnetfoundation.org.\n    \nTTYL, DNFBOT;\n. @KMC13, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, DNFBOT;\n. Hi @tugberkugurlu, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by .NET Foundation and real humans are currently evaluating your PR.\nTTYL, DNFBOT;\n. Hi @firez5566, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, DNFBOT;\n. Hi @firez5566, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, DNFBOT;\n. Hi @devel0, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, DNFBOT;\n. Hi @DataWingSoftware, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla2.dotnetfoundation.org.\n    \nTTYL, DNFBOT;\n. @DataWingSoftware, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, DNFBOT;\n. Hi @estiller, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla2.dotnetfoundation.org.\n    \nTTYL, DNFBOT;\n. @estiller, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, DNFBOT;\n. Hi @dkaminski, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla2.dotnetfoundation.org.\n    \nTTYL, DNFBOT;\n. Hi @NetChris, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by .NET Foundation and real humans are currently evaluating your PR.\nTTYL, DNFBOT;\n. Hi @lcssk8board, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla2.dotnetfoundation.org.\n    \nTTYL, DNFBOT;\n. @lcssk8board, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, DNFBOT;\n. @1Jesper1, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, DNFBOT;\n. Hi @1Jesper1, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla2.dotnetfoundation.org.\n    \nTTYL, DNFBOT;\n. @1Jesper1, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, DNFBOT;\n. Hi @PJPollard, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla2.dotnetfoundation.org.\n    \nTTYL, DNFBOT;\n. Hi @aperisic, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, DNFBOT;\n. Hi @aperisic, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, DNFBOT;\n. Hi @ludarous, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla2.dotnetfoundation.org.\n    \nTTYL, DNFBOT;\n. Hi @johnkors, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla2.dotnetfoundation.org.\n    \nTTYL, DNFBOT;\n. @johnkors, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, DNFBOT;\n. Hi @Lutando, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, DNFBOT;\n. Hi @Lutando, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, DNFBOT;\n. Hi @ReeceWilliams7, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla2.dotnetfoundation.org.\n    \nTTYL, DNFBOT;\n. @ReeceWilliams7, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, DNFBOT;\n. Hi @domenichelfenstein, I'm your friendly neighborhood .NET Foundation Pull Request Bot (You can call me DNFBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla2.dotnetfoundation.org.\n    \nTTYL, DNFBOT;\n. \n@abellahoz,\nThanks for your contribution.\nTo ensure that the project team has proper rights to use your work, please complete the Contribution License Agreement at https://cla2.dotnetfoundation.org.\nIt will cover your contributions to all .NET Foundation-managed open source projects.\nThanks,\n.NET Foundation Pull Request Bot. \nThis seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. We will now review your pull request.\nThanks,\n.NET Foundation Pull Request Bot. \nThis seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. We will now review your pull request.\nThanks,\n.NET Foundation Pull Request Bot. ",
    "davidpeden3": "Yes. This line returns null without my patch which causes this line to throw a NullReferenceException.\n. ",
    "pawepaw": "Sure i know. But i'm thinking about mechanism that callback will always redirect to source page (page from which redirect occured)\n. Sure i understand this. But according to this demo I'm asking if there is any mechanism i can use to redirect user back to page from which he was redirected? Or i have to write my own mechanism. Because I understand that this address isn't stored anywhere and isn't returned from openId server.\n. Sure i get it. But then I'd have to implement some custom logic depended on QueryString like you did in  https://github.com/IdentityServer/IdentityServer3.Samples/blob/master/source/Clients/JavaScriptImplicitClient/index.html and parse if it's callback from server.\njavascript\n if (window.location.hash) {\n            handleCallback();\n        }\nI thought that i'd be better to have callback as separate webpage, like in this demo https://github.com/IdentityServer/IdentityServer3.Samples/tree/master/source/OAuthJS/JsImplicitOAuthLibraryDemo. But then I've to implement custom mechanism for redirection.\n. That's summary of my question. Then I have to write mechanism to store initial address somewhere (local or session storage perhaps) before redirecting and after processing callback redirect back.\n. Ok i'll try to clarify.\nYou have application with implicit flow.\n1. navigatge to page example.com/restricted.html which requires authentication. \n2. redirect to server for log in\n3. end user fill login form\n4. end user is redirected to example.com/callback.html page, query string is parsed and token goes to store. \n5. ?\nProblem is that User remains on callback page. I have to redirect him back to example.com/restricted.html (page which he wanted to open) this address isn't stored anywhere. \nI understand that i can treat example.com/restricted.html as callback page but i don't want it. I'd prefer separate callback page.\nMy possible solution:\n1. navigatge to page example.com/restricted.html which requires authentication. \n2. store current url (example.com/restricted.html) in sessionStorage\n3. redirect to server for log in\n4. end user fill login form\n5. end user is redirected to example.com/callback.html page, query string is parsed and token goes to store. \n6. read url from sessionStorage and redirect to (example.com/restricted.html)\nHope that finally we'll understand each other.\n. ok ;) thanks finally.\n. Where can I find it? \n. After upgrading to newest IdentityServer3 v2.0.0, IdentityModel and IdentityServer Access Token validation I have similar problem. I no longer have sub claim while calling WebAPI and I have http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier instead.\nDid anything changed? You did some mapping? I double checked my access token and it contains sub claim. \nI didn't change anything else in my WebAPI than upgrading  IdentityModel and IdentityServer Access Token validation.\n. Ok so it's caused by JwtSecurityTokenHandler.InboundClaimTypeMap this mapping yes? By default there is some map that turns sub claim into http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier ?\n. Digged into and i see this map. So by default it will map sub into name identifier.\n     {\n        \"sub\",\n        \"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier\"\n      },\nIt changed in new version of System.IdentityModel.Tokens.Jwt \n. ",
    "mkjv": "Thanks so much. IUserService interface is exactly what i was looking for, and somehow missed. i just implemented it and it works! Thanks again!\n. ",
    "fekberg": "I think the issue I was facing was the order of app.Map.\n. Indeed you are right, this is the complete configuration that worked:\n```\napp.UseOAuthBearerAuthentication(options =>\n{\n    options.Authority = \"http://localhost:5000/oauth/\";\n    options.Audience = \"http://localhost:5000/oauth/resources\";\noptions.TokenValidationParameters = new TokenValidationParameters\n{\n    IssuerSigningKeys = new[] { new X509SecurityKey(cert) },\n    ValidateLifetime = false,\n};\noptions.AutomaticAuthentication = true;\n\noptions.SecurityTokenValidators = new[]\n{\n    new JwtSecurityTokenHandler()\n};\n\n});\n```\n. @matt-shepherd, I couldn't get that to work, using the meta-data that is, so I had to specify the public key manually and it works like a charm.\nYou say you are getting a 401, are you sure the header Authorization with the content Bearer TOKEN is set? (Where TOKEN is the actual access token).\nDoes your logs say anything about why it fails to accept the access token?\nOne of the endpoints in IdSvr will give you the public key, make sure you use the same one.\n. Did you try adding app.UseErrorPage(ErrorPageOptions.ShowAll); ? or even \napp.UseErrorHandler(errorApp => { errorApp.Run(context => { }) });\nYou might have validation errors that you're not getting, worth having a look. If you turn on verbose logging on IdSvr, does it indicate that the API tries to ping it? Should say something like \"Starting Key Discovery\".\nI'm using the following UseOAuthBearerAuthentication:\n```\napp.UseOAuthBearerAuthentication(options =>\n{\n    options.Authority = \"http://myoauthserver/oauth\";\n    options.Audience = \"http://myoauthserver/oauth/resources\";\noptions.TokenValidationParameters = new TokenValidationParameters\n{\n    IssuerSigningKeys = new[] { new X509SecurityKey(cert) },\n    ValidateLifetime = true,\n};\noptions.AutomaticAuthentication = true;\noptions.SecurityTokenValidators = new[]\n{\n    new JwtSecurityTokenHandler()\n};\n\n});\n```\nAnd that works for me.\n. That's excellent @matt-shepherd! So that automatically fetched the correct key from the server and validated the access token?\n. @stephenstroud IdentityServer returns the bearer token when you've done a successful request to authorize/token.\n. @brockallen sorry for the long response time. I'm using the latest IdentityServer3 with MVC6.\nYou are right, it's a call to the API so most likely need to set the correct CORS settings for that as well.\nClose this question for now, if I end up having the same issue I'll reach out again!\nThanks a lot!\n. ",
    "matt-shepherd": "Hi @fekberg, are you issuing the token from the same project?  I have it being issued from another app, used your example above however still getting a 401.\nAlso why do you need to provide the IssuerSigningKeys?  I thought the idea of JWT was that it provided that info in the metadata?\n. Thanks for replying @fekberg. I have the Authorization header set with bearer and token. I have even verified the token against the issuing WebAPI project. I also spun up another WebAPI 2 project which works fine.. It's just this vNext project which won't play ball.\nAs for the log, I only seem to be able to log the IdSrv request for the token, I can't get any output when hitting the vNext project and requesting auh with the token.\nMy setup: WebAPI 2 IdSrv providing tokens for gramt_type : password\nASP.NET vNext project with controllers decorated with Authorize attribute and Startup.cs configured as you described.\n. Hey @fekberg thanks so much for the time you've spent helping however I managed to get it working simply with:\n```\n            app.UseOAuthBearerAuthentication(options =>\n            {\n                options.Authority = \"http://localhost:36416/core\";\n                options.Audience = \"https://auth.shipr.io/resources\";\n            options.AutomaticAuthentication = true;\n        });\n\n```\nAppreciate your help.\n. Appears AccessTokenValidation hasn't made it across to vNext so UseIdentityServerBearerTokenAuthentication doesn't exist and I'm having issues with UseOAuthBearerAuthentication, or it just generally not working.  Even with a valid token i get a 401.\n. When you say that you have to do the scope checking manually..  strictly speaking, thats optional right?  Without checking the scope it should still work?\n. thank you guys so much!  I honestly don't know what i was doing other than that, but it worked a treat!\n. You sir, are a genius!  Thank you!\nNow how to setup ASPNET Identity 3 with IdSrv3 on vNext :)\n. Not what I wanted to read!! :)\n. So that worked and was quite easy!  Just had to refactor the AspNetIdentityUserService to use the new bits from IUserService and the new UserManager, pretty painless!\nNext step is to tie an authenticated user back into the ApplicationUser to access profile data, any pointers as where / how to do this?\n. For some reason, im not getting the subject back from my access token.  it Validates fine against the accesstokenvalidation endpoint and contains all the claims, but I cant seem to get them inside my protected Controller Action.\nAny ideas?\n. that worked: \n{\n    \"client_id\": \"shipr_admin\",\n    \"scope\": [\n      \"email\",\n      \"openid\"\n    ],\n    \"sub\": \"fd11756d-49a7-4541-90c8-14505030c81b\",\n    \"amr\": \"password\",\n    \"auth_time\": 1437049321,\n    \"idp\": \"idsrv\",\n    \"iss\": \"http://dev.shipr.io/core\",\n    \"aud\": \"http://dev.shipr.io/core/resources\",\n    \"exp\": 1437052921,\n    \"nbf\": 1437049321\n  }\nI seem to of \"found\" the subject..  but nested quite deep:\nreturn ((ClaimsIdentity)User.Identity).Claims.First().Subject.Claims.Select(s => new\n        {\n            label = s.Type,\n            value = s.Value\n        });\nWhats the preferred way to pull the subject out?\nClaims.First().Subject.Name is where i expected it, but thats null.\n. So the framework wont help me out at all in serving up the subject? It seems to carry the \"type\" http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier...  so im just searching the claims for that?\n. Figured as much, thanks Brock.\n. Just incase its helpful to anyone else trying to use the Microsoft bits in the client, the ClaimsIdentity will not have a name, as Microsoft are looking for a unique_name claim.\nJwtSecurityTokenHandler.InboundClaimTypeMap.Add(\"name\", System.Security.Claims.ClaimTypes.Name); \nadds a mapping so the username is hydrated.\nNot sure if this is the best way about it, but it saves manual mapping and ClaimsPrinciple creation.\n. ",
    "stephenstroud": "@fekberg  Do you have an example how you created the bearer token on login please? I'm trying to achieve this http://www.asp.net/web-api/overview/security/individual-accounts-in-web-api for ASP.NET 5\n. ",
    "totpero": "i login when i access this link: https://localhost:44333/core/permissions \n. ",
    "Xavina": "SORRY !!!!\nI was playing with GitHub!!! Exploring.... and I did not thing in removing the POLL !!!\nSo sorry! Won't happen again!\n. ",
    "iltera": "I strumbled getting and checking the access_token from OIDC Manager a couple of months ago. I found the solution by moving OIDC Manager out of the scope of Angular app by defining a global mgr object and only getting access_token and profile info from that global variable where needed, in order to not recall and create instances of the OIDC Manager object everytime a call to the API is made. Creating multiple instances of Manager coused only headaches for me when used in a service or interceptor. It gets a new access_token everytime when Manager is accessed and if you're renewing the access_tokens automatically, there are errors appearing on the console and application breaks at some point.\nMoving the Manager object out of Angular and accessing it once during the app lifecycle works for now, but I am still questioning this approach as it is very far from an elegant Angular Way solution.\nCan you please explain, how and where are you creating the $window.mgr object in your app? Are you having the side effects that I've explained below?\n. @brockallen, thanks for the input. That was what I came up doing a few months back. Wasn't sure it was the right thing to do till I saw your message. Now I am relaxed :)\n. If you use the Angular Way to define and access the TokenManager object, you'll get in trouble very quickly. Try a global js variable for TokenManager, outside the angular scope. You'll have access to that variable as an instance of the TokenManager in all your controllers, services and factories.\nOtherwise, if you define TokenManager with a factory or service, everytime you access it, angular will create a new instance of TokenManager and the amount of your silent renew counters increase by one for every access. Which means, you will soon have 2, 3, 5... TokenManager objects counting down for a token renewal. And with every call to the TokenManager, a new TokenManager object with different state and nonce values will be created, and when the time comes for a renewal, the values which were stored in the localstorage (or session storage) the first time, will be overriden by the second, third... The active TokenManager which timesout for the token renewal will always have different nonce and state values, thus you get these errors.\n. ",
    "gilm0079": "Storing the Token Manager in window.mgr comes from the Identity server client sample OAuthJS.  The login page instantiates the Token Manager and sets it to the window.mgr.  In angular I'm just swapping out window.mgr for $window.mgr as it sounds like $window is the proper wrapper to use for testing or something.  \nI was hoping someone from the Identity Server dev team could chime in on their thoughts for angular integration.  I'm still working out some issues regarding silent token renewal, moving the Token Manager to an authentication service module and I'm not fond of the token manager getting attached to the \"window\". It seems to be destroyed on a browser refresh.\nFor the time being I'm probably just going to have to include code in my controllers to rebuild the Token Manager and set it to the window each time to make sure that the window.mgr exists.\n. Thanks @brockallen , good to hear a the tokenMgr will work fine if I stick it in the $rootScope.  I have the TokenManager working now as an Angular service.\nThe only issue I ran into was trying to put the callback endpoint as an angular route/controller.  I don't think it will work in my setup right now.  My Angular app is not running in Html5 mode so the Angular app uses the hash sign in the URL space to separate the server side route from the angular route.  I think that hash is breaking the callback id_token hash coming back from the identity server.  I'm watching fiddler and normally the callback will look something like \".../callback.html#id_token=\".  When I try using the angular callback route/controller the identity server response url looks like this \".../app#/callbackid_token=\".  You can see that the Identity server doesn't insert a hash between the redirect Uri and the token response.  Because of that I think the Oidc.js fails to parse the window.location.hash correctly.\nDo you know if there is a way to make this work with angular or why the identity server doesn't insert a preceeding hash in this case?  I'm not overly concerned if not.  a non-angular callback page doesn't seem to hurt anything.  I think the only overhead is the non-angular callback will need to pull down the required script files (oidc.js and jquery) and new up the Token Manager before it can process the callback vs. the angular page would have the 3rd party libraries and Token Manager already initialized.\n. Thanks @brockallen .  I updated the route with the /:response and the response hash parsing and that fixed it.  The callback is now operating with in angular.\n. ",
    "peske": "Yes, that's it!\nThanks Dominick!\n. ",
    "DarrenMa": "I think I am running the SampleAspNetWebApi because if I hit http://localhost:2727/test then I do get a response from the TestController.\n. @brockallen I changed the order my projects were building and it's working now. Sorry for the false alarm.\n. ",
    "f0rt": "I've found it: \"Microsoft.AspNet.Authentication.OpenIdConnect\": \"1.0.0-beta4\"\nI was able to run some existing examples with it. Thanks.\n. ",
    "mynkow": "Well, reading the documentation for 10 min can save you a day of try/fail tactics\nhttp://identityserver.github.io/Documentation/docs/configuration/cors.html\n. I wrote it wrong. The correct one is:\nWell, a day of try/fail tactics can save you 10 min reading the documentation :)\n. ",
    "zoranpro": "As you can see on second image, I do exactly that. But for some reason token does not get validated. I always get 401 when I try to call the API. Its like that API doesn't make proper check for that token, not sure.\n. Yes I did. Here is how the code in Startup.cs look like:\n```\n app.Map(\"/core\", core =>\n            {\n                var certFile = env.ApplicationBasePath + \"\\Configurations\\idsrv3test.pfx\";\n            var factory = InMemoryFactory.Create(\n                            users: Users.Get(),\n                            clients: Clients.Get(),\n                            scopes: Scopes.Get());\n\n            var idsrvOptions = new IdentityServerOptions\n            {\n                IssuerUri = \"https://idsrv3.com\",\n                Factory = factory,\n                SiteName = \"test vnext Identity server\",\n                RequireSsl = false,\n\n                SigningCertificate = new X509Certificate2(certFile, \"idsrv3test\"),\n                CorsPolicy = CorsPolicy.AllowAll,\n\n                AuthenticationOptions = new AuthenticationOptions {    }\n            };\n\n            core.UseIdentityServer(idsrvOptions);\n        });\n\n        app.Map(\"/api\", api =>\n        {\n            api.UseOAuthBearerAuthentication(options => {\n                options.Authority = \"http://localhost:58382/core\";\n                options.MetadataAddress = \"http://localhost:58382/core/.well-known/openid-configuration\";\n                options.TokenValidationParameters.ValidAudience = \"https://idsrv3.com/resources\";\n            });\n            api.UseMvc();\n        });\n\n``\n. I was missingIssuerSigningKey = new X509SecurityKey(new X509Certificate2(certFile, \"idsrv3test\"))inTokenValidationParameters`. After that I manage to make it to work.\n. ",
    "prasadnadendla": "Can you able to specifically tell me which sample should i have to look into from the above link?\n. would you able to tell me the builtin event handler for password reset?.I mean to say sending password verification code to the user mail id once he requested for password reset.\n. ",
    "ghidello": "Can you check if the authority property of the IdentityServerBearerTokenAuthenticationOptions class is correctly configured with your IdentityServer url?\n. ",
    "owmf": "Yo Brock,\nI was getting a build error on Thinktecture.IdentityServer3.EntityFramework with version=\"1.2.1-build00009\". I was just trying to be a good citizen and help the next sample user avoid this little irritation. \nBTW, great work on IdentityServer3... I'm eagerly awaiting v2.0.\n. ",
    "digiface": "they were package restore errors due to file path too long as you probably guessed .. I got around it by running the samples from the drive root instead of C:\\Users\\User\\Source\\Workspaces\n. ",
    "nelsonmorais": "Ok!\n. ",
    "vcarreno96": "Hello guys - I was able to get it to work. I believe I might have had another web api application registered in IIS to use port 80 which was causing the confusion.\n. ",
    "patrickhuber": "For testing on a dev workstation and consuming tokens. The readme.md in the\nsame folder states all the reasons you would want to install the certs, the\nscript just makes getting running easier.\nOn Sun, Jul 12, 2015, 8:46 PM Brock Allen notifications@github.com wrote:\n\n@patrickhuber https://github.com/patrickhuber any update?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/IdentityServer/IdentityServer3.Samples/pull/144#issuecomment-120776817\n.\n. ~~I signed it under prhuber@gmail.com, it said it emailed Dominick. Not sure how to link it to my github account, so if you have any pointers, I'd appreciate it.~~\n\nNever mind, I read the bot instructions. Should be signed now\nOn Sun, Jul 12, 2015 at 9:29 PM, Brock Allen notifications@github.com\nwrote:\n\nOk. @leastprivilege https://github.com/leastprivilege thoughts?\nAlso, @patrickhuber https://github.com/patrickhuber you've still not\nsigned the CLA.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/IdentityServer/IdentityServer3.Samples/pull/144#issuecomment-120780323\n.\n. \n",
    "rh78": "Hi i also tried to use ASP.NET vnext + IdSrv3 + ASP.NET Identity 3. I used the same approach as Matt mentioned, but whenever I try to access data through the Identity 3 user service I got from IServiceProvider (it is queried within the \"refactored\" AspNetIdentityUserService), I get ObjectDisposedException - it seems to be impossible to me to get the correct, up to date instance of the user service as it is registered in a scoped way. IdSrv3 Autofac of course knows nothing about the vnext dependency system so this way is also blocked. Any hints?\n. In general after some research there is a critical problem. Of course, the ASP.NET vNext IdSrv3 integration works and it can RUN the IdSrv3. But as soon as one wants to access some scoped services (like Entity Framework) etc. registered to the new vNext DI container it will fail because it is IMHO impossible to get the \"current\" version of the ServiceProvider - if you pass the ServiceProvider from Startup it will always contain disposed objects. Allen is this right or do you have a solution?\n. Actually I found the solution. It is possible to get OwinEnvironmentService injected into the UserService constructor. I checked the vnext-OWIN bridge and actually the current HttpContext containing the RequestServices is being passed to the OWIN environment, and can be extracted like this:\npublic AspNetIdentityUserService(OwinEnvironmentService owin)\n{\n            HttpContext context = (HttpContext)(owin.Environment)[typeof(HttpContext).FullName];\n```\n        ServiceProvider = context.RequestServices;\n    ...\n\n```\n}\n. ",
    "daishisystems": "Thanks. So there is no way to add claims associated with default scopes to an ID Token. I must add a new custom scope and tag associated claims with AlwaysIncludeInIdToken = true?\n. ",
    "vairam-svs": "CLA already signed\n. The master branch is still does not have the version 2 code yet.\n. ",
    "taherchhabra": "Stacktrace\nSystem.Reflection.AmbiguousMatchException: Ambiguous match found.\n   at System.RuntimeType.GetMethodImpl(String name, BindingFlags bindingAttr, Binder binder, CallingConventions callConv, Type[] types, ParameterModifier[] modifiers)\n   at System.Type.GetMethod(String name, BindingFlags bindingAttr)\n   at Microsoft.AspNet.Hosting.Startup.StartupLoader.FindMethod(Type startupType, String methodName, String environmentName, Type returnType, Boolean required)\n   at Microsoft.AspNet.Hosting.Startup.StartupLoader.FindConfigureDelegate(Type startupType, String environmentName)\n   at Microsoft.AspNet.Hosting.Startup.StartupLoader.LoadMethods(Type startupType, IList`1 diagnosticMessages)\n   at Microsoft.AspNet.Hosting.Internal.HostingEngine.EnsureStartup()\n   at Microsoft.AspNet.Hosting.Internal.HostingEngine.EnsureApplicationServices()\n   at Microsoft.AspNet.Hosting.Internal.HostingEngine.Start()\n   at Microsoft.AspNet.Loader.IIS.RuntimeHttpApplication.ApplicationStart(IHttpApplication application)\n   at Microsoft.AspNet.Loader.IIS.HttpApplicationBase.InvokeApplicationStart(IHttpApplication application)\n. Sorry. Just removed this from Startup.cs and it worked\n```\n public void Configure(IApplicationBuilder app)\n        {\n            var idsrvOptions = new IdentityServerOptions\n            {\n                Factory = new IdentityServerServiceFactory()\n                                .UseInMemoryUsers(Users.Get())\n                                .UseInMemoryClients(Clients.Get())\n                                .UseInMemoryScopes(Scopes.Get()),\n            };\n        app.UseIdentityServer(idsrvOptions);\n    }\n\n```\n. Reopening so that someone can fix in code and close this issue. Thanks\n. ",
    "cloudybrain": "Ah sorry! I got confused, I had a MembershipReboot sample from BrockAllen's repo, and migrated a sample from here to integrate with that.. that's where I got the ninject from. MembershipReboot examples have ninject in them, and it caused some headaches and issues.\n. Okay so I don't know what happened, but when I reinstalled the nuget all over again, and ran the code it worked!\nI think it had something to do with the responsetype, I had it as \"code id_token token\" and put it as \"id_token token\" and I guess that's where the problem occurred\n. ",
    "Condor2708": "I am using a simple value to test what's happening \nI've added $scope.showText = false;\nin the controller and my view is using an span with ng-show=\"showText\" \nWeird\n. ",
    "arkreddy16": "In IIS Express it is configured as \"http://localhost:44333\" and this works fine for me, but the problem is when i host same project on IIS Local i.e.\"http://localhost/IdSrv\" and execute the client project i get  \"Unauthorized\" as HttpErrorReason in TokenResponse that is returned from \"GetClientToken\" method.\n. I have verified that anonymous is enabled in IIS, need to verify logs! Am able to access identity server from browser. How can I enable logging and where exactly log files will be created?\n. ",
    "codesilverback": "I noticed that the packages.config in the samples directory refers to IdentityServer3--a particular build.  When I try to build this from scratch using NuGet, I get the same 401.  Do the samples use pre-release versions that make following along from scratch not work?\n. ",
    "tjoudeh": "Hi @brockallen, in the clients samples repo (MvcCodeFlowClientManual). There is a client with id \"codeclient\" configured in the IdentityServer to use reference access tokens not JWTs. Everything is working correctly and we are able to receive reference access tokens, but once this client tries to call the Api (Resource Api which is protected by the Identity server) and by sitting the reference access token in the Authorization header using Bearer scheme, we always receive 401, taking in consideration that once we try to validate this reference access token using the endpoint \"connect/accesstokenvalidation\" we receive 200 and this token is valid.\nIf we tried to change the access token type for this client to JWT everything works correctly, we receive a JWT, and we are able to use it to access the Resource API, so I believe receiving 401 has nothing to do with missing scopes or misconfigurations between client, Identity Server, and Resource API.\nI guess I missed something when I tried to configure Identity Server so those reference access tokens are not validated correctly.\nCan you guide me where to look further and try to debug the issue?\nRegards,\nTaiseer\n. ",
    "EliotJones": "Thank you, I added an MVC client application to the sample and it redirected to the login page from which I could access the register link with the correct signin querystring.\n. ",
    "TristinDavis": "Does anyone know what the actual solution to this issue was?  I\"m having the same problem. I just upgraded VS 2015 Pro to 1.0.0-rc1 and tried opening the project, but i get:\nPATH=.\\node_modules.bin;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\Extensions\\Microsoft\\Web Tools\\External;%PATH%;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\Extensions\\Microsoft\\Web Tools\\External\\git\nC:\\Users\\cdavis.dnx\\runtimes\\dnx-clr-win-x86.1.0.0-rc1-final\\bin\\dnx.exe \"C:\\Users\\cdavis.dnx\\runtimes\\dnx-clr-win-x86.1.0.0-rc1-final\\bin\\lib\\Microsoft.Dnx.Tooling\\Microsoft.Dnx.Tooling.dll\" restore \"C:\\Users\\cdavis\\Source\\Repos\\IdentityServer3.Samples\\source\\AspNet5\\src\\IdentityServer\" -f \"C:\\Program Files (x86)\\Microsoft Web Tools\\DNU\"\nMicrosoft .NET Development Utility Clr-x86-1.0.0-rc1-16202\n  CACHE https://www.nuget.org/api/v2/\nRestoring packages for C:\\Users\\cdavis\\Source\\Repos\\IdentityServer3.Samples\\source\\AspNet5\\src\\IdentityServer\\project.json\nWriting lock file C:\\Users\\cdavis\\Source\\Repos\\IdentityServer3.Samples\\source\\AspNet5\\src\\IdentityServer\\project.lock.json\nSystem.IO.DirectoryNotFoundException: Could not find a part of the path 'C:\\Users\\cdavis.dnx\\packages\\Owin\\1.0.0\\Owin.1.0.0.nupkg.sha512'.\n   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)\n   at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)\n   at System.IO.StreamReader..ctor(String path, Encoding encoding, Boolean detectEncodingFromByteOrderMarks, Int32 bufferSize, Boolean checkHost)\n   at System.IO.File.InternalReadAllText(String path, Encoding encoding, Boolean checkHost)\n   at System.IO.File.ReadAllText(String path)\n   at Microsoft.Dnx.Tooling.Utils.LockFileUtils.CreateLockFilePackageLibrary(LockFilePackageLibrary previousLibrary, IPackagePathResolver resolver, IPackage package, String correctedPackageName)\n   at Microsoft.Dnx.Tooling.RestoreCommand.WriteLockFile(LockFile previousLockFile, String projectLockFilePath, Project project, List1 graphItems, PackageRepository repository, IProjectResolver projectResolver, IEnumerable1 contexts)\n   at Microsoft.Dnx.Tooling.RestoreCommand.d__69.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at Microsoft.Dnx.Tooling.RestoreCommand.<>c__DisplayClass68_0.<b__2>d.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\nat Microsoft.Dnx.Tooling.RestoreCommand.d__68.MoveNext()\nRestore failed\nCould not find a part of the path 'C:\\Users\\cdavis.dnx\\packages\\Owin\\1.0.0\\Owin.1.0.0.nupkg.sha512'.\nNuGet Config files used:\n    C:\\Users\\cdavis\\AppData\\Roaming\\NuGet\\nuget.config\nFeeds used:\n    https://www.nuget.org/api/v2/\n    C:\\Program Files (x86)\\Microsoft Web Tools\\DNU\n. ",
    "setiseeker": "Hi Brock,\nHere is the exception stack trace:\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\n   at System.Threading.Tasks.Task1.GetResultCore(Boolean waitCompletionNotification)\n   at System.Threading.Tasks.Task1.get_Result()\n   at Client.Program.GetClientToken() in C:_tmp\\IdentityServer3.Samples-master\\source\\Simplest OAuth2 Walkthrough\\Client\\Program.cs:line 33\n   at Client.Program.Main(String[] args) in C:_tmp\\IdentityServer3.Samples-master\\source\\Simplest OAuth2 Walkthrough\\Client\\Program.cs:line 11\n   at System.AppDomain._nExecuteAssembly(RuntimeAssembly assembly, String[] args)\n   at System.AppDomain.ExecuteAssembly(String assemblyFile, Evidence assemblySecurity, String[] args)\n   at Microsoft.VisualStudio.HostingProcess.HostProc.RunUsersAssembly()\n   at System.Threading.ThreadHelper.ThreadStart_Context(Object state)\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\n   at System.Threading.ThreadHelper.ThreadStart()\nInner Exception stack trace:\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at IdentityModel.Client.TokenClient.d__1.MoveNext() in c:\\Dropbox\\identity\\IdentityModel\\IdentityModel\\source\\IdentityModel.Shared\\Client\\TokenClient.cs:line 90\nI also tried updating to the pre-release version of IdentityServer 3 and got the same error.\nI have not setup or configured any certificates.\nLet me know if I can supply any other info.\nthanks\n. What other info might help?\n. I kicked off the server exe from explorer before i tried running the client in VS.\nThe server shows the following:\n\n. It might be that the Apis was not running when i tested the client & server. I will test now with all three running and let you know shortly.\n. Thanks brockallan & lyphtec for the help. Sorry for the Tardy Response.\nWhen going to: https://localhost:44333/permissions  I am getting the following in Chrome:  ERR_CONNECTION_RESET\nI have moved my Certificates as per the screen shot.\nI still get the same exception as before.\nAll three projects are running when testing these.\n. Thanks Guys.\nChanging my Port was the magic to my issue.\nWhat is strange is I used TCPView to check port 44333 and nothing appears bound to the port.\nBut changing it to 44336 resolved the issue and I am now seeing the landing page.\nThank you all\n. ",
    "lyphtec": "I ran into the same issue and it was due to the SSL cert not being trusted.\nTo resolve it, just copy (right-click drag) the \"localhost\" cert used by IIS Express from the Personal store to the Trust Root Cert Authority:\n\n. Confirm that your server is running at that address (specifically the https part):\ncsharp\n            using (WebApp.Start<Startup>(\"https://localhost:44333\"))\n            {\n                Console.WriteLine(\"server running...\");\n                Console.ReadLine();\n            }\nYou can try changing it to a different port and accessing it directly in Chrome to see if it works. You should see the welcome screen:\n\nAlso, I'm not sure why your IdentityServer is version 3.2.0.0-build00174 as the latest should be v2.0.0 as per http://www.nuget.org/packages/IdentityServer3/.  Are you sure you are using the correct NuGet package?\n. ",
    "mheyman": "I had the same issue. For me the problem was a bad certhash in the sslcert list. Fixed it with\n> netsh http add sslcert ipport=0.0.0.0:44333 certhash=<thumbprint without spaces> appid={00112233-4455-6677-8899-AABBCCDDEEFF}\n. ",
    "bloudraak": "The labels do not indicate which version of IdentityServer3 they relate to and there lies my frustration.\n. Can we just create a branch for each of the 1.6 and 2.0 releases? I made a similar request on the official repo of IdentityServer3.  We can close this one here and keep discussing the merits on the other one. \n. ",
    "ryanvgates": "I was able to resolve this issue, but I believe that the readme could be more specific and descriptive. I'll add a pull request with my suggested changes.\n. @leastprivilege I see your point now. I had kept getting the following error, and I had assumed that I needed to have the certificates installed.\n\nThe remote certificate is invalid according to the validation procedure.\n\nI just tested and verified that the cause of this was not having the localhost certificate in the Trusted Root Certification Authorities -> Certificates. I may want to add a note to the Readme that includes the note \"All samples work without explicitly installing the cert\" to keep people like me from going down the wrong path.\n. @leastprivilege That did the trick. Thank you for that pointer.\nFor anyone else that stumbles upon this issue, refer to the code in the Certificate.cs file of the AspNetIdentity_2fa project. You will need to include the idsrv3test.pfx or another .pfx file. If you do use this code, make sure that you set the Build Action to Embedded Resource for your .pfx file.\n. @brockallen I wasn't sure whether it belonged int the Identity Manager or the IdentityServer3.Samples since it came out of the sample project in IdentityServer3.Samples/source/AspNetIdentity.\nThe issue is that in Identity Manager when I click try to go into Identity Manager through the admin portion, like in the sample, the page will not load and there doesn't seem to be any errors either. I'm having trouble understanding where to go next to research the issue.\n. @brockallen I was able to get it working when I set runAllManagedModulesForAllRequests(RAMMFAR) to true like below in the web.config.\n<system.webServer>\n   <modules runAllManagedModulesForAllRequests=\"true\"/>\n</system.webServer>\nI was not getting any 404s from the HTTP request for the assets. \nIs there any logging that I can turn on in the future to help troubleshoot this or similar issues?\n. @brockallen I see what you mean. Would IIS Express (since I'm in development) be handling the request then? Should I look into their logs?\n. @brockallen I agree. I am able to reproduce it by commenting it out RAMMFAR in the web.config for the example AspNetIdentity.\n. @brockallen Thank you for your help. Yes, this issue can be closed.\n. For anyone else coming across this issue, RAMMFAR is covered in the walk through videos.\n. No that certainly covers it. Not sure how I missed it. Thank you for pointing me in the right direction.\n. No it worked just fine. I just wasn't sure if it was necessary, but changing it isn't worth it if it would the dev process for your team.\n. ",
    "UlyssesAlves": "@ryanvgates or @leastprivilege Which walkthrough explains this signing certificate configuration? I'm getting this same error even though my certificate appears to be set up correctly.. ",
    "zebamba": "I updated the code as follow:\n\nif (claim.Type == ClaimTypes.NameIdentifier && claim.Value != null)\n{\n  user.UserId = Guid.Parse(claim.Value);\n}\n\nIt works but I still need to have more information from the claims.\nWould be very nice if you can help me with a mapping.\nThank you\n. This is on another api that gets Data from my Auth Server (Token and Identity Provider).\nit is System.Security.Claims class fro the principal \nAnd the claims is from ClaimsIdentity class.\n. I have my Token Server running apart.\nOn the My other application Web Api on the App_start or on my case it is SecurityConfig\nI added this line\n```\n        #region Claims Transformation\n    // Please refer to the link below for mode details about Claims Transformation:\n    // http://identityserver.github.io/Documentation/docsv2/overview/mvcGettingStarted.html\n\n    // Turn off Microsoft's JWT handler that maps claim types to .NET's long claim type names\n    JwtSecurityTokenHandler.InboundClaimTypeMap = new Dictionary<string, string>();\n\n    // Adjust the configuration for anti-CSRF protection to the new unique sub claim type\n    AntiForgeryConfig.UniqueClaimTypeIdentifier = ClaimTypes.Subject;\n\n    #endregion\n\n```\nIt Works for me.\n. ",
    "kcd83": "FYI Microsoft have fun on the way out too, outbound \"sub\" becomes \"nameid\" and both map inbound to ClaimTypes.NameIdentifier\nIn MVC 6 \n```\n    services.Configure(options =>\n    {\n    ...\n        var validator = options.SecurityTokenValidators.OfType().SingleOrDefault();\n    // Turn off Microsoft's JWT handler that maps claim types to .NET's long claim type names\n    validator.InboundClaimTypeMap = new Dictionary<string, string>();\n    validator.OutboundClaimTypeMap = new Dictionary<string, string>();\n});\n\n```\n. ",
    "nathan-alden": "Talk about shitty design... For some reason, Microsoft made those two properties static on the JwtSecurityTokenHandler class. That means each use of the class is not guaranteed to have the lists initialized properly because other code could be overwriting the values!\n```\n/// \n/// Gets or sets the  that is used when setting the  for claims in the  extracted when validating a .\n/// The  is set to the JSON claim 'name' after translating using this mapping.\n/// \n/// 'value is null.\npublic static IDictionary InboundClaimTypeMap\n{\n  get\n  {\n    return JwtSecurityTokenHandler.inboundClaimTypeMap;\n  }\n  set\n  {\n    if (value == null)\n      throw new ArgumentNullException(\"value\");\n    JwtSecurityTokenHandler.inboundClaimTypeMap = value;\n  }\n}\n/// \n/// Gets or sets the  that is used when creating a  from (s).\n/// The JSON claim 'name' value is set to  after translating using this mapping.\n/// \n/// This mapping is applied only when using  or . Adding values directly will not result in translation.\n/// 'value is null.\npublic static IDictionary OutboundClaimTypeMap\n{\n  get\n  {\n    return JwtSecurityTokenHandler.outboundClaimTypeMap;\n  }\n  set\n  {\n    if (value == null)\n      throw new ArgumentNullException(\"value\");\n    JwtSecurityTokenHandler.outboundClaimTypeMap = value;\n  }\n}\n```\nAnother really irritating thing about this is Microsoft's default mappings actually prevent using the standard sub claim; instead, it's replaced with some arbitrary Microsoft schema URL that has nothing to do with standard JWTs.\nI ended up writing the following code that runs just before using JwtSecurityTokenHandler:\nJwtSecurityTokenHandler.InboundClaimFilter.Clear();\nJwtSecurityTokenHandler.InboundClaimTypeMap.Clear();\nJwtSecurityTokenHandler.OutboundClaimTypeMap.Clear();\n. ",
    "plioi": "I'm trying to accomplish the same using Identity Server 4.\nI rephrased the type map clearer to use \"DefaultInboundClaimTypeMap\" as suggested here: https://leastprivilege.com/2016/08/21/why-does-my-authorize-attribute-not-work/\nJwtSecurityTokenHandler.DefaultInboundClaimTypeMap.Clear();\nThat makes the claims come in as expected (\"sub\").\nHowever, @zebamba 's code above also does the following,\n        AntiForgeryConfig.UniqueClaimTypeIdentifier = ClaimTypes.Subject;\nSome discussion of Identity Server 3 also claims that the AntiForgery change is required in combination with the clearing of the type map: http://identityserver.github.io/Documentation/docsv2/overview/mvcGettingStarted.html\nI can't get that line to compile when using Identity Server 4:\n     AntiForgeryConfig.UniqueClaimTypeIdentifier = Constants.ClaimTypes.Subject;\nAre the AntiForgeryConfig and Constants part of Identity Server? If not, are they accessible to an MVC Core app?\n. ",
    "ceastwood": "I will create one, I have a closed-source project where I worked through it\nand felt I should offer a sample.\nOn Tue, Sep 29, 2015 at 5:20 PM, Brock Allen notifications@github.com\nwrote:\n\nIf you have a open repo with it, we can link to it from our docs.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/IdentityServer/IdentityServer3.Samples/issues/174#issuecomment-144194537\n.\n. \n",
    "majhoos": "As you suggested I turned on logging and looked at the log and realized I was using keys less than 2048. Changed the key size of 4096 using \"-len 4096\" parameter and it works fine now.\nThanks Dominic,\n. ",
    "sxlvalue": "thank you very much.\n. ",
    "HappyCodeSloth": "Thanks for the help. I got something working and much easier than I thought too.\nSo, the CustomGrantValidator looks like the following (it just takes one param the subject of the user to act as): \n``` c#\nclass ActAsGrantValidator : ICustomGrantValidator\n{\n    private IUserService _users;\npublic ActAsGrantValidator(IUserService users)\n{\n    _users = users;\n}\n\nTask<CustomGrantValidationResult> ICustomGrantValidator.ValidateAsync(ValidatedTokenRequest request)\n{\n    var param = request.Raw.Get(\"act_as_subject\");\n    if (string.IsNullOrWhiteSpace(param))\n    {\n        return Task.FromResult<CustomGrantValidationResult>(\n            new CustomGrantValidationResult(\"Missing parameters.\"));\n    }\n\n    return Task.FromResult(new CustomGrantValidationResult(param, \"act-as\"));\n}\n\npublic string GrantType\n{\n    get { return \"act-as\"; }\n}\n\n}\n```\nThen from the WebAPI in the middle which calls onto the next WebApi I just have the following:\n``` c#\nTokenClient tokenClient = new TokenClient(\n    \"https://localhost:44333/connect/token\",\n    \"WebApi1\",\n    \"4B79A70F-3919-435C-B46C-571068F7AF37\"\n);\nvar caller = User as ClaimsPrincipal;\nvar customParams = new Dictionary\n{\n    { \"act_as_subject\", caller.FindFirst(\"sub\").Value }\n};\nvar tokenResponse = tokenClient.RequestCustomGrantAsync(\"act-as\", \"WebApi2\", customParams).Result;\n```\nAs you can see WebApi1 is registered as a client in the IdSrv with Flow set to custom and AllowedCustomGrantTypes set to be act-as. \nThis looks solid to me.\n. Arr yes, thanks, I thought maybe that because the client is already registered in the id server the identity server is already trusting the client at this point. But I can see the client could use this as a loophole to get any users account via there subject name which is not so good. \nSo, slight change to pass in the access_token for the API as the param for the custom grant and then take the subject from that. So, the CustomGrantValidator looks like the following:\n``` c#\nclass ActAsGrantValidator : ICustomGrantValidator\n{\n    private TokenValidator _validator;\npublic ActAsGrantValidator(TokenValidator validator)\n{\n    _validator = validator;\n}\n\nTask<CustomGrantValidationResult> ICustomGrantValidator.ValidateAsync(ValidatedTokenRequest request)\n{\n    var param = request.Raw.Get(\"token\");\n    if (string.IsNullOrWhiteSpace(param))\n    {\n        return Task.FromResult<CustomGrantValidationResult>(\n            new CustomGrantValidationResult(\"Token parameter not set.\"));\n    }\n\n    var result = _validator.ValidateAccessTokenAsync(param).Result;\n    if (result.IsError)\n    {\n        return Task.FromResult<CustomGrantValidationResult>(\n            new CustomGrantValidationResult(result.Error));\n    }\n\n    var subjectClaim = result.Claims.FirstOrDefault(x => x.Type == \"sub\");\n    if(subjectClaim == null)\n    {\n        return Task.FromResult<CustomGrantValidationResult>(\n            new CustomGrantValidationResult(\"No subject claim for the token.\"));\n    }\n\n    return Task.FromResult(new CustomGrantValidationResult(subjectClaim.Value, \"act-as\"));\n}\n\npublic string GrantType\n{\n    get { return \"act-as\"; }\n}\n\n}\n```\nAnd the middle tier WebAPI just passes its access token as the argument.\n``` c#\nvar customParams = new Dictionary\n{\n    { \"token\", caller.FindFirst(\"token\").Value }\n};\n```\n. I don't have a blog unfortunately but I have put in a pull request instead with the sample #188.\n. I don't have a blog unfortunately but I have put in a pull request instead with the sample #188.\n. ",
    "novikod": "Hi,\nThis example does not work with custom user service, for example AspId.\nWhen I configure \nidSvrFactory.ConfigureUserService(\"AspId\");\nand after that register custom grant validator\nidSvrFactory.CustomGrantValidators.Add(new Registration(typeof(ActAsGrantValidator)));\nI can't find error but problem is with token validation.\nAll logging options are set to true.\nvar result = _validator.ValidateAccessTokenAsync(param).Result;\nValidator never return a result.\nPlease help,\nIgor\n. ",
    "chippiearnold": "I've had the same issue as novikod / Igor above - it works fine when using inmemory scopes and inmemory clients, but then I switched to using the EntityFramework nuget package and couldn't get ValidateAccessTokenAsync(param).Result to work.\nTurns out it is because the entity framework calls are all using the async methods. After downloading the Core.EntityFramework source and debugging through I found that the call to FindClientByIdAsync(string clientId) in the ClientStore was never returning.\nIt seems the reason is that the line in the example ActAsGrantValidator is blocking and so causes a deadlock.\nAfter 2 days of debugging the simple fix is to change the line to:\nvar result = Task.Run(() => _validator.ValidateAccessTokenAsync(param)).Result;\n. ",
    "billpratt": "I didnt realize that and assumed it was a mistake. I dont have the myget feed in my sources and the build was failing. I'll close this pull request.\n. Is the myget feed documented somewhere?\n. Found the issue. As @brockallen suggested 2.0.1-build00181 doesnt exist\n\n. on it\n. https://github.com/IdentityServer/IdentityServer3.Samples/pull/184\n. np. If I get some time I'll update the others. Feel free to put something in and assign it to me\n. ",
    "dapug": "ok, interesting.  I may have misunderstood what was being \"validated\".  It sounds like the AuthCookie was \"valid\" but it is not parsing and verifying the id_token OnAuthentication()?\nAnyway, I'll sync as suggested, thx.\n. ",
    "pinnprophead": "It is about line 829 in oidc.js -- function configureAutoRenewToken(mgr)\n. ",
    "tugberkugurlu": "Also, hooked logging in for ASP.NET 5 sample. Looks something like this now:\n\n. ",
    "zorthgo": "The above error message is thrown regardless or whether the token is valid or not. \n. The sample didn't work for me either. I kept getting the \"No SecurityTokenValidator available\" exception. So I decided to wait until all the bugs get ironed out before I try the sample again. But in the mean time, I wrote a little ApplicationBuilderExtensions for the UseIdentityServerBearerTokenAuthentication().\nApplicationBuilderExtension: \n```\n public static IApplicationBuilder UseIdentityServerBearerTokenAuthentication(this IApplicationBuilder app, IdentityServerBearerTokenAuthenticationOptions options) \n         { \n             app.UseOwin(addToPipeline => \n             { \n                 addToPipeline(next => \n                 { \n                     var builder = new Microsoft.Owin.Builder.AppBuilder(); \n                     builder.Properties[\"builder.DefaultApp\"] = next; \n                     builder.Properties[\"host.AppName\"] = app.ApplicationServices.GetApplicationUniqueIdentifier(); \n                     builder.SetLoggerFactory(new Serilog.Extras.MSOwin.LoggerFactory()); \n                     builder.UseIdentityServerBearerTokenAuthentication(options); \n                 return AppBuilderExtensions.Build<Func<IDictionary<string, object>, Task>>(builder); \n             }); \n         });\n\n\n         return app; \n     }\n\n```\nWhich then allows you to use it like this:\n```\napp.UseIdentityServerBearerTokenAuthentication(new IdentityServerBearerTokenAuthenticationOptions \n             { \n                 Authority = \"...\", \n             ValidationMode = ValidationMode.ValidationEndpoint,\n\n\n             RequiredScopes = new[] { \"api1\" } \n         });\n\n```\n. Awesome!... I'll use this integration package instead. Thanks for the link!... :)\n. ",
    "vincez": "Any updates? I'm running into the same error.\n. ",
    "bfloydd": "+1\n. So using ASP.NET 5 RC1 with IdentityServer3 is a bust until     Feb 2016? Temporary workarounds welcome\nRoadmap: https://github.com/aspnet/Home/wiki/Roadmap\n. ",
    "stabbylorenzo": "Hi Friends, I too see this problem of \"_No SecurityTokenValidator available for token_\" and do not fully understand the suggestions above. I'm using the ASP.NET 5 examples purely and postman to request a token, then adding \"Bearer mytoken\" to Authorization header, but always see the error. All with postman.\nMicrosoft.AspNet.Hosting.Internal.HostingEngine: Information: Request starting HTTP/1.1 GET http://localhost:55814/identity  \nMicrosoft.AspNet.Authentication.JwtBearer.JwtBearerMiddleware: Error: Exception occurred while processing message\nSystem.InvalidOperationException: No SecurityTokenValidator available for token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6ImEzck1VZ01Gdjl0UGNsTGE2eUYzekFrZnF1RSIsImtpZCI6ImEzck1VZ01Gdjl0UGNsTGE2eUYzekFrZnF1RSJ9\n   at Microsoft.AspNet.Authentication.JwtBearer.JwtBearerHandler.<HandleAuthenticateAsync>d__1.MoveNext()\nMicrosoft.AspNet.Hosting.Internal.HostingEngine: Information: Request finished in 0ms 500\nMicrosoft.AspNet.Server.Kestrel: Error: An unhandled exception was thrown by the application.\nSystem.InvalidOperationException: No SecurityTokenValidator available for token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6ImEzck1VZ01Gdjl0UGNsTGE2eUYzekFrZnF1RSIsImtpZCI6ImEzck1VZ01Gdjl0UGNsTGE2eUYzekFrZnF1RSJ9\n   at Microsoft.AspNet.Authentication.JwtBearer.JwtBearerHandler.<HandleAuthenticateAsync>d__1.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n   at Microsoft.AspNet.Authentication.JwtBearer.JwtBearerHandler.<HandleAuthenticateAsync>d__1.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\n   at Microsoft.AspNet.Authentication.AuthenticationHandler`1.<InitializeAsync>d__48.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\n   at Microsoft.AspNet.Authentication.AuthenticationMiddleware`1.<Invoke>d__18.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\n   at Microsoft.AspNet.IISPlatformHandler.IISPlatformHandlerMiddleware.<Invoke>d__8.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\n   at Microsoft.AspNet.Hosting.Internal.RequestServicesContainerMiddleware.<Invoke>d__3.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\n   at Microsoft.AspNet.Hosting.Internal.HostingEngine.<>c__DisplayClass32_0.<<Start>b__0>d.MoveNext()\n--- End of stack trace from previous location where exception was thrown ---\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.GetResult()\n   at Microsoft.AspNet.Server.Kestrel.Http.Frame.<RequestProcessingAsync>d__79.MoveNext()\nThe thread 0x52a4 has exited with code 0 (0x0).\nThe thread 0x1e20 has exited with code 0 (0x0).\nThe tokens are valid. jwt.io can decode them.\nAny help is appreciated\nEDIT:\nIn the end I found that the token had a hidden unwanted character causing the error. \n@leastprivilege You're comment was correct that \"The above error message is thrown regardless or whether the token is valid.\" And of course one can decode only the first bit of the token if desired, and so I wrongly assumed it was valid when it wasn't.\n. ",
    "wrustel": "Thank you for your quickly response but I can't still customice my admin end point, I did something like this:\n```\n app.Map(\"/identity\", id => {              \n            var factory =  new IdentityServerServiceFactory().Configure(connectionString);\n            factory.ViewService = new IdentityServer3.Core.Configuration.Registration(typeof(CustomViewService));\n        id.UseIdentityServer(new IdentityServerOptions {\n            SiteName = \"Demo Identity Server\",\n            IssuerUri = (string)ConfigurationManager.AppSettings[\"options.issuerUri\"],                  \n            Factory = factory,                    \n            SigningCertificate = LoadCertificate(),                    \n        });                \n    });\n\n    app.Map(\"/admin\", adminApp => {\n        var factory = new IdentityManagerServiceFactory().Configure(connectionString);              \n        adminApp.UseIdentityManager(new IdentityManagerOptions() {\n            Factory = factory\n        });\n    });\n\n```\nThe /identity/permissions end point works well and can do my custom view, but there isn't any ViewService for the IdentityManager ServiceFactory doing this uncustomized. Also the admin panel only works for clients CRUD In memory but I didn't find any way to work on entity framework yet.\nKind regards.\n. ",
    "BruceHunter": "Client Setup.\n```\n                new Client // Just the Default - Only for LocalHost Sample Only\n                {                  \n                    ClientName = \"Sample\",\n                    Enabled = true, \n                    ClientId = \"SampleClientImplicit\",\n                    Flow = Flows.Implicit,\n                    AllowedScopes = new List\n                    {    \n                        Constants.StandardScopes.AllClaims,\n                        Constants.StandardScopes.Address,\n                        Constants.StandardScopes.OpenId,\n                        Constants.StandardScopes.Roles,\n                        Constants.StandardScopes.Profile,\n                        Constants.StandardScopes.Email,\n                        Constants.StandardScopes.OfflineAccess,\n                        \"sample\"\n                    },\n                RequireConsent = false,\n                RedirectUris = new List<string> \n                {\n                    \"https://localhost:44300/index.html\",  \n                },\n\n                PostLogoutRedirectUris = new List<string> \n                {\n                    \"https://localhost:44300/index.html\", \n                },\n                AllowedCorsOrigins = new List<string>{\n                    \"https://localhost:44300\"\n                },\n                //LogoutUri = \"https://localhost:44300/index.html\",\n                IdentityTokenLifetime = IdentityTokenLifetime,\n                AccessTokenLifetime = AccessTokenLifetime,\n                AccessTokenType = AccessTokenType.Reference\n            },\n\n```\nAuthority Server Setup\n```\n            app.Map(\"/core\", core =>\n            {\n                var idSvrFactory = new IdentityServerServiceFactory();\n                idSvrFactory.ConfigureUserService(ConnectionStringName);\n                idSvrFactory.UseInMemoryClients(Clients.Get()); \n                idSvrFactory.UseInMemoryScopes(Scopes.Get()); \n                //idSvrFactory.CorsPolicyService = new IdentityServer3.Core.Configuration.Registration(resolver => new DefaultCorsPolicyService() { AllowAll = true, AllowedOrigins = new []{ \"https://localhost:44300\"}});\n            idSvrFactory.CorsPolicyService = new IdentityServer3.Core.Configuration.Registration<ICorsPolicyService>(new InMemoryCorsPolicyService(Clients.Get()));\n\n            idSvrFactory.ConfigureClientStoreCache();\n            idSvrFactory.ConfigureScopeStoreCache();\n            idSvrFactory.ConfigureUserServiceCache();\n\n            var options = new IdentityServerOptions\n            {\n                SiteName = \"Authority\", \n                SigningCertificate = Certificate.Get(),\n                Endpoints = new EndpointOptions()\n                {\n                    EnableCspReportEndpoint = true,\n                    EnableAuthorizeEndpoint = true,\n                    EnableTokenRevocationEndpoint = true,\n                    EnableEndSessionEndpoint = true,\n                    EnableCheckSessionEndpoint = true,\n                    EnableUserInfoEndpoint = true,\n                    EnableDiscoveryEndpoint = true,\n                    EnableTokenEndpoint = true,\n                    EnableIdentityTokenValidationEndpoint = true,\n                    EnableClientPermissionsEndpoint = true,\n                    EnableAccessTokenValidationEndpoint = true,\n                    EnableIntrospectionEndpoint = true\n                },\n                Factory = idSvrFactory,\n                RequireSsl = true,\n                SecondarySigningCertificate = null\n\n            };\n\n            core.UseIdentityServer(options);\n        });\n\n```\n. If I add this to the Authority web.config, then it stops the error.\n<httpProtocol>\n  <customHeaders>\n    <add name=\"Access-Control-Allow-Origin\" value=\"*\" />\n    <add name=\"Access-Control-Allow-Methods\" value=\"GET, POST, OPTIONS, PUT, DELETE\" />\n  </customHeaders>\n</httpProtocol>\n. ",
    "neridonk": "ok i resolved this issue by changeing\nbefore :\n c:\\users\\Username\\ .dnx\\packages\\Owin\\1.0\\Owin.1.0.nupkg.sha512\nafter:\n c:\\users\\Username\\ .dnx\\packages\\Owin\\1.0.0\\Owin.1.0.0.nupkg.sha512\nmy OWIN package name was 1.0 and not 1.0.0, strange\n. ",
    "kbrekke": "I have intercepted the redirect to the IdentityServer, removing the response_mode, which resulted in a get redirect to my client, with the authorization code in the querystring. Still, the AuthorizationCodeReceived notification is not triggered.\n. ",
    "lewis-almeyda": "I had the same idea but I guess I'm looking to validate the concept, with my app, I would create an MVC page(regardless of the MVC version) used for the login in the user against an private api + identity server, then most of the client interaction with the resource api(serving the application data) would be done via angular http calls, that would need to include the token. I've seen examples of that token included in browsers local storage.\nIs this a good security model? How can I find holes in it? What about CSRF attacks?\nThanks in advance\n. ",
    "stombeur": "you should also look at oidc-token-manager https://www.npmjs.com/package/oidc-token-manager\nalso by @brockallen \nI changed my implementation to login via angular instead of MVC. It makes it easier to also check for authentication (is user logged in) and check claims in angular.\n. ",
    "jipock": "PEBCAK issue. This is resolved. \n. ",
    "mithun-daa": "But my ASP.Net application works just fine? Also, how and where do I check the logs? Which repo are you talking about? If this is not the best place to ask Qs i can ask on stackoverflow.\n. Do i need to turn on the logs? How do i see the IdSrv logs?\n. :+1: \nHere is what the log spat out:\niisexpress.exe Information: 0 : 2015-12-24 09:02:44.490 -06:00 [Information] Start authorize request\niisexpress.exe Information: 0 : 2015-12-24 09:02:44.494 -06:00 [Information] Start authorize request protocol validation\niisexpress.exe Error: 0 : 2015-12-24 09:02:44.522 -06:00 [Error] \"Nonce required for implicit and hybrid flow with openid scope\"\n \"{\n  \\\"ClientId\\\": \\\"mvc\\\",\n  \\\"ClientName\\\": \\\"MVC Client\\\",\n  \\\"RedirectUri\\\": \\\"http://localhost:3000/callback\\\",\n  \\\"AllowedRedirectUris\\\": [\n    \\\"http://localhost:3000/callback\\\"\n  ],\n  \\\"SubjectId\\\": \\\"unknown\\\",\n  \\\"ResponseType\\\": \\\"id_token\\\",\n  \\\"ResponseMode\\\": \\\"fragment\\\",\n  \\\"Flow\\\": \\\"Implicit\\\",\n  \\\"RequestedScopes\\\": \\\"openid\\\",\n  \\\"Raw\\\": {\n    \\\"response_type\\\": \\\"id_token\\\",\n    \\\"client_id\\\": \\\"mvc\\\",\n    \\\"redirect_uri\\\": \\\"http://localhost:3000/callback\\\",\n    \\\"scope\\\": \\\"openid\\\"\n  }\n}\"\niisexpress.exe Information: 0 : 2015-12-24 09:02:44.527 -06:00 [Information] {\n  \"Category\": \"Endpoints\",\n  \"Name\": \"Endpoint failure\",\n  \"EventType\": \"Failure\",\n  \"Id\": 3001,\n  \"Message\": \"invalid_request\",\n  \"Details\": {\n    \"EndpointName\": \"authorize\"\n  },\n  \"Context\": {\n    \"ActivityId\": \"00000000-0000-0000-e502-0080060000ff\",\n    \"TimeStamp\": \"2015-12-24T15:02:44.5252844+00:00\",\n    \"ProcessId\": 18980,\n    \"MachineName\": \"MPATEL-787\",\n    \"RemoteIpAddress\": \"::1\"\n  }\n}\niisexpress.exe Information: 0 : 2015-12-24 09:02:44.528 -06:00 [Information] End authorize request\niisexpress.exe Information: 0 : 2015-12-24 09:02:44.532 -06:00 [Information] Redirecting to: http://localhost:3000/callback#error=invalid_request\n. Sweet!!!! that did it. Thank you!\n. ",
    "farzad99": "OK, thanks\n. Thanks Brock for your reply. \nJust to double check I started the AspNetIdentity sample and looked at the IIS Express icon. It displayed the \"webHost site\" was running and it had the following urls:\nhttp://localhost:12406/core/\nhttps://localhost:44333/core/\nhttp://localhost:12406/\nhttps://localhost:44333/\nThey are the ports for the AspNetIdentity sample. Next I ran just the \"MVC FormPost Client\" in the \"Clients\" sample. IIS Express showed another site \"MVC FormPost Client site\" at the following url:\nhttp://localhost:11716/\nI clicked the SignIn link which took me to the login page at:\nhttps://localhost:44333/core/login?signin=1d3fd27eef352dd13690ff52090a5427\nI tried the logins for the users I had created and they all failed. I tried the userName \"bob\" and password \"bob\" which isn't in the database and it was successful. Then I clicked the Logout link which took me to the page at the following url:\nhttps://localhost:44333/core/logout?id=651b86f588f1f4756e4a8ecdfc354702\nI looked at the log file \"c:\\logs\\IdentityServer3.AspNetIdentity.log\". Here's what it says:\niisexpress.exe Information: 0 : [Owin.IdentityManagerAppBuilderExtensions]: 12/24/2015 10:14:25 PM -- Starting IdentityManager configuration\niisexpress.exe Warning: 0 : 2015-12-24 17:14:26.484 -05:00 [Warning] AuthorizationCodeStore not configured - falling back to InMemory\niisexpress.exe Warning: 0 : 2015-12-24 17:14:26.501 -05:00 [Warning] TokenHandleStore not configured - falling back to InMemory\niisexpress.exe Warning: 0 : 2015-12-24 17:14:26.501 -05:00 [Warning] ConsentStore not configured - falling back to InMemory\niisexpress.exe Warning: 0 : 2015-12-24 17:14:26.501 -05:00 [Warning] RefreshTokenStore not configured - falling back to InMemory\nI don't think the log file warnings have to do with the issue that I'm experiencing. \nIn summary created users don't work but the user name \"bob\" password \"bob\" which is definitely not in the database works. \n. My samples zip file wasn't the latest (a few weeks old). I downloaded the latest samples zip file and that worked.\n. Thank you for your reply, Brock. The cause of it is not what you mentioned. So in my case, the login page is displayed by the IdentityServer and I enter valid user name and password. But I get \"Error: Invalid username or password\". But the code never reaches the \"AuthenticateLocalAsync\" method that's in the  \"IdentityServer3.AspNetIdentity.cs\" file. Are there any circumstances that a login is stated as invalid by the IdentityServer3 without even calling the \"AuthenticateLocalAsync\" method. I have a breakpoint on that function that's never hit.\n. OK, thanks. I'll do that and if I find out anything I'll post it here.\n. I figured out what was wrong. When you use the same port in IIS Express for different projects then IIS Express gets confused. All the IdSvr3 hosts use port 44333. So I had used a few of IdSvr3 server projects with the same port. Even though, I had only one instance of the IdSver3 running in IIS Express the code was not for the correct project. Just change the port for different IdSvr3 and that fixes the issue.\n. Good, thanks\n. OK, thank you. I have to look into a partial login. As soon as I figure that out I'll close this issue.\n. Thank you @brockallen. \nIn the Startup class of the WebHost project of the IdSvr3 \"AspNetIdentity_2fa\", I can place the following line:\napp.UseTwoFactorRememberBrowserCookie(DefaultAuthenticationTypes.TwoFactorRememberBrowserCookie);\nwhich of course places the middleware in the pipeline. In the Microsoft code for local user account authentication they set the cookie using:\nvar result = await SignInManager.TwoFactorSignInAsync(model.Provider, model.Code, isPersistent:  model.RememberMe, rememberBrowser: model.RememberBrowser);\nso I think something like that would interfere with the cookies that IdSvr3 generates or the IdSvr3 operation in general.\nSo could you please shed some light on this? Is there another way to set that cookie?\n. OK, thank you.\n. OK, thank you\n. OK, thank you.\n. OK. Thank you. \n. OK, thank you.\n. Thank you for your response. Right after the login screen is displayed I wasn't able to find any information that would identify the client. I ended up using a cookie to store the client.\n. I was able to find the ClientId in the LocalAuthenticationContext class:\nLocalAuthenticationContext.SignInMessage.ClientId\nThank you for your help.\n. ",
    "jimnorth55": "I was looking for some guidance in translating the OWIN sample you\nreferenced to ASP.Net 5 ( pardon... ASP.Net Core 1.0).  Perhaps all the\nrequired pieces are not available as yet?\nOn Wednesday, January 20, 2016, Brock Allen notifications@github.com\nwrote:\n\nThis is a MVC hybrid sample client:\nhttps://github.com/IdentityServer/IdentityServer3.Samples/tree/master/source/Clients/MVC%20OWIN%20Client%20%28Hybrid%29\nIs this not what you're looking for?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/IdentityServer/IdentityServer3.Samples/issues/212#issuecomment-173231800\n.\n. \n",
    "Junicus": "I think I found the solution but would like thoughts on it.  I had to change the line where it reads the certificate like so\nSigningCertificate = new X509Certificate2(certFile, \"pass\", X509KeyStorageFlags.MachineKeySet)\nApparently the IIS app pool in azure doesn't have access to the user store, that is the default location where the certificate is located, the machine store is generic to the machine I guess.\nDoes this all sound correct?\nThanks Junicus\n. Thanks, I will keep that in mind before I go to production, right now I have the site in the free tier for testing and uploading certificates is not an option.  Also, thanks for the link, that will save me time and effort looking for it later.\n. ",
    "avmp2208": "Hi @Junicus , I know this is an old issue but right I'm facing the same, could you share your startup file and if possible the method that load the certificate (this is the one I care about) plz???\nThanks. Hello Brock I hope you are well, I have the same question, the problem is, I have the start up class running Ok, once the app start it triggers the connfiguration method inside the start up class and in my web.config I have this to protect all my pages, So when I try to access to a basic page, a Default.aspx page the app tell efectively access denied but It doesn\u00b4t redirect to the STS,\nweb.config\n<system.web>\n        <compilation debug=\"true\" targetFramework=\"4.5\" />\n        <httpRuntime targetFramework=\"4.5\" />\n        <authorization>\n            <deny users=\"?\" />\n        </authorization>\n    </system.web>\nAnd this my Start up class\n`public void Configuration(IAppBuilder app)\n        {\n            // For more information on how to configure your application, visit http://go.microsoft.com/fwlink/?LinkID=316888\n            JwtSecurityTokenHandler.InboundClaimTypeMap = new Dictionary();\n```\n        app.UseCookieAuthentication(new CookieAuthenticationOptions\n        {\n            AuthenticationType = \"Cookies\",\n            //LoginPath = new PathString(ConstansValues.BaseAddress + @\"permissions/\")\n        });\n    app.UseOpenIdConnectAuthentication(new OpenIdConnectAuthenticationOptions\n    {\n        ClientId = \"Prueba\",\n        Authority = ConstansValues.BaseAddress,\n        RedirectUri = ConstansValues.UrlClient,\n        PostLogoutRedirectUri = ConstansValues.UrlClient,\n        ResponseType = \"id_token token\",\n        Scope = \"openid email write\",\n\n        SignInAsAuthenticationType = \"Cookies\",\n        Notifications = new OpenIdConnectAuthenticationNotifications\n        {\n            SecurityTokenValidated = async n =>\n            {\n\n                var token = n.ProtocolMessage.AccessToken;\n                // persist access token in cookie\n                if (!string.IsNullOrEmpty(token))\n                {\n                    n.AuthenticationTicket.Identity.AddClaim(\n                        new Claim(\"access_token\", token));\n                }\n                var nid = new ClaimsIdentity();\n                nid.AddClaim(new Claim(@\"id_token\", n.ProtocolMessage.IdToken));\n            },\n            RedirectToIdentityProvider = n =>\n            {\n                // if signing out, add the id_token_hint\n                if (n.ProtocolMessage.RequestType == OpenIdConnectRequestType.LogoutRequest)\n                {\n                    var idTokenHint = n.OwinContext.Authentication.User.FindFirst(\"id_token\");\n                    if (idTokenHint != null)\n                        n.ProtocolMessage.IdTokenHint = idTokenHint.Value;\n                }\n                return Task.FromResult(0);\n            }\n        },\n    });\n}`\n\n```\nI'm really sure that I'm missing something but I don\u00b4t know what.\nAnd my Default.aspx page \n`\npublic partial class Default : System.Web.UI.Page\n    {\n        protected void Page_Load(object sender, EventArgs e)\n        {\n}\n}`\n. Thanks Brock I'll appreciate that, really thanks.\n. ",
    "aseemflowingly": "Yes, apparently, the URL was pointing to \"core/token\" instead of \"connect/token\" for get user token.\n. ",
    "yyarp": "Yes, it's 2 minutes, minimum for app to load and to refresh the token. It's this short for me to see if it's actually being refreshed.\n. I know, that's why it's 2 minutes, for development purposes only (In production it'll be an hour). The app has one minute to load, though average load time is around 8-10 seconds. And after that is the one minute before expiring to refresh.\n. The short lifetime is not an issue, tried this with other values, like 10 minutes or so.\nIn chrome's developer tools I saw that the authorized endpoint was called and after that the page was refreshed, few times. Then there was hit in check_session_frame, params were passed, but it was still refreshing.\n. Also I see that I didn't form the questions properly, sorry for that. \nAre these causes probable issues? \nCan I fix this using these two proposed fixes? \nOr is there something I should check or do to try and fix this issue?\nWith the same configuration the JavaScript Implicit Client from samples is working fine and as expected. I'm also using my IdentityServer, so I really don't understand why my SPA app can't work properly.\n. Ok, i have some additional info about that issue:\nI've searched and disabled/enabled scripts to see when it's going to be refreshed. It's after authorize function where it's getting new instance of token manager. I think it's the problem with response from IdentityServer, but I don't get it why the response is wrong.\nLogs:\n2016-01-22 09:56:31.5817|INFO|IdentityServer3.Core.Endpoints.AuthorizeEndpointController|Start authorize request\n2016-01-22 09:56:31.5927|INFO|IdentityServer3.Core.Validation.AuthorizeRequestValidator|Start authorize request protocol validation\n2016-01-22 09:56:31.7578|INFO|IdentityServer3.Core.Validation.AuthorizeRequestValidator|Authorize request validation success\n {\n  \"ClientId\": \"Example\",\n  \"ClientName\": \"Example\",\n  \"RedirectUri\": \"https://localhost/Example/\",\n  \"AllowedRedirectUris\": [\n    \"https://localhost:44300/\",\n    \"https://localhost/Example/\",\n    \"http://localhost/Example/\",\n    \"http://localhost/Example/silent_renew.html\",\n    \"https://localhost/Example/silent_renew.html\"\n  ],\n  \"SubjectId\": \"Example\",\n  \"ResponseType\": \"id_token token\",\n  \"ResponseMode\": \"fragment\",\n  \"Flow\": \"Implicit\",\n  \"RequestedScopes\": \"openid profile read write\",\n  \"State\": \"889734823112493\",\n  \"Nonce\": \"8388855333177695\",\n  \"SessionId\": \"fe4750cc539c8259af9f4a3963adddea\",\n  \"Raw\": {\n    \"state\": \"889734823112493\",\n    \"nonce\": \"8388855333177695\",\n    \"client_id\": \"Example\",\n    \"redirect_uri\": \"https://localhost/Example/\",\n    \"response_type\": \"id_token token\",\n    \"scope\": \"openid profile read write\"\n  }\n}\n2016-01-22 09:56:31.7623|INFO|IdentityServer3.Core.ResponseHandling.AuthorizeResponseGenerator|Creating Implicit Flow response.\n2016-01-22 09:56:31.7878|INFO|IdentityServer3.Core.Services.Default.DefaultClaimsProvider|Getting claims for identity token for subject: Example\n2016-01-22 09:56:31.9097|INFO|IdentityServer3.Core.Endpoints.AuthorizeEndpointController|End authorize request\n2016-01-22 09:56:31.9097|INFO|IdentityServer3.Core.Results.AuthorizeRedirectResult|Redirecting to: https://localhost/Example/\n2016-01-22 09:56:36.2277|INFO|IdentityServer3.Core.Configuration.Hosting.CorsPolicyProvider|CORS request made for path: /.well-known/openid-configuration from origin: https://localhost\n2016-01-22 09:56:36.2487|INFO|IdentityServer3.Core.Services.InMemory.InMemoryCorsPolicyService|Client list checked and origin: https://localhost is allowed\n2016-01-22 09:56:36.2487|INFO|IdentityServer3.Core.Configuration.Hosting.CorsPolicyProvider|CorsPolicyService allowed origin\n2016-01-22 09:56:36.2758|INFO|IdentityServer3.Core.Endpoints.DiscoveryEndpointController|Start discovery request\n2016-01-22 09:56:36.3363|INFO|IdentityServer3.Core.Configuration.Hosting.CorsPolicyProvider|CORS request made for path: /.well-known/openid-configuration from origin: https://localhost\n2016-01-22 09:56:36.3683|INFO|IdentityServer3.Core.Services.InMemory.InMemoryCorsPolicyService|Client list checked and origin: https://localhost is allowed\n2016-01-22 09:56:36.3763|INFO|IdentityServer3.Core.Configuration.Hosting.CorsPolicyProvider|CorsPolicyService allowed origin\n2016-01-22 09:56:36.3908|INFO|IdentityServer3.Core.Endpoints.DiscoveryEndpointController|Start discovery request\n2016-01-22 09:56:36.4999|INFO|IdentityServer3.Core.Configuration.Hosting.CorsPolicyProvider|CORS request made for path: /.well-known/openid-configuration from origin: https://localhost\n2016-01-22 09:56:36.4999|INFO|IdentityServer3.Core.Services.InMemory.InMemoryCorsPolicyService|Client list checked and origin: https://localhost is allowed\n2016-01-22 09:56:36.5259|INFO|IdentityServer3.Core.Configuration.Hosting.CorsPolicyProvider|CorsPolicyService allowed origin\n2016-01-22 09:56:36.5390|INFO|IdentityServer3.Core.Endpoints.DiscoveryEndpointController|Start discovery request\n2016-01-22 09:56:37.3085|INFO|IdentityServer3.Core.Configuration.Hosting.CorsPolicyProvider|CORS request made for path: /.well-known/jwks from origin: https://localhost\n2016-01-22 09:56:37.3085|INFO|IdentityServer3.Core.Services.InMemory.InMemoryCorsPolicyService|Client list checked and origin: https://localhost is allowed\n2016-01-22 09:56:37.3330|INFO|IdentityServer3.Core.Configuration.Hosting.CorsPolicyProvider|CorsPolicyService allowed origin\n2016-01-22 09:56:37.3420|INFO|IdentityServer3.Core.Endpoints.DiscoveryEndpointController|Start key discovery request\n2016-01-22 09:56:37.5487|INFO|IdentityServer3.Core.Endpoints.AuthorizeEndpointController|Start authorize request\n2016-01-22 09:56:37.5487|INFO|IdentityServer3.Core.Validation.AuthorizeRequestValidator|Start authorize request protocol validation\n2016-01-22 09:56:37.8304|INFO|IdentityServer3.Core.Configuration.Hosting.CorsPolicyProvider|CORS request made for path: /connect/userinfo from origin: https://localhost\n2016-01-22 09:56:37.8694|INFO|IdentityServer3.Core.Services.InMemory.InMemoryCorsPolicyService|Client list checked and origin: https://localhost is allowed\n2016-01-22 09:56:37.8894|INFO|IdentityServer3.Core.Configuration.Hosting.CorsPolicyProvider|CorsPolicyService allowed origin\n2016-01-22 09:56:37.8894|INFO|IdentityServer3.Core.Validation.AuthorizeRequestValidator|Authorize request validation success\n {\n  \"ClientId\": \"Example\",\n  \"ClientName\": \"Example\",\n  \"RedirectUri\": \"https://localhost/Example/\",\n  \"AllowedRedirectUris\": [\n    \"https://localhost:44300/\",\n    \"https://localhost/Example/\",\n    \"http://localhost/Example/\",\n    \"http://localhost/Example/silent_renew.html\",\n    \"https://localhost/Example/silent_renew.html\"\n  ],\n  \"SubjectId\": \"Example\",\n  \"ResponseType\": \"id_token token\",\n  \"ResponseMode\": \"fragment\",\n  \"Flow\": \"Implicit\",\n  \"RequestedScopes\": \"openid profile read write\",\n  \"State\": \"2751618265441034\",\n  \"Nonce\": \"38602604375085754\",\n  \"SessionId\": \"fe4750cc539c8259af9f4a3963adddea\",\n  \"Raw\": {\n    \"state\": \"2751618265441034\",\n    \"nonce\": \"38602604375085754\",\n    \"client_id\": \"Example\",\n    \"redirect_uri\": \"https://localhost/Example/\",\n    \"response_type\": \"id_token token\",\n    \"scope\": \"openid profile read write\"\n  }\n}\n2016-01-22 09:56:37.9364|INFO|IdentityServer3.Core.ResponseHandling.AuthorizeResponseGenerator|Creating Implicit Flow response.\n2016-01-22 09:56:37.9975|INFO|IdentityServer3.Core.Services.Default.DefaultClaimsProvider|Getting claims for identity token for subject: Example\n2016-01-22 09:56:38.1811|INFO|IdentityServer3.Core.Endpoints.AuthorizeEndpointController|End authorize request\n2016-01-22 09:56:38.1896|INFO|IdentityServer3.Core.Results.AuthorizeRedirectResult|Redirecting to: https://localhost/Example/\n2016-01-22 09:56:39.7668|INFO|IdentityServer3.Core.Configuration.Hosting.CorsPolicyProvider|CORS request made for path: /connect/userinfo from origin: https://localhost\n2016-01-22 09:56:39.7838|INFO|IdentityServer3.Core.Services.InMemory.InMemoryCorsPolicyService|Client list checked and origin: https://localhost is allowed\n2016-01-22 09:56:39.7993|INFO|IdentityServer3.Core.Configuration.Hosting.CorsPolicyProvider|CorsPolicyService allowed origin\n2016-01-22 09:56:39.8313|INFO|IdentityServer3.Core.Endpoints.UserInfoEndpointController|Start userinfo request\n2016-01-22 09:56:39.8503|INFO|IdentityServer3.Core.Endpoints.UserInfoEndpointController|Token found: AuthorizationHeader\n2016-01-22 09:56:39.8558|INFO|IdentityServer3.Core.Validation.TokenValidator|Start access token validation\n2016-01-22 09:56:40.9671|INFO|IdentityServer3.Core.Validation.TokenValidator|Token validation success\n{\n  \"ValidateLifetime\": true,\n  \"AccessTokenType\": \"Jwt\",\n  \"ExpectedScope\": \"openid\",\n  \"Claims\": {\n    \"client_id\": \"Example\",\n    \"scope\": [\n      \"openid\",\n      \"profile\",\n      \"read\",\n      \"write\"\n    ],\n    \"sub\": \"Example\",\n    \"amr\": \"custom\",\n    \"auth_time\": \"1453448167\",\n    \"idp\": \"idsrv\",\n    \"iss\": \"https://localhost:44333/core\",\n    \"aud\": \"https://localhost:44333/core/resources\",\n    \"exp\": \"1453453591\",\n    \"nbf\": \"1453452991\"\n  }\n}\n2016-01-22 09:56:40.9811|INFO|IdentityServer3.Core.ResponseHandling.UserInfoResponseGenerator|Creating userinfo response\n2016-01-22 09:56:40.9971|INFO|IdentityServer3.Core.ResponseHandling.UserInfoResponseGenerator|Scopes in access token: openid profile read write\n2016-01-22 09:56:40.9971|INFO|IdentityServer3.Core.ResponseHandling.UserInfoResponseGenerator|Requested claim types: sub user_id user_name name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at\n2016-01-22 09:56:41.0332|INFO|IdentityServer3.Core.ResponseHandling.UserInfoResponseGenerator|Profile service returned to the following claim types: \n2016-01-22 09:56:41.0482|INFO|IdentityServer3.Core.Endpoints.UserInfoEndpointController|End userinfo request\n2016-01-22 09:56:41.0662|INFO|IdentityServer3.Core.Results.UserInfoResult|Returning userinfo response.\n. Yes, it's still happening. It's not token lifetime issue.\nI'll try to reproduce the error in an example and give you the code.\n. ",
    "seburgi": "I would also be very interested in a mono sample.\n. ",
    "sPhinX-LHJ": "Sorry for the late response.\nToday i re-create the project, now the project worked after solved one 404 error.\nI found that app.map function not point to the map path when identityserver is hosted in sperated project from mvc project.\nfor example, when I UseIdentityServer like below, the identityserver still runing on https://localhost:44300/, not https://localhost:44300/identity.\nIs this a issue? I am newbie at mvc, also plz forgive my poor english.\nBTW: I know the meaning of your avatar pic, because chinese is my mother language, haha.\n```\n        app.Map(\"/identity\", idsrvApp =>\n        {\n            app.UseIdentityServer(new IdentityServerOptions\n            {\n                SiteName = \"Embedded IdentityServer\",\n                SigningCertificate = LoadCertificate(),\n            Factory = new IdentityServerServiceFactory()\n                            .UseInMemoryUsers(Users.Get())\n                            .UseInMemoryClients(Clients.Get())\n                            .UseInMemoryScopes(StandardScopes.All)\n        });\n    });\n\n```\n. ",
    "pinale": "The redirection to the idetityserver in case of a not authenticated request to a protected page is made automatically by the  RedirectUri property of the app.UseOpenIdConnectAuthentication() extension method? No other changes are needed to the webform client?\nthanks a lot!\n= \"https://localhost:44300/\n----Messaggio originale----\nDa: Brock Allen notifications@github.com\nData: 08/02/2016 15.10\nA: \"IdentityServer/IdentityServer3.Samples\"IdentityServer3.Samples@noreply.github.com\nCc: \"pinale\"cicciottino@libero.it\nOgg: Re: [IdentityServer3.Samples] webform example missing (#230)\nThe webforms sample would be the same as the MVC ones, except instead of controllers you have aspx pages. The Startup code would be the same and that's the most important part.\n\u2014\nReply to this email directly or view it on GitHub.\n. With the same configuration of an mvc application, a webform application doesn't seem to redirect to the IdentityServer in case of \"http 401 not authorized\" response.\nI've posted the question here: http://stackoverflow.com/questions/35338035/identityserver3-authentication-on-asp-net-webform \n. It would be great!, thanks\n. ",
    "techdetail": "@brockallen : Could you please guide me to the url of Dev branch which you were referring, i'm exactly running into same issue.\n. I figured out Thank you, https://github.com/IdentityServer/IdentityServer3.Samples/tree/master/source/Clients/WebFormsClient\n. ",
    "snothub": "Answer: I'm missing EnableLocalLogin that misteriously got set to false. My bad\n. ",
    "naveenkumarreddy": "I am also getting the same error, is there any solution to resolve it?\n. I am getting clientId null always from LocalAuthenticationContext.SignInMessage.ClientId\n. actually I am having two JS projects with implicit client flow and I am using Windows Authentication with two AD groups. here I want the Client Id at the time login so that I can get the AD path according to the client Id\n. I am not using OIDC client , I just configured WS-Federation for Windows Authentication\n. thanks brokallen, I'll check if there is an open issue on this if not I'll create new issue.\n. ",
    "venkatrv": "some of files might have been corrupted. Just try to resetup the\nIdentityServer.\nIn my case it worked when tried setting up this from scratch.\nOn Thu, Jul 14, 2016 at 1:52 PM, naveenkumarreddy notifications@github.com\nwrote:\n\nI am also getting the same error, is there any solution to resolve it?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/IdentityServer/IdentityServer3.Samples/issues/232#issuecomment-232597981,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/AMo-U4zaV2cs2L-7cv8iBoUwDFHOBHViks5qVfHJgaJpZM4HaRdH\n.\n\n\nRegards,\nVenkat\n. ",
    "PhilOchu": "Had the same error message earlier today and in our case the problem was we entered a wrong url for WsFederationAuthenticationOptions.MetadataAddress - it took a while to figure out so hope this helps someone.. ",
    "robmen": "So it sounds like Option 2 is the way to go and if I don't want to worry about browser support I can standardize on sending the token via a hidden input field. If I got any of that wrong feel free to correct me. If I got it right then feel free to close. :smile_cat: \nThank you for your insight.\n. ",
    "dkaminski": "Ok sounds good; I realize I should have opened an issue for discussion before submitting that giant PR. I'lI take a look at the changes you guys made. \n. ",
    "ChrisSimmons": "Closing this PR as it is is eclipsed by 50710c30873bc8bfaeb8221b7475f7a9982444ef.\n. No worries at all!\n. ",
    "mohanr": "These are the two methods I see.\nMethod 1. I see the IdentityServer3 source code being built as part of a project and deployed.\n(e.g) using Thinktecture.IdentityServer.Core.Services;\nMethod 2. I use the nuget packages directly.\n(e.g) If I use using IdentityServer3.Core.Services;\nIUserService seems to be different in these two namesspaces.\nIs there a difference between these two modes of deployment ?\n. Can I ask ? Which of these interfaces should I use ? IdentityServer3 is from nuget.\n`\nnamespace IdentityServer3.Core.Services\n                 {\n                     //\n                   // Summary:\n                  //     This interface allows IdentityServer to connect to your user and profile store.\n                  public interface IUserService\n                    {\n                           //\n    // Summary:\n    //     This method gets called when the user uses an external identity provider to authenticate.\n    //     The user's identity from the external provider is passed via the `externalUser`\n    //     parameter which contains the provider identifier, the provider's identifier for\n    //     the user, and the claims from the provider for the external user.\n    //\n    // Parameters:\n    //   context:\n    //     The context.\n    Task AuthenticateExternalAsync(ExternalAuthenticationContext context);\n    //\n    // Summary:\n    //     This method gets called for local authentication (whenever the user uses the\n    //     username and password dialog).\n    //\n    // Parameters:\n    //   context:\n    //     The context.\n    Task AuthenticateLocalAsync(LocalAuthenticationContext context);\n    //\n    // Summary:\n    //     This method is called whenever claims about the user are requested (e.g. during\n    //     token creation or via the userinfo endpoint)\n    //\n    // Parameters:\n    //   context:\n    //     The context.\n    Task GetProfileDataAsync(ProfileDataRequestContext context);\n    //\n    // Summary:\n    //     This method gets called whenever identity server needs to determine if the user\n    //     is valid or active (e.g. if the user's account has been deactivated since they\n    //     logged in). (e.g. during token issuance or validation).\n    //\n    // Parameters:\n    //   context:\n    //     The context.\n    Task IsActiveAsync(IsActiveContext context);\n    //\n    // Summary:\n    //     This method is called prior to the user being issued a login cookie for IdentityServer.\n    //\n    // Parameters:\n    //   context:\n    //     The context.\n    Task PostAuthenticateAsync(PostAuthenticationContext context);\n    //\n    // Summary:\n    //     This method gets called before the login page is shown. This allows you to determine\n    //     if the user should be authenticated by some out of band mechanism (e.g. client\n    //     certificates or trusted headers).\n    //\n    // Parameters:\n    //   context:\n    //     The context.\n    Task PreAuthenticateAsync(PreAuthenticationContext context);\n    //\n    // Summary:\n    //     This method gets called when the user signs out.\n    //\n    // Parameters:\n    //   context:\n    //     The context.\n    Task SignOutAsync(SignOutContext context);\n}\n}\n`\n`\nnamespace Thinktecture.IdentityServer.Core.Services\n                 {\n                             public interface IUserService\n                             {\n                             Task<AuthenticateResult> AuthenticateExternalAsync(ExternalIdentity externalUser, SignInMessage message);\n                            Task<AuthenticateResult> AuthenticateLocalAsync(string username, string password, SignInMessage message);\n                            Task<IEnumerable<Claim>> GetProfileDataAsync(ClaimsPrincipal subject, IEnumerable<string> requestedClaimTypes = null);\n                            Task<bool> IsActiveAsync(ClaimsPrincipal subject);\n                            Task<AuthenticateResult> PreAuthenticateAsync(SignInMessage message);\n                            Task SignOutAsync(ClaimsPrincipal subject);\n}\n}\n`\nThe return type of one of the methods has changed from\n`\nTask<bool> IsActiveAsync(ClaimsPrincipal subject);\nto\npublic Task IsActiveAsync(IsActiveContext context)\n`\nWe were returning boolean earlier.\n. I believe we need to do this.\n``\n public Task IsActiveAsync(IsActiveContext context)\n{\n    context.IsActive = true;\n    return Task.FromResult(0);\n}\n\n```\n`\n`\npublic async Task IsActiveAsync(IsActiveContext context)\n    {\n        context.IsActive = true;\n    }\n`\n. ",
    "arunmurthy": "Thanks @brockallen. I defined the claim in both scopes. It doesn't work for me. I must be missing something obvious. My custom scope declaration below...\nnew Scope\n{\n    Name = \"xyzinfo\",\n    Description = \"xyz information\",\n    Type = ScopeType.Identity,\n    Claims = new List\n    {\n        new ScopeClaim(\"xyzName\", true)\n    }\n},\nnew Scope\n{\n    Name = \"xyzinfo\",\n    Description = \"xyz information\",\n    Type = ScopeType.Resource,\n    Claims = new List\n    {\n        new ScopeClaim(\"xyzName\")\n    }\n}\nAnd the results:\n1. When I request both id_token and access token, I get \"xyzName\" claim only in id_token and not in access token\n2. When I request only id_token I get \"xyzName\" claim in the id_token\n3. When I request only token I get an \"invalid_scope\" exception from OpenIdConnect protocol\nBasically at no point I am able to get the claim in access token.\n. Thanks. It is getting called only once for id_token. I must be missing something in the user service implementation. I will check. Thanks for the quick response. Appreciate it.\n. I still couldn't get this to work. Want to make sure again that I can declare a scope in both identity and resource scopes. For example, scope xyzinfo with claim xyzName was declared as both resource and identity scope (with alwaysInclude set to true for identity scope). When I do this, depending on the order I declare the scope I get an invalid_scope error when I request either access token or id_token.\nFor example, if I declare xyzinfo as identity scope first and then as resource scope and in my request if my response type is just \"token\", I get an invalid_scope. And the same is true vice versa...if I declare xyzinfo as resource scope first and then as identity scope and in my request if my response type is \"openid profile xyzinfo\", I get an invalid_scope.\n. Got it. Thanks! Let me know if you want me to close this \"issue\".\n. ",
    "adkendall": "Apologies - I should have replied sooner to this. Thanks for the response - I can confirm that I tried this on a different machine and got the sample to work immediately - still unclear as to what the issue is/was.\n. ",
    "JohnDoeKyrgyz": "I have a working sample with suave.io and IdentityServer up and running in this pull request on the Suave project https://github.com/SuaveIO/suave/pull/473.\nSuave was not sending the Content-Length header being set by IdentityServer, which was causing clients to hang, thinking that there was always more of the response to load. This pull request fixes this bug, as well as provides a sample application.\n. ",
    "Peperud": "Thank you\n. ",
    "olee": "After some more testing I got a hybrid flow to work, but I couldn't really get authorization code running.\nI get the code, but it does not seem to fetch the id_token...\n. ",
    "florindpreda": "Ok, after a little bit of research it seems that the easiest way to do this is to override the CreateAsync methods of the UserManager which looks like:\npublic override System.Threading.Tasks.Task<IdentityResult> CreateAsync(User user)\n{\n    user.Id = user.UserName;\n    return base.CreateAsync(user);\n}\npublic override System.Threading.Tasks.Task<IdentityResult> CreateAsync(User user, string password)\n{\n    user.Id = user.UserName;\n    return base.CreateAsync(user, password);\n}\nI know it's not really according to standards but seems like a safe approach as the Username itself must always be unique so we won't end up with duplicated subject identifiers.\nObviously I'm open to better alternatives if there are any.\n. Yes, it works fine. Instead of string guids now I have the username as the id in the database which then translates to the sub during runtime.\nI think there might be an alternative though. Instead of actually storing the sub as the id of the entity in the database it should be possible to convert the username to sub (instead of the id) when reading it. Not sure if there are benefits to one approach over the other.\n. I understand. \nUnfortunately I have a less straightforward setup. There's another Idp which acts as a client to IdentityServer3 which I can't easily modify. It creates an in-memory user based on the sub which will then be passed to its own clients which must have users with matching usernames... Long story.\n. Yep, all good. Thanks!\n. I'm still experiencing this even after the ASP.NET IdentityTables have been created. I'm left with an empty page and a URL looking like this:\nhttps://IdentityServer3t/admin/authorize?state=11373557769572288&client_id=idmgr&response_type=token\nAny suggestions?\n. I think it's probably the default IdentityManager SecurityConfiguration which is LocalSecurity as I learned from this video: https://vimeo.com/125427106\nCurrently trying to use IdentityServer as the Idp for IdentityManager. I'm assuming it should work like any other client?\n. For IdentityManager with IdentityServer as Idp or any client in general?\n. In case someone else stumbles over this:\nhttp://stackoverflow.com/questions/36717161/asp-net-identity-plugin-ui-identitymanager-for-identityserver3-not-working-aft\n. ",
    "marzoukali": "Thanks i do it by configuring the scope claims on the scope\nFor Example, Email > Add this to the Resource scope:\nClaims = new List<ScopeClaim>\n                    {\n                       new ScopeClaim(Constants.ClaimTypes.Email, alwaysInclude: true)\n                    }\nThanks\n. Yes, thanks very much (Y)\n. ",
    "ajsblue": "Which of the samples shows it best? \n. This is bot what I mean. I want an instance of IdentityServer to act as an external identity provider for other identity servers.\n. ",
    "hvanbakel": "Adding my comments here just when someone finds this isssue.\nThe code in Ws Federation Client will only do the Windows Handshake and return that Windows Identity. If you're looking to see how the exchange of that token for an access/identity token works you can use the implicit flow client by updating the index.html to point to https://localhost:44333/connect/authorize instead of https://localhost:44333/core/connect/authorize as documented here.\n. ",
    "Herowin8x": "It seems duplicate with below link\nhttps://github.com/IdentityServer/IdentityServer3/issues/1463\nThanks\nTuan Nguyen.\n. ",
    "EdenLiang": "however \u2018/assets/scripts.js\u2019 is missing\n. ",
    "aperisic": "The Authorize attribute is missing. I will branch with the fix. Without the attribute there is no User defined with Claims.\n. Fixes now merged\nhttps://github.com/IdentityServer/IdentityServer3.Samples/pull/293\nhttps://github.com/IdentityServer/IdentityServer3.Samples/pull/294\n. ",
    "firasr": "Modifying the samples source code to fit it with VS2013 while keeping up to date with the samples latest updates you guys are making is somehow inconvenient; especially for those who doesn't have VS2015.\n. Ya, that seems the best solution. Thanks Dominick!\n. ",
    "ranieuwe": "Note that this only works with selected applications. See https://azure.microsoft.com/en-us/documentation/articles/active-directory-v2-limitations/ for more information on that.\n. From the looks of it the validation only seems to work if a specific tenant is passed in (making the request organization specific). As he has not passed in an organization specific tenant id in the Authority field but common it fails with the following error when ValidateIssuer is set to true:\nIDX10205: Issuer validation failed. Issuer: 'https://login.microsoftonline.com/1e355c04-e0a4-42ed-8e2d-7351591f0ef1/v2.0'. Did not match: validationParameters.ValidIssuer: 'null' or validationParameters.ValidIssuers: 'https://login.microsoftonline.com/{tenantid}/v2.0'.\nWhich makes sense as the issuer is my organisation. The only thing that puzzles me is the \"ValidIssuer\" field being null. \nOnce the tenant is set, i.e. https://login.microsoftonline.com/1e355c04-e0a4-42ed-8e2d-7351591f0ef1/v2.0 it can validate the issuer is the organization. \nI am not sure how one would go at validating the issuer if it is a Microsoft account (common).\n. @CTDevRic keep in mind to specify a tenant if you are using Azure AD. Also @tbasallo is using v2.0. Also generally there is another error in small at the bottom of \"oops, something went wrong\" page.\nHere is our OIDC configuration for Azure AD:\napp.UseOpenIdConnectAuthentication(new OpenIdConnectAuthenticationOptions\n{\n  AuthenticationType = \"AzureAd\",\n  Caption = \"Office 365\",\n  Scope = \"openid email profile\",\n  ClientId = \"client-id-guid-here\",\n  Authority = \"https://login.microsoftonline.com/tenant-guid-id-here/\",\n  PostLogoutRedirectUri = \"http://localhost\",\n  RedirectUri = \"http://localhost:44300\",\n  AuthenticationMode = AuthenticationMode.Passive,\n  SignInAsAuthenticationType = signInAsType\n}\n. Without turning this issue into a chatbox. To quickly answer your questions:\n- Yes you can use it with localhost, just add the reply URIs to your application configuration on the manage.windowsazure.com portal in your AD configuration\n- Tenant ID can be grabbed from there as well. If you visit your application definition on the Azure AD, the tenant ID will be the first Guid in your URL. \n. ",
    "tbasallo": "@ranieuwe after reading through that I think that some of those exceptions may not apply to IdentityServer because the token being used (for example with a standalone API) is being generated and managed by IdentityServer. I know that in my case I am using a website and a standalone Web API both (three actually) managed all through IdentityServer. \nJust mentioning so that this option is not immediately disregarded.\n. @leastprivilege I am not sure, but it did not work without setting it false.\nWhat would be the concerns with that setting to false?\n. ",
    "CTDevRic": "@tbasallo I appreciate you showing your example and I was eager to implement this as a secondary provider, unfortunately, I am seeing an error when it gets over to Microsoft. Not a descriptive error, mind you, just a \"oops, something went wrong\" type of error. Did you ever happen to put together a more comprehensive tutorial? If so, I would love to be pointed to it...maybe I can find out the error of my ways.\n. @ranieuwe Roeland - thanks for your input. I went back and looked at the page I was getting from Microsoft, and found the following in light grey type at the bottom of the right sidebar:\n\nAdditional technical information:\nCorrelation ID: f73d8cd6-7fa9-4988-b457-b0e9e895fc6d\nTimestamp: 2016-08-19 18:11:31Z\nAADSTS90014: The request body must contain the following parameter: 'client_id'.\n\nObviously, that points to the ClientId property which I hadn't included, and I'm going to have to figure out where to get the tenant guid to append to the Authority URL.\nI was having issues with this earlier, and I see you have it in your code snip...will this work with localhost URI's? I was getting an error about it not being a valid URI when I was testing. Obviously, the ClientId is the first error being trapped, but if I can prepare for other errors along the way, that will help, too.\nThanks again for the info! It's greatly appreciated!\n. @ranieuwe Thanks, Roeland...that will get me on the right track. No more chatting needed...I hope.\nTake care!\n. ",
    "ghost": "Is it possible to have verbose logs but without logging sensitive information (like. client secrets)?\n. Ok, I will check once again. But, I strongly believe that I saw this in one use case. If I reproduce this, I will report it. \nCheers.\n. For sure I would not log https trafic, this is not what I mean. Sometimes I would like to turn on DEBUG logs for IDP even in production, for diagnostic just for short time, but I would not like to see client secrets, and user passwords in the logs. Is it safe to turn on IDP DEBUG log level? \n. Ok, sounds good. Thanks!\n. ",
    "chazt3n": "@estiller I was asked to talk to you, would you be able to advise here? This is my first foray into IdSrv3\n. I was able to get around this by hosting in IIS\n. I was trying to run the Windows Auth (All In One) sample, Windows Auth was enabled as a property\n. @brockallen Wow I am silly, thank you, I was able to get past that. Now I'm actually looking at a new issue that may still be unrelated, however it's very related to me getting a working STS. :( If you could take a moment to look at the setup here: https://github.com/IdentityServer/IdentityServer3/issues/2919 I would appreciate any insight very much. You and @leastprivilege are literally my heroes, unrelated\n. @estiller yes thank you, I seem to have gotten the windows auth example working, however I'm a little concerned that sometimes I get many more claims than expected, does this image look like what you expect?:\n\n. @estiller \n\nShould there be anything at that /was endpoint? Currently I get a 404 \n. @estiller  Ok, I see where I'm falling short, I don't know how to get AD groups using this WindowsAuth component, any advice?\n. @estiller EmitGroups = true O_o Ok well that's awesome. \n\nThen in your Identity Server user service when you implement the AuthenticateExternalAsync() method you get these groups as role claims on the incoming context.\n\nI see the claims, however they never make it into the CustomUser's claims, does that mean they'll only be on the access_token? (Is that the entire point of an access token?)\n(doing lots today as well as reading docs, I haven't gotten this far yet)\nAlso, I am absolutely using your windows auth service now, that was young and reckless me\n. My first public PR! I'd love to, let me see if I can feel my way around to get something visible\n. Got it! Thank you sir, I'm building this up in a very small sln so I will have to copy my changes into the original repo real fast to create the PR\n\n. ",
    "estiller": "Hi, I see you got around the issue but still let me ask - which sample were you trying to run? Anyway, to run in IIS Express with Windows Auth, you have to enable that on the property page of your web project in Visual Studio.\n. Assuming you are referring to the Windows Auth samples, AD is sufficient (or even a workgroup if it a test environment on a single machine). If you have ADFS than it does the Windows Auth part for you, and you integrate it as a WS-Federation IdP.\n. Yes, it looks alright.\n. Hi @chazt3n, you got me a little confused... \nWhen you say that you removed Windows Auth from the client app, what do you mean? The claims you show us in the second screenshot are claims coming directly from the Winodws Auth layer, without going through the Identity Server transformation in the Windows Authentication Service, so I am not sure what it is exactly that you changed there.\nRegarding your question about how to get the AD groups - first, you have to configure the Windows Authentication Service to emit the groups -\ncs\napp.UseWindowsAuthenticationService(new WindowsAuthenticationOptions\n{\n    IdpReplyUrl = \"https://localhost:44333/was\",\n    SigningCertificate = Certificate.Load(),\n    EnableOAuth2Endpoint = false,\n    EmitGroups = true\n});\nThen in your Identity Server user service when you implement the AuthenticateExternalAsync() method you get these groups as role claims on the incoming context.\nAnd as for the other question - it is OK that you get a 404 on the was address. That is not a problem.\n. Glad to hear you are making progress. The user service and the Custom User class in the sample are just that - a sample... You are correct that the current sample implementation does not propagate the role claims onwards from Identity Server. You can change the implementation or write your own, which takes the role claims from the incoming context and does something with them (like placing them on the outgoing claim collection in the authentication result.\n. BTW, do feel free to create a PR on the sample and modify it to support groups as well.\n. ",
    "cxc256": "I've found https://identityserver.github.io/Documentation/docsv2/endpoints/token.html and the IdentityModel.TokenClient.\nIs there anywhere else I should be looking?\n. ",
    "wishstar99": "I changed the localhost cert back to the sample cert and it works. weird. wrong forum :) \n. i ended up using Mvc.Controller instead\n. ",
    "newbe36524": "Hi, You can take a try with SelfHost (Minimal) Project or other HOST Project.\n. There is another namespace  for webapi\nhttps://github.com/IdentityModel/Thinktecture.IdentityModel/tree/master/source/Owin.ResourceAuthorization.WebApi\n. wrong repo\n. ",
    "wiseman13": "I did for the identity server, but I missed this section on the middleware debugging. I will see what that gives me.\n. I have enabled logging for Microsoft.Owin, but am not seeing any entries in my console output when running locally or in my file output when running on the server. I tried to get logs by using a token missing the required scope locally, but still nothing was generated. Is there another flag that needs to be set for log generation?\n. I added other sources like System.Net and confirmed that I am seeing log entries for those, but nothing is coming through for Owin. That even includes when I try to call an end point without the required scope and generate a 403.\n<system.diagnostics>\n    <sources>\n      <source name=\"System.Net\" switchValue=\"All\">\n        <listeners>\n          <add name=\"nlog\" />\n        </listeners>\n      </source>\n      <source name=\"System.Net.Sockets\" switchValue=\"All\">\n        <listeners>\n          <add name=\"nlog\" />\n        </listeners>\n      </source>\n      <source name=\"Microsoft.Owin\" switchName=\"Microsoft.Owin\" switchType=\"System.Diagnostics.SourceSwitch\">\n        <listeners>\n          <add name=\"nlog\" />\n        </listeners>\n      </source>\n    </sources>\n    <sharedListeners>\n      <add name=\"nlog\" type=\"NLog.NLogTraceListener, NLog\" />\n    </sharedListeners>\n  </system.diagnostics>\n. As I continue to read and debug I really thing that ARR and SSL off loading is at the heart of my issue, but I am not sure what changes I need to make to get everything working.\nI noticed the following headers when debugging in my non dev environment.\nX-Original-URL /api/v2/Account/8704/Transaction\nX-Forwarded-For 192.168.xx.xx:xxx\nX-ARR-SSL\nX-ARR-LOG-ID\n. More digging and if I remove ARR I still get an error. While monitoring IIS logs I noticed that it does not appear that the resource server is ever making the call out to /identity/connect/accesstokenvalidation, but I do see that call logged when I run the resource server locally.\n401: Unauthorized: {\"Message\":\"Authorization has been denied for this request.\"}\n. In searching the source code I am not seeing any type of trace logging for the IdentityServerBearerTokenAuthentication that would help me debug why the call is not even being attempted. The only logging I see and I get down into the plumbing is for error cases.\nhttps://github.com/IdentityServer/IdentityServer3.AccessTokenValidation/blob/414b217ccb613b231dedcd09d08a90f774fd232a/source/AccessTokenValidation/IdentityServerBearerTokenValidationMiddleware.cs\n. I am using JWTs. I can access the needed endpoints from the resource server. I check out all of the documentation and have ensure that machine keys are in sync. At this point I am stumped as to why it works local, but not in our farm. I have even tried removing a node from the farm, but leaving arr. As far as I can see from logs on the node and the arr server the resource server is never calling the accesstokenvalidation, but I see no logging on the resource server side that would let me know that it even getting to this point or to confirm that it properly parsed the discovery document.\n. I actually have the ValidationMode set to use the end point. I was just about to add introspection when I found that this call was not happening in our server environment.\n// enable token-bearer authentication\n            app.UseIdentityServerBearerTokenAuthentication(new IdentityServerBearerTokenAuthenticationOptions\n            {\n                Authority = authorityUri,\n                RequiredScopes = requiredScopesIEnumerable.ToArray(),  // Can be null\n                DelayLoadMetadata = true,\n                EnableValidationResultCache = false,\n                ValidationMode = ValidationMode.ValidationEndpoint,\n            });\n. When I do local I still get a 401 when running on the server. I am looking at adding a middle ware, but where should I be trying to pull the claims list from in that call?\n. I set to local and ran again, but nothing came in the logs. I then waited for my token to expire and tried to ensure that my logged worked and I get the following, so I think that if there was a log entry I would see it.\nException thrown: 'System.IdentityModel.Tokens.SecurityTokenExpiredException' in System.IdentityModel.Tokens.Jwt.dll\nMicrosoft.Owin.Security.OAuth.OAuthBearerAuthenticationMiddleware::Authentication failed\nSystem.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired.\n. Okay I will work on the middleware check and ensuring I am getting complete logs on my server. Thank for the help.\n. Well I figured out that while my logging works locally the same config on the server produces no logs for the Microsoft.Owin errors. Do you see anything I am missing in this config? I have an error level diagnostic trace written out for Sync.Auth and it works locally and on the server.\n<system.diagnostics>\n    <trace autoflush=\"true\"/>\n    <sources>\n      <source name=\"Microsoft.Owin\" switchValue=\"All\">\n        <listeners>\n          <add name=\"nlog\"/>\n          <add name=\"file\" \n               type=\"System.Diagnostics.TextWriterTraceListener\" \n               initializeData=\"\\\\server\\logs\\owin.log\" />\n        </listeners>\n      </source>\n      <source name=\"System.IdentityModel\" switchValue=\"All\">\n        <listeners>\n          <add name=\"nlog\"/>\n        </listeners>\n      </source>\n      <source name=\"Sync.Auth\" switchValue=\"All\">\n        <listeners>\n          <add name=\"file\" \n               type=\"System.Diagnostics.TextWriterTraceListener\" \n               initializeData=\"\\\\server\\logs\\owin.log\" />\n        </listeners>\n      </source>\n    </sources>\n    <switches>\n      <add name=\"Microsoft.Owin\" value=\"Verbose\"/>\n       <add name=\"Sync.Auth\" value=\"Verbose\"/>\n    </switches>\n  </system.diagnostics>\n. Would the Microsoft.Owin source show me any errors related to the resource server loading the discovery document? I was not seeing any trace entries while surfing the code.\n. Well now I feel bad wasting your time. Turns out it worked locally when hosted via IIS Express, but the reference for Microsoft.Owin.Host.SystemWeb was missing so the Startup was not being found when hosted in IIS, but the WebAPI routes were registered giving me the impression of it working, but not. Thank you again for taking the time to help me trouble shoot. \n. ",
    "PJPollard": "Made in error - apologies\n. ",
    "smuthiya": "The problem is solved now - it was issue with certificate.\n. ",
    "nkdev89": "im facing the same issue . Please let me know if you were able to fix this\n. ",
    "dazinator": "Duh - my bad - just spotted https://github.com/IdentityServer/IdentityServer4\n. ",
    "human3820917": "In tutorial (link above) you mention that all that is needed to show the users's email it to add email to the scope..\n```\npublic static class Scopes\n{\n    public static List Get()\n    {\n        return new List\n        {\n            StandardScopes.OpenId,\n            StandardScopes.Profile,\n            // New scope\n            StandardScopes.Email\n        };\n    }\n}\n```\nHowever, even after doing so the email does not show in the Token contents. Does a change need to be made in oidc-token-manager.js?\n. Thanks a bunch!\n. ",
    "WhiteFox0": "I have it here, recently finished. few details can be a bit different, but it should be working - https://github.com/WhiteFox0/IdentityServer3.Samples/tree/master/source/JsApp\n. ",
    "nickgibson-advanced": "I think the port number was changed. My bad! All working now. Thanks for the quick response.\n. ",
    "raphaellondner-okta": "Brock, thank you for your swift feedback, I appreciate it.\nI am aware that PKCE does imply having a dynamic secret (and when I wrote \"secret-less\", I really meant \"static secret-less\"). However, the way IdentityModel seems to be implemented, you still need to pass the static client secret as part of your token request, which seems to defeat the very purpose of PKCE. Note the following pre-condition from RFC 7336 (https://tools.ietf.org/html/rfc7636#page-4) for an authorization code interception attack to be potentially happening:\n\"The attacker has access to the OAuth 2.0 [RFC6749] \"client_id\" and \"client_secret\" (if provisioned).  All OAuth 2.0 native app client-instances use the same \"client_id\".  Secrets provisioned in client binary applications cannot be considered confidential\"\nIt seemed to me that you designed IdentityModel and IdentityModel.OidcClient as generic .NET libraries that could be used with any OIDC/OAuth product that implements the OIDC/OAuth RFCs (in the same way Google's AppAuth was designed) but maybe they were meant them to be used mainly with IdSrv3? If I manage to make them work with a secret-less implementation (that does not break integration with IdSrv3, of course), will you accept pull requests of such changes?\n. ",
    "Cont3xtSw1tch": "@brockallen  that makes sense. I guess what I meant to ask is if you have any samples of user authentication by certificate on authorized endpoint?\n. ",
    "UbhiTS": "Hi Cont3xtSw1tch / Brock, any progress on this request using either identityserver3 or 4 ?. ",
    "Spamme1": "Thanks for the reply, but I don't understand how you can \"recommend\" something that also MS has decided to drop, that everybody hates and that its future is already doomed! You talk about \"modern web applications\", OpenID Connect and OAuth2, and then you recommend to use IE, the worst ever made web browser in the history of internet, the web browser that was destroying the web, the web browser that wanted to dictated its standards. Recommending IE is not something that a open source community that support the open standards will do. Please tell me that this is a joke, because I can't believe that you really stay behind IE, it would be a very big delusion!\n. There is no solution without a web browser? Console Applications on head less server can't authenticate without have to use an external application, which is 10 times bigger than themselves?\n. I will check it, thanks\n. ",
    "CodeRevver": "I'm a bit late to the party here but I'm in the same position as you - trying to learn angular 2.  I want to use ID server v3 with WebAPI 2 and an Angular2 client.  What I've got is extremely ROUGH but It shows how you can use ID Server v3 with and Angular 2 client.  It's not fully Angular (I'm using implicit flow and redirecting to the ID Server login page at the moment) but it might get you started.  \nYou can see it here:  https://github.com/CodeRevver/Magnanimous\nAlso I used this as a reference (Except I use ID Server 3 instead of 4):  https://github.com/damienbod/AspNet5IdentityServerAngularImplicitFlow\nIf you're interested it's also hooked up to a WebApi2 client and I'm planning on passing the token to that in the future.  Also It's using Telerik Angular 2 controls so you might need a free account to download the packages.... ",
    "ashuthinks": "yes my bad , but in newer version its not, thanks \n. ",
    "CSharped": "Maybe, I was getting the latest list of claims after an IISReset .\nI tried using AutoFac for DI and have registered like below \nvar config = new HttpConfiguration();\n                config.MapHttpAttributeRoutes();\n                var builder = new ContainerBuilder();\n                builder.RegisterType<CustomUserRepository>().As<IUserAccountRepository<CustomUser>>()\n                    .WithParameter(\"ctx\", new CustomDatabase(Constants.CONNECTION_STRING));\nIs singleton the default lifestyle behavior with Autofac? \n. @brockallen , I tried different ways of registration with the above piece of code, i.e InstancePerRequest() but dont see any changes reflected yet\n. ",
    "guerson": "Yeah, my app is a Single Page Application in JS with is own login page\n. ",
    "dodegaard": "http://stackoverflow.com/questions/40293048/asp-net-mvc-angular-app-with-only-token-auth-and-no-cookie - got answer here from Dominick. thanks\n. ",
    "jelkhoury": "Hi,\nCan you please share the StackOverflow url for this question ? I couldn't find it. ",
    "dsalodki": "I need yet one field for login page (tenant)\n. ",
    "cajunitalian": "Dominick,\nNot sure what you're getting at, I am the sysadmin for the Web FArm.  I am asking you what kind of certificate do I need to generate for IdentityServer3.  All I could find on your site is that it's a \"Signing Cert\" which doesn't really say much.\nWhen you do a cert request in AD,there are many, many options.  I am just after requirements.\nEX:\n[cid:b3f25eeb-2557-42c7-aa84-9576785029b3]\n\nMatthew Dartez, M.S.I.T. | M.S.S.E.\nSystems Engineer\nmatteo@forzadartez.com\n\nFrom: Dominick Baier notifications@github.com\nSent: Wednesday, November 16, 2016 1:36:22 AM\nTo: IdentityServer/IdentityServer3.Samples\nCc: Matthew Dartez; Author\nSubject: Re: [IdentityServer/IdentityServer3.Samples] Generating SSL (#323)\nAsk your internal CA?\n\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/IdentityServer/IdentityServer3.Samples/issues/323#issuecomment-260874989, or mute the threadhttps://github.com/notifications/unsubscribe-auth/ABudsPFdfrLuRkGzZTHX2mBfVQlc-1Ocks5q-rJ2gaJpZM4KyxLy.\n. ",
    "TDK1964": "Yes /core works = Welcome to IdentityServer3. I think we're not aligned, when I said it worked I was referring to the fact the default IS3 welcome page is displayed and not the custom login page.. ",
    "thj-dk": "Of course. Sorry about that. I'll take it there.. ",
    "mkamrani": "The problem was that I didn't add the Microsoft.Owin.Host.SystemWeb package so my Owin pipeline was not executing.. ",
    "mika76": "You don't want to fix your own getting started tutorial?. No - I think I helped enough by submitting this issue.. Hah, well you're the one who closed the issue. It's not like it's not an issue any more.. ",
    "AshleyTaylor120986": "I have the option for \"Anonymous Authentication\" set to True at the project level in Visual Studio, and have it configured in the applicationHost.config as well, does it need to be somewhere else?. In case anyone else struggles with this, in my case it was this:\ncustomErrors mode=\"On\" defaultRedirect=\"Error.aspx\" redirectMode=\"ResponseRewrite\". ",
    "sattaman": "I am in another project , but this particular one is a react native mobile app so I am under the impression I need to use the implement in js directly? \n\nOn 3 Apr 2017, at 18:41, Brock Allen notifications@github.com wrote:\nare you using the oidc-client library?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. \n",
    "abellahoz": "Hello Allen,\nYou can cancel it, it\u00b4s a mistake.\nI\u00b4m sorry for the inconvenience.\n[image: FHIOS | SMART KNOWLEDGE] http://www.fhios.es/\nAbel Lahoz Gargallo\nAnalista/Programador\n902 889 441 (ext. 407)\n[image: blog] http://www.fhios.es/blog/\n[image: linkedin] https://www.linkedin.com/company/fhios-smart-knowledge\n[image: twitter] https://twitter.com/fhiosmart\n[image: facebook] https://www.facebook.com/FHIOS\n[image: google_maps]\nhttps://www.google.com/maps/preview?ll=41.397855,2.190264&z=15&t=m&hl=es-ES&gl=US&mapclient=embed&q=Carrer+de+Badajoz,+145+08005+Barcelona+Espa%C3%B1a\nDe: Brock Allen [mailto:notifications@github.com]\nEnviado el: mi\u00e9rcoles, 19 de abril de 2017 4:40\nPara: IdentityServer/IdentityServer3.Samples\nCC: abellahoz; Author\nAsunto: Re: [IdentityServer/IdentityServer3.Samples] Dev (#338)\nWhat's this PR for?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/IdentityServer/IdentityServer3.Samples/pull/338#issuecomment-295046719,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AacSAof3gXQ68tbbdHh2NTzSPT-srNRoks5rxXQNgaJpZM4NAJbs\n.[image: Imagen quitada por el remitente.]\n. ",
    "mackie1001": "At the end of the day the session is still denoted by a cookie so any sign out will only affect the browser it occurred in. Of course you could implement some kind of server-side session storage which has the ability to control all sessions for a given user but that would have to be something you built yourself I think.. ",
    "githubber5": "Created this issue under \"IdentityServer3.Samples\" instead of \"IdentityServer3\".\nNew entry:\nhttps://github.com/IdentityServer/IdentityServer3/issues/3844. ",
    "IncRev-Bala": "@brockallen If I commented the following Custom View Service in Startup Factory configuration, Single Sign Out is working fine.\nfactory.ViewService = new IdentityServer3.Core.Configuration.Registration<IViewService,CustomViewService>();\nKindly assist me whats the actual issue and what need to do to fix this issue. If I use the above said Custom View Service, its failing to logout (automatic logout is not happening) in other tabs (Check Session Endpoint is not updating the log out state) and I press the F5 or refresh then its redirecting to login.. "
}