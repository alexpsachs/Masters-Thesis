{
    "behdad": "Thanks Zoltan.  Would be great if in the future you submit individual changes.  I like to understand the changes but is hard when it's such a big chunk.\nDoes this have implications for existing users?  Has this changed the format?\n. Thanks :).\n. Thanks Khaled.  Would be great to get this in.  I need it to implement WOFF2 in https://github.com/behdad/fonttools/\n. ",
    "szabadka": "I am closing this now and will break it up into more commits (at least one for decoder and one for encoder).\n. I will close this as these issues were addressed recently.\n. Hi Khaled. As per Google's open-source policy, you need to sign the Google Individual Contributor License Agreement(CLA), which you can do online.\n. It turns out that this header is not needed at all, so I removed it. Hope it works now for OSX.\n. The encoder does not use unordered_map any more.\n. Sorry for the delay, I have not been actively working on brotli for a while. My plan now is to test and submit your non-python changes to our internal version and then update this github repository.\nAfter that is done, for the remaining python part, you will have to sign a CLA on this page:\nhttps://developers.google.com/open-source/cla/individual?csw=1\n. I fixed the issues regarding the files in the enc directory.\nCould you revert those files and try to compile it under visual studio? If it is still broken, please let me know.\nWhat e-mail address and github user name did you use for the CLA?\n. #79 added streaming output support.\n. I missed this one, sorry, fixed in #34\n. I fixed it by using FastLog2().\n. If it involves just the setup.py file, it should be ok to have it in the top-level directory.\n. There will be some more improvements to the encoder in the coming weeks and I would prefer cutting a release after that.\n. I have one quick question about the tests in the python subdirectory. Is there any easy way to run them on Linux in a self-contained manner, i.e. without needing to install anything outside the root directory in the repository. Ideally the following would work:\n$ python setup.py build_ext\n$ python setup.py test\nThe first command succeeds, but when I run the second, I get 'ImportError: No module named brotli', which suggests to me that it is looking for brotli in a system-wide lib and not in the created build/ directory.\n. Thanks, I confirmed that it works on Linux.\n. We just pushed a new version of the encoder and decoder, which is ready to be uploaded to PyPI after we fix the issue you pointed out.\nThere is one more thing that could be changed in the python interface. In the latest version of the encoder, the advanced fields in BrotliParams were deprecated and are ignored (these are enable_dictionary, enable_transforms, greedy_block_split, enable_context_modeling).\nI think it would make sense to remove them from the python command line interface as well.\n. Yes, I meant the brotlimodule.cc\n. Actually, we are planning to tag the current version of brotli as v0.1.0\n. Sure, let me know when the python part is ready.\n. I configured the Travis deployment in PR #147.\n@anthrotype Is this all we need to do? Will every release automatically uploaded to PyPI now?\n. As for quality 0, it is allowed, but currently is the same as quality 1. I found why it is broken now, I will fix it soon.\n. I fixed this in #123, could you test that it works now?\n. I created a separate PR for the header issues. Could you merge your python changes in one PR? After I merge that, we should be good to cut the release, right?\n. Do I understand it correctly that if we add these config files, then some third party sites will start cloning this repository and try to build it and run tests?\nIs adding these files enough or do we have to do something else? Like register on travis and/or appveyor?\n. OK, lets break this PR up in three parts, one for the setup.py fix, one for travis and one for appveyor. After merging the setup.py and travis PRs I will try registering google/brotli with travis. I saw a bunch of google projects there, so it should be ok. I am not sure about appveyor yet, I will ask around next week.\n. I added google/brotli to appveyor with my github account:\nhttps://ci.appveyor.com/project/szabadka/brotli\nSomehow I could not create a /project/google/brotli link, like with travis.\nAnyway, I will merge this now and see what happens.\n. Eric's version for opening the file seems more robust. Dominik, did you try that? If that would work for you, I will make these changes to our internal version and push them here.\n. I think the Python module's version should refer to the version of the underlying Brotli library, but it seems  difficult to keep them in sync automatically. Any ideas would be welcome.\nIf we would do it manually, we would have to remember to bump the version number right before we tag the release, right? Doing it right after would be too late since everything built from the tagged release would have the wrong version number (as with v0.2.0). I will try to remember doing this going forward.\n. It is not clear if this would work if the version is updated through merging a pull request. Anyway, let's try to remember updating the version string before release for now and see if that works. The bro.cc does not have a --version flag yet, before we attempt to do this automation, I want to move the BROTLI_VERSION define to a common place and use it from the bro.cc as well.\n. I created the version.h header in PR #193 \nClosing this now as the question in the issue was decided.\n. This is fixed in PR #187 \n. Fixed in PR #235 \n. These should be fixed with PR #186 \n. We decided to change the interface of the bro tool to match gzip.\nWould you be willing to change bro.cc with these changes to the command line parsing? For easier review, it could be broken up into multiple pull requests, e.g. as a first step factor out the function that processes one file from main().\nAs for function naming and other style conventions, please see https://google-styleguide.googlecode.com/svn/trunk/cppguide.html\nAnd in order to accept your contributions, you have to sign a CLA (see https://github.com/google/brotli/blob/master/CONTRIBUTING)\n. Thanks for the suggestion, this was implemented in #306, mostly along the lines of your proof-of-concept.\n. Thanks for the fix.\nBefore we can merge, you have to sign a CLA (see https://github.com/google/brotli/blob/master/CONTRIBUTING).\nThanks!\n. These were fixed with PR #245 \n. We added the paper to the docs/ directory in PR #198, so you can use it with the same licence as the rest of the project.\n. 0.3.0 will be the version of the next release. It has to be updated before cutting the release.\n. Pedantic warnings were fixed in PR #245 \n. I fixed everything in enc/ in PR #206. Could you create a PR for the rest?\n. Thanks a lot for catching this, apparently we forgot to update the introduction part of the spec. I will do that shortly.\n. Thank you for reporting this issue. This was fixed in PR #223.\n. Small changes are fine. Let me know when you are done and then I will push a new version to the official IETF site.\n. This was fixed by PR #233 \n. I started reviewing the changes, but I am not finished yet.\nI propose that we use this huge pull request for discussion and that you create separate pull requests for each smaller change after the review for them is complete.\nAs a start, the commit for Section 7.1 (f9f173c...) looks good as is and could be merged.\n. Could you create a new PR with the remaining two commits? This one does not seem to be mergeable any more.\n. On Tue, Nov 10, 2015 at 2:28 PM, Thomas Pickert notifications@github.com\nwrote:\n\n@erikzenker https://github.com/erikzenker Not a maintainer either, but\nI'm fairly familiar with the Brotli specification, albeit from a decoder\nperspective rather than an encoder.\nI am surprised that it should be possible to parallelize metablock\nencoding. It is possible that my understanding is incorrect. I will try to\nexplain why I think that parallel encoding can't work with Brotli.\nIn Brotli, there are three mutable concepts that get initialized at the\nstart of the stream, and then live across metablock boundaries. They have\nan impact on the decoding behavior of each block, and they also potantially\nget mutated within each block.\nThe three concepts are:\n1. The output window (size defined by WSIZE in the stream header),\ninitialized as empty. Used for back references, can span multiple blocks.\n2. The literals buffer of the last two literals, referred to as p1 and p2\nin the specification, initialized as p1 = 0, p2 = 0. Used to calculate\nContext ID for literals.\n3. The distances (ring) buffer of the last four distances, initalized as\n[4, 11, 15, 16], where 4 is the most recent distance. Used in the decoding\nof distances, where distance codes can refer to these values.\nAs far as I understand it, parallel decoding of blocks is not possible\nbecause of those concepts, since subsequent bytes may depend on the state\nof any of these three concepts, which might have been mutated by actions on\nearlier compressed data.\nUnfortunately, all of the test cases that actually contain multiple\nmetablocks are structured in a way that doesn't test for this. I.e. in all\nof those cases, all of the output data is really encoded in just one of the\nmetablocks. Because of that, the three stream-wide concepts above do not\nactually get mutated in those test cases, and thus your parallel\nimplementation passes, when really, it should conceptually fail.\n@szabadka https://github.com/szabadka Am I overlooking something?\nEach thread of the parallel implementation can have access to the whole\ninput data, therefore each of them has access to 1. the window (which is\njust past input data) and 2. to the last two bytes of the previous input\nblock.\n\nTo address 3. the parallel encoder has to ensure that it will not use the\nlast distances to create a distance short code for the first two commands\nof the meta-block (it is the choice of the encoder whether to make use of\nthe distance ringbuffer of to just output raw distances). After the first\ntwo commands, the distance ringbuffer is fully initialized based on the\ncurrent meta-block and the encoder can start using it.\nSo yes, it is possible to do parallel metablock encoding.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/google/brotli/pull/258#issuecomment-155419030.\n. This was fixed in PR #266 \n. This was fixed in PR #266 \n. LGTM\n. This was done in #404 \n. Having a separate brotli-wheels looks like a good solution for this. How\ncan I give access to the brotli PyPI account?\n\nOn Wed, Mar 1, 2017 at 1:55 PM, Cosimo Lupo notifications@github.com\nwrote:\n\nping @szabadka https://github.com/szabadka\nI can volunteer to maintain this brotli-wheels repository, and set it up\nto build wheels when the upstream brotli is released, and have it upload\nthem automatically to PyPI.\nI could create the new repository under my Github username, or if you\nwish, you can create it under the google Github organization and add me\nas collaborator for that repo.\nI would also require access to the brotli PyPI account.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/google/brotli/issues/507#issuecomment-283332384, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AIp1d6C0bMkv0uqXCT8Hb1Cc8YhU3qxiks5rhWqmgaJpZM4L7_ED\n.\n. The default here seems a bit fragile. The compression ratio could easily be more that 10x, the easiest example is a huge file with only zeros in it.\n\nIf you want to be more robust, the solutions I can think of, in order of increasing complexity:\n  1) Do the decompression in a loop, with exponentially increasing buffer sizes, until a limit is reached. The limit can be a command-line argument with a reasonable default, e.g. 1GB\n  2) Add a python binding for the BrotliDecompressedSize()  and try to use that. Drawback is that it does not work if there are many metablocks, so you would have to fall back to solution 1)\n  3) Add a python binding for the decompression function that uses two callbacks, and then you can allocate more output if it is needed.\n. As anthrotype@ pointed out, please add a return statement.\n. If should be safe because the decoder won't write huge chunks at once. See decode.c where we typically cast from int to size_t.\n. I just added a MODE_GENERIC compression mode, which is the default. This avoids the confusion that MODE_TEXT could equally mean 'no idea' and 'text for sure' before. Could you change your argument description and default accordingly?\n. I think these low-level parameters should not be exposed to the binary. Their purpose is to find a balance between compression speed and compression density, just like the quality parameter. The reason I still have these here is that I don't have a quality 10 yet, which would be a slow but not extremely slow version. Once I have a reasonable compromise there,  I will probably remove these and rely solely on the quality (or maybe the mode as well), just like for qualities < 9.\n. Those under \"// These settings will be respected only if quality > 9.\"\nshould be removed.\nOn Mon, May 11, 2015 at 11:46 AM, Cosimo Lupo notifications@github.com\nwrote:\n\nIn python/bro.py\nhttps://github.com/google/brotli/pull/105#discussion_r30025220:\n\n\nparams.add_argument('-q', '--quality', metavar=\"QUALITY\", type=int,\nchoices=list(range(0, 12)),\nhelp='Controls the compression-speed vs compression-density '\n'tradeoff. The higher the quality, the slower the '\n'compression. Range is 0 to 11. Defaults to 11.')\nparams.add_argument('--lgwin', metavar=\"LGWIN\", type=int,\nchoices=list(range(16, 25)),\nhelp='Base 2 logarithm of the sliding window size. Range is '\n'16 to 24. Defaults to 22.')\nparams.add_argument('--lgblock', metavar=\"LGBLOCK\", type=int,\nchoices=[0] + list(range(16, 25)),\nhelp='Base 2 logarithm of the maximum input block size. '\n'Range is 16 to 24. If set to 0, the value will be set based '\n'on the quality. Defaults to 0.')\nabove9 = parser.add_argument_group(\n'encoder parameters respected only if quality > 9.')\n\n\nI see. Which arguments shall I keep or remove precisely?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/google/brotli/pull/105/files#r30025220.\n. Here the indentation is actually correct, we use 3-space indentation by default.\n. This should be indented one space more.\n. This should be indented one space less, to match the previous paragraph on the same level.\n. I think these should be on the same level as above (i.e. 3 space less indentation).\n. What I meant is that the indentation relative to the paragraph above (\"Find the numerical value ...\") should be 3 spaces (and likewise for the for loop below).\n. I don't think you need dashes, since the expression here is \"from right to left\".\n. Please replace 'static prefix code' with 'variable length code' here and a few paragraphs below. That is the terminology that we use for the other two such codes.\n\n(and fix \"from right to left\")\n. from right to left\n. I think the original wording is a little bit better here (though it is a bit confusing either way). It is analogous to the definition of  e.g. NBLTYPESL, where we describe how the various bit patterns correspond to various values of NBLTYPESL, that is what \"encoded as follows\" means.\nIf we want to make it absolutely clear, it should probably be something like this:\nMNIBBLES, # of nibbles to represent the uncompressed length, encoded with\n           the following fixed length code:\nValue    Bit Pattern\n                    -------    --------------\n                       0                    11\n                       4                    00\n                       5                    01\n                       6                    10\nIf MNIBBLES is 0, the meta-block is empty, i.e. it does\nnot generate any uncompressed data. In this case, the\nrest of the meta-block has the following format:\n. right to left\n. \"with MSB on the left\"\nI think this should be written the other way around: \"with the first bit of the code in the MSB position\" or, maybe even clearer: \"with the first bit of the code on the left\".\nAnd below: \"with the first bit of the code in the LSB position\" (note that we use this phrase in section 1.5.1.) or \"with the first bit of the code on the right\". \n. On second thought, do we need this extra paragraph at all? I assume these refer to the variable length codes that are spelled out in the spec, but there we mention every time that the bits are parsed from right to left and we do not call them prefix codes, but variable length codes.\n. Since only the first 16 distance symbols can resolve to zero or negative values, I think this paragraph should be moved up a bit, after line 843, something like:\n\"If a special distance symbol resolves to a zero or negative value, the stream should be rejected as invalid.\"\n. I just noticed that NBLTYPES should be changed to NBLTYPESL here. Could you fix this as well?\n. I am starting to wonder if we need this extra sentence here.\nSince the block types are read using a prefix code with a certain alphabet size, there is no way we can decode a block type that it outside the range of its alphabet, right?\nWas your intention to address the overflowing of the \"previous block type +1\" symbol? That behavior is already defined above:\n\"If the current block type is the maximal possible, then a block type symbol of 1 results in wrapping to a new block type of 0.\"\n. Please fix the indentation of the arguments (here and below).\nYou can add static to  BrotliAllocateRingBuffer as well.\n. I just noticed that this goes beyond the 80-character line limit that is observed in this project. Could you please break the argument list to the next line? Sorry for the nitpicking.\n. The last two lines should be indented to indicate that these three lines are one instruction:\nif distance code is not zero, and distance is not a\n   static dictionary reference, push distance to the ring\n   buffer of last distances\n(and similarly the \"move backwards distance ...\" and \"look up the static dictionary word ...\" instructions)\n. determine -> determines\nAfter you fix this, it is ready to be merged.\n. It seems you accidentally removed a line from here:\n\"compute distance by distance short code substitution\"\n. Thanks for catching this!\n. Since this is in a .nf .fi block, we have to make sure that the line length does not exceed 72. \nWe can make it fit like this:\n         read array of literal prefix codes, HTREEL[]\n         read array of inset-and-copy length prefix codes, HTREEI[]\n         read array of distance prefix codes, HTREED[]\n. (I just noticed I had a typo there: inset->insert)\n. One more nit: I think it should be 'literal prefix codes'. No need to put both 'literal' and 'code' in plural. (and similarly for the other two).\n. The name of this function is a bit confusing as there are no uint8 data types anywhere. Maybe name it as_bounded_int() and add the two bounds as parameters. Then most of the code below could be simplified, e.g. 'if (!as_bounded_int(o, lgwin, 10, 24)) { ...\n. There should be a check to make sure that dictionary is shorter than the window, and set the error string to something appropriate otherwise.\n. This should be 'scripts'.. ",
    "khaledhosny": "I gave it a quick try, but it seems that the public headers include on most of the other ones, so it will need a bit of thought.\n. FWIW, I need this for https://github.com/w3c/woff2-tests.\n. I signed it now.\n. I\u2019d rather prefer if the Python module was changed to use BrotliDecompress with callbacks that allocate memory as needed and make Python users need not worry about the compression buffer size. I have a semi-working code for this, but I\u2019ll not be able to finish it for a couple of days or so.\n. Sorry for the delay, open #36 for the decompress changes.\n. @anthrotype Thanks, I fixed the missing return statement in my PR.\n. How are you building with pip? I do pip install -e . routinely and had no issue with it.\n. I think we need to fix sdist command, since it seems not to copy any of the Brotli source files. If this does not fix pip, it will at least allow uploading to PyPI.\n. > Maybe the solution could simply be to clone brotli as a submodule in another repository with a copy of setup.py positioned higher in the directory tree.\nThat is how it was done originally :) \n. Thinking about it more, I think it shouldn\u2019t harm to move the setup.py file to the top level directory, and leave the C file where it is, if it will simplify things.\n. We probably need a release of some kind to by able to identify which version have been uploaded?\n. Before the release we would need also to make sure the Python module exposes all features of the brotli library (like the new encoder params).\n. I think the parameters would be enough, unless we can come up with a compelling use case where Python users would benefit from the granularity of the API.\n. I think the existing pro tool can be replaced by this one, behaving like existing tools is a big plus.\n. I think you meant to report this too https://github.com/google/woff2/?\n. Thanks, fixed.\n. Fixed already.\n. @szabadka I\u2019m just wondering if this cast is safe, shouldn\u2019t the callback function return size_t to avoid this unnecessary cast?\n. ",
    "lvandeve": "Hi,\nThank you for the comment. For now, if it helps, the headers that can be considered to contain the public API are \"decode.h\" and its included \"streams.h\" for the decoder, and \"encode.h\" and its included \"streams.h\" for the encoder.\nThis API is not final, we are in the process of revising it.\n. Thanks for the report, should be fixed now :)\n. Yeah I was just noticing the same thing, I did it with \"_WIN32\" instead, visual studio does not appear to have any flags related to endianness but _WIN32 can be assumed to be LE.\n. Thank you for reporting this. We'll fix it soon.\n. Hello,\nThank you for the report. We'll fix the struct/class mismatch soon. In addition, indeed we're planning to support C++98 with the encoder, also on the way soon.\n. Thank you very much Yoav, that's super helpful!\nThe focus of this fetch spec is indeed on browser implementation, but the concept is not supposed to be irrelevant for other clients.\nAbout publishing dictionaries: indeed the client does not tell the server which it has, instead the server provides the URL of the dictionary, and the client caches it. This is good when the client then requests other pages which use the same dictionary.\nWhen using a previous document as dictionary for a next document, the server should know that the client already has this previous document since it sent it before during this session. Does the latter sound feasible?\nAbout recursive-sbr: the dictionary itself can be compressed with for example br. This is to prevent dictionaries fetching other dictionaries fetching other dictionaries and so on. Good point about updating dictionary from other dictionary though. Maybe it makes more sense to allow some recursion but limit the depth.\n. The current design indeed tries to reuse the existing caching mechanism, the advantage is that it makes implementation simpler by reusing existing features. The alternative is to specify a new kind of cache (because no matter what, you must specify in some way that the client must keep the data somewhere, correct me if I'm wrong) with more strict requirements for keeping the data.\nIf the existing caching mechanism is used, the penalty when something is not properly cached, is that it will be requested by URL instead, so the compression benefit is gone. Ideally web servers would use a unique URL for every different resource that can be used as dictionary.\nAny feedback on this is welcome. ",
    "eustas": "Done. enc/encode.h and dec'decode.h now depend only on common/types.h\n. I believe this has been fixed.\nI've measured compression of x-ray on odroid-c1 with broltli (level 11) - it took 5 min 41 sec, so the speed is about 24 KiB/s. On rpi-2 it would take 10-15 minutes to compress.\nWith lower level it works much faster. E.g. with level 1 it takes less than 2 sec; on level 9 it works 1 min 24 sec.\nProbably it is time to reevaluate brotli compression...\n. FWIW, time -f \"%M\" shows that brotli uses ~310MB of memory when compress x-ray (on level 11)\n. Unaligned loads/stores in bit_reader are intentional. We carefully profiled and decided to use them for better performance.\nI'm going to take a look at overflow/shifting issues soon.\n. We're going to make unaligned safer and more portable soon. So, stay tuned. \n. Fixed with PR 183.\nCompiling with -DBROTLI_BUILD_PORTABLE avoids overlapping memcpy and unaligned reads.\n. Hello. Let's revive this effort.\nWhat needs to be done to proceed with publishing PyPI module?\n. Hi. Actually, thanks for pinging! Going to do it now.\n. Hey! That happened! Wasn't that scary as I thought =)\nYup, making releases automated is a nice idea. But to add you as a maintainer I need to know your username =)\n. Hello.\n\"brotli\" content-encoding support has been recently added to Firefox 44.\n In Chromium project there is also intent to support brotli content-encoding.\nWhen done will make decoding fast and transparent for developers.\n As a fallback, you could transpile brotli to JavaScript, for example, using Emscripten.\n I'll add more details how to do it soon.\n. Quick tests with emscripten has shown that generated js code is 9 times slower on Firefox and about 14 times slower on Chrome.\n. Nice!\nThank you =)\n. Added link to brotli.js in README.md\n. JS decoder transpiled from Java decoder is coming soon.. Perhaps even AsmJS, if it will give reasonable performance boost.. It turns out that AsmJs speed varies a lot from browser to browser. Pure JS decodes is performant enough for practical usage, it is ~2.x times faster than brotli.js and 5 times faster than BrotliHaxe/JS.. Here is my playground: decoders.zip\n alice.br - test file I've used for benchmarks\n bar.html - AsmJS decoder transpiled from Java\n bjs.html - brotli.js browserified\n haxe.html - BrotliHaxe/JS\n xxx.html - WebAssembly generated for C decoder with Emscripten\n yyy.html - JS decoder transpiled from Java (and published in last commit)\nAsmJs generated with Emscripten has nearly the same performance/structure/drawbacks as WebAssembly, so I've stopped experimenting with it.. This function has been removed already.\nIf you still have problems with unused function warning, feel free to create a new pull request.\n. Fixed in PR #148\n. Hello.\nNice idea. Unfortunately, the spec is frozen now.\nBut, like with deflate/gzip it shouldn't be a problem: brotli format could remain intact, and some framing format could be added around it to take care of parallel encoding/decoding.\nAlso, these is another solution: put block length information into the preceding metadata block.\nSo, format will be the same, but capable encoders/decoders would benefit from parallel execution.\nWe will be glad to hear about results of experiments in this area.\n. We hope to add MSVS project files generation soon. Sorry for very late response.\n. All Coverity Scan reports have been addressed =)\nSee https://scan.coverity.com/projects/google-brotli\nThank you for reporting about these issues.\n. Uninitialized variables and null-dereference are all false-positives. Usage of tainted values is natural -> almost false positive. Going to toss coda a little bit to convince Coverity Scan.\n. Fixed with PR #253.\nI'm going to update squash plugin soon.\n. Fixed. Thank you!\n. https://github.com/google/brotli/pull/209\n. This one looks safe, since we haven't touched the file contents.\nWill fix it soon.\n. Nice catch. Fixed.\nThank you.\n. Fixed with PR 183.\nCompiling with -DBROTLI_BUILD_PORTABLE avoids overlapping memcpy and unaligned reads.\n. Setting quality doesn't seem to be redundant. Where is the other point it is set?\n. ParseArgv receives a pointer to a local variable \"quality\".\nBrotli compressor parameters are passed in BrotliParams structure.\nIn line 194 we copy parsed quality stored in a local variable to a BrotliParams member used by compressor.\n. Soon I will be landing next brotli update. Among other things it contains new CLI.... Where I can read about TriMesh binary format?\nI have a feeling, that transposing and demuxing tables would make the file more compressible, especially by encoders with lower rank context modeling (zlib and brotli).\n. My guess was right. Even without knowing the format, it is easy to improve compression ratio.\nStep 1: split odd and even bytes, e.g. with python script\n```\nf = open(\"input\", \"rb\")\nK = 2\nd = [[] for k in range(K)]\ni = 0\nb = f.read(1)\nwhile b != \"\":\n  d[i % K].append(b)\n  i = i + 1\n  b = f.read(1)\nf.close()\nf = open(\"output\", \"wb\")\nfor k in range(K):\n  f.write(''.join(d[k]))\nf.close()\n```\nStep 2: compress\nStep 3: profit!\n- Zopfli: 1,847,682 bytes (~22% smaller)\n- Brotli: 1,172,693 bytes (~29% smaller)\nI believe that with smarter transform results will be even better.\n. Update : currently brotli at level 11 compresses the example file to 1'236'595. It is still bigger than LZMA output, but there is a space for further encoder improvements.\n. About 49s (with fixed encoder) on Intel Xeon E5-1650 @ 1200 MHz (powersave mode).\nThere is a problem in encoder that makes encoding of this file unexpectedly slow. I'm preparing a fix, soon it will be published.\n. Use BrotliCompressWithCustomDictionary / BrotliSetCustomDictionary API\n. Custom dictionary could contain any data. Like with any LZ codec it is used as an initial window data.\nThough I could recommend not to place short pattern last few bytes of custom dictionary, because it  may be the \"blind\" zone of encoder.\n. You could try this: https://github.com/vkrasnov/dictator\n. We've found the problem. The fix will be rolled out soon.\n. This should be fixed now (https://github.com/google/brotli/pull/164)\n. Hello.\nshared.mk is used to extract common configuration from makefiles.\nBut currently we have no library targets...\nWhat is the disadvantage of placing \"-fPIC\" simply to CFLAGS and CXXFLAGS environment variables?\n. Fixed (in premake5 generated makefiles)\n. Hello. Could you clarify the purpose of adding the empty file, please?\n. Could you share a link to the db file, please.\nI've experimented with file that contains 32 copies on enwik9 and memory usage peak is 837M...\n. Should be fixed on v0.5.\nPlease check. If problem is still there, feel free to reopen the issue.\n. I've added support for icc recently.\nThough it looks that icc and clang produce about 10% slower binary than gcc 5.2.0\n. Hello.\nThank you for your fantastic research!\n Changes that improve both speed and compression ratio are very valuable for any compressor.\nWe are going to explore this solution and try to implement it in brotli.\nPS: sorry for the late response.\n. Hello again.\nWe have been busy last month, and have had no time to integrate your improvement to brotli encoder. Sorry.\nBut don't worry - this awesome change is still on our radars, and we are enthusiastic about integrating it.\nThank you for your patience.\nBest regards,\n  Eugene.\n. Currently python brotli module doesn't support streaming compression/decompression.\nlgwin is a parameter that is used to specify the length of LZ77 sliding window size.\nOf course, streaming support will be eventually added to the Python bindings,... So stay tuned.\n. Try to compile with -DBROTLI_BUILD_PORTABLE option\n. We focused mostly on x64 and ARMv7 where unaligned read doesn't cause undefined behaviour (except for atomicity, but it's not the case).\nWe will consider to turn this optimisation only when compiler detects compatible CPU architecture.\n. Yes, ubsan reports errors on x86_64 and we used it to check \"portable\" version.\nBut reporting unaligned reads by ubsan on x86_64 is done intentionally, so developers could verify their product without compiling for / running on specific hardware that can't to unaligned reads.\n. Try to compile with -DBROTLI_BUILD_PORTABLE option.\n. We haven't taken Sparc CPUs into account.\nI'll prepare patch that disables unaligned reads on Sparc CPUs.\n. Now SPARC and ARMv6 build in \"portable\" mode by default.\nWe're going to replace black-listing with white-listing, so unrecognized architectures would be built in \"portable\" mode.\nThank you for pointing the problem out.\n. According to the StackOverflow .so and .dylib are almost interchangable in modern versions on OSX.\n. Soon it will be possible to compile dylib with xcode: see PR #382\n. Hello.\nSorry for the late response. Thank you for your PR. Would you mind to rebase it?\n. As mentioned in previous comment, should be fixed now.\nIf not, feel free to reopen the issue.\n. Hello\nYou need to install python headers first:\n- sudo apt-get install python-dev\n- sudo apt-get install python3-dev\nBest regards,\n  Eugene.\n. Hello.\nThank you for your contribution.\nWe've already tried different approaches to calculate Log2Floor in decoder.\nAnd decided to keep the simplest one, because:\n- it requires less registers\n- it use less instructions cache\nBut the most important reason is - it takes about 0.01% of decoding time.\nSo, optimizing it won't make any difference, but could cause performance problems in unexpected manner.\nThank you again for your interest to brotli.\nBest regards,\n  Eugene.\n. Fixed (with premake5 generated build).\n. This could easily be added to BrotliCompressBuffer method, but impossible for streaming versions (as the data size is unknown).\nSo, if we add the logic that reduces window size to BrotliCompressBuffer, will it work for you?\n. It would look a little bit confusing and redundant - lgwin and lgblock already specify the expected use-case. Probably it can be done with some helper function that adjusts BrotliParams given the expected input size... \n. Basic formulae is max(24, min(10, log2(size)+0.5)), if memory itself is not a problem.\nIf memory is a limited resource, then lgwin should be lowered a bit, but for higher qualities, hashers might take more memory than ring-buffer, so cutting lgwin won't give a big win.. Hello.\nYou are right, BrotliCompressBufferParallel is a proof-of-concept for parallel encoding. One can implement actual parallelly executing compressor with his favorite technology (OpenMP, TBB, Hadoop, whatever...) using this method as a sketch.\n. Nice! We will be glad to hear any update on this topic.\n. Hello.\nencode_parallel is mostly a skeleton / proof of concept. Currently we have no plans to develop it.\n. Hello.\nThank you for your patch.\n Unfortunately, we can't merge it until you sign CLA. More details here:\nhttps://github.com/google/brotli/blob/master/CONTRIBUTING.md\nBest regards,\n  Eugene.\n. BrotliCompressWithCustomDictionary have been moved to compressor.cc and refactored. (And soon will be deprecated)\n. Hello.\nThank you for the interest. \n Actually we're going to add custom memory allocation support to decoder soon. Encoder will get it a little bit later.\nAlso we plan to update our API to converge with API of modern compressors.\nBest regards,\n  Eugene.\n. Custom memory allocators for decoder feature has been landed recently.\n. In v0.5 encoder also have custom-allocator feature.\n. Hello.\nThank you for the report. Most probably this affects not only mingw, but some other compilers.\n And, again, we are very grateful for the proposed fix.\nI believe, the fix will be landed tomorrow.\nBest regards,\n  Eugene.\n. Thank you for your report. We are actively working on those warnings...\n. We are working on our own Java wrappers. Soon it will be possible to make measurements and compare results / investigate bottlenecks.\n. Hello, Martin.\nNow, we have our JNI wrappers published. Could you test their performance, and see if the problem is still here, please.\nThanks in advance,\n  Eugene.. Ping?\nFeel free to reopen.... Yes, there is dependence between block size and maximum overhead.\nI'll check the implementation and plan to add utility method to brotli encoder API.\n. WARNING: this function result only applicable to BrotliEncoderCompress.\nStream compression may use more output. E.g. if compress with level 0 or level 1, every chunk of input is compressed independently -> adding more overhead.\nI'm going to improve BrotliCompressStream behavior later and add another function for output size estimation.\n. Hello.\nI'm going to investigate it. Thank you for the report and sorry for the late response.\n. We have a fix for this. I hope it will be published soon.\n. Hello.\nSerialized context may take up to 16 megabytes (the size of the window),...\nCould you point to other compressors that have such API, please.\nIt will help us understand the best practices in the field...\nBest regards,\n  Eugene.\n. https://github.com/google/brotli/issues/275\n. Fixed in #555.. Decoder dumps all the output is has after it consumed the next chunk of input: https://github.com/google/brotli/blob/master/dec/decode.c#L1954\nPlease, could you provide sample data and code, so we could investigate what is going wrong?\n. Thank you\n. Brotli  archive header is less than 1 byte -> independently decompressible blocks are almost the same as  independent archives.\nThe coding phase takes not much time, the most of the time is used for finding better data decomposition. Trying to compress blocks of different size in parallel will not add much overhead (comparing to special solution that estimates output size without producing output).\nSo it looks that writing some wrapper, that tries to find the maximum input block that produces maximal feasible output, is the easiest solution.\nIf we consider brotli as a format (not implementation) there is a way to create implementation that will be more efficient for specific data type and output size requirements (e.g. it may omit some computations and use precalculated tables). But brotli is a general purpose data format. If you use some specific data format (SEED?) it likely will be more efficient.\n. Going to check/fix it soon. And update documentation as well.\n. Can not reproduce.\nCould you attach sample compressed file, please?\n. Hello, Matt.\nThank you for your report. Could you check if casting mote to int in python/brotlimodule.cc:131 fixes the problem?\nBest regards,\n  Eugene.\n. Thank you for the request.\nWe have this feature in our plans, but first we have to finish refactoring and do some preparations...\n. Implemented in v0.5\n. Already integrated. Sorry.\n. Unfortunately, there is no magic bytes for brotli.\nIn future brotli streams will be wrapped in some framing format which will have magic bytes that could be used to identify it.\n. Mark Adler helped us much with proof-testing brotli and refining specification.\nHere is his framing format proposal:\nhttps://github.com/madler/brotli/blob/master/br-format-v3.txt\n\nSignature in hexadecimal (four bytes):\nce b2 cf 81\n. Thank you for your research and report. We are going to fix those warnings soon.\n. Ooops. We've fixed this in internal repo, but still hasn't publised the fix. Going to do it ASAP.\n. PR #323\n. Hi. Could you check again (PR #323 just landed).\n. The decoder thing seems to be easy to fix.\nBut brotli doesn't have a macro \"length\". Do you know where it is defined?\n. No worries, we are going to try to decouple our header files, so embedder code doesn't reach hash.h from encode.h\n. Hey, we've updated encoder recently -> many problems should be fixed by now.\nIf not, feel free to reopen the issue.\n. Going to merge is ASAP.\n. This will fix Issue #307 \n. Thank you for your report. We'll investigate what happens under the hood, and, perhaps, fix the problem.\n. This seems to be limitation of encoding. bzip uses BWT and thus wins from the input format (\\n, and ' ' get grouped). Thus it gets close to conventional compressors limit - about 17 bits per integer; using range coding would have improved the compression ratio.\nAnd of course, this is much bigger than true entropy (10 bits per integer).\n\nBTW, if we remove spaces and new lines\n> ts=''.join('{:1b}'.format(random.getrandbits(1)) for i in range(10000))\nthen \n> print(len(codecs.encode(ts,'zip')))\n1661\n> print(len(codecs.encode(ts,'bz2')))\n1692\n> print(len(brotli.compress(ts)))\n1262\n. Yup, it is not the first time we found that we could push the limit if the format wouldn't be frozen to the moment... But there is a trade-off: freeze format early and help customers adopting it or never freeze it, have a full freedom, but no customers.\nThank you again for your experiments and analysis, this would help us make the next compressor even better ;-)\n. Very sorry for that big latency (encoder was under construction). Fixed.\n. Hello.\n  Thank you for the report and sorry for the late response.\n  I'm going to fix it soon, but first I need to reproduce it. Unfortunately, clang-3.6 does not see this problem...\n. Please, could you check if prepending \"!!\" to IS_CONSTANT and BROTLI_HAS_UBFX helps?\nThank you.\n. It seems you've missed\n#define IS_CONSTANT(x) (!!__builtin_constant_p(x))\n. Okay. Thank you. I'm going to make a fix soon.\n. Hi. I am sorry so much! This patch has fallen out of my view sight for so long.\nGoing to take a look at it soon.\nThank to for your contribution and your interest to brotli.. Very nice and elegant! Would you mind moving it to research/ folder?. Many thanks to Matt Mahoney for discovery and to jibz for the fix (http://encode.ru/threads/2313-Brotli?p=46641&viewfull=1#post46641)\n. Hello. In order to merge your pull request we need you to sign CLA. Please refer to CONTRIBUTING.md\nThank you!\n. Thank you. I'll land this PR after travis/appveyor finish their checks.\n. Thanks.\n. Fixed doc / added custom dictionary truncation.\n. Hello. You need sign CLA first, before we would be able to merge this PR. See CONTRIBUTING.md\n. Thank you. Landing.\n. String is gone and restricted is wrapped with ifdef.\nPlease check. If problem sill exists, then reopen the issue. Thank you.\n. Hello.\nAfter you call \"BrotliDecompressBufferStreaming\" compressedBytes, most likely, isn't zero. This is because \"flush\" flag of WriteBrotliData doesn't mean \"hard flush\". To make a \"hard flush\" you need to Write empty metablock after flushed data block.\nSorry for the unclear API documentation. Will fix it soon.\n. s/empty metablock/empty metadata block/\n. Please consider using our new streaming API: BrotliEncoderCompressStream with op=BROTLI_OPERATION_FLUSH does exactly what is expected.\nSorry for the inconvenience and thank you for your interest to brotli.\n. Hello. Sorry for the late response. I have no strong opinion about using underscores in library names.\nSince it is just a trade of bit of readability (but whoever reads so filename?) for a bit of compatibility, lets to further without underscores.\n. I believe one last piece is missing: .pc files.\nNot sure if we should have them generated, or manually written are ok.\n. I was thinking about injection this to CMakeLists.txt:\n```\nBuild shared libs by default in unbundled mode.\nif(BUILD_SHARED_LIBS STREQUAL \"\")\n  if(BROTLI_BUNDLED_MODE STREQUAL \"OFF\")\n    set(BUILD_SHARED_LIBS ON)\n  endif()\nendif()\n```\n. Hello. I prefer self-contained build files until they grow insanely large.\nCurrently CMakeLists is 264 lines, so it sounds OK.\n. Hello.\n  Thank you for your report. Going to investigate this tomorrow.\n. Hello. We have a fix for this. The problem is in decoder. Will publish fix soon.\n. Hello.\nSorry for the late response. Going to investigate soon.\n. Seems that problem is already solved (at least in linux):\n```\n$ time ./bro -q 11 -f -i ./bad.xml -o ./bad.xml.br; ls -la bad.xml.br\nreal    0m3.429s\nuser    0m3.404s\nsys 0m0.024s\n-rw------- 1 eustas eng 6045 Jun 21 13:53 bad.xml.br\n```\nGoing to test under windows soon.\n. Fixed in windows as well.\n. Thank you!\n. Found out that trying to push CMake towards GNU builds is too painful.\nCould you take a look at #620, please. Fixed in v0.5\n. There is BrotliDecompressedSize method.\nUnfortunately, it works only is stream contains only one block. But it is the most frequent case.\nWe plan to add framing format in future, but currently you need to attach your own header, as Daniel said.\n. Hello, Daniel.\nThank you for your report. Actually, the value taken from negative index lives very shortly - it is overwritten by mtf[0] = value. Nevertheless, going to fix it soon.\n. Fixed in PR #343\n. Hello, Frank.\nSorry for the inconvenience, \"googlebot\" became very chatty recently. Just ignore it.\n  Our apologies. We hope, it won't stop you from making further PRs to brotli repository.\nBest regards,\n  Eugene.\n. Hello.\nThank you for your report. Going to fix problem ASAP.\n  Meanwhile we're preparing update to encoder that will bring more clear C streaming API.\nBest regards,\n  Eugene.\n. Current interface will be deprecated soon.\nWe will be grateful if you leave some comments on the future interface:\n```\nstatic const int kBrotliMaxWindowBits = 24;\nstatic const int kBrotliMinWindowBits = 10;\nstatic const int kBrotliMinInputBlockBits = 16;\nstatic const int kBrotliMaxInputBlockBits = 24;\ntypedef enum BrotliEncoderMode {\n  / Default compression mode. The compressor does not know anything in\n     advance about the properties of the input. /\n  BROTLI_MODE_GENERIC = 0,\n  / Compression mode for UTF-8 format text input. /\n  BROTLI_MODE_TEXT = 1,\n  / Compression mode used in WOFF 2.0. /\n  BROTLI_MODE_FONT = 2\n} BrotliEncoderMode;\ntypedef enum BrotliEncoderOperation {\n  BROTLI_OPERATION_PROCESS = 0,\n  / Request output stream to flush. Performed when input stream is depleted\n     and there is enough space in output stream. /\n  BROTLI_OPERATION_FLUSH = 1,\n  / Request output stream to finish. Performed when input stream is depleted\n     and there is enough space in output stream. /\n  BROTLI_OPERATION_FINISH = 2\n} BrotliEncoderOperation;\ntypedef struct BrotliEncoderParams {\n  BrotliEncoderMode mode;\n  / Controls the compression-speed vs compression-density tradeoffs. The higher\n     the |quality|, the slower the compression. Range is 0 to 11. /\n  int quality;\n  / Base 2 logarithm of the sliding window size. Range is 10 to 24. /\n  int lgwin;\n  / Base 2 logarithm of the maximum input block size. Range is 16 to 24.\n     If set to 0, the value will be set based on the quality. /\n  int lgblock;\n} BrotliEncoderParams;\nvoid BrotliEncoderParamsSetDefault(BrotliEncoderParams* params);\n/ A state, can not be reused for multiple brotli streams. /\ntypedef struct BrotliEncoderStateStruct BrotliEncoderState;\n/ Fills the new state with a dictionary for LZ77, warming up the ringbuffer,\n   e.g. for custom static dictionaries for data formats.\n   Not to be confused with the built-in transformable dictionary of Brotli.\n   To decode, use BrotliSetCustomDictionary() of the decoder with the same\n   dictionary. /\nvoid BrotliEncoderSetCustomDictionary(BrotliEncoderState state, size_t size,\n                                      const uint8_t dict);\n/ Compresses the data in |input_buffer| into |encoded_buffer|, and sets\n   |encoded_size| to the compressed length.\n   Returns 0 if there was an error and 1 otherwise. /\nint BrotliEncoderCompressBuffer(const BrotliEncoderParams params,\n                                size_t input_size, const uint8_t input_buffer,\n                                size_t encoded_size, uint8_t* encoded_buffer);\n/* Progressively compress input stream and push produced bytes to output stream.\n   Workflow consists of 3 tasks:\n    * (optional) copy input data to internal buffer\n    * actually compress data and (optionally) store it to internal buffer\n    * (optional) copy compressed bytes from internal buffer to output stream\n   Whenever all 3 tasks can't move forward anymore, or error occurs, this\n   method returns.\n|available_in| and |next_in| represent input stream; when X bytes of input\n   are consumed, X is subtracted from |available_in| and added to |next_in|.\n   |available_out| and |next_out| represent output stream; when Y bytes are\n   pushed to output, Y is subtracted from |available_out| and added to\n   |next_out|. |total_out| is assigned to the total amount of bytes pushed by\n   the instance of encoder to output.\n|op| is used to perform flush or finish the stream.\nFlushing the stream means forcing encoding of all input passed to encoder and\n   completing the current output block, so it could be fully decoded by stream\n   decoder. To perform flush |op| must be set to BROTLI_OPERATION_FLUSH. Under\n   some circumstances (e.g. lack of output stream capacity) this operation would\n   require several calls to BrotliEncoderCompressStream. The method must be\n   called again until both input stream is depleted and encoder has no more\n   output (see BrotliEncoderHasMoreOutput) after the method is called.\nFinishing the stream means encoding of all input passed to encoder and\n   adding specific \"final\" marks, so stream decoder could determine that stream\n   is complete. To perform finish |op| must be set to BROTLI_OPERATION_FINISH.\n   Under some circumstances (e.g. lack of output stream capacity) this operation\n   would require several calls to BrotliEncoderCompressStream. The method must\n   be called again until both input stream is depleted and encoder has no more\n   output (see BrotliEncoderHasMoreOutput) after the method is called.\nWARNING: when flushing and finishing, |op| should not change until operation\n   is complete; input stream should not be refilled as well.\nReturns 0 if there was an error and 1 otherwise.\n/\nint BrotliEncoderCompressStream(BrotliEncoderState s,\n                                BrotliEncoderOperation op, size_t available_in,\n                                const uint8_t next_in, size_t* available_out,\n                                uint8_t next_out, size_t total_out);\n/ Check if encoder is in \"finished\" state, i.e. no more input is acceptable and\n   no more output will be produced.\n   Works only with BrotliEncoderCompressStream workflow.\n   Returns 1 if stream is finished and 0 otherwise. /\nint BrotliEncoderIsFinished(BrotliEncoderState* s);\n/ Check if encoder has more output bytes in internal buffer.\n   Works only with BrotliEncoderCompressStream workflow.\n   Returns 1 if has more output (in internal buffer) and 0 otherwise. /\nint BrotliEncoderHasMoreOutput(BrotliEncoderState* s);\n```\n. I have plans to use Doxygen generator, but not sure when it will be integrated to TravisCI automation...\n. Doxygenized API can be found here: https://brotli.org/. Fixed in v0.5\n. Thanks. We're going to adapt it in few steps: first resolve the compiler warnings and later, when we are ready for windows, grab __declspec part.\n. Should be fixed.\n. Ooops, thought it was about unused function...\nVisibility is fixed in v0.4, going to back-port fix soon.\n. Should be fixed. D\u00e9j\u00e0 vu?\n. Constant already has too high prescision.\nWhen either of kLog2Inv values is printed out the result is 1.4426950_2162933349609_\n. Fixed in v0.5\nNB: most frequently used values are looked up in table. High precision for bigger values is not required.\n. Done. When you compress block you need to set \"force_flush\" parameter to \"true\".\nMoreover, after block is flushed, you need to append empty metadata block (WriteMetadata) to make sure that output is byte-aligned.\nSorry for confusing API. In two weeks API will be updated to make things like that more straightforward.\nBest regards,\n  Eugene.\n. No, just something like this:\nwhile (true) {\n...\n c->CopyInputToRingBuffer(input_size, input);\n...\n c->WriteBrotliData(/* is last */ false, /* force flush */ true, &output_size, output);\n...\n c->WriteMetaBlock(/* input size */ 0, /* input */ nullptr, /* is last */ false, &output_size, output);\n...\n}\n. Sorry for misguiding you. Use WriteMetadata instead of WriteMetaBlock.\nAnd pay attention that unlike WriteBrotliData output buffer is provided by client, not by encoder.\n. You are welcome.\nSoon we will publish v0.4 with more clear interface...\n. New version of brotli encoder is almost ready to be published. In new version there is no std::* at all.\n. Fixed in v0.5\n. There is a very limited number of cases in which BrotliDecompressedSize works.\n1) The whole input is compressed in a single block\n2) The whole input is a single uncompressed block\nThe length of both compressed and uncompressed block is limited to 1 << 24 == 16MiB.\nTechnically it is possible to make this function work for a case: multiple uncompressed blocks followed by 0 or 1 compressed block.\n. Different compression levels affect ability of encoder to detect better input splitting...\n. Brotli is a low level format. It is designed for streaming processing.\nWe are planning to add framing format that will allow things like stream navigation, reliable calculation of uncompressed size, consistency checks, etc.\nUnfortunately, it is not ready yet...\n. Hello.\nJust recently updated BrotliDecompressedSize. Now it supports multiple non-compressed and metadata blocks. Unfortunately, until brotli framing format is implemented, it will never cover all the cases. So, currently, I would recommend to use BrotliDecompressStream.\nAs for encoder, BrotliEncoderMaxCompressedSize provides the exact answer about how large output may be; but it only works for BrotliEncoderCompress.\nThank you for the report and for the R bindings.\nBest regards,\n  Eugene.\n. Yup, in PR #386\n. Hello, Evan.\n  I like the option (1), but the help with writing CMakeLists.txt is much appreciated.\n  I consider having multiple build systems on board, as long as they do not interfere and reside in root and build/ directories. Currently planned build systems are CMake, Premake, and Bazel:\n- Premake is straightforward, but might be inconvenient\n- Bazel is also straightforward, but I'm not sure if it is possible to pull BUILD files out of subdirectories\n- CMake looks powerful, but complicated\n. It is a problem that was recently introduced in premake5.\nI have plans to add postfilter to fix it. There are 3 workarounds:\n- use xcodebuild\n- remove -Wl,--start-group / -Wl,--end-group enclosure in build files\n- call directly make brotli to avoid building everything (brotli.make seem to be not corrupted)\n. And, yes, cmake will be added soon.\n. Running premake5 gmake on mac fixes the problem. Perhaps I'll remove generated buildfiles to avoid confusion.\n. Removed generated buildfiles to avoid further confusion. Going to pull CMake soon.\n. Wide list of compilers would be a nice addition (different versions of clang/gcc/mingw).\nAlso I see, it is possible to build/test with ASAN / MSAN. That is a super-cool option.\nSo if you add more variants, we will be very grateful.\n(Going to investigate ICC license question later).\nconfigure-cmake seems to cover all possible use-cases. Perhaps, a more light-weight version of this wrapper would fit our tiny simple project more =)\nAbout API stabilization - you are absolutely right. We plan that API will finally stabilize in next 6 months, and then going to publish packages for distros. Though, some background pre-work could be done earlier.\n. PR #397 has landed. WooHoo! Kudos to Evan!\n. Tried to add \"-b bin\" to \"pip wheel\", it still fails.\n. Going to prepare a separate PR, to remove intermediate commits\n. Travis \"after_success\" feels better, still appveryor is unhappy.\n. Finally, appveryor is green\n. Going to investigate it tomorrow. Thanks for the heads-up!\n. Hi. Thanks for an offer, but I'm little bit hesitate, and also it will a little bit easier for me to fix it in internal repository and then publish update to github.\nIdeas look great! I've planned to implement them next week (though it would require lot of courage and will to switch to snake case, I am old Java fan =).\n. Added a task to initial message.\n. In the internal repo we already have conformant arrays. But it seems that this does not apply to streaming functions. Am I right?\n. Hello @jchampio \nPlease, could you describe toolchains you've used that caused \"incompatible\" bools.\nI'm going to modify BROTLI_BOOL definition in a way @nemequ proposed, but I'll need then to recheck that problem is gone.\nBest regards,\n  Eugene.\n. Well, considering BROTLI_BOOL in API to be int in ABI we get both cleanliness and compatibility:\n- [x] \"Using XXX helps make the code more readable and reduce documentation lookups\"\n- [x] No more \"the module and the library disagreed on the definition of XXX\"\n. The only problem could be that result may have 4B+ values different from BROTLI_TRUE and BROTLI_FALSE, but brotli library swears not to return obscure values.\n. Travis looks happy, indeed.\nThe only thing left to do is to sign CLA (sorry for the bureaucracy).\n. Don't worry about CLA. Rerunning travis...\nThank you for this PR!\n. It looks like problem with gcc4.5 persists...\n. Going to calm down clang-ubsan in few moments.\n. Ubsan is happy now.\n. I signed it!\n. I think - yes. This bot is always harassing me...\n. Okay, let's try\n. Hello. For decompressor it is easy. For compressor we have only rough estimates (there are about 90 places where memory is allocated).\nGoing to add method for decompressor soon and for compressor after some code combing...\n. For decompressor the worst case is 2.6MiB + 1.5 * ringbuffer size. Soon an API for calculating ringbuffer size from the first byte will appear + ability to remove 1.5x multiplier.\nAs for encoder, we still need more time to build the right model.. 1) Yes, if you write custom memory manager; both encoder and decoder could be initialized with custom memory manager, which could work with preallocated arena\n2) In worst case 1.5x LZ window + up to 2.6MiB for Huffman tables. 1.5x multiplier could be eliminated by appropriate decoder option; normally Huffman tables are much smaller; 2.6MiB is a theoretical maximum never seen in reality. Normally those are 1-2 orders smaller.\n3) Sorry, could you rephrase the question, please. Both Firefox and Chrome use reference (this) decoder.\nDecoder does very few allocations, IIRC less than 7. Chrome uses rather effective memory manager (TCMalloc). Combine those facts, and memory reuse would never be a problem.\nCan't share exact stats, but in 50+% of cases memory usage is slightly above 32K; in the majority of cases memory usage is below 0.5MiB. That highly depends on the size of the file; to be more precise, it depends on \"window size\"; Huffman tables together with other all the other overheads is just a tiny fraction of used memory.. Hello. Sorry for the super-late response.\nThank you for your PR.\n. Hello, Piotr.\n  Please, give me few days to publish new decoder API first...\n. Added section to README.md\n. Hello. Perhaps you meant to post this issue to https://github.com/google/ngx_brotli/issues?\n. Unguarded __STDC_VERSION__ will be fixed in next encoder/decoder update.\n. Appveyor seems to be happy now. Will merge soon.\n. Hello.\nBrotliDecompressStream and BrotliDecoderDecompressStream are the same, except the position of \"state\" argument.\nDecoder has internal storage - \"ring buffer\". In your example it seems to be 4MB, so in given example lines 2-5 do not consume more input, because there is some pending output in \"ring buffer\". I suppose that the whole compressed file is bigger than 5355157 bytes...\n. No feedback for 19 days; feel free to reopen if some concerns still remain.\n. Internally we use SWIG and JNI wrappers for brotli library.\nWe plan publish them closer to Brotli 1.0.0 release.\nAlso we have pure-java brotli decoder. And, again, it will published a little bit later. Sorry.\n. There is third-party port to JavaScript and Rust.\nNot sure, may be even to Go.\nv1.0.0 is not about format, it is about API. We need to make a final clean-ups (remove deprecated API) and make sure that API is portable and easy to use. So, I believe, we are almost here.\nSo, when v1.0.0 is released, API is considered stable -> it is good time to write wrappers to different languages...\n. Hi. Java decoder seems to be ready for usage. We've fuzzed it and tested on a large corpora.\nSoon maven artifact will be published as well.\nEncoder port is not even planned...\n. org.brotli.dec:0.1.1 has been recently released. JNI bindings are already here, see java/org/brotli/wrapper\nUnfortunately, JNI is a headache for portable projects. There is no convenient way to use it out of the box. Currently only Bazel builds JNI artifacts.... Yes, two years seems to be a very long period... But still we have no time for that =(. There are JNI wrappers for brotli. Just there is no CMake/make/premake build files for them. Bazel compiles and tests JNI library.\nI believe JNA does not work well with \"in/out\" parameters.\nGoing to look at JavaCPP.. JavaCPP looks like a no-go - it requires both JDK and compiler installed.... Please, could you help with those things?\n. Released as 0.5.1 to be safe\n. No worries.\n. Ooops. Released from master instead of branch.\n. Done =)\n. Going to revamp command line tool soon.\nPlanned changes:\n * more gzip-like arguments\n * better help message\n * man page\n * rename to 'brotli' to avoid clash with existing /usr/bin/bro tool. Already done =). Going to add this behavior soon.\n. Should be \"fixed\" with PR #431 \nThough, it is barely minimal implementation,... please check if helps in your case.\n. Thanks for the report. I'll investigate it later. Feel free to ping me in a month or so, it I do not report back...\n. With VS it is logical to use build system that supports project file generation -> cmake or premake5:\n- for cmake run cmake -G \"some_generator\", where some_generator is picked from the list provided by cmake --help\n- for premake5 run premake5 vs2015\nOf course, installed cmake/premake5 is a prerequisite.\n. Creating plugin is a nice initiative, but... then it will be a painful experience for users: they expect that everything works out of the box. Perhaps, it will be more efficient to negotiate with Igor Pavlov (7-Zip author), to make Brotli the part of official distribution. \n. Meanwhile, to play with different compressors one can use Squash - Compression Abstraction Library. It already has 31 compressor plugin (including Brotli) and has bindings for Vala and Rust.\n. Cool! \ud83d\udc4d . Nice catch \ud83d\udc4d \nIt is dead since last October, but all compilers remain silent...\nTravisCL experience some troubles, but I'll rerun the build when it feel better.\n. Please consider adding TODO / creating issue to use cc_inc_library when it is fixed.\nUsing \"includes\" causes warning:\nWARNING: /usr/local/google/home/eustas/clients/brotli/BUILD:63:16: in includes attribute of cc_library rule //:brotli: 'include' resolves to 'include' not in 'third_party'. This will be an error in the future.\n. Works for me both with 0.3.0 and 0.3.1 versions.\nCould you publish verbose Bazel report. Perhaps there is some other bug in Bazel, or some environment / configuration problem.\n. Nice! Thanks\n. Thanks\n. The only difference between v7 and v8 in decoder, besides 32 vs 64 bits, is using \"rbit\" instruction.\nCould you check that \"rbit\" works on ARMv8, please.\n. Hello. Hasn't #431 fixed the rbit problem?\n. Hello @mdejong. Please, could you check that replacing\n#if defined(BROTLI_TARGET_ARMV7) with\n#if defined(BROTLI_TARGET_ARMV7) || defined(BROTLI_TARGET_ARMV8)\nbefore BrotliRBit declaration do not break build / tests?\n. Does this problem occur with CMake or Premake5 generated XCode projects?\n. Ideally, there will be only one port.h, and we are moving towards this.\nFeel free to ping me, if this is urgent.\n. Will be fixed in #630 . Please pick-up sais as a git submodule.\n. E.g. link research/third_party/esaxx to https://github.com/hillbig/esaxx\n. Hello. We already have pure Java decoder.\nUnfortunately its quality isn't proven, so it is too early to release it.\nI hope this will arrive shortly after v1.0.0 brotli release that is getting closer and closer.\n. Good news: we have decided to publish this draft very soon (before v1.0.0).\n. Update: we have more-or-less working java decoder now =) going to publish it early next week.\n. Done. Going to push to Maven Central, but it might take a considerable amount time.\n. poms are wrong (but still work). Going to fix them ASAP.\n. Next week, I hope.\n. Sorry for the delay (again). Now, I think it will be on the next week. Sorry.. Still waiting for brotli.org to be made online. Sorry.. org.brotli.dec is now accessible on Maven Central =)\nhttps://search.maven.org/#search%7Cga%7C1%7Corg.brotli.dec\n. Could you point where it is used in brotli, please.\nThe only double-to-string conversion occurs in \"bro\" tool...\n. Hi. Looks nice.\nWould you mind to drop a few lines to README.md how to use yapf (append a new 'Development' section)\n. Hi.\npython/README.md sounds better, but then you should mention that formatting of setup.py in root directory is also a good habit =)\n. Hello, Alex.\nIs it a workaround for missing apple-gcc42 4.2.1-5666.3?\n. If so, then PR #438 resolves that problem. Lets not strick to particular images, if possible.\n. I think it should be:\nif(NOT WIN32)\n    install(DIRECTORY ${BROTLI_INCLUDE_DIRS}/brotli DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})\n  endif()\n. I meant, it should be outside of \"is shared libs\", because when linking statically, includes required as well =)\n. Sounds logical.\n. One last thing (sorry): any reason not to use paths provided by GNUInstallDirs?\nI'm not very experienced in that matter, but it feels like this will make build a bit more portable.\n(${CMAKE_INSTALL_INCLUDEDIR}, ...)\n. And CMake wants ARCHIVE DESTINATION as well...\n. Thank you.\n. VS thinks that brotlienc depends on static brotlicommon...\nOf course we can modify appveyor config to force building static artefacts, but first we should teach CMake to generate valid shared library build for VS. \n. Working on DLL imports/exports + stub lib generation. That will include this PR.\n. So, now we have a diversity: CMake builds shared libraries by default and Python build static libraries (by design?)\n. May it be ralated to https://blog.travis-ci.com/2016-10-04-osx-73-default-image-live/ ?\n. Homebrew gcc44 formulae is not supported for OS versions newer than maverics\n. Thanks, fixed this way.\n. Hello. What is the difference between \"build\" and \"build_ext\"?\n. (ooops, rebase is required)\n. Easy pick:\n- should not be a valid UTF-8 string\n- should not be a valid brotli stream\n- should have unique \"magic bytes\" signature\nFirst 2 requirements give us that the first \"magic byte\" is 0x91.\n. Thank you! \ud83d\udc4d \n. Currently we have no plans for Java encoder port. But, for sure, we will have JNI bindings.\nEncoder is complex and we try to use all the power of CPU to be competitive.\nWith Java it is much harder to match plain C performance.\nHowever, it is possible that some subset of encoder (levels 0, 1, or something similar) will be ported to support specific use cases.\n. Merging into #405 . Found the problem: it is IO!\nIf I comment out fwrite, then speed difference is less than 10%. Going to make a serie of pure in-memory tests and report back. . Completed some measurements.\nCorpora:\n * wiki - enwik8, compression level 9\n * geo - non human-readable data, compression level 6\n * html - various HTML pages, compression level 11\nBinaries:\n * linux-mingw - mingw gcc 4.8.2 under Ubuntu\n * old-linux - gcc 4.8.4\n * linux - gcc 5.2.0\n * win32 - MSVC 2015, default Premake5 generated project\n * win64 - MSVC 2015, same as above, but switched to x64 platform\n * win-mingw - mingw gcc 5.4.0\nBaseline is linux; other lines - percentage of speed, relative to linux speed for the same corpus.\nWindows binaries are tested under Wine.\n| Binary | wiki | geo | html |\n|---|--:|--:|--:|\n| linux-mingw | 92.2% | 90.6% | 83.85% |\n| old-linux | 97.6% | 96.0% | 97.6% |\n| linux | 100.0% | 100.0% | 100.0% |\n| win32 | 58.3% | 61.2% | 64.2% |\n| win64 | 76.3% | 67.3% | 77.2% |\n| win-mingw | 95.1% | 94.2% | 87.7% |\nConclusions:\n * 32-bit binaries are not reasonable; Premake5 configuration should be modified to work out of the box\n * MSVC binaries are considerably slower; need to make further investigations\n * older gcc produces 3-4% slower binaries\n * modern mingw binaries are fair except for html case; perhaps there is something that adds overhead for literal context modeling on Windows (calling convention / register starvation?)\nBottom line:\n * are there good profilers for Windows binaries?; under Linux I use linux-tools perf; but it doesn't work for binaries under Wine\n * any ideas how to define IS_CONSTANT macros for MSVC?. Disabling all compiler specific tricks doesn't hurt Linux/gcc performance more than 5% -> PREDICT_X / IS_CONSTANT seems to be a wrong trail.\nMSVC PGO is simply no-op.. Compiled with gcc 6.2.1 and mingw-gcc 6.2.1 with -fpic and fascall convention for internal functions...\nNow disassembly looks almost the same (excluding aligning \"nop\" style and register scheduling)... but windows binary is still slower (under Wine). Pure mystery!. Only CLI is hurt by IO; closing this issue, due to the lack of interest. Feel free to reopen it.. Thanks.. Surely. Will try to do it today.. Please take a look at #490. Going do it this week.. https://github.com/nemequ/configure-cmake/. Done.\nIf more enable/disable/with params are required, feel free to request =). Will Py_BEGIN_ALLOW_THREADS / Py_END_ALLOW_THREADS do the trick, or we need something more exotic?. @nicksay, could you review, please.. Finished well after rerun. Going to rebase and retest as a whole.. There were tiny changes.\nI'd be glad to tag with 1.0.0, but to do that, we need to remove functions tagged \"DEPRECATED\" first.\nI'm going to ask ngx_brotli if they can stick to some specific commit, so this removal won't hurt them.. I've prepared a patch for ngx_brotli, but it may take some time to land it (because of the holidays).. We're getting closer =) Just yesterday brotli.org became live...\nThe only thing that holds now is nginx-brotli module. It uses deprecated API, I plan to remove before releasing 1.0.0. Just discovered that ngx_brotli now depends on brotli via git submodule -> we are unblocked to move further =)\nSo, the plan is: release 0.6 with as brotli is now, and soon after that 1.0.0 with deprecated API removed.. Just recently sent a PR with latest updates.\nAfter it is landed, we can start releasing 0.6.0 =). v0.6.0 is released. Sorry for the delays.. v1.0.0 is coming soon.. Surely.. Technically, with bro being replaced with brotli, and recent tiny API additions, we are ready to do it =)\nGoing to see through issues list and, hopefully, new release will happen next week.. I'm terribly sorry, but... the answer is again - very soon.\nWe have found that \"Custom Dictionary\" feature is somewhat confusing and misleading...\nSo we are going to \"unland\" it this week. After that our API is clean and concise and 1.0 ready.\nHopefully, it is the last delay. No more \"soon\" - we will just release it =)\n. Yup. Now going through open issues. Perhaps one more will be addressed before release - building both static and dynamic libraries by CMake. It looks painful, as it will double compilation time, but, I suppose, a necessary thing.... Releasing brotli tomorrow!\nJust set one day to settle the dust of the latest changes.. :tada: Woohoo! Brotli v1.0.0 is released now :tada: . Of course. This will be my first priority next week.. It can be done,... but is there a use case for this. It is easier to make something when there is a clear goal to achieve.. Currently there is no way to speedup decoding, unless streams are completely independent -> compressed less efficiently.\nWe are working on tools that may help create custom dictionaries -> improve compression over multiple chunks.\nFor multicore compression, I am going to return what was removed, but based on new API (so, not dependent on internal details). But it will be rather a template for multicore compression - it will be a function that compress chunks, but on a single core. To make it multicore, one will be required to add OS dependent multicore wrapper.. We have some progress in that area. Will start publishing code after v1.0.7 is released.. Sorry for the long delay.. Thanks. Going to fix it soon.. We are terribly sorry for the inconveniences. It was a difficult decision that hit a lot of fans of brotli. But it has to be done to cover more use cases.\nIn some use-cases brotli encoder is an unbearable burden. So, we decided to split brotli into encoder and decoder modules. common is a part required by both of them; also, there is an alternative variant of common module that does not bring dictionary and allows loading it (for very special use-cases).. It is an unfortunate consequence: we try to avoid redundancy.. About static_dict: it is masked with 0x7F to filter out highest bit. Going to add assert + comment + expand  kBrotliDictionarySizeBitsByLength and make mask more narrow; just to be on a safe side.. As for other cases: this never can happen, according to BL (take a look at EmitXXX functions).\nWe mask with 0xFF for performance reasons (it turns to movzbl instead of real masking).\nGoing to add asserts to calm down VC++. Should be fixed with #497. #519 . Tried sharpen. Almost succeeded:\n * BitReader has problems with nio, as expected\n * InputStream is unexpectedly unknown to sharpen\nI believe, with some minimal config it will be possible to have automated org.brotli.dec to c# conversion.. +1 for C# wrapper for libbrotli\n+1 for NuGet support. Updated issue title + placed a task list into issue description. Oh, this ifdef wasn't retouched for almost 3 years.\nGoing to fix it with definitions taken from port.h very soon.. Will be fixed with #498. Fixed with #497. Going to push bigger update very soon.. Pardon?. Hello.\nThanks for the report, going to fix it ASAP.\nNB: exit on OOM is considered normal for code in production; use -DBROTLI_ENCODER_CLEANUP_ON_OOM compiler option to allow encoder finish its work and cleanup after itself.. Brotli does not use any shared mutable data; but there are no explicit memory barriers.\nSo, as long as all things with a single instance are done within one thread - it is safe; every thread may work with as many instances as it wants.\nBut as soon as instance is passed between threads, developer should take care of exclusive access to the instance and appropriate memory barriers.. I believe this model is called \"conditionally safe\".. This piece of code is very tricky; it allows continuation after break in decoding.\nWe use special value (-1) to specify that distance is not decoded yet.\nIf distance is decoded, we retake it from distance ring-buffer.\nPlease, take a look where s->dist_rb_idx is incremented and decremented. For distance == 0 it has one extra decrement, so after processing the command it remains unchanged.. Oh! I see. Thanks for the report. Going to fix that ASAP.. Fixed. Again, thank you! This bug is a new \"survival champion\" - it was introduced about 1.5 years ago =O. For testing the fix we have internally added 3 synthetic tests:\n```c++\nTEST(SynthTest, IntactDistanceRingBuffer0) {\n  uint8_t compressed[] = {\n    0x1b, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x80, 0xe3, 0xb4, 0x0d, 0x00, 0x00,\n    0x07, 0x5b, 0x26, 0x31, 0x40, 0x02, 0x00, 0xe0, 0x4e, 0x1b, 0xa1, 0x80,\n    0x20, 0x00\n  };\n  Verify(\n      R\"(\n      main_header\n      metablock_header_easy: 11, 1\n      command_inscopy_easy: 0, 7 // \"himself\" from dictionary\n      bits: \"000000\" // distance = 4 from RB; RB remains intact\n      command_inscopy_easy: 0, 4 // copy \"self\"\n      bits: \"000000\" // distance = 4 from RB; RB remains intact\n      )\",\n      compressed, sizeof(compressed),\n      BROTLI_DECODER_SUCCESS,\n      \"himselfself\");\n}\nTEST(SynthTest, IntactDistanceRingBuffer1) {\n  uint8_t compressed[] = {\n    0x1b, 0x09, 0x00, 0x00, 0x00, 0x00, 0x80, 0xe3, 0xb4, 0x0d, 0x00, 0x00,\n    0x07, 0x5b, 0x26, 0x31, 0x40, 0x02, 0x00, 0xe0, 0x4e, 0x1b, 0x21, 0xa0,\n    0x20, 0x00\n  };\n  Verify(\n      R\"(\n      main_header\n      metablock_header_easy: 10, 1\n      command_inscopy_easy: 0, 6 // \"scroll\" from dictionary\n      bits: \"100000\" // distance = 11 from RB; RB remains intact\n      command_inscopy_easy: 0, 4 // copy \"roll\"\n      bits: \"000000\" // distance = 4 from RB; RB remains intact\n      )\",\n      compressed, sizeof(compressed),\n      BROTLI_DECODER_SUCCESS,\n      \"scrollroll\");\n}\nTEST(SynthTest, IntactDistanceRingBuffer2) {\n  uint8_t compressed[] = {\n    0x1b, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x80, 0xe3, 0xb4, 0x0d, 0x00, 0x00,\n    0x07, 0x5b, 0x26, 0x31, 0x40, 0x02, 0x00, 0xe0, 0x4e, 0x1b, 0x41, 0x80,\n    0x20, 0x50, 0x10, 0x24, 0x08, 0x06\n  };\n  Verify(\n      R\"(\n      main_header\n      metablock_header_easy: 16, 1\n      command_inscopy_easy: 0, 4 // \"left\" from dictionary (index = 3 = 4 - 1)\n      bits: \"000000\" // distance = 4 from RB; RB remains intact\n      command_inscopy_easy: 0, 4 // \"data\" from dictionary (index = 6 = 11 - 5)\n      bits: \"100000\" // distance = 11 from RB; RB remains intact\n      command_inscopy_easy: 0, 4 // \"data\" from dictionary (index = 6 = 15 - 9)\n      bits: \"010000\" // distance = 15 from RB; RB remains intact\n      command_inscopy_easy: 0, 4 // \"left\" from dictionary (index = 3 = 16 - 13)\n      bits: \"110000\" // distance = 16 from RB; RB remains intact\n      )\",\n      compressed, sizeof(compressed),\n      BROTLI_DECODER_SUCCESS,\n      \"leftdatadataleft\");\n}\n```\nThe first parameter of Verify is DSL code snippet used to generate compressed.\nThe last parameter is an expected output string.. Ooops, missed the case when distance code is baked into command.. I hope, now it is finally fixed with #506 =). FYI: encoder does not use short codes (distance ring-buffer) for static dictionary entries -> all streams produced by encoder should be decodable even without fix; this fix provides better compatibility with future and third party encoders.. Hello. Sorry, this request has fallen out of my view.\nI'll give access to PyPI account soon.. Going to investigate what bureaucracy needs to be done to create google/brotli-wheels repo.. Woohoo, https://github.com/google/brotli-wheels has arrived =). No worries =). Any updates?. GZIPInputStream is based on native library. \nBrotliInputStream is a pure java implementation for platforms/products where embedding of native code is not allowed. For other platforms JNI wrapper should be used.. Meged to #483 . Hi. Thank you for help. Yup, PGI environment would be nice to have.. Thank you.. Thanks for the report. Going to fix it soon.. Released 0.1.1 with fixed structure of sources.jar\nShould become available in less than 10 hours.. \ud83d\udc4d . Hi.\nWas it ported by hand, or with some tool? It would be nice to have some (semi-)automated way to downstream changes from Java port to C#.. Managed to transpile Java decoder with sharpen. Will publish it soon.. Please take a look at #538.\nGoing to add integration test a little bit later.. Rolled back go-wrapper for now. Going to add it in next PR.. https://github.com/bcmills/brotli/tree/cbrotli/go/cbrotli. Going to be pushed with next update.. It seems to be a wrong name for the file. Actually, sources are for python-module distribution.\nWe are on the way of splitting it out to brotli-wheels subproject...\nGoing to make an add full source release artifact, and extend README ASAP.. \"Source Code\" is the right link. It contains the full copy of repo.\nIt is overweighted (19MiB),  because it contains pdf, images and other garbage.\nIn next release going to create a distilled version, with no garbage, just sources, meta, and tests.. Going to investigate ASAP (== tomorrow). Current workaround for simple build cases would be:\n * cmake . && make for static libraries\n * cmake . -DBUILD_SHARED_LIBS=ON && make for shared libraries\nDigging further, why this machinery doesn't work as expected.. Thanks for the report. Going to update readme, and, most probably, release 0.6.1 after fixing buildfiles.\nLine CMAKE_DEPENDENT_OPTION(BUILD_SHARED_LIBS \"Build shared libraries\" ON \"NOT BROTLI_BUNDLED_MODE\" OFF) is read as \"if not in bundled mode (== top level project) then, by default, set BUILD_SHARED_LIBS=ON\". For some reason, this magic didn't happen. That is what configure-cmake flag has no effect.. Oh, I have a guess what has happened! CMake is a very nasty build system. If you occasionally use it in root project folder - you poison it. CMake will cache some variables and do unexpected things based on cached values.\nThat is why there is mkdir out && cd out and mkdir out-static && cd static-out in readme.\nTo cure the poisoned repository try git reset --hard && git clean -dfx. . Going to see, if it is possible. If you point to a sample project with CMake build, that features such option, it will help greatly.. Updated cmake to build both shared and static libraries the same time. Thanks for the report.\nIs there a way to have both static and shared libraries on windows. IIUC, the problem is that on Windows the result of static and shared build are both library.lib, so they can not coexist in one place?\nGoing to try to fix the problem ASAP. Would be very grateful, if you point to the CMake project that have those problems solved, to we could grab the best practices from there.. Thanks. Going to try adding suffix soon.\nMeanwhile I've split auto-cmake and cmake build manual. I hope plain CMake scenario is possible on Windows?\nDon't know why we put all artifacts to bin on Windows; most likely it for historical reasons =) going to update libraries installation path very soon.. I forsee one drawback with building shared+static. Unfortenately, currently we have to stick to CMake 2.8.6. This means that we can not use OBJECT libraries implemented in 2.8.8. As a consequence, sources will be compiled twice.... Max, could you take a look at #544.\nI've unified libraries installation across platforms. But there is an open question, what to do with includes.... Hello, Max.\nCan't remember for sure, if all the problems have been resolved... Please, write back if there is something still to be done.\nNow we are preparing to release v1.0.0 (finally)... so it is time to put build scripts to the perfect state =). Thanks for the reporting.\nUpdated readme and cmake configuration. Please respond if it works better now. Thanks.. BUILD_SHARED_LIBS=OFF is no-op now. Removing it from options renders your command sequence to be exactly the same as one given in readme.. Don't know for sure. It never has been.... Gr\u00fc\u00dfe, Stefan. Thanks for the PR.\nIs it a standalone change, or releasing of new artifact version is required?. Going to push a little update to decoder soon that provides 5-25% speedup and publish new artifact right after that. Hopefully, this will happen tomorrow.. Just released 0.1.2. Hello. Thanks for the PR!\nJust returned from vacation. Going to review your PR this week.. Hi. Sorry for the super-long review. Will get back to you as soon as get results from internal reviewer.. Thanks for the suggestion, but we tend to keep brotli compressor pure.\nThis is a feature for brotli framing format: #462.\nCould you place your FR into framing format discussion, please.. Thanks for the heads-up. Going to investigate it deeper in early June.. Slowdown on all-zeroes data will be fixed with #590\nFor generic data we expect that \"1MB+\" heuristic provides both faster and denser compression.. Thanks! :+1: . Thank you, Tino!\nAdded link to README.md.. Thanks.. Unfortunately, we don't have such information.\nTheoretically, if IE provides provides proper API, some kind of extension could be created.\nMost probably there is such API, because it is required for Anti-Malware to work.\nThe problem is - we don't have enough resources to develop \"br\" extension for IE =(. The fix looks good. I think it is better to have slightly more explicit checks than loose a chance, when compiler finds a real issue =). Going to pick the fix to v0.6 branch. Sorry for the late response. Lets change the order in the platforms list, so Win64 is listed first (and becomes the default).. Also adding \"platform\" blows the configuration matrix.\nNow for linux/gmake there will be:\n * release_win32\n * release_win64\n * debug_win32\n * debug_win64\nSounds ridiculous. So, lets get rid of \"win\" prefix.. There is a nice example how to specify architecture on premake wiki: https://github.com/premake/premake-core/wiki/architecture. Nice catch! Going to fix it ASAP.. Will get fixed with #569\nThanks again!. Hello. Thank you for your interest to brotli project.\nIn verbose mode CLI should provide some information useful to users: compression progress, ratio, speed, etc. Currently it is not implemented, just reserved, to make CLI more stable.\nFormat explanation is very different, and affects performance, even when off. brotlidump is the best choice for that. But it requires some care, as it might not work out of the box.\nIf you would like to invest your time/efforts in this direction, we would be grateful, if you work on brotlidump improvements.. Thanks!. Nice idea! Going to implement it next month.. Will be implemented with #590. Thanks for the report, going to investigate it ASAP.\nI would be grateful, if you attach an example of such file.\nAlso, target CPU model, compiler version and compilation options would help.. Failed to reproduce on my Mac / linux workstation =(\nCould you, please, attach results of cc -v and env for mac / linux.\nI feel that something could go wrong about bitness / signedness, but without repro can't test it / fix it.. In fresh debian:sid in docker on mac all is clean:\nroot@974f56b46700:/clients/brotli# bin/brotli -Zfk balls.txt \nroot@974f56b46700:/clients/brotli# env\nHOSTNAME=974f56b46700\nPWD=/clients/brotli\nHOME=/root\nno_proxy=*.local, 169.254/16\nTERM=xterm\nSHLVL=1\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n_=/usr/bin/env\nOLDPWD=/clients\nroot@974f56b46700:/clients/brotli# cc -v\nUsing built-in specs.\nCOLLECT_GCC=cc\nCOLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/6/lto-wrapper\nTarget: x86_64-linux-gnu\nConfigured with: ../src/configure -v --with-pkgversion='Debian 6.4.0-2' --with-bugurl=file:///usr/share/doc/gcc-6/README.Bugs --enable-languages=c,ada,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-6 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --enable-default-pie --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-6-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-6-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-6-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --with-target-system-zlib --enable-objc-gc=auto --enable-multiarch --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu\nThread model: posix\ngcc version 6.4.0 20170724 (Debian 6.4.0-2). It seems to be some derivative of debian:sid - there are Java, Python, Go, Node and Emscripten (my main suspect). Is there a public image that I could use to get the same environment?. Instructions to recreate image would be nice. Hopefully, they would apply to Sierra 10.12.5.. Ping?. Still no luck with repro =(\nCould you attach the debug log (compile with export CFLAGS=\"-DBIT_WRITER_DEBUG\") for ./bin/brotli -Zfk balls.txt\nMine is attached: bits.txt\n. Any updates?. Indeed, something is wrong with build script. On osx it does not build when aforementioned command sequence is executed.\n/brotli$make brotli\ncc -v bin/obj/c/common/dictionary.o bin/obj/c/dec/bit_reader.o bin/obj/c/dec/decode.o bin/obj/c/dec/huffman.o bin/obj/c/dec/state.o bin/obj/c/enc/backward_references.o bin/obj/c/enc/backward_references_hq.o bin/obj/c/enc/bit_cost.o bin/obj/c/enc/block_splitter.o bin/obj/c/enc/brotli_bit_stream.o bin/obj/c/enc/cluster.o bin/obj/c/enc/compress_fragment.o bin/obj/c/enc/compress_fragment_two_pass.o bin/obj/c/enc/dictionary_hash.o bin/obj/c/enc/encode.o bin/obj/c/enc/entropy_encode.o bin/obj/c/enc/histogram.o bin/obj/c/enc/literal_cost.o bin/obj/c/enc/memory.o bin/obj/c/enc/metablock.o bin/obj/c/enc/static_dict.o bin/obj/c/enc/utf8_util.o bin/obj/c/tools/brotli.o -lm -o bin/brotli\nApple LLVM version 9.1.0 (clang-902.0.39.2)\nTarget: x86_64-apple-darwin17.7.0\nThread model: posix\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\n \"/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld\" -demangle -lto_library /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/libLTO.dylib -dynamic -arch x86_64 -macosx_version_min 10.13.0 -syslibroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk -o bin/brotli bin/obj/c/common/dictionary.o bin/obj/c/dec/bit_reader.o bin/obj/c/dec/decode.o bin/obj/c/dec/huffman.o bin/obj/c/dec/state.o bin/obj/c/enc/backward_references.o bin/obj/c/enc/backward_references_hq.o bin/obj/c/enc/bit_cost.o bin/obj/c/enc/block_splitter.o bin/obj/c/enc/brotli_bit_stream.o bin/obj/c/enc/cluster.o bin/obj/c/enc/compress_fragment.o bin/obj/c/enc/compress_fragment_two_pass.o bin/obj/c/enc/dictionary_hash.o bin/obj/c/enc/encode.o bin/obj/c/enc/entropy_encode.o bin/obj/c/enc/histogram.o bin/obj/c/enc/literal_cost.o bin/obj/c/enc/memory.o bin/obj/c/enc/metablock.o bin/obj/c/enc/static_dict.o bin/obj/c/enc/utf8_util.o bin/obj/c/tools/brotli.o -lm -L/usr/local/lib -lSystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/9.1.0/lib/darwin/libclang_rt.osx.a\nUndefined symbols for architecture x86_64:\n  \"_BrotliDecoderSetCustomDictionary\", referenced from:\n      _main in brotli.o\n  \"_BrotliEncoderSetCustomDictionary\", referenced from:\n      _main in brotli.o\nld: symbol(s) not found for architecture x86_64\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\nmake: *** [brotli] Error 1. I believe \"make\" gets confused and does not recompile required sources. Invoking 'make clean' after checkout fixes the problem. Hopefully, automake / CMake / premake5 / Bazel does not have that kind of problem.. Could this reside not in root directory?. Going to investigate it on Monday.. Haven't done investivation, just inspected the code.\nThis loop looks suspicious: https://github.com/MayhemYDG/iltorb/blob/master/src/enc/stream_encode_worker.cc#L25\nSee - no output space is given; if it happens, that internal brotli output buffer is full - it can't continue processing... so it becomes infinite loop...\nOuter wrapper also doesn't care, if chunk is too big to make \"StreamEncodeWorker\" choke.... Thanks for the report. Going to investigate/fix soon. Could you provide sample CircleCI configuration, please?. Hi. Could you try this once again? Now both static and shared libraries are built.\ncgo.go will hook up with shared libraries, though.. Look like \"static\" libraries have to be installed / copied in specific locations so that compiler could find them...\nIs it possible to create a clean repro case - i.e. script that could end up in compilation failure, similar to this or this?. But it does so =) since #555 (29/05/2017). Hello, Paul.\nUnfortunately, I haven't found any information on how non-gmail users can sign CLA. Perhaps, one possible way could be \"Corparate CLA\", but it seems to be more difficult.... Travis seems to be unhappy: https://travis-ci.org/google/brotli/jobs/266735082. Included into ##598. Releasing executable is a slippery road - there are tons of different OS / CPUs. Releasing for some of combinations would make people unhappy, that their favorite combination is not supported.\nThat is why binaries are released via appropriate binary distribution systems, e.g. HomeBrew or PyPI or linux distros.\nIf you have some specific OS / CPU in mind, we would be glad to try to support specific binary distribution system.. After #596 windows binaries will be accessible as build artifacts.. Latest build could be taken from here: https://bintray.com/eustas/brotli/bin/snapshot/view/files?sort=name&order=asc#files/\nNext release will contain those artifacts as well.. \"Next release\" happened on Sep 21, 2017. It actually contains windows artifacts: https://github.com/google/brotli/releases/tag/v1.0.0\nLater (1.0.1 and 1.0.2) are minor sub-releases, mostly concenred about non-Windows build tools.\nGoing to attach windows artifacts to the next sub-release (1.0.3) when it is ready.. Hello.\n Most distros pick up v0.6 release of brotli, and in this version CLI tool was named \"bro\". In tip-of-tree version it is \"brotli\". In one week (hopefully) brotli v1.0 will be released, and distros will start picking up brotli with fixed name.. Absolutely no worries and thanks for the heads-up.. Surely. I'll update README.md to reflect that default build with configure-cmake is \"Debug\".\nIt is mentioned inside configure-cmake, that this is done to reflect default automake behaviour.... To make API concise and clear for v1.0.0 release.\nInternally we are developing a better alternative, and will public it soon.. v1.0 means \"stable\". All the existing API are stable and cover the most useful use-cases.\nIn future versions (v1.x), we plan to add more functions, but the API that is released in v1.0 will be untouched.. Going to investigate and extend binary downloads soon.\nYes, JNI is always a pain.\nBazel was a big hope, as it, at least, works both on OSX and linux (still not on windows)... but even on those platforms, JNI requires hacks: https://github.com/bazelbuild/bazel/issues/3079. Working on this.\nIn the meanwhile, just to be sure: have you built jni library, or just brotli common/dec/enc libraries? Currently only Bazel builds it, so CMake/premake/make is not enough.... Those libraries are not enough. Going to add \"all-in-one\" statically linked brotli_jni.dll as soon as convince bazel to run tests properly on Appveyor.. PR #612 adds brotli_jni.dll publishing.. Could you try if this precompiled brotli_jni.dll works for you, please. Thanks.. Going to dig into this problem soon. What build system do you use?. This works for me:\nmkdir out\ncd out\n../configure-cmake --disable-debug\ncmake ..\nmake -j8\nmake test\nmake install\ncd ..\nAfter this include/library not found errors do not occur:\ngo build ./go/cbrotli. I fear, I don't know any.\nGoing to investigate what is godep soon =). Even if godep save would finish successfully, it seem that it wouldn't work anyways: https://github.com/tools/godep/issues/422. Merging with similar issue #585 . Thanks. This is a known problem. We work on this topic. Next brotli version will support more (all) languages.. 1) False positive; Coverity Scan fails to analyse workflow; it is guaranteed that at the stage when ProcessCommands is invoked ring-buffer is allocated.\n2) Same.\nTake a look at BrotliEnsureRingBuffer and its invocation points in the workflow.. Hello.\nThanks for your PR!\nCurrently it do not compile:\nc/enc/././fast_log.h:16:8: error: C++ style comments are not allowed in ISO C90\n  #endif // defined(_MSC_VER)\n         ^^^^^^^^^^^^^^^^^^^^\nBesides that, we try to keep \"portabililty\" layer in port.h file. Currently, for encoder, there are 2 exclusions: 'fast log 2' and 'find match length'. Going to comb them in near future as well. Would you mind if I move your improvement to port.h?\n. @robryk, @bagder, could you take a look, please.. Done. Thanks.. Thanks for the report. Going to switch to plain shell + expr. Will it be better?. Thanks!. Hello. Will gladly do this, when I have spare cycles =). Hi. Sorry, haven't had time for this yet =(. Thanks!. No. Brotli is a bare data stream format, so we decided to make it an error, if something goes after a stream.\nThe good news, is that we are working on framing format, that (likely) will provide such ability... and much more =) (with some overhead being paid, of course).. The problem with \"catable\" brotli is that it is impossible to prove that given file is \"catable\" without fully decompressing it.\nInternally we have encoder that allows parallel encoding, i.e. encoders could produce streams that could be appended one after another... And going to publish that soon. Of course that is different story... But it does not ignore matches in dictionary and this might produce denser stream.\nBTW, thank you, Daniel for developing rust-brotli, that is awesome project!. Thanks!. There are 2 main reasons:\n * the name / location of JNI library (if any) depends on build system\n * often, to avoid tricky problems, all JNI code is compiled into a single library per app; thus, it is impossible to know before-head what to load\nThe solution is to let developer decide, when and what library to load. For testing we use a simple but flexible stub: https://github.com/google/brotli/blob/master/java/org/brotli/integration/BrotliJniTestBase.java#L10. Yup.\nIt is possible to write a generalized stub, but it is a little bit scary, because:\n * AFAIK there is no formal agreement for naming vendor-specific system properties (e.g. BROTLI_JNI_LIBRARY)\n * system property could be altered by attacker -> could cause arbitrary code execution (via DLL initialization). Thanks for the report, investigation and a sample file.\nGoing to analyse it soon.. Hello.\nI'm terribly sorry - I haven't had time to analyze the roots of the problem. So I will keep this issue open.\nOn the bright side - the last update have improved the situation. Here are the results of measurements, comparing brotli before and after the last commit.\n| command | old time | old size | new time | new size |\n| --- | ---: | ---: | ---: | ---: |\n| brotli -6fkw 24 none | 0:35.5 | 2'550'550 | 0:11.9 | 2'435'211 |\n| brotli -9fkw 24 none | 0:39.7 | 2'405'886 | 0:28.6 | 2'384'885 |\n| brotli -Zfkw 24 none | 4:30.0 | 2'215'919 | 5:24.7 | 2'187'911 |\nSpeed misbalance is fixed and compression ratio is improved =)\n. We have plans for it, but not sure, when it will be implemented.... Duplicate of #405 . Doesn't libbrotlidec_la_LIBADD = libbrotlicommon.la -lm and libbrotlienc_la_LIBADD = libbrotlicommon.la -lm do that?. Oh, it is not in 1.0.2! Going to release 1.0.3 very soon.. Thank you, Daniel.. Looks nice! I'll try to fix travis java builds soon and then land this PR. Thanks!\nJust one question - what is \"c\" function/macro (line 540)?. Hello.\nCurrently we are testing \"Large Window Brotli\" extension that will allow up to 1GiB window.\nHopefully, it will be published this week.. \"Large Window Brotli\" is landed.\nWe constantly work to make quality=11 denser. You could play with some internal constants, but, most likely they won't provide big improvement.\nTo give a more specific advice, I have to know the use case.... Many thanks and kudos to Martin Raszyk who implemented \"Large Window Brotli\" and other improvements to brotli!. Hello.\nJNI wrappers are currently not supported in CMake build.\n You could try using Bazel: bazel build -c opt java/org/brotli/wrapper/...:all, or pick up prebuilt artifacts from bintray (only for windows). Just added windows binaries for v1.0.3, going to release v1.0.4 soon, and it will also feature windows binaries.\nAdded project to create JNI binaries as well (volunteers wanted).. As before, it is possible to create something like makeExe.bat, though it now will be longer =)\nIn this article I describe an easy way to cross-compile for windows, with minimal requirements: just bash and docker. I think it is possible to reduce it just to docker; all the things done in bash is generation of 4 small files and launch of docker.\nUsing icl is difficult for legal reasons - IIRC, Intel prohibits to publish the results of compilation of opensource projects by corporate users =(\nAlso there is no easy way to install ICL without a key.... Recently we have published \"large window brotli\" feature. Now window could be up to 30 bits. Perhaps this limit will be changed in future; 30 is chosen as a balance between utility and simplicity of implementation.. To make sure that admins do not start using \"large window brotli\" for http, we made it accessible only from API in v1.0.3\nIn v1.0.4 (and current tip of the tree) it is possible to use the feature from CLI.\nI agree, fair use is a good thing. But evaluation- and integration testing-wise the licensing is done the wrong way. One can not use icl from docker container or run it on TravisCI, just to make sure the source code compiles well on their compiler.... Thank you, Tobe!. Is there a configuration where current macros do the wrong thing, i.e.:\n * _WIN32 defined and there is no declspec import / export?\n * _WIN32 is not defined, but declspec import / export should be set?. Please add it to setup.py as well and singn CLA =)\nAlso I add this line to both files in the next update, if you don't mind.... Thanks again! Merged as a part of #651. Going to investigate ASAP (on Thursday). Plain clang sanitizer does not catch the problem. Trying QEMU + chroot for emulating armhf.... Failed to emulate with QEMU + chroot, but managed to do it with docker.\nStill, emulation seems to be weak - wasn't able to reproduce the bug.\nAttached the binary I got by cross-compiling to arm32v7 under aarch64. I would appreciate if you test it in your environment, e.g. brotli -Zfkw 10 some-compressible-file. Also it would be nice if you share the executable which fails, so I would be able to play with it. Thanks.\nbrotli.gz\n. Got RPi3 into my hands. Unfortunately, it thinks that it is BCM2709 (armv7) instead of BCM2837 (armv8 / aarch64). Is there an easy way to fix it?. Running openSUSE (aarch64)  on RPi3. Looking for the ways to simulate what sbuild does, i.e. cross-compile and run (32-bit) armhf binary.. Was able to reproduce. Fails in platform.h:200. BrotliUnalignedWrite64. Going to dig why it is triggered in armhf under aarch64 build.. It seems that problem is not with any unaligned memory access, but specific to 64-bit read/write in 32-bit mode. Going to see if there is elegant workaround for this.. According to How does the ARM Compiler support unaligned accesses?:\n```\nInstructions which do NOT support unaligned accesses include:\nLDM/STM\nLDRD/STRD\n```\nActually, LDRD / STRD are emitted for BrotliUnalignedXxx64.. Should be fixed with #656. Going to release v1.0.4 soon. Changes released in v1.0.4. Going to look at this soon. Most likely, we will have to explicitly disable this warning.. Going to push the fix to github in few hours. Sorry for the delay.. Should be fixed with #651. I believe CMake 2.8.6 do not recognize LANGUAGES keyword. We can omit it, because there is no VERSION part.. Thanks!. Can not reproduce.\nWhat I do:\n```\ndocker run -it debian:testing bash\nfrom now on, we are inside the container\napt-get update\napt-get install gcc \"g++\" make autoconf libtool bc git\nconfirm\ncd home\ngit clone http://github.com/google/brotli\ncd brotli\ngit checkout da254cffdb160bd6ac1cd6ea01944099978cbb71\nthat is a commit before large-window\n./bootstrap\n./configure\nmake\nmake install\ngit clean -dfx\ngit checkout master\n./bootstrap\n./configure\nmake\n```\nTried replacing AM_CFLAGS with AM_CPPFLAGS, but found that the place where -Ixxx is inserted is not changed.\nCould you provide the steps to reproduce the problem?\n. Can't remember the full motivation, but we moved to static+shared build in #599.\nEvery output artifact is produced by a separate build target, so building just static libraries is easy:\nmake brotlidec-static brotlienc-static. Perhaps the change was done to fix #542. Going to dig in further. Conceptually, there are no \"contra\" against this shared/static switch, while all parties (developers/distros) are happy =). Here is a commit that would allow disabling shared/static libraries build (or both =). WDYT?. I think the reason to have both shared and static is that brotli tool is build \"static\" (for grab-and-go scenario), but libraries are \"shared\", because it is what they are created for.... Hello.\nCustom dictionaries are supported by \"shared-brotli\" (see corresponding branch). Soon \"shared-brotli\" will be merged to master branch.\nPerhaps \"brotli --verbose --help\", because currently this option is not widely advertised, to avoid misusage of this option.. 100% agree - all public macros should have specific BROTLI_ prefix. Going to fix soon.\nThanks!. Using Hedley / parts of Hedley would be nice, but, I'm afraid, \"public domain\" license is not allowed =(\nGoing to see if this could be overcome.. #662 deals with unprefixed macros in public headers. Going to pick Hedley as a replacement for \"modern compiler\" soon.. I think I'd pickup actually used parts of Hedley and change prefix. Of course with links, references and kudos to original project author =). pip 10.0.1 is ill =(. Thanks!. Seems to be a dupe of #484. Looks good! Though it would be nice to test on real CPU. In my experience qemu does not bother checking unaligned memory access.... Looks confusing. Compiler says that result of | operator with two uint16_t operands is int.\nGoing to dig in that soon.. Should be fixed now. If not, feel free to reopen with new error log =). What is the OS / CPU?\nActually, decoder takes care of alignment: https://github.com/google/brotli/blob/f9b8c02673c576a3e807edbf3a9328e9e7af6d7c/c/dec/bit_reader.c#L37\nGoing to investigate the problem soon.. Can't reproduce.\nIf you like, I can share modified research/brotli_decoder.c which reads from mmapped file from given offset, so you could check if it crashes as well.. I've published branch with demo mmaped file decoder: https://github.com/google/brotli/tree/mmap-read\nCould you provide file and offeset that would crash it, please.. Didn't know that there is Bazel build for nginx =)\nGoing to investigate soon.. I have a simple explanation now: googlesource ngx_brotli differs from github ngx_brotli.\nGoing to add Bazel WORKSPACE / BUILD to eustas/ngx_brotli soon.\nWould appreciate if you close this issue here and create it at eustas/ngx_brotli instead. Thanks!. Hmm. Error says that there is problem with golang Bazel plugin. Going to try to update it to the latest version.. Updated golang/JS bazel plugins to latest stable (#676); not sure if this will help; going to try building nginx with newer brotli later.. Oh, this looks like Bazel issue =( https://github.com/bazelbuild/bazel/issues/2391\nIn short: if in project A WORKSPACE something is defined, then project B that uses project A have to have same definition in WORKSPACE.\nAt referenced commit WORKSPACE was almost empty, just junit maven artifact reference. Now it has much more...\nGoing to investigate if there is a way to trick Bazel.. Could you try if #677 works for you?. Landed PR #677.. Going to do that soon. Thanks for reporting.. It would make sense if native brotli would support that. Currently it is not.\nOverall initialization is very cheap, not sure if is make much sense, especially within GC-ed memory environments.. Going to deal with that soon.. Fortunately, all the warnings, except string format are \"false positives\". Going to apply appropriate casts for debug output values soon.. I'll check in on Monday. Alternatively, it could be moved from c/fuzz, to fuzz/ or somewhere else.. Release is postponed a little bit; oss-fuzz failed to build the new binary (clang++ said that it does not like std=c99, and then clang failed to link with c++ fuzzer library)... Hopefully all things will work together on this weekend -> v1.0.5 will be released on Monday.. Sorry for the long delay. Going to take care of this today. Moving/renaming files requires changes in oss-fuzz repo as well.... Going to try to reproduce next week.. Going to add VS2017 x64 debug and release builds to Appveyor matrix soon to see if it works.. Seems to work: build / test log\nCould you try to build dlls with CMake generated project?\nWhat optimization options are used?. (currently Travis have problems connecting to ppa containing gcc-7). Preparing one more feature for 1.0.5, hopefully will release it this week =). Sure. Perhaps with a little bit different enclosure, i.e.\nif shared\n  if win32\n    XXX\n  else\n    YYY\nelse\n  ZZZ. Should be fixed with #688 . Hello.\nCould you elaborate, please? What are \"optimal\" truncation points?\nBrotli decoder is built in a way to decode all the input bytes it has been provided so far. Every \"flush\" will add overhead, and is only useful for dynamic packaged networking, where it is important to give guarantees that all the encoded bytes will be decoded on the other size (i.e. nothing is \"buffered\").... You could use Python wrapper. It's API is close to C API, but allows quick experiments.. LGTM, modulo making go/BUILD an empty file. Let's add at least a comment there that this is a golang brotli package.. Thanks!. No, this file is checked in intentionally. This is a brotli RFC dictionary compressed without using brotli RFC dictionary.\nSo it is possible to get dictionary-less brotli decoder, decode this file, supply result to decoder to obtain fully-featured decoder.. Going to dig into it on Monday.\nUnfortunately, there is no publicly available icc, so this might be very difficult =(. I've asked Intel. Unfortunately, as a Google employee I can not qualify as open-source developer =(. Found a way around the license limitations: https://godbolt.org/\nBut currently both icc 18.0.0 and 19.0.0 work well for sample piece of code. Going to play with compilation options.... BTW godbolt gives a clue why MSVC-compiled code could be 2x slower - compiler simply ignores inlining request.\n... Never mind. It inlines only when \"-O\" option is passed, while other compilers do it without options.. -m32 does not break the build. Perhaps there is something poisonous injected by CMake.\nTo debug this it would be nice to have more verbose output and, ideally, preprocessed platform.h.... (github ate my comments )=\nIn short - it is possible to try icc using godbolt. (Un)fortunately, it compiles code snippets well -> CMake/msbuild do something outrageous... To debug this, verbose output and, ideally, preprocessed platform.h is required.. It is 30 days, but:\n * that is not so straightforward for \"corp\" engineers\n * bug is likely to be OS dependent - i.e. windows machine setup is also required, but only osx / linux machines are easily available. Last ~50 lines of icc -E -dM -Iinclude common/platform.h would shed the light on the problem.\nAlso full output of icc -E -Iinclude common/platform.h would be useful.\n(both commands run in brotli/c directory). Thanks!. Those are, actually, false-positives. https://scan.coverity.com/projects/google-brotli/view_defects\nCoverity Scan, unfortunately, does not understand the concept of C89 templates.\nCompiler will remove those pieces where they are really always-true, no need to worry about that.\n. No worries. Thanks for the heads-up!. Dictionary is freestanding.\nThere is dictionary_generator tool in research/ that generates dictionaries.\nCurrently there is only Bazel build file for the tool.\nGoing to add CMake, make, etc. build files soon and move the tool to c/tools/. @nemequ I've checked, it surely seems it should be 5.15.0.... Will fix soon.. Ooops, this fall of my radar. Going to fix ASAP. Thanks for reporting and patience.. Hello. Thank you for the patch.\nWe try to keep different concepts separate, so it would be better to split BROTLI_TARGET_ARMV8 into BROTLI_TARGET_ARMV8_32 and BROTLI_TARGET_ARMV8_64 instead of making complex ifdef condition.. Sorry for the late response.\nThanks, now patch is nearly ideal! One last thing to fix is to guard __attribute__((aligned(x))).\nUnfortunately, can not find exact compiler versions that support it.\nWith clang it is easy, it has that nice has_attribute...\nFor GCC we can set 2.7, according to https://ohse.de/uwe/articles/gcc-attributes.html\nFor other compilers... wait until someone complains =). LGTM.\n@jan-wassenberg, could you also take a look, please.. Thanks again!. Sorry, landed too soon. Yes, lets proceed with attribute(aligned) + memcpy fallback.. Hello. Unfortunately we do not have time now to produce high-quality JavaScript encoder =(\nBut you can try to use emscripten to compile c to JS.\nEven better - there is an NPM package that contains emscriptified brotli encoder: https://www.npmjs.com/package/brotli. Thanks!. Let's do it in smaller steps:\n 1) define BROTLI_ALIGNED(N) for compilers that know the attibute\n 2) implement accessors for HuffmanCode fields and use them everywhere (preferably macro, so it will be visible, that there is some magic around)\n 3) declare HuffmanCode depending on platform to be either struct, or uint32_t; add alternative accessors. Correct. Thanks!. Hello. At last I've back to the brotli project. Sorry for the very long waiting time. Going to look at your PR soon. Thanks.. Using uint32_t on x86_64 results 0.3% slowdown... That is why it wasn't on-boarded in 2015... So, yep, lets currently stick with if-def alternatives. Almost everything  is nice, but:\n * let's look for nicer macro names (prepare for access / update)\n * perhaps, replace setters with \"make\"; it would require more logic changes in huffman.c, but will avoid the confusion when get takes pointer, but set takes struct.. Almost perfect! (and sorry for slow / thorough reviews). Thanks.. Thanks. Going to see what's wrong with travis and merge soon.. Hi. Please rebase the PR. I've just fixed CI.. Nice!\nUnfortunately, for some reason Appveyor build is unhappy: https://ci.appveyor.com/project/szabadka/brotli/build/1.0.0%231360. Thanks.. Lets reuse BROTLI_MAX_BACKWARD_LIMIT macro to avoid magic numbers =). Thanks!. Hi. Not sure if I understood the question correctly.\nHere is RFC that describes the file format: https://tools.ietf.org/html/rfc7932\nHere is an article, that compares brotli to other formats: https://github.com/google/brotli/blob/master/docs/brotli-comparison-study-2015-09-22.pdf\nUnfortunately, the internals of brotli encoder are not described in any article; on the bright side, brotli encoder is built on the base of widely used algorithms:\n * hash table for finding backward references\n * binary search tree as an alternative way looking for backward references\n * dynamic programing for optimizing copy-insert sequence\n * priority queue for gradual histogram clustering. Thanks!. In this PR BROTLI_TARGET_NEON is used before its definition is included... So... when neon codepath is enabled, <arm_neon.h> is not included...\nGoing to fix very soon.. Hello.\n I've planned rolling of \"shared brotli\" to master in Q4. Java decoder will also get the update, and it will be the perfect timing for releasing new version of Java library.... Hopefully brotli v1.0.7 will be released today; Java brotli release will follow soon.. But IIRC, there is almost no changes to Java decoder since last release.. Unfortunately, bug is not very descriptive. Could you attach the payload that does not decompress?\nIn the meanwhile, v1.0.7 is released, so now it is perfect time to fix java decoder, before java build is released.... Does not reproduce.\nSteps:\n * download https://www.google.com main document with br encoding (in Chrome DevTools, Network Panel, right click, \"copy\", \"copy as cURL\"; then paste in terminal and append >> google.br)\n * check out brotli to \"switch version\" commit aaac88a\n * add file java/dec/Main.java\npackage org.brotli.dec;\npublic class Main {\n  public static void main(String[] args) throws java.io.IOException {\n    BrotliInputStream bis = new BrotliInputStream(new java.io.FileInputStream(args[0]));\n    byte[] buffer = new byte[16384];\n    int len = 0, total = 0;\n    while ((len = bis.read(buffer)) != -1) total += len;\n    System.out.println(total);\n    bis.close();\n  }\n}\n * added build rule to java/dec/BUILD:\njava_binary(\n    name = \"main\",\n    main_class = \"org.brotli.dec.Main\",\n    runtime_deps = [\":lib\"],\n)\n * build binary: bazel build java/dec:all\n * run binary bazel-bin/java/dec/main google.br\nResult of execution: number that corresponds to uncompressed size. For me it is the same as produced by C decoder. No exceptions -> decompression finished normally.\n. BTW, though there is no \"bug-fixes\" to decoder, the new version should become faster, slimmer, and won't suffer from JDK 8 <-> 9 incompatibility (NoSuchMethodError for ByteBuffer methods). Phew, then Java release is unblocked =)\nGoing to prepare and publish \"large window\" mode then, to make Java decoder in par with C one, and then release version 0.2.0.. Sorry, was busy working on pik / JPEG XL. Hopefully, will have time for brotli in mid-February.. Ooops. Thanks for the heads-up.. That is a slippery feature:\n * not for every input it is possible to know its length; for file system it is almost certainly possible, but if someone appends to file being compressed some nasty behavior might occur\n* there is no nice and platform-independent way to show progress in console\n  * one method is to draw scale first and then add \"ticks\" below, as processing is progressing; but this way 2 lines of output are used for progress bar + 1 for final results; also it depends on available width of console\n  * the other way is to rewrite output via \\r; that is less portable, as it requires terminal to support this; and again, the width of console comes in play... and it might change over time, you know...\nCould you point to the program whose progress report you liked the best, please?. https://github.com/apache/httpd/blob/trunk/modules/filters/mod_brotli.c ?. Thanks, Jan!. Surely, but a little bit later.. Brotli is a \"stream\" format, so it does not keep original filename & modification time (unlike gzip).\nFuture \"brotli-framing-format\" allows storing this metadata + other cool stuff.. There is a little problem. Most utilities scan first file bytes and compare them against \"magic\" bytes.\nWell,... for brotli 254 of 256 byte values are valid as the first file byte.\nBrotli was designed to be \"stream\" format rather than file format. There is a \"brotli-framing-format\" project that adds tons of features (including \"magic header bytes\")... but it is not public yet.. gzip is a wrapper for deflate streams. Would be confusing, if help says compression level (0-9) (default: 11)\nLet's only update -q section and alter -Z section, so it does not mention that it is default.. Surely. Will implement that soon (when get some free cycles =). Currently CLI prints something to stdout only for --help and --version, i.e. when user directly requested some output.\nFor \"verbose\" + \"test\" options stderr seems to be the only right destination, to make it consistent with other \"verbose\" outputs.. Luckily, the last character is \\0. We can just remove it... Will fix very soon.. Will fix soon. Thanks for the report.. Interesting, autoconf have had a regression between 2.66 and 2.68 for \"?\" in urls... But 2.63 is even older and might be more buggier =). Could you check, if this helps, please:\ncurl -L -O http://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz\ntar zxf autoconf-2.69.tar.gz\ncd autoconf-2.69\nyum install -y openssl-devel\n./configure\nmake && make install. This change is equivalent to:\nBROTLI_BOOL BrotliIsMostlyUTF8(\n     const uint8_t* data, const size_t pos, const size_t mask,       const uint8_t* data, const size_t pos, const size_t mask,\n     const size_t length, const double min_fraction) {       const size_t length, const double min_fraction) {\n  return BROTLI_TRUE;\n}\nand completely removing BrotliParseAsUTF8. And it will be even faster... But incorrect. This method is used to check if the compressed data is \"mostly utf-8 data\". So if your text data is textual -> result will be the same. But if it is something different, e.g. binary... compression density might suffer.. In benchmark sample file is 44x same piece of text. Of course BrotliIsMostlyUTF8 will show up on top: compressor does not do anything useful, it just copies text over and over in gigantic chunks.. I believe https://github.com/google/brotli/tree/master/java/org/brotli/wrapper/enc is exactly what you want =) Especially Encoder.compress (see https://github.com/google/brotli/blob/master/java/org/brotli/wrapper/enc/Encoder.java#L202). I would recommend to read RFC first. Next Java decoder is much smaller than C and much easier to read and understand. Next goes C decoder, full of hacks. And the last topic would be C encoder, also loaded with hacks.... Brotli have to do that. This piece of memory is allocated for \"ring-buffer\". It is possible to have smaller ring-buffer if it is not in use: just force files to be compressed with smaller \"window\". Minimal window is 1024 bytes, but it will still have some tail (+42 bytes).\nAlso, if possible, avoid allocating \"output buffer\"; TakeOutput API allows reading ready output directly from the ring-buffer.\nTip: using BROTLI_DECODER_PARAM_DISABLE_RING_BUFFER_REALLOCATION guarantees that ringbuffer is not reallocated -> might reduce peak memory usage.\nPS: sorry for ultra-long answer; very busy with JPEG XL.... Perhaps, it is better to remove duplicating \"for\" initializer instead. MSVC is a little bit picky about \"uninitialized\" variables.... Hello. Yes, this is \"official\". It is transpiled from Java decoder and will get all its features.\nSome speedups are already in internal repo and not yet published; large window and dictionary support is also on the way to release =)\nUsage example could be seen in test code: https://github.com/google/brotli/blob/master/js/decode_test.js\nAlso internally we have CLI wrapper for node.js, but it is not release quality, and mostly used for testing.... Thanks. Will fix soon.. We would be glad to support a wide range of compilers...\nIn what way generated code is incorrect? What version of GCC is used by MinGW 4.5.4?. Hello. Thanks for reporting, but that is a \"false positive\".\nOnce BROTLI_IS_OOM returns false, it will return false ever after (or crash the app in the first place, depends on compilation options).\nSo, if in line 1099 NULL is returned, then line 1102 can not be reached (because of the check in line 1101).. Why do not use GLOB? (And have policy that common/, dec/ and enc/ may contain only files to be built)\n. I think using BrotliEncoderTakeOutput is preferable in wrappers workflow.\nIt has 2 useful features:\n- choosing size, allocating and freeing intermediate output buffer is not required anymore\n- one less memcpy (from internal brotli buffer to intermediate output buffer)\n. Going to investigate that.\n. Found the problem: \"take output\" does not transition out from \"flush requested\" state.\nGoing to fix ASAP.\n. available_in and next_in are reset at the beginning of the loop.\nThis will cause almost infinite loop, if output does not fit internal encoder buffer...\n. According to contract, it should not be changed -> no need to reassign it =)\n. Fair point. Done.. Done.. Fixed.. plain C habit =). Done. Nice!. Fixed. :+1: . You are right. But this \"continue\" is added for readability, so workflow (without reading details) is clear: \"push while we have something to push\".. Thanks.. Done. But isn't it a singleton error variable?. Don't know. Perhaps there is implicit set -e in travis.... Tested; yup, || exit 1 is required to stop the build.. written == 0 doesn't mean that all input is consumed. This might mean that encoder can't take more input without producing output.. Nice catch! Fixed.\nThanks!. x86_64?. x86?. As I see, it is usually applied like this:\n```\nifndef __has_declspec_attribute\ndefine __has_declspec_attribute(__x) 0\nendif\n```\nWhy _WIN32 is special?. Also, for more uniform code, it is better to use semantic derivative of check - i.e. define\nBROTLI_DLLIMPORT and BROTLI_DLLEXPORT (like here http://llvm.org/viewvc/llvm-project/cfe/trunk/docs/LanguageExtensions.rst?view=diff&r1=223466&r2=223467&pathrev=223467) and use them in place of __declspec(xxx). \"else\" also should have this comment: / BROTLI_HUFFMAN_CODE_FAST_LOAD /\nperhaps a new line before and after else would improve readability.. Going to check if we could get rid of declaration/fetch wrappers.\nIf in \"non-fast\" mode copying struct to local variable is not slower (hopefully, so), then \"prepare\" would be plain HuffmanCode declaration, and \"update\" would be assignment.... This piece have been already added in your previous PR. So it is time to rebase =). Sorry for nit-picking. Lets either generalize the name/purpose, or move this piece to huffman.h - though it is platform-dependent, it is very narrow - only for huffman tables and only for decoder.. I believe, the path is a little bit longer =). This check should be done on a different level.\nThis function is capable of decompressing \"streams\" - i.e. input could be passed in chunks.. Please ignore. Though input could be passed in chunks, there are guarantees, that while there is enough output space, decoder will consume all the brotli stream input.. ",
    "zoghal": ":+1: \n. ",
    "anthrotype": ":+1: \n. Yes, it's working now on OSX, thanks.\n. @khaledhosny \nin aac07290bee46acf5b9ee7821aeddf3b78f4ef70, I have slightly modified the setup.py script in order to avoid using symlinks to ../enc/ and ../dec/ directories. The reason is that Python for Windows (yes, again) cannot follow those symlinks and therefore the build fails.\nIn order to compile the Python extension on Windows, one can work around distutils' inability to use relative paths to the C/C++ source files by simply converting them to absolute paths.\n@szabadka Apologies for my insistence, but I would like to ask you if Brotli's core developers are interested at all in making Brotli (specifically its encoder and Python bindings) compatible with the Windows platform? If not, I would have to find other strategies to be able to encode WOFF2 fonts using Python.\nThank you.\n. Thanks for your reply. I will sign the CLA tomorrow morning.\nCheers!\nC.\n. @szabadka I signed the CLA on behalf of my employer (i.e., Dalton Maag Ltd). \n. thanks for the fixes! I'm gonna try now and let you know the results.\nFor the email address we used google.contributors [at] daltonmaag.com (we created an ad-hoc Google Groups address for this purpose, as shown in the CLA web form).\nMy github username (i.e. @anthrotype) is linked to my work email address, cosimo.lupo [at] daltonmaag.com, and the latter email address is a member of the above mentioned google group.\nDoes that make sense?\n. Yes, I can confirm the latest e60b7b846ab6a0a3de8d092b1a6aa1f1823dbb8c compile successfully under MS Visual C++ 12.0. \nThank you very much for addressing this issue. \nI can close this pull request now.\nI am going to open a new request, always Windows-specific, which has to do with the Python extension only.\nThanks again,\nC.\n. thanks for your comments and suggestions. I'll look into it and try to fix it.\nBtw, in the current Python bindings, the default decompression buffer size is even less that 10x.\n. I cherry-picked two commits from #32 since they relate to the Python binding build process.\nBasically, the setup.py will pass the -std=c++0x flag only when the compiler is GCC, and not when it is MSVC (which cannot handle it).\nBesides, the latter gives a warning if the flag /EHsc is not enabled and C++ style exceptions are used. See https://msdn.microsoft.com/en-us/library/2axwkyt4.aspx\n. @szabadka I added a binding for the BrotliDecompressedSize function (I called it \"get_decompressed_size\"), as you have suggested.\nI also modified the bro.py script so that it first tries to calculate the decompressed size, and if it can't find one, then it does the decompression in a loop with increasing buffer size, until a limit of 1GB is reached (but it can be extended via command line argument).\nHowever, I am not able to test a compressed file that would make the BrotliDecompressedSize function to fail: the size of each text document included is calculated successfully.\nBut I'm sure you can push it to the limit.\nLet me know what you think.\nHave a nice weekend,\nCosimo.\n. Yes, I also believe that'd be a better idea. I will wait for your patch then.\nThanks.\n. I wonder if @khaledhosny had the chance to finish that patch to brotlimodule.cc which he referred to early on (i.e. the one using BrotliDecompress with callbacks to allocate memory as needed)?\nthanks a lot,\nC.\n. thank you @khaledhosny!\nI rebased this branch to use your new BrotliDecompress() function. However, I'm no longer able to pass all the tests.\nIt's quite strange because if I run the same command more than once, sometimes it passes, other times it raises BrotliDecompress failed. For example, using this test file:\n./bro.py -f -d -i x.compressed -o x.uncompressed\nI'll have closer look tomorrow, and see if I can better debug what's happening here.\nThanks again.\nC.\n. @khaledhosny \nI think I found the culprit of the issue. \nat line 80 of brotlimodule.cc, the output_callback function is missing a return statement.\nIf I add that, then all the python tests run fine.\nSee 4a927bc.\n. I apologise for the rebase mess, I'm gonna close this pull request and open a new, cleaner one.\n. #33 fixes this so I shall close it.\nthank you!\n. :+1: \n. unfortunately there is a problem in literal_cost.cc:161.\nthe log2 function is used there without testing if the _MSC_VER <=1600.\nso the build fails because of \"identifier not found\".\n. if I change line 161 of literal_cost.cc to this, it works:\n-    float lit_cost = log2(static_cast<double>(in_window) / histo);\n+    float lit_cost = FastLog2(in_window) - FastLog2(histo);\n. you're fast! :)\n. great, thank you!\n. hey @mitya57,\nThis patch gets rid of this warning when compiling on OS X:\n-clang++: warning: treating 'c' input as 'c++' when in C++ mode, this behavior is deprecated\nCool. However, why do you drop the -m64 flag? Shouldn't that be set for 64-bit environments? \nthanks,\nCosimo \n. well, you did convince me :)\nthank you for the clarification.\n. thanks!\n. :+1: \n. I know, but that only runs python setup develop for testing a package while developing it.\nThe problem arises when doing pip install ., without the -e option.\nIf you look at the traceback, the reason why pip fails is because it cannot find the C/C++ sources, since they are referenced using a relative path which is \"above\" the setup.py working directory:\n```\n$ pip install .\nProcessing /Users/cosimolupo/Documents/Github/brotli/python\nInstalling collected packages: Brotli\n  Running setup.py install for Brotli\n    clang -fno-strict-aliasing -fno-common -dynamic -I/usr/local/include -I/usr/local/opt/sqlite/include -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -DOS_MACOSX=1 -I/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c /private/var/folders/1w/6098jtks69sgwz0vtz2ysmsm0000gn/T/dec/bit_reader.c -o build/temp.macosx-10.9-x86_64-2.7/private/var/folders/1w/6098jtks69sgwz0vtz2ysmsm0000gn/T/dec/bit_reader.o\n    clang: error: no such file or directory: '/private/var/folders/1w/6098jtks69sgwz0vtz2ysmsm0000gn/T/dec/bit_reader.c'\n    clang: error: no input files\n    error: command 'clang' failed with exit status 1\n    Complete output from command /usr/local/opt/python/bin/python2.7 -c \"import setuptools, tokenize;file='/var/folders/1w/6098jtks69sgwz0vtz2ysmsm0000gn/T/pip-oaQuzp-build/setup.py';exec(compile(getattr(tokenize, 'open', open)(file).read().replace('\\r\\n', '\\n'), file, 'exec'))\" install --record /var/folders/1w/6098jtks69sgwz0vtz2ysmsm0000gn/T/pip-R4EIB0-record/install-record.txt --single-version-externally-managed --compile:\n    running install\nrunning build\n\nrunning build_ext\n\ncreating build\n\ncreating build/temp.macosx-10.9-x86_64-2.7\n\ncreating build/temp.macosx-10.9-x86_64-2.7/private\n\ncreating build/temp.macosx-10.9-x86_64-2.7/private/var\n\ncreating build/temp.macosx-10.9-x86_64-2.7/private/var/folders\n\ncreating build/temp.macosx-10.9-x86_64-2.7/private/var/folders/1w\n\ncreating build/temp.macosx-10.9-x86_64-2.7/private/var/folders/1w/6098jtks69sgwz0vtz2ysmsm0000gn\n\ncreating build/temp.macosx-10.9-x86_64-2.7/private/var/folders/1w/6098jtks69sgwz0vtz2ysmsm0000gn/T\n\ncreating build/temp.macosx-10.9-x86_64-2.7/private/var/folders/1w/6098jtks69sgwz0vtz2ysmsm0000gn/T/dec\n\nclang -fno-strict-aliasing -fno-common -dynamic -I/usr/local/include -I/usr/local/opt/sqlite/include -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -DOS_MACOSX=1 -I/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c /private/var/folders/1w/6098jtks69sgwz0vtz2ysmsm0000gn/T/dec/bit_reader.c -o build/temp.macosx-10.9-x86_64-2.7/private/var/folders/1w/6098jtks69sgwz0vtz2ysmsm0000gn/T/dec/bit_reader.o\n\nclang: error: no such file or directory: '/private/var/folders/1w/6098jtks69sgwz0vtz2ysmsm0000gn/T/dec/bit_reader.c'\n\nclang: error: no input files\n\nerror: command 'clang' failed with exit status 1\n\n----------------------------------------\nCommand \"/usr/local/opt/python/bin/python2.7 -c \"import setuptools, tokenize;__file__='/var/folders/1w/6098jtks69sgwz0vtz2ysmsm0000gn/T/pip-oaQuzp-build/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /var/folders/1w/6098jtks69sgwz0vtz2ysmsm0000gn/T/pip-R4EIB0-record/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /var/folders/1w/6098jtks69sgwz0vtz2ysmsm0000gn/T/pip-oaQuzp-build\n\n```\n. I'll have look at sdist.\nThe thing is, the way pip (but also distutils, setuptools, etc.) expects python packages to be organised is with a setup.py at the root of the package, and then everything else positioned either on the same level or inside sub-folders reachable from the root. Whereas here we want to keep the python folder  isolated from the C/C++ source files, which is understandable, but this seems to conflict with the way Python packaging works. Maybe the solution could simply be to clone brotli as a submodule in another repository with a copy of setup.py positioned higher in the directory tree.\n. yes, I do remember.\n. It would definitely make the Python extension's setup much easier.\nOn Tue, Mar 31, 2015 at 8:42 AM, Khaled Hosny notifications@github.com\nwrote:\n\nThinking about it more, I think it shouldn\u2019t harm to move the setup.py file to the top level directory, and leave the C file where it is, if it will simplify things.\nReply to this email directly or view it on GitHub:\nhttps://github.com/google/brotli/issues/52#issuecomment-87980117\n. I can confirm pip is happy after 5e3e97e2947d82971bcc9f1bb099de7d7da91ac2\n. @szabadka would you be ready to tag a release?\n. Ok, fair enough. Looking forward to those.\nThank you,\nC.\n. you're right, it shouldn't do that.\nI'll try to fix it, thanks.\n. @szabadka this works: https://github.com/google/brotli/pull/80\n. Good! I can confirm it works on OSX and Windows too.\n. > Before the release we would need also to make sure the Python module exposes all features of the brotli library (like the new encoder params).\n\nYes, we should add the encoder's newly introduced BrotliParams.\nWhat other feature would you like to expose in the Python module?\nCurrently, the module's compress function calls BrotliCompressBuffer, whereas the bro tool is using the new BrotliCompress with in/out callbacks.\nShall we expose BrotliCompress in the Python module as well?\n. do you think brotli is now ready to be uploaded to the Python Package Index (PyPI)?\n. @szabadka very good!\nI have a question: those fields are not exposed in the command line script (bro.py) already. I gather you meant we need to remove them also from the brotlimodule.cc extension module.\nI'll do that shortly in a new PR.\n. do we also need to bump the Python module's version in the setup.py before uploading it to PyPI?\ncurrently it's 0.1, but 1.0 would look nicer ;)\n. Ok, that's fine.\nCould you hold on an hour or so before actually tagging the release?\nI'd like to submit one more PR that fixes building the Python extension on Windows Python 2.7 when installing via pip. Thanks\n. sorry for the late reply, I was on vacation.\nYou have set up automatic \"Github Releases\" deployment for Travis. The OSX compiled wheels will now be uploaded to GitHub every time you push a new tag (e.g. see v0.2.0). This is cool, thanks for that! (By the way, Travis currently builds for OS X only; it would be nice to similarly configure AppVeyor with \"Github Releases\", so that the Windows wheels are also uploaded to GitHub...).\nHowever, the Github Releases and PyPI are two different things which need to be configured separately.\nTravis has some built-in support for automatic PyPI deployment -- see help docs:\nhttp://docs.travis-ci.com/user/deployment/pypi/\nFor AppVeyor, you can define a custom deploy_script that calls the \ntwine command to securely authenticate with PyPI and upload the compiled wheels.\nI'd say, let's first have both OSX and Windows wheels auto uploaded to GitHub upon tagging. Then we could see how to have them uploaded to PyPI as well. In the meantime, we could just upload them to PyPI manually.\n. what is the status of this? Is there something I could do to help speeding this up?\nBasically, all is left to do is register with the PyPI server and upload the binary wheels from 0.3.0 release, along with the source distribution (i'd say both .tar.gz and .zip formats, as in python setup.py sdist --formats=gztar,zip).\nhttp://python-packaging-user-guide.readthedocs.org/en/latest/distributing/#uploading-your-project-to-pypi\nSetting up automatic PyPI deployment upon tagging from Travis and Appveyor is a little tricky, but it can be done if you're interested in doing that too.\n. It's all covered in the PyPA Packaging User Guide linked above. You need to create an account on PyPI, make a .pypirc file and use twine to register the new project and upload the built artifacts.\nYou can optionally have the CI deploy to PyPI on tag releases, in which case you need to encrypt the password.\nhttps://docs.travis-ci.com/user/deployment/pypi\n. I can help you with the PyPI thing. Setting up the CI is possible, though I would need the PyPI account credentials to set that up.\nI don't know if it's feasible, but I\u00a0was thinking I could maintain the PyPI account for you, and manually upload the wheels on every new tag.\n. @Lukasa thanks for the reminder. I haven't tried it yet, but it would be nice if the two wrappers had the same API so they could be used interchangeably.\n. So, any news on the PyPI front?\nAt the very least, it would be already something if someone could upload to PyPI the wheels and sdist from the current 0.5.2 release.\nAll it takes is:\n1) create a PyPI account at https://pypi.python.org/pypi?%3Aaction=register_form\n2) install Twine tool, required to securely upload packages to PyPI\npip install twine\n3) run twine upload Brotli-0.5.2*.whl Brotli-0.5.2.zip\nI could do that myself, but would be better if the official owners/maintainers register it first.\nIf you like, you can add me as collaborator on the newly registered brotli project on PyPI, and then I could help you setting up automatic deployment from Travis/Appveyor.\nBut for now, uploading manually the artifacts that are already published on Github Releases would be good.\nThanks.\n. @eustas sorry to ping you (I see you are back online). Any plans on pushing the wheels to PyPI?\n. AWESOME!!! Big thanks!\nhttps://pypi.python.org/pypi/Brotli\nmy username is anthrotype, of course ;)\n. sure, I'll do that.\n. @szabadka OK, I've rebased on top of master, set MODE_GENERIC as default compression mode, and removed the additional low-level parameters from the command line tool's arguments (but I left them in the module's compress function)\n. thank you!\n. @szabadka it works now, thanks! :+1: \n. thanks!\nit compiles now!\nIt is a bit strange though, because even with the undefined pos_ member, the decoder was still compiling fine on OS X (clang) whereas it wasn't on Windows (msvc)...\nI believe the reason is because in the port.h module, the BROTLI_LITTLE_ENDIAN preprocessor flag is not being set for MSVC, whereas it should be, as I'm compiling on a little endian processor -- like virtually all Windows machines -- and for a 32-bit Python. \nI suspect the problem could be that MSVC does not define __BYTE_ORDER__, and therefore the following check from port.h does not work on Windows:\n``` c\nif (defined(BYTE_ORDER) && (BYTE_ORDER == ORDER_LITTLE_ENDIAN))\ndefine BROTLI_LITTLE_ENDIAN 1\nelse\ndefine BROTLI_LITTLE_ENDIAN 0\nendif\n```\nFor example, see: http://www.reactos.org/pipermail/ros-diffs/2014-January/051494.html\nI think it would be OK to simply assume that Windows is always little endian. \nWDYT?\n. if I change port.h like that, then it compiles fine on MSVC as well (even without applying patch #130):\n``` diff\ndiff --git a/dec/port.h b/dec/port.h\nindex 27c6b6b..0bceca3 100644\n--- a/dec/port.h\n+++ b/dec/port.h\n@@ -102,7 +102,8 @@ OR:\n #define BROTLI_PRELOAD_SYMBOLS 0\n #endif\n-#if (defined(BYTE_ORDER) && (BYTE_ORDER == ORDER_LITTLE_ENDIAN))\n+#if defined(_MSC_VER) || \\\n+    (defined(BYTE_ORDER) && (BYTE_ORDER == ORDER_LITTLE_ENDIAN))\n #define BROTLI_LITTLE_ENDIAN 1\n #else\n #define BROTLI_LITTLE_ENDIAN 0\n```\nthat's because, when BROTLI_LITTLE_ENDIAN is defined, the pre-processor will trim the #else branch inside dec/bit_reader.h where the undefined pos_ was used.\n. that's great! thank you :+1: \n. PS: maybe it'd be a good to set up Appveyor to make sure we test compiling Brotli on Windows...\n. I just added a try/except clause to skip the distutils.msvc9compiler monkey patch when running setup.py under MinGW environment, whereby attempting to import the msvc9compiler module would raise a DistutilsPlatformError.\n. thanks! sure, I'll do that now.\n. OK, i have consolidated the two PR branches in a single one (the current one).\nI have also added a __version__ string constant to the brotli Python module, and set it to \"0.1.0\".\nWhen installing the module, the setup.py uses regex to find the version string in the brotlimodule.cc file, so that we don't have to set it twice.\nI compiled and run the tests on my local Windows and OS X machines.\nAll seems good now on the python side. You may wish to proceed cutting the release.\nThanks for the good work!\n. closing since I merged it in #133\n. I eventually succeeded to compile the Brotli extension for Mac Python (i.e. the official installers from Python.org).\nThe problem was twofold:\n1) Travis provides the old Apple GCC 4.2 under /usr/local/bin/gcc-4.2. When compiling the Brotli extension for Mac Python, distutils picks up gcc-4.2 as compiler, because technically that was the one used to build the original Mac Python distribution. However, the problem is gcc-4.2 does not support C++11 (it aborts because it does not recognise the command line option -std=c++0x). To work around that, I need to override CC and CXX variables in Travis respectively to clang and clang++ -- the latter does support C++11.\n2) Even after setting clang as compiler, two additional flags needs to be explicitly passed to it for the Mac Python build to succeed: namely -stdlib=libc++ and -mmacosx-version-min=10.7. This is to make sure the clang's C++ standard library (with C++11 support) gets used instead of the earlier libstdc++. The second flag sets the minimum deployment target to 10.7 (the default for Mac Python would be 10.6), which is required for using libc++.\nSo, patch no. 1 is specific to Travis' setup and only applies to .travis.yml.\nHowever, patch no. 2 must go in setup.py, since the two additional compiler flags need to be passed only when compiling C++ sources on the Mac platform with clang.\nI think it's important that Brotli can successfully compile on the official Python.org distributions, besides on the Apple built-in Python and homebrew one. Not just because it's the official Mac distribution, but also because the compiled wheels that are built for the latter will have the platform tag macosx_10_6_intel: that is, they will work on both 32 and 64 bit architectures and on any OS X version >= 10.6.\n. If you want, I could open a separate pull request for the setup.py's patch 7e471ca, as it applies more generally, and keep the current PR only for Travis and Appveyor related stuff.\n. I'm not sure how it works with organization accounts like google's.. For individuals, you simply login into Travis or Appveyor using one's own Github personal account, and then give the CI service access to the repositories you wish to build. After that, you can track them on https://travis-ci.org/<username>/<project> or https://ci.appveyor.com/project/<username>/<project>.\nThat's what I did with my brotli fork.\nSo, it is not automatic, you first need to grant Travis and Appveyor access to the repository.\n. OK, I'll do that.\n. the first Travis build passed! Yay :+1: \nhttps://travis-ci.org/google/brotli/builds/75586344\n. Also the Appveyor build passed successfully for the current PR branch:\nhttps://ci.appveyor.com/project/anthrotype/brotli/build/1.0.87\n. it's live now!\nhttps://ci.appveyor.com/project/szabadka/brotli\n. hmm..\nthe first job failed but the console log is empty: https://ci.appveyor.com/project/szabadka/brotli/build/job/8cq4ivbry8lh7eld\n. The issue with C++ and pypy3 has already been fixed here.\nIt should be available in the next pypy3 release.\nI shall close this for now.\n. here they use a post-commit git hook which automatically adds a new tag whenever the version string is modified.\nI don't know if it's worth doing it though.\n. yes, that sounds good to me. Thanks.\n. thanks!\n. maybe you need to remove enc/dictionary.h and add enc/dictionary.cc to the list of sources and headers in the setup.py?\n. never mind, the Appveyor build is passing now.\n. thank you very much!\n. Thanks!\nI've just rebased and forced-push to this same PR branch.\nThere was still one remaining instance of .data() inside python/brotlimodule.cc:\n$ git grep \"\\.data()\"\npython/brotlimodule.cc:    ret = PyBytes_FromStringAndSize((char*)output.data(), output.size());`\nI changed it to the following:\ndiff\nif (ok) {\n-    ret = PyBytes_FromStringAndSize((char*)output.data(), output.size());\n+    ret = PyBytes_FromStringAndSize((char*)(output.size() ? &output[0] : NULL), output.size());\n   } else {\nLet me know if that is ok.\nLet's cross fingers on the Appveyor Python 2.7 build: it should now be using its native MSVC 9.0...\n. sorry for the typo: I meant, the Appveyor Py2.7 build should now be using MSVC90\n. it's working! :)\n. yes, it was changed with 6511d6b01629631ad76864fe499a27f36d448396\nthe python extension needs to be updated accordingly.\nthanks for spotting it!\n. However, the latest draft of Brotli specification still says 16 to 24 though:\nhttps://github.com/google/brotli/blob/master/docs/draft-alakuijala-brotli-06.txt#L267\n\nThe sliding window size is a power of two, minus 16, where the power is in the range of 16 to 24.\n\nCould anyone confirm, before I send the patch, that for --lgwin the allowed range needs to be changed from the current [16..24] to [10..24], like it says in enc/encode.h file, as per commit 6511d6b01629631ad76864fe499a27f36d448396?\nThanks.\n/cc @szabadka \n. thanks to grep ;)\n. :+1: \n. wait a minute, I need to setup the right SDK for Windows 64-bit Python 3.5.0.\n. OK, Appveyor is now working with Python 3.5.\n(Travis is super slow today, but it's going to be OK, I already tried on mine).\nSo with this, we shall have precompiled wheels for Python 3.5.0 for both OSX and Windows.\nMany thanks to @ogrisel for his https://github.com/ogrisel/python-appveyor-demo, which made Appveyor setup super easy!\n. :+1: \n. Yes, .so is the correct extension for Python extension modules on OS X. On \"win32\" the extension would be .pyd.\ndistutils gets it from sysconfig:\npython\nimport sysconfig\nprint(sysconfig.get_config_var('SO'))\n. Of course the setup.py script is only meant to build and install the Python bindings. If you are looking to build a shared library to link with other non-Python code, that's not the one to use.\nIn that case you can try  https://github.com/bagder/libbrotli\n. I am surprised it works.. Though that's not the intended purpose of a Python extension module. I'm sure others more knowledgeable of C/C++ or Java than me could suggest a better approach for what you're trying to do.\n. At behdad/fonttools project, we would like to switch to Travis CI container-based infrastructure (ie. sudo: false), however we also require to install gcc-4.8 (via sudo apt-get) since the Travis' built-in gcc version does not support C++11.\nThrough this patch, we can compile the Brotli extension using the old gcc, so no more need to sudo and we can use the new infrastructure.\n/ping @szabadka \n. thanks!\n\nCosimo\nOn Wed, Dec 9, 2015 at 12:43 PM, szabadka notifications@github.com\nwrote:\n\nMerged #278.\nReply to this email directly or view it on GitHub:\nhttps://github.com/google/brotli/pull/278#event-486827014\n. Hi @thinred,\nThe reason I did the bro.py script was primarily to test the Brotli Python extension on Windows (cf. https://github.com/google/brotli/pull/38).\n\nAt that time, I wasn't able to compile the bro.cc tool for\u00a0Windows, and I wanted to avoid having to install Cygwin, MSYS, etc., in order to run the compatibility_test.sh and roundtrip_test.sh scripts. So I wrote a Python clone of the bro.cc tool and equivalent scripts for compatibility and roundtrip tests.\nI didn't add bro.py to the brotli Python package, nor the setup.py script, because I thought that users of the Python bindings would be more interested in using brotli as a module to import in other applications, rather than as a command line script.\nHowever, if you or others think it could be useful, we could easily move it inside the package and have setuptools generate a platform-specific console script (using its entry_points feature). On Linux or OS X, it would be named without the .py extension, whereas on Windows it will have .exe.\nAlthough, I guess for Debian it would be fine to simply package the C++ command line tool (that is called bro with no language extensions).\nAlso, bear in mind, the Python bindings and hence bro.py still don't expose the new streaming API, while the bro C++ tool does (cf. https://github.com/google/brotli/pull/271).\n. cc @khaledhosny \n. That's cool!\n. ping @eustas\n. Thanks!\n. http://stackoverflow.com/questions/2192323/what-is-the-python-egg-cache-python-egg-cache\nI'd recommend you don't do \n    python setup.py install\nwhen installing from the source directory, as that triggers setuptools to create an .egg. Instead, use\n    pip install .\nThis will not create eggs, but will install the package unzipped in the site-packages.\n. Well, there are \"pip packages\": that is, wheels, available from the GitHub releases page of this repository.\nI guess you meant that these wheels should be also available from PyPI, so one can just do pip install brotli. Of course, I'm with you on that.\n. the problem is pip wheel command is trying to create a default \"build\" directory in the root of the repo, but there's a file called BUILD. You can try to pass the -b, or --build <dir> option to pip wheel command to use a different directory where to build into.\n. oh I see that.. hm that's weird. Try adding a -v verbose flag maybe.\nOr also you can try calling the bdist_wheel command directly instead of through pip:\npython setup.py bdist_wheel -b bin -d dist\n. I was able to replicate the issue locally on my VM.\nIt looks like a bug in either setuptools or wheel or pip (or all of them!).\nWith this command line I was able to make it work:\npython setup.py build -b bin bdist_wheel -d dist\nIt looks like the bdist_wheel command in turns calls the build command which somehow always defaults to create a build directory, despite we pass -b bin to bdist_wheel...\n. yeah, the setup.cfg trick should also fix it :+1: \n. It looks like it's a bug in the latest setuptools not correctly enquoting library paths with spaces.\nMaybe you can temporarily try to download an earlier version of setuptools which was known to be workong.\nhttps://github.com/pypa/setuptools/issues/694\n. Let's wait, I guess. They are usually pretty quick.\n. Merged https://github.com/pypa/setuptools/pull/723\n. hmm.. looks like it's not fixed yet:\nhttps://github.com/pypa/setuptools/issues/694#issuecomment-237873988\nI think it's a good idea to pin down a specific version of setuptools, instead of always upgrading to the latest at every appveyor build. We could update setuptools when needed and when we know does not break anything else.\n. The latest setuptools v25.1.6 should fix the issue.\nhttps://pypi.python.org/pypi/setuptools/25.1.6\n@nemequ can you try to re-run the Appveyor build?\n. you shouldn't use pip3, but activate the relevant python environment before calling the respective pip command.\n. Sure, I'll do it later today.\n. should be good to merge now.\n. sorry, I jumped the gun. It is working fine.\n. ops, I'm sorry I had you create the 0.5.1 tag... :(\n. something might have gone wrong with the 0.5.0 tag. Some of the Windown 32-bit wheels are missing, as if subsequent builds on Appveyor have overwritten the existing Github release, deleting the files uploaded by the previous build.\nSo let's cross fingers with 0.5.1...\n. ouch. The upload to 0.5.1 is now working fine from Appveyor, but the version string in the setup.py is still 0.5.0, so the wheels are named like that...\nThe solution is deprecate 0.5.1, commit a version string change (0.5.2?), and cut a new tag.\nSorry you have to go through this mess.\n. the BROTLI_VERSION in tools/version.h should match the latest tag version.\nThere are tools like setuptools_scm, which take care of updating the package version (as well as the one in the header file) based on the latest git tag, when one generates a new source distribution, so that you won't need to remember to manually update the version file, but simply make an annotated tag.\nBut maybe that's overkill.\n. for the python packages to have the right version string (matching the latest tag) you need to modify the tools/version.h file like this:\nhttps://github.com/google/brotli/blob/master/tools/version.h#L12\ndiff\n-#define BROTLI_VERSION \"0.5.0\"\n+#define BROTLI_VERSION \"0.5.2\"\n. still no luck. :(\nthe 3.4 and 3.5 mac wheels in 0.5.2 release are still using 0.5.0 version\nhttps://github.com/google/brotli/releases/tag/v0.5.2\n. actually no! they are just duplicate. The ones with the correct 0.5.2 version are also there.\nCan you please manually delete the 0.5.0 ones, to avoid any confusions?\nThank you very much.\n. Thanks! Looks good now \ud83d\udc4d \n. @JoeArizona Wheels are Python's binary package format.\n. @JoeArizona They are simply bindings which allow to call the brotli library from python code (Python has C API which can be used to write extension modules).\nFor example, we use brotli for compressing WOFF2 fonts in FontTools.\n. Yeah, those should really be uploaded to the Python package index, IMO.\n. the changes are purely cosmetic, hence to some degree subjective, but if you prefer it like that, I don't mind.\n. Sounds like a Travis CI bug.\nSee here: https://github.com/python-pillow/pillow-wheels/issues/45#issuecomment-251448111\nthe workaround is to set osx_image: xcode6.4\n. another workaround to this Travis CI bug, instead of using the old VM, is to call rvm get head, as mention here:\nhttps://github.com/travis-ci/travis-ci/issues/6307#issuecomment-233315824\nFor example:\nhttps://github.com/schwa/SwiftIO/commit/f9914fabda2ee1509bef5110f2028efc424d828d\n. @eustas I believe this PR was meant to address the /Users/travis/build.sh: line 109: shell_session_update: command not found at the end of this Travis log https://travis-ci.org/google/brotli/jobs/165268025 (which is for the other PR by @nicksay #435) \nThat error message (which is unrelated to issue of the gcc version) is still showing up at the end of Travis log: e.g. https://travis-ci.org/google/brotli/jobs/167048215#L446 \nBut the brotli macpython build does not fail despite that error message. You can probably ignore it. It will surely be fixed it at some point by Travis CI team.\n. You could tell Travis CI to use Mavericks by specifying osx_image: beta-xcode6.1 or osx_image: beta-xcode6.2.\nSee https://docs.travis-ci.com/user/osx-ci-environment/\n. the appveyor builds failure seems to be related to the fact that PowerShell sometimes reports a NativeCommandError when a process writes to STDERR (in our case, it seems to be the unittest module)\nE.g. see http://stackoverflow.com/a/22615314\nsome users suggest to redirect stderr to null as a workaround\n``` diff\ndiff --git a/appveyor.yml b/appveyor.yml\nindex bcabe41..268142b 100644\n--- a/appveyor.yml\n+++ b/appveyor.yml\n@@ -88,7 +88,7 @@ test_script:\n       if ($env:BUILD_SYSTEM -eq \"CMake\") {\n         ctest --output-on-failure --interactive-debug-mode 0 -C Debug\n       } else {\n-        python setup.py build test\n+        python setup.py build test 2> $null\n       }\nafter_test:\n```\nNote that the custom TestCommand in setup.py was meant to emulate with python the  compatibility/roundtrip shell scripts written for the bro command line tool.\nThere are better ways to discover Python test modules, e.g. with setuptools test_suite keyword, or with pytest (which also supports discovering unittest-style modules).\n. build will also compile the pure python modules, besides in turn calling build_ext to compile the extension module. It is the correct command to use, now that brotli is a package with some pure python modules. Previously it was a single extension module.\n. FYI, the issue of failing tests returning 0 exit status has been fixed in the latest setuptools v32.1.0\nhttps://github.com/pypa/setuptools/pull/892. ping @szabadka \nI can volunteer to maintain this brotli-wheels repository, and set it up to build wheels when the upstream brotli is released, and have it upload them automatically to PyPI.\nI could create the new repository under my Github username, or if you wish, you can create it under the google Github organization and add me as collaborator for that repo.\nI would also require access to the brotli PyPI account.. you need to add me as collaborator in the \"roles\" section on the brotli PyPI page:\nhttps://pypi.python.org/pypi?:action=role_form&package_name=brotli\nMy pypi username is also anthrotype.. Thank you!. thanks @eustas! \ud83d\udc4d \nI won't be able to work on that before next week.. Yes, as @eustas said, that is the source distribution for the python module. It's generated by the python setup.py sdist command using patterns from the MANIFEST.in file.\nSorry I couldn't find the time to work on the brotli-wheels yet as I promised. I will get to it soon..\nThe idea is that Travis/Appveyor CI for this repo should no longer do the python packaging and deployment tasks, but only build and run the tests. The other separate repository will use this one as submodule, and upload artifacts to PyPI for distribution.\n. there is no distinction between Brotli-0.6.0.tar.gz and Brotli-0.6.0.zip; they are both sdist packages, which are meant to be uploaded to the Python Package Index and used by the pip installer, e.g. when one does pip install brotli, and when there are no binary \"wheel\" packages available for the python version/platform/architecture the user is running.\nWe shall get rid of those before the next tag, for now you can just ignore them.. May I suggest that you also mention here in the Readme that the Brotli python module is also available on the Python Package Index (PyPI), precompiled for all cpython versions and the three major desktop platforms, and the way to install is pip install brotli?\nThis is the link: https://pypi.org/project/Brotli/. LGTM thanks. I noticed that we were re-building the extension module three times before actually running the tests...\nIt turns out\n1) the code that checks if the extension module was newer than its source files was not there in our implementation of build_ext.build_extension method (I just copied it from cpython's distutils)\n2) there was a typo in the list of headers (a missing comma) which made it so that two headers' paths were combined into one, but the latter did not exist and thus distutils/setuptools would think the extension module was not up-to-date (as one of the dependencies was showing as missing), and would always run the built_ext command over and over.. ok.. We went from running build_ext three times down to running it twice...\nThat's because running the test command will automatically run build_ext as a dependent subcommand, so we don't need build and test in a single setup.py invocation.\nWith the last commit we call the compiler only once (384f8b6), by simply doing python setup.py test.. linux python 2.7 build went down from 3m 40s to 2m 12s. nice. @nicksay FYI I have modified the Makefile in 44b5e66 so that the default make target does not call the develop command, which is I believe is too intrusive for a simple default build target.\nIt's good for developers who want to actually modify the code, but for the sake of testing the build it's better to not modify the user's python environment (e.g. say one does not have admin rights, develop command will fail, just like install).\nAlso, we don't need to tell make about the dependency between 'test' and 'build' targets as that is baked in the python setup.py test command as I explained above.. @nicksay I added the make develop target and reworked the python/README.md so that the reference to setuptools development mode is still there but no longer at the top of the section.\nI noticed also that the test command is setuptools only, and the brotli setup.py still works with plain distutils (setuptools is widely available in modern python distributions but is not strictly part of the standard library). So I decided to revert the make test command to calling python -m unittest discover... as it was before, for backward compatiblity's sake.. The last Travis failure is just random and unrelated, this is good to go now. . wheel packages will no longer be uploaded to Github for next releases, as they are automatically published on the Python Package Index.\nhttps://github.com/google/brotli/pull/583. thanks, it should be fixed now. @khaledhosny there's a missing comma at line 117.\napart from this, are there any plans to merge this pull request?\n. I see. Which arguments shall I keep or remove precisely? \n. ok\n. There is a typo: modile* -> module\n. s/soruce/source/. oh I see now, sorry.. I can actually add an additional make develop, wdyt?. don't know.. I just copied from the default distutils build_ext module. I thought it'd be better to keep the default behavior. But I see that with \"error\" we could have avoided issues like the missing comma... ",
    "cfxd": "@kennethormandy, mind sharing the best way you found to upgrade Xcode's gcc? So many tuts out there it's hard to tell the good from the bad...\n. ",
    "erictaylor": "Might be relevant. I was getting this same error and fixed the issue with adding some additional flags on build. See starting line 37. https://github.com/Psiablo/ttf2woff2/blob/91b55b30683f011ca415ee8e24a55228dc4fd834/binding.gyp\nOS X 10.10.3\n. ",
    "irori": "@szabadka\nThis is also needed to update Chromium's Brotli decoder, since Chromium builder treats warnings as errors.\n. ",
    "mitya57": "-m64 is only needed when you are trying to compile 64-bit code on 32-bit systems. On 64-bit systems, it is default and is not needed.\n. In case I have not convinced you:\n$ uname -m\nx86_64\n$ echo \"int main() { return 0; }\" > test.c\n$ gcc test.c\n$ file a.out\na.out: ELF 64-bit LSB  executable, x86-64, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.24, not stripped\n$ md5sum a.out \n102810d713e5daf3bb450e2dc96e225e  a.out\n$ gcc -m64 test.c\n$ md5sum a.out\n102810d713e5daf3bb450e2dc96e225e  a.out\nThe -m64 option makes no difference, resulting files are identical and 64-bit.\n. ",
    "CoolOppo": "These are definitely needed changes, and I noticed all of these things myself when I was editing the makefiles.\n. I'm not one to really judge here, but if you guys are deciding on a versioning scheme, take a look at Semantic Versioning! This project would benefit from it over other versioning schemes because it makes it easy to determine when breaking changes have been made to the API, which is obviously a concern considering the last comment that @khaledhosny made in this thread.\n. @aa88088aa I think you may have accidentally replied to the wrong issue or something.\n. i really have no idea what you mean\nOn Wed, Sep 30, 2015 at 7:32 PM aa88088aa notifications@github.com wrote:\n\nI lost my password , demanding to know the password ? Know what I mean?\n2015/10/1 \u4e0a\u53486:43\u65bc \"CoolOppo\" notifications@github.com\u5beb\u9053\uff1a\n\n@aa88088aa https://github.com/aa88088aa I think you may have\naccidentally replied to the wrong issue or something.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/google/brotli/issues/162#issuecomment-144566679.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/google/brotli/issues/162#issuecomment-144573923.\n. I feel like there's a better name that could be used. I do like bro, but if that's already in use, that isn't really an option.\n. @khaledhosny I think you mean bro, and if so, I completely agree. The current command-line bro tool is extremely annoying to use. Both gzip and xz work excellently as command-line tools, and there's really no good reason to differ from those.\n. \n",
    "svgeesus": "As Brotli is deliberately designed to be asymmetric (favouring decompression speed over compression speed) it would be interesting to know where it ranks on decompression time on that image.\n. ",
    "nemequ": "Decompression speed is about right.  Look at the benchmark I linked to.  The results table can be sorted by decompression speed; just click on the \"Decompression Speed\" header of the results table.\nThe problem is that this is a huge outlier for brotli's compression speed.  It's so slow that it basically amounts to a DoS vulnerability.  It takes an hour to compress an 8.1 MiB file (on a Xeon E3-1225 v3), which is 5.62 KiB/s.  The next slowest file (ooffice, which is a 5.87 MiB DLL from OpenOffice.org 1.01) is 59.9 KiB/s.\nI think a lot of the compression speeds are pretty bad when you look at Brotli's competition (LZHAM is probably the closest competitor\u2014it offers pretty similar ratios and decompression speed but much more stable, and generally faster compression).  But 5.62 KiB/s is just unacceptable.\n. It's probably not unrelated that brotli also allocates a lot of memory for this file.  One of my ARM boards (with 1 GiB memory) mercifully terminates with a std::bad_alloc exception (hopefully the others will, as well).  An old laptop with 1 GiB memory and plenty of swap space, OTOH, is still happily thrashing after 50 hours.  Peak memory usage for that process right now is 1790520 KiB, current is 1266228.  For an 8.1 MiB file.\n. I just updated the benchmark, and this issue does seem to be fixed.\nBrotli has made a lot of progress in the last few months.\n. There are a lot more of these now (especially for -Wsign-compare), and since there doesn't seem to be any interest in merging it I don't really want to update the PR.\n. Probably related (warnings from clang):\n/home/nemequ/local/src/squash/plugins/brotli/brotli/dec/./bit_reader.h:151:8: error: cast from 'uint8_t *' (aka 'unsigned char *') to 'uint64_t *'\n      (aka 'unsigned long *') increases required alignment from 1 to 8 [-Werror,-Wcast-align]\n      *(uint64_t*)(dst + bytes_read) = 0;\n       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/nemequ/local/src/squash/plugins/brotli/brotli/dec/./bit_reader.h:152:8: error: cast from 'uint8_t *' (aka 'unsigned char *') to 'uint64_t *'\n      (aka 'unsigned long *') increases required alignment from 1 to 8 [-Werror,-Wcast-align]\n      *(uint64_t*)(dst + bytes_read + 8) = 0;\n       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/nemequ/local/src/squash/plugins/brotli/brotli/dec/./bit_reader.h:153:8: error: cast from 'uint8_t *' (aka 'unsigned char *') to 'uint64_t *'\n      (aka 'unsigned long *') increases required alignment from 1 to 8 [-Werror,-Wcast-align]\n      *(uint64_t*)(dst + bytes_read + 16) = 0;\n       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/nemequ/local/src/squash/plugins/brotli/brotli/dec/./bit_reader.h:154:8: error: cast from 'uint8_t *' (aka 'unsigned char *') to 'uint64_t *'\n      (aka 'unsigned long *') increases required alignment from 1 to 8 [-Werror,-Wcast-align]\n      *(uint64_t*)(dst + bytes_read + 24) = 0;\n       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/nemequ/local/src/squash/plugins/brotli/brotli/dec/./bit_reader.h:189:30: error: cast from 'uint8_t *' (aka 'unsigned char *') to\n      'const uint32_t *' (aka 'const unsigned int *') increases required alignment from 1 to 4 [-Werror,-Wcast-align]\n    br->val_ |= ((uint64_t)(*(const uint32_t*)(\n                             ^~~~~~~~~~~~~~~~~~\n. FWIW at least clang and, to a lesser extent, gcc are pretty good about generating fast code for memcpy with fixed sizes.  Newer versions of GCC are better, but still not optimal.  It might be worth it to keep an eye on that GCC bug and revisit the issue once it is resolved\u2026 unaligned accesses can cause problems down the road when the CC starts optimizing things better (this happened to LZ4 recently).\n. Just to be clear, the assertion checking the value returned from BrotliDecompressBuffer fails.\n. FWIW I would be willing to add someone to Squash's project on Coverity Scan so you can see the results in their interface, though I would suggest just creating a project for brotli.  It has actually uncovered quite a few real issues in other compression libraries (as well as Squash itself) with surprisingly few false positives\u2014definitely worth it, IMHO.\n. I think it's time for another run; Coverity is reporting 9 high-impact issues and 4 medium-impact issues in Brotli.\n. FWIW, cppcheck picks up a couple minor issues, too:\n[brotli/enc/block_splitter_inc.h:280] -> [brotli/enc/block_splitter_inc.h:281]: (style) Variable 'pairs' is reassigned a value before the old one has been used.\n[brotli/enc/write_bits.h:80]: (warning) %d in format string (no. 1) requires 'int' but the argument type is 'size_t {aka unsigned long}'.\nTo fix the second one, you could cast to int, or if you want to really use size_t you can do something like this (stolen from https://github.com/nemequ/munit/blob/master/munit.h#L56):\n``` c\nif !defined(_WIN32)\n#define BROTLI_SIZE_SPECIFIER \"zu\"\nelif defined(_M_X64) || defined(amd64)\n#define BROTLI_SIZE_SPECIFIER \"I64u\"\nelse\n#define BROTLI_SIZE_SPECIFIER \"u\"\nendif\n```\nWindows make everything harder.\n. @eustas, I see the only issue remaining is a null-pointer dereference; IIRC that can be \"fixed\" by adding an assert(foo != NULL).  If it's a function parameter, another possibility might be to add a nonnnull attribute\u2026  Looks like it's available in GCC 3.3+.\n. Brotli is at the wrong level for that.  It just compresses a stream of data, it has no knowledge about what is inside.  Think gzip, bzip2, or xz.\nTo compress multiple files you would generally tar them up then pass that to the compressor.  If you want things like random access, file listing, etc., you would need to create an archive format or extend an existing one to support brotli compression (just like zip files support deflate).  To do that you would basically just put multiple streams in a file; the Wikipedia article on Zip's design should give you a basic idea of what is involved.\n. > It turns out, that gzip is little more than twice as fast as brotli, when compressing this HTML.\n\nThis fails may expectations - I thought the Brotli outnumbers gzip.\n\nBrotli is generally slower than gzip for compression.  It is usually a bit faster at decompression, and the compression ratio is much higher.  See https://quixdb.github.io/squash-benchmark/?dataset=cp.html&machine=peltast&visible-plugins=brotli,zlib#ratio-vs-decompression for results for cp.html; results are probably similar for most datasets.  If you turn on some of the other codecs squash offers (click the label in the legend) you'll get a more complete picture of where brotli fits in with the competition.\nThis is a pretty good place for brotli to be.  Compressing content once and decompressing many times is a pretty common use case, so it's usually better to emphasize decompressor speed and ratio at the expense of compressor speed.\n. FWIW I don't think it's a big deal if this isn't exact, as long as it always returns >= the number of bytes really required.  Memory use shouldn't really be an issue here since if there is any concern about memory people should be using the streaming API.  A lot of the plugins in Squash are actually pretty wide of the mark in their estimates.\n. It seems level 1 is significantly worse about this.  For example, a 935 byte buffer requires 119 extra bytes.\nDo you consider that to be a bug?  I don't really know how the encoder works\u2026  I can understand not wanting to spend the time checking for uncompressible data, but I can also see abandoning the idea of compression and just memcpying data being a good performance optimization.\n. 0.5 provides BrotliEncoderMaxCompressedSize\n. FWIW using the buffer to buffer API is all we commit to our max_compressed_size function working for in Squash, so this isn't a problem for me.  Given all the complexities of estimating it with the stream API (like what happens if you flush every byte?), I don't think I would bother with that if I were you.\nNote that zlib's function (compressBound) only applies to its buffer-to-buffer functions.  I think all the others do the same, but I'd have to check\u2026\n. > Another problem that may deserve its own issue is that brotli has no dynamic library. Do you plan to provide libbrotli?\nI could be wrong, but I don't think brotli is API/ABI stable yet; it might be wise to hold off on packaging a library for now.\n. > @eustas Regarding pc files, it seems we could use the configure_file command to generate them, see for example mysql/mysql-proxy@6d108a4 or madler/zlib@ca6e7a0.\nGenerating a pkg-config file from CMake using configure_file is problematic in a non-obvious way.  I ended up writing a CMake module for Squash to do it, and explained why I didn't just use configure_file directly; see GenPkgConfig.cmake:35  It's a bit messy, but you can steal the module if you want.\nAs for versioning, now that shared libraries are possible the version information should be added to the target.  There is an example in Squash.  Note that soversion isn't quite the same as version, though if brotli adopts compatible rules for versioning they could be.  There is a good description of the issue in the autobook; \u00a711.4: Library Versioning\n. > @nemequ That seems more complicated than the configure_file way and IIUC this would only be beneficial for Windows.\nI'm not 100% on the \"only\" part (IIRC --dont-define-prefix and --prefix-variable are only available on Windows, but I could be wrong), but Windows is definitely the major problem.\n\nDo you have any plan to clean this module up\n\nMaybe.  IIRC I didn't put a great deal of thought into the API, I just wanted a quick way to resolve the problem.  At some point I (or someone else) should probably review it, but I don't remember any glaring problems.\n\nand submit it to the cmake maintainers?\n\nNo.\nThey can grab it if they want (I'd even be willing to relicense it if necessary), and if someone else wants to submit it that's fine, but AFAICT the CMake people are entirely disinterested in anything to do with pkg-config, and I don't feel like banging my head against that particular wall.\n\nI would personally be more comfortable to rely on an official cmake module than to have to copy and maintain one in brotli...\n\nI don't really understand that, but okay.  I have fewer reservations about relying on in-tree code than a module distributed by someone else which is likely to change depending on what version happens to be installed.  Furthermore, a local copy means there is no need to bump the cmake dependency to get support for it, and any bugs can be fixed immediately instead of bumping the dependency again.  IIRC when I put together Brotli's CMake stuff it worked all the way back to 2.8.6 (which is the version shipped with Solaris 11).  A lot of CI providers (including Travis and Drone.io) use Ubuntu 12.04 which only has CMake 2.8.7, so supporting older versions of CMake is important.\n\nIn any case, the configure_file way seems a reasonable and simple option, even if it's only for the short term.\n\nUsing the module is a simple option, too; writing it wasn't, but that's already done.  It may not be pretty but AFAIK it works perfectly and IMHO the benefit of shipping a correct pkg-config file vastly outweighs any concerns about copying the module, but since Brotli isn't my project that's not my decision to make.  Note that it would also be possible to copy some of the contents of the file into Brotli's CMakeLists.txt to avoid polluting the source tree.\n. > Achieving this by copying a cmake module seems a bit contradictory to that principle\nIt's not really related; you don't have to copy the module into projects which use brotli, it's just something for brotli's build system so it can output a correct pkg-config file.  Besides, even if it was included in CMake's standard modules tomorrow, it would be many years before brotli could really take advantage of it; cmake 2.8.6 is just over 5 years old, and we're still stuck with it if we want to support Solaris.  cmake 2.8.7 is slightly under 5 years old (by about 2 months), and we're still stuck with it for Ubuntu 12.04 and, by extension, Travis, Drone.io, etc.\nAnyways, I'll try to throw together a PR for all this stuff by next week.  I need to check a few of the changes which have been made to the CMake support anyways, since I think they'll break Squash when I pull them in.\n. Ah, okay I misunderstood your point.  Looking at the issue globally instead of just what Brotli needs right now you're right, it would be good to get support added to CMake eventually.  I'll try to take a look at the module in the near future, clean it up if need be, and offer it up to the CMake people, but I'm not very confident about them accepting it.\n@eustas, do you have an opinion on having the module in a separate file vs. merging it into Brotli's CMakeLists.txt?  I don't really care.\n. I put together some patches for this over the weekend (https://github.com/nemequ/brotli).  I want to do a bit more testing before I submit a PR, but in the meantime: comments welcome.\n. Okay, I rebased my patches and did some more testing, AFAICT everything works as expected.  PR filed as #464.\nI believe that, once merged, this issue should be resolved.  Am I missing anything?\n. > Can we close #332 too now?\nMaybe.  I'll respond there with details.\n. Okay, now that #326 is closed I'm not sure how this should be handled.\nThere is a single pkg-config file (brotli.pc) for all three libraries (enc, dec, common) right now.  It wouldn't be hard to create a brotli-common.pc for libbrotlicommon, then create brotli-{enc,dec}.pc, and just have brotli.pc require the brotli-{encoder,decoder} packages.  We could also consider only using the encoder or decoder an \"advanced\" use case and simply not support if via pkg-config.  I don't really have a preference, but if @eustas wants to go with the 4 pkg-config files I don't mind putting together a quick patch (it would just require adding a few lines to CMakeLists.txt).\nThis PR also adds an autotools-based build system, which I consider a mistake.  Brotli already has CMake, premake, and bazel build systems, plus language-specific build systems for the Python and Java bindings.  Please, no more confusion.  To be fair, though, this PR may predate CMake support.\nAs for the supporting the standard autogen.sh/configure && make && make install flow (you separated autogen.sh and configure, but usually autogen.sh calls configure, so you have autogen.sh for git checkouts and configure for releases), I've previously mentioned the idea of using my configure-cmake script to emulate this to avoid confusion (and provide a more comfortable way to configure the build; cmake's CLI is horrible).  I'm still willing to submit a PR for that if desired.\n. > @nemequ Regarding the pc, does have one or several files change how pkg-config will be used?\n(I'm not completely sure what you're asking here.  If I haven't answered below, could you re-phrase it a bit?)\nCurrently there is one pkg-config file (brotli.pc), which links to all three libraries (common, enc, dec).  So you can do\nsh\ncc ... foo.c `pkg-config --libs --cflags brotli`\nThe most common use case will almost certainly be to link to all three libraries, so I think brotli should continue to act as it does.  If @eustas wants to include pkg-config support for linking to the libraries individually, I would suggest 4 files: brotli.pc, brotli-common.pc, brotli-encoder.pc, and brotli-decoder.pc.  The encoder and decoder packages would depend on common, and brotli would depend on both encoder and decoder (and common via those module's dependencies on it).  That would allow the existing behavior via the brotli module, or you could just use brotli-encoder or brotli-decoder:\nsh\ncc ... unbrotli.c `pkg-config --libs --cflags brotli-decoder`\n\nIf so, my guess would be to try and follow @bagder 's files so that people can keep using the same setup.\n\nIf you're saying the names should be. e.g., libbrotlidec.pc instead of brotli-decoder.pc, most pkg-config files don't include the \"lib\" prefix (unless the project name includes it, such as \"libpng\") and try to provide \"pretty\" names instead of perfectly matching the shared library names.  Given that the names @badger suggested haven't been part of Brotli, much less an official release, at this point I'd much rather have something which matches pkg-config conventions than @badger's fork, especially considering how trivial it is to swap out the names.  From a technical perspective, though, the names don't really matter.\n\nRegarding autotools and autogen, I would say these are not important features given that @eustas decided to use different build systems.\n\nA lot of people look for configure/autogen.sh scripts.  It's important enough that there is a configure script in the brotli repository which does nothing other than tell people what build systems are available.  I'm not suggesting a full autotools build system, just replacing that script with configure-cmake to provide a more comfortable experience.  It's an easy way to \"fix\" that part of this issue and make brotli a bit more approachable.  Personally, it doesn't matter to me one way or the other; whatever @eustas wants to do.\nAnyways, I just need a decision on what to do, then I can throw together a PR (or, of course, this issue can just be closed if you just want to keep everything as-is).\n. > I'm just asking if your patch allows to link to library individually but you seem to suggest that it does not below.\nAh.  Right, what is currently in Brotli doesn't provide a way to link to each library individually through pkg-config.  Obviously you can still link to the libraries directly, though.\n\nI don't know what is \"most common\" for you, but for example in web engines we don't care about the encoder library we just want the decoder to use the WOFF2 fonts.\n\nI'm talking about projects, not user base.  Anecdotally (I'm way too lazy to try to do a real survey), I think a lot more projects will want to use both.\nThat said, I don't have any objection to the idea of adding a few more pkg-config to satisfy the unidirectional use case.  I just want to make sure that's what @eustas wants before I put together a PR so I don't waste effort.\n\nI'm not saying autotools or autogen must not be used. I'm just saying that we already have some build systems\n\nYou understand that I'm not suggesting adding an autotools build system, right?  configure-cmake is just a shell script you can drop into a CMake project (replacing the existing, somewhat useless, configure script) which maps an autotools-style interface to CMake; for example ../configure --prefix=/usr --disable-debug CC=clang just calls something like cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=clang.  autogen.sh wouldn't be necessary for brotli.  In other words, the entire patch would replacing the configure script in brotli with the one in configure-cmake.\n\nand docs so that should be enough for people to figure out who to create encore/decoder libraries.\n\nCMake's CLI is a huge pain, and the documentation sucks.  cmake --help is almost completely useless, and it's impossible to be sure which variables effect the build without looking through CMakeLists.txt; non-brotli-specific docs may or may not apply and are incomplete and/or contain irrelevant information, and the docs in brotli's README are very incomplete (though better off than premake or bazel).\nAn autotools-style configure script, OTOH, has a useful --help and the options are standard and well-known to the point where many (most?) people won't even need documentation.\n\nOf course we can add more if people really want but that's a separate issue and not the goal of this pull request IIUC.\n\nTo be fair, I don't think pkg-config is really the point, either.  AFAICT the real point was creating and installing separate encoder/decoder libraries, which Brotli already does (now, not when this PR was filed).  Beyond that, the only stuff he mentioned was pkg-config and autotools.\nAnyways, I don't really care about either issue.  IMHO adding some more pkg-config files and an autotools style interface for the build system are both good ideas, but neither effects me.  Whatever everyone else wants to do is fine.\n. > @nemequ : Apparently you are insisting a lot for stuff you said you do not care ;-)\nThat's why I mentioned that I don't really care; my point there was that I'm really not trying to be insistent about this.  Unfortunately, without body language it's hard for people to know that, while I do have opinions about how to proceed, I'm really not passionate about them.  These are fairly minor issues, and we're spending an inordinate amount of time talking about them.  I really just want to be done with it, especially considering I'm not really going to be using anything we're talking about here.  I'm really only here because I wrote the initial cmake (and pkg-config) stuff and I'm trying to help maintain it.\nMy positions are basically:\n- IMHO three more pkg-config files should be added, which I think we agree on.  However, I don't think it's a big deal if they aren't\u2026 pkg-config is nice to have but it's not critical, and I think the existing pkg-config file supports most users.\n- Adding configure-cmake would be nice because I think it would make building brotli easier for a lot of people, but if @eustas doesn't want do add it that's fine with me.\n- Those 3 pkg-config files should be called \"brotli-{common,encoder,decoder}\" not \"libbrotli{common,enc,dec}\" because that's the convention for pkg-config names, and I don't think it matters that those don't match @badger's original patch.  AFAICT, you disagree (\"my guess would be to try and follow @bagder 's files so that people can keep using the same setup\"), unless you've changed your mind.\n. Dup of #274\nUntil that is fixed, I think the function in Squash is safe: https://github.com/quixdb/squash/blob/26aa037b618c1a37d984099b8dd5a3e04d3058c3/plugins/brotli/squash-brotli.cpp#L265\n. 0.5 provides BrotliEncoderMaxCompressedSize, I think this can be closed.\n. Looks like it's still an issue: https://travis-ci.org/quixdb/squash/jobs/136512277\nThat's with 09543b5fc5637f1cda7a54dbf2b17f892006891b (you can verify that at https://travis-ci.org/quixdb/squash/jobs/136512277#L198).\nOn a somewhat related note (an easy way to switch compilers), if you are interested I'd be willing to put together a CMake-based build system for you; it could be useful for Squash, too, since we could share the build system\u2026\n. Thanks, it works :)\nhttps://travis-ci.org/quixdb/squash/builds/137077283\n. > I consider having multiple build systems on board, as long as they do not interfere and reside in root and build/ directories. Currently planned build systems are CMake, Premake, and Bazel:\nFWIW, I would avoid this if I were you.  It's easy to let the build systems get out of sync.  You're already forgetting about the build system for the python module.\nAnyways, I put together a quick CMake system at https://github.com/nemequ/brotli.  It would probably be a good idea to test it in Travis and/or AppVeyor, but unfortunately the python stuff is in the way.  I'll try to put together a quick helper script when I have time.  I think everything else should work, including running the tests (without depending on sh, so it should work on Windows) and installing the bro executable.\n. That looks like an issue with premake.  Maybe because the files were generated ahead of time instead of on the system you're (trying to) compile on?\nAnyways, the cmake support in my repo builds 3 static libraries, just like the premake version.  I've also tested it by embedding the repo into Squash's brotli plugin, so if you're using cmake for HashBackup you should be able to just add_subdirectory(brotli) and use the brotli libraries as-needed.\n. @eustas I managed to get travis working on my repo: https://travis-ci.org/nemequ/brotli/builds/140581300\nThat brings up a few more questions\u2026 for Squash we test a bunch of different compilers on Travis.  Do you want me to do something similar for Brotli?  If so, which compiler(s) and versions?  For ICC you would need a license, but everything else should be feasible\u2026\nAlso, you never said whether you wanted a configure-cmake wrapper for this.\nEventually it would probably be a good idea to generate a pkg-config file and maybe install the tests, but that should probably wait until the API stabilizes and brotli is ready to install a shared library.\n. > Also I see, it is possible to build/test with ASAN / MSAN. That is a super-cool option.\nYes, and I'll do that, but it's worth noting that this is most useful with a more comprehensive test suite\u2026 as it is, you're not really throwing anything at brotli that it doesn't expect\u2026 if you want, I can look into porting at least some of the tests over from Squash (I'll open up a separate issue for that, though).\n\nSo if you add more variants, we will be very grateful.\n\nSure, I'll try to take care of it later today.\n\n(Going to investigate ICC license question later).\n\nhttps://software.intel.com/en-us/articles/open-source-contributor-faq\nI don't think Google would meet the criteria for a free license, though being Google I guess it's likely you already own a license which could be used\u2026\n\nconfigure-cmake seems to cover all possible use-cases.\n\nHeh, it really doesn't, but thank you for saying so ;).  I like to think it comes close.\n\nPerhaps, a more light-weight version of this wrapper would fit our tiny simple project more =)\n\nPerhaps, but I don't see why you would want to reinvent the wheel here.  configure-cmake already exists and is known to work, the license is permissive, it doesn't create any hard dependencies (it's just shell scripting, not even bash), it's a single file (well, two if you count the configuration), and you happen to know the jerk who wrote it so if there are issues you have someone to talk to / blame.\n. Okay, I managed to get most of the stuff done for Travis.  See https://travis-ci.org/nemequ/brotli/builds/140999421\nI went with container builds instead of full VMs, which is faster and easier on Travis.  Unfortunately, it means the clang 3.5-3.8 builds can't be enabled yet because Travis hasn't re-enabled the LLVM apt repositories (they were down for a while, so Travis disabled them, but they're back up now).\nIt also messes things up for the sanitizers, which are apparently broken with the compilers packages from the ubuntu-toolchain-r repository.  It may be possible to fix this when the LLVM repositories are available by switching the sanitizer builds from gcc to clang.\nI did not include any builds using premake, though I guess it wouldn't be hard to add.  TBH, I just have no idea how to use premake.\n. Virtually everything should be working now (see https://travis-ci.org/nemequ/brotli/builds/146808543).  The only real hole is TSan, which I don't think is going to happen on 12.04\u2026 between an ancient version of CMake and updated compilers which expect newer binutils, there are just too many problems :(.  I'm sure I could get it working on 14.04, but if you want to use Travis' container infrastructure 12.04 is required, and given the number of different builds I think the container infrastructure is definitely a good idea.\nRemaining related issues:\n- Not sure if you're willing to use an unmodified configure-cmake, but if so I'm happy to add a patch to add it.\n- I'm willing to add a pkg-config file and install a shared library, but I'm not sure you want to do that until the API is stable.  Unless you want to version everything (i.e., libbrotli0.5, brotli-0.5.pc, /usr/include/brotli/0.5/*, etc.), which I'd be happy to throw together.\n- If you want I could probably port most of Squash's tests over to Brotli (especially if you're okay with using \u00b5nit like Squash does).\n. The original issue is resolved, so I'm going to close this.  I'm still willing to put together PRs for the other stuff mentioned in my previous comment; just let me know if you want me to.\n. BTW, if you want I'd be happy to put together a PR for these, just tell me which one(s) you'd be okay with.  Or, of course, just close the bug if you're not interested :)\n. > Hi. Thanks for an offer, but I'm little bit hesitate, and also it will a little bit easier for me to fix it in internal repository and then publish update to github.\nSounds good to me :).  Let me know if you change your mind, though; I don't mind helping with this, especially considering how supportive you guys have been of Squash.\n\nIdeas look great! I've planned to implement them next week (though it would require lot of courage and will to switch to snake case, I am old Java fan =).\n\nHah :).  FWIW, the CamelCase thing is probably the least important of the ideas I mentioned; as long as you're consistent I don't think it's a big deal.\n. Maybe I should create a new issue for this, but a related idea which may be helpful for your is to also have a callback for an allocation function of zeroed memory (i.e., calloc instead of malloc).  The default implementation could just call malloc and memcpy, but calling calloc can be a bit faster since the OS often keeps around pages of pre-zeroed memory.\nI'm not sure how much of a performance boost (if any) brotli would see, but I saw a pretty huge improvement in crush when I switched from malloc+memset to calloc\u2026 I think it's a bigger benefit for larger allocations because you don't have the cache hit from moving stuff into the CPU just to zero it.\n. Added a few (4) more ideas to the list.  Sorry to make this a bit of a moving target.\n. Depends on what you consider a streaming function, but I think you're correct.\nIf the size is a pointer, you can do something like\nc\nBROTLI_BOOL BrotliEncoderFinishStream(\n    BrotliEncoderState* state, size_t* encoded_size, uint8_t encoded_buffer[*encoded_size]);\nWhich should work as expected.  The length can even be an expression like *encoded_size * sizeof(uint64_t) if you want (you don't in this case, just wanted to point out that it's pretty flexible).\nHowever, if you actually want to modify the array pointer itself (like you do for BrotliEncoderCompressStream, then you can't use a real array; it would have to be a uint8_t**.  Something like\nc\nBROTLI_BOOL BrotliEncoderCompressStream(\n    BrotliEncoderState* s, BrotliEncoderOperation op,\n    size_t* restroct available_in, const uint8_t (* restrict next_in)[*available_in],\n    size_t* restrict available_out, uint8_t (* restrict next_out)[*available_out],\n    size_t* restrict total_out);\nIs tempting, but it would break because an attempt to change the value of *next_in or *next_out would fail.  So, assuming that's what you mean by the streaming functions, yeah, unfortunately that won't work :(.\nBasically, anywhere in brotli you have a uint8_t** parameter, I don't think you'll be able to use an array.  The good news is you can use restrict there, though\u2026\nc\nBROTLI_BOOL BrotliEncoderCompressStream(\n    BrotliEncoderState* s, BrotliEncoderOperation op,\n    size_t* restrict available_in, const uint8_t * restrict * restrict next_in,\n    size_t* restrict available_out, uint8_t * restrict * restrict next_out,\n    size_t* restrict total_out);\nAdd in the fact that you'll really want to use BROTLI_ARRAY_PARAM/BROTLI_RESTRICT (or whatever you want to call it) macros, and I think it's pretty clear why so few people bother to properly use conformant array parameters and/or restrict.\n. These days, even MSVC supports stdbool.h (as of VS 2013).  I'd prefer for Brotli to simply use the system bool everywhere and just require C99 (or at least the subset of it supported by VS 2013).  Being stuck with C89 in 2016 is ridiculous.\nC99 is pretty clear about boolean values; see \u00a7 7.16.  true is defined as 1, false is defined as 0.  Brotli defines BROTLI_FALSE as an enum value of 0 and BROTLI_TRUE as an enum value of !BROTLI_FALSE (which evaluates to 1), so the actual values shouldn't be an issue.  That said, I'd probably change BROTLI_TRUE to just be 1 instead of !BROTLI_FALSE.\nThe _Bool type, OTOH, could be a problem.  C99 specifies it as a type large enough to hold 0 or 1 (\u00a7 6.2.5,2), so 1-byte is sufficient and that's what every implementation I'm aware of uses.  However, most compilers use sizeof(int) for enums, and Brotli defines BROTLI_BOOL as an enum when in C89 mode.  I'm guessing that's why you had a problem.\n\nI agree with the idea that a boolean concept is more documentation-friendly than int, but the current implementation causes problems.\n\nAgreed, implementing it as an enum is a bad idea.\n\n(And I humbly submit that int is still the most \"correct\", idiomatic type for booleans in a portable C ABI.)\n\nIf you define \"portable\" as \"C89+\", then you're right.  However, targeting C99 is portable, and bool is the idiomatic type for C99, which pretty much every non-toy compiler other than MSVC has supported for a very long time.  Realistically, the only place _Bool/stdbool.h isn't going to be supported is people using old versions of MSVC.  Everyone else supports them even in C89 mode.\nsizeof(_Bool) on Windows is 1, so I would go with something like:\n``` c\nif define(BROTLI_NO_STDBOOL) || (defined(_MSC_VER) && (_MSC_VER < 1800))\nif !defined(bool)\ndefine bool unsigned char\nendif\nif !defined(true)\ndefine true 1\nendif\nif !defined(false)\ndefine false 0\nendif\nelse\ninclude \nendif\n```\nThen you can get rid of all the BROTLI_BOOL cruft.  Virtually every compiler/platform should work as expected.  I'm sure there is some weird compiler somewhere which targets an sbscure DSP or something which won't work, but worst-case scenario people can explicitly define a few preprocesor symbols before including brotli.\nOf course, if you're really attached to the BROTLI_BOOL idea, it would be easy enough to just #define BROTLI_BOOL unsigned char instead of using an enum.  sizeof(_Bool) is 1 on Windows and Linux x86_64, and probably most other places, though I haven't checked.\n. As I mentioned, virtually everyone other than VS < 2013 supports _Bool (and stdbool.h), even in C89 mode.  With what I suggested Brotli would still be completely usable in your projects.\nSticking to pure C89 hare isn't really about portability, it's about being technically C89 compliant.  In practice the only place you're likely to run into a real portability problem is VS < 2013, and I suggested a solution for that which would work automatically.\nThere is a tiny group of people who really need pure C89.  If you're using gcc, clang, msvc >= 12.0, icc, suncc, xlc, or really any other vaguely modern non-toy compiler, you are not in this group.  This group consists of people using 20-year-old compilers, or targeting something exotic where only a specific compiler will work and that compiler only supports C89 (may be true for some DSPs or something).  You're more likely to end up on a platform where endianness cannot be determined at compile-time than to have what I proposed be a real portability issue.  However, even for that tiny group of people, what I proposed would only require defining a macro or two.\nHowever, since it sounds like @eustas wants to stick with the BROTLI_BOOL thing, I'd suggest something like\n``` c\nif !defined(BROTLI_BOOL)\nif (defined(STDC_VERSION) && STDC_VERSION >= 199901L)) || \\\n   (defined(__GNUC__) && (__GNUC__ >= 3)) || \\\n   (defined(_MSC_VER) && (_MSC_VER >= 1800))\n\ninclude \ndefine BROTLI_BOOL bool\nelse\ndefine BROTLI_BOOL unsigned char\nendif\nendif\ndefine BROTLI_TRUE 1\ndefine BROTLI_FALSE 0\n```\nAlmost every compiler out there pretends to be either GCC or MSVC, and sufficiently recent versions of both are whitelisted as supporting stdbool.h, as are compilers in C99+ mode.  Other compilers (mostly old MSVC) will fall back on using unsigned char, but for the rare cases where that wouldn't be the correct type people can just define BROTLI_BOOL to something which works before including Brotli.\nNote that this would be quite easy to adapt to use bool, true, and false instead of creating a separate type for Brotli; you would just have to guard against redefining true and false.  That would give you a much nicer API.\n. > Sure. I'm biased, since most of the C projects I've participated in are explicitly C89-compatible.\nTechnically brotli already isn't C89-only.  It uses the types from stdint.h (i.e., uint8_t), except for MSVC < 16 where it defines those types itself, which is almost exactly (only the version of MSVC is different) what I'm suggesting it do for stdbool.h.\nTo make matters worse, the exact-size types ((u)intN_t) technically aren't even required by C99 (see \u00a7 7.18.1.1).  Only the minimum-width and fast minimum-width types ((u)int_leastN_t and (u)int_fastN_t) are required.  That said, everyone supports them; AFAIK they're really just option to support CHAR_BIT != 8, and I doubt Brotli would work if CHAR_BIT != 8 anyways.\n\nI also define \"portable\" as \"capable of having C++ bindings written for it\", and bool has (or used to have?) issues there too. Hopefully we've gotten to the point where C++ and C toolchains targeting the same architecture agree on the size of bool, but IIRC, it used to be a problem... maybe someone with more recent experience can comment on this?\n\nI'm not really a C++ person, but IIRC they have a bool type which is (can be or must be, not sure which) implemented with an enum.  I'm not sure whether it is still a problem, but to get around it you can use _Bool (which is built-in, doesn't require a header) instead of bool.  Maybe it would be safer to define BROTLI_BOOL as _Bool instead of bool, in which case you could just skip including stdbool.h altogether.\n\n\nBeing stuck with C89 in 2016 is ridiculous.\n\nUnless you're serious about being portable to a C89 toolchain subset, yes. ;) I mean, I hate old toolchains just as much as the next guy, but this is the game you play when authoring a C ABI for the masses. (And having a C89-subset ABI doesn't necessarily mean that you have to write your implementation in C89.)\n\nI don't care much about being portable to a generic, strictly C89 compiler.  I care about being portable to the toolchains people actually use, even relatively old ones.  C89 is mainly useful as a lowest-common-denominator, and if we want to use features outside C89 we should do so in a portable way.  The tiny areas of Brotli (like booleans) which aren't strictly C89-compliant can still be portable while providing a good API for people who have better compilers.\n\nvirtually everyone other than VS < 2013\nI'm veering off-topic, but I disagree with your assertion that the users of old MSVC versions are \"a tiny group of people\". MSVC9 and MSVC11 were pretty popular the last time I checked (which, to be fair, was a year ago... YMMV).\n\nYou're right, I didn't mean to include old MSVC in that \"tiny group\".  It's part of a separate group which can easily be special-cased (and, in every implementation I've suggested, is).  There are four groups\n- C99 compilers and compilers which support Bool and stdbool.h, _even in C89 mode.  This includes GCC >= 3, MSVC >= 18.0, and any compiler masquerading as one of them.\n- MSVC < 18 (a.k.a. VS 12 / 2013).\n- Everything else where sizeof(_Bool) == 1\n- Everything else.\nThe first group can be taken care of by simply using stdbool.h or _Bool.  Virtually every compiler pretends to be either GCC or MSVC (by defining things like __GNUC__ and/or _MSC_VER).  The major exception is older versions of MSVC\u2026\nThe second group is easy to take care of by defining either BROTLI_BOOL, bool, or _Bool to a type compatible with what later versions of MSVC use for _Bool.  I don't have a Windows box with VS to test this with, but mingw says sizeof(_Bool) == 1, so I think unsigned char should work.\nWhat's left, the third and fourth groups, is what is extremely tiny.    You're really just left with toy compilers and probably a few special-purpose compilers targeting weird architectures.  TBH I'd be surprised if the rest of Brotli worked here without any effort, but with what I've been suggesting these platforms would still work as the boolean type would just be #defined as unsigned char.\nFinally, you have the group of compilers not pretending to be GCC or MSVC on platforms where booleans use multiple bytes of storage.  If you compile Brotli with the same compiler as your application then the boolean type will be unsigned char and you're done.  If, however, Brotli is compiled with a different compiler all you would have to do is define the boolean type to something compatible before including Brotli.\nThat covers every platform I can think of, which pretty much checks the \"portability\" box as far as I'm concerned.\n\nSo, just in case the C++ issue @jchampio mentioned, how about this:\n``` c\nif !defined(BROTLI_BOOL)\nif (defined(STDC_VERSION) && STDC_VERSION >= 199901L)) || \\\n  (defined(__GNUC__) && (__GNUC__ >= 3)) || \\\n  (defined(_MSC_VER) && (_MSC_VER >= 1800))\n\ndefine BROTLI_BOOL _Bool\nelse\ndefine BROTLI_BOOL unsigned char\nendif\nendif\ndefine BROTLI_TRUE 1\ndefine BROTLI_FALSE 0\n```\nAnother option would be to use the build system to determine the value of sizeof(_Bool) and write an appropriate type, but that would require running an executable compiled for the target architecture, which would be a problem for cross-compilers.\n. Sorry, forgot to reply to this for a while\u2026\n\nbool is a built-in type in C++; there's no enum \"implementation\" that I'm aware of.\n\nI poked around the C++ spec a bit, and you're right.  Based on what I read in the C++11 spec, as well as some posts I found around the internet, it seems like the way to be portable between C and C++ here is to use stdbool.h.  Unlike C, C++ also doesn't specify (at least as far as I can tell) what the actual values for true and false are, so technically we really need to use true and false, though I would be very surprised if there is an implementation where they aren't 1 and 0 respectively.\nSo, I think the safest solution would be\n``` c\nif !defined(BROTLI_BOOL)\nif (defined(STDC_VERSION) && STDC_VERSION >= 199901L)) || \\\n  (defined(__GNUC__) && (__GNUC__ >= 3)) || \\\n  (defined(_MSC_VER) && (_MSC_VER >= 1800)) || \\\n  (defined(__cplusplus))\n\nif !defined(__cplusplus)\ninclude \nendif\ndefine BROTLI_BOOL bool\ndefine BROTLI_TRUE true\ndefine BROTLI_FALSE false\nelse\ndefine BROTLI_BOOL unsigned char\ndefine BROTLI_TRUE 1\ndefine BROTLI_FALSE 0\nendif\nendif\n```\n\nIf you're seriously considering this, I just have to know: what is so hate-worthy in the int-as-boolean idiom? :smile:\n\nThere isn't anything inherently wrong with it (other than the wasted space, but who cares about that?).  The real problem is that it's not clear what it is; every time I see an int return value I have to look up the documentation to see what the possible values are.  It's not just humans, either; static analyzers and optimizing compilers have no way of knowing what the possible return values are.  Enums would solve this, but they conflict with the standard booleans from C99+.\nHowever, all that is moot now.  Unless I'm missing something, 1.0 has been released, which means the API and ABI are stable.  Changing BROTLI_BOOL to an integer now would be a break.  Brotli doesn't specify a C standard for compilation, so C99 or C11 are used (depending on the version of the compiler used), which means existing compiles of brotli should all use stdbool.  Basically, what @jchampio was seeing when compiling in C89 mode would happen to everyone since the ABI would suddenly be returning sizeof(int) bytes instead of sizeof(bool).\n. > stdbool.h is C99, not C89.\nWhich has come up several times in this issue.  What's your point?\n. > Why bother with the ifdef maze? Why not make it #define BROTLI_BOOL unsigned char for all?\n- That would be incompatible with C99+ and C++ (not sure when they added bool, but I'm pretty sure it's in C++98\u2026).\n- Static analyzers and optimizing compilers can't make certain assumptions, so they'll be slightly less useful.\nThat said, it's a better solution than defining it as int or something else with a size other than sizeof(bool).\n\nAnd why the weirdo true and false defines? In C code we've used TRUE (1) and FALSE (0) for decades so they are familiar and known. Introducing other names for them are only making your code harder to read and weird.\n\nThis one I mostly agree with, but unfortunately the API is set already.  Removing them would break it.\nThe only real reason I can think of is to avoid conflicts with other libraries who try to define true and false (TRUE and FALSE are not the standard names, true and false are) themselves.  As you said, it's pretty common for people to define those macros, so if they include brotli first and don't guard their own defines with ifdefs things go bad quickly.  Admittedly it's a pretty minor concern; like I said, I mostly agree with you on this one.\n\nThe point is that C89 compatibility is the point, as mentioned quite a few times in the above comments.\n\nNo, the point is portability and, to a lesser extent, compatibility with other code.  C89 isn't really required for the former, and it's counterproductive to the latter.\nEven if portability depended on C89, the code I've posted works with pure C89 so you shouldn't have a problem.  It just also whitelists a few compilers known to support using stdbool.h (even in C89 mode).  If a compiler isn't known to support that it falls back on using unsigned char (which is available in C89), which is actually ABI compatible with what C99+ uses (as opposed to int, which isn't) with every compiler I've tried.  And, if that's not enough (because maybe sizeof(bool) != sizeof(unsigned char)) you can even define BROTLI_BOOL to whatever you want before including the file for those weird corner case platforms.\nAs for compatibility, these days most people are using C99+ or C++ (remember, both clang and gcc default to C11 now, and before that it was C99 for a long time).  For those people it's useful for brotli's boolean type to be compatible with their standard boolean type.  In other words, compatibility actually decreases if you just define BROTLI_BOOL to int.\nFinally, as I've mentioned, changing the return type in C99+ mode is a backwards-incompatible ABI break.  Maybe the brotli devs are comfortable with that, but I certainly wouldn't be if it were my project.\n. I'm not dismissing your claims at all.  As I've repeatedly said, what I proposed is C89 compatible.  A pure C89 compiler with zero support for anything else would simply use unsigned char.\nWhat I am dismissing is the idea that being C89 compatible means you can't use an extension on a few compilers known to support it which allows the API to work better for most people without harming C89 compatibility in any way.  If you take away all the ifdefs, on a pure C89 compiler you end up with\n``` c\ndefine BROTLI_BOOL unsigned char\ndefine BROTLI_TRUE 1\ndefine BROTLI_FALSE 0\n```\nHow is that not C89 compatible?\n. :o didn't realize you opened a PR for this.  I signed the CLA for a patch to Gipfeli, so that shouldn't be an issue anymore.\nPretty much everything should be working now, the only real exception is TSan, which I don't think is going to happen on Ubuntu 12.04.\nThe Travis error above looks transient (it happens sometimes); asking Travis to rebuild the commit should work.\n. That's very odd.  The same commit works for me: https://travis-ci.org/nemequ/brotli/jobs/146810092\n. Disabled gcc-4.5, everything finally seems to be working.  The failure with ubsan is expected; there is some undefined behavior in brotli (even with -DBROTLI_BUILD_PORTABLE).\nStill not sure why gcc-4.5 works in my repo but not as a PR, but I guess it's not a big deal.\n. I signed it!\n. I'm guessing if I opened up a PR it would resolve the CLA thing\u2026  would that help?\n. Argh, doesn't look like GitHub will let me file a duplicate PR; it just links me to this one.  I guess if you close this one I could probably do it\u2026\n. IMHO linking to third-party benchmark(s) would be a better idea, since there is less appearance of bias.  I'm partial to the Squash Compression Benchmark (or, for a more recent version, Unstable Squash Compression Benchmark), but I created them so I'm biased.  Others (listed in the Squash Benchmark FAQ) include:\n- Large Text Compression Benchmark\n- Squeeze Chart\n- Maximum Compression\n- World Compression Challenge\n. Closing since #399 fixes this; discussion (if necessary) can take place there.\n. Pushed a second commit which should, I think, resolve the issues where Travis works for nemequ/brotli but not google/brotli.  It should also speed up the build a bit.\n. I added another commit to this which is unrelated to the PR title.  Apparently some versions of CMake will cache the result of the check for log2, so if it fails without linking to libm it would simply skip the test with libm.  Changing the name of the variable for the second test (with libm) works around the issue.\nThe issue with Python on AppVeyor seems to have been caused by a change in AppVeyor; builds which previously worked don't anymore.  I'll submit a bug report with them and try to figure out what is going on there\u2026\n. Yes, https://github.com/FeodorFitsner/brotli/blob/master/appveyor.yml#L31 fixes the issue.  I'd just like to figure out if we should bother or just wait for setuptools to tag a new release\u2026\n. I can't rebuild the PR without changing the commits; @eustas would need to do that.  However, it works in my repository now (see https://ci.appveyor.com/project/quixdb/brotli/build/1.0.26).\n. Sorry, I guess I screwed this up when I added the CMake builds :(\nRegarding \"source $file\", the standard version is \". $file\".  Doesn't really matter if .travis.sh since that's only supposed to run on Travis, though.\n. If you're interested, I can also add a test for PGI on Travis (via nemequ/pgi-travis).. PR updated w/ a PGI build.. Regarding __builtin_constant_p:\n\nC11 macro:\nIAR\nSunCC\n__builtin_constant_p\nGCC 3.1+\nClang\nICC\nTinyCC 0.9.19+\narmcc 5.04+\nInsane macro\nTI\nXL C/C++\nNothing\nMSVC\nDMC. Hedley is actually CC0, which is basically a legally-sound disclaimer of copyright to the maximum extent possible. Even if it's not possible to formally place works in the public domain in a given jurisdiction CC0 has a fallback which grants permission to use it for whatever you want. I'm not aware of any reason any project would be unable to use it (which is why I chose it), other than perhaps having to run everything by a legal department which just hasn't approved it yet. That said, I'm the sole author of Hedley right now; I could grant you permission to use it under a different license if need be.\n\nIf you just want to only use parts of it that's fine, please just change the namespace.\nAnyways, defining __has_* is the real problem; I only noticed the other stuff because went a little overboard recently working on the same issues for Hedley\u2026 I'm sure the existing code works perfectly for the vast majority of users.. If you want, I can provide a patch for that. I didn't want to rewrite Hedley in Brotli, but I don't mind using it\u2026. The disadvantage of that is that it's harder to keep up to date with enhancements in Hedley since you can't just drop in a new version. If you're comfortable with that then I don't see a problem. I don't care about the credit (blame?), I just want to know about any bugs or improvements :)\nSwitching back to __builtin_constant_p, I put together something you can use. I'm also working on a version in the dev branch of Hedley. As you can see, it's evolved a bit to handle different use cases\u2026 IS_CONSTANT is probably the one you want, unless you've been misusing __builtin_constant_p. It will use __builtin_constant_p when available, and fall back on checking for integer constant expressions in C11 (except for suncc, which is broken) or on compilers which support sizeof(void).. @trudeaun the ICE macro works on XL C; I'm not sure what makes you think it's causing me trouble. I have a few issues with XL (which I've already reported on the community forum), but this isn't one of them\u2026\n\nWhich of the following are you trying to achieve?\n\nDetermine whether a macro's operand is an integer constant expression\nDetermine whether the value of the macro's operand can be determined to be a constant\n\n\nBoth. I personally care about 2 a bit more (and I think that's what Brotli needs), since I use it for choosing between a code path which can be optimized away by the compiler if the value is known at compile-time and one which is fast at runtime, but 1 has its uses as well so I'd like to support it. https://github.com/nemequ/attic/blob/master/is_constant.h has a big comment at the beginning which may help clear things up a bit.\nI'm happy to discuss this further, but we should probably do it in an issue in Hedley or my \"attic\" repo (or you can just e-mail me); it's a bit of a tangent for this issue.. Interesting. It works on Solaris Studio 12.3 on Linux.  It seems that until 12.6, it was just #defined to the expression, so bumping the version to 5.15 shouldn't have any negative effects.\nI guess there are some Linux-specific defines in suncc. I'll have to spin up a VM to test Hedley :(\nThanks for tagging me on this, @eustas.. > Why do not use GLOB? (And have policy that common/, dec/ and enc/ may contain only files to be built)\nFrom the CMake documentation:\n\nWe do not recommend using GLOB to collect a list of source files from your source tree. If no CMakeLists.txt file changes when a source is added or removed then the generated build system cannot know when to ask CMake to regenerate.\n\nI can change it to use glob if you want, but with CI in place I don't think there is much danger of forgetting to add/remove a file, so IMHO it is better to leave as-is.\n. ",
    "rygorous": "Unaligned loads/stores: the \"official\"/safe way to do an unaligned 32-bit load from \"p\" is:\nuint32_t tmp;\nmemcpy(&tmp, p, sizeof(uint32_t));\n// use tmp\nStore likewise via memcpy. I know this is really gross, but I've run into several compilers that get really aggressive about assuming that loads/stores are aligned, and all major C/C++ compilers actually detect this type of use of memcpy and turn it into the unaligned loads/stores you want. I would prefer not to have to do this kind of thing, but compilers tend to get more pedantic about spec-lawyering all the time, and especially ARM compilers like to combine adjacent LDRs (which do not require alignment on ARMv6+) into LDRDs (which do), which has caused \"fun\" portability problems for me in the past.\n. ",
    "cicku": "I just read news about this. I think it's great (better than zopfli).\nIt'd be better to use it from pypi.\n. ",
    "Lukasa": "FWIW, my CFFI-based Python wrapper for Brotli is available from PyPI, but I very deliberately did not register the name brotli. If you are still planning to ship the C-based bindings to PyPI, you should make sure you register that name as soon as possible to prevent anyone else from accidentally stepping on it.\n. While this is still ongoing, I'll continue to remind people that there is still a CFFI-based wrapper published on PyPI under the name brotlipy. The update to v0.5.1 of brotli should be coming along shortly.\n. @anthrotype Agreed. I think it'd be better for the core brotli implementation to choose what that API looks like though. =) At that point, I'd consider brotlipy to basically be a wrapper that is primarily useful as a drop-in replacement for people using PyPy.\n. I'd like to add my voice to support this idea. As the author of the Python wrapper library brotlipy, I have had to adopt the changes made by @bagder in order to extract the portions of the code that are relevant to Python library usage. This is problematic, because it forces me to make transformations on the code that make it incompatible with any brotli library installed from elsewhere, ensuring that I have to keep track of changes made in this repository rather than dynamically link against a binary library provided by the OS itself.\n. ",
    "TheNain38": "Any news on this?\n. ",
    "bsergean": "+1 for this. Great to know that @Lukasa has published a wrapper but it would probably be better to have the \"legit\" module on PyPI.\n. ",
    "candrew34": "I am looking for the same thing.\n. ",
    "LifeIsStrange": "Hello, there is also this rust library : https://github.com/ende76/compression\nWhich will be used by servo the layout engine of the future, see: https://github.com/servo/servo/issues/8156\n:) \n. You're welcome ! =) \nAlso are you a Firefox dev ? Because it will be more intelligent to use this rust library as a common gecko and servo library instead of duplicate the work in two distinct library ;)  now that gecko can have rust code. \nAlso sorry for my poor english. \n. ",
    "replete": "I have a demo working here.\n. ",
    "devongovett": "brotli.js (linked in the original issue) now has a hand ported decoder instead of using Emscripten. It is less than half the size of the Emscripten JS output, and is over twice as fast according to my benchmarks. To use in the browser, you can build it with Browserify or similar.\n. @eustas brotli.js is pure JS, hand ported (at least the decoder). I found it to be ~2x faster than an emscripten compile of the C++ code when I wrote it, and much smaller. Am I understanding correctly that your new JS decoder is 2x faster again than brotli.js (so 4x faster than emscripten)?. ",
    "rdp": "So include it in the next version possibly? :). ",
    "ericlaw1979": "It looks like the change may have introduced tab-based indentation in bro.cc while the rest of the file uses spaces? Also, looks like the latest change in trunk requires adding <time.h> to the top of bro.cc\n. This change results in the output file having the readonly attribute set; see http://stackoverflow.com/a/11810168/126229 for an explanation of why that is. I think you want:\n```\nint fd = open(output_path, O_CREAT | O_WRONLY | O_TRUNC\nifdef _MSC_VER\n | O_BINARY, S_IREAD | S_IWRITE\n\nelse\n, S_IRUSR | S_IWUSR\nendif\n``\n. In Windows, if you fail to passS_IRUSR | S_IWUSRtoopen, the resulting file is created with the NTFSReadOnly` attribute set so the resulting file cannot be edited (or deleted by code).\n. Per MSDN, S_IWRITE also allows S_IREAD, so presumably the latter isn't truly necessary, although it is also harmless and a bit more clear about the intention.\n. ",
    "dominikhlbg": "No fopen is more robust.\nhttp://stackoverflow.com/questions/1658476/c-fopen-vs-open\nopen() works with flags \"S_IREAD | S_IWRITE\"\nBut is it useful to use readflags Windows: \"S_IREAD\" and UNIX: \"S_IRUSR\" when file is use writeonlyflag \"O_WRONLY\"?\n. You talk about S_IRUSR | S_IWUSR.\nI talk about S_IRUSR | S_IREAD.\n. I did release a java encoder of brotli. https://github.com/dominikhlbg/BrotliHaxe. ",
    "gyf19": "+1\n. +1\n. Cool\n. ",
    "nitram509": "Hi,\nI just stumbled upon this issue and would like to add my 2$cents.\nI like to see MS Visual Studio related bugs fixed, as this makes the code more cross platform compatible. And I dislike to see the MS project file added. Simply because it is awkward to maintain two or more build files consistently.\nAs a side note:\nSince a few days I have good and painless experience by using CMake for building \"libbrotli\".\nAs it already comes with numerous templates I was able to compile Java bindings with it. I was able to compile with all three: VS GUI, command line MS nmake (32bit & 64bit) and OSX make.\nSee https://github.com/nitram509/jbrotli for details.\nFrankly said I'm not a CMake expert and I expect my version misses some settings ;-)\nThanks for listening, feedback is welcome.\nMartin\n. @shawncao \nYou got brotli.so compiled under Mac OSX and running it in Java? Cool. \nHow do you managed to use the .so file from Java?\nWould you please provide some sources (e.g. via Github ghist)? \n. Wow cool, that you plan to provide Java wrappers. I'm interested in your outcomes.\nSo we might join forces and can further improve brotli support in the Java World.\n. :+1: \n. Hi Eugene,\nthank you for this outlook.\nThese are my thoughts/feedback:\n- stream encoderno externalizes it's state (BrotliEncoderState)\n  - sadly is no more a class\n  - but consistent with decoder now\n  - consistency I prefer more than a state I need to hold\n- docs of BrotliEncoderCompressStream: ...Workflow consists of 3 tasks...\n  - this is not clear to me: internal or external workflow\n  - I suggest to revise the wording to: ... internally workflow consists of 3 tasks...\n- prefixing constants with 'k' is old school\n  - I know, this follows Google's C++ guide, nevertheless I think this is awkward\n- documentation in general is more clear\n  - e.g. the breadcrumb/hint to custom dictionary from decoder is very helpful.\n- One thing I miss: How would I initiate a new/empty BrotliEncoderState?\n. About the comments, what do you think about switching to\nDoxygen?\nAs a benefit for users, you could then automatically generate docs and e.g. upload them to\nhttps://readthedocs.org/.\nWhat do you think?\n. In the current v0.5.2 release, there is still a confusing declaration between\n- bool FinishStream(...);\n- bool WriteBrotliData(const bool is_last, ...);\n@eustas would you please give me a hint, when to use what?\n. ",
    "elfring": "To which commits do you refer to for this issue?\n. Are there any update candidates left over?\n. Thanks for another small source code improvement.\n. Thanks for your small source code improvement.\n. ",
    "jeroen": "Yay thank you!\n. I can confirm these results. At least for the example above brotli is about 10x slower with the default settings and still performs much worse than xz:\n``` r\n\nCompare size\nlength(x)\n[1] 6779000\nsystem.time(print(length(brotli_compress(x))))\n[1] 1369587\n   user  system elapsed \n 26.702   0.672  27.371 \nsystem.time(print(length(brotli_compress(x, mode = \"font\"))))\n[1] 1353634\n   user  system elapsed \n 26.417   0.624  27.038 \nsystem.time(print(length(memCompress(x, \"gzip\"))))\n[1] 2323522\n   user  system elapsed \n  0.358   0.001   0.359 \nsystem.time(print(length(memCompress(x, \"bzip2\"))))\n[1] 2289619\n   user  system elapsed \n  0.661   0.004   0.664 \nsystem.time(print(length(memCompress(x, \"xz\"))))\n[1] 937728\n   user  system elapsed \n  2.006   0.045   2.050 \n```\n. @bhouston why are you suck with JavaScript-based compression? There are C implementations of lzma?\n. Perhaps their main selling point is that decompression is faster than for lzma, to make things easier on the client. But I agree that the difference in compression ratio very big, given the proposal states that:\nThis specification defines a lossless compressed data format that compresses data using a combination of the LZ77 algorithm and Huffman coding, with efficiency comparable to the best currently available general-purpose compression methods.\n. @bhouston yes it seems like brotli does outperform everyone in terms of decompression speed. It is similar, sometimes  bit faster than gzip. But I have yet to find an example where the compression ratio is better than xy or bzip2. \n. Thank you.\n. Thanks. Not sure if that justifies undefined behavior in the default build though. \n. I think you are mistaken, these UBSAN errors appear on linux on x86_64.\n. This indeed seems to help. Does this flag have any side effects? Why is it not the default?\n. Update: most of these are now fixed, but a few remain. Here the new log: http://pastebin.com/raw.php?i=p74N5zkM\n. Update: only a single warning remains:\n\nenc/encode.cc -o enc/encode.o\nenc/encode.cc: In member function 'bool brotli::BrotliCompressor::WriteBrotliData(bool, bool, size_t*, uint8_t**)':\nenc/encode.cc:409:41: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\n. Closing in favor of https://github.com/google/brotli/issues/302.\n. Thank you. Let me know if I can help test something.\nFull build logs are here by the way: https://cran.r-project.org/web/checks/check_results_brotli.html\n. Any updates? Need to fix these issues downstream...\n. Still getting a warning in C++98:\ng++ -I/usr/share/R/include -DNDEBUG      -fpic  -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2 -g  -O3 -Wall -pipe -Wno-unused -pedantic  -c wrappe\nr.cc -o wrapper.o\nIn file included from enc/encode.h:15:0,\n                 from wrapper.cc:3:\nenc/./hash.h:111:33: warning: invoking macro length argument 1: empty macro arguments are undefined in ISO C90 and ISO C++98 [enabled by default]\n     return code ? code : length();\n                                 ^\nAnd:\n\"dec/decode.c\", line 1251: warning: statement not reached\n. Oh that might be in my bindings actually. Sorry for that...\n. Thanks yes I was including a header file before brotli which apparently had a length() macro. Not sure if there is a sensible way to avoid such problems. \nI am opening a separate issue for Solaris problems.\n. So how is the client supposed to know how much memory to allocate for BrotliDecompressBuffer if we cannot rely on BrotliDecompressedSize ?\n. Perhaps this is mostly a documentation bug then. Without fully understanding technical details of brotli, it seemed the basic API decompressing a buffer was to allocate memory based on BrotliDecompressedSize and then invoke BrotliDecompressBuffer. \nI maintain brotli bindings for the R language. So I suppose I better switch to the BrotliDecompressStream API to decompress arbitrary brotli data? \nCan I still use BrotliCompressBuffer for encoding a buffer or does this API have similar limitations?\n. Have you pushed the updates for BrotliDecompressedSize yet?\n. Have you checked https://github.com/google/brotli/blob/master/docs/brotli-comparison-study-2015-09-22.pdf ?\n. Apologies, I seem to have mixed up with another repository.\n. ",
    "fcharlie": "This class ,override is a c++11 key word\nSupport \"override\" keyword require GCC 4.7 or later\n```\nclass BrotliMemIn : public BrotliIn {\n public:\n  BrotliMemIn(const void* buf, int len);\nvoid Reset(const void* buf, int len);\n// returns the amount of data consumed\n  int position() const { return pos_; }\nconst void Read(size_t n, size_t OUTPUT) override;\nprivate:\n  const void* buf_;  // start of input buffer\n  int len_;  // length of input\n  int pos_;  // current read position within input\n};\n// Adapter class to make BrotliOut objects from raw memory.\nclass BrotliMemOut : public BrotliOut {\n public:\n  BrotliMemOut(void* buf, int len);\nvoid Reset(void* buf, int len);\n// returns the amount of data written\n  int position() const { return pos_; }\nbool Write(const void* buf, size_t n) override;\nprivate:\n  void* buf_;  // start of output buffer\n  int len_;  // length of output\n  int pos_;  // current write position within output\n};\n```\nExplicit virtual overrides    N2928 N3206 N3272              GCC 4.7\nhttps://gcc.gnu.org/projects/cxx0x.html \n. ",
    "matsprea": "on line 179\nParseArgv(argc, argv, &input_path, &output_path, &force, &quality, &decompress, &repeat, &verbose);\nthat calls on line 102\nif (!ParseQuality(argv[k + 1], quality)) {\n. Your right, sorry.\n. ",
    "bagder": "I've started a little attempt at build scripts and setup to build a library (.so and .a with libtool) from the brotli source code here: https://github.com/bagder/libbrotli\nBuilds a decoder lib right now.\n. Oh certainly. This is just starting so I'm interested in feedback and improvements. I simply started with the decoder parts because that is where my primary interest lies. \n. I put up a separate build project that builds a shared and/or static libbrotli library out of the brotli source code and it should use -fPIC already when necessary: https://github.com/bagder/libbrotli\n. We decided having them as two libs might be the best way forward, so having the files in separate directories then became less of an issue...\n. Shared libraries and proper SONAME versioning?\n. We generate them in the libbrotli repo, although using autotools, but the same approach could be used.\n. Oh, shared libraries are optional. I didn't expect that, sorry. \n. We live in a shared library world these days. Most library build systems these days build shared by default and that's what most users use (compare even with other compression libraries). I think the brotli libs should build shared by default too.\n. Those docs says we can/should use an option. There's nothing there saying it should default to non-shared or that static is preferred. You could easily just switch the default to say shared by default unless you turn it off.\n. As someone who'd like to use brotli as a library (which is why I made the libbrotli project that now looks like it will meet its maker soon), for a project that is C89/C90 compatible (curl) I would of course prefer a good old C89 compatible API so that my entire user base can have a chance of using all the brotli fun. But that of course also relies on everything else (at least in the decompressor lib) to be C89 as well, not just the API.\n. Any user of the API would still read the documentation for the function in which you of course explain what it can return. If it only ever returns 1 and 0, say so. It doesn't matter that the type is 32bit. That's not a problem to users.\n. Why bother with the ifdef maze? Why not make it #define BROTLI_BOOL unsigned char for all? (and frankly, it is probably even faster for most situations to make that at a plain int instead). And why the weirdo true and false defines? In C code we've used TRUE (1) and FALSE (0) for decades so they are familiar and known. Introducing other names for them are only making your code harder to read and weird.\n. > most people are using C99\nI like it how you just dismiss our claims that we value and treasure C89 compatibility so I won't waste more time here.\n. I needed this patch, as otherwise automake complains on the lack of a three files. NEWS, AUTHORS and Changelog.\n~~~diff\ndiff --git a/Makefile.am b/Makefile.am\nindex 55ba9de..e823159 100644\n--- a/Makefile.am\n+++ b/Makefile.am\n@@ -1,6 +1,6 @@\n-AUTOMAKE_OPTIONS = gnu nostdinc subdir-objects\n+AUTOMAKE_OPTIONS = foreign nostdinc subdir-objects\nACLOCAL_AMFLAGS = -I m4\nLIBBROTLI_VERSION_INFO = -version-info @PACKAGE_VERSION@\n. An additional suggestion: put the headers and source files in a separate file that can be included by both cmake and automake (if you intend to keep maintaining both): I've found that to work really well in the curl project. We put them in Makefile.inc files.. ",
    "fxfactorial": "@bagder Nice thanks, is it feasible to eventually have just one library instead of separate ones for encoder, decoder?\n. You could always write one, the code is not that bad and you can take inspiration from the their python bindings, or my OCaml bindings, https://github.com/fxfactorial/ocaml-brotli/blob/master/src/brotli_stubs.c#L41 and there was a Lua binding available as well.\n. I didn't think so either.\n. Is 1.0.0 going to be a stable release? I am maintaining OCaml bindings to brotli and the API changes quite often? https://github.com/fxfactorial/ocaml-brotli. ",
    "aa88088aa": "\u4f60\u50b3\u4ec0\u9ebc?\u6211\u8981\u5bc6\u78bc\n2015/9/30 \u4e0b\u53489:46\u65bc \"nuch-lek\" notifications@github.com\u5beb\u9053\uff1a\n\nVID_20150927_014307.mp4\n<\nhttps://drive.google.com/file/d/1dAVtiGs0KV8nUr6lSCj80bWw2MT2-WxksA/view?usp=drivesdk\nVID_20150927_014305.mp4\n<\nhttps://drive.google.com/file/d/1ntKHY9Yhql6vD0GZ_eIvXyQbG_Ayueh4Sg/view?usp=drivesdk\n\n\u0e2a\u0e48\u0e07\u0e08\u0e32\u0e01 Gmail \u0e21\u0e37\u0e2d\u0e16\u0e37\u0e2d\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/google/brotli/issues/162#issuecomment-144403630.\n. I lost my password , demanding to know the password ? Know what I mean?\n2015/10/1 \u4e0a\u53486:43\u65bc \"CoolOppo\" notifications@github.com\u5beb\u9053\uff1a\n@aa88088aa https://github.com/aa88088aa I think you may have\naccidentally replied to the wrong issue or something.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/google/brotli/issues/162#issuecomment-144566679.\n. \n",
    "GuillaumeRossolini": "Actually, there seems to be makefiles inside each folder (dec, enc, tools). To build everything, cd to \"tools\" then \"make\".\nOr am I mistaken?\nDoesn't have the \"install\" procedure though.\n. Thanks!\n. ",
    "Arkanosis": "That would be great!\nBTW shouldn't --best be an alias for -11 instead of -9? That will probably be a bit more complex to handle since -11 is not a short option anymore, though.\n. ",
    "thedrow": "Any chance to get this merged?. Looks like this is complete. Should we close this issue?. No need for anything else. That should do the trick.. Any news on this? We're waiting for the 1.0 release in order to upgrade the Ruby implementation.. Yay! . Large payloads can be decompressed more rapidly if you utilize multiple cores.\nThis is especially true when streaming compressed data through a socket.\nAlso compressing can be sped up by using multiple cores.. Any chance to get this with 1.0?. zstd's CLI does the trick just fine.. ",
    "zmichael": "Please Please Please merge it. ",
    "agordon": "To anyone following this topic (the 'brot' stand-alone compression) program:\nI've long ago signed google's CLA (in fact, on Oct 02, 2015 11:23 PDT).\nI haven't been keeping track of brotli since I wrote this - but if anyone is interested in picking it up and making it work - they have my full support. If there are minor changes that I can help with - let me know.. ",
    "bhouston": "@jeroenooms I want to send LZMA compressed mesh data to our WebGL viewer that runs in JavaScript:\nhttps://clara.io/view/d3b82831-d56b-462f-b30c-500ea1c7f870\nThus I need to have browser-based client side decompression.  I would love it if LZMA or an equivalent (I was hoping Brotli) was integrated into all browsers, but as it stands, only gzip and deflate are available.  Thus yo have to use LZMA.js for browser-based LZMA decompression.\n. @jeroenooms I think that LZMA also requires significant maximum memory for decompression, which Brotli may be improving upon.\nIt would be near if you could re-run your statistics with decompression times and maximum memory instead of compression times, if that was easy.  Maybe that will better emphasize Brotli's benefits?\n. > My guess was right. Even without knowing the format, it is easy to improve compression ratio.  Step 1: split odd and even bytes, e.g. with python script\nWeird approach but it gave good results.  The file is a bit of a mish-mash between float and integer data.  It will exhibit a 32-bit alignment pattern as it is filled mostly with 32 bit floats and 32 bit floats with some exceptions and we do align all internal data array starts on 32-bit boundaries for JavaScript ArrayBuffer access efficiency.\nAs some asked, a trimesh / polymesh format is for representing piece-wise linear objects in 3D.  This format supports both trimeshes and polygon meshes:\nhttps://en.wikipedia.org/wiki/Triangle_mesh\nhttps://en.wikipedia.org/wiki/Polygon_mesh\nIt is composed of a list of 3D positions (X,Y,Z as 32 bit floats triples), and then a list of integers which state how those points are connected to form triangles or polygons, (one list of integers which states how many points per face/polygon, and then another list of those indices for each face) and then it contains normals (more XYZ 32 bit float triples) and UVs (UV 32 bit float pairs) and more integers that state how these are to be used by the faces/polygons (these are called polygon mappings.)  This format actually will change the precision of the integers it uses from 8 to 16 to 32 bit depending upon their required maximum values, but I believe this files is mostly 32 bit integers because it is on the larger size (more than 65K vertices/points, and thus it exceeds the range of 16 bit integers.)\n. > But generally, these formats seem extremely wasteful - you could probably get an order of magnitude better compression with a cheap but dedicated compressor.\nOur data is representative of a lot of non-video large binary streams -- it is composed of long streams of floats and integers, exactly what should be in a binary data stream.  Our case is an easy one because they are even 32-bit boundary aligned.  Of course we could write a custom compressor but then it will be in JavaScript again and we lose the speed and memory benefits of having it integrated into the browser.  It would also take a lot of time for us and also force that on all other 3D developers -- thus it is not a globally efficient solution nor a locally efficient solution.\nI would prefer to just use LZMA.js in that case or a browser-based compression tool that produces similar results.  Basically saying that I have to write a custom compression scheme because Brotli is inadequate compared to LZMA is not an acceptable answer.  We have good general purpose compression schemes for a reason and right now Brotli isn't one, even though it claims to be.\n. > My first thought is to cover all triangles with a tree (like in https://en.wikipedia.org/wiki/File:Icosaedro_desarrollo.gif ) - then go through the tree and add new information for each node: usually one vertex per node - just store the difference of its position to the previous ones. \n\nOr even less as it has to agree with neighbors - one distance per node (difference from equilateral triangle) seems sufficient.\n\nThis sounds like the triangle strip idea:  https://en.wikipedia.org/wiki/Triangle_strip\nBut the standard storage format for Triangle Strips is still a list of vertices as XYZ 32 bit floats and then a long list of 32 bit integers.\nI am interested a bit in general purpose compressors, but only if they are easy to implement and ultra fast and give better results than LZMA.\nSo if I understand one could easily write a special purpose compressor for lists of 32 bit floats.  Basically you want a reordering of the positions to have neighbors close by, then an adjustment of their space to be fully positive in XYZ.  And then a reordering of their internal bytes.  And then I need to send this into a general purpose compression stream of some type -- what would you recommend?  One can do that fairly simply I guess.  This covers the compression of the 32bit floats.\nWhat would you do with the 32bit integers to maximize compression?  If one does a neighbor reordering of the XYZ positions, that imposes an ordering on the 32bit integers which reference those points.  Basically one can only impose an order on either the integers or the XYZ positions, but not both easily.\n. @JarekDuda Very interesting.  Our case is a bit more complex than what is outlined, and would require a fair bit of work to deduce, but I bet there is a good algorithm to be had in the end.\n. @JarekDuda Just be careful that there are two major different mesh formats, one is purely for playback in a video game -- limited trimesh format with a fixed number of channels, and there is a second more general polygon format with arbitrary named channels -- also used for playback when one needs additional channels or knowledge of the polygonal structure.  Both are heavily used for data transfer needs.  I have interests in both.\nBTW the current most popular open mesh compression format is OpenCTM.  I think it is mostly LZMA: http://openctm.sourceforge.net/  And then this for in browser decompression: https://github.com/jcmellado/js-openctm\n. I understand re-ordering the vertices as well as splitting out the Y, X and Z into linear arrays so that it is X0, X1, X2, X3.... Y0, Y1, Y2.... Z0, Z1, Z2, is better.\n. But maybe you are corrent that OpenCTM is the best solution, maybe it is better than I thought.  I apologize.\n. Those are fairly significant improvements to brotli.  That is nice.  It doesnt' have to his LZMA compression level, but 25% improvements over what it was is hugely significant.  What was the compression time for this file at level 11?\n. ",
    "Metric": "I can also confirm that brotli sucks with some binary and text files using the GENERIC / TEXT setting! I can zip up the brotli source code on my mac down to 8.3MB using the standard archiver utility. If I try to archive the brotli source code using brotli it increases it from 19.8MB to 33.3MB with a quality setting of 6! Even with a quality of 11 it is still 31MB! I have tried both ways, where I combine the binary of all files into one file and compress or compressing individual files and combining into one file. Either way it works out to the same amount some how.\nNow, I have to hand it to brotli when it comes to a 5200x2500 image file which is 2.8MB in jpeg form at 100% quality. Brotli is able to compress it down to 900KB with just a quality of 6. With a quality of 11 it gets it down to 813KB roughly. It is a simple graphic of a logo though. However, it is better than a PNG version of the logo. A PNG version of the logo is 1.98MB. So, hey at least that is an improvement!\n. ",
    "JarekDuda": "I have checked lzturbo 1.2 ( https://sites.google.com/site/powturbo/home ) on this file:\n-49 mode: 894,729 \n-39 mode 1,256,602\nand LZA 0.82 ( http://encode.ru/threads/1969-LZA-archiver ): 995,014  \nI think the main issue is that Brotli still uses Huffman coding, which is terrible at skewed probability distributions, characteristic for some types of data. More recent compressors use ANS coding instead (lzturbo, LZA, LZNA, ZSTD, Apple LZFSE), which allows to repair it still maintaining the speed.\n. One of reasons might be the fact that the first 9 bits of float ( https://en.wikipedia.org/wiki/Single-precision_floating-point_format ) is sign and exponent, which should be nearly the same for most of points. Also the next 8 bits: the most significant of the fraction, should be similar for neighboring points.\nSo if you group even or odd positions, you make these similar bytes closer and so simpler for compressor to use their similarity (most of them work on bytes).\nBut generally, these formats seem extremely wasteful - you could probably get an order of magnitude better compression with a cheap but dedicated compressor.\nStarting with storing differences instead of absolute positions, additionally entropy coder coder should be used for the most significant digits.\nStoring the mesh is a graph compression problem and mesh is a very specific one - should be cheaply compressible.\nMy first thought is to cover all triangles with a tree (like in https://en.wikipedia.org/wiki/File:Icosaedro_desarrollo.gif ) - then go through the tree and add new information for each node: usually one vertex per node - just store the difference of its position to the previous ones. \nOr even less as it has to agree with neighbors - one distance per node (difference from equilateral triangle) seems sufficient.\n. If decompression in java is your requirement, LZMA would be still much slower than dedicated compressor I have sketched.\nBut generally I also think that it is too early to declare Brotli as a new standard - it is still far from state-of-art compressors ( http://encode.ru/threads/2313-Brotli?p=44970&viewfull=1#post44970 ) and uses Huffman making it terrible if skewed probability file happen.\n. Indeed imposing an order is difficult, better is to directly encode parameters of the \"triangle strip\":\n- first you have to encode the structure of the tree. For a triangular lattice you have full binary tree - their number is Catalan number, you need ~1 bit/node: if this is a leaf or not. \n  Comparing to 3x32 vertex numbers, it means 96x compression.\n- then you don't need 3 float numbers per vertex - imagine such triangular lattice you want to bend - there are lots of constraints due to the fact that lengths of triangle edges have to agree. It is sufficient to store 1 length per node of the tree - e.g. length of its edge on the right (on the left is from its neighbor).\n  Then decoder would need to perform the bending - it is a few trigonometric operations per node - really cheap comparing to what LZMA does.\nRegarding using floats - you store mostly very similar numbers - their exponent and sign (9 of 32 bits) are probably identical, also the most significant bits of the fraction.\nUsing fixed-precision numbers instead you should directly get like 1/2 savings.\nAnd their most significant digits are usually from some localized probability distribution, especially if you encode differences - you can use entropy coder for them.\n. I have started a general discussion about shape compression ( http://encode.ru/threads/2324-Data-compression-of-a-%283D%29-shape-e-g-of-TriMesh-or-a-chemical-molecule ) and was pointed a nice paper:\nhttp://www.cc.gatech.edu/~jarek/papers/Compression.pdf\nIt says we need ~1byte/triangle, what agrees with what I have written.\nIn contrast, the standard you have described uses 3x4 bytes per vertex plus ~3x4 bytes/triangle for labels - we are talking about a cheap ~20x compression, 3 times better than the best discussed above (which are much more expensive).\nIt's sad that standards are so wasteful ... it's what's happening when engineers don't talk with theoreticians ...\n. ",
    "jyrkialakuijala": "I'm now seeing 1'236'531 bytes with --quality 11 --window 24. I have some ideas (using more LSB6/MSB6 context modeling and less blocks) that we will try out later this year, with an expected 5-10 % more compression for this kind of data.\n. I don't see a problem with input|about, Russian|longest and violence|anywhere|benefits  -- this is just a matter of zeroless representation.\nsony|guys|fuck|pipe and cock|gang strings may deserve an explanation. Respectively, they consist of four and two separate words in the dictionary. Brotli's dictionary encoding is more compact than in c-strings: no zero bytes are necessary for marking the end of a string. The order in which the words are stored was chosen by an iterative algorithm that was optimizing for compression density. The earlier a word occurs, the less bits are needed to represent it. The words are not together in brotli's dictionary because of co-occurence in the training data, but the placement was driven by population counts, the first position of the word in a file, and by entropy modeling cost of the characters within the word.\nThe static dictionary data is not available in the brotli program as a human readable document, and does not affect brotli's ability to represent or not represent certain strings.\nI will close this issue next week. Please re-open if you need later more information on it.\n. @csvan There can be a good reason why he wants to be anonymous.\n. It is not a human readable document, and does not affect brotli's ability to produce or not to produce any strings.\n. Are these sorted 64-bit hashes?\n. I have identified a problem in the hashing that degrades the compression performance after 2 GB for quality >= 5. We will fix this within three days.\n. Levels 5-9 should work in the head now. Level 11, the same as 10, is still misbehaving for files longer than 2 GB.\n. lgwin can be up to 24 in brotli, but the maximum you want to use depends on the capabilities of the client running the decoder. For the mobile web use it might be wise to avoid the levels 23 and 24, and possibly smart to stay at 19.\n. There is no brotli file framing format yet, so there shouldn't be a lot of use with files.\n. Thanks for the detailed proposal.\nI don't think 'free' is the correct estimate for hpacking 'br' vs 'brotli'. We are going forward with 'br' for content-encoding, but we have been planning to rename the binary to brotli. Expect this to happen during the next month.\nLater, we might declare a recommended framing format for use with brotli. However, this has no impact for content encoding, but might require new names. For an early version of the proposal, see https://github.com/madler/brotli/blob/master/br-format-v3.txt\n. Please go ahead with transforming libbrotli to a pull request that merges libbrotli into brotli.\n. Would you be willing repeat the test so that every algorithm is limited to roughly 16 MB of decoding context?\n. perhaps removing the f from the end would change something on another compiler?\n. Please do not try to reproduce this experiment in other languages, we will keep making changes to the large window brotli experiment at will for the next 18 months or so -- also, do not use the large window brotli for actually storing data for now. While the current version gives ~10 % compression density improvement for enwik9 and even more in some special compression scenarios like patching, we have many further ideas on how to improve on this. This means that the format is currently not finalized, and will be changed many times (and always in an backward/forward incompatible way) before it will be even considered for integration into the brotli master repository -- or split into a separate repository.\n. ",
    "valette": "\nBTW the current most popular open mesh compression format is OpenCTM. I think it is mostly LZMA:\n\nit is LZMA plus vertices and triangles reordering, to improve compression:\nhttps://github.com/Danny02/OpenCTM/blob/master/lib/compressMG2.c#L191-L212\nThis scheme could probably be improved, but there are several constraints to take into account. IMHO the input mesh topology is the biggest constraint : as an example, you cannot perform triangle strip compression on a triangle soup, where all vertices are disconnected.\n. ",
    "wallabyway": "@bhouston :  I wonder if \"utf8 webgl-loader\" mesh compression, with brotli is a better option than gzip ?  I did a quick test on the utf8 data here: http://webgl-tests.crbs.ucsd.edu/obj-viewer/?model=test\nand brotli ratio seemed comparable to lzma.\n60MB obj file (original file)\n12MB utf8 file...\n4.5MB utf8.gz (using default)\n3.4MB utf8.br (using q11, w24)\n3.4MB utf8.xz (using default)\nThe ideas in Won's utf8 webgl loader do the specialized transform that @eustas (and @JarekDuda)  mentioned, but it sounds like you want to avoid any deserializing in js land?\n. ",
    "wbond": "It should note that the project uses c++11, and thus requires GCC 4.7+, according to the discussion at #158.\n. ",
    "fred-wang": "@eustas Also, the README should really explain the different build systems (CMake, python, Bazel, make, premake) and explain how to build and install shared libraries & headers with CMake (for package maintainers, expecially).\n. I did not try it, but from http://stackoverflow.com/a/32756885 one workaround might be to add a cast to an int in the definitions of BROTLI_HAS_UBFX and IS_CONSTANT(x)\n. This appears in Mozilla MacOSX buildbot (search constant-logical-operand in the raw logs). I tried casting to an (int) but that does not help: https://treeherder.mozilla.org/logviewer.html#?job_id=17040941&repo=try\n. I just pushed https://treeherder.mozilla.org/#/jobs?repo=try&revision=1133d2b81b26 let's see if that changes something (BTW, I can not reproduce the problem on my Linux system either and my gcc does not recognize the constant-logical-operand warning).\n. OK, the double exclamation mark trick seems to work:\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=592ee4d1c523&selectedJob=17086321\nhttp://archive.mozilla.org/pub/firefox/try-builds/fred.wang@free.fr-592ee4d1c5238f8990b3deffc3cd42b6ff5fba1f/try-macosx64/try-macosx64-bm83-try1-build15516.txt.gz\nThe previous changeset was:\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=2eb88e7da740\nhttp://archive.mozilla.org/pub/firefox/try-builds/jnicol@mozilla.com-2eb88e7da740319ac602ca3f0502cea59a498d3a/try-macosx64/try-macosx64-bm87-try1-build13456.txt.gz\n03:55:15     INFO -  In file included from /builds/slave/try-m64-0000000000000000000000/build/src/obj-firefox/x86_64/modules/woff2/Unified_cpp_modules_woff20.cpp:29:\n03:55:15     INFO -  In file included from /builds/slave/try-m64-0000000000000000000000/build/src/modules/woff2/src/woff2_dec.cc:39:\n03:55:15     INFO -  In file included from /builds/slave/try-m64-0000000000000000000000/build/src/obj-firefox/x86_64/dist/include/./decode.h:12:\n03:55:15     INFO -  In file included from /builds/slave/try-m64-0000000000000000000000/build/src/obj-firefox/x86_64/dist/include/./state.h:12:\n03:55:15     INFO -  Warning: -Wconstant-logical-operand in /builds/slave/try-m64-0000000000000000000000/build/src/obj-firefox/x86_64/dist/include/bit_reader.h: use of logical '||' with constant operand\n03:55:15     INFO -  /builds/slave/try-m64-0000000000000000000000/build/src/obj-firefox/x86_64/dist/include/./bit_reader.h:41:31: warning: use of logical '||' with constant operand [-Wconstant-logical-operand]\n03:55:15     INFO -    if (__builtin_constant_p(n) || 0) {\n03:55:15     INFO -                                ^  ~\n03:55:15     INFO -  /builds/slave/try-m64-0000000000000000000000/build/src/obj-firefox/x86_64/dist/include/./bit_reader.h:41:31: note: use '|' for a bitwise operation\n03:55:15     INFO -    if (__builtin_constant_p(n) || 0) {\n03:55:15     INFO -                                ^~\n03:55:15     INFO -                                |\n03:55:15     INFO -  1 warning generated.\n03:55:15     INFO -  libwoff2.a.desc\n03:55:15     INFO -  rm -f libwoff2.a\n03:55:15     INFO -  /builds/slave/try-m64-0000000000000000000000/build/src/obj-firefox/x86_64/_virtualenv/bin/python /builds/slave/try-m64-0000000000000000000000/build/src/config/expandlibs_gen.py -o libwoff2.a.desc Unified_cpp_modules_woff20.o\n. > It seems you've missed\n\ndefine IS_CONSTANT(x) (!!__builtin_constant_p(x))\n\nThe constant-logical-operand warning only seems to complain about constant operands, but I guess it's safe to do that too...\n. OK, I just opened #322\n. Hi. I thought I had already signed Google CLA when I contributed to Chromium, but maybe that's a different one. I'll check that and come back to you later.\n. @eustas OK, I've updated the commit author to use the address of my employer, which already signed a corporate CLA.\n. I'd also like to express support for a separate library. I've worked on WOFF2 support in Gecko and the WebKit GTK port and it would be more convenient to link to a system library instead of having duplicating code in the repos that we have to build & keep in sync.\n. With the new CMake build system it's now easy to create such brotli libraries. FYI I've opened #421.\n. > hi, yes, though i found the issue, which is that the header files won't be copied to $PREFIX/include when running make install. Is this expected behavior?\nYou right I only considered the libraries, but I guess the header should be copied to include/ too. I'll try making a new pull request later to add them to the files to install.\nAs for the name of libraries (with underscore), I just kept the one that were used in the cmake by the brotli author.\n. @fholzer Can you please try with https://github.com/google/brotli/pull/437 ?\n. @fholzer OK, I think installHeaders is essentially the same as mine (except that I also install headers on Windows, not sure what should be done on that platform). For fixBrotliLinking, I don't know what name is best but I guess it is up to the maintainer of the brotli project to decide...\n. > Regarding the headers on windows I wasn't sure myself, and I needed it for Linux only. Will post an update once I got the chance to test this on windows.\nSo my recollection is that the only thing needed is to have the libraries in the same directory as the executable, otherwise they are not found. I don't think there is a standard locations for libraries or headers on Windows, so I guess this does not really matter.  There are some UNIX-like systems on Windows (e.g. MSYS2) that may have different requirements, but maintainers can write patches if they want to. Anyway, it seems nice to have the public headers installed too.\n. @eustas So I guess you replied on the pull request about the WIN32 case. Can you please indicate whether you want to preserve the underscore in the library names? Thanks!\n. The pull request to install the headers has been merged. Are the library names with underscore fine for everybody? Is there anything else needed? Or can we now close this issue as well as the https://github.com/google/brotli/pull/332 pull request?\nI think it would also be nice to have a brotli release with the cmake library changes, so that we can start using the release as a reference for package maintainers & users (see for example the duplicate woff2 pull requests in https://github.com/google/woff2/pull/63 and https://github.com/google/woff2/pull/61).\n. > For the sake of consistency with the google / ngx_brotli, the underscores should not be present...\nngx_brotli relied on the unofficial librotli so I guess it should be updated to match whatever convention the maintainers of brotli want. Anyway, I opened https://github.com/google/brotli/pull/439\n. @eustas thanks for merging my pull requests.\nSo now that the library names match google/ngx_brotli, is there anything else needed here?\n. @bagder \n\nShare libraries and proper SONAME versioning?\n\nYes, shared libraries can now be generated. I don't know if that's what you want but the version used in the one in common/version.h and if you follow the cmake instruction in the README, you get the following libraries and soft links:\nlibbrotlicommon.so ->libbrotlicommon.so.1.0.0\nlibbrotlidec.so -> libbrotlidec.so.1.0.0\nlibbrotlienc.so -> libbrotlienc.so.1.0.0\n. > Oh, shared libraries are optional. I didn't expect that, sorry.\nYes, I tried to follow CMake's usual approach i.e. to rely on the BUILD_SHARED_LIBS flag (off by default). I guess it is fine to have these shared libraries optional.\n. @bagder OK, that makes sense to me too.\n@eustas I don't know what is best but https://cmake.org/cmake/help/v3.0/variable/BUILD_SHARED_LIBS.html mentions using the OPTION cmake command. \n. i.e. https://cmake.org/cmake/help/v3.0/command/option.html\n. > Those docs says we can/should use an option. There's nothing there saying it should default to non-shared or that static is preferred. You could easily just switch the default to say shared by default unless you turn it off.\nI don't know if that remark was directed to me but just to clarify I was replying to https://github.com/google/brotli/issues/326#issuecomment-254208935 and just suggesting to use the OPTION command instead (but of course making it on by default as otherwise that does not change the current behavior). I'll try to submit a pull request to do that.\n. @eustas Regarding pc files, it seems we could use the configure_file command to generate them, see for example https://github.com/mysql/mysql-proxy/commit/6d108a4f8cc72b07ad046cb9a76448b056deb48d or https://github.com/madler/zlib/commit/ca6e7a0d552e3b54c0833658409e34f9de3bead6.\n. @nemequ That seems more complicated than the configure_file way and IIUC this would only be beneficial for Windows. Do you have any plan to clean this module up and submit it to the cmake maintainers? I would personally be more comfortable to rely on an official cmake module than to have to copy and maintain one in brotli... In any case, the configure_file way seems a reasonable and simple option, even if it's only for the short term.\n. @nemequ \n\nbut AFAICT the CMake people are entirely disinterested in anything to do with pkg-config\nI don't really understand that, but okay. I have fewer reservations about relying on in-tree code than a module distributed by someone else which is likely to change depending on what version happens to be installed.\n\nWell, my goal for the present GitHub issue is to have packages for Brotli/woff2 shared libraries that can be used by several programs, instead of having multiple copies of Brotli/woff2 bundled in their source code (in my case WebKit, Gecko and maybe fontforge). Achieving this by copying a cmake module seems a bit contradictory to that principle: IMHO the cmake module should really be upstreamed so that it can be used by all the projects that want pkg-config support without having to copy it everywhere. Now, if cmake devs don't care that's a bit problematic...\n\nUsing the module is a simple option, too; writing it wasn't, but that's already done. It may not be pretty but AFAIK it works perfectly and IMHO the benefit of shipping a correct pkg-config file vastly outweighs any concerns about copying the module, but since Brotli isn't my project that's not my decision to make. Note that it would also be possible to copy some of the contents of the file into Brotli's CMakeLists.txt to avoid polluting the source tree.\n\nNote that Brotli is not my project either so I don't decide either. As I said my main goal is to have packages for shared libraries in order to get rid of multiple copies in projects I work on. I don't really feel like submitting a cmake module I did not wrote, that I can not test (the windows part I mean) and whose author indicates it needs some clean up and review. However, if you want to open a PR and if the windows stuff is very important for your then please do so :-) Otherwise, I think I'll just try the configure_file way when I have time...\n. > It's not really related; you don't have to copy the module into projects which use brotli, it's just something for brotli's build system so it can output a correct pkg-config file.\nIndeed, it's worse than just \"projects which use brotli\": What you are suggesting is that any cmake project that generates pkg-config files (BTW, I plan to do the same work for woff2...) should not use a simple configure_file cmake command but copy your custom cmake module or at least the logic it contains. I'm just stating the obvious rule that if some pattern appears in several projects it should be shared as much as possible rather than duplicated in each place. IMHO, if generating pkg-config files is something important for many cmake projects, then a cmake command or module should be provided by the cmake developers.\n\nBesides, even if it was included in CMake's standard modules tomorrow, it would be many years before brotli could really take advantage of it\n\nTrue, but I'm not sure it's a strong reason against trying it. If I continue the parallel with libbrotli, it will take time before the next version of brotli is released and before shared libraries are packaged in the various distros so that they can really be used by the projects that need brotli. But that does not prevent me from trying ;-)\n\nAnyways, I'll try to throw together a PR for all this stuff by next week. I need to check a few of the changes which have been made to the CMake support anyways, since I think they'll break Squash when I pull them in.\n\nThank you!\n. Great, thank you @nemequ !\nCan we close #332 too now?\n. For people interested in having separate pc files, I opened a follow issue #473 . @nemequ Regarding the pc, does have one or several files change how pkg-config will be used? If so, my guess would be to try and follow @bagder 's files so that people can keep using the same setup.\nRegarding autotools and autogen, I would say these are not important features given that @eustas  decided to use different build systems.\n. > (I'm not completely sure what you're asking here. If I haven't answered below, could you re-phrase it a bit?)\nI'm just asking if your patch allows to link to library individually but you seem to suggest that it does not below.\n\nThe most common use case will almost certainly be to link to all three libraries, \n\nI don't know what is \"most common\" for you, but for example in web engines we don't care about the encoder library we just want the decoder to use the WOFF2 fonts.\n\nIf you're saying the names should be. e.g., libbrotlidec.pc instead of brotli-decoder.pc, most \n\nNo I was not talking about names, just about the features. If people are already linking library individually and your *.pc does not allow that, then I think it should be fixed.\n\nA lot of people look for configure/autogen.sh scripts.\n\nI'm not saying autotools or autogen must not be used. I'm just saying that we already have some build systems and docs so that should be enough for people to figure out who to create encore/decoder libraries. Of course we can add more if people really want but that's a separate issue and not the goal of this pull request IIUC.\n. @nemequ : Apparently you are insisting a lot for stuff you said you do not care ;-)\nJust to clarify my point: My understanding of the libbrotli project was indeed to allow brotli libraries to be created and used. So I see how the ability to generate shared and install libraries & pc files is important for that purpose and this is now possible (but not when this PR was opened). But I do not follow the connection between the librotli and the rest of what you are talking about, sorry...\n. I'd recommend to close this pull request and to open separate issues / PRs for the different topics discussed here. In my opinion, only the discussion about pc files is relevant to the initial goal of having a brotli encoding/decoding library.\n. @nemequ  In order to avoid hijacking this PR and to mix up too many topics, I opened #473 and #474 ; feel free to open more separate issues or to submit pull requests.\n@eustas Can you please close this PR?. I signed it!\n. I signed it!\n. @eustas Can you please take a look to that one-line change? I think this is the remaining important bit to fix issue #326 . The travis failures seem to happen on BUILD_SYSTEM=python, so that should be unrelated to CMake changes?\n. @eustas OK, that works for me too (let's see later if some Cygwin or MSYS2 maintainers complain...). I updated the pull request.\n. @eustas OK, but at the moment we do not install the libraries at all when building in static mode, so the headers are not going to be used anyway. Maybe we want to remove the whole if(BUILD_SHARED_LIBS) here so that we also install the lib & include in static mode too?\n. @eustas OK, done.\n. @eustas updated the install directory, but not sure what you mean with your last comment?\n(PS: feel free to take over this work if that's faster, I'm not experienced with all these cmake build configs either...)\n. Closing as it is included in #450 \n. @eustas Are you going to take care of this?. Thanks. I trust you @eustas !. @eustas thanks!. @eustas \u00bfAny update on this?. Is it https://github.com/google/brotli/pull/520 ? It seems to be green ;-). @eustas Great, thanks! Do you also plan to submit a PR to google/woff2 to upgrade brotli when v1.0.0 is released?. > v1.0.0 is coming soon.\n@eustas Do you have any idea about when v1.0.0 will be released?. > Going to see through issues list and, hopefully, new release will happen next week.\n@eustas Sorry for pushing again, but are there still things blocking the 1.0.0 release?. @eustas So it was https://github.com/google/brotli/pull/581 ?. @eustas So I guess there is still delay...  :-(\nJust FYI, the web engines hackfest 2017 edition is in one month and I hope we would have a release of brotli with stable API since then so that we can package it in distros and start the work for WOFF2 too... with the goal of having at least Linux browsers using system libraries for web fonts.. @eustas Great, thanks and congrats!!!! Do you plan to you plan to submit a PR to https://github.com/google/woff2 to upgrade it to brotli 1.0.1???. @jimjag I guess it's #483 . cc @mcatanzaro. When I was trying to build brotli/woff2 and to run the executables (I don't remember exactly whether it was after a local \"make install\" or not), the shared libraries were not found so I had to copy this from the CMake doc. Since my goal with CMake was to make brotli/woff2 easily buildable for distro maintainers and that libraries packages will be installed in standard system paths anyway, this RPATH option should not be necessary indeed. I guess people not willing to use the libraries installed on the system will just link static versions. So this is fine by me.. > I'm not going to sign the CLA... this change is clearly de minimis; feel free to take it and re-commit or whatever necessary to satisfy the legal overlords.\nIgalia already signed the CLA, so that should not be needed anyway.. Thanks, this LGTM. @eustas can you please review this?\nCmake reference: https://cmake.org/cmake/help/v3.11/command/project.html. ",
    "sbrl": "Thanks :D. ",
    "wizzard0": ":+1: \n. ",
    "DiThi": "@eustas Thanks!\nThough, I can't find any documentation or examples. Can the custom dictionary be anything? Is it enough to concatenate a bunch of common data together?\n. ",
    "tesseract2048": "Verified, thanks.\n. Tested on a 2.79GB file, results are same.\nEvery line in the file looks like the following one:\n30878059857552670 50025829476611184 66874527287706175 375508968765795686 373127765632278220 375342102553363245 364326748989567069 366505919391298506 377457911994795327 363411424571894825 373898759588425536 374334808416099019 360760477436270128 361309365116896886 364352003089439073 375674008634286701 367152582065696876 367855851559397543 367273034879590470 373534666133923980 374767354319435320 364939151523857981 370766209358644373 368849862587483333 369375471723485160 360428992812683960 362756519526083575 368058669706273620 363374354726247701 383336502073316860 390840051326797822 389682673771031688 392042489058586768 382011509102760527 385448191113192450 384274092396816514 379180964994502905 382036106541650951 388203100937202784 393434223891394090 388010572174871871 380003376763688520 386570822226305665 380297123401928640 386596087792217231 383677090571341963 390567909615441534 389005466880157272 393969508707548020 387078554704535241 381737568827717361 392334530352732955 390266000934033127 394425453383066281 383385069065536734 389697536188506696 388212606095605133 388999121467810361 399878203990676585 405963764532775318 398673866377410605 404746856101231847 410863332993714830 399881472443165042 404307238551047893 404064578127766509 402851101716692827 396751564398309658 400444420333068725 408786268458861903 409681960326371980 400376894996149263 401096177915629208 397287185742754389 405113985967409613 413703204463637567 403771931572842749 402507102181568599 407150113799399139 400798926857979021 401045289602881283 407200800125504338 399083388635636878 411847794488541711 411032375813134263 410397688189064473 408149830613424760 404890282039985176 476848146289316439 469545715298139183 481242829052469824 478271635622728360 473675894149529551 470754644261353529 479402329352691534 472168062584460950 476539969431554962 479069280569433230 481430874913536310\n. Yes, you can say that, @jyrkialakuijala.\nIt represents sparse feature.\n. Sure, thanks.\nI've identified that it worked as expected with quality <= 4.\n. ",
    "witchu": "I made a lua binding, it must be a .so. It not user friendly to build my binding with\nCFLAGS=-fPIC CXXFLAGS=-fPIC make\ninstead of just\nmake\nNow, My makefile call\nmake $(MAKE) -C brotli/enc\nmake $(MAKE) -C brotli/dec\nBut I think I can embed brotli/enc/*.o and brotli/dec/*.o into my makefile.\nThanks\n. ",
    "Sanmayce": "\nThe above quick run was done on my Core 2 laptop, on Haswell the 3x may jump up to 5x hands down, hate that I don't have Haswell or alike to share the actual stats.\n\nI am not alone, one overclocker helped me a lot to benchmark your Brotli against the superb Zstd and my Shifune:\n- 1st column: Intel Core 2 Q9550s @2833MHz laptop Asus;\n- 2nd column: Intel i7 5960x 'Haswell E/EP' core/cache @4700MHz/@4200MHz RAM @2666MHz; MOBO Asus Rampage V Extreme; http://cdn.overclock.net/8/8b/8b2c8f32_decompshowdown.jpeg\n- 3rd column: Intel Core i5 6600K 'Skylake' core/cache @4700MHz/4500MHz RAM @3200MHz CL15; MOBO Asus Maximus VIII Extreme; http://cdn.overclock.net/6/6b/6b1770b9_decompshowdown.jpeg\n```\nD:\\Showdown_Brotli_vs_Zstd_vs_GZIP_vs_Shifune>dir\n09/26/2015 10:08 PM  13,713,275 Complete_Works_of_Fyodor_Dostoyevsky.txt\n09/26/2015 10:35 PM   3,717,191 Complete_Works_of_Fyodor_Dostoyevsky.txt.4MB.lzturbo12-39.lzt\n09/26/2015 10:16 PM   3,717,583 Complete_Works_of_Fyodor_Dostoyevsky.txt.brotli                         ! 153.228 MB/s; 364.29 MB/s; 397.508 MB/s !\n09/08/2015 02:33 AM   4,582,363 Complete_Works_of_Fyodor_Dostoyevsky.txt.Nakamichi                      ! 448 MB/s; 2112 MB/s; 1728 MB/s!\n09/26/2015 10:19 PM   4,617,360 Complete_Works_of_Fyodor_Dostoyevsky.txt.zip\n09/26/2015 10:11 PM   5,209,670 Complete_Works_of_Fyodor_Dostoyevsky.txt.zst                            ! 302.5 MB/s; 619.8 MB/s; 628.3 MB/s !\n09/26/2015 10:08 PM  10,192,446 dickens\n09/26/2015 10:35 PM   2,976,910 dickens.4MB.lzturbo12-39.lzt\n09/26/2015 10:17 PM   2,962,118 dickens.brotli                                                          ! 146.61 MB/s; 336.342 MB/s; 374.577 MB/s !\n09/08/2015 02:33 AM   3,740,418 dickens.Nakamichi                                                       ! 448 MB/s; 1984 MB/s; 1664 MB/s !\n09/26/2015 10:19 PM   3,681,828 dickens.zip\n09/26/2015 10:11 PM   4,134,924 dickens.zst                                                             ! 298.9 MB/s; 619.7 MB/s; 623.8 MB/s !\n09/26/2015 10:09 PM 100,000,000 enwik8\n09/26/2015 10:37 PM  29,148,393 enwik8.4MB.lzturbo12-39.lzt\n09/26/2015 10:24 PM  27,722,164 enwik8.brotli                                                           ! 134.094 MB/s; 285.19 MB/s; 305.225 MB/s !\n09/08/2015 02:33 AM  34,218,460 enwik8.Nakamichi                                                        ! 256 MB/s; 1024 MB/s; 1152 MB/s !\n09/26/2015 10:21 PM  35,102,891 enwik8.zip\n09/26/2015 10:11 PM  40,024,854 enwik8.zst                                                              ! 325.0 MB/s; 651.6 MB/s; 653.8 MB/s !\n09/26/2015 10:09 PM  14,613,183 The_Book_of_The_Thousand_Nights_and_a_Night.txt\n09/26/2015 10:37 PM   4,241,855 The_Book_of_The_Thousand_Nights_and_a_Night.txt.4MB.lzturbo12-39.lzt\n09/26/2015 10:19 PM   4,163,630 The_Book_of_The_Thousand_Nights_and_a_Night.txt.brotli                  ! 144.867 MB/s; 336.624 MB/s; 372.129 MB/s !\n09/08/2015 02:33 AM   5,293,102 The_Book_of_The_Thousand_Nights_and_a_Night.txt.Nakamichi               ! 384 MB/s; 1984 MB/s; 1600 MB/s !\n09/26/2015 10:22 PM   5,198,949 The_Book_of_The_Thousand_Nights_and_a_Night.txt.zip\n09/26/2015 10:11 PM   5,932,453 The_Book_of_The_Thousand_Nights_and_a_Night.txt.zst                     ! 305.8 MB/s; 625.4 MB/s; 631.3 MB/s !\n09/26/2015 10:09 PM   4,445,260 The_Project_Gutenberg_EBook_of_The_King_James_Bible_kjv10.txt\n09/26/2015 10:37 PM   1,089,279 The_Project_Gutenberg_EBook_of_The_King_James_Bible_kjv10.txt.4MB.lzturbo12-39.lzt\n09/26/2015 10:19 PM   1,087,439 The_Project_Gutenberg_EBook_of_The_King_James_Bible_kjv10.txt.brotli    ! 160.277 MB/s; 339.146 MB/s; 370.247 MB/s !\n09/08/2015 02:33 AM   1,441,679 The_Project_Gutenberg_EBook_of_The_King_James_Bible_kjv10.txt.Nakamichi ! 704 MB/s; 2432 MB/s; 2368 MB/s !\n09/26/2015 10:22 PM   1,320,100 The_Project_Gutenberg_EBook_of_The_King_James_Bible_kjv10.txt.zip\n09/26/2015 10:11 PM   1,537,047 The_Project_Gutenberg_EBook_of_The_King_James_Bible_kjv10.txt.zst       ! 320.7 MB/s; 656.1 MB/s; 668.6 MB/s !\n09/26/2015 10:09 PM   3,265,536 University_of_Canterbury_The_Calgary_Corpus.tar\n09/26/2015 10:37 PM     921,958 University_of_Canterbury_The_Calgary_Corpus.tar.4MB.lzturbo12-39.lzt\n09/26/2015 10:19 PM     867,503 University_of_Canterbury_The_Calgary_Corpus.tar.brotli                  ! 144.849 MB/s; 266.176 MB/s; 283.114 MB/s !\n09/08/2015 02:33 AM   1,319,701 University_of_Canterbury_The_Calgary_Corpus.tar.Nakamichi               ! 576 MB/s; 1792 MB/s; 1792 MB/s !\n09/26/2015 10:22 PM   1,017,658 University_of_Canterbury_The_Calgary_Corpus.tar.zip\n09/26/2015 10:11 PM   1,174,349 University_of_Canterbury_The_Calgary_Corpus.tar.zst                     ! 367.3 MB/s; 740.6 MB/s; 747.2 MB/s !\nD:\\Showdown_Brotli_vs_Zstd_vs_GZIP_vs_Shifune>\n```\nNote: Skylake is good, however being newer than Broadwell I expected more.\n. \nI was wrong about 5x hands down, in fact it is 4x-6x.\n. Just a note on the unfairness about comparing LzTurbo, I deliberately hurt the compression ratio of LzTurbo by choosing 4MB block, my intention was to silent the empty-talkers who always complain, using 4MB sliding window gives significantly better compression since the inheritance in chunks/blocks is lost, this is in its turn unfair to LzTurbo!\nNowadays, with constantly growing #cores & #caches & RAM size the bigger is the better, so all these resources have to be utilized not like now - UNDERUTILIZED.\nHowever, running with small resources footprint is so cool - BUT ONLY IN HEAVY MULTI-THREADING, yes?!\n. > Would you be willing repeat the test so that every algorithm is limited to roughly 16 MB of decoding context?\nNo problema, the idea is this torture to present a clearer picture of mainstream textual [de]compression, yet my desire is to go beyond the funless 4GB of RAM and see what future holds. With higher densities of DDR4 sticks we will have soon 4x32GB in desktop PCs, what about using 1GB blocks as well?!\nBut first, I need a new compile, not complaining about decompression size.\nAlso, my intention is to add:\n- LZ5 level 15 block 256MB;\n- LzTurbo 29  block 256MB;\n- LzTurbo 39  block 256MB;\n- GZIP level 9;\n- XZ level 9;\n- what else? More-the-merrier...\nXZ uses 64MB, by default, in its max level i.e. 9.\nCan't wait to see also the Planet-Spitting Performance of LZSSE2 level 16, have to wait for its console version... yet, thanks to Hamid's TurboBench I made one quite interesting benchmark of 80 DSLs (dictionaries with minimalistic html-like tagging), the very same that form the:\n03/05/2016  11:04 PM     7,717,431,808 _DSL_(Dictionary_Specification_Language_(ABBYY_Software_House))_corpus.tar\nFor the full 80 testdatafiles log:\nhttp://www.sanmayce.com/Downloads/log-Laptop-Toshiba_DSLs.txt\nJust one, the Merriam brothers' 4 inches thick one with 2,662 pages defining 450,000+ words:\n```\nD:\\zzz_DSL_(Dictionary_Specification_Language_(ABBYY_Software_House))corpus>turbobenchs.exe Webster's_Third_New_International_Unabridged(1961)_(En-En).dsl -ezlib,9/fastlz,2/lzturbo,19,29,39/bzip2/chameleon,2/snappy_c/zstd,1,20,21/density,3/lz4,16/lz5,15/lzham,4/brieflz/brotli,11/crush,2/lzma,9/zpaq,2/lzf/yappy/trle/memcpy/lzsse2,1,16 -g -k0 -B2G\n...\nTurboBench:  - Sat Feb 27 03:21:01 2016\n  C Size  ratio%     C MB/s     D MB/s   Name            File\n19519434    15.6       0.87     100.14   lzma 9          Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n19736547    15.8       0.68     475.76   lzturbo 39      Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n20004388    16.0       0.77     199.20   lzham 4         Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n20200910    16.1       1.11     352.36   zstd 21         Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n20364153    16.3       1.16     355.51   zstd 20         Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n20459680    16.3       0.34     290.88   brotli 11       Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n21473387    17.1       8.82      25.94   bzip2           Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n24798599    19.8       0.71     713.40   lzturbo 29      Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n25518771    20.4       3.94      73.30   zpaq 2          Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n25814446    20.6       0.24     312.29   crush 2         Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n27405010    21.9       1.46     571.12   lz5 15          Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n30559193    24.4      19.07     274.88   zlib 9          Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n31648561    25.3       4.96    2333.98   lzsse2 16       Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n34835640    27.8       0.81    2079.93   lzturbo 19      Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n34964699    27.9     178.92     483.54   zstd 1          Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n35208058    28.1      21.57    1758.15   lz4 16          Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n39035549    31.2      95.29     185.53   brieflz         Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n39274452    31.4     255.07     237.49   density 3       Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n39417344    31.5      11.19    2035.24   lzsse2 1        Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n47927011    38.3      70.62    1620.57   yappy           Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n50696387    40.5     230.31     366.75   fastlz 2        Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n50980477    40.7     232.57     471.36   lzf             Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n51775589    41.3     313.17     841.53   snappy_c        Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n70877719    56.6    1045.33    2090.83   chameleon 2     Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n\n125223987   100.0     134.64    1312.37   trle            Webster's_Third_New_International_Unabridged_(1961)(En-En).dsl.tbb\n   125234556   100.0    6289.09    5577.38   memcpy          Webster's_Third_New_International_Unabridged(1961)_(En-En).dsl.tbb\n```\nJust look what LZSSE2 is doing, I AM SHOCKED!\nWhere is the law? 64KB vs 4MB vs 16MB vs 256MB vs 1GB...\nGuru Josh - Whose Law (Is It Anyway)\nhttps://www.youtube.com/watch?v=x7ytf5T1fY8\n\u201cI\u2019m living in a future. A future of law. I want to know. Whose law can it be? A future for you and I. I\u2019m living in a world. In a world of law. Whose law can it be?\u201d\nParaphrasing the awesome Guru's question, whose dictionary length can it be?\n. Should I had had more computational power I would have been exploring deeply, anyway:\n```\n03/10/2016  08:51 AM       179,736,048 book_serie_RUSSIAN_BESTSELLER_885_novels_(Russian).tar.15_256MB.lz5\n03/09/2016  08:45 PM       114,245,441 book_serie_RUSSIAN_BESTSELLER_885_novels_(Russian).tar.256MB.lzturbo12-39.lzt\n03/08/2016  04:34 AM       118,648,815 book_serie_RUSSIAN_BESTSELLER_885_novels_(Russian).tar.L21.zst\n03/05/2016  11:18 PM       141,549,516 book_serie_RUSSIAN_BESTSELLER_885_novels_(Russian).tar.method28.zpaq\n03/06/2016  08:25 AM        99,143,807 book_serie_RUSSIAN_BESTSELLER_885_novels_(Russian).tar.method58.zpaq\n03/10/2016  09:28 PM       122,193,254 book_serie_RUSSIAN_BESTSELLER_885_novels_(Russian).tar.ST6Block16.bsc\n03/05/2016  12:00 PM       119,531,414 book_serie_RUSSIAN_BESTSELLER_885_novels_(Russian).tar.ST6Block256.bsc\n03/10/2016  09:00 AM       173,702,643 book_serie_SPETSNAZ_803_novels_(Russian).tar.15_256MB.lz5\n03/09/2016  09:05 PM       105,739,516 book_serie_SPETSNAZ_803_novels_(Russian).tar.256MB.lzturbo12-39.lzt\n03/08/2016  04:46 AM       111,915,817 book_serie_SPETSNAZ_803_novels_(Russian).tar.L21.zst\n03/05/2016  11:22 PM       124,286,661 book_serie_SPETSNAZ_803_novels_(Russian).tar.method28.zpaq\n03/06/2016  08:58 AM        87,398,226 book_serie_SPETSNAZ_803_novels_(Russian).tar.method58.zpaq\n03/10/2016  09:28 PM       119,176,438 book_serie_SPETSNAZ_803_novels_(Russian).tar.ST6Block16.bsc\n03/05/2016  12:00 PM       115,613,238 book_serie_SPETSNAZ_803_novels_(Russian).tar.ST6Block256.bsc\n03/10/2016  10:43 AM     1,623,198,054 chitanka.info.epub.name-2015.12-cumulative_(36046_books)(Bulgarian)_UTF-8.tar.15_256MB.lz5\n03/10/2016  12:55 AM     1,052,429,918 chitanka.info.epub.name-2015.12-cumulative(36046_books)(Bulgarian)_UTF-8.tar.256MB.lzturbo12-39.lzt\n03/08/2016  06:56 AM     1,090,603,355 chitanka.info.epub.name-2015.12-cumulative(36046_books)(Bulgarian)_UTF-8.tar.L21.zst\n03/06/2016  12:07 AM     1,317,366,597 chitanka.info.epub.name-2015.12-cumulative(36046_books)(Bulgarian)_UTF-8.tar.method28.zpaq\n03/06/2016  03:09 PM       913,500,648 chitanka.info.epub.name-2015.12-cumulative(36046_books)(Bulgarian)_UTF-8.tar.method58.zpaq\n03/10/2016  09:36 PM     1,116,793,936 chitanka.info.epub.name-2015.12-cumulative(36046_books)(Bulgarian)_UTF-8.tar.ST6Block16.bsc\n03/05/2016  12:00 PM     1,093,309,220 chitanka.info.epub.name-2015.12-cumulative(36046_books)_(Bulgarian)_UTF-8.tar.ST6Block256.bsc\n03/10/2016  11:50 AM       639,156,091 enwiktionary-20160111-pages-articles.xml.15_256MB.lz5\n03/10/2016  02:51 AM       446,433,293 enwiktionary-20160111-pages-articles.xml.256MB.lzturbo12-39.lzt\n03/08/2016  07:51 AM       472,855,545 enwiktionary-20160111-pages-articles.xml.L21.zst\n03/06/2016  12:26 AM       607,352,607 enwiktionary-20160111-pages-articles.xml.method28.zpaq\n03/06/2016  06:52 PM       317,020,308 enwiktionary-20160111-pages-articles.xml.method58.zpaq\n03/10/2016  09:40 PM       405,663,946 enwiktionary-20160111-pages-articles.xml.ST6Block16.bsc\n03/05/2016  12:00 PM       372,389,584 enwiktionary-20160111-pages-articles.xml.ST6Block256.bsc\n03/10/2016  12:11 PM       334,005,334 GoldenDict_DSLs_(En-Ru)plus(Ru-En).tar.15_256MB.lz5\n03/10/2016  03:33 AM       229,328,828 GoldenDict_DSLs_(En-Ru)plus(Ru-En).tar.256MB.lzturbo12-39.lzt\n03/08/2016  08:18 AM       238,122,680 GoldenDict_DSLs_(En-Ru)plus(Ru-En).tar.L21.zst\n03/06/2016  12:34 AM       279,087,696 GoldenDict_DSLs_(En-Ru)plus(Ru-En).tar.method28.zpaq\n03/06/2016  08:26 PM       161,557,969 GoldenDict_DSLs_(En-Ru)plus(Ru-En).tar.method58.zpaq\n03/10/2016  09:41 PM       213,021,272 GoldenDict_DSLs_(En-Ru)plus(Ru-En).tar.ST6Block16.bsc\n03/05/2016  12:00 PM       204,276,176 GoldenDict_DSLs_(En-Ru)plus(Ru-En).tar.ST6Block256.bsc\n03/10/2016  01:22 PM       115,283,934 https_wikileaks.org_War_Diary_-Afghanistan_War_Logs_afg.tar.15_256MB.lz5\n03/10/2016  03:46 AM        68,846,521 https_wikileaks.org_War_Diary-Afghanistan_War_Logs_afg.tar.256MB.lzturbo12-39.lzt\n03/08/2016  08:52 AM        83,879,310 https_wikileaks.org_War_Diary-Afghanistan_War_Logs_afg.tar.L21.zst\n03/06/2016  12:46 AM        80,457,217 https_wikileaks.org_War_Diary-Afghanistan_War_Logs_afg.tar.method28.zpaq\n03/07/2016  12:19 AM        52,840,005 https_wikileaks.org_War_Diary-Afghanistan_War_Logs_afg.tar.method58.zpaq\n03/10/2016  09:42 PM        78,904,402 https_wikileaks.org_War_Diary-Afghanistan_War_Logs_afg.tar.ST6Block16.bsc\n03/05/2016  12:00 PM        64,327,890 https_wikileaks.org_War_Diary-_Afghanistan_War_Logs_afg.tar.ST6Block256.bsc\n03/10/2016  01:57 PM       291,804,723 Sacred_Texts_7_(97830_htm_files).tar.15_256MB.lz5\n03/10/2016  04:17 AM       208,014,989 Sacred_Texts_7_(97830_htm_files).tar.256MB.lzturbo12-39.lzt\n03/08/2016  09:20 AM       213,134,910 Sacred_Texts_7_(97830_htm_files).tar.L21.zst\n03/06/2016  12:53 AM       253,738,906 Sacred_Texts_7_(97830_htm_files).tar.method28.zpaq\n03/07/2016  01:36 AM       151,113,394 Sacred_Texts_7_(97830_htm_files).tar.method58.zpaq\n03/10/2016  09:44 PM       183,236,454 Sacred_Texts_7_(97830_htm_files).tar.ST6Block16.bsc\n03/05/2016  12:00 PM       176,729,590 Sacred_Texts_7_(97830_htm_files).tar.ST6Block256.bsc\n03/10/2016  02:00 PM       127,847,779 vxheaven.org.tar.15_256MB.lz5\n03/10/2016  04:20 AM        71,482,377 vxheaven.org.tar.256MB.lzturbo12-39.lzt\n03/08/2016  09:23 AM        71,138,408 vxheaven.org.tar.L21.zst\n03/06/2016  12:55 AM        76,660,909 vxheaven.org.tar.method28.zpaq\n03/07/2016  02:25 AM        64,309,018 vxheaven.org.tar.method58.zpaq\n03/10/2016  09:46 PM       162,482,014 vxheaven.org.tar.ST6Block16.bsc\n03/05/2016  12:00 PM        77,156,314 vxheaven.org.tar.ST6Block256.bsc\n03/10/2016  04:12 PM     2,454,580,699 _Deathship_textual_corpus.tar.15_256MB.lz5\n03/10/2016  07:28 AM     1,802,142,279 _Deathship_textual_corpus.tar.256MB.lzturbo12-39.lzt\n03/08/2016  11:42 AM     1,849,442,370 _Deathship_textual_corpus.tar.L21.zst\n03/06/2016  01:43 AM     2,132,027,578 _Deathship_textual_corpus.tar.method28.zpaq\n03/07/2016  11:03 AM     1,433,135,510 _Deathship_textual_corpus.tar.method58.zpaq\n03/10/2016  09:58 PM     1,748,595,476 _Deathship_textual_corpus.tar.ST6Block16.bsc\n03/05/2016  12:00 PM     1,684,445,506 _Deathship_textual_corpus.tar.ST6Block256.bsc\n03/10/2016  05:29 PM       754,471,906 _dict2txt_En_Fr_Ru_Ge_corpus.tar.15_256MB.lz5\n03/10/2016  09:27 AM       530,473,578 _dict2txt_En_Fr_Ru_Ge_corpus.tar.256MB.lzturbo12-39.lzt\n03/08/2016  12:55 PM       552,303,795 _dict2txt_En_Fr_Ru_Ge_corpus.tar.L21.zst\n03/06/2016  02:07 AM       633,428,268 _dict2txt_En_Fr_Ru_Ge_corpus.tar.method28.zpaq\n03/07/2016  05:00 PM       375,300,415 _dict2txt_En_Fr_Ru_Ge_corpus.tar.method58.zpaq\n03/10/2016  10:02 PM       482,386,772 _dict2txt_En_Fr_Ru_Ge_corpus.tar.ST6Block16.bsc\n03/05/2016  12:00 PM       448,139,006 _dict2txt_En_Fr_Ru_Ge_corpus.tar.ST6Block256.bsc\n03/10/2016  07:22 PM     1,634,795,785 DSL(Dictionary_Specification_Language_(ABBYY_Software_House))corpus.tar.15_256MB.lz5\n03/10/2016  01:02 PM     1,131,510,386 _DSL(Dictionary_Specification_Language_(ABBYY_Software_House))corpus.tar.256MB.lzturbo12-39.lzt\n03/08/2016  03:06 PM     1,171,777,463 _DSL(Dictionary_Specification_Language_(ABBYY_Software_House))corpus.tar.L21.zst\n03/06/2016  02:55 AM     1,367,007,877 _DSL(Dictionary_Specification_Language_(ABBYY_Software_House))corpus.tar.method28.zpaq\n03/08/2016  12:09 AM       865,834,590 _DSL(Dictionary_Specification_Language_(ABBYY_Software_House))corpus.tar.method58.zpaq\n03/10/2016  10:10 PM     1,069,179,174 _DSL(Dictionary_Specification_Language_(ABBYY_Software_House))corpus.tar.ST6Block16.bsc\n03/05/2016  12:00 PM     1,016,428,006 _DSL(Dictionary_Specification_Language_(ABBYY_Software_House))_corpus.tar.ST6Block256.bsc\n```\nThat's how the DSL looks like:\n```\nD:\\z>type \"Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl\"\n...\nac{\u252c\u2556}qui{\u252c\u2556}si{\u252c\u2556}tion\n []\\\u2566\u041cakw\u2554\u0429\u2566\u0418zish\u2554\u0429n\\[/] [p]noun[/p]\n com[/com]\n [m1][com][][b]Etymology:[/b] Middle English [i]acquisicioun,[/i] from Middle French or Latin; Middle French [i]acquisition,[/i] from Latin [i]acquisition-, acquisitio,[/i] from [i]acquisitus[/i] (past participle of [i]acquirere[/i]\nto acquire) + [i]-ion-, -io[/i] -ion \u0442\u0410\u0424 more at <>[/][/com][/m]\n [m1][b][c navy]1.[/c][/b] [p]\u0442\u0410\u0432[/p] [trn]the act or action of acquiring[/trn][/m]\n [m2][][ex]power resulting from the [i]acquisition[/i] of wealth[/ex][/][/m]\n [m2][][ex]the early [i]acquisition[/i] of self-control in the matter of fear \u0442\u0410\u0424 Bertrand Russell[/ex][/][/m]\n [m1][b][c navy]2.[/c][/b] [p]\u0442\u0410\u0432[/p] [trn]a thing acquired or gained [p]\u0442\u0410\u0432[/p] <>, <>[/trn][/m]\n [m1][p]\u0442\u0426\u2551[/p] [b]ac\u252c\u2556qui\u252c\u2556si\u252c\u2556tion\u252c\u2556ist[/b] []\\-\u2554\u0429\u2560\u0417st\\[/] [p]noun[/p] [b]-s[/b][/m]\nacquisition cost\n [p]noun[/p]\n [m1][p]\u0442\u0410\u0432[/p] [trn]commissions and other selling expenses in insurance production[/trn][/m]\nacquisititious\n [p]adjective[/p]\n [m1][com][][b]Etymology:[/b] Latin [i]acquisit[/i]us + English [i]-itious[/i][/][/com][/m]\n [m1][p]obsolete[/p] [p]\u0442\u0410\u0432[/p] <>[/m]\n...\n```\nThe add-on roster:\n03/10/2016  03:30 PM       125,234,552 Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl\n03/10/2016  10:07 PM        27,784,013 Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.15_16MB.lz5\n03/10/2016  10:09 PM        27,405,025 Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.15_256MB.lz5\n03/10/2016  09:51 PM        26,858,577 Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.16MB.lzturbo12-29.lzt\n03/10/2016  09:49 PM        21,606,878 Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.16MB.lzturbo12-39.lzt\n03/10/2016  09:47 PM        24,798,626 Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.256MB.lzturbo12-29.lzt\n03/10/2016  09:43 PM        19,674,622 Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.256MB.lzturbo12-39.lzt\n03/10/2016  03:41 PM        20,537,732 Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.L11_W24.brotli\n03/10/2016  09:28 PM        29,197,281 Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.L9.zip\n03/10/2016  03:31 PM        35,316,137 Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.lz4\n03/10/2016  10:12 PM        23,004,572 Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.LZX21.cab\n03/10/2016  03:47 PM        25,587,133 Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.method24.zpaq\n03/10/2016  03:46 PM        23,578,720 Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.method28.zpaq\n03/10/2016  04:05 PM        14,841,130 Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.method54.zpaq\n03/10/2016  03:56 PM        13,444,347 Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.method58.zpaq\n03/10/2016  10:12 PM        30,824,703 Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.MSZIP.cab\n02/26/2016  07:38 PM        27,787,197 Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.Nakamichi\n03/10/2016  09:24 PM        16,801,658 Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.ST6Block16.bsc\n03/10/2016  09:24 PM        15,569,950 Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.ST6Block256.bsc\n03/10/2016  03:44 PM        19,623,736 Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.xz\nThe respective command line invocations:\nD:\\z>LZ5.exe -15 -B5 Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.15_16MB.lz5\nD:\\z>LZ5.exe -15 -B7 Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.15_256MB.lz5\nD:\\z>lzturbo.exe -29 -b16 -p0 Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.16MB.lzturbo12-29.lzt\nD:\\z>lzturbo.exe -39 -b16 -p0 Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.16MB.lzturbo12-39.lzt\nD:\\z>lzturbo.exe -29 -b256 -p0 Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.256MB.lzturbo12-29.lzt\nD:\\z>lzturbo.exe -39 -b256 -p0 Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.256MB.lzturbo12-39.lzt\nD:\\z>bro_Feb-10-2016_mingw64_GCC_5.3.0 -i Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl -o Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.L11_W24.brotli -v --quality 11 --window 24\nD:\\z>7za a -tgzip -mx9 Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.L9.zip Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl\nD:\\z>LZ4.exe -16 \"Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl\"\nD:\\z>cabarc.exe -m LZX:21 N Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.LZX21.cab Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl\nD:\\z>zpaq64 add Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.method24.zpaq Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl -method 24 -threads 1\nD:\\z>zpaq64 add Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.method28.zpaq Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl -method 28 -threads 1\nD:\\z>zpaq64 add Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.method54.zpaq Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl -method 54 -threads 1\nD:\\z>zpaq64 add Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.method58.zpaq Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl -method 58 -threads 1\nD:\\z>cabarc.exe -m MSZIP N Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.MSZIP.cab Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl\nD:\\z>bsc e \"Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl\" \"Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.ST6Block16.bsc\" -b16 -m6 -cp -Tt\nD:\\z>bsc e \"Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl\" \"Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.ST6Block256.bsc\" -b256 -m6 -cp -Tt\nD:\\z>xz -z -k -f -9 -e -v -v --threads=1 Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl\nIn UFC (Ultimate-Fighting-Championship), they use the term P4P to describe most balanced and skilled Mixed Martial Artist.\nIlya Grebnov's BSC excels here, however, in my view the best pound-for-pound decompressor is the Conor Stokes' LZSSE2 level 17, still not available within a console tool...\nSecond best, to me, is Hamid's LzTurbo mode 39, 475MB/s on a weak laptop with 2nd gen mobile i5 and RAM @666MHz - tell me, what compressor can trump it, someone? \nThird best, Zstd is closing in fast.\nNakamichi 'Goldenboy' decompresses at 576MB/s but is fatty - with 7MB overweight. LZSSE2 smokes Goldenboy being 4x faster, PURE CRAZINESS!\nBottom-line:\nMy current TOP 4 of speedy decompressors:\n- LZSSE2 17;\n- LzTurbo 39;\n- ZSTD 21;\n- Brotli 11.\n. @jbergstroem Thanks, but I ask for static build compile line, not for continuation of those 'make' mumbojumboisms.\nI remember made myself a static executable of some of first versions (IIRC they even were .CC), I am dismayed why (now in .C) it is so difficult we to have the compile command line?!\nMy wish is to compile and share two static executables - SSE2 and AVX2.\nJohan, don't you agree that not having binary (and not using it) ruins the purpose? To me, such a powerful compressor with such speedy decompression deserves stable static binary, and naturally users to start amassing experience ... and just then be opinionated.. Just found in my archives an old brotli that I was able to compile with Intel v15:\n```\nD:\\brotli-master>makeEXE.bat\nD:\\brotli-master>cd dec\nD:\\brotli-master\\dec>icl /O3 /c bit_reader.c decode.c huffman.c state.c streams.c\nIntel(R) C++ Intel(R) 64 Compiler XE for applications running on Intel(R) 64, Version 15.0.0.108 Build 20140726\nCopyright (C) 1985-2014 Intel Corporation.  All rights reserved.\nbit_reader.c\ndecode.c\nhuffman.c\nstate.c\nstreams.c\nD:\\brotli-master\\dec>cd..\nD:\\brotli-master>cd enc\nD:\\brotli-master\\enc>icl /O3 /c backward_references.cc block_splitter.cc brotli_bit_stream.cc encode.cc encode_parallel.cc entropy_encode.cc histogram.cc literal_cost.cc metablock.cc static_dict.cc streams.cc\nIntel(R) C++ Intel(R) 64 Compiler XE for applications running on Intel(R) 64, Version 15.0.0.108 Build 20140726\nCopyright (C) 1985-2014 Intel Corporation.  All rights reserved.\nbackward_references.cc\nblock_splitter.cc\nbrotli_bit_stream.cc\nencode.cc\nencode_parallel.cc\nentropy_encode.cc\nhistogram.cc\nliteral_cost.cc\nmetablock.cc\nstatic_dict.cc\nstreams.cc\nD:\\brotli-master\\enc>cd..\nD:\\brotli-master>cd tools\nD:\\brotli-master\\tools>icl /O3 bro.cc ..\\dec\\bit_reader.obj ..\\dec\\decode.obj ..\\dec\\huffman.obj ..\\dec\\state.obj ..\\dec\\streams.obj ..\\enc\\backward_references.obj ..\\enc\\block_splitter.obj ..\\enc\\brotli_bit_stream.obj ..\\enc\\encode.obj ..\\enc\\encode_parallel.obj ..\\enc\\entropy_encode.obj ..\\enc\\histogram.obj ..\\enc\\literal_cost.obj ..\\enc\\metablock.obj ..\\enc\\static_dict.obj ..\\enc\\streams.obj\nIntel(R) C++ Intel(R) 64 Compiler XE for applications running on Intel(R) 64, Version 15.0.0.108 Build 20140726\nCopyright (C) 1985-2014 Intel Corporation.  All rights reserved.\nbro.cc\nMicrosoft (R) Incremental Linker Version 10.00.30319.01\nCopyright (C) Microsoft Corporation.  All rights reserved.\n-out:bro.exe\nbro.obj\n..\\dec\\bit_reader.obj\n..\\dec\\decode.obj\n..\\dec\\huffman.obj\n..\\dec\\state.obj\n..\\dec\\streams.obj\n..\\enc\\backward_references.obj\n..\\enc\\block_splitter.obj\n..\\enc\\brotli_bit_stream.obj\n..\\enc\\encode.obj\n..\\enc\\encode_parallel.obj\n..\\enc\\entropy_encode.obj\n..\\enc\\histogram.obj\n..\\enc\\literal_cost.obj\n..\\enc\\metablock.obj\n..\\enc\\static_dict.obj\n..\\enc\\streams.obj\nD:\\brotli-master\\tools>dir br*.exe\n Volume in drive D is S640_Vol5\n Volume Serial Number is 5861-9E6C\nDirectory of D:\\brotli-master\\tools\n09/24/2015  06:56 AM         1,250,304 bro.exe\n               1 File(s)      1,250,304 bytes\n               0 Dir(s)   5,917,040,640 bytes free\nD:\\brotli-master\\tools>bro\n;\nD:\\brotli-master\\tools>bro /?\nUsage: bro [--force] [--quality n] [--decompress] [--input filename] [--output filename] [--repeat iters] [--verbose]\nD:\\brotli-master\\tools>\n```\nAFAIR, three lines were manually modified in bro.cc:\n```\ninclude \"../dec/decode.h\"\ninclude \"../enc/encode.h\"\ninclude \"../enc/streams.h\"\n```\nI think the brackets were replaced with quotes.\nPlease, share inhere similar approach for compilation, I want to have binary compiled with /O3 /arch:CORE-AVX2, also please consider making built-in benchmark as Yann's Zstd -b one.\nBy the way I tried latest TurboBench but couldn't go past dictionary 24bit, that is, d29 failed to decompress?! Having built-in benchmark will be very informative in many ways, one of which is to test 16+MB windows heavily, some problems/drawbacks could be caught in the process. My personal experience with Conor's LZSSE2 (AVX2) and my Nakamichi was fruitful in that regard.\nSimply stated, benchmarking yields much more than one usually expect.\nYesterday I ran, in a hurry, bench for one 15MB html testfile and overlooked the iterations for compress, should have increased them to the default 3 in order to have stable values, stupid, now to undo the damage I reran it and demanded all the 3x11 modes - from 1 to 11 with windows 20/22/24 bit:\n```\nE:\\Ryuugan_vs_lzbench_vs_TurboBench_(LzTurbo-OFFICIAL_vs_Zstd_vs_Oodle)2018-Mar-16>\"turbobench_Official_v18.03-_build_16_Mar_2018.exe\" Arabian_Nights_complete.html -eyappy/snappy_c/lzturbo,10,20,30//brotli,1d20,2d20,3d20,4d20,5d20,6d20,7d20,8d20,9d20,10d20,11d20/brotli,1d22,2d22,3d22,4d22,5d22,6d22,7d22,8d22,9d22,10d22,11d22/brotli,1d24,2d24,3d24,4d24,5d24,6d24,7d24,8d24,9d24,10d24,11d24 -g -I3 -J31 -k1 -B2G\nTurboBench:  - Sun Mar 18 23:14:16 2018\n  C Size  ratio%     C MB/s     D MB/s   Name            File\n 3912935    25.1       0.37     274.31   brotli 11d24                     Arabian_Nights_complete.html.tbb\n 4004033    25.7       0.41     318.37   brotli 11d22                     Arabian_Nights_complete.html.tbb\n 4011405    25.7       0.70     243.06   brotli 10d24                     Arabian_Nights_complete.html.tbb\n 4106505    26.4       0.77     280.06   brotli 10d22                     Arabian_Nights_complete.html.tbb\n 4200095    27.0       0.43     344.93   brotli 11d20                     Arabian_Nights_complete.html.tbb\n 4305808    27.6       0.93     298.99   brotli 10d20                     Arabian_Nights_complete.html.tbb\n 4343656    27.9       2.79     280.84   brotli 9d24                      Arabian_Nights_complete.html.tbb\n 4388021    28.2       3.43     301.82   brotli 9d22                      Arabian_Nights_complete.html.tbb\n 4423269    28.4       4.42     291.98   brotli 8d24                      Arabian_Nights_complete.html.tbb\n 4450817    28.6       4.55     322.36   brotli 8d22                      Arabian_Nights_complete.html.tbb\n 4522816    29.0       6.57     303.88   brotli 7d24                      Arabian_Nights_complete.html.tbb\n 4536975    29.1       7.90     328.92   brotli 7d22                      Arabian_Nights_complete.html.tbb\n 4538817    29.1       7.18     373.07   brotli 9d20                      Arabian_Nights_complete.html.tbb\n 4570979    29.3       9.70     360.59   brotli 8d20                      Arabian_Nights_complete.html.tbb\n 4622302    29.7      11.78     358.36   brotli 7d20                      Arabian_Nights_complete.html.tbb\n 4644643    29.8       9.15     309.48   brotli 6d24                      Arabian_Nights_complete.html.tbb\n 4649587    29.8      12.42     342.51   brotli 6d22                      Arabian_Nights_complete.html.tbb\n 4700151    30.2      16.52     357.89   brotli 6d20                      Arabian_Nights_complete.html.tbb\n 4784408    30.7      13.52     327.23   brotli 5d24                      Arabian_Nights_complete.html.tbb\n 4786984    30.7      17.34     336.35   brotli 5d22                      Arabian_Nights_complete.html.tbb\n 4811899    30.9      21.15     356.82   brotli 5d20                      Arabian_Nights_complete.html.tbb\n 4903876    31.5      21.65     294.66   brotli 4d24                      Arabian_Nights_complete.html.tbb\n 4910658    31.5      29.61     331.01   brotli 4d22                      Arabian_Nights_complete.html.tbb\n 4979271    32.0      29.08     354.81   brotli 4d20                      Arabian_Nights_complete.html.tbb\n 5560004    35.7      59.03     309.91   brotli 3d20                      Arabian_Nights_complete.html.tbb\n 5560804    35.7      62.06     262.31   brotli 3d24                      Arabian_Nights_complete.html.tbb\n 5560811    35.7      56.49     302.19   brotli 3d22                      Arabian_Nights_complete.html.tbb\n 5619611    36.1      67.74     284.11   brotli 2d22                      Arabian_Nights_complete.html.tbb\n 5619733    36.1      76.64     300.18   brotli 2d20                      Arabian_Nights_complete.html.tbb\n 5619749    36.1      72.97     253.02   brotli 2d24                      Arabian_Nights_complete.html.tbb\n 5866802    37.6     107.70     233.66   brotli 1d24                      Arabian_Nights_complete.html.tbb\n 5876696    37.7     119.45     264.86   brotli 1d22                      Arabian_Nights_complete.html.tbb\n 5911301    37.9     133.30     280.41   brotli 1d20                      Arabian_Nights_complete.html.tbb\n 6076566    39.0     166.92     724.17   lzturbo 30                       Arabian_Nights_complete.html.tbb\n 8443243    54.2     268.12     916.57   lzturbo 20                       Arabian_Nights_complete.html.tbb\n 8630338    55.4      67.66    1307.12   yappy                            Arabian_Nights_complete.html.tbb\n 9027159    57.9     274.43     825.53   snappy_c                         Arabian_Nights_complete.html.tbb\n 9115662    58.5     305.32    2535.54   lzturbo 10                       Arabian_Nights_complete.html.tbb\n\nE:\\Ryuugan_vs_lzbench_vs_TurboBench_(LzTurbo-OFFICIAL_vs_Zstd_vs_Oodle)2018-Mar-16>\"turbobench_Official_v18.03-_build_16_Mar_2018.exe\" Arabian_Nights_complete.html -elibdeflate,1,2,3,4,5,6,7,8,9,12/zlib,1,2,3,4,5,6,7,8,9 -g -I3 -J31 -k1 -B2G\nTurboBench:  - Sun Mar 18 23:50:37 2018\n  C Size  ratio%     C MB/s     D MB/s   Name            File\n 5242942    33.6       5.29     545.43   libdeflate 12                    Arabian_Nights_complete.html.tbb\n 5259086    33.7       8.39     569.09   libdeflate 9                     Arabian_Nights_complete.html.tbb\n 5340204    34.3      11.51     576.37   libdeflate 8                     Arabian_Nights_complete.html.tbb\n 5478319    35.2       9.53     237.37   zlib 9                           Arabian_Nights_complete.html.tbb\n 5478323    35.2       9.81     237.63   zlib 8                           Arabian_Nights_complete.html.tbb\n 5492801    35.2      12.54     249.26   zlib 7                           Arabian_Nights_complete.html.tbb\n 5493806    35.3      37.60     594.56   libdeflate 7                     Arabian_Nights_complete.html.tbb\n 5515217    35.4      15.79     236.86   zlib 6                           Arabian_Nights_complete.html.tbb\n 5522003    35.4      40.77     588.90   libdeflate 6                     Arabian_Nights_complete.html.tbb\n 5566382    35.7      59.15     583.56   libdeflate 5                     Arabian_Nights_complete.html.tbb\n 5614102    36.0      24.20     233.67   zlib 5                           Arabian_Nights_complete.html.tbb\n 5712736    36.7      69.44     629.20   libdeflate 4                     Arabian_Nights_complete.html.tbb\n 5772524    37.0      84.09     621.10   libdeflate 3                     Arabian_Nights_complete.html.tbb\n 5832594    37.4      38.33     249.31   zlib 4                           Arabian_Nights_complete.html.tbb\n 5870312    37.7     100.24     606.29   libdeflate 2                     Arabian_Nights_complete.html.tbb\n 6061515    38.9      35.85     247.95   zlib 3                           Arabian_Nights_complete.html.tbb\n 6114129    39.2     118.54     576.44   libdeflate 1                     Arabian_Nights_complete.html.tbb\n 6322273    40.6      47.13     236.63   zlib 2                           Arabian_Nights_complete.html.tbb\n 6604448    42.4      53.34     232.78   zlib 1                           Arabian_Nights_complete.html.tbb\n\nE:\\Ryuugan_vs_lzbench_vs_TurboBench_(LzTurbo-OFFICIAL_vs_Zstd_vs_Oodle)_2018-Mar-16>\n```\nThe testmachine is a laptop running Windows 10, with i5-7200u 3GHz, DDR4 2133MHz.\nAnother thing that interests me, is it allowed dictionary to be, say, 16bit or 18bit? Is 30 the maximum?. >Recently we have published \"large window brotli\" feature. Now window could be up to 30 bits.\nJust downloaded and ran v 1.0.3, but couldn't see \nKey changes:\n    new feature: \"Large Window Brotli\"\nThe window is still up to 24, or 16MB, how one is supposed to run tests with 1GB?\nAs for Intel, I consider myself a fair tester since v12, Intel graciously allowed temporary key activation which, somehow, don't ask how, on my laptops reincarnated in next versions that I used to evaluate - v13, v14, v15. My belief and understanding is that Intel did good by allowing evaluating i.e. creating executables and seeing first-handedly how powerful really it is - all in the spirit of fair use, that is, no commercial or similar transgressions. For a time I used in parallel GCC 6.3.0, but this laptop died, didn't care to reinstall since new faster versions appeared.. >But evaluation- and integration testing-wise the licensing is done the wrong way. One can not use icl from docker container or run it on TravisCI, just to make sure the source code compiles well on their compiler...\nHm, that's not good indeed, even to my amateurish standards, in my view, one excellent tool/library/API should be compileable on vast set of platforms, the first that comes to mind is LZO, Markus did make it portable AFAIK. My C/environments knowledge is really basic to express opinions on portability issues, but one phrase caught my attention \"Military Grade\", somewhere on LZO descriptions, very ringy!\nLooking forward testing v1.0.4, funny, no one benchmarked windows 15/16, wanna know how they fare against the superb LIBDEFLATE 12. Are there plans for making some built-in benchmark similar to Zstd's one? One of the reasons to want making my own executables with Intel v15.0 was to wrap up the [de]compression invocations with some basic time stats. The other variant is to rely on Lzbench/Turbobench - which I prefer actually.\n. Thanks to powturbo, for the first time I witnessed the 16+MB window of Brotli:\n```\nC:\\Ryuugan_vs_lzbench_vs_TurboBench_(LzTurbo-OFFICIAL_vs_Zstd_vs_Oodle)2018-Apr-16>\"turbobench_v18.04-build_16_Apr_2018.exe\" \"Encyclopaedia_Judaica(in_22_volumes)_TXT.tar\" -ebzip2/lzlib,9d29fb273/lzham,4fb258:x4:d29/lzma,9d29:fb273:mf=bt4/libdeflate,1,5,12/oodle,19,49,89,112,114,116,118,129/lzsse2,1,17/lzturbo,19,12,29,22,39,32,49,59,59t2,59t4/zstd,1,5,12,22/lizard,19,29,39,49/brotli,1,5,11/brotli,11d29/lzma,9/xpack,1,9/chameleon,2/density,3/lzham,4/trle/bsc,3,6/zpaq,2,5 -g -I3 -J15 -k1 -B2G\nTurboBench:  - Tue Apr 17 01:27:19 2018\n  C Size  ratio%     C MB/s     D MB/s   Name            File\n22279381    20.7       7.75      35.37   lzturbo 59                       Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n22280917    20.7       8.18      50.68   lzturbo 59t2                     Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n22283621    20.7       8.34      59.18   lzturbo 59t4                     Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n22817313    21.2       0.36       0.35   zpaq 5                           Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n23581054    21.9      19.43       6.62   bsc 6                            Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n27071417    25.1       0.70      71.20   lzturbo 49                       Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n27494771    25.5       0.90      53.86   lzlib 9d29fb273                  Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n27526894    25.5       0.94      70.72   lzma 9d29:fb273:mf=bt4           Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n27600942    25.6       0.35     215.74   brotli 11d29                     Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n27642496    25.6       0.96      70.66   lzma 9                           Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n27750101    25.7       0.33     166.38   lzham 4fb258:x4:d29              Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n27769820    25.8       0.80     167.15   lzham 4                          Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n27942261    25.9       0.81     509.83   lzturbo 39                       Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n28041924    26.0       1.12     522.47   zstd 22                          Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n28654421    26.6       0.45     479.85   oodle 129                        Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n28654421    26.6       0.52     479.77   oodle 89                         Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n29616048    27.5       0.23     257.34   oodle 19                         Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n30390676    28.2       0.40     292.52   brotli 11                        Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n31079132    28.8      19.88      12.74   bsc 3                            Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n31579501    29.3       0.83     877.02   lzturbo 29                       Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n31734097    29.4      11.45      21.54   bzip2                            Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n32856071    30.5      27.08     630.66   lzturbo 32                       Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n34085035    31.6       0.47     371.09   xpack 9                          Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n35009827    32.5       5.89     630.14   zstd 12                          Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n35077489    32.5       1.34     719.17   lizard 49                        Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n35786915                        773      Nakamichi 'Ryuugan-ditto-1TB'    ! Intel AVX2 compile outside TurboBench !\n35855068    33.3       3.46      67.58   zpaq 2                           Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n36277020    33.7      18.11     316.25   brotli 5                         Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n39674735    36.8      73.49     594.78   zstd 5                           Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n40516809    37.6       5.93     515.48   libdeflate 12                    Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n41420278    38.4       1.38    1072.32   lizard 29                        Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n42104125    39.1       6.57    1505.34   lizard 39                        Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n42528049    39.5      58.78     526.40   libdeflate 5                     Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n42926053                       2862      LZSSE2 L17                       ! Intel AVX2 compile outside TurboBench !\n42926057    39.8       6.71    1923.31   lzsse2 17                        Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n43339102    40.2      27.10     969.62   lzturbo 22                       Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n44012280    40.8       0.44    2044.62   oodle 116                        Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n44448715    41.2       0.61    2036.35   oodle 118                        Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n44972225    41.7     120.56     263.46   brotli 1                         Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n45747038    42.4     111.35     518.12   libdeflate 1                     Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n45853852    42.5      87.73     523.50   xpack 1                          Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n47817239    44.4       0.95    3001.51   lzturbo 19                       Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n47834366    44.4       6.79    2289.38   lizard 19                        Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n47836827    44.4       3.07    2207.38   oodle 49                         Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n47979874    44.5     216.15     734.33   zstd 1                           Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n48144800    44.7      17.54    2802.28   oodle 114                        Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n50763849    47.1      42.34    3037.37   lzturbo 12                       Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n51412000    47.7     279.76     293.62   density 3                        Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n53894668    50.0      14.32    1589.62   lzsse2 1                         Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n58087170    53.9      66.83    2877.54   oodle 112                        Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n64897616    60.2    1538.32    2113.42   chameleon 2                      Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\n\n107743877   100.0     193.79    2003.09   trle                             Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.tbb\nC:\\Ryuugan_vs_lzbench_vs_TurboBench_(LzTurbo-OFFICIAL_vs_Zstd_vs_Oodle)_2018-Apr-16>\n```\nIs this not pure awesomeness:\nlzturbo 59 being 35.37/0.35= 101.0x faster than zpaq 5\nlzturbo 59 being 35.37/6.62= 5.3x faster than bsc 6\nStill, in v.1.0.4 binary the window is limited to 24?!\nIf you wanna see a particular file benchmarked, just give me the URL ... \n. No, no, cannot miss one dataset that has been crying to be benchmarked for times unremembered- the W3 itself:\n\nhttps://en.wikipedia.org/wiki/Webster%27s_Third_New_International_Dictionary\nEDIT: Always love to get a hold of thickish books, shrinking this thickness to 125223987:15239397 or 8:1 ...\n\n```\nC:\\Ryuugan_vs_lzbench_vs_TurboBench_(LzTurbo-OFFICIAL_vs_Zstd_vs_Oodle)2018-Apr-16>\"turbobench_v18.04-build_16_Apr_2018.exe\" \"Webster's_Third_New_International_Unabridged(1961)_(En-En).dsl\" -ebzip2/lzlib,9d29fb273/lzham,4fb258:x4:d29/lzma,9d29:fb273:mf=bt4/libdeflate,1,5,12/oodle,19,49,89,112,114,116,118,129/lzsse2,1,17/lzturbo,19,12,29,22,39,32,49,59,59t2,59t4/zstd,1,5,12,22/lizard,19,29,39,49/brotli,1,5,11/brotli,11d29/lzma,9/xpack,1,9/chameleon,2/density,3/lzham,4/trle/bsc,3,6/zpaq,2,5 -g -I3 -J15 -k1 -B2G\nTurboBench:  - Tue Apr 17 23:42:21 2018\n  C Size  ratio%     C MB/s     D MB/s   Name            File\n14871463    11.9       0.38       0.38   zpaq 5                           Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n15239397    12.2       8.76      42.19   lzturbo 59                       Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n15240985    12.2       9.13      58.66   lzturbo 59t2                     Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n15243625    12.2       9.23      68.64   lzturbo 59t4                     Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n16506844    13.2      28.80      10.12   bsc 6                            Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n19204214    15.3       0.68     115.16   lzturbo 49                       Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n19480822    15.6       1.02      78.50   lzlib 9d29fb273                  Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n19519434    15.6       1.08     111.01   lzma 9d29:fb273:mf=bt4           Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n19559693    15.6       0.39     313.37   brotli 11d29                     Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n19609082    15.7       0.26     267.18   lzham 4fb258:x4:d29              Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n19650726    15.7       0.81     856.34   lzturbo 39                       Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n19975078    16.0       1.37     704.91   zstd 22                          Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n20004388    16.0       0.95     374.52   lzham 4                          Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n20099339    16.0       1.35     108.71   lzma 9                           Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n20861759    16.7       0.51     673.71   oodle 129                        Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n20861759    16.7       0.62     673.46   oodle 89                         Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n20960314    16.7       0.27     416.38   oodle 19                         Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n21473387    17.1      10.03      28.00   bzip2                            Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n21561069    17.2       0.44     428.18   brotli 11                        Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n22566183    18.0       0.83    1190.20   lzturbo 29                       Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n22733734    18.2      28.54      17.39   bsc 3                            Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n24357693    19.4       0.84     625.78   xpack 9                          Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n24807059    19.8       1.41     985.38   lizard 49                        Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n24930702    19.9      41.46     861.31   lzturbo 32                       Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n25336495    20.2      11.22     855.66   zstd 12                          Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n25518771    20.4       4.70      89.82   zpaq 2                           Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n26302175    21.0      27.11     441.27   brotli 5                         Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n29086907    23.2       3.96     746.88   libdeflate 12                    Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n29092999    23.2       1.50    1372.36   lizard 29                        Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n29886124    23.9     110.24     868.56   zstd 5                           Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n30582918    24.4       0.47    1857.72   oodle 116                        Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n30745232    24.6       0.69    1868.06   oodle 118                        Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n31131500    24.9       4.44    1613.22   lizard 39                        Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n31636977    25.3       5.66    2615.21   lzsse2 17                        Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n31670794    25.3      87.24     737.90   libdeflate 5                     Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n32592313    26.0      41.87    1206.57   lzturbo 22                       Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n34701844    27.7     163.76     358.96   brotli 1                         Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n34835884    27.8       0.93    2748.84   lzturbo 19                       Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n34858499    27.8       4.73    2233.62   lizard 19                        Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n34864016    27.8       3.49    1931.08   oodle 49                         Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n34927455    27.9     272.63     872.31   zstd 1                           Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n36016662    28.8     114.84     736.05   xpack 1                          Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n36232167    28.9     146.58     725.14   libdeflate 1                     Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n36305868    29.0      27.09    2633.08   oodle 114                        Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n39254938    31.3      60.32    2667.18   lzturbo 12                       Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n39274452    31.4     286.62     301.49   density 3                        Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n39417340    31.5      12.67    2223.11   lzsse2 1                         Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n44746189    35.7     103.65    2752.77   oodle 112                        Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n70877719    56.6    1576.73    2757.56   chameleon 2                      Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\n\n125223987   100.0     192.47    2127.13   trle                             Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.tbb\nC:\\Ryuugan_vs_lzbench_vs_TurboBench_(LzTurbo-OFFICIAL_vs_Zstd_vs_Oodle)_2018-Apr-16>\n```\nFor those who are unaware of the fact, W3 is second only to OED. Ugh, the natural next step is guess what dataset... the paragonic 534MB (d29 is to flex muscles) of Oxford are under way.... Grmbl, the file has to be under ~450MB, the insufficient 8GB on 'Compressionette' are the cause for disfiguring the [de]compression rates for OED, due to HDD thrashing, so I will run it when 16GB are available.\nContinuing exploring the bigger Brotli's windows, inhere 27+bit - the full documentation folder of Intel Parallel Studio XE - 166 MB tarred file.\n\n```\nC:\\Ryuugan_vs_lzbench_vs_TurboBench_(LzTurbo-OFFICIAL_vs_Zstd_vs_Oodle)2018-Apr-22>\"turbobench_v18.04-_build_22_Apr_2018.exe\" Documentation_Composer_XE_2015.tar -ebzip2/lzlib,9d29fb273/lzham,4fb258:x4:d29/lzma,9d29:fb273:mf=bt4/libdeflate,1,5,12/oodle,19,49,89,112,114,116,118,129/lzsse2,1,17/lzturbo,19,12,29,22,39,32,49,59,59t2,59t4/zstd,1,5,12,22/lizard,19,29,39,49/brotli,1,5,11/brotli,11d29/lzma,9/xpack,1,9/chameleon,2/density,3/lzham,4/trle/bsc,3,6/zpaq,2,5 -g -I3 -J31 -k1 -B2G\nTurboBench:  - Tue Apr 24 01:08:38 2018\n  C Size  ratio%     C MB/s     D MB/s   Name            File\n29545224    17.0       0.75     100.68   lzturbo 49                       Documentation_Composer_XE_2015.tar.tbb\n30135901    17.3       1.52      65.17   lzlib 9d29fb273                  Documentation_Composer_XE_2015.tar.tbb\n30186666    17.3       0.49     339.88   brotli 11d29                     Documentation_Composer_XE_2015.tar.tbb\n30220005    17.4       1.71      95.64   lzma 9d29:fb273:mf=bt4           Documentation_Composer_XE_2015.tar.tbb\n30864067    17.7       0.11     415.03   lzham 4fb258:x4:d29              Documentation_Composer_XE_2015.tar.tbb\n30882973    17.7       1.21    2087.09   lzturbo 39                       Documentation_Composer_XE_2015.tar.tbb\n30890946    17.7       3.36      94.02   lzma 9                           Documentation_Composer_XE_2015.tar.tbb\n31026330    17.8       2.06    1562.69   zstd 22                          Documentation_Composer_XE_2015.tar.tbb\n31468806    18.1       1.67     411.25   lzham 4                          Documentation_Composer_XE_2015.tar.tbb\n31759169    18.2       0.95    1676.41   oodle 129                        Documentation_Composer_XE_2015.tar.tbb\n31760340    18.2       1.10    1673.90   oodle 89                         Documentation_Composer_XE_2015.tar.tbb\n31855429    18.3       9.57      33.52   lzturbo 59                       Documentation_Composer_XE_2015.tar.tbb\n31860989    18.3      10.23      46.82   lzturbo 59t2                     Documentation_Composer_XE_2015.tar.tbb\n31870733    18.3      10.30      51.38   lzturbo 59t4                     Documentation_Composer_XE_2015.tar.tbb\n32004878    18.4       0.56     808.11   oodle 19                         Documentation_Composer_XE_2015.tar.tbb\n32346682    18.6       0.37       0.37   zpaq 5                           Documentation_Composer_XE_2015.tar.tbb\n32470130    18.7      15.12      12.95   bsc 6                            Documentation_Composer_XE_2015.tar.tbb\n33013279    19.0       1.33    2896.75   lzturbo 29                       Documentation_Composer_XE_2015.tar.tbb\n33231171    19.1       0.41     927.94   xpack 9                          Documentation_Composer_XE_2015.tar.tbb\n34302252    19.7      68.09    2072.99   lzturbo 32                       Documentation_Composer_XE_2015.tar.tbb\n36088629    20.7       0.52     390.77   brotli 11                        Documentation_Composer_XE_2015.tar.tbb\n36586540    21.0       1.15    3635.88   oodle 118                        Documentation_Composer_XE_2015.tar.tbb\n36688592    21.1       0.80    3565.00   oodle 116                        Documentation_Composer_XE_2015.tar.tbb\n38389039    22.0       1.01    2605.20   lizard 49                        Documentation_Composer_XE_2015.tar.tbb\n38651612    22.2      24.69      14.14   bsc 3                            Documentation_Composer_XE_2015.tar.tbb\n39069930    22.4      34.09    1895.26   zstd 12                          Documentation_Composer_XE_2015.tar.tbb\n39182283    22.5       7.38     102.90   zpaq 2                           Documentation_Composer_XE_2015.tar.tbb\n39391791    22.6       1.10    3242.64   lizard 29                        Documentation_Composer_XE_2015.tar.tbb\n39452631    22.7      42.22     522.99   brotli 5                         Documentation_Composer_XE_2015.tar.tbb\n39982791    23.0      43.69    3941.06   oodle 114                        Documentation_Composer_XE_2015.tar.tbb\n42142284    24.2      66.35    2785.52   lzturbo 22                       Documentation_Composer_XE_2015.tar.tbb\n42928633    24.7       9.63      30.69   bzip2                            Documentation_Composer_XE_2015.tar.tbb\n43021036    24.7     142.75    1542.27   zstd 5                           Documentation_Composer_XE_2015.tar.tbb\n45864980    26.3     144.76    3990.02   oodle 112                        Documentation_Composer_XE_2015.tar.tbb\n47258638    27.1     107.68     830.78   xpack 1                          Documentation_Composer_XE_2015.tar.tbb\n47619118    27.4     469.33    1515.97   zstd 1                           Documentation_Composer_XE_2015.tar.tbb\n47898670    27.5       5.96     870.36   libdeflate 12                    Documentation_Composer_XE_2015.tar.tbb\n49143452    28.2     304.98     441.79   brotli 1                         Documentation_Composer_XE_2015.tar.tbb\n49419387    28.4       1.92    2866.65   lizard 39                        Documentation_Composer_XE_2015.tar.tbb\n49717522    28.6     119.38     869.60   libdeflate 5                     Documentation_Composer_XE_2015.tar.tbb\n51205991    29.4       4.21    3153.71   oodle 49                         Documentation_Composer_XE_2015.tar.tbb\n51242440    29.4       2.19    3787.84   lizard 19                        Documentation_Composer_XE_2015.tar.tbb\n51348728    29.5       1.21    4383.86   lzturbo 19                       Documentation_Composer_XE_2015.tar.tbb\n52436989    30.1     152.29     682.18   libdeflate 1                     Documentation_Composer_XE_2015.tar.tbb\n53565880    30.8     110.27    4151.58   lzturbo 12                       Documentation_Composer_XE_2015.tar.tbb\n57537060    33.0       2.15    2041.44   lzsse2 17                        Documentation_Composer_XE_2015.tar.tbb\n61860799    35.5      17.18    1868.29   lzsse2 1                         Documentation_Composer_XE_2015.tar.tbb\n62167830    35.7     327.17     338.38   density 3                        Documentation_Composer_XE_2015.tar.tbb\n\n114138236    65.6    1595.28    2355.26   chameleon 2                      Documentation_Composer_XE_2015.tar.tbb\n   160701004    92.3     213.70    7290.03   trle                             Documentation_Composer_XE_2015.tar.tbb\nC:\\Ryuugan_vs_lzbench_vs_TurboBench_(LzTurbo-OFFICIAL_vs_Zstd_vs_Oodle)_2018-Apr-22>\n```\nThe latest Brotli with larger window beats LZMA in compression ratio and in decompression rate - 339/95= 3.5x faster!\nBah, just look at LzTurbo 39:\n\n2087/95= 21.9x faster than LZMA 9d29;\n2087/339= 6.1x faster than Brotli 11d29;\n2087/1676= 1.2x faster than Oodle 'Hydra' (oo2core_5_win64.dll).\n\n\nThe next one will be the most popular dataset - SCC - Silesia Compression Corpus .... Crunching 211,938,580 bytes long Silesia_compression_corpus ...\n\n```\nC:\\2018-Apr-22>\"turbobench_v18.04_-_build_22_Apr_2018.exe\" Silesia_compression_corpus -ebzip2/lzlib,9d29fb273/lzham,4fb258:x4:d29/lzma,9d29:fb273:mf=bt4/libdeflate,1,5,12/oodle,19,49,89,112,114,116,118,129/lzsse2,1,17/lzturbo,19,12,29,22,39,32,49,59,59t2,59t4/zstd,1,5,12,22/lizard,19,29,39,49/brotli,1,5,11/brotli,11d29/lzma,9/xpack,1,9/chameleon,2/density,3/lzham,4/trle/bsc,3,6/zpaq,2,5 -g -I3 -J31 -k1 -B2G\nTurboBench:  - Tue Apr 24 13:59:07 2018\n  C Size  ratio%     C MB/s     D MB/s   Name            File\n40485323    19.1       0.35       0.35   zpaq 5                           Silesia_compression_corpus.tbb\n48244307    22.8       1.33      53.77   lzlib 9d29fb273                  Silesia_compression_corpus.tbb\n48382888    22.8       1.45      71.68   lzma 9d29:fb273:mf=bt4           Silesia_compression_corpus.tbb\n48577832    22.9       0.85      69.37   lzturbo 49                       Silesia_compression_corpus.tbb\n48751843    23.0       1.89      71.22   lzma 9                           Silesia_compression_corpus.tbb\n49095144    23.2      14.76      10.11   bsc 6                            Silesia_compression_corpus.tbb\n49539504    23.4       0.35     408.37   brotli 11d29                     Silesia_compression_corpus.tbb\n50124186    23.7       0.20     204.48   lzham 4fb258:x4:d29              Silesia_compression_corpus.tbb\n50424103    23.8       0.38     301.43   brotli 11                        Silesia_compression_corpus.tbb\n50599493    23.9       9.49      31.63   lzturbo 59                       Silesia_compression_corpus.tbb\n50604053    23.9      10.40      45.54   lzturbo 59t2                     Silesia_compression_corpus.tbb\n50612477    23.9      10.64      52.48   lzturbo 59t4                     Silesia_compression_corpus.tbb\n50959089    24.0       1.32     205.51   lzham 4                          Silesia_compression_corpus.tbb\n51381492    24.2       0.60    1047.70   oodle 129                        Silesia_compression_corpus.tbb\n51384209    24.2       0.73    1046.86   oodle 89                         Silesia_compression_corpus.tbb\n51676247    24.4       1.11    1055.44   lzturbo 39                       Silesia_compression_corpus.tbb\n52662820    24.8       0.36     634.43   oodle 19                         Silesia_compression_corpus.tbb\n52831997    24.9       1.97     846.76   zstd 22                          Silesia_compression_corpus.tbb\n53411512    25.2      21.20      13.18   bsc 3                            Silesia_compression_corpus.tbb\n54592581    25.8      10.38      26.89   bzip2                            Silesia_compression_corpus.tbb\n56929077    26.9       0.38     511.42   xpack 9                          Silesia_compression_corpus.tbb\n59116885    27.9      12.48     827.16   zstd 12                          Silesia_compression_corpus.tbb\n59541983    28.1      34.92     968.57   lzturbo 32                       Silesia_compression_corpus.tbb\n59583107    28.1      22.66     353.83   brotli 5                         Silesia_compression_corpus.tbb\n60694955    28.6       1.57    1155.09   lizard 49                        Silesia_compression_corpus.tbb\n61105625    28.8       1.23    1294.45   lzturbo 29                       Silesia_compression_corpus.tbb\n64188369    30.3       4.50      80.48   zpaq 2                           Silesia_compression_corpus.tbb\n64750390    30.6      95.91     782.01   zstd 5                           Silesia_compression_corpus.tbb\n64802668    30.6       5.03     586.23   libdeflate 12                    Silesia_compression_corpus.tbb\n68495938    32.3      84.44     608.60   libdeflate 5                     Silesia_compression_corpus.tbb\n68694935    32.4       1.67    1895.03   lizard 29                        Silesia_compression_corpus.tbb\n68975136    32.5       0.83    2727.86   oodle 118                        Silesia_compression_corpus.tbb\n69508100    32.8       0.66    2763.29   oodle 116                        Silesia_compression_corpus.tbb\n69815768    32.9       3.73    1663.31   lizard 39                        Silesia_compression_corpus.tbb\n70324086    33.2      94.56     564.77   xpack 1                          Silesia_compression_corpus.tbb\n73317933    34.6     131.72     575.68   libdeflate 1                     Silesia_compression_corpus.tbb\n73501173    34.7     186.29     300.28   brotli 1                         Silesia_compression_corpus.tbb\n73659096    34.8     311.23     901.83   zstd 1                           Silesia_compression_corpus.tbb\n73801396    34.8      35.99    1463.75   lzturbo 22                       Silesia_compression_corpus.tbb\n76694216    36.2      25.44    3369.40   oodle 114                        Silesia_compression_corpus.tbb\n77333037    36.5       1.41    3386.84   lzturbo 19                       Silesia_compression_corpus.tbb\n77334912    36.5       3.88    2338.74   oodle 49                         Silesia_compression_corpus.tbb\n77414284    36.5       4.02    2734.30   lizard 19                        Silesia_compression_corpus.tbb\n82890446    39.1      64.45    3390.96   lzturbo 12                       Silesia_compression_corpus.tbb\n88627496    41.8     288.51     307.01   density 3                        Silesia_compression_corpus.tbb\n89341342    42.2      85.52    3137.09   oodle 112                        Silesia_compression_corpus.tbb\n\n134145400    63.3    1614.11    2325.44   chameleon 2                      Silesia_compression_corpus.tbb\n   200581857    94.6     218.46    4838.23   trle                             Silesia_compression_corpus.tbb\n```\nFailed:\n```\n           0     0.0       0.00       0.00   lzsse2 1         Silesia_compression_corpus\nERROR at 0:2a, 9a\n           0     0.0       0.00       0.00   lzsse2 17        Silesia_compression_corpus\nERROR at 0:2a, 9a\n```\nCrunching 465,457,152 bytes long mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar ...\n\n```\nC:\\2018-Apr-22>\"turbobench_v18.04_-_build_22_Apr_2018.exe\" mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar -ebzip2/lzlib,9d29fb273/lzham,4fb258:x4:d29/lzma,9d29:fb273:mf=bt4/libdeflate,1,5,12/oodle,19,49,89,112,114,116,118,129/lzsse2,1,17/lzturbo,19,12,29,22,39,32,49,59,59t2,59t4/zstd,1,5,12,22/lizard,19,29,39,49/brotli,1,5,11/brotli,11d29/lzma,9/xpack,1,9/chameleon,2/density,3/lzham,4/trle/bsc,3,6/zpaq,2,5 -g -I3 -J31 -k1 -B2G\nTurboBench:  - Tue Apr 24 08:29:39 2018\n  C Size  ratio%     C MB/s     D MB/s   Name            File\n42172655     9.1       0.83     171.90   lzturbo 49                       mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n42197387     9.1       1.45     104.95   lzlib 9d29fb273                  mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n42457543     9.1       1.59     163.98   lzma 9d29:fb273:mf=bt4           mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n42988097     9.2       0.44     439.45   brotli 11d29                     mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n44372549     9.5       0.11     432.19   lzham 4fb258:x4:d29              mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n45218184     9.7       0.63    1635.80   oodle 129                        mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n45220234     9.7       0.71    1633.34   oodle 89                         mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n45752167     9.8       1.54     434.31   lzham 4                          mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n45874938     9.9       1.29    1804.96   lzturbo 39                       mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n47523378    10.2       0.47     986.98   oodle 19                         mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n48042802    10.3       2.64     146.84   lzma 9                           mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n51380197    11.0       2.09    1212.26   zstd 22                          mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n56362497    12.1       1.44    2316.65   lzturbo 29                       mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n58843125    12.6      77.93    1756.14   lzturbo 32                       mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n59674611    12.8       0.37       0.37   zpaq 5                           mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n60760645    13.1      10.48      38.58   lzturbo 59                       mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n60765065    13.1      11.16      54.02   lzturbo 59t2                     mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n60775397    13.1      11.34      60.71   lzturbo 59t4                     mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n64328773    13.8       0.76    4182.98   oodle 118                        mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n64404059    13.8       0.66    4205.24   oodle 116                        mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n66049348    14.2      19.73      13.29   bsc 6                            mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n73718680    15.8       0.39     390.82   brotli 11                        mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n81847492    17.6      27.66      15.76   bsc 3                            mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n88006994    18.9      33.03     444.89   brotli 5                         mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n88252775    19.0       1.49    2276.70   lizard 49                        mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n88458606    19.0      27.15    1137.21   zstd 12                          mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n93127699    20.0      44.28    4652.62   oodle 114                        mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n94672486    20.3       1.60    2650.11   lizard 29                        mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n97698006    21.0       5.24      97.89   zpaq 2                           mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n\n102907230    22.1      55.54    1835.16   lzturbo 22                       mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n   111853281    24.0      11.11      31.73   bzip2                            mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n   112029945    24.1     135.35    4169.23   oodle 112                        mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n   114389579    24.6     122.18    1386.40   zstd 5                           mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n   121900684    26.2       5.60     606.43   libdeflate 12                    mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n   127689179    27.4      98.73     611.28   libdeflate 5                     mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n   131622116    28.3     401.37    1038.21   zstd 1                           mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n   133921751    28.8       2.65    2002.43   lizard 39                        mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n   134410122    28.9     236.84     340.90   brotli 1                         mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n   136809466    29.4     137.78     562.34   libdeflate 1                     mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n   143004429    30.7       4.26    2651.89   oodle 49                         mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n   143562842    30.8       1.32    3774.23   lzturbo 19                       mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n   144311136    31.0       2.97    3179.57   lizard 19                        mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n   152900626    32.8      84.32    3488.06   lzturbo 12                       mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n   183278062    39.4     278.27     291.55   density 3                        mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n   302031406    64.9    1592.24    2319.67   chameleon 2                      mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n   409060060    87.9     232.49    3342.10   trle                             mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.tbb\n```\nFailed:\n0     0.0       0.00       0.00   lzsse2 1         mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar\nERROR at 0:6d, 88\n           0     0.0       0.00       0.00   lzsse2 17        mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar\nERROR at 0:6d, 88\n   121181325    26.0     106.03    6955.01   xpack 1          mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar\nERROR at 32465155:f1, e\n    57070696    12.3       0.82   28854.82   xpack 9          mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar\nERROR at 12914960:ca, 35\nThe standout is oodle 118, it amazes having no counterpart/rival in the roster, Oodle 'Selkie' excels at binary-ish data!\nNext is www.holybooks.com_70_PDFs.tar - a 195,587,584 bytes collection of 70 Yoga ebooks non-scanned:\n\nNot at all interested in binary decompression, yet, it is interesting to see how poorly some decompressors behave.\nC:\\Ryuugan_vs_lzbench_vs_TurboBench_(LzTurbo-OFFICIAL_vs_Zstd_vs_Oodle)_2018-Apr-22>\"turbobench_v18.04_-_build_22_Apr_2018.exe\" www.holybooks.com_70_PDFs.tar -ebzip2/lzlib,9d29fb273/lzham,4fb258:x4:d29/lzma,9d29:fb273:mf=bt4/libdeflate,1,5,12/oodle,19,49,89,112,114,116,118,129/lzsse2,1,17/lzturbo,19,12,29,22,39,32,49,59,59t2,59t4/zstd,1,5,12,22/lizard,19,29,39,49/brotli,1,5,11/brotli,11d29/lzma,9/xpack,1,9/chameleon,2/density,3/lzham,4/trle/bsc,3,6/zpaq,2,5 -g -I3 -J31 -k1 -B2G\n...\nTurboBench:  - Tue Apr 24 19:52:22 2018\n      C Size  ratio%     C MB/s     D MB/s   Name            File\n   153693341    78.6       0.27     146.56   brotli 11d29                     www.holybooks.com_70_PDFs.tar.tbb\n   154043243    78.8       1.52      21.96   lzturbo 49                       www.holybooks.com_70_PDFs.tar.tbb\n   154390722    78.9       1.99    3312.57   lzturbo 39                       www.holybooks.com_70_PDFs.tar.tbb\n   154478896    79.0       0.39     178.47   lzham 4fb258:x4:d29              www.holybooks.com_70_PDFs.tar.tbb\n   154629187    79.1       1.07    3723.21   oodle 89                         www.holybooks.com_70_PDFs.tar.tbb\n   154632800    79.1       0.98    3730.17   oodle 129                        www.holybooks.com_70_PDFs.tar.tbb\n   154657312    79.1       0.75     632.43   oodle 19                         www.holybooks.com_70_PDFs.tar.tbb\n   154716487    79.1       1.95     180.24   lzham 4                          www.holybooks.com_70_PDFs.tar.tbb\n   154955814    79.2       1.79      16.45   lzlib 9d29fb273                  www.holybooks.com_70_PDFs.tar.tbb\n   155014084    79.3       2.40      21.53   lzma 9d29:fb273:mf=bt4           www.holybooks.com_70_PDFs.tar.tbb\n   155466880    79.5      42.68    4247.66   lzturbo 32                       www.holybooks.com_70_PDFs.tar.tbb\n   155773776    79.6       2.30    5107.39   lzturbo 29                       www.holybooks.com_70_PDFs.tar.tbb\n   156341293    79.9       0.28       0.27   zpaq 5                           www.holybooks.com_70_PDFs.tar.tbb\n   156627734    80.1       1.13    6609.03   oodle 118                        www.holybooks.com_70_PDFs.tar.tbb\n   157307263    80.4       2.66    2646.87   zstd 22                          www.holybooks.com_70_PDFs.tar.tbb\n   157485342    80.5       1.03    6859.59   oodle 116                        www.holybooks.com_70_PDFs.tar.tbb\n   157684598    80.6       2.51      21.18   lzma 9                           www.holybooks.com_70_PDFs.tar.tbb\n   158949343    81.3      17.09    7019.11   oodle 114                        www.holybooks.com_70_PDFs.tar.tbb\n   160104128    81.9      45.79    5453.74   lzturbo 22                       www.holybooks.com_70_PDFs.tar.tbb\n   160367431    82.0       0.32     164.61   brotli 11                        www.holybooks.com_70_PDFs.tar.tbb\n   160410795    82.0       2.41    5069.27   lizard 49                        www.holybooks.com_70_PDFs.tar.tbb\n   160607455    82.1       2.47    6037.59   lizard 29                        www.holybooks.com_70_PDFs.tar.tbb\n   160871714    82.3       4.19      56.25   zpaq 2                           www.holybooks.com_70_PDFs.tar.tbb\n   162059305    82.9      39.67    4093.67   zstd 12                          www.holybooks.com_70_PDFs.tar.tbb\n   162401859    83.0      45.69     379.02   brotli 5                         www.holybooks.com_70_PDFs.tar.tbb\n   163125766    83.4       3.18       4.63   bsc 6                            www.holybooks.com_70_PDFs.tar.tbb\n   163805148    83.8      56.52    6788.64   oodle 112                        www.holybooks.com_70_PDFs.tar.tbb\n   165996410    84.9       6.82       3.66   bsc 3                            www.holybooks.com_70_PDFs.tar.tbb\n   166500697    85.1       4.58      11.54   lzturbo 59                       www.holybooks.com_70_PDFs.tar.tbb\n   166508493    85.1       5.52      19.45   lzturbo 59t2                     www.holybooks.com_70_PDFs.tar.tbb\n   166524061    85.1       5.76      25.66   lzturbo 59t4                     www.holybooks.com_70_PDFs.tar.tbb\n   171171401    87.5     132.51    3985.56   zstd 5                           www.holybooks.com_70_PDFs.tar.tbb\n   172232600    88.1      55.05     474.87   xpack 1                          www.holybooks.com_70_PDFs.tar.tbb\n   172591996    88.2      18.12     434.06   libdeflate 12                    www.holybooks.com_70_PDFs.tar.tbb\n   172983427    88.4       7.61      14.78   bzip2                            www.holybooks.com_70_PDFs.tar.tbb\n   173165757    88.5      75.93     446.40   libdeflate 5                     www.holybooks.com_70_PDFs.tar.tbb\n   173517815    88.7     682.58    4449.82   zstd 1                           www.holybooks.com_70_PDFs.tar.tbb\n   173598021    88.8     424.30     519.73   brotli 1                         www.holybooks.com_70_PDFs.tar.tbb\n   173651914    88.8       2.34    6857.19   lzturbo 19                       www.holybooks.com_70_PDFs.tar.tbb\n   173668355    88.8       4.47    6438.04   oodle 49                         www.holybooks.com_70_PDFs.tar.tbb\n   173728773    88.8      79.76     444.37   libdeflate 1                     www.holybooks.com_70_PDFs.tar.tbb\n   174113040    89.0     117.40    7015.84   lzturbo 12                       www.holybooks.com_70_PDFs.tar.tbb\n   174132004    89.0      12.05    6063.23   lizard 39                        www.holybooks.com_70_PDFs.tar.tbb\n   174534130    89.2      12.82    6625.37   lizard 19                        www.holybooks.com_70_PDFs.tar.tbb\n   180588056    92.3     429.56     371.83   density 3                        www.holybooks.com_70_PDFs.tar.tbb\n   190260978    97.3    1511.72    1946.90   chameleon 2                      www.holybooks.com_70_PDFs.tar.tbb\n   195189562    99.8     200.72    5894.92   trle                             www.holybooks.com_70_PDFs.tar.tbb\nFailed:\n0     0.0       0.00       0.00   lzsse2 1         www.holybooks.com_70_PDFs.tar\nERROR at 0:77, 97\n           0     0.0       0.00       0.00   lzsse2 17        www.holybooks.com_70_PDFs.tar\nERROR at 0:77, 97\n   158720272    81.2       0.06    2150.35   xpack 9          www.holybooks.com_70_PDFs.tar\nERROR at 41743301:51, ae\nHaving downloaded RC_2008-08 (from https://files.pushshift.io/reddit/comments/), which is 346,626,502 bytes, next to be seen is an .JSON dump of reddit...\n\nC:\\Ryuugan_vs_lzbench_vs_TurboBench_(LzTurbo-OFFICIAL_vs_Zstd_vs_Oodle)_2018-Apr-22>\"turbobench_v18.04_-_build_22_Apr_2018.exe\" RC_2008-08 -ebzip2/lzlib,9d29fb273/lzham,4fb258:x4:d29/lzma,9d29:fb273:mf=bt4/libdeflate,1,5,12/oodle,19,49,89,112,114,116,118,129/lzsse2,1,17/lzturbo,19,12,29,22,39,32,49,59,59t2,59t4/zstd,1,5,12,22/lizard,19,29,39,49/brotli,1,5,11/brotli,11d29/lzma,9/xpack,1,9/chameleon,2/density,3/lzham,4/trle/bsc,3,6/zpaq,2,5 -g -I3 -J31 -k1 -B2G\n...\nTurboBench:  - Wed Apr 25 15:06:17 2018\n      C Size  ratio%     C MB/s     D MB/s   Name            File\n    36787350    10.6       0.39       0.39   zpaq 5                           RC_2008-08.tbb\n    37963185    11.0       7.17      39.21   lzturbo 59                       RC_2008-08.tbb\n    37964885    11.0       7.37      53.85   lzturbo 59t2                     RC_2008-08.tbb\n    37968465    11.0       7.43      56.65   lzturbo 59t4                     RC_2008-08.tbb\n    39984248    11.5      24.07      10.28   bsc 6                            RC_2008-08.tbb\n    47496850    13.7       0.64     122.69   lzturbo 49                       RC_2008-08.tbb\n    48563712    14.0       0.83      83.42   lzlib 9d29fb273                  RC_2008-08.tbb\n    48680881    14.0       0.94     119.17   lzma 9d29:fb273:mf=bt4           RC_2008-08.tbb\n    48791397    14.1       0.23     279.88   lzham 4fb258:x4:d29              RC_2008-08.tbb\n    48849144    14.1       0.36     306.14   brotli 11d29                     RC_2008-08.tbb\n    49536033    14.3       0.75     850.54   lzturbo 39                       RC_2008-08.tbb\n    50365139    14.5       0.88     269.48   lzham 4                          RC_2008-08.tbb\n    50900116    14.7       1.17     780.13   zstd 22                          RC_2008-08.tbb\n    51154124    14.8       1.49     115.53   lzma 9                           RC_2008-08.tbb\n    51449617    14.8       8.33      30.98   bzip2                            RC_2008-08.tbb\n    52767834    15.2       0.38    1037.65   oodle 129                        RC_2008-08.tbb\n    52767834    15.2       0.42     724.03   oodle 89                         RC_2008-08.tbb\n    52887047    15.3       0.23     453.05   oodle 19                         RC_2008-08.tbb\n    53273852    15.4      30.60      17.71   bsc 3                            RC_2008-08.tbb\n    53574727    15.5       0.41     468.17   brotli 11                        RC_2008-08.tbb\n    57126304    16.5       0.79    1228.27   lzturbo 29                       RC_2008-08.tbb\n    61220390    17.7       0.82     551.73   xpack 9                          RC_2008-08.tbb\n    63310638    18.3      12.90     977.83   zstd 12                          RC_2008-08.tbb\n    63637661    18.4       1.11    1031.78   lizard 49                        RC_2008-08.tbb\n    65042080    18.8       4.25      93.47   zpaq 2                           RC_2008-08.tbb\n    65149686    18.8      46.29     856.93   lzturbo 32                       RC_2008-08.tbb\n    65663240    18.9      29.89     477.78   brotli 5                         RC_2008-08.tbb\n    73841496    21.3       3.89     999.76   libdeflate 12                    RC_2008-08.tbb\n    74160950    21.4       1.17    1568.09   lizard 29                        RC_2008-08.tbb\n    76425289    22.0     119.94     812.81   zstd 5                           RC_2008-08.tbb\n    78467692    22.6       4.11    2010.38   lizard 39                        RC_2008-08.tbb\n    80133746    23.1       0.36    2242.20   oodle 116                        RC_2008-08.tbb\n    81118226    23.4       0.45    2420.88   oodle 118                        RC_2008-08.tbb\n    81229949    23.4      94.18    1036.65   libdeflate 5                     RC_2008-08.tbb\n    84425756    24.4      46.88    1304.51   lzturbo 22                       RC_2008-08.tbb\n    85886667    24.8     312.01     903.79   zstd 1                           RC_2008-08.tbb\n    86514711    25.0       0.90    2983.14   lzturbo 19                       RC_2008-08.tbb\n    86580199    25.0       3.60    2728.08   oodle 49                         RC_2008-08.tbb\n    86611403    25.0       4.44    2430.01   lizard 19                        RC_2008-08.tbb\n    88367497    25.5     182.98     389.72   brotli 1                         RC_2008-08.tbb\n    93560292    27.0      30.50    3386.94   oodle 114                        RC_2008-08.tbb\n    95371965    27.5     104.87     658.61   xpack 1                          RC_2008-08.tbb\n    96962015    28.0     149.05    1035.09   libdeflate 1                     RC_2008-08.tbb\n   100452734    29.0     280.42     313.01   density 3                        RC_2008-08.tbb\n   101171406    29.2      68.38    2716.47   lzturbo 12                       RC_2008-08.tbb\n   118301287    34.1     107.15    3361.65   oodle 112                        RC_2008-08.tbb\n   196844768    56.8    1631.01    3022.66   chameleon 2                      RC_2008-08.tbb\n   346296552    99.9     189.96    1982.25   trle                             RC_2008-08.tbb\nFailed:\n0     0.0       0.00       0.00   lzsse2 1         RC_2008-08\nERROR at 0:7b, 90\n           0     0.0       0.00       0.00   lzsse2 17        RC_2008-08\nERROR at 0:7b, 90\nOne .log type file:\n\nC:\\Ryuugan_vs_lzbench_vs_TurboBench_(LzTurbo-OFFICIAL_vs_Zstd_vs_Oodle)_2018-Apr-22>\"turbobench_v18.04_-_build_22_Apr_2018.exe\" NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95 -ebzip2/lzlib,9d29fb273/lzham,4fb258:x4:d29/lzma,9d29:fb273:mf=bt4/libdeflate,1,5,12/oodle,19,49,89,112,114,116,118,129/lzsse2,1,17/lzturbo,19,12,29,22,39,32,49,59,59t2,59t4/zstd,1,5,12,22/lizard,19,29,39,49/brotli,1,5,11/brotli,11d29/lzma,9/xpack,1,9/chameleon,2/density,3/lzham,4/trle/bsc,3,6/zpaq,2,5 -g -I3 -J31 -k1 -B2G\n...\nTurboBench:  - Wed Apr 25 20:06:28 2018\n      C Size  ratio%     C MB/s     D MB/s   Name            File\n     6875621     3.4       0.42       0.42   zpaq 5                           NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n     9628481     4.7       8.95      49.80   lzturbo 59                       NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n     9628909     4.7       9.03      63.96   lzturbo 59t2                     NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n     9630257     4.7       9.15      72.74   lzturbo 59t4                     NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n     9953030     4.8      50.27      19.03   bsc 6                            NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    11355945     5.5       0.74     296.39   lzturbo 49                       NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    11832205     5.8       0.89     146.77   lzlib 9d29fb273                  NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    11883945     5.8       1.06     251.55   lzma 9d29:fb273:mf=bt4           NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    11901404     5.8       0.88    1814.02   lzturbo 39                       NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    11922873     5.8       0.22     701.10   lzham 4fb258:x4:d29              NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    11960483     5.8       8.48      43.68   bzip2                            NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    12236072     6.0       0.40     566.41   brotli 11d29                     NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    12252608     6.0      53.58      26.84   bsc 3                            NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    12639080     6.2       1.13    1385.37   zstd 22                          NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    12711281     6.2       0.46     914.72   brotli 11                        NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    12820437     6.2       0.31    1114.88   oodle 19                         NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    13598062     6.6       2.03     230.21   lzma 9                           NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    13651218     6.7       0.95     586.45   lzham 4                          NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    14601890     7.1       0.69    1122.20   oodle 89                         NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    14604989     7.1       0.57    1125.80   oodle 129                        NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    15064566     7.3       0.97    2465.97   lzturbo 29                       NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    15185234     7.4       2.78    1336.67   xpack 9                          NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    15884624     7.7       1.25    2224.49   lizard 49                        NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    16164083     7.9      35.19    1641.20   zstd 12                          NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    16665926     8.1      64.65    1022.66   brotli 5                         NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    17344456     8.5       6.65     125.95   zpaq 2                           NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    18280070     8.9     106.05    1767.49   lzturbo 32                       NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    18473887     9.0       3.35    1324.87   libdeflate 12                    NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    19226560     9.4       1.30    2864.47   lizard 29                        NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    20125477     9.8     223.77    1184.60   zstd 5                           NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    21399767    10.4       3.97    2639.37   lizard 39                        NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    21693167    10.6       0.70    2648.22   oodle 118                        NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    21714886    10.6       0.53    2850.19   oodle 116                        NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    21836877    10.6     173.14    1388.45   libdeflate 5                     NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    22756147    11.1     523.95    1174.83   zstd 1                           NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    24331363    11.9       1.11    4033.61   lzturbo 19                       NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    24368285    11.9       4.00    3183.38   oodle 49                         NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    24408147    11.9       4.37    3488.86   lizard 19                        NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    24713548    12.0     173.90    1008.09   xpack 1                          NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    25275862    12.3     373.79     812.27   brotli 1                         NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    26164436    12.7     112.66    2462.71   lzturbo 22                       NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    27183252    13.2     229.98    1179.78   libdeflate 1                     NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    29731553    14.5      73.97    3901.65   oodle 114                        NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    30227172    14.7     417.58     400.41   density 3                        NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    31188794    15.2     163.41    3435.94   lzturbo 12                       NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n    36226032    17.7     262.57    3282.72   oodle 112                        NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n   111357412    54.3    1669.41    3680.49   chameleon 2                      NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\n   205062892    99.9     184.03    1983.13   trle                             NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.tbb\nFailed:\n0     0.0       0.00       0.00   lzsse2 1         NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95\nERROR at 0:31, c8\n           0     0.0       0.00       0.00   lzsse2 17        NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95\nERROR at 0:31, c8\nThe idea is to cover at least these formats:\n- .TXT (Plain ASCII English Text)\n- .DSL\n- .XML\n- .JSON\n- .PDF\n- .TAR (executables, libraries, sources). It is a good idea to juxtapose two ~300MB .XML dumps...\nNext one is gonna be the .XML dump of \"Wikipedia's evil twin\", according to the article:\nhttps://en.wikipedia.org/wiki/Encyclopedia_Dramatica\nCrunching 295,515,893 bytes long encyclopediadramaticase-20150628-current.xml ...\n\nTurboBench:  - Thu Apr 26 11:44:32 2018\n(bold = pareto)  MB=1.000.000\n|C Size|ratio|C MB/s|D MB/s|Name|\n|--------:|-----:|--------:|--------:|----------------|\n|42526637| 14.4|8.16|37.84|lzturbo 59|\n|42529461| 14.4|8.51|50.85|lzturbo 59t2|\n|42534181| 14.4|8.64|58.31|lzturbo 59t4|\n|42763459| 14.5|0.38|0.38|zpaq 5|\n|45296512| 15.3|24.94|9.23|bsc 6|\n|48331622| 16.4|0.61|103.39|lzturbo 49|\n|48665325| 16.5|0.92|74.37|lzlib 9d29fb273|\n|48768664| 16.5|0.99|103.98|lzma 9d29:fb273:mf=bt4|\n|49285547| 16.7|0.33|270.88|brotli 11d29|\n|49356398| 16.7|0.20|242.04|lzham 4fb258:x4:d29|\n|50392272| 17.1|0.81|770.60|lzturbo 39|\n|50394670| 17.1|0.93|238.38|lzham 4|\n|51225518| 17.3|1.34|100.09|lzma 9|\n|51712719| 17.5|1.22|728.34|zstd 22|\n|52145611| 17.6|0.44|677.25|oodle 89|\n|52145724| 17.6|0.39|676.07|oodle 129|\n|53752244| 18.2|0.25|390.78|oodle 19|\n|55929229| 18.9|0.37|390.60|brotli 11|\n|56276672| 19.0|28.38|16.80|bsc 3|\n|58523735| 19.8|0.86|1139.22|lzturbo 29|\n|59832988| 20.2|8.60|29.57|bzip2|\n|60558802| 20.5|40.19|771.73|lzturbo 32|\n|62343390| 21.1|0.64|499.89|xpack 9|\n|64984048| 22.0|10.58|865.71|zstd 12|\n|66447845| 22.5|25.35|409.12|brotli 5|\n|66764312| 22.6|1.16|966.61|lizard 49|\n|68204206| 23.1|4.38|83.95|zpaq 2|\n|73098453| 24.7|104.00|836.44|zstd 5|\n|75448396| 25.5|5.58|643.28|libdeflate 12|\n|78892029| 26.7|1.22|1755.37|lizard 29|\n|79571370| 26.9|39.15|1430.72|lzturbo 22|\n|79697531| 27.0|69.43|654.61|libdeflate 5|\n|80920761| 27.4|3.56|2063.53|lizard 39|\n|81086153| 27.4|0.40|2649.13|oodle 116|\n|81908602| 27.7|0.47|2657.88|oodle 118|\n|83472503| 28.2|175.59|363.39|brotli 1|\n|84696417| 28.7|106.19|694.04|xpack 1|\n|86085983| 29.1|316.32|977.61|zstd 1|\n|86923697| 29.4|110.45|647.82|libdeflate 1|\n|89494542| 30.3|26.54|3241.69|oodle 114|\n|90013089| 30.5|3.96|2946.61|lizard 19|\n|90047833| 30.5|0.97|3515.12|lzturbo 19|\n|90100574| 30.5|3.65|2628.28|oodle 49|\n|96748726| 32.7|62.50|3527.16|lzturbo 12|\n|104639536| 35.4|91.49|2949.38|oodle 112|\n|109982235| 37.2|282.19|590.40|density 3|\n|175697176| 59.5|1558.09|2218.82|chameleon 2|\n|280443803| 94.9|195.96|2045.29|trle|\nHaving finished the main run, above table was done by running:\nC:\\>turbobench_v18.04_-_build_16_Apr_2018.exe -p4 encyclopediadramaticase-20150628-current.xml.tbb\nStill prefer the RAW output, however the Pareto Frontier performers are not in bold:\nC:\\>\"turbobench_v18.04_-_build_22_Apr_2018.exe\" encyclopediadramaticase-20150628-current.xml -ebzip2/lzlib,9d29fb273/lzham,4fb258:x4:d29/lzma,9d29:fb273:mf=bt4/libdeflate,1,5,12/oodle,19,49,89,112,114,116,118,129/lzsse2,1,17/lzturbo,19,12,29,22,39,32,49,59,59t2,59t4/zstd,1,5,12,22/lizard,19,29,39,49/brotli,1,5,11/brotli,11d29/lzma,9/xpack,1,9/chameleon,2/density,3/lzham,4/trle/bsc,3,6/zpaq,2,5 -I3 -J31 -k1 -B2G\n...\nTurboBench:  - Thu Apr 26 02:09:14 2018\n      C Size  ratio%     C MB/s     D MB/s   Name            File\n    42526637    14.4       8.16      37.84   lzturbo 59                       encyclopediadramaticase-20150628-current.xml\n    42529461    14.4       8.51      50.85   lzturbo 59t2                     encyclopediadramaticase-20150628-current.xml\n    42534181    14.4       8.64      58.31   lzturbo 59t4                     encyclopediadramaticase-20150628-current.xml\n    42763459    14.5       0.38       0.38   zpaq 5                           encyclopediadramaticase-20150628-current.xml\n    45296512    15.3      24.94       9.23   bsc 6                            encyclopediadramaticase-20150628-current.xml\n    48331622    16.4       0.61     103.39   lzturbo 49                       encyclopediadramaticase-20150628-current.xml\n    48665325    16.5       0.92      74.37   lzlib 9d29fb273                  encyclopediadramaticase-20150628-current.xml\n    48768664    16.5       0.99     103.98   lzma 9d29:fb273:mf=bt4           encyclopediadramaticase-20150628-current.xml\n    49285547    16.7       0.33     270.88   brotli 11d29                     encyclopediadramaticase-20150628-current.xml\n    49356398    16.7       0.20     242.04   lzham 4fb258:x4:d29              encyclopediadramaticase-20150628-current.xml\n    50392272    17.1       0.81     770.60   lzturbo 39                       encyclopediadramaticase-20150628-current.xml\n    50394670    17.1       0.93     238.38   lzham 4                          encyclopediadramaticase-20150628-current.xml\n    51225518    17.3       1.34     100.09   lzma 9                           encyclopediadramaticase-20150628-current.xml\n    51712719    17.5       1.22     728.34   zstd 22                          encyclopediadramaticase-20150628-current.xml\n    52145611    17.6       0.44     677.25   oodle 89                         encyclopediadramaticase-20150628-current.xml\n    52145724    17.6       0.39     676.07   oodle 129                        encyclopediadramaticase-20150628-current.xml\n    53752244    18.2       0.25     390.78   oodle 19                         encyclopediadramaticase-20150628-current.xml\n    55929229    18.9       0.37     390.60   brotli 11                        encyclopediadramaticase-20150628-current.xml\n    56276672    19.0      28.38      16.80   bsc 3                            encyclopediadramaticase-20150628-current.xml\n    58523735    19.8       0.86    1139.22   lzturbo 29                       encyclopediadramaticase-20150628-current.xml\n    59832988    20.2       8.60      29.57   bzip2                            encyclopediadramaticase-20150628-current.xml\n    60558802    20.5      40.19     771.73   lzturbo 32                       encyclopediadramaticase-20150628-current.xml\n    62343390    21.1       0.64     499.89   xpack 9                          encyclopediadramaticase-20150628-current.xml\n    64984048    22.0      10.58     865.71   zstd 12                          encyclopediadramaticase-20150628-current.xml\n    66447845    22.5      25.35     409.12   brotli 5                         encyclopediadramaticase-20150628-current.xml\n    66764312    22.6       1.16     966.61   lizard 49                        encyclopediadramaticase-20150628-current.xml\n    68204206    23.1       4.38      83.95   zpaq 2                           encyclopediadramaticase-20150628-current.xml\n    73098453    24.7     104.00     836.44   zstd 5                           encyclopediadramaticase-20150628-current.xml\n    75448396    25.5       5.58     643.28   libdeflate 12                    encyclopediadramaticase-20150628-current.xml\n    78892029    26.7       1.22    1755.37   lizard 29                        encyclopediadramaticase-20150628-current.xml\n    79571370    26.9      39.15    1430.72   lzturbo 22                       encyclopediadramaticase-20150628-current.xml\n    79697531    27.0      69.43     654.61   libdeflate 5                     encyclopediadramaticase-20150628-current.xml\n    80920761    27.4       3.56    2063.53   lizard 39                        encyclopediadramaticase-20150628-current.xml\n    81086153    27.4       0.40    2649.13   oodle 116                        encyclopediadramaticase-20150628-current.xml\n    81908602    27.7       0.47    2657.88   oodle 118                        encyclopediadramaticase-20150628-current.xml\n    83472503    28.2     175.59     363.39   brotli 1                         encyclopediadramaticase-20150628-current.xml\n    84696417    28.7     106.19     694.04   xpack 1                          encyclopediadramaticase-20150628-current.xml\n    86085983    29.1     316.32     977.61   zstd 1                           encyclopediadramaticase-20150628-current.xml\n    86923697    29.4     110.45     647.82   libdeflate 1                     encyclopediadramaticase-20150628-current.xml\n    89494542    30.3      26.54    3241.69   oodle 114                        encyclopediadramaticase-20150628-current.xml\n    90013089    30.5       3.96    2946.61   lizard 19                        encyclopediadramaticase-20150628-current.xml\n    90047833    30.5       0.97    3515.12   lzturbo 19                       encyclopediadramaticase-20150628-current.xml\n    90100574    30.5       3.65    2628.28   oodle 49                         encyclopediadramaticase-20150628-current.xml\n    96748726    32.7      62.50    3527.16   lzturbo 12                       encyclopediadramaticase-20150628-current.xml\n   104639536    35.4      91.49    2949.38   oodle 112                        encyclopediadramaticase-20150628-current.xml\n   109982235    37.2     282.19     590.40   density 3                        encyclopediadramaticase-20150628-current.xml\n   175697176    59.5    1558.09    2218.82   chameleon 2                      encyclopediadramaticase-20150628-current.xml\n   280443803    94.9     195.96    2045.29   trle                             encyclopediadramaticase-20150628-current.xml\nFailed:\n```\n           0     0.0       0.00       0.00   lzsse2 1         encyclopediadramaticase-20150628-current.xml\nERROR at 0:3c, 96\n           0     0.0       0.00       0.00   lzsse2 17        encyclopediadramaticase-20150628-current.xml\nERROR at 0:3c, 96\n```\nAnother .XML dump is coming, in order to scramble the biased enwik8 notions, the first 300MB of 60,182,193,037 bytes long enwiki-20170101-pages-articles.xml will \"promote\" the stronger ones/performers... RIGHTFULLY SO, those who overtuned their codecs to ENWIK8 could also witness the outcome when 200 extra kilometers are to be trodden :P\n\nTurboBench:  - Thu Apr 26 23:11:13 2018\n(bold = pareto)  MB=1.000.000\n|C Size|ratio|C MB/s|D MB/s|Name|\n|--------:|-----:|--------:|--------:|----------------|\n|62419065| 19.8|6.89|31.64|lzturbo 59|\n|62422029| 19.8|7.20|45.47|lzturbo 59t2|\n|62427257| 19.8|7.35|51.07|lzturbo 59t4|\n|62517772| 19.9|0.36|0.36|zpaq 5|\n|65779018| 20.9|18.17|6.53|bsc 6|\n|70989698| 22.6|0.65|77.48|lzturbo 49|\n|72099599| 22.9|0.87|57.24|lzlib 9d29fb273|\n|72205998| 23.0|0.91|75.21|lzma 9d29:fb273:mf=bt4|\n|72439347| 23.0|0.33|215.37|brotli 11d29|\n|72824487| 23.2|0.30|176.87|lzham 4fb258:x4:d29|\n|73048249| 23.2|0.75|177.06|lzham 4|\n|73736920| 23.4|0.75|572.32|lzturbo 39|\n|74558511| 23.7|1.06|72.63|lzma 9|\n|75554555| 24.0|1.18|554.52|zstd 22|\n|76107283| 24.2|0.36|506.87|oodle 89|\n|76107283| 24.2|0.33|506.67|oodle 129|\n|79003351| 25.1|0.21|284.37|oodle 19|\n|81912155| 26.0|0.39|297.87|brotli 11|\n|83638722| 26.6|20.97|12.30|bsc 3|\n|84326002| 26.8|0.78|858.99|lzturbo 29|\n|88091533| 28.0|28.70|573.10|lzturbo 32|\n|88186503| 28.0|11.65|24.05|bzip2|\n|91599453| 29.1|0.45|363.90|xpack 9|\n|93365278| 29.7|8.05|939.19|zstd 12|\n|95240121| 30.3|19.73|625.24|brotli 5|\n|95326645| 30.3|1.49|747.10|lizard 49|\n|97029330| 30.8|3.45|71.38|zpaq 2|\n|104138699| 33.1|81.11|941.45|zstd 5|\n|105403772| 33.5|5.80|521.50|libdeflate 12|\n|110214795| 35.0|67.73|540.69|libdeflate 5|\n|110688754| 35.2|1.55|1170.56|lizard 29|\n|112942068| 35.9|6.28|1537.93|lizard 39|\n|113673394| 36.1|28.67|903.00|lzturbo 22|\n|113925755| 36.2|0.36|2209.71|oodle 116|\n|115347740| 36.7|0.40|2199.13|oodle 118|\n|118052171| 37.5|132.86|287.65|brotli 1|\n|119288025| 37.9|85.34|564.82|xpack 1|\n|119708816| 38.1|118.16|530.93|libdeflate 1|\n|122191084| 38.8|239.91|774.52|zstd 1|\n|124642944| 39.6|0.89|3092.78|lzturbo 19|\n|124684991| 39.6|3.21|2160.23|oodle 49|\n|124723830| 39.6|6.62|2505.48|lizard 19|\n|125164938| 39.8|19.97|3104.19|oodle 114|\n|132235497| 42.0|47.56|3084.77|lzturbo 12|\n|146775844| 46.7|173.95|272.87|density 3|\n|146814788| 46.7|68.45|2967.95|oodle 112|\n|197027074| 62.6|1544.23|1812.78|chameleon 2|\n|312661033| 99.4|188.27|2157.15|trle|\nFailed:\n0     0.0       0.00       0.00   lzsse2 1         enwiki-20170101-pages-articles.xml_first_300MB\nERROR at 0:3c, 96\n           0     0.0       0.00       0.00   lzsse2 17        enwiki-20170101-pages-articles.xml_first_300MB\nERROR at 0:3c, 96\nOh, and I almost forgot the most interesting to me format - English .TXT tarred anthologies - reckon the Star Trek fans have to be allowed to see what decompressors to choose when the need of opening AT WARP SPEED  (WARP is not just a word, you know, there was OS/2 on top of that) the ULTIMATE Collection Star Trek ebook arises ...\nCrunching 325,071,872 bytes long Star_Trek_-_737_Ebooks.tar ...\n\nThe Markdown generated by TurboBench:\nTurboBench:  - Thu Apr 26 11:44:08 2018\n(bold = pareto)  MB=1.000.000\n|C Size|ratio|C MB/s|D MB/s|Name|\n|--------:|-----:|--------:|--------:|----------------|\n|59411401| 18.3|6.47|31.32|lzturbo 59|\n|59412829| 18.3|6.66|45.71|lzturbo 59t2|\n|59415117| 18.3|6.85|50.84|lzturbo 59t4|\n|63159822| 19.4|0.37|0.36|zpaq 5|\n|65359558| 20.1|21.95|5.83|bsc 6|\n|70822994| 21.8|0.57|85.43|lzturbo 49|\n|71865410| 22.1|0.76|61.94|lzlib 9d29fb273|\n|71943246| 22.1|0.78|83.41|lzma 9d29:fb273:mf=bt4|\n|71952589| 22.1|0.34|232.59|brotli 11d29|\n|72229583| 22.2|0.25|186.70|lzham 4fb258:x4:d29|\n|72311551| 22.2|0.68|183.77|lzham 4|\n|72346887| 22.3|0.65|564.06|lzturbo 39|\n|74998925| 23.1|1.00|569.41|zstd 22|\n|75251291| 23.1|0.88|81.02|lzma 9|\n|75312368| 23.2|0.31|489.95|oodle 89|\n|75312445| 23.2|0.29|491.69|oodle 129|\n|78374256| 24.1|0.18|277.11|oodle 19|\n|81393957| 25.0|0.68|905.84|lzturbo 29|\n|84113610| 25.9|0.41|649.77|brotli 11|\n|84321413| 25.9|11.44|22.53|bzip2|\n|85156578| 26.2|21.93|14.16|bsc 3|\n|89815371| 27.6|29.29|574.73|lzturbo 32|\n|92993537| 28.6|1.25|974.66|lizard 49|\n|94480420| 29.1|0.50|422.00|xpack 9|\n|97560652| 30.0|5.19|697.70|zstd 12|\n|100567346| 30.9|3.55|70.40|zpaq 2|\n|102104435| 31.4|20.12|359.96|brotli 5|\n|111798931| 34.4|5.40|559.52|libdeflate 12|\n|111947098| 34.4|78.30|606.49|zstd 5|\n|112249518| 34.5|1.29|1294.11|lizard 29|\n|113118398| 34.8|5.94|1515.44|lizard 39|\n|114912970| 35.4|0.32|2262.46|oodle 116|\n|117119332| 36.0|0.34|2260.52|oodle 118|\n|119465242| 36.8|56.94|598.41|libdeflate 5|\n|124577277| 38.3|127.44|281.09|brotli 1|\n|125409207| 38.6|28.93|938.48|lzturbo 22|\n|130464112| 40.1|213.17|759.57|zstd 1|\n|130569470| 40.2|97.02|527.99|xpack 1|\n|130652429| 40.2|118.39|573.86|libdeflate 1|\n|131564768| 40.5|18.76|2848.23|oodle 114|\n|132340112| 40.7|0.74|3106.01|lzturbo 19|\n|132391865| 40.7|6.12|2539.96|lizard 19|\n|132396180| 40.7|3.01|2235.15|oodle 49|\n|142275352| 43.8|44.33|3153.25|lzturbo 12|\n|148445114| 45.7|337.76|639.95|density 3|\n|169736713| 52.2|87.01|2888.01|oodle 112|\n|183444616| 56.4|1519.26|2866.97|chameleon 2|\n|324553919| 99.8|191.19|2253.41|trle|\nThe RAW:\nC:\\>\"turbobench_v18.04_-_build_22_Apr_2018.exe\" Star_Trek_-_737_Ebooks.tar -ebzip2/lzlib,9d29fb273/lzham,4fb258:x4:d29/lzma,9d29:fb273:mf=bt4/libdeflate,1,5,12/oodle,19,49,89,112,114,116,118,129/lzsse2,1,17/lzturbo,19,12,29,22,39,32,49,59,59t2,59t4/zstd,1,5,12,22/lizard,19,29,39,49/brotli,1,5,11/brotli,11d29/lzma,9/xpack,1,9/chameleon,2/density,3/lzham,4/trle/bsc,3,6/zpaq,2,5 -I3 -J31 -k1 -B2G\n...\nTurboBench:  - Thu Apr 26 10:13:34 2018\n      C Size  ratio%     C MB/s     D MB/s   Name            File\n    59411401    18.3       6.47      31.32   lzturbo 59                       Star_Trek_-_737_Ebooks.tar\n    59412829    18.3       6.66      45.71   lzturbo 59t2                     Star_Trek_-_737_Ebooks.tar\n    59415117    18.3       6.85      50.84   lzturbo 59t4                     Star_Trek_-_737_Ebooks.tar\n    63159822    19.4       0.37       0.36   zpaq 5                           Star_Trek_-_737_Ebooks.tar\n    65359558    20.1      21.95       5.83   bsc 6                            Star_Trek_-_737_Ebooks.tar\n    70822994    21.8       0.57      85.43   lzturbo 49                       Star_Trek_-_737_Ebooks.tar\n    71865410    22.1       0.76      61.94   lzlib 9d29fb273                  Star_Trek_-_737_Ebooks.tar\n    71943246    22.1       0.78      83.41   lzma 9d29:fb273:mf=bt4           Star_Trek_-_737_Ebooks.tar\n    71952589    22.1       0.34     232.59   brotli 11d29                     Star_Trek_-_737_Ebooks.tar\n    72229583    22.2       0.25     186.70   lzham 4fb258:x4:d29              Star_Trek_-_737_Ebooks.tar\n    72311551    22.2       0.68     183.77   lzham 4                          Star_Trek_-_737_Ebooks.tar\n    72346887    22.3       0.65     564.06   lzturbo 39                       Star_Trek_-_737_Ebooks.tar\n    74998925    23.1       1.00     569.41   zstd 22                          Star_Trek_-_737_Ebooks.tar\n    75251291    23.1       0.88      81.02   lzma 9                           Star_Trek_-_737_Ebooks.tar\n    75312368    23.2       0.31     489.95   oodle 89                         Star_Trek_-_737_Ebooks.tar\n    75312445    23.2       0.29     491.69   oodle 129                        Star_Trek_-_737_Ebooks.tar\n    78374256    24.1       0.18     277.11   oodle 19                         Star_Trek_-_737_Ebooks.tar\n    81393957    25.0       0.68     905.84   lzturbo 29                       Star_Trek_-_737_Ebooks.tar\n    84113610    25.9       0.41     649.77   brotli 11                        Star_Trek_-_737_Ebooks.tar\n    84321413    25.9      11.44      22.53   bzip2                            Star_Trek_-_737_Ebooks.tar\n    85156578    26.2      21.93      14.16   bsc 3                            Star_Trek_-_737_Ebooks.tar\n    89815371    27.6      29.29     574.73   lzturbo 32                       Star_Trek_-_737_Ebooks.tar\n    92993537    28.6       1.25     974.66   lizard 49                        Star_Trek_-_737_Ebooks.tar\n    94480420    29.1       0.50     422.00   xpack 9                          Star_Trek_-_737_Ebooks.tar\n    97560652    30.0       5.19     697.70   zstd 12                          Star_Trek_-_737_Ebooks.tar\n   100567346    30.9       3.55      70.40   zpaq 2                           Star_Trek_-_737_Ebooks.tar\n   102104435    31.4      20.12     359.96   brotli 5                         Star_Trek_-_737_Ebooks.tar\n   111798931    34.4       5.40     559.52   libdeflate 12                    Star_Trek_-_737_Ebooks.tar\n   111947098    34.4      78.30     606.49   zstd 5                           Star_Trek_-_737_Ebooks.tar\n   112249518    34.5       1.29    1294.11   lizard 29                        Star_Trek_-_737_Ebooks.tar\n   113118398    34.8       5.94    1515.44   lizard 39                        Star_Trek_-_737_Ebooks.tar\n   114912970    35.4       0.32    2262.46   oodle 116                        Star_Trek_-_737_Ebooks.tar\n   117119332    36.0       0.34    2260.52   oodle 118                        Star_Trek_-_737_Ebooks.tar\n   119465242    36.8      56.94     598.41   libdeflate 5                     Star_Trek_-_737_Ebooks.tar\n   124577277    38.3     127.44     281.09   brotli 1                         Star_Trek_-_737_Ebooks.tar\n   125409207    38.6      28.93     938.48   lzturbo 22                       Star_Trek_-_737_Ebooks.tar\n   130464112    40.1     213.17     759.57   zstd 1                           Star_Trek_-_737_Ebooks.tar\n   130569470    40.2      97.02     527.99   xpack 1                          Star_Trek_-_737_Ebooks.tar\n   130652429    40.2     118.39     573.86   libdeflate 1                     Star_Trek_-_737_Ebooks.tar\n   131564768    40.5      18.76    2848.23   oodle 114                        Star_Trek_-_737_Ebooks.tar\n   132340112    40.7       0.74    3106.01   lzturbo 19                       Star_Trek_-_737_Ebooks.tar\n   132391865    40.7       6.12    2539.96   lizard 19                        Star_Trek_-_737_Ebooks.tar\n   132396180    40.7       3.01    2235.15   oodle 49                         Star_Trek_-_737_Ebooks.tar\n   142275352    43.8      44.33    3153.25   lzturbo 12                       Star_Trek_-_737_Ebooks.tar\n   148445114    45.7     337.76     639.95   density 3                        Star_Trek_-_737_Ebooks.tar\n   169736713    52.2      87.01    2888.01   oodle 112                        Star_Trek_-_737_Ebooks.tar\n   183444616    56.4    1519.26    2866.97   chameleon 2                      Star_Trek_-_737_Ebooks.tar\n   324553919    99.8     191.19    2253.41   trle                             Star_Trek_-_737_Ebooks.tar\nFailed:\n0     0.0       0.00       0.00   lzsse2 1         Star_Trek_-_737_Ebooks.tar\nERROR at 0:53, a0\n           0     0.0       0.00       0.00   lzsse2 17        Star_Trek_-_737_Ebooks.tar\nERROR at 0:53, a0\nOkay, let us see how the results for the two 300MB .XML encyclopedia dumps (Wikipedia and Dramatica) relate:\n48768664    16.5       0.99     103.98   lzma 9d29:fb273:mf=bt4           encyclopediadramaticase-20150628-current.xml\n    49285547    16.7       0.33     270.88   brotli 11d29                     encyclopediadramaticase-20150628-current.xml\n    49356398    16.7       0.20     242.04   lzham 4fb258:x4:d29              encyclopediadramaticase-20150628-current.xml\n    50392272    17.1       0.81     770.60   lzturbo 39                       encyclopediadramaticase-20150628-current.xml\n72205998    23.0       0.91      75.21   lzma 9d29:fb273:mf=bt4           enwiki-20170101-pages-articles.xml_first_300MB\n    72439347    23.0       0.33     215.37   brotli 11d29                     enwiki-20170101-pages-articles.xml_first_300MB\n    72824487    23.2       0.30     176.87   lzham 4fb258:x4:d29              enwiki-20170101-pages-articles.xml_first_300MB\n    73736920    23.4       0.75     572.32   lzturbo 39                       enwiki-20170101-pages-articles.xml_first_300MB\n71943246    22.1       0.78      83.41   lzma 9d29:fb273:mf=bt4           Star_Trek_-_737_Ebooks.tar\n    71952589    22.1       0.34     232.59   brotli 11d29                     Star_Trek_-_737_Ebooks.tar\n    72229583    22.2       0.25     186.70   lzham 4fb258:x4:d29              Star_Trek_-_737_Ebooks.tar\n    72346887    22.3       0.65     564.06   lzturbo 39                       Star_Trek_-_737_Ebooks.tar\nDramatica:\nBrotli decompresses 270/103= 2.6x faster than LZMA\nLzTurbo decompresses 770/270= 2.8x faster than Brotli\nWikipedia:\nBrotli decompresses 215/75= 2.8x faster than LZMA\nLzTurbo decompresses 572/215= 2.6x faster than Brotli\nStar_Trek:\nBrotli decompresses 232/83= 2.7x faster than LZMA\nLzTurbo decompresses 564/232= 2.4x faster than Brotli\nSo, three things:\n- Large Window Brotli proves very strong but is no match to LzTurbo;\n- XML results are not fully uniform, the [de]compression rates vary;\n- After finishing all the testsets, my intent is to provide a table (Markdown style) pointing out all the decompression rates speedups for Oodle 'Hydra', LzTurbo 39, Brotli and LZMA.\nIn my previous tests I witnessed difference between Oodle 129 and Oodle 89, AFAIK being respectively 'Hydra' and 'Kraken', the former being much faster on DNA data, also in Reddit test:\n52767834    15.2       0.38    1037.65   oodle 129                        RC_2008-08.tbb\n    52767834    15.2       0.42     724.03   oodle 89                         RC_2008-08.tbb\nSo, the final outcome will be a single table showing how the 4 performers relate. . As the French say, \"L'app\u00e9tit vient en mangeant.\":\n        Idiomatic translation: The more you have, the more you want.\n        Literal meaning: Appetite comes while eating.\nReckon, the .DNA and .CSV should also contribute to the drawing of the picture...\nEDIT: It turns out, I overlooked the TurboBench ability to benchmark an arbitrary long chunk at beginning by using the option \"-B\" .  Ex. \"-B200\"  for 200.000.000 bytes. Only the first 200MB will be used in the benchmark.\nAlso, to feint the drawback (the insufficient 8GB on my testmachine 'Compressionette') wrote the console utility 'Chunkerito', can download its .C source and executable, Get_The_First_300MB_chunk.zip (38,741 bytes):\n```\nC:\\Get_The_First_300MB_chunk>Get_The_First_300MB_chunk.bat C:_KAZE\\Textual_corpora\\enwiki-20170101-pages-articles.xml\nChunkerito, revision 1+, written by Kaze.\nPurpose: To chunkize/split any file to 'ChunkSize' long chunks.\nUsage: Chunker filename ChunkSize\nNote: For 128MB chunks use ChunkSize = 134217728\nSize of Input TEXTual file: 60,182,193,037\n^CTerminate batch job (Y/N)? y...\nC:\\Get_The_First_300MB_chunk>dir\n04/26/2018  11:47 AM       314,572,800 Chunkerito.000,001\n04/26/2018  11:47 AM       314,572,800 Chunkerito.000,002\n04/26/2018  11:47 AM       314,572,800 Chunkerito.000,003\n04/26/2018  11:47 AM       314,572,800 Chunkerito.000,004\n03/17/2018  12:15 AM            12,895 Chunkerito.c\n03/17/2018  12:15 AM            62,976 Chunkerito.exe\n04/26/2018  11:38 AM                30 Get_The_First_300MB_chunk.bat\n03/29/2018  12:49 AM             1,631 MokujIN GREEN 224 prompt.lnk\nC:\\Get_The_First_300MB_chunk>type \"Chunkerito.000,001\"|more\n\n\nWikipedia\nenwiki\nhttps://en.wikipedia.org/wiki/Main_Page\n    MediaWiki 1.29.0-wmf.6\nfirst-letter\n\nMedia\nSpecial\n\nTalk\nUser\n...\n```\nThe same chunkenization done on the 'Dragonfly' DNA sequence ~960MB long:\n```\nC:\\Get_The_First_300MB_chunk>Get_The_First_300MB_chunk.bat \"c:\\xx\\DCC_(Deathship_Compression_Corpus)644-files\\www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)_whole_genome_shotgun.tar\"\nChunkerito, revision 1+, written by Kaze.\nPurpose: To chunkize/split any file to 'ChunkSize' long chunks.\nUsage: Chunker filename ChunkSize\nNote: For 128MB chunks use ChunkSize = 134217728\nSize of Input TEXTual file: 975,021,056\n\\; Chunk # 4 has been created ...\nC:\\Get_The_First_300MB_chunk>type \"www.ncbi.nlm.nih.gov_Dragonfly_(Ladona_fulva)whole_genome_shotgun.tar_first_300MB\"|more\nwww.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)_whole_genome_shotgun/APVN01.1.fsa_nt\n...\n\ngi|481454603|gb|APVN01000001.1| Ladona fulva Contig1, whole genome shotgun sequence\nTTAGCCGTCAAGGGGATCACGATACGATTTATATTTGTTCATGTAATGAGCCGTGACACATATCGATCGA\nTGTAACATGTTACTAAAATACACAATACGAATCGTAGAATAAATCAAAAAGTTAATATTTTGCTTCCGAA\nTGAGAAACGTCGAATGCACAACGCTGAGTATTGGTAGTTGAAATATTTTATTTCCATGAATAATTGCCCT\nTGTCATCCCACGTAACGAGAACTTTCATAGATTATATGGGGATGCTGGCGAAACTGAGCAAAAATAATAA\nGCTATAGGAGGGCGATTCGGTCGGCAACAGAGGTTGATCGAAATATGATCTGACTTGGGCCATATTATGG\nAATACATTTCATAACATCAAGATCCCAAAATGACATGCATCACTCTAGGAAAAAAGTTGCAAAATGTTCG\nTTAACTTAGCACGAAGGTATATATTAGAAATCCCGCGCGGTACACGCTCAAGGCGCTGTTTGCGCTCAAA\nCCTTGCGATCAGCTGCGATCATACAACAAATGAACACCTACTTTCGAAATAGCATATGTCATATGTTGTG\nAGAGATTTTTGGAATGCAGATTTGGTATAGGATGAAGCATTAGAATTAAAGGAAATTTTAAAATGGGAGG\nTAAACATAAACAGGCTCAAAGAACCAAAAATAACGCACGGGTTAGTTGATATCTTACTATGATAATTTTC\nATTTAACATTATTGACAAGTATACTTAAAAGAAACTTGAAAATACCAGTTAATGTTAATTATTATTTCAT\n...\n```\n\nCrunching 314,572,800 bytes long www.ncbi.nlm.nih.gov_Dragonfly_(Ladona_fulva)_whole_genome_shotgun.tar_first_300MB ...\n\nTurboBench:  - Fri Apr 27 21:51:45 2018\n(bold = pareto)  MB=1.000.000\n|C Size|ratio|C MB/s|D MB/s|Name|File|\n|--------:|-----:|--------:|--------:|----------------|----------------|\n|74844587| 23.8|0.32|0.31|zpaq 5|www.ncbi.nlm.nih.gov_Dragonfly_(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|76363252| 24.3|0.71|1090.38|lzturbo 39|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|79031404| 25.1|0.48|51.82|lzlib 9d29fb273|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|79048973| 25.1|5.62|27.45|lzturbo 59|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|79049497| 25.1|6.02|45.81|lzturbo 59t2|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|79050237| 25.1|6.14|52.16|lzturbo 59t4|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|79050805| 25.1|0.62|73.48|lzturbo 49|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|79106644| 25.1|0.50|70.35|lzma 9d29:fb273:mf=bt4|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|79843615| 25.4|0.57|70.32|lzma 9|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|79847082| 25.4|0.20|119.64|brotli 11d29|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|79952387| 25.4|0.25|154.97|lzham 4fb258:x4:d29|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|80243366| 25.5|21.40|20.75|bsc 3|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|80327238| 25.5|20.96|11.23|bsc 6|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|80595766| 25.6|0.53|162.27|lzham 4|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|81447524| 25.9|0.67|504.33|zstd 22|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|82460233| 26.2|0.26|127.11|brotli 11|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|83368983| 26.5|0.23|619.11|oodle 89|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|83985046| 26.7|0.14|344.22|oodle 19|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|85499438| 27.2|0.21|1156.87|oodle 129|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|87322818| 27.8|0.94|1173.42|lizard 49|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|87362764| 27.8|3.53|753.81|libdeflate 12|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|88497987| 28.1|11.13|19.68|bzip2|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|88952252| 28.3|4.03|1673.78|lizard 39|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|92010880| 29.2|34.46|1237.04|lzturbo 32|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|92351753| 29.4|0.76|788.88|lzturbo 29|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|93411984| 29.7|7.41|689.57|zstd 12|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|93610827| 29.8|2.05|749.11|xpack 9|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|94243984| 30.0|17.06|370.65|brotli 5|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|96420245| 30.7|54.29|632.27|libdeflate 5|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|96702059| 30.7|97.46|537.50|zstd 5|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|99382236| 31.6|223.03|313.42|brotli 1|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|99685993| 31.7|191.18|669.66|zstd 1|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|100188891| 31.8|138.51|517.49|libdeflate 1|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|100198117| 31.9|110.34|433.78|xpack 1|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|103311753| 32.8|3.56|66.08|zpaq 2|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|112080411| 35.6|0.95|1692.71|lizard 29|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|114000407| 36.2|0.24|3186.52|oodle 116|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|114399132| 36.4|0.92|3380.76|lzturbo 19|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|114443457| 36.4|2.53|2816.00|oodle 49|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|114506143| 36.4|4.12|2469.72|lizard 19|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|119070578| 37.9|0.26|3109.41|oodle 118|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|127571232| 40.6|34.94|1021.69|lzturbo 22|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|130954049| 41.6|66.45|3119.00|lzturbo 12|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|132077784| 42.0|20.10|3794.70|oodle 114|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|162941764| 51.8|584.20|555.17|density 3|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|167155790| 53.1|1754.57|4351.24|chameleon 2|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|199758502| 63.5|121.24|2141.26|oodle 112|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)whole_genome_shotgun.tar_first_300MB|\n|284139766| 90.3|180.76|875.99|trle|www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)_whole_genome_shotgun.tar_first_300MB|\nFailed:\n0     0.0       0.00       0.00   lzsse2 1         www.ncbi.nlm.nih.gov_Dragonfly_(Ladona_fulva)_whole_genome_shotgun.tar_first_300MB\nERROR at 0:77, 91\n           0     0.0       0.00       0.00   lzsse2 17        www.ncbi.nlm.nih.gov_Dragonfly_(Ladona_fulva)_whole_genome_shotgun.tar_first_300MB\nERROR at 0:77, 91\nSo, the testsets that are to be processed:\n04/26/2018  11:47 AM       314,572,800 enwiki-20170101-pages-articles.xml_first_300MB\n11/13/2017  01:08 AM       405,610,647 Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv\n11/13/2017  01:08 AM       150,950,913 Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv\n11/13/2017  01:08 AM       203,288,144 Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv\n11/13/2017  01:08 AM       282,218,054 Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt\n04/26/2018  12:00 PM       314,572,800 www.ncbi.nlm.nih.gov_Dragonfly_(Ladona_fulva)_whole_genome_shotgun.tar_first_300MB\nChinese comments in .CSV, a must-see one it is.  \nRethinking how scattered all the benchmark packages are, once I did above ones, surely will put all the corpora in one RAZOR archive, to pay tribute to the excellent work done by Christian Martelock, thus as a \"by-product\" or bonus, we can see how the whole/solid compression goes on all the testsets as a whole! . Okay, today's post will be the last since I finished the benchmarking and just 2 hours away from uploading the corpus housing all the testsets benchmarked on this thread.\nThe rest are given one by one, after that the promised table of speedups, and in the very end, the link to the corpus will be given.\nThe first one is very interesting being superimportant languagewise/inflectionwise, each word being inflected and tagged, a precious corpus indeed!\nCrunching 282,218,054 bytes long Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt ...\n\nTurboBench:  - Sun Apr 29 17:12:27 2018\n(bold = pareto)  MB=1.000.000\n|C Size|ratio|C MB/s|D MB/s|Name|File|\n|--------:|-----:|--------:|--------:|----------------|----------------|\n|6189155|  2.2|0.39|0.38|zpaq 5|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|6955472|  2.5|62.39|27.44|bsc 6|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|8657900|  3.1|64.44|34.62|bsc 3|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|11705323|  4.1|0.25|562.50|brotli 11d29|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|11737167|  4.2|0.98|354.07|lzturbo 49|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|12167321|  4.3|0.31|776.03|brotli 11|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|12588067|  4.5|0.17|601.03|lzham 4fb258:x4:d29|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|12677250|  4.5|0.39|163.37|lzlib 9d29fb273|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|12925754|  4.6|0.60|269.19|lzma 9d29:fb273:mf=bt4|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|13806329|  4.9|1.20|2193.35|lzturbo 39|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|14352030|  5.1|0.47|1270.26|zstd 22|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|14561448|  5.2|8.66|54.65|bzip2|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|14666520|  5.2|1.42|256.24|lzma 9|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|15004589|  5.3|8.63|53.40|lzturbo 59|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|15004965|  5.3|8.73|67.17|lzturbo 59t2|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|15005373|  5.3|8.79|70.43|lzturbo 59t4|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|15340888|  5.4|0.64|845.55|lzham 4|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|17171617|  6.1|0.38|1266.82|oodle 19|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|18327223|  6.5|0.53|1939.92|oodle 129|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|18441799|  6.5|0.65|1749.74|oodle 89|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|20900839|  7.4|50.00|1683.05|zstd 12|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|21090625|  7.5|60.01|783.55|brotli 5|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|21806722|  7.7|6.35|1544.74|xpack 9|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|22268287|  7.9|2.77|1694.52|libdeflate 12|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|24748719|  8.8|1.38|3019.80|lzturbo 29|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|24908224|  8.8|253.39|1055.81|zstd 5|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|24937942|  8.8|0.43|2538.46|lizard 49|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|26740710|  9.5|162.99|1644.26|libdeflate 5|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|26859396|  9.5|550.76|992.83|zstd 1|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|26883379|  9.5|7.58|126.70|zpaq 2|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|26981077|  9.6|134.21|1964.55|lzturbo 32|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|27658395|  9.8|3.69|2622.31|lizard 39|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|30779166| 10.9|0.44|3363.62|lizard 29|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|33495585| 11.9|185.44|891.65|xpack 1|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|34028735| 12.1|1.55|4339.48|lzturbo 19|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|34084809| 12.1|4.02|3373.59|lizard 19|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|34089562| 12.1|4.06|3085.94|oodle 49|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|34142961| 12.1|249.54|1688.79|libdeflate 1|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|35012543| 12.4|416.25|704.67|brotli 1|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|35081145| 12.4|0.81|4493.70|oodle 118|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|35125184| 12.4|0.60|4500.01|oodle 116|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|37707356| 13.4|442.78|416.86|density 3|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|40311881| 14.3|151.08|3017.31|lzturbo 22|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|42929059| 15.2|74.33|4511.37|oodle 114|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|45343935| 16.1|176.73|3934.89|lzturbo 12|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|57572531| 20.4|313.65|4971.43|oodle 112|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|150259256| 53.2|1602.37|3632.66|chameleon 2|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\n|282203529|100.0|193.01|2209.35|trle|Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt|\nFailed:\n0     0.0       0.00       0.00   lzsse2 1         Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt\nERROR at 0:31, 2f\n           0     0.0       0.00       0.00   lzsse2 17        Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt\nERROR at 0:31, 2f\nInhere, lzturbo 39 dominates, however for my surprise lzturbo 59 fails to compete with bsc 6, that's one of the gifts of benchmarking, it always shows something overlooked, a weakness which needs addressing.\nThe next one holds precious code from the legendary Watcom C.\nCrunching 259,707,904 bytes long open_watcom_1.9.0-src.tar ...\n\nTurboBench:  - Mon Apr 30 07:51:32 2018\n(bold = pareto)  MB=1.000.000\n|C Size|ratio|C MB/s|D MB/s|Name|File|\n|--------:|-----:|--------:|--------:|----------------|----------------|\n|17324107|  6.7|0.43|0.43|zpaq 5|open_watcom_1.9.0-src.tar|\n|20328299|  7.8|0.80|218.74|lzturbo 49|open_watcom_1.9.0-src.tar|\n|20737792|  8.0|1.48|119.33|lzlib 9d29fb273|open_watcom_1.9.0-src.tar|\n|20839672|  8.0|1.69|191.64|lzma 9d29:fb273:mf=bt4|open_watcom_1.9.0-src.tar|\n|21117099|  8.1|0.52|515.13|brotli 11d29|open_watcom_1.9.0-src.tar|\n|21670652|  8.3|0.06|488.38|lzham 4fb258:x4:d29|open_watcom_1.9.0-src.tar|\n|21759173|  8.4|1.14|1778.47|lzturbo 39|open_watcom_1.9.0-src.tar|\n|21865190|  8.4|3.01|184.26|lzma 9|open_watcom_1.9.0-src.tar|\n|22249772|  8.6|2.32|1271.71|zstd 22|open_watcom_1.9.0-src.tar|\n|22298640|  8.6|1.49|480.21|lzham 4|open_watcom_1.9.0-src.tar|\n|22756320|  8.8|40.43|23.21|bsc 6|open_watcom_1.9.0-src.tar|\n|22898691|  8.8|0.57|661.98|brotli 11|open_watcom_1.9.0-src.tar|\n|23001107|  8.9|0.79|1488.99|oodle 129|open_watcom_1.9.0-src.tar|\n|23001719|  8.9|0.93|1488.94|oodle 89|open_watcom_1.9.0-src.tar|\n|23016893|  8.9|0.51|949.12|oodle 19|open_watcom_1.9.0-src.tar|\n|23741009|  9.1|12.24|46.80|lzturbo 59|open_watcom_1.9.0-src.tar|\n|23744593|  9.1|12.91|64.21|lzturbo 59t2|open_watcom_1.9.0-src.tar|\n|23752157|  9.1|13.02|69.19|lzturbo 59t4|open_watcom_1.9.0-src.tar|\n|24976908|  9.6|49.19|31.81|bsc 3|open_watcom_1.9.0-src.tar|\n|26963637| 10.4|36.90|1481.61|zstd 12|open_watcom_1.9.0-src.tar|\n|26998731| 10.4|49.17|661.76|brotli 5|open_watcom_1.9.0-src.tar|\n|27134856| 10.4|1.29|2212.31|lzturbo 29|open_watcom_1.9.0-src.tar|\n|27342951| 10.5|88.93|1706.24|lzturbo 32|open_watcom_1.9.0-src.tar|\n|27724424| 10.7|13.52|52.46|bzip2|open_watcom_1.9.0-src.tar|\n|29421038| 11.3|1.16|2306.98|lizard 49|open_watcom_1.9.0-src.tar|\n|29666433| 11.4|9.01|125.90|zpaq 2|open_watcom_1.9.0-src.tar|\n|31215741| 12.0|200.70|1510.10|zstd 5|open_watcom_1.9.0-src.tar|\n|32725514| 12.6|1.22|3019.16|lizard 29|open_watcom_1.9.0-src.tar|\n|33113590| 12.8|0.85|4016.14|oodle 116|open_watcom_1.9.0-src.tar|\n|33148507| 12.8|1.02|4155.13|oodle 118|open_watcom_1.9.0-src.tar|\n|33794944| 13.0|4.64|1269.00|libdeflate 12|open_watcom_1.9.0-src.tar|\n|36519427| 14.1|504.41|1532.00|zstd 1|open_watcom_1.9.0-src.tar|\n|36611911| 14.1|87.40|2278.18|lzturbo 22|open_watcom_1.9.0-src.tar|\n|36644803| 14.1|140.16|1265.61|libdeflate 5|open_watcom_1.9.0-src.tar|\n|37588412| 14.5|1.70|2491.54|lizard 39|open_watcom_1.9.0-src.tar|\n|38251459| 14.7|56.40|4540.19|oodle 114|open_watcom_1.9.0-src.tar|\n|38310721| 14.8|332.12|778.85|brotli 1|open_watcom_1.9.0-src.tar|\n|41036396| 15.8|4.83|2797.46|oodle 49|open_watcom_1.9.0-src.tar|\n|41246889| 15.9|1.34|4139.37|lzturbo 19|open_watcom_1.9.0-src.tar|\n|41300306| 15.9|201.39|979.11|libdeflate 1|open_watcom_1.9.0-src.tar|\n|41480035| 16.0|1.85|3523.42|lizard 19|open_watcom_1.9.0-src.tar|\n|45860222| 17.7|125.45|3876.30|lzturbo 12|open_watcom_1.9.0-src.tar|\n|48281758| 18.6|204.26|4150.81|oodle 112|open_watcom_1.9.0-src.tar|\n|59997812| 23.1|360.93|360.90|density 3|open_watcom_1.9.0-src.tar|\n|148200642| 57.1|1659.20|2860.75|chameleon 2|open_watcom_1.9.0-src.tar|\n|165724209| 63.8|298.97|3894.14|trle|open_watcom_1.9.0-src.tar|\nFailed:\n```\n           0     0.0       0.00       0.00   lzsse2 1         open_watcom_1.9.0-src.tar\nERROR at 0:6f, a0\n           0     0.0       0.00       0.00   lzsse2 17        open_watcom_1.9.0-src.tar\nERROR at 0:6f, a0\n36805790    14.2     158.01    1671.04   xpack 1          open_watcom_1.9.0-src.tar\n\nERROR at 144211230:34, cb\n    25917386    10.0       1.57    1818.47   xpack 9          open_watcom_1.9.0-src.tar\nERROR at 144315853:20, 4c\n```\nTwo standouts (except the usual number one lzturbo 39), zstd 1 and oodle 114 shine, or rather darken the rest casting long shadows.\nCrunching 405,610,647 bytes long Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv ...\n\nTurboBench:  - Sun Apr 29 08:33:59 2018\n(bold = pareto)  MB=1.000.000\n|C Size|ratio|C MB/s|D MB/s|Name|File|\n|--------:|-----:|--------:|--------:|----------------|----------------|\n|70413122| 17.4|0.36|0.36|zpaq 5|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|70488916| 17.4|17.91|6.58|bsc 6|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|72381729| 17.8|8.05|33.19|lzturbo 59|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|72384949| 17.8|8.43|46.65|lzturbo 59t2|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|72389457| 17.8|8.50|50.31|lzturbo 59t4|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|82449790| 20.3|24.30|11.46|bsc 3|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|84857934| 20.9|0.54|61.41|lzlib 9d29fb273|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|85031287| 21.0|0.69|81.20|lzma 9d29:fb273:mf=bt4|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|85620216| 21.1|0.68|68.71|lzturbo 49|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|86692998| 21.4|0.27|174.55|lzham 4fb258:x4:d29|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|87700851| 21.6|0.62|173.62|lzham 4|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|87834073| 21.7|1.12|80.04|lzma 9|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|88748119| 21.9|0.36|227.64|brotli 11d29|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|89783640| 22.1|0.79|557.91|lzturbo 39|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|91795746| 22.6|0.39|498.64|oodle 89|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|91795746| 22.6|0.35|498.01|oodle 129|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|92414852| 22.8|0.68|581.26|zstd 22|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|96123845| 23.7|11.32|29.21|bzip2|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|96594457| 23.8|0.23|284.19|oodle 19|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|99010755| 24.4|0.44|331.85|brotli 11|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|108092512| 26.6|31.16|569.19|lzturbo 32|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|108840695| 26.8|0.82|815.90|lzturbo 29|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|113508557| 28.0|0.46|362.85|xpack 9|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|119520522| 29.5|7.62|666.10|zstd 12|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|120370688| 29.7|19.52|337.67|brotli 5|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|122781661| 30.3|3.83|73.46|zpaq 2|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|128802175| 31.8|0.80|813.77|lizard 49|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|133841998| 33.0|81.91|684.08|zstd 5|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|138385262| 34.1|6.59|579.17|libdeflate 12|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|144271916| 35.6|30.75|998.53|lzturbo 22|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|145629166| 35.9|0.87|1244.51|lizard 29|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|145838302| 36.0|6.96|2010.12|lizard 39|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|147769335| 36.4|71.94|538.64|libdeflate 5|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|152898024| 37.7|148.34|297.69|brotli 1|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|153973028| 38.0|83.79|611.91|xpack 1|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|155196655| 38.3|0.41|2586.92|oodle 116|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|156708263| 38.6|118.11|519.29|libdeflate 1|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|157678551| 38.9|0.44|2834.20|oodle 118|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|160981785| 39.7|3.69|2305.93|oodle 49|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|161019023| 39.7|0.94|3615.84|lzturbo 19|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|161352654| 39.8|7.42|2612.24|lizard 19|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|164070077| 40.5|20.14|3209.58|oodle 114|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|169407769| 41.8|257.61|283.99|density 3|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|169680970| 41.8|50.34|3573.32|lzturbo 12|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|174713968| 43.1|261.51|790.18|zstd 1|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|189771059| 46.8|62.13|3238.49|oodle 112|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|253924877| 62.6|1578.96|1830.11|chameleon 2|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\n|405200855| 99.9|192.69|1980.43|trle|Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv|\nFailed:\n0     0.0       0.00       0.00   lzsse2 1         Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv\nERROR at 0:ef, bb\n           0     0.0       0.00       0.00   lzsse2 17        Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv\nERROR at 0:ef, bb\nInhere, one particular thing got me thinking, the 1GB/s difference between the superb performers lzturbo 19 and  lizard 19, being on par sizewise, sometimes decompression rates are on par NOT at all.\nCrunching 150,950,913 bytes long Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv ...\n\nTurboBench:  - Sat Apr 28 07:35:55 2018\n(bold = pareto)  MB=1.000.000\n|C Size|ratio|C MB/s|D MB/s|Name|File|\n|--------:|-----:|--------:|--------:|----------------|----------------|\n|10212045|  6.8|0.39|0.39|zpaq 5|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|10539341|  7.0|9.61|46.96|lzturbo 59|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|10540357|  7.0|9.84|62.24|lzturbo 59t2|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|10542429|  7.0|9.96|68.95|lzturbo 59t4|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|12296870|  8.1|37.02|12.66|bsc 6|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|12665445|  8.4|0.48|202.64|lzturbo 49|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|12935430|  8.6|1.01|116.07|lzlib 9d29fb273|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|12968621|  8.6|1.13|188.33|lzma 9d29:fb273:mf=bt4|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|13085028|  8.7|0.41|428.02|brotli 11d29|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|13102376|  8.7|0.16|593.84|lzham 4fb258:x4:d29|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|13289188|  8.8|0.64|1492.75|lzturbo 39|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|13671840|  9.1|1.27|1201.26|zstd 22|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|13795560|  9.1|1.14|448.98|lzham 4|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|13968253|  9.3|2.10|177.63|lzma 9|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|14154723|  9.4|0.45|706.85|brotli 11|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|14399499|  9.5|0.30|875.43|oodle 19|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|14775481|  9.8|0.54|1188.96|oodle 129|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|14775481|  9.8|0.61|1086.76|oodle 89|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|15908060| 10.5|0.68|1942.49|lzturbo 29|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|16424770| 10.9|1.59|892.51|xpack 9|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|16685531| 11.1|9.70|33.11|bzip2|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|17071177| 11.3|1.01|1662.62|lizard 49|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|17461845| 11.6|6.31|119.43|zpaq 2|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|17551699| 11.6|20.23|1305.42|zstd 12|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|18082278| 12.0|43.98|671.06|brotli 5|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|18411473| 12.2|1.09|2103.96|lizard 29|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|18689946| 12.4|64.61|1332.54|lzturbo 32|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|20499531| 13.6|0.64|2402.22|oodle 118|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|20515457| 13.6|0.46|2407.17|oodle 116|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|21950930| 14.5|34.14|19.87|bsc 3|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|22115676| 14.7|159.31|1185.41|zstd 5|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|24421187| 16.2|65.85|1758.64|lzturbo 22|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|25862420| 17.1|4.49|876.02|libdeflate 12|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|25918012| 17.2|2.79|2225.69|lizard 39|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|25959905| 17.2|45.43|2997.85|oodle 114|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|26849738| 17.8|378.74|1190.33|zstd 1|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|27351877| 18.1|3.78|3168.97|lzsse2 17|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|27912385| 18.5|112.14|891.83|libdeflate 5|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|27942491| 18.5|249.75|509.24|brotli 1|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|28214866| 18.7|0.79|3391.70|lzturbo 19|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|28252030| 18.7|3.20|2856.59|lizard 19|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|28300750| 18.7|3.74|2438.66|oodle 49|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|28825769| 19.1|127.85|827.57|xpack 1|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|31883592| 21.1|99.32|3167.78|lzturbo 12|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|32754775| 21.7|167.06|825.85|libdeflate 1|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|33431164| 22.1|14.30|2715.53|lzsse2 1|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|34436777| 22.8|150.79|3149.93|oodle 112|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|38597585| 25.6|219.05|301.62|density 3|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|85030355| 56.3|1466.40|2573.19|chameleon 2|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\n|139891643| 92.7|201.44|1755.37|trle|Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv|\nInhere, my favorite LzTurbo mode, 29, performs over the top.\nCrunching 203,288,144 bytes long Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv ...\n\nTurboBench:  - Sat Apr 28 12:29:23 2018\n(bold = pareto)  MB=1.000.000\n|C Size|ratio|C MB/s|D MB/s|Name|File|\n|--------:|-----:|--------:|--------:|----------------|----------------|\n|38828239| 19.1|0.37|0.36|zpaq 5|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|41932989| 20.6|7.32|34.47|lzturbo 59|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|41934805| 20.6|7.78|50.03|lzturbo 59t2|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|41937909| 20.6|7.89|55.70|lzturbo 59t4|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|42452918| 20.9|19.85|6.13|bsc 6|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|48343678| 23.8|0.74|73.68|lzturbo 49|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|49249568| 24.2|0.83|55.87|lzlib 9d29fb273|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|49310180| 24.3|0.91|72.92|lzma 9d29:fb273:mf=bt4|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|49447538| 24.3|0.32|172.09|lzham 4fb258:x4:d29|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|49456618| 24.3|0.37|403.50|brotli 11d29|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|49502401| 24.4|0.80|172.19|lzham 4|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|49595585| 24.4|0.85|528.84|lzturbo 39|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|49875692| 24.5|1.02|72.31|lzma 9|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|50192452| 24.7|1.05|534.32|zstd 22|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|51672595| 25.4|0.43|484.22|oodle 89|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|51672595| 25.4|0.38|483.98|oodle 129|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|52942015| 26.0|0.23|264.53|oodle 19|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|54547164| 26.8|0.44|301.57|brotli 11|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|56526268| 27.8|20.71|12.50|bsc 3|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|57991532| 28.5|11.69|24.61|bzip2|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|58004551| 28.5|29.49|557.77|lzturbo 32|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|58404302| 28.7|0.88|809.35|lzturbo 29|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|59998369| 29.5|0.46|368.07|xpack 9|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|61992934| 30.5|5.98|811.46|zstd 12|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|64010305| 31.5|3.40|69.33|zpaq 2|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|64495601| 31.7|1.37|675.19|lizard 49|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|64527683| 31.7|19.34|334.10|brotli 5|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|70609594| 34.7|76.85|802.87|zstd 5|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|75969812| 37.4|1.42|1002.67|lizard 29|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|76227226| 37.5|7.03|440.35|libdeflate 12|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|76289315| 37.5|29.12|915.89|lzturbo 22|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|78834910| 38.8|7.15|1447.19|lizard 39|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|79538326| 39.1|62.96|523.05|libdeflate 5|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|80437351| 39.6|0.42|2222.09|oodle 116|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|80714285| 39.7|119.74|271.33|brotli 1|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|81145151| 39.9|0.49|2203.19|oodle 118|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|82398577| 40.5|88.94|552.21|xpack 1|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|84004494| 41.3|113.43|538.65|libdeflate 1|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|86300419| 42.5|229.18|789.33|zstd 1|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|86821732| 42.7|278.33|298.04|density 3|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|87504030| 43.0|18.18|2384.89|oodle 114|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|89260143| 43.9|1.01|2875.81|lzturbo 19|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|89295977| 43.9|7.46|2176.21|lizard 19|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|89296021| 43.9|3.07|1990.82|oodle 49|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|94755194| 46.6|42.87|3029.13|lzturbo 12|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|101892479| 50.1|66.10|2758.84|oodle 112|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|122584080| 60.3|1536.00|2231.24|chameleon 2|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\n|202919667| 99.8|189.20|2027.89|trle|Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv|\nFailed:\n0     0.0       0.00       0.00   lzsse2 1         Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv\nERROR at 0:70, 96\n           0     0.0       0.00       0.00   lzsse2 17        Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv\nERROR at 0:70, 96\nHm, those headlines, brotli 11d29, lzturbo 39 and zstd 22 are not that different decompression-rate-wise.. Okay, the corpus deserves separate post:\nSuperpig_Corpus.rz 707 MB (741,571,263 bytes), downloadable at:\nhttps://drive.google.com/file/d/1WJkur8Gv-gNk9H_nBLMUpnY7_AJkYTrp/view?usp=sharing\n\n```\nC:>timer64 rz_1.01.exe a -d 512M Superpig_Corpus.rz Superpig_Corpus.tar\n RAZOR Archiver 1.01 (2017-09-14) - DEMO/TEST version \n (c) Christian Martelock (christian.martelock@web.de) \nScanning c:\\superpig_corpus.tar\n Found 0 dirs, 1 files, 4399079936 bytes.\nCreating archive Superpig_Corpus.rz\n Window : 524288K (4096M..1024G)\n Header : 52\n Size   : 741571263\nArchive ok. Added 0 dirs, 1 files, 4399079936 bytes.\n CPU time = 15727.328s / wall time = 12038.339s\nKernel  Time =    32.062 =    0%\nUser    Time = 15727.328 =  130%\nProcess Time = 15759.390 =  130%    Virtual  Memory =   6518 MB\nGlobal  Time = 12038.411 =  100%    Physical Memory =   6442 MB\nC:>sha1sum.exe Superpig_Corpus.tar\n4f9c15425eb5edb265b1f5bd0241cf0b94d194ef  Superpig_Corpus.tar\nC:>sha1sum.exe Superpig_Corpus.rz\n2214292c9e87e546426b5b83d0e44ad501d750b9  Superpig_Corpus.rz\nC:>dir Superpig_Corpus/og/on\n04/06/2017  11:44 AM        15,583,440 Arabian_Nights_complete.html\n04/06/2017  11:44 AM       174,100,480 Documentation_Composer_XE_2015.tar\n04/16/2018  11:04 PM       107,784,192 Encyclopaedia_Judaica_(in_22_volumes)TXT.tar\n06/28/2015  08:54 PM       295,515,893 encyclopediadramaticase-20150628-current.xml\n04/26/2018  11:47 AM       314,572,800 enwiki-20170101-pages-articles.xml_first_300MB\n11/13/2017  01:08 AM       405,610,647 Machine-Learning_Douban_Movie_Short_Comments(Chinese).csv\n11/13/2017  01:08 AM       150,950,913 Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv\n11/13/2017  01:08 AM       203,288,144 Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv\n11/13/2017  01:08 AM       282,218,054 Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt\n04/06/2017  11:44 AM       465,457,152 mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar\n04/06/2017  11:44 AM       205,242,368 NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95\n04/06/2017  11:44 AM       259,707,904 open_watcom_1.9.0-src.tar\n04/24/2018  03:02 AM       346,626,502 RC_2008-08\n04/06/2017  11:44 AM       211,938,580 Silesia_compression_corpus\n04/06/2017  11:44 AM       325,071,872 Star_Trek_-737_Ebooks.tar\n04/06/2017  11:44 AM       125,234,552 Webster's_Third_New_International_Unabridged(1961)(En-En).dsl\n04/23/2018  01:39 PM       195,587,584 www.holybooks.com_70_PDFs.tar\n04/26/2018  12:00 PM       314,572,800 www.ncbi.nlm.nih.gov_Dragonfly(Ladona_fulva)_whole_genome_shotgun.tar_first_300MB\n              18 File(s)  4,399,063,877 bytes\nC:>dir Superpig_Corpus*\n04/30/2018  08:04 AM              Superpig_Corpus\n04/30/2018  11:32 AM       741,571,263 Superpig_Corpus.rz\n04/30/2018  08:08 AM     4,399,079,936 Superpig_Corpus.tar\nC:>\n```\nRAZOR with its 512MB window fits perfectly in my laptop 6.8GB free RAM heap, not touching the HDD with virtual RAM.. Finally, the battle of the strongest fast decompressors on my laptop 'Compressionette':\n\nThe roofline/baseline is given by LzTurbo 39, thus instead of 'Speedup' the metric is called 'Speeddown' - how many times the performer is slower.\nNote: Oops, just realized that AFAIK Zstd 22 is using 128MB window, should have set it to 512MB as well, to be addressed... wonder what windows Oodle 129 and LzTurbo 39 are using!\nopen_watcom_1.9.0-src.tar (259,707,904 bytes):\n|Compressor|Compression Size|Decompression Speeddown|\n|----------|----------------|-----------------------|\n|lzma 9d29:fb273:mf=bt4|20839672|1778/191= 9.30x|\n|brotli 11d29|21117099|1778/515= 3.45x|\n|lzham 4fb258:x4:d29|21670652|1778/488= 3.64x|\n|lzturbo 39|21759173|1778/1778= 1.00x|\n|zstd 22|22249772|1778/1271= 1.39x|\n|oodle 129|23001107|1778/1488= 1.19x|\nMachine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt (282,218,054 bytes):\n|Compressor|Compression Size|Decompression Speeddown|\n|----------|----------------|-----------------------|\n|brotli 11d29|11705323|2193/562= 3.90x|\n|lzham 4fb258:x4:d29|12588067|2193/601= 3.64x|\n|lzma 9d29:fb273:mf=bt4|12925754|2193/269= 8.15x|\n|lzturbo 39|13806329|2193/2193= 1.00x|\n|zstd 22|14352030|2193/1270= 1.72x|\n|oodle 129|18327223|2193/1939= 1.13x|\nMachine-Learning_Douban_Movie_Short_Comments_(Chinese).csv (405,610,647 bytes):\n|Compressor|Compression Size|Decompression Speeddown|\n|----------|----------------|-----------------------|\n|lzma 9d29:fb273:mf=bt4|85031287|557/81= 6.87x|\n|lzham 4fb258:x4:d29|86692998|557/174= 3.20x|\n|brotli 11d29|88748119|557/227= 2.4x|\n|lzturbo 39|89783640|557/557= 1.00x|\n|oodle 129|91795746|557/498= 1.11x|\n|zstd 22|92414852|557/581= 0.95x|\nMachine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv (203,288,144 bytes):\n|Compressor|Compression Size|Decompression Speeddown|\n|----------|----------------|-----------------------|\n|lzma 9d29:fb273:mf=bt4|49310180|528/72= 7.33x|\n|lzham 4fb258:x4:d29|49447538|528/172= 3.06x|\n|brotli 11d29| 49456618|528/403= 1.31x|\n|lzturbo 39|49595585|528/528= 1.00x|\n|zstd 22|50192452|528/534= 0.98x|\n|oodle 129|51672595|528/483= 1.09x|\nMachine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv (150,950,913 bytes):\n|Compressor|Compression Size|Decompression Speeddown|\n|----------|----------------|-----------------------|\n|lzma 9d29:fb273:mf=bt4|12968621|1492/188= 7.93x|\n|brotli 11d29|13085028|1492/428= 3.48x|\n|lzham 4fb258:x4:d29|13102376|1492/593= 2.51x|\n|lzturbo 39|13289188|1492/1492= 1.00x|\n|zstd 22|13671840|1492/1201= 1.24x|\n|oodle 129|14775481|1492/1188= 1.25x|\nwww.ncbi.nlm.nih.gov_Dragonfly_(Ladona_fulva)_whole_genome_shotgun.tar_first_300MB (314,572,800 bytes):\n|Compressor|Compression Size|Decompression Speeddown|\n|----------|----------------|-----------------------|\n|lzturbo 39|76363252|1090/1090= 1.00x|\n|lzma 9d29:fb273:mf=bt4|79106644|1090/70= 15.57x|\n|brotli 11d29|79847082|1090/119= 9.15x|\n|lzham 4fb258:x4:d29|79952387|1090/154= 7.07x|\n|zstd 22|81447524|1090/504= 2.16x|\n|oodle 129|85499438|1090/1156= 0.94x|\nenwiki-20170101-pages-articles.xml_first_300MB (314,572,800 bytes):\n|Compressor|Compression Size|Decompression Speeddown|\n|----------|----------------|-----------------------|\n|lzma 9d29:fb273:mf=bt4|72205998|572/75= 7.62x|\n|brotli 11d29|72439347|572/215= 2.66x|\n|lzham 4fb258:x4:d29|72824487|572/176= 3.25x|\n|lzturbo 39|73736920|572/572= 1.00x|\n|zstd 22|75554555|572/554= 1.03x|\n|oodle 129|76107283|572/506= 1.13x|\nStar_Trek_-_737_Ebooks.tar (325,071,872 bytes):\n|Compressor|Compression Size|Decompression Speeddown|\n|----------|----------------|-----------------------|\n|lzma 9d29:fb273:mf=bt4|71943246|564/83= 6.79x|\n|brotli 11d29|71952589|564/232= 2.43x|\n|lzham 4fb258:x4:d29|72229583|564/186= 3.03x|\n|lzturbo 39|72346887|564/564= 1.00x|\n|zstd 22|74998925|564/569= 0.99x|\n|oodle 129|75312445|564/491= 1.14x|\nencyclopediadramaticase-20150628-current.xml (295,515,893 bytes):\n|Compressor|Compression Size|Decompression Speeddown|\n|----------|----------------|-----------------------|\n|lzma 9d29:fb273:mf=bt4|48768664|770/103= 7.47x|\n|brotli 11d29|49285547|770/270= 2.85x|\n|lzham 4fb258:x4:d29|49356398|770/242= 3.18x|\n|lzturbo 39|50392272|770/770= 1.00x|\n|zstd 22|51712719|770/728= 1.05x|\n|oodle 129|52145724|770/676= 1.13x|\nNASA_Kennedy_Space_Center_WWW_server_access_log_Jul95 (205,242,368 bytes):\n|Compressor|Compression Size|Decompression Speeddown|\n|----------|----------------|-----------------------|\n|lzma 9d29:fb273:mf=bt4|11883945|1814/251= 7.22x|\n|lzturbo 39|11901404|1814/1814= 1.00x|\n|lzham 4fb258:x4:d29|11922873|1814/701= 2.58x|\n|brotli 11d29|12236072|1814/566= 3.20x|\n|zstd 22|12639080|1814/1385= 1.30x|\n|oodle 129|14604989|1814/1125= 1.61x|\nRC_2008-08 (346,626,502 bytes):\n|Compressor|Compression Size|Decompression Speeddown|\n|----------|----------------|-----------------------|\n|lzma 9d29:fb273:mf=bt4|48680881|850/119= 7.14x|\n|lzham 4fb258:x4:d29|48791397|850/279= 3.04x|\n|brotli 11d29|48849144|850/306= 2.77x|\n|lzturbo 39|49536033|850/850= 1.00x|\n|zstd 22|50900116|850/780= 1.08x|\n|oodle 129|52767834|850/1037= 0.81x|\nwww.holybooks.com_70_PDFs.tar (195,587,584 bytes):\n|Compressor|Compression Size|Decompression Speeddown|\n|----------|----------------|-----------------------|\n|brotli 11d29|153693341|3312/146= 22.68x|\n|lzturbo 39|154390722|3312/3312= 1.00x|\n|lzham 4fb258:x4:d29|154478896|3312/178= 18.60x|\n|oodle 129|154632800|3312/3730= 0.88x|\n|lzma 9d29:fb273:mf=bt4|155014084|3312/21= 157.71x|\n|zstd 22|157307263|3312/2646= 1.25x|\nEncyclopaedia_Judaica_(in_22_volumes)_TXT.tar (107,784,192 bytes):\n|Compressor|Compression Size|Decompression Speeddown|\n|----------|----------------|-----------------------|\n|lzma 9d29:fb273:mf=bt4|27526894|509/70= 7.27x|\n|brotli 11d29|27600942|509/215= 2.36x|\n|lzham 4fb258:x4:d29|27750101|509/166= 3.06x|\n|lzturbo 39|27942261|509/509= 1.00x|\n|zstd 22|28041924|509/522= 0.97x|\n|oodle 129|28654421|509/479= 1.06x|\nWebster's_Third_New_International_Unabridged_(1961)_(En-En).dsl (125,234,552 bytes):\n|Compressor|Compression Size|Decompression Speeddown|\n|----------|----------------|-----------------------|\n|lzma 9d29:fb273:mf=bt4|19519434|856/111= 7.71x|\n|brotli 11d29|19559693|856/313= 2.73x|\n|lzham 4fb258:x4:d29|19609082|856/267= 3.20x|\n|lzturbo 39|19650726|856/856= 1.00x|\n|zstd 22|19975078|856/704= 1.21x|\n|oodle 129|20861759|856/673= 1.27x|\nDocumentation_Composer_XE_2015.tar (174,100,480 bytes):\n|Compressor|Compression Size|Decompression Speeddown|\n|----------|----------------|-----------------------|\n|brotli 11d29|30186666|2087/339= 6.15x|\n|lzma 9d29:fb273:mf=bt4|30220005|2087/95= 21.96x|\n|lzham 4fb258:x4:d29|30864067|2087/415= 5.02x|\n|lzturbo 39|30882973|2087/2087= 1.00x|\n|zstd 22|31026330|2087/1562= 1.33x|\n|oodle 129|31759169|2087/1676= 1.24x|\nSilesia_compression_corpus (211,938,580 bytes):\n|Compressor|Compression Size|Decompression Speeddown|\n|----------|----------------|-----------------------|\n|lzma 9d29:fb273:mf=bt4|48382888|1055/71= 14.85x|\n|brotli 11d29|49539504|1055/408= 2.58x|\n|lzham 4fb258:x4:d29|50124186|1055/204= 5.17x|\n|oodle 129|51381492|1055/1047= 1.00x|\n|lzturbo 39|51676247|1055/1055= 1.00x|\n|zstd 22|52831997|1055/846= 1.24x|\nmingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar (465,457,152 bytes):\n|Compressor|Compression Size|Decompression Speeddown|\n|----------|----------------|-----------------------|\n|lzma 9d29:fb273:mf=bt4|42457543|1804/163= 11.06x|\n|brotli 11d29|42988097|1804/439= 4.10x|\n|lzham 4fb258:x4:d29|44372549|1804/432= 4.17x|\n|oodle 129|45218184|1804/1635= 1.10x|\n|lzturbo 39|45874938|1804/1804= 1.00x|\n|zstd 22|51380197|1804/1212= 1.48x|\nTo see how better the 29bit Zstd built-in (--wlog) and the LDM/deduplicator (--long) are when compared to the vanilla 22 mode I ran:\nC:\\Superpig_Corpus>zstd-v1.3.4-win64.exe -22 --ultra --long=29 %1\nC:\\Superpig_Corpus>zstd-v1.3.4-win64.exe -22 --ultra --zstd=wlog=31,clog=30,hlog=30,slog=26 %1\nThe first one delivered these:\n31,301,849 Documentation_Composer_XE_2015.tar.zst\n 28,044,315 Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.zst\n 51,662,186 encyclopediadramaticase-20150628-current.xml.zst\n 75,554,382 enwiki-20170101-pages-articles.xml_first_300MB.zst\n 92,328,026 Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv.zst\n 13,885,235 Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv.zst\n 50,191,563 Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv.zst\n 14,402,612 Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt.zst\n 46,885,572 mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.zst\n 12,636,397 NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.zst\n 22,486,164 open_watcom_1.9.0-src.tar.zst\n 50,937,336 RC_2008-08.zst\n 52,998,135 Silesia_compression_corpus.zst\n 74,589,495 Star_Trek_-_737_Ebooks.tar.zst\n 19,975,078 Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.zst\n154,786,855 www.holybooks.com_70_PDFs.tar.zst\n 81,443,764 www.ncbi.nlm.nih.gov_Dragonfly_(Ladona_fulva)_whole_genome_shotgun.tar_first_300MB.zst\nThe second one delivered these:\n30,997,654 Documentation_Composer_XE_2015.tar.zst\n 28,008,708 Encyclopaedia_Judaica_(in_22_volumes)_TXT.tar.zst\n 50,781,657 encyclopediadramaticase-20150628-current.xml.zst\n 74,086,538 enwiki-20170101-pages-articles.xml_first_300MB.zst\n ??,???,??? Machine-Learning_Douban_Movie_Short_Comments_(Chinese).csv.zst\n 13,659,294 Machine-Learning_Global_Terrorism_Database_(more_than_170000_terrorist_attacks_worldwide_1970-2016).csv.zst\n 49,905,102 Machine-Learning_www.kaggle.com_examine-the-examiner_(headlines_of_3_million_articles).csv.zst\n 14,342,327 Machine-Learning_www.kaggle.com_opencorpora-russian_(A_Tagged_1.5_Million_Word_Corpus_of_Russian).txt.zst\n 46,460,381 mingw-w64_x86_64-6.3.0-posix-seh-rt_v5-rev2.tar.zst\n 12,615,526 NASA_Kennedy_Space_Center_WWW_server_access_log_Jul95.zst\n 21,972,614 open_watcom_1.9.0-src.tar.zst\n 50,286,423 RC_2008-08.zst\n 52,800,057 Silesia_compression_corpus.zst\n 72,789,313 Star_Trek_-_737_Ebooks.tar.zst\n 19,941,582 Webster's_Third_New_International_Unabridged_(1961)_(En-En).dsl.zst\n154,805,473 www.holybooks.com_70_PDFs.tar.zst\n 81,081,155 www.ncbi.nlm.nih.gov_Dragonfly_(Ladona_fulva)_whole_genome_shotgun.tar_first_300MB.zst\nFor 'Douban' I had to stop the HDD thrashing, it needs more than 6.8GB RAM.\nThe Large Window (128+MB) delivers better ratio, most noticeably for 'Star_Trek_-_737_Ebooks.tar', almost 2MB gain.\nWith this I close benchmarking the 'Superpig' testsets, hope it can be instrumental.\nAlso, closing the thread, kinda disappointed of lack of binary capable to work with 29bit and report speeds, whatever, it is what it is, as Diaz bros. say.. Reopened, in order to allow feedback. From my side I shared what I wanted.\n@Brotliteam Feel free to close it whenever you see fit.\nTo me, the superswinish benchmark reveals some hidden facets of all the supercode \n. ",
    "ebiggers": "Tried the same data with a 16 MiB window:\nCurrent version: compressed to 51,587,583 bytes in 12 mins 29 secs\nWith binary tree matchfinder: compressed to 50,960,226 bytes in 8 mins 8 secs\n. ",
    "maximecaron": "+1\n. ",
    "beauhoyt": "+1\n. ",
    "kothar": "I've implemented a very limited binding for the BrotliCompressBlock and BrotliDecompressBlock functions. Stream bindings shouldn't be hard, but not sure when I will get to them, so I'd welcome anyone else's contributions in that area.\nhttps://github.com/kothar/brotli-go\n. ",
    "dsnet": "And here's another Go Brotli package: https://github.com/dsnet/compress\nThis is written in pure Go, but only implements the decoder for the time being.\n. In case you're interested, I started a third-party implementation of Brotli in Go.\nThis implementation uses the RFC alone; as such I have avoided looking at the source code of Brotli.\nThis pull request was done based on things I noticed as I worked on my implementation using the RFC.\n. For future pull requests regarding the spec, would you like me to collect all my thoughts into one big pull request? or would you like me to make small changes like this PR and the previous one?\n. SGTM. I made a seperate PR for Section 7.1. (f9f173c...)\n. Abandoning, since this is getting too messy.\n. This is minor, but the example given for when only one single non-zero code length is provided, uses symbol 16. But practically, speaking, wouldn't that still require the extra 2-bits that follow a symbol 16 (even if the symbol itself is 0 bits)? Wouldn't it make more sense for the single symbol to just be symbol 8 (of 0 bits)? The subsequent paragraph dictating that the sum must be 32768 implies that the 0-bit symbol 8 could fill up all 256 symbols of a literal tree, since we can stop \"reading\" these 0-bit symbols once the tree is filled up. Why waste space encoding the extra bits of symbol 16?\n. :+1: That's all the changes I got. Thanks for reviewing all of them!\nI certainly hope Brotli takes off; the web could really use a new compression format.\n. I think it would be helpful to have series of small brotli files that tests the edge conditions of the format where a decoder could implement it wrong.\nI have generated some files by hand; you can see them in TestReader. So far, I only have tests that strongly exercise Sections 3.4. and 3.5, but plan on adding more tests in the near future. If you have any good test files (both valid and invalid), please share them :)\n. Someone else can verify this work, but I believe this to be true.\nIn the worst case, when the data is highly uncompressible, the overhead comes from meta data to describe raw blocks. We compute the overhead by the followinG:\nThe stream header has:\n7b  WINDOW_SIZE (best case is 1b, worst case is 7b. This setting is independent of input size)\nThe overhead to encode each raw block is:\n1b           ISLAST\n2b           MNIBBLES (4..6)\n4b*MNIBBLES  MLEN (1..16777216)\n1b           ISUNCOMPRESSED\n7b           PADDING (may be less depending on bit alignment)\n8b*MLEN      DATA\nThe last block has:\n1b  ISLAST\n1b  ISLASTEMPTY\nThus, we produce the following table:\n| Max input size (<=) | Max compressed extra bytes |\n| --- | --- |\n| 65536 | 5 |\n| 1048576 | 5 |\n| 16777216 | 6 |\n| SIZE | 1 + 5*\u23a1SIZE/16777216\u23a4 + 1 |\nThese numbers, of course, assume that the encoder falls back to using raw encoding when it detects that its compressed output is worse than just encoding it raw. I cannot confirm that the C encoder does this.\n. A framing or file format of some type sounds great.\nIs there a process through which people are peer reviewing how the new framing format is being designed?\nHas any thought been given to possibly re-using a \"framing\" format like the XZ file format where brotli is just one of the filter chains that can be used?\n. Hi, I'm just curious what the end goal of the large-window Brotli. If the experiment shows that large-window Brotli is competitive, will this functionality be merged into master, giving users the ability to choose a \"large-window\" setting?\nI'm okay with seeing a new RFC be published that extends the current Brotli spec, but I'm concerned if the canonical Brotli implementation provides settings where people can output an invalid version of Brotli. I'm concerned about bad user experience where Brotli that this repo produced can't be decompressed by a RFC-compliant decoder implementation.\nP.S. I'm the author of the Go implementation of Brotli decoder.\n. > Please do not try to reproduce this experiment in other languages, we will keep making changes to the large window brotli experiment.\nDon't worry, I wont. I'll implement it only if the work gets drafted as an RFC spec. I am excited to see where these experiments go. Good work.\n. I came up with a possible design here: brotli-framing-format.md\nHigh level ideas:\n- Designed to be more efficient with random-access decompression by coalescing records together into a unified index (like xz), rather than having the offsets be distributed throughout the file (like lzip).\n- I don't feel strongly that the format should provide ways to encode the original filename, owner, group, modified date, etc. My opinion is that an archive format like tar or zip should be used and that the framed format is only responsible for compression.\n- No option to choose between multiple checksum methods (just use CRC-32). If a user cares about data integrity, they can encrypt and sign the file afterwards.\n- Limited support for parallel decompression when reading the input forwards as a stream. The \"sync markers\" to do this also provide limited forms of data recovery with partial files.\n- The StaticDict feature is experimental. I'm not sure if this should be part of the format, but it seems like an interesting idea to me.\nYou may want to consider giving the framed format a completely different name than simply \"brotli framing format\". There may be much confusion between what the difference is between two.\n. > - should not be a valid UTF-8 string\n\n\nshould not be a valid brotli stream\n\n\nWith 0x91 as the first byte, if the second byte doesn't have the highest bit set, we can guarantee that it isn't UTF-8 either.\n. I believe there is in a mismatch in the increments and decrements in the case where the implicit zero command is repeatedly used and the static dictionary case is hit. It seems that it will short-circuit the increment logic (which only occurs in the dynamic dictionary case), causing the handling of implicit zeros to accidentally decrement one too much each time.\nI compiled with debugging and logging enabled and ran bro -d. The relevant snippet is:\n...\n[ProcessCommandsInternal] pos = 0 insert = 0 copy = 5\nIMPLICIT_ZERO\n[ProcessCommandsInternal] pos = 0 distance = 4\n[ProcessCommandsInternal] dictionary word: [world]\n[ProcessCommandsInternal] s->meta_block_remaining_len = 9995\n[ProcessCommandsInternal] pos = 5 insert = 0 copy = 5\nIMPLICIT_ZERO\n[ProcessCommandsInternal] pos = 5 distance = 11\n[ProcessCommandsInternal] dictionary word: [white]\n[ProcessCommandsInternal] s->meta_block_remaining_len = 9990\n[ProcessCommandsInternal] pos = 10 insert = 0 copy = 5\nIMPLICIT_ZERO\n[ProcessCommandsInternal] pos = 10 distance = 15\n[ProcessCommandsInternal] dictionary word: [media]\n[ProcessCommandsInternal] s->meta_block_remaining_len = 9985\n[ProcessCommandsInternal] pos = 15 insert = 0 copy = 5\nIMPLICIT_ZERO\n[ProcessCommandsInternal] pos = 15 distance = 16\n[ProcessCommandsInternal] dictionary word: [first]\n[ProcessCommandsInternal] s->meta_block_remaining_len = 9980\n[ProcessCommandsInternal] pos = 20 insert = 0 copy = 5\nIMPLICIT_ZERO\n[ProcessCommandsInternal] pos = 20 distance = 4\nUPDATE_RING_BUFFER\n[ProcessCommandsInternal] pos = 25 insert = 0 copy = 5\nIMPLICIT_ZERO\n[ProcessCommandsInternal] pos = 25 distance = 4\nUPDATE_RING_BUFFER\n[ProcessCommandsInternal] pos = 30 insert = 0 copy = 5\nIMPLICIT_ZERO\n...\nThe IMPLICIT_ZERO message was a printf added after L1706 of decode.c. In the log printout, you see that the distance is sweeping through the sequences [4, 11, 15, 16, 4, 4, 4, 4, 4, ...]. Notice it how it goes in reverse order through the initial distances in the ring buffer (i.e., 4, 11, 15, 16) even though only the zero code is used? After exhausting the ring buffer, it no longer performs static dictionary lookups, and starts doing dynamic dictionary lookups, causing it to properly stay at 4 for the rest of the time. . @ralfjunker, what implementation is yours?\nMine repeats \"orld\" until the 10000 byte limit is hit.. My interpretation of what should happen (assuming all implementations agree about huffman decoding of commands):\nThere is a repeated sequence of commands of the form (length:5, dist: 0).\nAccording to section 4, dist:0 should result in the last distance being used, which defaults to 4 (without updating the distance ring buffer; not that it matters).\nThus, this is really a repeated sequence of (length:5, dist:4) commands.\nFor the first command, there is no output, so it falls under the static dictionary case according to:\nif distance is less than the max allowed distance plus one\n    move backwards distance bytes in the uncompressed data,\n    and copy CLEN bytes from this position to\n    the uncompressed stream\nelse\n    look up the static dictionary word, transform the word as\n    directed, and copy the result to the uncompressed stream\nThis copies \"world\" to the output.\nFor all subsequent commands, there is sufficient data in the output such that a distance of 4 is always satisfied by the dynamic dictionary. Thus, copying \"orldo\" the first time, \"rldor\" the second time, \"ldorl\" the third time, etc.. Done.\n. Done.\n. See previous comment.\n. I could be wrong, but I count 9-spaces in my patch and 10-spaces in the original. The reason I removed the space was because I did notice that the spec used 3-space tabs consistently (for the most part).\nhttps://github.com/google/brotli/blob/master/docs/draft-alakuijala-brotli-07.txt#L555-L574\nYou can see that the \"2)\" does not line up with the \"3)\".\n. I just removed the extra space for each paragraph. Now the number headings \"1)\", \"2)\", \"3)\", and the paragraph text, and the code are all aligned to 3-space tabs relative to the start of the line.\n. Sounds good. The explicit table makes it really clear. My first implementation bug was that I was checking the value of MNIBBLES prior to the add.\n. Fair enough.\n. Good catch!\n. :+1: Yep! This is my fault :/\n. The convention in the Go community is to name the parent directory the same as package name.\nhttps://golang.org/doc/effective_go.html#package-names says:\n\nAnother convention is that the package name is the base name of its source directory; the package in src/encoding/base64 is imported as \"encoding/base64\" but has name base64, not encoding_base64 and not encodingBase64.\n\nThus, creating a directory go/cbrotli and placing this file in go/cbrotli/cbrotli.go. It is a redundant when there is only 1 package, but as a convention, it scales better.\nBazel allows for both the old-style and current representation (because Bazel supports the package layout that preceded the design of today's conventional layout), but this is not the norm for most Go users.. Comment that 0 is effectively: \"no compression\"?. Unexport this. I know the archive/tar.ErrWriteAfterClose does this, but I consider that a mistake in retrospect.. We should not export these errors. Singleton error values are generally not a good design pattern. \nMy recommendation is to not export these and add them later if someone needs them. Once added, the API is hard to change once users are depending on it.. Nit: Go style typically avoids the () when referring to functions.\nE.g., Close MUST be invoked to free native resources.. This is not necessary. \nvar totalBytesConsumed int and var err error implies totalBytesConsumed == 0 && err == nil. Unexport these errors.. Perhaps src.Read(make([]byte, 1)) and avoid the above two lines?. Unnecessary.. outBytes := len(z.output) to avoid var outBytes int. Furthermore, I would put the declaration of outBytes in the if statement to make it clear that the scope of this variable is only in the following if statement.\nFor example:\ngo\nif outBytes := len(z.output); outBytes > 0 {\n    ...\n}\n. IIUC, hitting this line implies that len(z.output) == 0 since all of it would have been copied to p otherwise? Thus, should we just drop this continue and move on in the loop?. Nit: s/not further error/no further error/. Return io.ErrUnexpectedEOF instead.. This package and encoder seem like it is an internal implementation detail to cbrotli. Perhaps hide this under an internal package directory?\nhttps://docs.google.com/document/d/1e8kOo3r51b2BWtTs_1uADIA5djfXhPT36s6eHVRIvaU/edit. ",
    "akashin": "Sure! Just did it.\n. ",
    "Kijewski": "\nOf course, streaming support will be eventually added to the Python bindings,... So stay tuned.\n\nDo you have a more precise ETA by now? More precise than \"eventually\" I mean.\n. Was changed to .br.\n. (sizeof(EXTENSION) - 1)\n. ",
    "rpasta42": "I know C++ and Python, but have no familiarity with brotli codebase.\nWhere would I begin if I wanted to implement the Python binding for this?\n. ",
    "joeyhoer": "Version is at 0.3.0 with no corresponding release?\n. ",
    "miguelsousa": "You're right. Sorry about that.\n. ",
    "alejolp": "You can try it yourself. One counter example is enough to disprove the equality. I'd say no, it doesn't hold.\n. ",
    "ogrisel": "glad I could help.\n. ",
    "shawncao-zz": "Thanks @anthrotype , however, this .so file is working for me when I load it in Java via JNI interface (on Mac laptop). I was a little surprised, but it's working fine to compress my java bytes in memory. According to this, I guess this brotli.so is a \"shared library\". Anything misunderstood here... ?\n. ",
    "gtalusan": "Rebased.\n. ",
    "csvan": "@jyrkialakuijala  - I am pretty sure that the poster is not sincere, and is simply trolling in light of the recent controversy regarding the (now changed) content type name for Brotli.\n. Did you honestly create a GH account just to troll in light of the recent content type name controversy? You should at least have the common courtesy (and backbone) to post with your main profile - or simply not at all. \n. ",
    "dsalcedo": "+1\n. ",
    "enkore": "Curious: Why not just use .brotli and avoid any and all confusion? Which relevant operating systems do not support file extensions with more than three characters?\n. ",
    "ende76": "Amended as suggested.\n. @erikzenker Not a maintainer either, but I'm fairly familiar with the Brotli specification, albeit from a decoder perspective rather than an encoder.\nI am surprised that it should be possible to parallelize metablock encoding. It is possible that my understanding is incorrect. I will try to explain why I think that parallel encoding can't work with Brotli.\nIn Brotli, there are three mutable concepts that get initialized at the start of the stream, and then live across metablock boundaries. They have an impact on the decoding behavior of each block, and they also potantially get mutated within each block.\nThe three concepts are:\n1. The output window (size defined by WSIZE in the stream header), initialized as empty. Used for back references, can span multiple blocks.\n2. The literals buffer of the last two literals, referred to as p1 and p2 in the specification, initialized as p1 = 0, p2 = 0. Used to calculate Context ID for literals.\n3. The distances (ring) buffer of the last four distances, initalized as [4, 11, 15, 16], where 4 is the most recent distance. Used in the decoding of distances, where distance codes can refer to these values.\nAs far as I understand it, parallel decoding of blocks is not possible because of those concepts, since subsequent bytes may depend on the state of any of these three concepts, which might have been mutated by actions on earlier compressed data.\nUnfortunately, all of the test cases that actually contain multiple metablocks are structured in a way that doesn't test for this. I.e. in all of those cases, all of the output data is really encoded in just one of the metablocks. Because of that, the three stream-wide concepts above do not actually get mutated in those test cases, and thus your parallel implementation passes, when really, it should conceptually fail.\n@szabadka Am I overlooking something?\n. Ah, right, I did not consider that what I (as a decoder) typically consider \"output\" actually becomes \"input\" for an encoder.\nI apologize for the confusion! \n. @szabadka You have already addressed my immediate concern with PR #258 (I was wrong there).\nI still think it would be good to have a test case with multiple non-empty metablocks, but I don't think it's as much of a pressing matter any more.\nI would not object to closing this as not important enough to warrant constructing a test case, possibly manually.\n. I'm actually going to close this. I think, constructing a viable test case would be unnecessarily tedious, while providing no value for encoders, and only very limited value for decoders, since multiple metablocks that are non-empty are not that much more informative to a working decoder than just general multiple metablocks.\n. @dsnet I do have a number of test files that test for mistakes I've made. They're almost all invalid files, because my mistakes were mostly in detecting as early as possible when I could dismiss a stream. I'll put them together within the next few days.\n. I had a whole thing written how it happened, because the stream can define its own symbols in a simple prefix tree.\nWhen I now went back to the spec, I saw that it actually explicitly mentions:\n\n\"If the integer value [for a symbol]\n  is greater than or equal to the alphabet size, then the stream\n  should be rejected as invalid.\"\nI have missed that in my implementation thus far, and therefore it has been possible for a corrupt stream to create block type codes in a simple prefix code that exceed NBLTYPEx + 2.\n\nI agree now that my suggested change is not needed. I will submit an amended change that fixes the type NBLTYPES -> NBLTYPESL.\n. This was probably not very clear. Hopefully better explanation: In my implementation, I was under the impression that a simple prefix code can define arbitrary symbols, as long as they are encoded with ALPHABET_SIZE bits. However, the spec clearly mentions that the integer value of a symbol must be within [0..ALPHABET_SIZE-1].\nI had missed that before, thus my implementation was wrong. That allowed a corrupt stream to inject invalid block types in a prefix code. I thought the underlying cause was in not rejecting invalid block types, but the real cause was in not rejecting invalid symbols in simple prefix codes.\n. @dsnet Mistakes happen. It's very hard to write something like this, where potentially every single word carries actual information. And then it gets even harder, if the goal is to convey the correct information, but in a way that's easy to understand.\nFor what it's worth, I found all your changes very helpful, and had actually written a fairly long comment on why I found it necessary to mention that duplicate symbols in simple prefix codes are to be considered invalid, when I then noticed that in the newest version, you had already addressed it.\nIt's a process, and I believe it's going well overall. ;)\n. I fully agree. That was simply an oversight on my part. Give me a minute.\n. ",
    "rockdaboot": "@szabadka Indentation fixed and BrotliAllocateRingBuffer() made static \n. @szabadka Sorry, my fault. 80 columns are now respected.\n. @fholzer You installed/copied/linked the libs (*.so on Linux) into a well known libs directory (e.g. /usr/local/libs/) and executed ldconf thereafter !?\n. BTW, the above mentioned brotli nginx module looks for libbrotlienc while cmake here creates libbrotli_enc.\n. ",
    "MacGritsch": "ok, now I see that only BrotliDecompressedSize does not work. Compressing itself works fine if I manually set the size.\n. Does this solution make sense?\n```\nparams.lgwin = 22;\nfor (int i = 10; i < 22; i++)\n{\n    if (encodedSize <= (1 << i))\n    {\n        params.lgwin = i;\n    break;\n}\n\n}\n```\n. lgwin of 24 bit means more than 50 MB of memory usage.\nthe question is still active: does my code make sense, and wouldnt it be a good idea to add this functionality functionality to the param-class?\n. Why not add the size as an optional parameter to BrotliParams() constructor?\n. ",
    "sg77": "Yes, that would be good. \nAt least some formula on the documentation. I'm interested in knowing how can I limit the amount of memory used while decoding by tunning the encoding parameters,\n. ",
    "erikzenker": "Okay thank you :-) I am going to try some OpenMP parallelisation \n. Thx you for the review, I updated my pull request.\n. Are there some test for the parallel encoding interface preset ? \nThese tests could be used to verify the correctness of this\nparallel code.\n. ",
    "psychocoderHPC": "I am no project maintainer\nI reviewed your pull request and will give you some feedback.\n. please use spaces instead of a tab\n. should be ceil(static_cast<double>(nElements) / nThreads); to avoid float overflows\nor\nstatic_cast<size_t>(ceil(static_cast<double>(nElements) / nThreads)) if no implicit casts are allowed\n. You mixed double, size_t and int operation.\nThe original version was size_t out_size = input_block_size + (input_block_size >> 3) + 1024 without a magic 1.2\n. ",
    "leidegre": "OK, an CLA has been submitted. Pending review...\n. I did both. It was consistently slower in terms of throughput or not effective enough in terms of compression. I can write up a small program that you can use to verify.\nSent from my iPhone\n\nOn 21 Jan 2016, at 16:31, Simon Heather notifications@github.com wrote:\nDid you change the default quality settings in the Brotli parameters? The default of 11 gives the best compression but is much much slower - try changing to a value of 9 or lower.\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "addaleax": "This would probably also apply to the contained python bindings, as the docs explain:\n\nIn most situations, however, it is recommended to allocate memory from the Python heap specifically because the latter is under control of the Python memory manager. For example, this is required when the interpreter is extended with new object types written in C. Another reason for using the Python heap is the desire to inform the Python memory manager about the memory needs of the extension module. Even when the requested memory is used exclusively for internal, highly-specific purposes, delegating all memory requests to the Python memory manager causes the interpreter to have a more accurate image of its memory footprint as a whole. Consequently, under certain circumstances, the Python memory manager may or may not trigger appropriate actions, like garbage collection, memory compaction or other preventive procedures. Note that by using the C library allocator as shown in the previous example, the allocated memory for the I/O buffer escapes completely the Python memory manager.\n. Okay, great! Thanks, and let me know if I can help with anything. :)\n. Great, thanks!\n. Awesome, thanks!\n. \n",
    "fasterthanlime": "Replacing 1UL with 1ULL in the assert in enc/write_bits.h seems to fix it.\n. Thanks a lot for the quick fix! :star2: \n. (Just learned about the CLA & signed it online)\n. ### Additional measurements\nAs part of my investigation, I'm comparing compressed size and compression speed of zstd and brotli, at various quality levels.\nI'm posting here a few of the results, in CSV format. The relative size column is the size of the compressed file relative to the uncompressed file. The compression speed column is in MiB/s (that's uncompressed MiB per second, not compressed).\nPatch that compresses very well (manifold)\nFor the 2.2GB none file mentioned in the original post, here are the results:\ncsv\nalgorithm,relative size,compression speed\nZSTD-q1,0.001963,1394.319830\nZSTD-q3,0.001930,1375.773376\nZSTD-q6,0.001833,697.047500\nZSTD-q9,0.001795,618.516803\nBROTLI-q1,0.002585,850.446428\nBROTLI-q3,0.001426,220.726677\nBROTLI-q6,0.001101,69.193146\nBROTLI-q9,0.001040,113.393817\nPatch that doesn't compress well at all (perfect-heist)\nFor comparison, with another patch mostly made up of extra data (almost none of the old data is reusable - and what's more, the new data has high entropy afaict - it's probably already compressed).\nUncompressed data size is around 260MiB.\ncsv\nalgorithm,relative size,compression speed\nZSTD-q1,0.832471,237.475492\nZSTD-q3,0.832103,218.793391\nZSTD-q6,0.831460,78.934550\nZSTD-q9,0.831450,39.802124\nBROTLI-q1,0.829575,202.485644\nBROTLI-q3,0.828759,144.709333\nBROTLI-q6,0.828862,30.029050\nBROTLI-q9,0.827752,5.227860\nAs you can see, the compression speeds (30MiB/s for q6, 5MiB/s for q9) are a lot more in line with what one would expect.\nAnother patch that compresses well (fate)\nThis patch is 1.6GiB uncompressed, and it also compresses quite well:\ncsv\nalgorithm,relative size,compression speed\nZSTD-q1,0.008512,1192.887042\nZSTD-q3,0.008309,1087.122294\nZSTD-q6,0.007984,517.924763\nZSTD-q9,0.007912,420.128866\nBROTLI-q1,0.009386,756.245175\nBROTLI-q3,0.007675,213.797475\nBROTLI-q6,0.006624,66.828365\nBROTLI-q9,0.006396,73.503025\nAgain we see q9 being faster (and compressing better).. ",
    "TrySound": "Looks much smaller :)\n. ",
    "chrisco484": "@nemequ said\n\nCompressing content once and decompressing many times is a pretty common use case\n\nThis would apply back in the static HTML days.\nNowadays most websites are data driven and the HTML is  dynamically generated on the fly by most Java UI frameworks (and frameworks in other languages) so compressing once and reusing cached compressed versions of the HTML just doesn't really work naturally in that scenario.\nTo make it work you would need to add a serious amount of code to work out everything that could change on a page - content, theme selection changes (which CSS files to use), user permissions, available JS powered controls etc.,) and when something does change blow away the cached compressed version of the HTML and recompress.\nJust looking around the main sites I couldn't find any actually using brotli - weird!\nAt time of writing this, not Microsoft, not IBM, not even www.google.com uses it and they developed it!\nAssuming pre-compression isn't an option for dynamically generated HTML pages then, maybe the trade off between slower compression time (i.e. extra server CPU cycles consumed) vs the savings in the size of downloaded artifacts (consumes slightly less bandwidth) just doesn't hit the sweet spot? Well not  yet at least - maybe the compression algorithm implementations have some optimizations coming? Maybe faster to run in native machine code perhaps like the Apache/Tomcat APR?. ",
    "dswd": "The relevant commits seem to be 27688e6 and 417107b3ddb04cfd4ddfa7592fed0eb886186281.\n. ",
    "thinred": "Hi @anthrotype,\nthank you for your elaborate response. I must admit that I missed bro.cc in the sources :).\nOk, I prefer bro.cc too, but the naming issue remains. I think that it must be installed as /usr/bin/brotli and not /usr/bin/bro...\nAnother problem that may deserve its own issue is that brotli has no dynamic library. Do you plan to provide libbrotli?\n. That's what I thought, fair enough.\nWhat about the name of cmdline program?\n. I submitted CLA too.\n. I suspect it's the same as https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=892895.\nEDIT: ofc it is, it points to the same launchpad link :). I was fooled by two different submitters.. ",
    "catlee": "would be great if the CLI followed standard patterns like gzip, bzip2 and xz use.\n. That's very helpful, thank you!\nDo you have any idea when the new framing could be introduced? And how to transition content and clients over to the new format?\n. ",
    "mbevin": "Ok, looks like you fixed it since I originally discovered the issue (Oct 21), as pulling the latest from master now fixed the issue (average chunk size dropped from that very consistent 4.19mb to ~31kb. I originally reported it in the forum, but then getting no response there discovered this place after a month or so - next time I'll post here I guess :)\n. ",
    "CTrabant": "I found what I was looking for in the form of the zlib-esque streaming interface (using pure C) created by Cloudflare for a NGINX filter module:\nhttps://github.com/cloudflare/ngx_brotli_module\nSuch an interface included in this reference repository would be very valuable.\nP.S. For what it is worth, I also vote for a more traditional \"library\" approach such done by Cloudflare, in the sense of creating libbrotli.a and providing brotli.h.  Continuing the digression, following as many of the points in the Tao of good compression API (http://richg42.blogspot.com/2015/01/good-lossless-codec-api-design.html) will increase usability, increase usage and reduce the re-invention of very common wheels.\n. After more exploration it turns out that even with the zlib-esque interface my issue is not solved.  While it is possible to compress to a limited length buffer, if the output buffer is not large enough for a full flush it will not be valid compressed data.  Bummer.\nMy quest for a method to \"compress as much input as possible into a fixed length buffer (and be independently decompressable)\" remains unrealized.\n. Thanks.  The suggested wrapper sounds like a brute force search for the optimal input block size, which would rarely be optimally efficient, but when the blocks are so small perhaps the overhead is minimal.  I will give that a try, it will be enough for exploring brotli's potential for this use.\nIt is for the SEED format that I explore new options.  Currently, the allowed encodings only include compression for integer data, floating point data are stored uncompressed.  The idea is precisely to find a general compression scheme that a) can be used for any data sample type and b) is broadly supported, will be readable in decades to come and is not seismology specific (and thus benefits from a much larger community).  There is certainly a trade-off with efficiency, a scheme specific for the data characteristics would result in better compression.\n. Closing for now, I'll wait and see what I can get out of the new pure-C interfaces when a release is cut.\n. ",
    "hansottowirtz": ".br is what https://github.com/google/ngx_brotli uses.\n. ",
    "stokito": "Hi, could you add the signature to the file tool?\nIt looks like you need to add it here:\nhttps://github.com/file/file/blob/c7d910ee8879dfbe80fe14bfc13c8fa6c6fe1d32/src/compress.c\nand here:\nhttps://github.com/file/file/blob/c7d910ee8879dfbe80fe14bfc13c8fa6c6fe1d32/magic/Magdir/archive\nI created a separate ticket for this #727 \n. As I understood the format is already developed and used internally, right?\nCan you confirm that this is a current spec of the format https://github.com/madler/brotli/blob/master/br-format-v3.txt. I tested gzip recently and it turned out few moments that might be interesting for you:\n1. --list returns original size, compress ratio in % and uncompressed_name which is in fact not and original file name but the same name of the archive just without .gz. \nThis is very inconvenient because, for example, archive manager  can't determine an original file name and it needs for parsing the gz file itself.\nI think this is a bug and I should send a letter to gzip team but anyway please don't do the same for brotli. \n\n\n--list --quiet do not returns headers. This simplifies a little bit parsing of the output by archive manager.\n\n\nTo get an original modify time of the gziped file we need to call gzip --list --verbose because only with this option it shows date and time column:\nmethod  crc     date  time           compressed        uncompressed  ratio uncompressed_name\ndefla cb048d2c Jul 17 17:17                1630                2030  21.0% file.txt\nAnd the parsing of those two columns is not convenient: it shows date as \"Jul 17\" (no matter which locale on your system) and time in separate column. I think this is good that it doesn't localize time but just regular ISO datetime would be easier to parse. Another problem is that splitting columns  just by space  is not working anymore. The same problem for last column uncompressed_name: it can contain spaces and this makes a parsing trickier.\n\n\n. If I understood correctly gzip is also can me named as stream format but this is not a problem for them to add few magic bytes.\nI already used \\xce\\xb2\\xcf\\x81 as brotli magic bytes  and application/x-brotli as mime type but asked here #724 to confirm.\nWhere can I read at least something about this framing format? Will we still be able to use regular .br files?\n. So, the magic bytes which I used are actually from another framing format from #462. @eustas  thank you. Also please note that gzip, uncompress, bzip2, lzip, lzma, xz, lzop compressors usually prints an output to stderr instead of stdout but rar and 7zip prints to stdout.\nSo I'm not sure what is a correct behavior but please implement according to some standard de-facto i.e. stderr.. ",
    "wrowe": "Glad to read that a rename to /usr/bin/brotli is in the works (camping the git master branch and looking forward to that change for 0.6).  For completeness, similar to Debian, /usr/bin/bro is already reserved on fedora/redhat/centos.. Find it especially strange that the Brotli-0.6.0.tar.gz contents seem have significant discrepancies with https://github.com/google/brotli/tree/v0.6. Thank you anthrotype - yes it is not clear in this list the purpose of Brotli-0.6.0.tar.gz and distinctions between these packages;\nBrotli-0.6.0.tar.gz\nBrotli-0.6.0.zip\nSource code (zip)    (v0.6.0.zip)\nSource code (tar.gz)  (v0.6.0.tar.gz)\nReport still applies, that README.md seems not applicable for the first two packages, and works great for the later two (with bonus/unneeded files, but still.) Thanks for looking at this eustas, I can report that the CMAKE flavor has been working well here on master for some time.. ",
    "kazuho": "FWIW this causes compile error on FreeBSD 10 (ref: https://github.com/h2o/h2o/issues/815).\n. ",
    "jneb": "Sorry, but I was using 0.1.0. Version 0.3.0 fares better, but still doesn't beat bz2:\n\n\n\nts='\\n'.join('{:10b}\\n'.format(random.getrandbits(10)) for i in range(1000))\nlen(codecs.encode(bytes(ts,'ascii'),'zip'))\n\n\n\n2390\n\n\n\nlen(codecs.encode(bytes(ts,'ascii'),'bz2'))\n\n\n\n2113\n\n\n\nlen(brotli.compress((ts)))\n\n\n\n2190\n. You are absolutely right, of course.\nI was writing this because i was playing with this disassembler, and I was\ntrying to see which things compressed well and which didn't.\nYou can do a lot with clever block types and well chosen zero out one bit\ndistance and insert & copy encoding, and sometimes with contexts.\nWhat I found missing is a way to repeat the literal length without having\nto reencode the extra bits (with distance you can use last to handle that).\nI wrote a small program that produces the shortest compression i could\nthink of in that case (see my github fork).\nFrom all my playing and struggling, I found two ways to squeeze the\ncompression to the limit:\nAllow for more (flexible??) contexts; make a way to say \"same literal\nlength\".\nA context based on the character type 8 characters ago, for example, would\nsolve all problems (apart from creating lots of problems, of course...).\nThanks for inspiring me with this great compressor!\n-Jurjen\nOp 29 feb. 2016 17:45 schreef \"eustas\" notifications@github.com:\n\nThis seems to be limitation of encoding. bzip uses BWT and thus wins from\nthe input format (\\n, and ' ' get grouped). Thus it gets close to\nconventional compressors limit - about 17 bits per integer; using range\ncoding would have improved the compression ratio.\nAnd of course, this is much bigger than true entropy (10 bits per integer).\nBTW, if we remove spaces and new lines\n\nts=''.join('{:1b}'.format(random.getrandbits(1)) for i in range(10000))\nthen\nprint(len(codecs.encode(ts,'zip')))\n1661\nprint(len(codecs.encode(ts,'bz2')))\n1692\nprint(len(brotli.compress(ts)))\n1262\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/google/brotli/issues/310#issuecomment-190283181.\n. Oh, yes, a few remarks:\n- It is Python3\n- It is under construction, but most of the metablock header fields are supported\n- I found with it that the sample compressed alice file uses signed integer context mode (??)\n. Moved to the other pull request, in the \"dumper\" branch, so I can keep the code updated.\nSee the pull request with (revisited) in the title.\nSorry about the confusion\n. Will do. Sorry for the late reaction.\n\nOp 2 dec. 2016 14:41 schreef \"Eugene Kliuchnikov\" <notifications@github.com\n\n:\nVery nice and elegant! Would you mind moving it to research/ folder?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/google/brotli/pull/314#issuecomment-264456060, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AIjij7ZBuJ6k0v38joYStvJhtSTOOKo3ks5rEB_5gaJpZM4HYLiF\n.\n. I see you already did that. Thanks, as I was still trying to figure out how\nto do that. I'll have to work on that :-)\n\n2016-12-02 14:41 GMT+01:00 Eugene Kliuchnikov notifications@github.com:\n\nVery nice and elegant! Would you mind moving it to research/ folder?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/google/brotli/pull/314#issuecomment-264456060, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AIjij7ZBuJ6k0v38joYStvJhtSTOOKo3ks5rEB_5gaJpZM4HYLiF\n.\n\n\n-- \nJ.N.E. Bos\n. ",
    "nilya": "@eustas I've signed the CLA as described in CONTRIBUTING.md a few minutes ago.\n. ",
    "KenjiBaheux": "Thanks for filing this issue.\ncc/ @jyrkialakuijala @eustas \n. ",
    "anthonyryan1": "I'd also like to express support for this idea.\nThe brotli nginx module currently depends on @badger's libbrotli because it can't use this.\nIf we want to see Brotli adoption pick up on the web, we need to get the web server plugins packaged on various Linux distros. I'm personally very eager to get nginx + Brotli ready on Gentoo, but I'd strongly prefer to have the library and the encoder tools in the same git tree and on the same release cycle.\n. ",
    "fholzer": "@fred-wang but that doesn't mean that @bagder's  repo is no longer required, right? Built brotli with -DBUILD_SHARED_LIBS=1 but nginx's ./configure couldn't find the lib. Am i doing something wrong?\nMaintaining a docker image for nginx with brotli and was hoping i could finally build using only official google repos...\n. @rockdaboot hi, yes, though i found the issue, which is that the header files won't be copied to $PREFIX/include when running make install. Is this expected behavior?\nAs a workaround you can either copy the files to a well known include directory, or use --with-cc-opt=\"-I /path/to/brotli/source/include\" as a configure option for nginx.\n. and yes, that is in addition to the fact that the naming (w/ underscore) is incorrect\n. Sorry, should've created a PR myself, I guess. I'm using https://github.com/fholzer/brotli/tree/installHeaders and https://github.com/fholzer/ngx_brotli/tree/fixBrotliLinking at the moment, and that works fine. One is for installing the header, the other one adds underscores to the nginx module's config file so it finds the library. Not sure if this is the \"wanted\" solution, but if so, I can create PRs for both.\n. > For fixBrotliLinking, I don't know what name is best but I guess it is up to the maintainer of the brotli project to decide..\nRight, that's the main reason i didn't submit it yet.\nRegarding the headers on windows I wasn't sure myself, and I needed it for Linux only. Will post an update once I got the chance to test this on windows.\n. Yes, AFAIK with cmake you're expected to use this option if you want shared libs.\n. ",
    "dvershinin": "For the sake of consistency with the google / ngx_brotli, the underscores should not be present...\n. ",
    "phlknght": "This commit has the same changes built directly into bro.cc. Probably easier to pull this locally to try it out. It also shows the same behavior.\n. Thanks! I went ahead and created the actual test case using your same framework in this commit.\n. Thanks for the quick response.\n. I pulled 510131d1db, and the custom dictionary round trip seems to be working properly now. Thanks!\n. ",
    "danielrh": "I generally encode the output size in a header on my branch here\nhttps://github.com/danielrh/brotli/tree/header\nit's also good to have a magic number and the commit ID of the binary that encoded it\n. It might be possible to structure a Brotli stream to have such a property with a few small tweaks to the compressor:\n\n\nFirst you'd make sure the last METABLOCK was empty, so it was easy to identify and drop the last Metablock (the final 2 one bits, followed by zeros)\n\n\nThen you could have an ISUNCOMPRESSED metablock of size two, with the first two bytes of the data stream... so that your priors were correctly chosen\n\n\nThen set the compressor to ignore matches in the dictionary\n\n\nWith these restrictions you should be able to concatenate them together after dropping the last 2 nonzero bits, right?\nYou may need a bit more magic, like by inserting a MNIBBLES=0 block to byte-align the metablocks at the end if you don't want to concatenate on the bit-level\n. I solved this issue in the drop-in brotli library here https://github.com/dropbox/rust-brotli by doing the above 3 ideas and by disabling the recent items in the distance map.\nProgramatic usage can be seen here: https://github.com/dropbox/rust-brotli/blob/master/c/catbrotli.c\nAnd the brotli.c file included in this package was modified slightly to pass in the CATABLE option https://github.com/dropbox/rust-brotli/blob/master/c/brotli.c#L412\nHope that helps!. Yes it's true that it is impossible to verify without decompressing. That is one of the main reasons I added this header magic number as the first metadata metablock: the header contains information about whether the file was designed to concatenate. Of course that's advisory, you would still need to decompress to fully verify. It's still likely faster than compressing the concatenated chunk.  Perhaps the default mode should refuse to concatenate the file if the header is missing. It has some heuristics already to look for 'concatability', which rule out files generated with default brotli-like tools.\nAnd you are correct: rust-brotli uses this catable flag internally to make multithreaded files. I think for internally created files, it could allow dictionary usage from any of the threads since we prepend the previous parts of the file to the ring buffer, so naturally it should look farther for the dictionary, but I haven't tried that mode of operation\nIt doesn't seem to me that splitting a file N ways often results in Nx improvement: it appears that certain parts of the file require significantly more CPU time than other parts. I haven't profiled the compression much yet.. ",
    "googlebot": "Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed, please reply here (e.g. I signed it!) and we'll verify.  Thanks.\n\n\nIf you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check your existing CLA data and verify that your email is set on your git commits.\nIf you signed the CLA as a corporation, please let us know the company's name.\n\n need_sender_cla \n. We found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for the commit author(s).  If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA (login here to double check)?  If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.\n need_author_cla \n. Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed, please reply here (e.g. I signed it!) and we'll verify.  Thanks.\n\n\nIf you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check your existing CLA data and verify that your email is set on your git commits.\nIf you signed the CLA as a corporation, please let us know the company's name.\n\n need_sender_cla \n. Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed, please reply here (e.g. I signed it!) and we'll verify.  Thanks.\n\n\nIf you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check your existing CLA data and verify that your email is set on your git commits.\nIf you signed the CLA as a corporation, please let us know the company's name.\n\n need_sender_cla \n. CLAs look good, thanks!\n ok \n. Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed, please reply here (e.g. I signed it!) and we'll verify.  Thanks.\n\n\nIf you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check your existing CLA data and verify that your email is set on your git commits.\nIf you signed the CLA as a corporation, please let us know the company's name.\n\n need_sender_cla \n. CLAs look good, thanks!\n ok \n. Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed, please reply here (e.g. I signed it!) and we'll verify.  Thanks.\n\n\nIf you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check your existing CLA data and verify that your email is set on your git commits.\nIf you signed the CLA as a corporation, please let us know the company's name.\n\n need_sender_cla \n. Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed, please reply here (e.g. I signed it!) and we'll verify.  Thanks.\n\n\nIf you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check your existing CLA data and verify that your email is set on your git commits.\nIf you signed the CLA as a corporation, please let us know the company's name.\n\n need_sender_cla \n. Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed, please reply here (e.g. I signed it!) and we'll verify.  Thanks.\n\n\nIf you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check your existing CLA data and verify that your email is set on your git commits.\nIf you signed the CLA as a corporation, please let us know the company's name.\n\n need_sender_cla \n. Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed, please reply here (e.g. I signed it!) and we'll verify.  Thanks.\n\n\nIf you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check your existing CLA data and verify that your email is set on your git commits.\nIf you signed the CLA as a corporation, please let us know the company's name.\n\n need_sender_cla \n. CLAs look good, thanks!\n ok \n. Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed, please reply here (e.g. I signed it!) and we'll verify.  Thanks.\n\n\nIf you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check your existing CLA data and verify that your email is set on your git commits.\nIf you signed the CLA as a corporation, please let us know the company's name.\n\n need_sender_cla \n. Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed, please reply here (e.g. I signed it!) and we'll verify.  Thanks.\n\n\nIf you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check your existing CLA data and verify that your email is set on your git commits.\nIf you signed the CLA as a corporation, please let us know the company's name.\n\n need_sender_cla \n. CLAs look good, thanks!\n ok \n. Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed, please reply here (e.g. I signed it!) and we'll verify.  Thanks.\n\n\nIf you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check your existing CLA data and verify that your email is set on your git commits.\nIf you signed the CLA as a corporation, please let us know the company's name.\n\n need_sender_cla \n. CLAs look good, thanks!\n ok \n. Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed, please reply here (e.g. I signed it!) and we'll verify.  Thanks.\n\n\nIf you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check your existing CLA data and verify that your email is set on your git commits.\nIf you signed the CLA as a corporation, please let us know the company's name.\n\n need_sender_cla \n. CLAs look good, thanks!\n ok \n. Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed, please reply here (e.g. I signed it!) and we'll verify.  Thanks.\n\n\nIf you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check your existing CLA data and verify that your email is set on your git commits.\nIf you signed the CLA as a corporation, please let us know the company's name.\n\n need_sender_cla \n. CLAs look good, thanks!\n ok \n. Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed, please reply here (e.g. I signed it!) and we'll verify.  Thanks.\n\n\nIf you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check your existing CLA data and verify that your email is set on your git commits.\nIf you signed the CLA as a corporation, please let us know the company's name.\n\n need_sender_cla \n. Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed, please reply here (e.g. I signed it!) and we'll verify.  Thanks.\n\n\nIf you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check your existing CLA data and verify that your email is set on your git commits.\nIf you signed the CLA as a corporation, please let us know the company's name.\n\n need_sender_cla \n. Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed, please reply here (e.g. I signed it!) and we'll verify.  Thanks.\n\n\nIf you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check your existing CLA data and verify that your email is set on your git commits.\nIf you signed the CLA as a corporation, please let us know the company's name.\n\n need_sender_cla \n. Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed, please reply here (e.g. I signed it!) and we'll verify.  Thanks.\n\n\nIf you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check your existing CLA data and verify that your email is set on your git commits.\nIf you signed the CLA as a corporation, please let us know the company's name.\n\n need_sender_cla \n. CLAs look good, thanks!\n ok \n. Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed, please reply here (e.g. I signed it!) and we'll verify.  Thanks.\n\n\nIf you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check your existing CLA data and verify that your email is set on your git commits.\nIf you signed the CLA as a corporation, please let us know the company's name.\n\n need_sender_cla \n. CLAs look good, thanks!\n ok \n. Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed, please reply here (e.g. I signed it!) and we'll verify.  Thanks.\n\n\nIf you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check your existing CLA data and verify that your email is set on your git commits.\nIf you signed the CLA as a corporation, please let us know the company's name.\n\n need_sender_cla \n. Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed, please reply here (e.g. I signed it!) and we'll verify.  Thanks.\n\n\nIf you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check your existing CLA data and verify that your email is set on your git commits.\nIf your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot.\nIn order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again.\n\n need_sender_cla \n. CLAs look good, thanks!\n ok \n. Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed, please reply here (e.g. I signed it!) and we'll verify.  Thanks.\n\n\nIf you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check your existing CLA data and verify that your email is set on your git commits.\nIf your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot.\nIn order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again.\n\n need_sender_cla \n. CLAs look good, thanks!\n ok \n. Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed, please reply here (e.g. I signed it!) and we'll verify.  Thanks.\n\n\nIf you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check your existing CLA data and verify that your email is set on your git commits.\nIf your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot.\nIn order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again.\n\n need_sender_cla \n. So there's good news and bad news.\n:thumbsup: The good news is that everyone that needs to sign a CLA (the pull request submitter and all commit authors) have done so.  Everything is all good there.\n:confused: The bad news is that it appears that one or more commits were authored by someone other than the pull request submitter.  We need to confirm that all authors are ok with their commits being contributed to this project.  Please have them confirm that here in the pull request.\nNote to project maintainer: This is a terminal state, meaning the cla/google commit status will not change from this State. It's up to you to confirm consent of the commit author(s) and merge this pull request when appropriate.\n need_author_consent \n. Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed, please reply here (e.g. I signed it!) and we'll verify.  Thanks.\n\n\nIf you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check your existing CLA data and verify that your email is set on your git commits.\nIf your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot.\nIn order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again.\n\n need_sender_cla \n. CLAs look good, thanks!\n ok \n. Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed, please reply here (e.g. I signed it!) and we'll verify.  Thanks.\n\n\nIf you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address on your commit.  Check your existing CLA data and verify that your email is set on your git commits.\nIf your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot. The email used to register you as an authorized contributor must be the email used for the Git commit.\nIn order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again. If the bot doesn't comment, it means it doesn't think anything has changed.\n\n need_sender_cla \n. CLAs look good, thanks!\n ok \n. So there's good news and bad news.\n:thumbsup: The good news is that everyone that needs to sign a CLA (the pull request submitter and all commit authors) have done so.  Everything is all good there.\n:confused: The bad news is that it appears that one or more commits were authored by someone other than the pull request submitter.  We need to confirm that all authors are ok with their commits being contributed to this project.  Please have them confirm that here in the pull request.\nNote to project maintainer: This is a terminal state, meaning the cla/google commit status will not change from this State. It's up to you to confirm consent of the commit author(s) and merge this pull request when appropriate.\n need_author_consent \n. \nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed (or fixed any issues), please reply here (e.g. I signed it!) and we'll verify it.\n\nWhat to do if you already signed the CLA\nIndividual signers\n\nIt's possible we don't have your GitHub username or you're using a different email address on your commit. Check your existing CLA data and verify that your email is set on your git commits.\n\nCorporate signers\n\nYour company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot.\nThe email used to register you as an authorized contributor must be the email used for the Git commit. Check your existing CLA data and verify that your email is set on your git commits.\nThe email used to register you as an authorized contributor must also be attached to your GitHub account.\n\n need_sender_cla \n. \nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed (or fixed any issues), please reply here (e.g. I signed it!) and we'll verify it.\n\nWhat to do if you already signed the CLA\nIndividual signers\n\nIt's possible we don't have your GitHub username or you're using a different email address on your commit. Check your existing CLA data and verify that your email is set on your git commits.\n\nCorporate signers\n\nYour company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot.\nThe email used to register you as an authorized contributor must be the email used for the Git commit. Check your existing CLA data and verify that your email is set on your git commits.\nThe email used to register you as an authorized contributor must also be attached to your GitHub account.\n\n need_sender_cla \n. CLAs look good, thanks!\n ok \n. So there's good news and bad news.\n:thumbsup: The good news is that everyone that needs to sign a CLA (the pull request submitter and all commit authors) have done so.  Everything is all good there.\n:confused: The bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter.  We need to confirm that all authors are ok with their commits being contributed to this project.  Please have them confirm that here in the pull request.\nNote to project maintainer: This is a terminal state, meaning the cla/google commit status will not change from this state. It's up to you to confirm consent of all the commit author(s), set the cla label to yes (if enabled on your project), and then merge this pull request when appropriate.\n need_author_consent \n. \nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed (or fixed any issues), please reply here (e.g. I signed it!) and we'll verify it.\n\nWhat to do if you already signed the CLA\nIndividual signers\n\nIt's possible we don't have your GitHub username or you're using a different email address on your commit. Check your existing CLA data and verify that your email is set on your git commits.\n\nCorporate signers\n\nYour company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to go/cla#troubleshoot (Public version).\nThe email used to register you as an authorized contributor must be the email used for the Git commit. Check your existing CLA data and verify that your email is set on your git commits.\nThe email used to register you as an authorized contributor must also be attached to your GitHub account.\n\n need_sender_cla \n. CLAs look good, thanks!\n ok \n. \nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed (or fixed any issues), please reply here (e.g. I signed it!) and we'll verify it.\n\nWhat to do if you already signed the CLA\nIndividual signers\n\nIt's possible we don't have your GitHub username or you're using a different email address on your commit. Check your existing CLA data and verify that your email is set on your git commits.\n\nCorporate signers\n\nYour company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to go/cla#troubleshoot (Public version).\nThe email used to register you as an authorized contributor must be the email used for the Git commit. Check your existing CLA data and verify that your email is set on your git commits.\nThe email used to register you as an authorized contributor must also be attached to your GitHub account.\n\n need_sender_cla \n. \nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed (or fixed any issues), please reply here (e.g. I signed it!) and we'll verify it.\n\nWhat to do if you already signed the CLA\nIndividual signers\n\nIt's possible we don't have your GitHub username or you're using a different email address on your commit. Check your existing CLA data and verify that your email is set on your git commits.\n\nCorporate signers\n\nYour company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to go/cla#troubleshoot (Public version).\nThe email used to register you as an authorized contributor must be the email used for the Git commit. Check your existing CLA data and verify that your email is set on your git commits.\nThe email used to register you as an authorized contributor must also be attached to your GitHub account.\n\n need_sender_cla \n. \nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed (or fixed any issues), please reply here (e.g. I signed it!) and we'll verify it.\n\nWhat to do if you already signed the CLA\nIndividual signers\n\nIt's possible we don't have your GitHub username or you're using a different email address on your commit. Check your existing CLA data and verify that your email is set on your git commits.\n\nCorporate signers\n\nYour company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to go/cla#troubleshoot (Public version).\nThe email used to register you as an authorized contributor must be the email used for the Git commit. Check your existing CLA data and verify that your email is set on your git commits.\nThe email used to register you as an authorized contributor must also be attached to your GitHub account.\n\n need_sender_cla \n. We found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for all the commit author(s) or Co-authors.  If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA (login here to double check)?  If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.\nIn order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again. If the bot doesn't comment, it means it doesn't think anything has changed.\n need_author_cla \n. \nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed (or fixed any issues), please reply here (e.g. I signed it!) and we'll verify it.\n\nWhat to do if you already signed the CLA\nIndividual signers\n\nIt's possible we don't have your GitHub username or you're using a different email address on your commit. Check your existing CLA data and verify that your email is set on your git commits.\n\nCorporate signers\n\nYour company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to go/cla#troubleshoot (Public version).\nThe email used to register you as an authorized contributor must be the email used for the Git commit. Check your existing CLA data and verify that your email is set on your git commits.\nThe email used to register you as an authorized contributor must also be attached to your GitHub account.\n\n need_sender_cla \n. \nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed (or fixed any issues), please reply here (e.g. I signed it!) and we'll verify it.\n\nWhat to do if you already signed the CLA\nIndividual signers\n\nIt's possible we don't have your GitHub username or you're using a different email address on your commit. Check your existing CLA data and verify that your email is set on your git commits.\n\nCorporate signers\n\nYour company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to go/cla#troubleshoot (Public version).\nThe email used to register you as an authorized contributor must be the email used for the Git commit. Check your existing CLA data and verify that your email is set on your git commits.\nThe email used to register you as an authorized contributor must also be attached to your GitHub account.\n\n need_sender_cla \n. CLAs look good, thanks!\n ok \n. \nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed (or fixed any issues), please reply here (e.g. I signed it!) and we'll verify it.\n\nWhat to do if you already signed the CLA\nIndividual signers\n\nIt's possible we don't have your GitHub username or you're using a different email address on your commit. Check your existing CLA data and verify that your email is set on your git commits.\n\nCorporate signers\n\nYour company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to go/cla#troubleshoot (Public version).\nThe email used to register you as an authorized contributor must be the email used for the Git commit. Check your existing CLA data and verify that your email is set on your git commits.\nThe email used to register you as an authorized contributor must also be attached to your GitHub account.\n\n need_sender_cla \n. CLAs look good, thanks!\n ok \n. \nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed (or fixed any issues), please reply here (e.g. I signed it!) and we'll verify it.\n\nWhat to do if you already signed the CLA\nIndividual signers\n\nIt's possible we don't have your GitHub username or you're using a different email address on your commit. Check your existing CLA data and verify that your email is set on your git commits.\n\nCorporate signers\n\nYour company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to go/cla#troubleshoot (Public version).\nThe email used to register you as an authorized contributor must be the email used for the Git commit. Check your existing CLA data and verify that your email is set on your git commits.\nThe email used to register you as an authorized contributor must also be attached to your GitHub account.\n\n need_sender_cla \n. CLAs look good, thanks!\n ok \n. \nThanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n:memo: Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed (or fixed any issues), please reply here (e.g. I signed it!) and we'll verify it.\n\nWhat to do if you already signed the CLA\nIndividual signers\n\nIt's possible we don't have your GitHub username or you're using a different email address on your commit. Check your existing CLA data and verify that your email is set on your git commits.\n\nCorporate signers\n\nYour company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to go/cla#troubleshoot (Public version).\nThe email used to register you as an authorized contributor must be the email used for the Git commit. Check your existing CLA data and verify that your email is set on your git commits.\nThe email used to register you as an authorized contributor must also be attached to your GitHub account.\n\n need_sender_cla \n. CLAs look good, thanks!\n ok \n. ",
    "1100101": "I've signed  the CLA.\n. No worries, it just was my first time I had to deal with the CLA, and unfortunately the commit had the wrong mail address. I've done a new merge request (which you already merged), so all is fine :)\n. ",
    "pdknsk": "Thanks for the tip. This should be in the documentation. Ideally there would be a pip package.\n. It didn't occur to me to try. That's good enough IMO, but should really be documented.\nBash\npip install git+https://github.com/google/brotli/\n. ",
    "rleonhardt": "@anthrotype: could you change README.md and python/README.md accordingly to use\npip install . instead of python setup.py install?\nAnd in addition for people who don't want to clone the repository first\npip install git+https://github.com/google/brotli/. ",
    "RenterRen": "@eustas  Do you mean that I need call the Api like this below: \nWriteMetaBlock(0, NULL, true, encoded_size, encoded_buffer);\nif I set the parameter  of is_last  true,\u3000means this is the last frame, but I hava no last frame In my system, If I call this, how about next data,data is not finished!\n. @eustas \nHi eustas:\nI  write the code like yours:\nwhile (true) {\n      CopyOneBlockToRingBuffer(in, &compressor, &in_bytes, &final_block)\n      out_bytes = 0;\n    compressor.WriteBrotliData(false,true,&out_bytes, &output)\n    printf(\"bbbbbbbbbbbbbbbbbbbb:%d\\n\",out_bytes);\n    compressor.WriteMetaBlock( 0,NULL, false, &out_bytes, output);\n    printf(\"ttttttttttttttttttt:%d\\n\",out_bytes);\n  }\nThe test result is this:\nbbbbbbbbbbbbbbbbbbbb:16126\nttttttttttttttttttt:0\nbbbbbbbbbbbbbbbbbbbb:13349\nttttttttttttttttttt:0\nbbbbbbbbbbbbbbbbbbbb:12419\nttttttttttttttttttt:0\nHow to fix it????\nBest Regars:\n. @eustas \nThanks your support, It seems to work!!!\n. ",
    "hashbackup": "Building a static .a library would be helpful for integrating Brotli into projects.  I've been developing a backup program, HashBackup, and everything is loaded statically into one self-contained executable.\nBrotli is a great compression program, but is complex compared to zstd.  I have to build on old platforms to have upward compatiblity, so that's:\n- Snow Leopard (OSX 10.6.8) on Mac\n- Centos 5 for Linux\n- FreeBSD 7\nThese seem ancient, but I have enterprise-y customers still using them.  Building zstd into Python/HashBackup was easy.  Adding Brotli was not so easy:\n- it doesn't compile on FreeBSD 7 - I guess gcc is too old\n- earlier versions worked on OSX, but yesterday's version expands instead of compressing (separate issue)\n- the version I downloaded yesterday doesn't build on OSX 10.6.8 with make\nHere's the make output with OSX 10.6.8:\n[jim@mb brotli-master]$ make\n==== Building brotli_common (release) ====\nCreating obj/Release/brotli_common\ndictionary.c\nLinking brotli_common\nld: warning: option -s is obsolete and being ignored\n==== Building brotli_dec (release) ====\nCreating obj/Release/brotli_dec\nbit_reader.c\ndecode.c\nhuffman.c\nstate.c\nLinking brotli_dec\nld: warning: option -s is obsolete and being ignored\nld: unknown option: --start-group\ncollect2: ld returned 1 exit status\nmake[2]: * [../../bin/libbrotli_dec.so] Error 1\nmake[1]: * [brotli_dec] Error 2\nmake: *** [all] Error 2\n. Found it: need to subtract available_out:\nret = PyBytes_FromStringAndSize((char*)output, output_length-available_out);\nWhile you're in there, you might want to bracket your compression, decompression, and string copies with Py_BEGIN_ALLOW_THREADS and Py_END_ALLOW_THREADS.\n. ",
    "jchampio": "\nFor funcions which return 1 on success and 0 on failure, as well as other booleans (like the is_last argument to BrotliEncoderWriteMetaBlock), please use a bool (or _Bool if you prefer) intsead of an int. Using bool helps make the code more readable and reduce documentation lookups.\n\nA counter-argument: I don't think the bool concept really provides a stable, portable ABI in C.\nI was experimenting with the new mod_brotli for the Apache web server, which makes use of the libbrotli shared library. Unfortunately, the module and the library disagreed on the definition of BROTLI_BOOL, because the module was compiled using C89 and the library was not. This led to a situation where the library returned \"false\" but the module interpreted that value as \"true\", which broke everything.\nIn my opinion, an ABI that changes depending on the C standard in use by the compiler is not going to be portable enough for widespread use. I agree with the idea that a boolean concept is more documentation-friendly than int, but the current implementation causes problems. (And I humbly submit that int is still the most \"correct\", idiomatic type for booleans in a portable C ABI.)\n. @nemequ \n\nIf you define \"portable\" as \"C89+\", then you're right.\n\nSure. I'm biased, since most of the C projects I've participated in are explicitly C89-compatible.\nI also define \"portable\" as \"capable of having C++ bindings written for it\", and bool has (or used to have?) issues there too. Hopefully we've gotten to the point where C++ and C toolchains targeting the same architecture agree on the size of bool, but IIRC, it used to be a problem... maybe someone with more recent experience can comment on this?\n\nBeing stuck with C89 in 2016 is ridiculous.\n\nUnless you're serious about being portable to a C89 toolchain subset, yes. ;) I mean, I hate old toolchains just as much as the next guy, but this is the game you play when authoring a C ABI for the masses. (And having a C89-subset ABI doesn't necessarily mean that you have to write your implementation in C89.)\n\nvirtually everyone other than VS < 2013\n\nI'm veering off-topic, but I disagree with your assertion that the users of old MSVC versions are \"a tiny group of people\". MSVC9 and MSVC11 were pretty popular the last time I checked (which, to be fair, was a year ago... YMMV).\nAnyway: if you're serious about using the BROTLI_BOOL thing, and assuming that you've made a decision only to support architectures where the most popular compilers agree that\n- bool is the same size as unsigned char, and\n- C bool is the same size as C++ bool,\nthen having the ability to override the definition of BROTLI_BOOL should help bail out the remainder.\n. @eustas \n\nPlease, could you describe toolchains you've used that caused \"incompatible\" bools.\n\nSure -- I'm currently using GCC 5.4.0 on Ubuntu 16.04 (64-bit). Compile the libbrotli shared library as-is (with a modern C standard). For the client, compile and link against the library with the -std=c89 flag.\n. Preface to my commentary: All I truly \"need\" from an upstream library is a stable API for me and a stable ABI for end users to link against. Choosing your own cost/benefit tradeoffs on how to implement that is, in the end, up to you; I'm just some guy on the Internet with an opinion, and I'll likely disappear after this issue. :smile: That said, I'll respond to @nemequ's last bit and then let you all duke out how you want to proceed...\n\nI'm not really a C++ person, but IIRC they have a bool type which is (can be or must be, not sure which) implemented with an enum.\n\nbool is a built-in type in C++; there's no enum \"implementation\" that I'm aware of.\n\nto get around it you can use _Bool (which is built-in, doesn't require a header)\n\nThere is no _Bool type in C++. And including stdbool.h in C++ is not even guaranteed to provide a _Bool macro (it does in GCC, but as I understand it, that's an extension).\nI want to reiterate that\n1. It's not just size you necessarily have to worry about. You want to make sure that the assembled code that deals with both types are equivalent, or you can bet that there will eventually be some bizarre corner case because of the mismatch.\n2. I don't know if bool-incompatibility between the two languages is a problem anymore. Modern compiler ABIs may have defined the two equivalently for the platforms you're targeting; I don't know.\n\nAnother option would be to use the build system to determine the value of sizeof(_Bool) and write an appropriate type, but that would require running an executable\n\nIf you're seriously considering this, I just have to know: what is so hate-worthy in the int-as-boolean idiom? :smile:\nAnyway. I think I've said my piece and then some. As long as downstream doesn't break in weird corner cases, I'm happy.\n. ",
    "jimjag": "Agreed. As a library, things should be as simple and as compatible and as PORTABLE as possible. It is not that much of a deal to stick w/ C89/C90 for this particular case, especially when the alternative breaks things horribly.\n. Yeah, I'm just speaking myself as someone who is a consumer of the library (or, should I say, would be a consumer) for a popular web server which, for lowest-common-denominator reasons, has stayed w/ C89 semantics. So far, all testing has shown that the bool item is the only issue that hits us. Libraries, in general, should be agnostic as related to compiler differences between that used to build and the library and that used to build the application, or should have an ABI which resolves those issues in a portable fashion.\n. stdbool.h is C99, not C89.\n. The point is that C89 compatibility is the point, as mentioned quite a few times in the above comments.\n. Why hold off others who could use it, like Apache httpd, because of work needed for nginx? mod_brotli for httpd uses, and needs, the post 0.5.2 fixes and that's the only thing delaying our release of the module.\nThe world is waiting! Please don't show preferential treatment! :) :). Any update on the status of a release?\n. Anything I/we can do to help?. Any update on this? We (the Apache httpd PMC) were looking to doing a 2.4.26 release soon, and it would be great to be able to include mod_brotli; but we can't depend on an unreleased lib and the module requires the \"new\" API.\nThanks!. WOOT!! Super Thx!. ",
    "TYoung86": "Spamming buttons before I was ready, appologies.\n. ",
    "Pro100AlexHell": "Hello! Could you please answer:\n1) Can I use custom allocated buffer for brotli decompression and reuse it, for avoid GC in C# in webgl unity?\n2) Which size of memory is need for decompression? May be some table related to compress level?\n3) What about reuse buffers and memory requirements for case when a browser is decompress itself? (after receive comperssion header: br) Is it ok?. 3) When the browser receive HTTP header with compression \"br\", it implement decompression itself. Do you know how good is implementation in firefox and chrome? For example, if my html page need 1000 small files, and all of it is compressed with brotli.. is memory reused? or for each file, the browser create new buffer, 2 MiB (or smaller)? It's browser reated, but I don't even know how to test it.. ",
    "chad-iris": "I signed it!\n. ",
    "PiotrSikora": "Please note that C++ interface wasn't very well tested, since there are no consumers of it.\n. Hey Evgenii,\nshould I rebase this on top of new master? Are the changes proposed in this pull request acceptable?\n. Unfortunately, this warning is also known issue: https://github.com/bazelbuild/bazel/issues/1286\n. After wiping everything Bazel-related from my systems (since it was broken on all of them), I found the issue.\nIt was outdated ~/.bazelrc file generated by older version of Bazel:\nbuild --package_path %workspace%:/path/to/bazel/base_workspace\nfetch --package_path %workspace%:/path/to/bazel/base_workspace\nquery --package_path %workspace%:/path/to/bazel/base_workspace\nThanks for double-checking and sorry for the noise!\n. ",
    "mehdi-farsi": "I signed it!\nOn Sun, Jul 31, 2016 at 12:30 AM, googlebot notifications@github.com\nwrote:\n\nThanks for your pull request. It looks like this may be your first\ncontribution to a Google open source project. Before we can look at your\npull request, you'll need to sign a Contributor License Agreement (CLA).\n\ud83d\udcdd Please visit https://cla.developers.google.com/\nhttps://cla.developers.google.com/ to sign.\nOnce you've signed, please reply here (e.g. I signed it!) and we'll\nverify. Thanks.\n\nIf you've already signed a CLA, it's possible we don't have your\n  GitHub username or you're using a different email address. Check your\n  existing CLA data https://cla.developers.google.com/clas and verify\n  that your email is set on your git commits\n  https://help.github.com/articles/setting-your-email-in-git/.\nIf you signed the CLA as a corporation, please let us know the\n  company's name.\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/google/brotli/pull/401#issuecomment-236393413, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABVU3oMp6NxIhKyh2FP2HiWMmTdbNVf9ks5qa9CLgaJpZM4JY6FO\n.\n. Great idea\n\nOn Sunday, 31 July 2016, nextPrime notifications@github.com wrote:\n\nHow about updating the link to https://tools.ietf.org/html/rfc7932, since\nthis is the final and official version of the spec?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/google/brotli/pull/401#issuecomment-236412253, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABVU3qe4snQVkzyTQWB5MYbr_q_ZeebGks5qbDY7gaJpZM4JY6FO\n.\n. Done !\n. \n",
    "ghost": "How about updating the link to https://tools.ietf.org/html/rfc7932, since this is the final and official version of the spec?\n. Thanks! I forgot to mention you also need to update the text above the link from \"[...] in the following internet draft\" to \"[...] in the following RFC document\" (or something like that).\n. Would conflict with #401. \n. I am creating an 7-Zip plugin for brotli. Currently there seems to be no special magic for testing of brotli's presence in some data.\nI found some first definitions of a frame format v3 in the brotli repository of @madler ... but that's it.\nFor my 7-Zip extension, the stream with the container will be defined like this:\n- 12 bytes skippable frame\n  - 4 bytes magic id 0x184D2A50U\n  - 4 bytes length of the skippable frame (always 4)\n  - 4 bytes with the length of the following compressed data, CLEN (including 4 bytes magic)\n- 4 bytes magic id in the beginning of compressed data: \"BROT\"\n- CLEN bytes compressed data stream to be decoded\nBut I could also support \"normal\" brotli streams, if I can recognize them.\nAFAIK, Igor will not add new codecs to Standard 7-Zip currently.\nEdit: Oh, I just found https://github.com/google/brotli/issues/462 .... I think this issue can be closed now, cause you have an 7-Zip plugin for brotli now ;-)\n. Thanks @eustas. I have sent a PR to purge C++'ism from fuzz https://github.com/google/brotli/pull/682. However, I don't have Google Account to sign the CLA with. Feel free to use this patch as a public domain contribution. :). @eustas, have you had a chance to look at it?. Fixed by #686.. Closing in favor of #686 .. Thanks a lot @eustas! Could we please get v1.0.5 after this is merged?. That would certainly improve readability. \ud83d\udc4d . Thanks! Waiting for the next release \ud83d\udc4f . We have defined BROTLI_SHARED_COMPILATION in make to select a different code path. However, it seems like \"shared compilation\" does not tell us that visibility of public API would be impacted. There could be a separate out-out knob like BROTLI_HIDE_PUBLIC_API for folks who want to statically compile brotli and hide all API members in order to create their own wrapper and public API.. Thanks, it makes sense.. ",
    "RehanSaeed": "I had assumed that as Brotli was now a standard, that the library would be complete. If this is not the case, is there somewhere I can read about what's missing, what's planned and look at a the roadmap?\nA pure Java implementation would be great, are there any other languages planned as part of 1.0?\n. Cool. Do you have any rough (probably very rough) estimates (or guess-timates) of when v1.0.0 may happen? I'm interested in a Java and C# port and would be willing to help with the C# version if required.\n. Now that there is a Java port, it should be fairly simple to build a .NET Core port.. This is only for the decoder, which is great for clients. I'm interested in using brotli with an ASP.NET Core application for dynamic compression on the fly.\nI have seen a comment saying the encoder is more complex and C will give better performance etc. A wrapper around the C library would still suffice. Either way a simple NuGet package would be perfect.. ",
    "crm416": "Chiming in to say that I'm also very interested in this and have been tracking this issue for a while. Very excited to see that the Java port is starting to make it into the codebase (e.g., with 5025365d0fe5a5ca874574b952ef53cfa98ca5c1). Is the current Java version in the repo 'safe' to start using externally?\n. Sorry to ask again, but any updates on the publish?. ",
    "paked": "@eustas: Any update on the Maven artefact being published?\n. ",
    "thomasjungblut": "@eustas I'm also interested in the mvn artifact. Any news?. ",
    "markehammons": "I'm also interested in a java port/jni bindings for brotli. ",
    "garydgregory": "Wow, almost two years since this issue was created. Are there ANY plans for a Java BrotliOutputStream?. ",
    "hc-codersatlas": "If JNI is a headache would moving to JavaCPP or JNA be a better option? Anything that can be done to move this forward?. @eustas did you end up having time to make the Java release?. ",
    "hmaclean82": "https://mvnrepository.com/artifact/org.apache.commons/commons-compress/1.5. ",
    "CAFxX": "@hmaclean82 commons-compress only includes a decoder. This issue is for the encoder.. Are there any plans to also implement the encoder?. ",
    "marchante0": "Any progress in this regard yet?. Could you possibly be more elaborate on that?. ",
    "concatime": "Awesome! Just continue like this!. Finally ;). ",
    "RajuSuranagi": "@eustas, since it has been more than a month and @joshtriplett didn't ping you, is there anything on this question? I am just curious about the number 11 than anything else. Why 11? . Thanks for the insight!. ",
    "dikmax": "@RajuSuranagi Homage to Sp\u0131n\u0308al Tap I suppose.. ",
    "mraszyk": "I looked a bit into it, and it seems that brotli literal costs estimates are spoiled by the many zeros in the test file. In fact, brotli quality 10 performs ~10% worse than quality 9, whereas 9 and 11 are rather close. When inspecting the compressed files, I noticed that quality 10 produces less commands and more literal insertions than 11. Raising the estimated literal cost if it is smaller than 1.0 in BrotliEstimateBitCostsForLiterals mitigates the issue to some extent, and actually improves compression at quality 11 for the provided test file.\nThe challenge would be to not break benchmarks on other corpora by playing with the cost estimates.. As pointed out by @fasterthanlime, LGBLOCK is adjusted differently for quality >= 9, but in fact, it gets a larger value which results in faster and denser compression for this particular data.\nLGBLOCK is the length of so-called input blocks (typically 64K to 256K) and for each input block at least one command used to be produced (at commit da254cf). As a consequence, long chunks of zeros (spanning k full input blocks) resulted in a sequence of k equal commands (insert-length = 0, copy-length = 2^LGBLOCK, copy-distance = 1), although a single command would actually suffice (and the mandatory extra bits prevent Huffman coding from mitigating the issue). This is the reason why compression gets denser with longer input blocks on files with long chunks of zeros. In terms of compression time, with longer input blocks the hasher (which is invoked O(1) times per input block full of zeros) is invoked less times in total which results in faster compression.\nThe described inefficiency has been fixed by introducing the method ExtendLastCommand (at commit 35e69fc) which checks if the last command of the previous input block can be extended into the current input block (before invoking the hasher). This results in faster and denser compression.\nFinally, there is still some room for improving the compression time for qualities <= 9 by optimizing out some calls to the hasher which cannot further improve the HasherSearchResult found so far.. I managed to successfully decompress the test file, i.e., I was not able to reproduce the crash.\nMoreover, the uncompressed file (ahd.dict) has SHA256 hash\n2f4197eab677a9344f3b4879fc5a65dcabb4b0b3df1497d50580936efde9a24b\nwhich is different from century.md with SHA256 hash\naac17eb82496ba106cb2161da8016f3580ba23593e224b71fadb2a99d9005416. I used the following code to decompress the test file ahd.dict.tbr and successfully obtained the uncompressed file ahd.dict also on Arch Linux:\nhttps://drive.google.com/file/d/0ByXI7DhQRNE-a2t4bUJKTE54emR6V0pZMFV2eklpLTdlS0JF/view?usp=sharing\nFiles (with SHA256 hashes):\nadbe6fa730efddbcf62a75134ece9ab8a50abf4465ed38af6de7898b11f07061  ahd.dict.tbr\n2f4197eab677a9344f3b4879fc5a65dcabb4b0b3df1497d50580936efde9a24b  ahd.dict\nSystem: Linux arch 4.17.11-arch1 #1 SMP PREEMPT x86_64 GNU/Linux\nBrotli version: 1.0.5\nPlease check the attached code if it crashes, and if it doesn't, please provide your code which does crash on decompressing ahd.dict.tbr.. I signed the CLA.. The change does not improve the compression time on most file types (except for, e.g., BSDiff patch files), so I am closing this thread.. ",
    "JoeUX": "Hey thanks @eustas, I'm reading about premake now, and it looks pretty smart. premake5 is in alpha though, and 4.4 is in beta, so I'm puzzled by what version they want people to use, since those are the only downloads they feature. I'll try CMake. Exposing compiler optimizations in these tools has always been harder than it needs to be, buried in so much other content that it feels like compiler flags are an afterthought. Build tools should have a section in their make-equivalent files called Optimization, with subsections for CPU/hardware targets, linker optimization, math, etc. and then automatically convert all that to the correct compiler flags depending on the compiler. Maybe I'll sketch out something.\n@anthrotype I know that much, have occasionally gone to Christoph Gohlke's wonderful repository of Python wheels for Windows to grab stuff, but I don't know what the brotli wheel is supposed to do exactly, since brotli isn't written in Python. I guess another way of framing my question: What do we need the Python stuff for here? What is Python doing in the brotli repo? I'm not used to seeing a bunch of Python/Ruby/scripting code in a compression codec written in C/C++. If we don't need it to build the binaries, then is for testing or something? I looked around for an explanation of the build process, and also of what the Python code was for, but so far I haven't found any docs or comments on that.\n. Ah, okay, just bindings. The nine different wheels in the downloads/releases page threw me off, made me think wheels were being used to build brotli.exe. Thanks for clearing that up.\n. Also, anyone who happens to be a student can get Parallel Studio for free, all the way up to Cluster Edition.. ",
    "sylvestre": "seems it feel better :)\n. OK, sorry!\n. ",
    "mdejong": "I signed it\nMy github username is mdejong.\nMo DeJong\n\nOn Aug 30, 2016, at 12:38 PM, googlebot notifications@github.com wrote:\nI signed it\n. So, I can confirm that rbit would compile on arm64, but it causes a runtime error. It does compile, the generated asm on an arm64 target looks like:\n\n```\n0x1000a8f7c <+1208>: str    w9, [sp, #100]\n0x1000a8f80 <+1212>: ldr    w9, [sp, #100]\n0x1000a8f84 <+1216>: rbit   x9, x9\n0x1000a8f88 <+1220>: str    w9, [sp, #96]\n```\nFor example, you could make this compile after adding my patch by making this change:\n```\nif BROTLI_MODERN_COMPILER || defined(llvm)\nif defined(BROTLI_TARGET_ARMV7) || defined(BROTLI_TARGET_ARMV8)\nstatic BROTLI_INLINE unsigned BrotliRBit(unsigned input) {\n  unsigned output;\n  asm(\"rbit %0, %1\\n\" : \"=r\"(output) : \"r\"(input));\n  return output;\n}\ndefine BROTLI_RBIT(x) BrotliRBit(x)\nendif  / armv7 /\nendif  / gcc || clang /\n```\nThe change I made was to just get BROTLI_TARGET_ARMV7 to only be defined for the ARM 7 targets while keeping it from being defined for arm64 which is v8.\n. After a bit of poking around, I found the following: https://patchwork.kernel.org/patch/5144161/\nChanging BrotliRBit() to the following fixed the asm call to rbit on arm64:\n```\nif BROTLI_MODERN_COMPILER || defined(llvm)\nif defined(BROTLI_TARGET_ARMV7) || defined(BROTLI_TARGET_ARMV8)\nstatic BROTLI_INLINE unsigned BrotliRBit(unsigned input) {\n  unsigned output;\nif defined(BROTLI_TARGET_ARMV8)\nasm(\"rbit %w0, %w1\" : \"=r\" (output) : \"r\" (input));\nelif defined(BROTLI_TARGET_ARMV7)\nasm(\"rbit %0, %1\\n\" : \"=r\"(output) : \"r\"(input));\nendif\nreturn output;\n}\ndefine BROTLI_RBIT(x) BrotliRBit(x)\nendif  / armv7 || arm64 /\nendif  / gcc || clang /\n```\nWith this change, both arm 32 and 64 bit targets compile and execute correctly.\n. Hey guys, can this first commit be added to the repo? I can submit a second pull req for the second change related to the rbit instruction, but it depends on the first one.\n. The rbit issue is an additional change that can be added on after this pull req. I proposed a rbit modification also (see above), but this pull req stands on its own.\n. I just created 459 and verified that rbit is executing properly when built on ARM64 with that change.\n. No, I am building in Xcode but creating a new directory layout and the only catch is the fact that the same filename is being used in different directories. It is not a problem if you don't change anything and use the existing build structure, but then it is harder to integrate into an existing Xcode project as source code.\n. ",
    "Zip753": "I signed it!\nOn Wed, Sep 14, 2016 at 3:36 PM, googlebot notifications@github.com wrote:\n\nThanks for your pull request. It looks like this may be your first\ncontribution to a Google open source project. Before we can look at your\npull request, you'll need to sign a Contributor License Agreement (CLA).\n\ud83d\udcdd Please visit https://cla.developers.google.com/\nhttps://cla.developers.google.com/ to sign.\nOnce you've signed, please reply here (e.g. I signed it!) and we'll\nverify. Thanks.\n\nIf you've already signed a CLA, it's possible we don't have your\n  GitHub username or you're using a different email address. Check your\n  existing CLA data https://cla.developers.google.com/clas and verify\n  that your email is set on your git commits\n  https://help.github.com/articles/setting-your-email-in-git/.\nIf you signed the CLA as a corporation, please let us know the\n  company's name.\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/google/brotli/pull/426#issuecomment-247014595, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AFFc3-xKbTzmmqCKjrgOjL_8exVJvDmGks5qp_hMgaJpZM4J8x3I\n.\n. Hi, the goal of the large window brotli is mostly research-oriented, it's mostly used for facilitating distance encoding research. There are couple of other research tools that use large window brotli, I'm planning on publishing them soon as well.\n\nJust to make it clear, this functionality isn't going to be merged into master anytime soon, especially since the new RFC was recently published. Large window brotli is one way compatible with RFC 7932, i.e. it can decompress classic brotli files, but not vice versa. So the main thing to acknowledge is that the output of this branch's encoder isn't brotli, therefore no one should try to decompress it with classic decoder.\n. ",
    "hulaud": "@eustas great news!!! Thanks :)\n. ",
    "jstlnd": "Any ETA on when this can be published to Maven Central?\n. Awesome! Thanks!\n. Cool! Thanks for letting us know.. ",
    "bgleib": "Hello! Any updates on this being published? Thanks!. ",
    "nicksay": "Agreed that these are (mostly) cosmetic changes.  There are 2 minor actual changes here:\n- I've updated the package author to be \"The Brotli Authors\"\n- I've removed the package author_email\nOtherwise, I think this formatting makes future changes to the extension configuration a little clearer / more isolated.\nAny ideas on why the travis build is failing with unable to execute 'g++-4.2': No such file or directory?\nIt passed on my local branch before the pull request:\nhttps://travis-ci.org/nicksay/brotli/jobs/164731291\nBut failed here:\nhttps://travis-ci.org/google/brotli/jobs/165268025\n. Ah, great, thanks.  I've sent #436 to solve that bug for now.\n. I actually had to go back to the previous default osx_image: beta-xcode6.1 since xcode6.4 also had errors.\n. I've added a temporary commit to verify the build passes.  Once #436 is merged, I'll rebase and remove the commit.\n. cc @nnorwitz FYI\n. I've rebased and removed the temporary commit now that @eustas merged #438. \n. Great, build is passing now; this PR is ready to go.\n. @eustas Absolutely, I'll revert the setup.cfg change and open a new PR for both of those.  Do you want that in the base README.md or in python/README.md?\n. It took an hour for Travis to finish, but this PR is again ready to go. \ud83d\ude04 \n. Yes, this PR was just to be a temporary fix for the \"not found\" issues that were blocking #435 (and other pending changes), but #438 is better.  Happy to close this.\n. /cc @nnorwitz\n. This PR creates a shell native Python module around the C++ extension.  This is preparation for the following changes which refactor the underlying extension code: \n- Create a Compressor object in the extension\n- Support streamed compression with the Compressor object\nI will open PRs for each of those changes in turn.\n. /cc @nnorwitz\n. /cc @nnorwitz\n. @eustas \nPlease take a look at the compress_stream function in particular to make sure it's sane.  The Compressor object now has 3 methods, each of which call compress_stream and the underlying BrotliEncoderCompressStream with the following operations:\n- compress <=> BROTLI_OPERATION_PROCESS\n- flush <=> BROTLI_OPERATION_FLUSH\n- finish <=> BROTLI_OPERATION_FINISH\nLooking at that list now, perhaps we should rename Compressor.compress to Compressor.process.  If we did that, the Python module would look like:\n``` py\npseudo-code\nclass Compressor:\n  \"\"\"Class to do streamed compression across multiple calls, etc.\"\"\"\n  def process(s):\n    # do BrotliEncoderCompressStream(BROTLI_OPERATION_PROCESS, s)\n  def flush\n    # do BrotliEncoderCompressStream(BROTLI_OPERATION_FLUSH)\n  def finish\n    # do BrotliEncoderCompressStream(BROTLI_OPERATION_FINISH)\ndef compress(s):\n  \"\"\"Function to do single-call compression, as exists now\"\"\"\n  compressor = Compressor()\n  return compressor.process(s) + compressor.finish()\n```\nThoughts?\n. updated commit description follows\n\nThis adds flush and finish methods to the Compressor\nobject in the extension module, renames the compress method to\nprocess, and updates it to only process data. Now, one or more\nprocess calls followed by a finish call will be equivalent\nto a module-level compress call.\nNote: To maximize the compression efficiency (and match\nunderlying Brotli behavior, the Compressor object process\nmethod does not guarantee all input is immediately written to\noutput. To ensure immediate output, call flush to manually\nflush the compression buffer. Extraneous flushing can increase\nthe size, but may be required when processing streaming data.\nProgress on #191\n. (Rebased to fix a bug in the compress_stream loop; it seems I have to carry comments forward.)\n. (Actually, no; I see the comments survived the rebase, but you have to view latest changes instead of clicking the previous direct links.)\n. @eustas looks like the Travis osx gcc 4.4 config still isn't working: https://travis-ci.org/google/brotli/jobs/169758805\n. @eustas Nevermind! The Travis build was just flaky, and everything is passing again: https://travis-ci.org/google/brotli/builds/170025117\n. I've pulled out the s/build_ext/build/ change into #460 and I'm debugging the appveyor bug in an isolated branch now.  I'm planning on moving to unittest-style discovery for tests in the future.\n. I've fixed the Appveyor issue in #461.  I created a temp branch that combines all 3 PRs and you can see the new tests passing at https://ci.appveyor.com/project/nicksay/brotli/build/1.0.12 and https://travis-ci.org/nicksay/brotli/builds/170921320.  Once #460 and #461 are merged, I'll update this PR and everything should be good to go.\n. updated commit description follows\n\nPreviously, the Python package consisted of a single extension\nmodule, so build_ext was sufficient.  Now, the package\ncontains a native module and an extension module, so both\nbuild_py and build_ext are required.  Instead, run build,\nwhich calls both build_py and build_ext automatically.\n. Also, I rebased to the latest commit on master\n. Changes look good, but https://travis-ci.org/google/brotli/jobs/182575377 failed for some reason.  Maybe rebase on master to get the new unit tests to double-check?. I'm going to close this for now, since this breaks Travis's recognition of failing tests:\nhttps://travis-ci.org/google/brotli/jobs/182780539. @anthrotype great, thanks for the confirmation . Apologies (again) for the delay here.\nThe extension implementation looks right to me, but we should have some tests to verify correctness before exposing the Python Decompressor class in the module.  To keep from blocking this any longer, @eustas will add a simple test after landing this PR.. @AksarWeb I've updated the documents in #578 to hopefully make it a bit clearer. Good idea. @anthrotype Updated both README.md and python/README.md to reference pip install brotli. We don't have to have it all, but I think it works best in the root directory so that the settings apply to all languages. Up to you!. Still LGTM \ud83d\udc4d . I pushed a new temporary commit using BrotliEncoderTakeOutput, but I'm getting errors when trying to execute sequences of operations.\nHere are some scenarios:\nprocess(\"one two three \")\nfinish()\nsuccess\nprocess(\"one \")\nprocess(\"two \")\nprocess(\"three \")\nfinish()\nsuccess\nprocess(\"one \")\nprocess(\"two \")\nflush()\nprocess(\"three \")\nfailure: BrotliEncoderCompressStream returns false\nprocess(\"one \")\nprocess(\"two \")\nprocess(\"three \")\nflush()\nfinish()\nfailure: BrotliEncoderIsFinished returns false and output is incomplete\nSo it seems to me that either\n1. something with BrotliEncoderCompressStream(..., BROTLI_OPERATION_FLUSH, ...) and BrotliEncoderTakeOutput is not working correctly\n2. I'm calling BrotliEncoderCompressStream incorrectly now.\n. I'm going to copy this comment to the new commit.\n. comment copied from previous commit\nI pushed a new temporary commit using BrotliEncoderTakeOutput, but I'm getting errors when trying to execute sequences of operations.\nHere are some scenarios:\nprocess(\"one two three \")\nfinish()\nsuccess\nprocess(\"one \")\nprocess(\"two \")\nprocess(\"three \")\nfinish()\nsuccess\nprocess(\"one \")\nprocess(\"two \")\nflush()\nprocess(\"three \")\nfailure: BrotliEncoderCompressStream returns false\nprocess(\"one \")\nprocess(\"two \")\nprocess(\"three \")\nflush()\nfinish()\nfailure: BrotliEncoderIsFinished returns false and output is incomplete\nSo it seems to me that either\n1. something with BrotliEncoderCompressStream(..., BROTLI_OPERATION_FLUSH, ...) and BrotliEncoderTakeOutput is not working correctly\n2. I'm calling BrotliEncoderCompressStream incorrectly now.\n. Ah, silly mistake, thanks for catching.  I moved the variable outside the loop in the next (temporary) commit.\n. I'll sync up once #451 is merged.\n. @eustas The available_in and next_in variables are now outside of the loop.  In my testing, if available_out is 0, then it won't be modified by BrotliEncoderCompressStream.  Would you prefer that I reset available_out to 0 each call?\n. This is working now after #451, thanks.\n. FYI I went with the process, flush, finish naming to match the underly Brotli behavior.\n. Thanks, done.. I think it's okay to move this import to the top. Let's try to import packages/modules instead of functions:\nhttps://google.github.io/styleguide/pyguide.html#Imports. What are your thoughts on \"newer\" vs  the default \"error\"? . Maybe leave something about \"development mode\" here since it's described in the paragraph right before this?. Yeah, that sounds good to me, though perhaps we should remove the references to \"development mode\" in the README if the in-place build is the default.. ",
    "rohitkeshwani07": "I u r\nOn Oct 5, 2016 8:53 PM, \"Alex Nicksay\" notifications@github.com wrote:\n\n\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/google/brotli/pull/435\nCommit Summary\n- Python: Clean up setup.py file\nFile Changes\n- M setup.cfg\n  https://github.com/google/brotli/pull/435/files#diff-0 (2)\n- M setup.py https://github.com/google/brotli/pull/435/files#diff-1\n  (322)\nPatch Links:\n- https://github.com/google/brotli/pull/435.patch\n- https://github.com/google/brotli/pull/435.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/google/brotli/pull/435, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ANDH0hQyQ3ZoeSEcagMIM31VROSbPgs3ks5qw8EEgaJpZM4KO8Xt\n.\n. \n",
    "buu700": "@eustas asked me to move my feature request from #549 to this thread:\n\nWould it be practical for a future version of Brotli to detect strings of formats like base64 and hex and decode them to binary before compressing / re-encode them as part of the decompression process?\nI noticed just now during a comparison between compressing a binary file and the equivalent base64 (https://github.com/kripken/emscripten/issues/5104#issuecomment-302939570) that the base64 version ended up larger, which it occurs to me shouldn't need to be the case given that the two contain almost exactly the same information.\n\nSince I don't know anything about Brotli's internals, I have nothing more specific to suggest in terms of the framing format design.. Got it, thanks, I'll post it there.. Cool, sounds good. I just tested, and it looks like it's consistently reproducible with this file:\n balls.txt\nOn an up-to-date Debian Sid running in Docker on a MacBook Pro Retina (2.4 GHz Haswell Core i5) with a build generated using make brotli, I get the above error. Outside of Docker (in OS X), the same command produces this error:\nAssertion failed: ((bits >> n_bits) == 0), function BrotliWriteBits, file c/enc/./write_bits.h, line 54.\nAbort trap: 6. Hm, well, this is what I see in Debian in Docker:\ngibson@98aabb46c082:~$ cc -v\nUsing built-in specs.\nCOLLECT_GCC=cc\nCOLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/6/lto-wrapper\nTarget: x86_64-linux-gnu\nConfigured with: ../src/configure -v --with-pkgversion='Debian 6.4.0-1' --with-bugurl=file:///usr/share/doc/gcc-6/README.Bugs --enable-languages=c,ada,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-6 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --enable-default-pie --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-6-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-6-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-6-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --with-target-system-zlib --enable-objc-gc=auto --enable-multiarch --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu\nThread model: posix\ngcc version 6.4.0 20170704 (Debian 6.4.0-1)\ngibson@98aabb46c082:~$ env\nHOSTNAME=98aabb46c082\nOLDPWD=/cyph/commands\nGPG_TTY=/dev/pts/0\nJAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\nGIT_EDITOR=vim\nSSH_AUTH_SOCK=/tmp/ssh-svgIx14CgOzU/agent.20\nGOPATH=/home/gibson/go\nPWD=/home/gibson\nHOME=/home/gibson\nSSH_AGENT_PID=21\nno_proxy=*.local, 169.254/16\nTERM=xterm\nEMSDK=/home/gibson/emsdk-portable\nSHLVL=1\nEMSCRIPTEN=/home/gibson/emsdk-portable/emscripten/1.37.16\nPATH=/home/gibson/google-cloud-sdk/bin:/opt/local/bin:/opt/local/sbin:/usr/local/opt/go/libexec/bin:/home/gibson/go/bin:/home/gibson/emsdk-portable:/home/gibson/emsdk-portable/clang/e1.37.16_64bit:/home/gibson/emsdk-portable/emscripten/1.37.16:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/node_modules/.bin\nBINARYEN_ROOT=/home/gibson/emsdk-portable/clang/e1.37.16_64bit/binaryen\nEM_CONFIG=/home/gibson/.emscripten\nBASH_FUNC_log%%=() {  echo -e \"\\n\\n\\n${*} ($(date))\\n\"\n}\nBASH_FUNC_checkfail%%=() {  if (( $? )); then\n fail \"${*}\";\n fi\n}\nBASH_FUNC_pass%%=() {  log 'PASS';\n exit 0\n}\nBASH_FUNC_fail%%=() {  if [ \"${*}\" ]; then\n log \"${*}\\n\\nFAIL\";\n else\n log 'FAIL';\n fi;\n exit 1\n}\nBASH_FUNC_unbindmount%%=() {  if [ ! \"${circleCI}\" ]; then\n sudo umount \"${1}\";\n fi;\n rm -rf \"${1}\"\n}\nBASH_FUNC_notify%%=() {  /node_modules/.bin/notify --text \"${*}\" > /dev/null;\n log \"${*}\"\n}\nBASH_FUNC_bindmount%%=() {  rm -rf \"${2}\" 2> /dev/null;\n if [ \"${circleCI}\" ]; then\n cp -a \"${1}\" \"${2}\";\n else\n mkdir \"${2}\" 2> /dev/null;\n sudo mount --bind \"${1}\" \"${2}\";\n fi\n}\n_=/usr/bin/env. Hmm, I had an image that I was going to upload, but I can't reproduce it there; the only image where it's reproducible has some manual changes applied via docker commit (nothing directly relevant, just Google Cloud SDK authentication) and some local directories mounted (and locked in / required because of that commit), so it'd be a bit messy to try to share, although I can give a link and instructions for building the same image on your machine if needed.\nAll that being the case, maybe this is just a macOS problem that somehow sort of poisons Docker for Mac in the above scenario? Not sure what else would be worth testing if you've already tried it on a Mac, though. Since I didn't mention originally, in case it helps, I'm currently running OS X El Capitan.. Sorry about the delay @eustas. You should be able to recreate the image by cloning https://github.com/cyph/cyph/tree/beta; ensuring that a recent version of Node.js is installed; making an empty ~/.cyph directory; ensuring that ~/.gnupg, ~/.ssh, and ~/.gitconfig exist; running make; and skipping through some Google Cloud authentication prompts at the end.\nThis should take about 30 - 60 minutes. You may also want to edit lines 91 and 92 of docker.js to point to directories other than your actual ~/.gnupg and ~/.ssh, and afterwards you can delete the generated ~/.cyphbackup.. Sorry about the delay @eustas! Just had a chance to look into this, and figured out what the problem was. \nI could still reproduce the BrotliWriteBits assertion failure even after building with debug mode as you suggested, but it turns out that debug and non-debug modes both work fine if I do a make clean before make brotli, so I guess this is just a minor build script issue.\nTo get into the state that causes the above error (reproducible on a standard Linux system without Docker), you can run git checkout 172a378debedec81eb19747c96c28a81d917d284 ; make clean ; make brotli ; git checkout 5b4769990dc14a2bd466d2599c946c5652cba4b2 ; make brotli.. ",
    "jedisct1": "I signed it!. ",
    "cicicali": "God bless \nMina Vu\n\nOn Dec 9, 2016, at 12:26 AM, Frank Denis notifications@github.com wrote:\nI signed it!\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Hey, can you sign this petition? http://chng.it/yVZmX4CMDh\n\nThanks! - Mina\n. ",
    "naufdotal": "any update for ngx_brotli ? . ",
    "brianbienvenu": "I'm interested in using this to compress large scientific data files (~200MB) for display via web. I can't precompress, so real-time compression speed is a priority. Single threaded brotli -4 is already improves on pigz's compression ratio for my data, and is fast enough for 11MB/s. With multithreading I could run a higher compression level and get a little more ratio improvement.. ",
    "Earnestly": "Why was this done?\nEverything once configured to use pkg-config ... brotli now fails...\n. I can understand why you might want to split it for use cases which don't require linking everything, but why remove brotli.pc?. I see, that's an unfortunate view to hold but at least there is a rational for others who might encounter this issue as systems are updated.. ",
    "randomascii": "Thanks for the explanation.  VC++ gives many warnings in its /analyze mode and I ignore many of them, so I am fine with ignoring these as well. However they pointed out constructs which were suspicious - which looked wrong to a human eye. Comments to explain that the mask amounts are in fact correct (and why) would be sufficient I think. Suppressing /analyze warnings is a black art and making the code clear for human readers is more important, IMHO.. ",
    "prepare": "@McNeight,\nDo you have a plan to implement this?. Hello, Thank you.\nI will test it :)\n. ",
    "mmuman": "Ugh, why would I want to bring my gmail account into this? For a oneliner!?. thx!. Thank!. ",
    "prasadwajekar": "My Bad.\nIt was by mistake....\nPlease ignore...\nOn 31 Jan 2017 14:40, \"Eugene Kliuchnikov\" notifications@github.com wrote:\n\nPardon?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/google/brotli/pull/499#issuecomment-276311419, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ARX--honmEDYouZ0PvnlqyRv07gLVRf2ks5rXvqhgaJpZM4LyTGM\n.\n. \n",
    "ralfjunker": "You are correct in saying that -DBROTLI_ENCODER_CLEANUP_ON_OOM works around the exit. However, compression still fails and BrotliEncoderCompressStream() returns BROTLI_FALSE.\nHere is a solution I found to pass my tests: Don't call BROTLI_ALLOC if literals_count is 0. It's a small change to https://github.com/google/brotli/blob/master/enc/block_splitter.c#L137, just replace \nC\nuint8_t* literals = BROTLI_ALLOC(m, uint8_t, literals_count);\nwith\nC\nuint8_t* literals = literals_count ? BROTLI_ALLOC(m, uint8_t, literals_count) : NULL;. Testing 0749d9c does not give me the same decompressed output as @dsnet proposes in his initial report of this issue.\nDecompressing hex e2e184886a563080e0391603e430f9 results in\nworldsmallmallmallmallmallmallmallmallmallmallmallmallma... (10000 bytes in total)\ninstead of the expected\nworldorldorldorldorldorldorldorldorldorldorldorldorldorldor... (no total given).\n@dsnet's \"wrong\" output before 0749d9c matches mine, so I am inclined to believe that his fixed output is also correct, in which case the fix is wrong.\nCould @dsnet or @eustas please shed some light? Thanks!\nPS: Will there be a test case?. I am using the C implementation from this repository, in particular this check-in: 0749d9ca8b8ec1.\nIt repeats mall until it reaches 10000 bytes.\nDid you test @eustas' fix to this C implementation?. ",
    "mzule": "Yes! JNI wrapper is much more efficient. Time cost is even less than gzip. Thank you!\ndata size | format | decode cost (ms)\n---|---|---\n1kb | br | 0.47\n12kb | br | 1.44\n46kb | br | 3.88\n112kb | br | 6.53\n365kb | br | 17.98. ",
    "viric": "Ouch. It was just running for long without taking anything from stdin. It sucked data again after 5 minutes.. ",
    "brezza92": "I signed it!. I'm ported it by hand.. @eustas thank you. I will try soon.. ",
    "bcmills": "(Attn: @eustas @dsnet). This is the flush / finish path: there is no input on this call.  (What am I missing?). ",
    "JoeUser78": "Corresponding FreeBSD bugreport:\nhttps://bugs.freebsd.org/bugzilla/show_bug.cgi?id=218851. OK, -DBUILD_SHARED_LIBS=OFF -DBUILD_STATIC_LIBS=ON did it, thanks.. Thanks for your realy fast response and fix.. My builds had always been out-of-source builds (FreeBSDs Ports Makefile option USES=cmake:outsource), so that this is not the course of the issue. Also i'm not using git but the released source code archive (v0.6.0.tar.gz).. https://cmake.org/Wiki/CMake_FAQ#Library_questions should help a bit.. ",
    "osokin": "Hi,\nactually we'd like to see both types of libraries (shared and static) like other ports do.\nIs there any chance to see three types of a build, i.e. SHARED, STATIC, COMBINED (SHARED_AND_STATIC).\nThanks in advance.. ",
    "MaxRis": "@eustas , it looks like that usual solution is to name static lib differently on Windows, so both .lib files (for shared and static builds) can reside in the same directory.\nBut it seems that standard naming convention for this is not available. For example, conda-forge's Windows builds add \"_static\" suffix. Boost adds \"lib\" prefix for static libs (but it might be because boost's suffixes already depends on build configuration).\nCurrent ugly workaround to build static and shared libs with manual moving of built files can be found here https://github.com/conda-forge/brotli-feedstock/blob/master/recipe/bld.bat#L25\nSome sample of how \"_static\" suffix can be added https://github.com/apache/arrow/blob/master/cpp/cmake_modules/BuildUtils.cmake#L151\nThank you\n. Yes, just plain cmake it's supposed way. Two runs is not an issue, the issues seems are no obvious support of static build, wrong installation paths and lack of documentation.. On Windows includes should be processed similar. I guess, you can just remove if(NOT WIN32)\nAnd ${CMAKE_INSTALL_INCLUDEDIR} should be equal to include I suppose.\nSo, finally, whole include directory on install will reside as ${INSTALL_PREFIX}/include/brotli/*.h. Great news @eustas ! Going to check as much as I can.... It seems, the libs are in expected paths on Windows now, thanks!\n1. I've noticed that it seems there is still no possibility to build static and dynamic libs in one run.\n2. Also, as you mentioned before, static and dynamic import lib files default names the same and conflicts, so can't be installed to the same directory without renaming.\nAbove things seems are not critical, but in theory should a little bit simplify build process of brotli for brotli-feedstock.\n\nOn Windows cmake provides \"NMake Makefiles\" and \"Visual Studio xxx\" generators. Current version of Readme.md describes the build process with gcc make tool, but it's not available with above generator on Windows. Universal cmake command line for all platforms might be as following:\n\n```\nmkdir build && cd build\ncmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=./installed  ..\ncmake command to build and install, should be universal for all platforms hopefully\ncmake --build . --config Release --target install\n```\n. Also it's might make sense to mention in Readme.md the possibility to rename output libs for static build, if it's required. For example, in the way like it's done here.\nHope that above helps, thanks!. ",
    "gregbown": "Unsure if this is the appropriate thread for CMAKE build issues on windows, so please excuse me, I do not intend to hijack the thread.\nI have attempted all the build options and they all arrive at a less than ideal conclusion.  I will describe each below.  Through trial and error I was able to finally build a stand alone Brotli executable...see end of post.\nAutotools-style CMake The basic commands to build\nmkdir out && cd out\n../configure-cmake <- fails as indicated below\n`C:\\Users\\gbown\\Documents\\google-brotli\\brotli>mkdir out && cd out\nC:\\Users\\gbown\\Documents\\google-brotli\\brotli\\out>../configure-cmake\n'..' is not recognized as an internal or external command,\noperable program or batch file.\nC:\\Users\\gbown\\Documents\\google-brotli\\brotli\\out>`\nUnable to proceed further, obviously this would apply to static build with autotools as well.\nmake\nmake test\nmake install\nCMake The basic commands to build and install\nmkdir out && cd out\ncmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=./installed ..\ncmake --build . --config Release --target install\nBuild succeeded 0 Errors\nNo clear direction on installing or use.  Dropping dll files in Windows system folder for dlls and setting path to brotli.exe appears to make it work however none of this is documented\nCMake to build static libraries\nmkdir out-static && cd out-static\ncmake .. -DBUILD_SHARED_LIBS=OFF\nmake\nResult \n\nNo targets specified and no makefile found:\n\n`C:\\Users\\gbown\\Documents\\google-brotli\\brotli\\out-static>cmake .. -DBUILD_SHARED_LIBS=OFF\n-- Building for: Visual Studio 15 2017\n-- The C compiler identification is MSVC 19.11.25508.2\n-- The CXX compiler identification is MSVC 19.11.25508.2\n-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.11.25503/bin/HostX86/x86/cl.exe\n-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.11.25503/bin/HostX86/x86/cl.exe -- works\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.11.25503/bin/HostX86/x86/cl.exe\n-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.11.25503/bin/HostX86/x86/cl.exe -- works\n-- Detecting CXX compiler ABI info\n-- Detecting CXX compiler ABI info - done\n-- Detecting CXX compile features\n-- Detecting CXX compile features - done\n-- Looking for log2\n-- Looking for log2 - found\n-- Configuring done\n-- Generating done\n-- Build files have been written to: C:/Users/gbown/Documents/google-brotli/brotli/out-static\nC:\\Users\\gbown\\Documents\\google-brotli\\brotli\\out-static>make\nmake: *** No targets specified and no makefile found.  Stop.\n`\nIf I add the flag -DBUILD_SHARED_LIBS=OFF to the first set of CMake instructions, it does build a stand alone brotli.exe without errors which is usable, however; I had to sort of guess that this was how to do it, point being not all of us are full on c++ developers.\nRunning brotli -9 -f -o my-file.brotli -- my-file works great however there is no clear way to run tests on the newly created executable.\nThe -q and --quality AND -# seem to be two different ways of setting the same thing however setting -q 11 produces a smaller file than -9 and the two commands cannot be used at the same time; is there documentation on this anywhere?\n-#                          compression level (0-9)\n-q NUM, --quality=NUM       compression level (0-11)\nSo to sum things up, to build a stand alone executable on Windows with CMake, the following works.\nmkdir out && cd out\ncmake -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=./installed ..\ncmake --build . --config Release --target install\nAfter this you should have a brotli.exe file that you can then set an environment path to allowing you to use brotli compression in your Windows build scripts anywhere.\n. Just to clarify, the current README documented CMake commands will create a brotli.exe and a dozen other files. The brotli.exe that is generated will function as a standalone executable and there is no need to install the .dll files in your system\n. ",
    "bodewig": "Thanks Eugene!\nIf you want to make downstream OSGi users happy, they'll need a new artifact.\nWe've just merged a pull request for Apache Commons Compress that adds read-only support for brotli based on dec and all Apache Commons projects try to be bundles. We've marked the dependency as optional so people using Compress aren't directly affected. We haven't cut a release with it, yet, but I think we are close. If you are interested in publishing new artifacts, I'd be happy to hold back the release and upgrade the dependency.. Sounds great, thanks!. Wow, thanks a lot.\nhttps://github.com/apache/commons-compress/commit/0eccda844e59b6d5bdd06e62710bbf09dacc040d. ",
    "ttnbs": "I signed it!. ",
    "mcatanzaro": "Awesome! Next step is to un-bundle it from WebKit..... I'm not going to sign the CLA... this change is clearly de minimis; feel free to take it and re-commit or whatever necessary to satisfy the legal overlords.. > Your patch is clearly wrong. If anything, you would want to set both VERSION and SOVERSION to the full ${BROTLI_ABI_COMPATIBILITY}.${BROTLI_ABI_AGE}.${BROTLI_ABI_REVISION}. (It does not make sense to have VERSION shorter than SOVERSION.)\nI will trust you on this, because I don't know what VERSION does, but I'd like to understand. I looked at the documentation and didn't see any indication of what VERSION actually does. What does it do? Why should it never be shorter than SOVERSION? Why are they related at all?\n\nBut if you actually read the commit message of commit 0ad94ee, in particular: separate semantic and ABI version, and if you look at the name of the macro ${BROTLI_ABI_COMPATIBILITY}, it should be pretty clear that having the SOVERSION set as just ${BROTLI_ABI_COMPATIBILITY} is intended, even if the jump from 1.0.1 to just 1 may look weird at first glance. So IMHO this pull request can be discarded completely.\n\nKevin, come on, I can read... the variables here are named CURRENT, REVISION, and AGE. There is vanishingly small chance that these were intended to be used for any purpose other than constructing a traditional x.y.z soversion... and the commit is careful to add corresponding libtool versioning to the autotools build.. Let's put this another way: the autotools build is obviously installing libraries with a three-component soversion based on current, revision, and age. How would you change the CMake build to do the same (like it was before)?. @AdamWill, Kevin is right. I built the code and it does indeed install the .so.x.y.z objects exactly as it should. Here is lib64 in my install tree:\n$ ls\nlibbrotlicommon.so        libbrotlidec.so.1      libbrotlienc.so.1.0.3\nlibbrotlicommon.so.1      libbrotlidec.so.1.0.3  libbrotlienc-static.a\nlibbrotlicommon.so.1.0.3  libbrotlidec-static.a  pkgconfig\nlibbrotlicommon-static.a  libbrotlienc.so\nlibbrotlidec.so           libbrotlienc.so.1\nThis PR is invalid. Are you sure .1.0.3 so is not being installed in the Fedora package? If so, something weird must be going on.. > Are you sure .1.0.3 so is not being installed in the Fedora package?\nI built the old version, 1.0.1, and found in my install tree:\n$ ls\nlibbrotlicommon.so        libbrotlidec.so.1.0.1  libbrotlienc-static.a\nlibbrotlicommon.so.1.0.1  libbrotlidec-static.a  pkgconfig\nlibbrotlicommon-static.a  libbrotlienc.so\nlibbrotlidec.so           libbrotlienc.so.1.0.1\nSo the change between 1.0.1 and 1.0.3 was clearly a progression. It was the older version that was weird.. Yes.\nIt's good now, and we should not change anything.. ",
    "steric85": "Oh Ohkay. Thanks for informing :)\n. ",
    "Exagone313": "I signed it!. ",
    "tavrez": "I made a PR for this in #567. I've signed CLA. I though that system:\"Windows\" in filter configurations will make it only available in windows and results won't change anything in linux/gmake.\nThanks for the response and notes, I'll make it better. Sorry, seems like VS only care about platform name, not what we write in front of architecture. But I fixed mistypings you mentioned.. ",
    "geeknik": "After reading some prior reports, I'll close this.. ",
    "paul-brain": "Python 3.6.2 (v3.6.2:5fd33b5, Jul  8 2017, 04:14:34) [MSC v.1900 32 bit (Intel)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n\n\npython setup.py install\n  File \"\", line 1\n    python setup.py install\n               ^\nSyntaxError: invalid syntax. \n\n\n",
    "jmoceri34": "I'm unable to reproduce this, and was able to do it successfully.\nMake sure you're at the root project directory (reference), running:\nbash\npython setup.py install\n. ",
    "pzduniak": "Running with -x:\ngcc -I . -fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=$WORK=/tmp/go-build -gno-record-gcc-switches \\\n-o $WORK/bitbucket.org/portablecloud/cube/vendor/github.com/google/brotli/go/cbrotli/_obj/_cgo_.o \\\n$WORK/bitbucket.org/portablecloud/cube/vendor/github.com/google/brotli/go/cbrotli/_obj/_cgo_main.o \\\n$WORK/bitbucket.org/portablecloud/cube/vendor/github.com/google/brotli/go/cbrotli/_obj/_cgo_export.o \\\n$WORK/bitbucket.org/portablecloud/cube/vendor/github.com/google/brotli/go/cbrotli/_obj/cgo.cgo2.o \\\n$WORK/bitbucket.org/portablecloud/cube/vendor/github.com/google/brotli/go/cbrotli/_obj/reader.cgo2.o \\\n$WORK/bitbucket.org/portablecloud/cube/vendor/github.com/google/brotli/go/cbrotli/_obj/writer.cgo2.o \\\n-g -O2 -lbrotlicommon -lbrotlidec -lbrotlienc. We've actually been using a fork of Brotli in our org, I'll look into it this week. . I'm actually building static libraries and here's where the issue happens. Dynamic build works fine. From what I understand the static libraries are also built when you run a build through CMake, so it should be working fine.\ngo install '-linkmode external -extldflags \"-static\"' -v ./.... And here are the errors:\n/usr/local/go/pkg/tool/linux_amd64/link: running gcc failed: exit status 1\n/usr/lib/gcc/x86_64-alpine-linux-musl/6.4.0/../../../../x86_64-alpine-linux-musl/bin/ld: cannot find -lbrotlicommon\n/usr/lib/gcc/x86_64-alpine-linux-musl/6.4.0/../../../../x86_64-alpine-linux-musl/bin/ld: cannot find -lbrotlidec\n/usr/lib/gcc/x86_64-alpine-linux-musl/6.4.0/../../../../x86_64-alpine-linux-musl/bin/ld: cannot find -lbrotlienc. ",
    "jbergstroem": "I tried this with golang:1.10-alpine by installing the build deps, building and installing brotli then verifying with go test:\nconsole\n~/brotli/go/cbrotli # go test\nPASS\nok      _/root/brotli/go/cbrotli        0.101s. @Sanmayce using the auto* stack in brotli 1.0.2 should make it easier for you to switch compiler (CC=icl ./configure).. ",
    "krk": "A workaround is to remove the #cgo comments from https://github.com/google/brotli/blob/9cd01c0437e8b6010434d3491a348a5645de624b/go/cbrotli/cgo.go#L10-L12 and specify the static libraries in CGO_LDFLAGS:\nsed -i '/#cgo/d' vendor/github.com/google/brotli/go/cbrotli/cgo.go\nCGO_LDFLAGS=\"-lbrotlidec-static -lbrotlienc-static -lbrotlicommon-static -lm -static\" go install -v ./...\n. ",
    "paulmenzel": "I am sorry for only testing with release 0.6.0. I new release would be nice. ;-). I don\u2019t have a Google work account. How can I sign the CLA?. ",
    "cup": "Well, Windows would be a start, seeing how Zstd, Lizard and LZ4 are already\ndoing that:\n\nhttp://github.com/facebook/zstd/releases\nhttp://github.com/inikep/lizard/releases\nhttp://github.com/lz4/lz4/releases. \n",
    "Aris-t2": "Agreed, executables for Windows (32/64 bit) would be a great start.. ",
    "Cladge": "Hi. The last release that included Windows binaries was v1.0.4. The 3 releases since then have only included the source code. Have you stopped providing Windows binaries?. ",
    "thinrope": "Great!\n(I really hate reporting \"fixed-in-master\" bugs, apology for that; I only checked the latest release tarball) . ",
    "jogibear9988": "Was my fault. Also the source file has the error. ",
    "buletti": "I was not using Bazel. I was basically just following the build instructions of the readme.md for CMake. \nI got the following .dlls as a result:\n- libbrotlicommon.dll\n- libbrotlidec.dll\n- libbrotlienc.dll\nHowever, when the JNI calls to those .dlls failed with the above UnsatisfiedLinkError I tried to add \nCMAKE_CXX_FLAGS=-D_JNI_IMPLEMENTATION_ -Wl,--kill-at\nand to include the JAVA headers\nCMAKE_CXX_STANDARD_LIBRARIES=-I %JAVA_HOME%\\include -I %JAVA_HOME%\\include\\win32\nAnyways the result was the same.\nThank you very much for looking into the matter.\n. Yep, seems to work fine. Thanks!. Another quick question: I don't see JNI builds for platforms other than Windows at bintray: \nDo other platforms not need separate JNI libraries? E.g. can I use libbrotlicommon.so + libbrotlienc.so on Linux for JNI calls to the encoder?. ",
    "addityasingh": "I will give it a go. Thanks @eustas for the effort \ud83d\udc4d . @eustas Just as a side question, is there any existing usage/example of the go implementation somewhere. I tried below but to no avail:\ngodep save github.com/google/brotli/cbrotli\n\ngodep: Package (github.com/google/brotli/cbrotli) not found\n\ngodep save github.com/google/cbrotli\n\ngodep: Package (github.com/google/cbrotli) not found. \n",
    "KindDragon": "Yep, move them. Closing it because of #636. Duplicate :). _BitScanForward64 only supported with 64-bit compiler (defined(_M_AMD64)). I think you should use _BitScanForward if _M_AMD64 undefined\nSomething like that:\n```\nelif defined _M_X64 || defined _M_ARM || defined _M_ARM64 / BROTLI_MSVC_INTRINSICS /\n  uint32_t first_one;\n  _BitScanForward64(&first_one, x);\n  size_t matching_bits = (size_t)first_one;\n\nelse\n  uint32_t first_one;\n  size_t matching_bits;\n  if (_BitScanForward(&first_one, (unsigned long)x))\n        matching_bits = (size_t)first_one;\n  else if (_BitScanForward(&first_one, (unsigned long)(x >> 32)))\n        matching_bits = (size_t)(where + 32);\n\nendif\n``. Not all processors support_tzcnt_u64(BMI1 is available in AMD's Jaguar,[4] Piledriver[5] and newer processors, and in Intel's Haswell[6] and newer processors. `)\nI think better revert to _BitScanForward. ",
    "yoavweiss": "\nAbout publishing dictionaries: indeed the client does not tell the server which it has, instead the server provides the URL of the dictionary, and the client caches it. This is good when the client then requests other pages which use the same dictionary.\nWhen using a previous document as dictionary for a next document, the server should know that the client already has this previous document since it sent it before during this session. Does the latter sound feasible?\n\nThat seems like something that will be hard to deploy. The server has to keep track of all past resources and their client side cacheability in order to know which dictionary to use. (Maybe Cache Digests can help a bit here...) It also seems like something that will result in breakage if the server and the client caches ever get out of sync.\nEven on the same connection, use of URLs would mean that the browser would have to get the resources from the disk cache in order to use them as dictionaries. What happens when they are not cacheable?. ",
    "mikroskeem": "Any update on this?. ETA? :smile: . ",
    "felixbuenemann": "@Sp1l Btw. if the FreeBSD version of sed behaves like the macOS one, you can do in-place replacements without backups by using -i '', however that leads to a \"No such file or directory\" error on GNU sed, so for compatibility with both versions a backup extension is required.. ",
    "jbicha": "I signed it!. ",
    "kjatin": "Does this mean that if we want to import the source code as a third-party code, we would need to make modifications to the source code? Is there a simpler way of loading the library (something similar to the stub you mentioned). Please excuse my in-experience with JNI build systems.. I get the point here. Thanks for the clarification. However I would suggest you put this instruction in the README or some other suitable file as a documentation.. ",
    "rcanavan": "That patch is obviously rubbish and fails when building in parallel. My understanding is that a proper solution would require the libraries to be separated into separate directories.. > Doesn't libbrotlidec_la_LIBADD = libbrotlicommon.la -lm and libbrotlienc_la_LIBADD = libbrotlicommon.la -lm do that?\nit does. Those two changes on top of 1.0.2 work flawlessly for me. Thanks.. ",
    "saucecontrol": "I signed it!. True, but that's a BMI instruction, so you have to add a cpuid check and still need the fallback to bsf. I saw that comment, but I was looking at the VS docs, which have BMI listed as a requirement.  I tried it out on an older processor and it does indeed work as explained here: https://stackoverflow.com/questions/43880227/why-does-tzcnt-work-for-my-sandy-bridge-processor\n. Travis failure appears to be a config issue.\n@eustas I refactored these changes to be more in keeping with the current platform.h style.  Is there anything else I can do to make this PR more appealing?. > what is \"c\" function/macro (line 540)?\nOh dear, that was a ctrl-c gone terribly wrong when I was triple-checking the argument types of that intrinsic.  That case only applies in the unlikely event someone uses MSVC for an ARM64 build, so I could only test it by breaking the condition checking for X64.  All fixed now.\nThanks for the review!. I've published binaries and a configuration guide here: https://github.com/saucecontrol/Brotli-IIS. The whole function body is wrapped in #if BROTLI_64_BITS, so that #else would never happen.  I've refactored the change and used _tzcnt_u64, so hopefully it's a more appealing PR now.. See the earlier comments on this PR.  TZCNT decodes as BSF on non-BMI1 processors\nhttps://stackoverflow.com/questions/43880227/why-does-tzcnt-work-for-my-sandy-bridge-processor. ",
    "matbech": "I recommend to use _tzcnt_u64 on x86 and x64 instead of _BitScanForward64 as it improves performance on AMD.\nSee the explanation here: https://github.com/matbech/zlib/blob/6f8722e567a9e91c6d6662260bbae89eba5dd9a6/deflate.c#L1270. No, this is not necessary. See the comments in the previous link:\n\"On processors that do not support TZCNT, the instruction byte encoding is executed as BSF. In this case the result for 0 is undefined.\". ",
    "AppVeyorBot": ":white_check_mark: Build brotli 1.0.0#1406 completed (commit https://github.com/google/brotli/commit/9dc4e66f5b by @saucecontrol). :white_check_mark: Build brotli 1.0.0#1407 completed (commit https://github.com/google/brotli/commit/0afc0f9342 by @saucecontrol). :white_check_mark: Build brotli 1.0.0#1408 completed (commit https://github.com/google/brotli/commit/df46737f66 by @saucecontrol). :white_check_mark: Build brotli 1.0.0#1398 completed (commit https://github.com/google/brotli/commit/86e54fca39 by @aperezdc). :white_check_mark: Build brotli 1.0.0#1364 completed (commit https://github.com/google/brotli/commit/f95b4f6d04 by @stephenkyle-ARM). :white_check_mark: Build brotli 1.0.0#1365 completed (commit https://github.com/google/brotli/commit/5e1c30235a by @stephenkyle-ARM). :white_check_mark: Build brotli 1.0.0#1369 completed (commit https://github.com/google/brotli/commit/9d4cad78fa by @stephenkyle-ARM). :white_check_mark: Build brotli 1.0.0#1366 completed (commit https://github.com/google/brotli/commit/7de8a04fb9 by @stephenkyle-ARM). :white_check_mark: Build brotli 1.0.0#1363 completed (commit https://github.com/google/brotli/commit/4db4516101 by @SaveTheRbtz). :white_check_mark: Build brotli 1.0.0#1371 completed (commit https://github.com/google/brotli/commit/c573fc5b11 by @SaveTheRbtz). :white_check_mark: Build brotli 1.0.0#1367 completed (commit https://github.com/google/brotli/commit/cacc14e3af by @mraszyk). :x: Build brotli 1.0.0#1372 failed (commit https://github.com/google/brotli/commit/48de1f3a65 by @mraszyk). :white_check_mark: Build brotli 1.0.0#1374 completed (commit https://github.com/google/brotli/commit/dd5c2f5ae8 by @eustas). :white_check_mark: Build brotli 1.0.0#1375 completed (commit https://github.com/google/brotli/commit/173111c5dc by @eustas). :white_check_mark: Build brotli 1.0.0#1385 completed (commit https://github.com/google/brotli/commit/41f865df1c by @eustas). :white_check_mark: Build brotli 1.0.0#1376 completed (commit https://github.com/google/brotli/commit/0c223882e9 by @stephenkyle-ARM). :white_check_mark: Build brotli 1.0.0#1377 completed (commit https://github.com/google/brotli/commit/3147c1cd10 by @stephenkyle-ARM). :x: Build brotli 1.0.0#1379 failed (commit https://github.com/google/brotli/commit/1c6a696ec8 by @eustas). :white_check_mark: Build brotli 1.0.0#1380 completed (commit https://github.com/google/brotli/commit/ebf2290cb0 by @eustas). :white_check_mark: Build brotli 1.0.0#1384 completed (commit https://github.com/google/brotli/commit/8061f99125 by @stephenkyle-ARM). :x: Build brotli 1.0.0#1388 failed (commit https://github.com/google/brotli/commit/080ba94c6f by @eustas). :white_check_mark: Build brotli 1.0.0#1389 completed (commit https://github.com/google/brotli/commit/4d9316262b by @eustas). :white_check_mark: Build brotli 1.0.0#1396 completed (commit https://github.com/google/brotli/commit/f9d9f41d8b by @eustas). :white_check_mark: Build brotli 1.0.0#1399 completed (commit https://github.com/google/brotli/commit/455f99c915 by @apan1000). :x: Build brotli 1.0.0#1400 failed (commit https://github.com/google/brotli/commit/77c81a889e by @jridgewell). :white_check_mark: Build brotli 1.0.0#1401 completed (commit https://github.com/google/brotli/commit/d93ea67671 by @jridgewell). :white_check_mark: Build brotli 1.0.0#1403 completed (commit https://github.com/google/brotli/commit/85c380f7a1 by @PopeSpaceous). :white_check_mark: Build brotli 1.0.0#1404 completed (commit https://github.com/google/brotli/commit/0481e12d38 by @daisuke-t-github). :white_check_mark: Build brotli 1.0.0#1405 completed (commit https://github.com/google/brotli/commit/56eba3e40c by @daisuke-t-github). :white_check_mark: Build brotli 1.0.0#1409 completed (commit https://github.com/google/brotli/commit/2c73bc0072 by @nigoroll). :white_check_mark: Build brotli 1.0.0#1413 completed (commit https://github.com/google/brotli/commit/323233de1e by @nigoroll). :white_check_mark: Build brotli 1.0.0#1411 completed (commit https://github.com/google/brotli/commit/862a86bd76 by @eustas). ",
    "JiMMYBOOi": "can I make any trade-offs to improve ratio?. ",
    "vaneri": "Thanks for the information; could you tell me more about the bazel output; is it only working for windows?\nWhat shall I suppose to do with the output? what jar/file should I use/copy?\nThanks a lot for your help,\nRimbaud\nWe found out  that the library generated is  .dll and not really was you would expect in using linux\nFor the one interested, here is the output that should be used: \nbazel-bin/brotli_jni.dll\nWould certainly be interesting to have those information in the README instead of a link to bazel that is just useless.\n. ",
    "kkofler": "(Another Fedora packager here, a KDE packager who is thus more familiar with CMake. ;-) )\nYour patch is clearly wrong. If anything, you would want to set both VERSION and SOVERSION to the full ${BROTLI_ABI_COMPATIBILITY}.${BROTLI_ABI_AGE}.${BROTLI_ABI_REVISION}. (It does not make sense to have VERSION shorter than SOVERSION.) But if you actually read the commit message of commit 0ad94eed00420bf1154cb16a289aa27efbb30c01, in particular: separate semantic and ABI version, and if you look at the name of the macro ${BROTLI_ABI_COMPATIBILITY}, it should be pretty clear that having the SOVERSION set as just ${BROTLI_ABI_COMPATIBILITY} is intended, even if the jump from 1.0.1 to just 1 may look weird at first glance. So IMHO this pull request can be discarded completely.. The SOVERSION is only the major version (the equivalent of LT_CURRENT). It is called this way because this is the only part actually encoded in DT_SONAME. This is the version that you should bump if and only if the ABI changes, as a bump forces everything dependent on the library to be rebuilt. In libtool, this must be a single integer. CMake allows you to set SOVERSION to anything, but it is typically an integer as in libtool.\nThe VERSION is the full version, with which the real file (as opposed to a symlink) is installed. In the libtool scheme, it is of the major.minor.revision form, where the minor version is actually calculated through a subtraction in libtool. CMake actually allows you to set VERSION to anything. Here, a classic major.minor.revision is used.. ",
    "AdamWill": ":popcorn: . @mcatanzaro I never said the copy of the library with the full version as its filename wasn't present. I said the internal soname of the library changed; in the 1.0.1 package build the soname of the libraries was e.g. libbrotlicommon.so.1.0.1, in the 1.0.3 package it was libbrotlicommon.so.1. You can verify this for yourself easily enough by just downloading the packages and examining the files. Here, look:\n[adamw@adam ~]$ objdump -p /usr/lib64/libbrotlicommon.so.1.0.1  | grep SONAME\n  SONAME               libbrotlicommon.so.1.0.1\n[adamw@adam ~]$ objdump -p /tmp/libbrotlicommon.so.1.0.3 | grep SONAME\n  SONAME               libbrotlicommon.so.1\n[adamw@adam ~]$\n\n(that's comparing my installed copy of the library, from brotli-1.0.1-3.fc28.x86_64 , to the copy from brotli-1.0.3-1.fc29 , which I extracted into /tmp).\nI mean, the change isn't necessarily wrong - it actually seems more in line with typical practice to have the soname represent the major version, not the patch version, as a change in the patch version should not be an API change. I don't think you were right to assert initially that the soname including the patch version was \"following standard conventions\", I don't think it was. This change actually probably brings it into line with standard conventions.. Right. This was a 'problem' from Fedora's perspective, in that there was an soname change that was not announced. But the change wasn't inherently wrong, and doesn't need fixing.. ",
    "wkennington": "Sounds good. Yeah the addition for the next release is fine.. ",
    "alexeagle": "Thanks, right now we're not able to run Angular's tests on our workstations since we have a test for the size of our brotli-bundled output.. Thanks!!. ",
    "aperezdc": "JFTR, I found out that the unneeded C++ check was being done thanks to this report from Buildroot's autobuilder :wrench: . @eustas If you need to support CMake 2.8, according to the documentation it is possible to use:\ncmake\nproject(brotli C)\nI'll check whether omitting the LANGUAGES keyword works also in more recent versions (my local version is 3.10.x) and update the PR. . The plain project(brotli C) worked fine for me with CMake 3.10.3, so I have updated the PR. Hopefully the CI will pass as well :wink: . I have just pushed an update which modifies the c/fuzz/test_fuzzer.sh script accordingly. This should make Travis-CI happy again.. For some more context (and an example), I am trying to address building for an Linux uCLibc target which uses only static libraries, like in this Buildroot build \u2014 and in general making it easier for getting only static libraries as a result of the build, with the same base names as the shared libraries. . @eustas: I saw the brotlidec-static and brotlienc-static targets, but using those means that every distributor needs to manually adapt build recipes to only build those two targets. Which I can agree would be acceptable.\nBut then distributors need to trust that renaming libraries (libbrotli-static.a \u2192 libbrotli.a, and so on) will keep working, and that the .pc file will be valid to find the renamed libraries, or generate their own. IMHO it would be desirable that the output from install target of the build system is directly useable \u2014 both for static and shared library builds.\nDo you think it would be more acceptable to leave both targets for static and shared libraries, then when cmake -DBUILD_SHARED_LIBS=OFF is used:\n\nDisable the targets for shared libraries.\nStatic libraries are built with their current names (lib*-static.a).\nThe install adds symlinks lib*.a \u2192 lib*-static.a.\n\nOnce again, thank you for your time, and let me be clear that I just want to try to make it easier for packagers to adopt the library, and that I don't have anything against building both version by default :wink: . In case it helps: I have been looking a bit at the woff2 CMake build definitions, and it does use BUILD_SHARED_LIBS as proposed in this PR.. @eustas Coming back to this topic... The solution proposed in https://github.com/google/brotli/commit/fb139e49cc415be9fdfe8ae7e7357e9376a47f7d works fine with BUILD_SHARED_LIBS=ON and BUILD_STATIC_LIBS=OFF:\n\nOnly shared libraries are build.\nThe .pc files are installed and using them results in linking against the shared libraried.\n\nBut using BUILD_SHARED_LIBS=OFF and BUILD_STATIC_LIBS=ON results in no .pc files being installed, so other packages which use them to determine how to link against the library won't build. Moreover, the names of the static libraries have a -static suffix, so even if they try the usual library names for linking without relying on having .pc files, likely they would use e.g. -lbrotlidec (and not -lbrotlidec-static).\nI think the approach in https://github.com/google/brotli/commit/fb139e49cc415be9fdfe8ae7e7357e9376a47f7d would do if the .pc files were also installed for the static libraries, so pkg-config --static \u2026 can work.. ",
    "jendap": "Thank you, Eugene!\nOk, the shared brotli with custom dictionary does good job. Thanks!\nJust put the long_window into normal help. People who want to shoot themselves will always manage to do so. Just put there warning that it is usually not good idea.. ",
    "trudeaun": "@nemequ Hi Evan, I noticed that you had mentioned XL in this issue and also in your comment on Stack Overflow. Sorry to hear that XL is causing you some trouble. Which of the following are you trying to achieve?\n\nDetermine whether a macro's operand is an integer constant expression\nDetermine whether the value of the macro's operand can be determined to be a constant. \n",
    "bknowles": "Confirmed.. ",
    "davidlt": "I signed it!. ```\n100% tests passed, 0 tests failed out of 70\nTotal Test time (real) = 139.10 sec\nOn top of\ncommit 48a25b3fa4c486cac053830b0ac7072ba4d7f7a3 (origin/master, origin/HEAD)\nAuthor: Eugene Kliuchnikov eustas@google.com\nDate:   Fri May 18 22:07:52 2018 +0200\nHardware was SiFive HiFive Unleashed board:\nhart    : 1\nisa : rv64imafdc\nmmu : sv39\nuarch   : sifive,rocket0\nhart    : 2\nisa : rv64imafdc\nmmu : sv39\nuarch   : sifive,rocket0\nhart    : 3\nisa : rv64imafdc\nmmu : sv39\nuarch   : sifive,rocket0\nhart    : 4\nisa : rv64imafdc\nmmu : sv39\nuarch   : sifive,rocket0\n```. ",
    "gkalpak": "It works now. Thx \ud83d\udcaf . ",
    "alberto-esposito": "Is benchmark part of testing? \nI just noticed a regression in file size from Ubuntu 17.10 (brotli 0.6.0) and the git repo (brotli 1.0.4).\nWith more recent brotli version file size is bigger, and the LZ77 window size is almost always non optimal.. ",
    "torappinfo": "Linux 4.16.6-1-ARCH #1 SMP PREEMPT Mon Apr 30 12:30:03 UTC 2018 x86_64 GNU/Linux\nName            : brotli\nVersion         : 1.0.4-1\nDescription     : Brotli compression library\nArchitecture    : x86_64\n. If alignment is helpful for performance, this bug needs not to be fixed. We just need to document it.. I'v compressed every 64k block of a large file with brotli and then concatenate them together. The compressed file has a header to provide offsets for each blocks. \nThe header format is as follows:\n```\nstruct CONTENT_LOC {\n  byte offset[5]; //Big endian/network order 5-byte integer \n};\nstruct HEADER {\n  byte flags;\n  CONTENT_LOC len_decompressed; //length of original uncompressed file\n  CONTENT_LOC blocks[]; //offsets for each blocks, CONTENT_LOC[nBlocks+1] \n};\n```\nHere nBlocks=(len_decompressed-1)/64k + 1.\nand the offset for the first block is zero, and second offset is the length of compressed first block etc.\nIn this format, BrotliDecoderDecompress() crashed for the very first block for my testing data.\nThe first 1MB of compressed file is attached here.\ntest.log\n. The full compressed file (15MB) is here: (ahd.dict.tbr)\nhttps://github.com/torappinfo/century-dictionary/releases/tag/v1. The file is not century.md. I just put there as a test file, so the SHA256 is different.\nWhen you decompressed the test file, did you mmap the whole test file (at offset 0)\nand use BrotliDecoderDecompress(len,data+offset,&decoded_size,inBuffer) directly on it?\nIf you read the test file to a buffer, the data is probably properly aligned and nothing will be wrong.\nBut if you mmap the whole test file (including header) and directly use BrotliDecoderDecompress() on the address space. It crashed me every time.\nMy latest test is using :\nLinux 4.17.2-1-ARCH #1 SMP PREEMPT UTC 2018 x86_64 GNU/Linux\nName            : brotli\nVersion         : 1.0.5-1\nDescription     : Brotli compression library\nArchitecture    : x86_64. @mraszyk, Could you give your code to jhudsoncedaron, as you have already successfully extracted streams. The only thing to make sure segment fault is not to read compressed stream to buffer.\n. My FS and OS page sizes are both 4KB.. mraszyk's code runs successfully on my machine.. The segment fault may be inside my code, since simply declaring a global variable fixed the crash:\nunsigned char ub1 testbuf[64*1024];\nEven though the coredump stack is as follows:\n0  0x00007ffff782bb5f in raise () from /usr/lib/libc.so.6\n1  0x00007ffff7816452 in abort () from /usr/lib/libc.so.6\n2  0x00007ffff786e658 in __libc_message () from /usr/lib/libc.so.6\n3  0x00007ffff7874f6a in malloc_printerr () from /usr/lib/libc.so.6\n4  0x00007ffff78754c4 in munmap_chunk () from /usr/lib/libc.so.6\n5  0x00007ffff7b44a42 in ?? () from /usr/lib/libbrotlidec.so.1\n6  0x00007ffff7b43548 in BrotliDecoderDecompressStream () from /usr/lib/libbrotlidec.so.1\n7  0x00007ffff7b43bac in BrotliDecoderDecompress () from /usr/lib/libbrotlidec.so.1. Very weird bug. I decompressed the first block (BrotliDecoderDecompress) to the first cache of the following cache array:\nstruct dictCACHE {\n  ub1 cache[65536][DICT_CACHE_SIZE];\n  //ub1 testbuf[65536]; //this line fixed segment fault\n  ub4 chunk[DICT_CACHE_SIZE];//index for 64k chunks, (ub4)-1 means invalid\n  ub4 stamp[DICT_CACHE_SIZE];\n};\nWhatever DICT_CACHE_SIZE is, without testbuf defined, BrotliDecoderDecompress segment faulted for sure. And even if the testbuf is defined, it is never write-accessed in run (I made the testbuf page read-only, and it never crashed.)\nThe Valgrind error is as follows:\n==593== Memcheck, a memory error detector\n==593== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==593== Using Valgrind-3.14.0.GIT and LibVEX; rerun with -h for copyright info\n==593== Command: ./tdict_tbr /home/fengcao/dict/ahd hello\n==593== \n==593== Invalid write of size 8\n==593==    at 0x483C02B: memcpy@GLIBC_2.2.5 (vg_replace_strmem.c:1033)\n==593==    by 0x4ACB489: ??? (in /usr/lib/libbrotlidec.so.1.0.5)\n==593==    by 0x4ACFFBA: BrotliDecoderDecompressStream (in /usr/lib/libbrotlidec.so.1.0.5)\n==593==    by 0x4AD0BAB: BrotliDecoderDecompress (in /usr/lib/libbrotlidec.so.1.0.5)\n==593==    by 0x10A98C: content (getcontent_tbr.c:122)\n==593==    by 0x10B6D7: GetContent (tdict_le.c:187)\n==593==    by 0x10D3FE: tdict_main (tdictmain.c:261)\n==593==    by 0x10AB35: main (getcontent_tbr.c:156)\n==593==  Address 0x121000 is not stack'd, malloc'd or (recently) free'd\n==593== \n==593== \n==593== Process terminating with default action of signal 11 (SIGSEGV): dumping core\n==593==  Access not within mapped region at address 0x121000\n==593==    at 0x483C02B: memcpy@GLIBC_2.2.5 (vg_replace_strmem.c:1033)\n==593==    by 0x4ACB489: ??? (in /usr/lib/libbrotlidec.so.1.0.5)\n==593==    by 0x4ACFFBA: BrotliDecoderDecompressStream (in /usr/lib/libbrotlidec.so.1.0.5)\n==593==    by 0x4AD0BAB: BrotliDecoderDecompress (in /usr/lib/libbrotlidec.so.1.0.5)\n==593==    by 0x10A98C: content (getcontent_tbr.c:122)\n==593==    by 0x10B6D7: GetContent (tdict_le.c:187)\n==593==    by 0x10D3FE: tdict_main (tdictmain.c:261)\n==593==    by 0x10AB35: main (getcontent_tbr.c:156)\n==593==  If you believe this happened as a result of a stack\n==593==  overflow in your program's main thread (unlikely but\n==593==  possible), you can try to increase the size of the\n==593==  main thread stack using the --main-stacksize= flag.\n==593==  The main thread stack size used in this run was 8388608.\n==593== \n==593== HEAP SUMMARY:\n==593==     in use at exit: 110,457 bytes in 8 blocks\n==593==   total heap usage: 8 allocs, 0 frees, 110,457 bytes allocated\n==593== \n==593== LEAK SUMMARY:\n==593==    definitely lost: 0 bytes in 0 blocks\n==593==    indirectly lost: 0 bytes in 0 blocks\n==593==      possibly lost: 0 bytes in 0 blocks\n==593==    still reachable: 110,457 bytes in 8 blocks\n==593==         suppressed: 0 bytes in 0 blocks\n==593== Rerun with --leak-check=full to see details of leaked memory\n==593== \n==593== For counts of detected and suppressed errors, rerun with: -v\n==593== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0). ",
    "jhudsoncedaron": "I can give a clue how to try to reproduce this. I think the code tries to read past the end of the buffer and ignores the result. This will crash if the buffer is butt-up against the end of a page and the next page isn't allocated. This is easy to set up with a mmapped file and hard otherwise.. @torappinfo : I'd recommending extracting out and uploading the two dozen lines required to set this up. I only ever got this with corrupted streams.... @torappinfo : What are your FS and OS page sizes? (The FS page size is the size of an empty directory assuming you aren't using an exotic filesystem.) Your processor supports large pages but I can't tell if you're using them.. I was expecting that. Your code please.. You have heap corruption. It could be anywhere in your code.. I have bisected the triggering compiler option. The one that breaks it is /NODEFUALTLIB. This makes trying the CMake project pointless.\nTurning off optimizations makes it go away, but turning on optimizations and still linking against MSVC*.dll results in a working binary as well. The fault is occurring where the compiler tries to inline memcpy.\nThe current optimizations are: /O2 /Ot /GL /GS- /Gy  /sdl- /NODEFAULTLIB. Nevermind. I messed up memcpy pretty bad. I'm shocked it worked with optimizations off.. ",
    "S8Cloud": "Actually it can be built successfully with your eustas/ngx_brotli and old google/brotli github version as it is just the same as googlesource brotli.\nSo I think the problem may comes from newer version of google/brotli (github version).. Changed org_brotli into commit 29dc2cce9090d6c92c908116e11373bc7fdc8ad1\nStarting local Bazel server and connecting to it...\n................\nERROR: /root/nginx-bazel/BUILD:1432:1: error loading package '@org_brotli//': Extension file not found. Unable to load package for '@io_bazel_rules_go//go:def.bzl': The repository could not be resolved and referenced by '//:nginx-google-copyright'                                                                          \nERROR: Analysis of target '//:nginx-google.deb' failed; build aborted: error loading package '@org_brotli//': Extension file not found. Unable to load package for '@io_bazel_rules_go//go:def.bzl': The repository could not be resolved\nINFO: Elapsed time: 19.702s                                                                                \nINFO: 0 processes.                                                                                         \nFAILED: Build did NOT complete successfully (15 packages loaded)                                           \n    currently loading: @org_brotli//. Thank you for your great work, commit 03c34704c98ff62e230e26b5071fe46db97308eb works well with latest build of bazel!. ",
    "denji": "google/brotli@b8eb5bf\n[c/dec/bit_reader.h:240]: (warning) %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'.\n[c/dec/decode.c:519]: (warning) %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'.\n[c/dec/decode.c:519]: (warning) %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'.\n[c/dec/decode.c:563]: (warning) %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'.\n[c/dec/decode.c:563]: (warning) %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'.\n[c/dec/decode.c:563]: (warning) %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'.\n[c/dec/decode.c:835]: (warning) %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'.\n[c/enc/backward_references_hq.c:576]: (warning) Possible null pointer dereference: nodes\n[c/enc/backward_references_hq.c:673]: (warning) Possible null pointer dereference: nodes\n[c/enc/backward_references_hq.c:674]: (warning) Possible null pointer dereference: nodes\n[c/enc/block_splitter_inc.h:224]: (warning) Possible null pointer dereference: block_lengths\n[c/enc/block_splitter_inc.h:403] -> [c/enc/block_splitter_inc.h:17]: (warning) Either the condition '(num_histograms)>0' is redundant or there is division by zero at line 17.\n[c/enc/block_splitter_inc.h:403] -> [c/enc/block_splitter_inc.h:54]: (warning) Either the condition '(num_histograms)>0' is redundant or there is division by zero at line 54.. ",
    "schroederc": "Done.  PTAL.. ",
    "Johnex": "You can download the demo of Parallel Studio XE :D, and they also have an open source program. If you apply this project im sure they would accept and send you a free license.. https://software.intel.com/en-us/qualify-for-free-software/opensourcecontributor. Since its just to make the project compile and not for commercial use as in binaries etc, im sure that would be ok. I don't think it would take you more than 7 days to see whats wrong either.\nI might be able to set up a VM with my license if you can't figure it out, let me know.. You are not able to just download the trial version of Parallel Studio XE? I think it was 7 day trial, enough to check cmake issues?. I'm pretty sure you would see the issue in a Windows VM running in Linux.. The command is icl, and replacing icc with icl just outputted the file contents, did nothing. Here is the help for icl:\n```\nicl /help\nIntel(R) C++ Intel(R) 64 Compiler for applications running on IA-32, Version 19.0.0.117 Build 20180804\nCopyright (C) 1985-2018 Intel Corporation.  All rights reserved.\n                      Intel(R) C++ Compiler Help\n                      ==========================\n\nIntel(R) Compiler includes compiler options that optimize for instruction\n  sets that are available in both Intel(R) and non-Intel microprocessors, but\n  may perform additional optimizations for Intel microprocessors than for\n  non-Intel microprocessors.  In addition, certain compiler options for\n  Intel(R) Compiler are reserved for Intel microprocessors.  For a detailed\n  description of these compiler options, including the instructions they\n  implicate, please refer to \"Intel(R) Compiler User and Reference Guides >\n  Compiler Options.\"\nusage: icl [options] file1 [file2 ...] [/link linker_options]\n where options represents zero or more compiler options\n\n fileN is a C/C++ source (.c .cc .cpp .cxx .i), assembly (.asm),\n object (.obj), static library (.lib), or other linkable file\n linker_options represents zero or more linker options\n\nNotes\n\n\nMost Microsoft Visual C++ compiler options are supported; a warning is\n   printed for most unsupported options.  The precise behavior of performance\n   options does not always match that of the Microsoft Visual C++ compiler.\n\n\nIntel C++ compiler options may be placed in your icl.cfg file.\n\n\nMost options beginning with /Q are specific to the Intel C++ compiler:\n   (I) indicates other options specific to the Intel C++ compiler\n   (M) indicates /Q options supported by the Microsoft Visual C++ compiler\n\n\nSome options listed are only available on a specific system\n   i32    indicates the feature is available on systems based on IA-32\n          architecture\n   i64em  indicates the feature is available on systems using Intel(R) 64\n          architecture\n                         Compiler Option List\n                         --------------------\n\nOptimization\n/O1       optimize for maximum speed, but disable some optimizations which\n          increase code size for a small speed benefit\n/O2       optimize for maximum speed (DEFAULT)\n/O3       optimize for maximum speed and enable more aggressive optimizations\n          that may not improve performance on some programs\n/Ox       enable maximum optimizations (same as /O2)\n/Os       enable speed optimizations, but disable some optimizations which\n          increase code size for small speed benefit (overrides /Ot)\n/Ot       enable speed optimizations (overrides /Os)\n/Od       disable optimizations\n/Oi[-]    enable/disable inline expansion of intrinsic functions\n/Oy[-]    enable/disable using EBP as a general purpose register (no frame\n          pointer) (i32 only)\n/Oa[-]    assume no aliasing in program\n/Ow[-]    assume no aliasing within functions, but assume aliasing across calls\n/Qno-builtin-\n          disable the  intrinsic\n/Qprotect-parens[-]\n          enable/disable(DEFAULT) a reassociation optimization for REAL\n[press RETURN to continue]\n          and COMPLEX expression evaluations by not honoring parenthesis\nCode Generation\n/Qx\n          generate specialized code to run exclusively on processors\n          indicated by  as described below\n            SSE2    May generate Intel(R) SSE2 and SSE instructions for Intel\n                    processors.  Optimizes for the Intel NetBurst(R)\n                    microarchitecture.\n            SSE3    May generate Intel(R) SSE3, SSE2, and SSE instructions for\n                    Intel processors.  Optimizes for the enhanced Pentium(R) M\n                    processor microarchitecture and Intel NetBurst(R)\n                    microarchitecture.\n            SSSE3   May generate Intel(R) SSSE3, SSE3, SSE2, and SSE\n                    instructions for Intel processors.  Optimizes for the\n                    Intel(R) Core(TM) microarchitecture.\n            SSE4.1  May generate Intel(R) SSE4 Vectorizing Compiler and Media\n                    Accelerator instructions for Intel processors.  May\n                    generate Intel(R) SSSE3, SSE3, SSE2, and SSE instructions\n                    and it may optimize for Intel(R) 45nm Hi-k next generation\n                    Intel Core(TM) microarchitecture.\n            SSE4.2  May generate Intel(R) SSE4 Efficient Accelerated String\n                    and Text Processing instructions supported by Intel(R)\n                    Core(TM) i7 processors.  May generate Intel(R) SSE4\n                    Vectorizing Compiler and Media Accelerator, Intel(R) SSSE3,\n                    SSE3, SSE2, and SSE instructions and it may optimize for\n                    the Intel(R) Core(TM) processor family.\n            AVX     May generate Intel(R) Advanced Vector Extensions (Intel(R)\n                    AVX), Intel(R) SSE4.2, SSE4.1, SSSE3, SSE3,\n                    SSE2, and SSE instructions for Intel(R) processors.\n            CORE-AVX2\n                    May generate Intel(R) Advanced Vector Extensions 2\n                    (Intel(R) AVX2), Intel(R) AVX, SSE4.2, SSE4.1, SSSE3, SSE3,\n                    SSE2, and SSE instructions for Intel(R) processors.\n            CORE-AVX-I\n                    May generate Intel(R) Advanced Vector Extensions (Intel(R)\n                    AVX), including instructions in Intel(R) Core 2(TM)\n                    processors in process technology smaller than 32nm,\n                    Intel(R) SSE4.2, SSE4.1, SSSE3, SSE3, SSE2, and SSE\n                    instructions for Intel(R) processors.\n            ATOM_SSE4.2\n                    May generate MOVBE instructions for Intel(R) processors,\n                    depending on the setting of option /Qinstruction.\n                    May also generate Intel(R) SSE4.2, SSE3, SSE2, and SSE\n                    instructions for Intel processors. Optimizes for Intel(R)\n                    Atom(TM) processors that support Intel(R) SSE4.2 and MOVBE\n                    instructions.\n            ATOM_SSSE3\n                    May generate MOVBE instructions for Intel(R) processors,\n                    depending on the setting of option /Qinstruction.\n                    May also generate Intel(R) SSSE3, SSE3, SSE2, and SSE\n                    instructions for Intel processors. Optimizes for the\n                    Intel(R) Atom(TM) processor that support Intel(R) SSE\n                    and MOVBE instructions.\n            MIC-AVX512\n                    May generate Intel(R) Advanced Vector Extensions 512\n                    (Intel(R) AVX-512) Foundation instructions, Intel(R)\n                    AVX-512 Conflict Detection instructions, Intel(R) AVX-512\n                    Exponential and Reciprocal instructions, Intel(R) AVX-512\n                    Prefetch instructions for Intel(R) processors, and the\n                    instructions enabled with CORE-AVX2. Optimizes for Intel(R)\n[press RETURN to continue]\n                    processors that support Intel(R) AVX-512 instructions.\n            KNM\n                    May generate Quad Fused Multiply Add (QFMA) and Quad\n                    Virtual Neural Network Instruction (QVNNI) and the\n                    instructions enabled with MIC-AVX512. Optimizes for\n                    Intel(R) Xeon Phi(TM) product family processor code named\n                    Knights Mill.\n            CORE-AVX512\n                    May generate Intel(R) Advanced Vector Extensions 512\n                    (Intel(R) AVX-512) Foundation instructions, Intel(R)\n                    AVX-512 Conflict Detection instructions, Intel(R) AVX-512\n                    Doubleword and Quadword instructions, Intel(R) AVX-512\n                    Byte and Word instructions and Intel(R) AVX-512 Vector\n                    Length Extensions for Intel(R) processors, and the\n                    instructions enabled with CORE-AVX2. Optimizes for Intel(R)\n                    processors that support Intel(R) AVX-512 instructions.\n            COMMON-AVX512\n                    May generate Intel(R) Advanced Vector Extensions 512\n                    (Intel(R) AVX-512) Foundation instructions, Intel(R)\n                    AVX-512 Conflict Detection instructions, as well as the\n                    instructions enabled with CORE-AVX2. Optimizes for Intel(R)\n                    processors that support Intel(R) AVX-512 instructions.\n            BROADWELL\n            CANNONLAKE\n            HASWELL\n            ICELAKE-CLIENT (or ICELAKE)\n            ICELAKE-SERVER\n            IVYBRIDGE\n            KNL\n            KNM\n            SANDYBRIDGE\n            SILVERMONT\n            GOLDMONT\n            GOLDMONT-PLUS\n            TREMONT\n            SKYLAKE\n            SKYLAKE-AVX512\n                    May generate instructions for processors that support the\n                    specified Intel(R) microarchitecture code name. Optimizes\n                    for Intel(R) processors that support the specified Intel(R)\n                    microarchitecture code name.\n                    Keywords KNL and SILVERMONT are only available on Windows\n                    and Linux systems.\n/QxHost   generate instructions for the highest instruction set and processor\n          available on the compilation host machine\n/Qax[,,...]\n          generate code specialized for processors specified by \n          while also generating generic IA-32 instructions.\n           includes one or more of the following:\n            SSE2    May generate Intel(R) SSE2 and SSE instructions for Intel\n                    processors.\n            SSE3    May generate Intel(R) SSE3, SSE2, and SSE instructions for\n                    Intel processors.\n            SSSE3   May generate Intel(R) SSSE3, SSE3, SSE2, and SSE\n                    instructions for Intel processors.\n            SSE4.1  May generate Intel(R) SSE4.1, SSSE3, SSE3, SSE2, and SSE\n                   instructions for Intel processors.\n            SSE4.2  May generate Intel(R) SSE4.2, SSE4.1, SSSE3, SSE3, SSE2,\n                    and SSE instructions for Intel processors.\n            AVX     May generate Intel(R) Advanced Vector Extensions (Intel(R)\n                    AVX), Intel(R) SSE4.2, SSE4.1, SSSE3, SSE3,\n                    SSE2, and SSE instructions for Intel(R) processors.\n            CORE-AVX2\n[press RETURN to continue]\n                    May generate Intel(R) Advanced Vector Extensions 2\n                    (Intel(R) AVX2), Intel(R) AVX, SSE4.2, SSE4.1, SSSE3, SSE3,\n                    SSE2, and SSE instructions for Intel(R) processors.\n            CORE-AVX-I\n                    May generate Intel(R) Advanced Vector Extensions (Intel(R)\n                    AVX), including instructions in Intel(R) Core 2(TM)\n                    processors in process technology smaller than 32nm,\n                    Intel(R) SSE4.2, SSE4.1, SSSE3, SSE3, SSE2, and SSE\n                    instructions for Intel(R) processors.\n            CORE-AVX512\n                    May generate Intel(R) Advanced Vector Extensions 512\n                    (Intel(R) AVX-512) Foundation instructions, Intel(R)\n                    AVX-512 Conflict Detection instructions, Intel(R) AVX-512\n                    Doubleword and Quadword instructions, Intel(R) AVX-512\n                    Byte and Word instructions and Intel(R) AVX-512 Vector\n                    Length Extensions for Intel(R) processors, and the\n                    instructions enabled with CORE-AVX2.\n            BROADWELL\n            CANNONLAKE\n            HASWELL\n            ICELAKE-CLIENT (or ICELAKE)\n            ICELAKE-SERVER\n            IVYBRIDGE\n            KNL\n            KNM\n            SANDYBRIDGE\n            SILVERMONT\n            GOLDMONT\n            GOLDMONT-PLUS\n            TREMONT\n            SKYLAKE\n            SKYLAKE-AVX512\n                    May generate instructions for processors that support the\n                    specified Intel(R) microarchitecture code name. Optimizes\n                    for Intel(R) processors that support the specified Intel(R)\n                    microarchitecture code name.\n                    Keywords KNL and SILVERMONT are only available on Windows\n                    and Linux systems.\n        MIC-AVX512\n                May generate Intel(R) Advanced Vector Extensions 512\n                (Intel(R) AVX-512) Foundation instructions, Intel(R)\n                AVX-512 Conflict Detection instructions, Intel(R) AVX-512\n                Exponential and Reciprocal instructions, Intel(R) AVX-512\n                Prefetch instructions for Intel(R) processors, and the\n                instructions enabled with CORE-AVX2.\n        KNM\n                May generate Quad Fused Multiply Add (QFMA) and Quad\n                Virtual Neural Network Instruction (QVNNI) and the\n                instructions enabled with MIC-AVX512\n\n/arch:\n          generate specialized code to optimize for processors indicated by\n           as described below\n            BROADWELL\n            CANNONLAKE\n            HASWELL\n            ICELAKE-CLIENT (or ICELAKE)\n            ICELAKE-SERVER\n            IVYBRIDGE\n            KNL\n            KNM\n            SANDYBRIDGE\n            SILVERMONT\n[press RETURN to continue]\n            GOLDMONT\n            GOLDMONT-PLUS\n            TREMONT\n            SKYLAKE-AVX512\n            SKYLAKE    May generate instructions for processors that support\n                       the specified Intel(R) microarchitecture code name\n            CORE-AVX2  May generate Intel(R) Advanced Vector Extensions 2\n                       (Intel(R) AVX2), Intel(R) AVX, SSE4.2, SSE4.1, SSE3,\n                       SSE2, SSE, and SSSE3 instructions\n            CORE-AVX-I May generate Float-16 conversion instructions and the\n                       RDRND instruction, Intel(R) Advanced Vector Extensions\n                       (Intel(R) AVX), Intel(R) SSE4.2, SSE4.1, SSE3, SSE2,\n                       SSE, and SSSE3 instructions\n            AVX        May generate Intel(R) AVX, SSE4.2, SSE4.1, SSSE3, SSE3,\n                       SSE2 and SSE instructions\n            SSE4.2     May generate Intel(R) SSE4.2, SSE4.1, SSSE3, SSE3, SSE2\n                       and SSE instructions\n            SSE4.1     May generate Intel(R) SSE4.1, SSSE3, SSE3, SSE2 and SSE\n                       instructions\n            SSSE3      May generate Intel(R) SSSE3, SSE3, SSE2 and SSE\n                       instructions\n            SSE3       May generate Intel(R) SSE3, SSE2 and SSE instructions\n            SSE2       May generate Intel(R) SSE2 and SSE instructions\n            SSE        same as /arch:IA32\n            IA32       generates x86/x87 generic code that is compatible with\n                       IA-32 architecture.  Disables any default extended\n                       instruction settings and any previously set extended\n                       instruction settings\n/tune:\n          optimize for a specific \n            generic    - Optimizes code for the compiler's default behavior\n            broadwell\n            haswell\n            ivybridge\n            knl\n            knm\n            sandybridge\n            silvermont\n            cannonlake\n            icelake\n            skylake-avx512\n            skylake    - Optimizes code for processors that support the\n                         specified Intel(R) microarchitecture code name.\n                         knl and silvermont are only available on Windows and\n                         Linux systems\n            core-avx2  - Optimizes code for processors that support Intel(R)\n                         Advanced Vector Extensions 2 (Intel(R) AVX2), Intel(R)\n                         AVX, SSE4.2 SSE4.1, SSE3, SSE2, SSE, and SSSE3\n                         instructions\n            core-avx-i - Optimizes code for processors that support Float-16\n                         conversion instructions and the RDRND instruction,\n                         Intel(R) Advanced Vector Extensions (Intel(R) AVX),\n                         Intel(R) SSE4.2, SSE4.1, SSE3, SSE2, SSE, and SSSE3\n                         instructions\n            corei7-avx - Optimizes code for processors that support Intel(R)\n                         Advanced Vector Extensions (Intel(R) AVX), Intel(R)\n                         SSE4.2, SSE4.1, SSE3, SSE2, SSE, and SSSE3\n                         instructions\n            corei7     - Optimizes code for processors that support Intel(R)\n                         SSE4 Efficient Accelerated String and Text Processing\n                         instructions. May also generate code for Intel(R) SSE4\n                         Vectorizing Compiler and Media Accelerator, Intel(R)\n                         SSE3, SSE2, SSE, and SSSE3 instructions\n[press RETURN to continue]\n            atom       - Optimizes code for processors that support MOVBE\n                         instructions, depending on the setting of option\n                         -minstruction (Linux and macOS*) or /Qinstruction\n                         (Windows). May also generate code for SSSE3\n                         instructions and Intel(R) SSE3, SSE2, and SSE\n                         instructions\n            core2      - Optimizes for the Intel(R) Core(TM) 2 processor\n                         family, including support for MMX(TM), Intel(R) SSE,\n                         SSE2, SSE3, and SSSE3 instruction sets.\n            pentium-mmx - Optimizes for Intel(R) Pentium(R) with MMX technology\n            pentiumpro - Optimizes for Intel(R) Pentium(R) Pro, Intel Pentium\n                         II, and Intel Pentium III processors\n            pentium4m  - Optimizes for Intel(R) Pentium(R) 4 processors with\n                         MMX technology\n            pentium-m\n            pentium4\n            pentium3\n            pentium    - Optimizes code for Intel(R) Pentium(R) processors.\n                         Value pentium3 is only available on Linux systems\n/Qinstruction:\n          Refine instruction set output for the selected target processor\n        [no]movbe  - Do/do not generate MOVBE instructions with ATOM_SSSE3\n                      (requires /QxATOM_SSSE3)\n\n/GR[-]    enable/disable C++ RTTI\n/Qcxx-features\n          enable standard C++ features (/GX /GR)\n/EHa      enable asynchronous C++ exception handling model\n/EHs      enable synchronous C++ exception handling model\n/EHc      assume extern \"C\" functions do not throw exceptions\n/Qsafeseh[-]\n          Registers exceptions for safe exception handling (DEFAULT)\n/Gd       make __cdecl the default calling convention\n/Gr       make __fastcall the default calling convention\n/Gz       make __stdcall the default calling convention\n/Qregcall\n          make __regcall the default calling convention\n/Gv       make __vectorcall the default calling convention\n/guard:cf\n          enable control flow protection mechanism\n/hotpatch[:n]\n          generate padding bytes for function entries to enable image\n          hotpatching. If specified, use 'n' as the padding.\n/Qextend-arguments:[32|64]\n          By default, unprototyped scalar integer arguments are passed\n          in 32-bits (sign-extended if necessary).\n          On Intel(R) 64, unprototyped scalar integer arguments may be\n          extended to 64-bits.\n/Qm32     generate code for IA-32 architecture\n/Qm64     generate code for Intel(R) 64 architecture\n/Qstringop-strategy:\n          Override the internal decision heuristic for the particular algorithm\n          to use for inlining string operations. The allowed values for :\n            rep             - Expand using 1 \"rep\" prefix (DEFAULT for /Os)\n            const_size_loop - Expand into an inline loop when size is known at\n                              compile time (DEFAULT)\n            libcall         - Always use a library call.\n/Qstringop-inline-threshold:\n          inline calls to memcall-like (memcpy, memset) functions when the\n          number of bytes the functions handle are known at compile time and\n          less than \n/Qcf-protection[:]\n[press RETURN to continue]\n          Enables Control-flow Enforcement Technology (CET) protection, which\n          defends your program from certain attacks that exploit\n          vulnerabilities.\n            shadow_stack    - Enables shadow stack protection\n            branch_tracking - Enables endbranch (EB) generation\n            full            - Enables both shadow stack protection and\n                              endbranch (EB) generation (same as no )\n            none            - Disables Control-flow Enforcement Technology\n                              protection\nInterprocedural Optimization (IPO)\n/Qip[-]   enable(DEFAULT)/disable single-file IP optimization\n          within files\n/Qipo[n]  enable multi-file IP optimization between files\n/Qipo-c   generate a multi-file object file (ipo_out.obj)\n/Qipo-S   generate a multi-file assembly file (ipo_out.asm)\n/Qip-no-inlining\n          disable full and partial inlining\n/Qip-no-pinlining\n          disable partial inlining\n/Qipo-separate\n          create one object file for every source file (overrides /Qipo[n])\n/Qipo-jobs\n          specify the number of jobs to be executed simultaneously during the\n          IPO link phase\nAdvanced Optimizations\n/Qunroll[n]\n          set maximum number of times to unroll loops.  Omit n to use default\n          heuristics.  Use n=0 to disable the loop unroller\n/Qunroll-aggressive[-]\n          enables more aggressive unrolling heuristics\n/Qopt-args-in-regs:\n          Determines whether calls to routines are optimized by passing\n          arguments in registers instead of on the stack.\n          keywords: none, seen(DEFAULT), all(Linux only)\n/Qscalar-rep[-]\n          enable(DEFAULT)/disable scalar replacement (requires /O3)\n/Qansi-alias[-]\n          enable(DEFAULT)/disable use of ANSI aliasing rules optimizations;\n          user asserts that the program adheres to these rules\n/Qansi-alias-check[-]\n          enable(DEFAULT)/disable ANSI alias checking when using /Qansi-alias\n/Qcomplex-limited-range[-]\n          enable/disable(DEFAULT) the use of the basic algebraic expansions of\n          some complex arithmetic operations.  This can allow for some\n          performance improvement in programs which use a lot of complex\n          arithmetic at the loss of some exponent range.\n/Qalias-const[-]\n          enable/disable(DEFAULT) a heuristic stating that if two arguments to\n          a function have pointer type, a pointer to const does not alias a\n          pointer to non-const. Also known as the input/output buffer rule, it\n          assumes that input and output buffer arguments do not overlap.\n/Qalias-args[-]\n          enable(DEFAULT)/disable C/C++ rule that function arguments may be\n          aliased; when disabling the rule, the user asserts that this is safe\n/Qopt-multi-version-aggressive[-]\n          enables more aggressive multi-versioning to check for pointer\n[press RETURN to continue]\n          aliasing and scalar replacement\n/Qopt-ra-region-strategy[:]\n          select the method that the register allocator uses to partition each\n          routine into regions\n            routine - one region per routine\n            block   - one region per block\n            trace   - one region per trace\n            loop    - one region per loop\n            default - compiler selects best option\n/Qvec[-]  enables(DEFAULT)/disables vectorization\n/Qvec-guard-write[-]\n          enables cache/bandwidth optimization for stores under conditionals\n          within vector loops\n/Qvec-threshold[n]\n          sets a threshold for the vectorization of loops based on the\n          probability of profitable execution of the vectorized loop in\n          parallel\n/Qvecabi:\n          select vector function ABI\n            legacy - use the legacy vector function ABI\n            compat - use the compatibility vector function ABI (DEFAULT)\n            cmdtarget - generate an extended set of vector functions\n/Qopt-malloc-options:{0|1|2|3|4}\n          specify malloc configuration parameters.  Specifying a non-zero \n          value will cause alternate configuration parameters to be set for\n          how malloc allocates and frees memory\n/Qopt-jump-tables:\n          control the generation of jump tables\n            default - let the compiler decide when a jump table, a series of\n                      if-then-else constructs or a combination is generated\n            large   - generate jump tables up to a certain pre-defined size\n                      (64K entries)\n                 - generate jump tables up to  in size\n          use /Qopt-jump-tables- to lower switch statements as chains of\n          if-then-else constructs\n/Qopt-block-factor:\n          specify blocking factor for loop blocking\n/Qfreestanding\n          compile in a freestanding environment where the standard library\n          may not be present\n/Qopt-streaming-stores:\n          specifies whether streaming stores are generated\n            always - enables generation of streaming stores under the\n                     assumption that the application is memory bound.  Also,\n                     the user is responsible for inserting the right memory\n                     fences for synchronization\n            auto   - compiler decides when streaming stores are used (DEFAULT)\n            never  - disables generation of streaming stores\n/Qipp[:]\n          link some or all of the Intel(R) Integrated Performance Primitives\n          (Intel(R) IPP) libraries and bring in the associated headers\n            common        - link using the main libraries set.  This is the\n                            default value when /Qipp is specified\n            crypto        - link using the main libraries set and the crypto\n                            library\n/Qipp-link:\n          choose whether to link with static or dynamic libraries to support\n          Intel(R) Integrated Performance Primitives (Intel(R) IPP)\n            dynamic       - link using the dynamic libraries set.  This is the\n                            default value when /Qipp is specified on Windows\n            static        - link using the static libraries set.  This is the\n                            default value when /Qipp is specified on Linux\n[press RETURN to continue]\n/Qmkl[:]\n          link to the Intel(R) Math Kernel Library (Intel(R) MKL) and bring\n          in the associated headers\n            parallel   - link using the threaded Intel(R) MKL libraries. This\n                         is the default when /Qmkl is specified\n            sequential - link using the non-threaded Intel(R) MKL libraries\n            cluster    - link using the Intel(R) MKL Cluster libraries plus\n                         the sequential Intel(R) MKL libraries\n/Qtbb     link to the Intel(R) Threading Building Blocks (Intel(R) TBB)\n          libraries and bring in the associated headers\n/Qdaal[:]\n          link to the Intel(R) Data Analytics Acceleration Library (Intel(R)\n          DAAL) libraries and bring in the associated headers\n            parallel   - link using the threaded Intel(R) DAAL (DEFAULT)\n            sequential - link using the non-threaded Intel(R) DAAL\n/Qopt-subscript-in-range[-]\n          assumes no overflows in the intermediate computation of the\n          subscripts\n/Quse-intel-optimized-headers[-]\n          take advantage of the optimized header files\n/Qvla[-]  enable/disable(DEFAULT) Variable Length Arrays (C99 feature)\n/Qintel-extensions[-]\n          enable(DEFAULT)/disable C/C++ language extensions such as array\n          notation, Intel(R) Cilk(TM) Plus language extensions, and\n          support for decimal floating-point types.\n/Qopt-matmul[-]\n          replace matrix multiplication with calls to intrinsics and threading\n          libraries for improved performance (DEFAULT at /O3 /Qparallel)\n/Qsimd[-]\n          enables(DEFAULT)/disables vectorization using simd pragma\n/Qsimd-function-pointers[-]\n          enables/disables(DEFAULT) pointers to simd-enabled functions\n/Qguide-opts:\n          tells the compiler to analyze certain code and generate\n          recommendations that may improve optimizations\n/Qguide-file[:]\n          causes the results of guide to be output to a file\n/Qguide-file-append[:]\n          causes the results of guide to be appended to a file\n/Qguide[:]\n          lets you set a level (1 - 4) of guidance for auto-vectorization,\n          auto-parallelization, and data transformation (DEFAULT is 4 when the\n          option is specified)\n/Qguide-data-trans[:]\n          lets you set a level (1 - 4) of guidance for data transformation\n          (DEFAULT is 4 when the option is specified)\n/Qguide-par[:]\n          lets you set a level (1 - 4) of guidance for auto-parallelization\n          (DEFAULT is 4 when the option is specified)\n/Qguide-vec[:]\n          lets you set a level (1 - 4) of guidance for auto-vectorization\n          (DEFAULT is 4 when the option is specified)\n/Qguide-profile:<[file|dir]>[,[file|dir],...]\n          specify a loop profiler data file (or set of files in a directory)\n          when using the /Qguide option\n/Qopt-mem-layout-trans[:]\n          controls the level of memory layout transformations performed by the\n          compiler\n           0 - disable memory layout transformations (same as\n               /Qopt-mem-layout-trans-)\n           1 - enable basic memory layout transformations\n           2 - enable more memory layout transformations  (DEFAULT when the\n[press RETURN to continue]\n               option is specified)\n           3 - enable aggressive memory layout transformations\n/Qopt-prefetch[:n]\n          enable levels of prefetch insertion, where 0 disables.\n          n may be 0 through 5 inclusive.  Default is 2.\n/Qopt-prefetch-\n          disable(DEFAULT) prefetch insertion.  Equivalent to /Qopt-prefetch:0\n/Qopt-prefetch-distance:n1[,n2]\n          specify the prefetch distance (how many iterations ahead, use n1 and\n          n2 values such that n1>=n2) to be used for compiler generated\n          prefetches inside loops.  n1 indicates distance from memory to L2\n          cache and n2 indicates distance from L2 to L1.\n/Qopt-prefetch-issue-excl-hint\n          generates PrefetchW instruction for Intel(R) microarchitecture\n          code name Broadwell processors and beyond when /Qopt-prefetch\n          is also used\n/Qopt-dynamic-align\n          enable(DEFAULT) dynamic data alignment optimizations.  Specify\n          /Qopt-dynamic-align- to disable\n/Qalign-loops[:n]\n          specify code alignment of loops to improve performance.\n          n is the number of bytes for the minimum alignment boundary.  It must\n          be a power of 2 between 1 and 4096.  If n is not present, an\n          alignment of 16 bytes is used.\n          Use of /Qalign-loops- (DEFAULT) sets alignment to 1.\n/Qopt-zmm-usage:\n          Specifies the level of zmm registers usage.  You can specify one of\n          the following:\n            low  - Tells the compiler that the compiled program is unlikely to\n                   benefit from zmm registers usage. It specifies that the\n                   compiler should avoid using zmm registers unless it can\n                   prove the gain from their usage.\n            high - Tells the compiler to generate zmm code without restrictions\n/Qoverride-limits\n          provides a way to override certain internal compiler limits that are\n          intended to prevent excessive memory usage or compile times for very\n          large, complex compilation units.\nProfile Guided Optimization (PGO)\n/Qprof-dir \n          specify directory for profiling output files (.dyn and .dpi)\n/Qprof-src-root \n          specify project root directory for application source files to\n          enable relative path resolution during profile feedback on sources\n          below that directory\n/Qprof-src-root-cwd\n          specify the current directory as the project root directory for\n          application source files to enable relative path resolution during\n          profile feedback on sources below that directory\n/Qprof-src-dir[-]\n          specify whether directory names of sources should be\n          considered when looking up profile records within the .dpi file\n/Qprof-file \n          specify file name for profiling summary file\n/Qprof-data-order[-]\n          enable/disable(DEFAULT) static data ordering with profiling\n/Qprof-func-order[-]\n          enable/disable(DEFAULT) function ordering with profiling\n/Qprof-gen[:keyword[,keyword]]\n          instrument program for profiling.  Optional keywords are as follows.\n            default    - Produces an instrumented object file. This is the same\n[press RETURN to continue]\n                         as specifying the /Qprof-gen option with no keyword.\n            srcpos     - Produces an instrumented object file and information\n                         needed for using the code coverage tool.\n            globdata   - Produces an instrumented object file that includes\n                         information for global data layout.\n            threadsafe - Collects PGO data with guards for threaded\n                         applications.\n/Qprof-gen-\n          disable profiling instrumentation\n/Qprof-use[:]\n          enable use of profiling information during optimization\n            weighted  - invokes profmerge with -weighted option to scale data\n                        based on run durations\n            [no]merge - enable(default)/disable the invocation of the profmerge\n                        tool\n/Qprof-use-\n          disable use of profiling information during optimization\n/Qcov-gen\n          instrument program for profiling.  Use /Qcov-gen- to disable\n/Qcov-dir \n          specify directory for profiling output files (.dyn and .dpi)\n/Qcov-file \n          specify file name for profiling summary file\n/Qfnsplit[:]\n          enable function splitting (enabled with /Qprof-use for IA-32 Windows)\n            n - positive integer indicating the threshold number.  The blocks\n                can be placed into a different code segment if their\n                execution probability is less than the specified value of\n                range 0 <= n <= 100\n          use /Qfnsplit- to disable\n/Qinstrument-functions[-]\n          determine whether function entry and exit points are instrumented\n/Qprof-hotness-threshold:\n          set the hotness threshold for function grouping and function ordering\n          val indicates percentage of functions to be placed in hot region.\n          This option requires /Qprof-use\n           and /Qprof-func-order\n/Qprof-value-profiling:[,,...]\n          limit value profiling\n            none      - inhibit all types of value profiling\n            nodivide  - inhibit value profiling of non-compile time constants\n                        used in division or remainder operations\n            noindcall - inhibit value profiling of function addresses at\n                        indirect call sites\n/Qprofile-functions\n          enable instrumentation in generated code for collecting\n          function execution time profiles\n/Qprofile-loops:\n          enable instrumentation in generated code for collecting\n          loop execution time profiles\n             inner    - instrument inner loops\n             outer    - instrument outer loops\n             all      - instrument all loops\n/Qprofile-loops-report:\n          Control the level of instrumentation inserted for reporting loop\n          execution profiles\n             1    - report loop times\n             2    - report loop times and iteration counts\nOptimization Reports\n[press RETURN to continue]\n/Qopt-report[:n]\n          generate an optimization report. Default destination is\n          .optrpt.  Levels of 0 - 5 are valid.\n          Please see documentation for additional details of\n          information provided by phase per level.\n            0   disable optimization report output\n            2   DEFAULT when enabled\n/Qopt-report-file:[stdout | stderr | ]\n          specify the filename or output stream for the generated report\n/Qopt-report-stdout\n          specify the generated report should be directed to stdout\n/Qopt-report-per-object\n          specify the generated report should be directed to a .optrpt file\n          in the output directory (DEFAULT when another destination for the\n          report is not specified)\n/Qopt-report-phase:[,,...]\n          specify one or more phases that reports are generated against\n/Qopt-report-routine:[,,...]\n          restrict the report to routines containing the given name\n/Qopt-report-filter:\n          restricts the opt-report to specific files, routines or line\n          number ranges. Refer to the documentation for the specific\n          syntax of parameter string.\n/Qopt-report-format:[text|vs]\n          specify the output format to be used for the opt-report as either\n          plain text or a format for use in the Microsoft* Visual Studio IDE\n/Qopt-report-embed[-]\n          When enabled, if an assembly file is being generated, special loop\n          info annotations will be emitted in the assembly file.  If an object\n          file/executable is being generated, these will be emitted into the\n          object file/executable for use by the Intel VTune Amplifier\n          application. Automatically enabled when symbolic debug information\n          is enabled.\n/Qopt-report-help\n          display the optimization phases available for reporting\n/Qopt-report-names:\n          Specifies whether mangled or unmangled names should appear in the\n          optimization report.\n            mangled   - use mangled names\n            unmangled - use unmangled names (DEFAULT)\n/Qopt-report-annotate[:]\n          Annotate source files with optimization reports in specified format\n            html - annotate in HTML format\n            text - annotate in text format (DEFAULT)\n/Qopt-report-annotate-position:\n          Specify the site where loop related optimization reports appear in\n          the annotated source for inlined routines\n            caller - annotate at caller site\n            callee - annotate at callee site\n            both   - annotate at both caller and callee site\n/Qtcheck[:mode]\n          enable analysis of threaded applications (requires Intel(R) Thread\n          Checker; cannot be used with compiler alone)\n            tci - instruments a program to perform a thread-count-independent\n                  analysis\n            tcd - instruments a program to perform a thread-count-dependent\n                  analysis (DEFAULT when mode is not used)\n            api - instruments a program at the api-imports level\n/Qtcollect[:]\n          inserts instrumentation probes calling the Intel(R) Trace Collector\n          API.  The library .lib is linked in the default being VT.lib\n          (requires Intel(R) Trace Collector)\n/Qtcollect-filter:file\n[press RETURN to continue]\n          Enable or disable the instrumentation of specified functions.\n          (requires Intel(R) Trace Collector)\nOpenMP* and Parallel Processing\n/Qopenmp  enable the compiler to generate multi-threaded code based on the\n          OpenMP directives (same as /openmp)\n          Use /Qopenmp- to disable\n/Qopenmp-stubs\n          enables the user to compile OpenMP programs in sequential mode.  The\n          OpenMP directives are ignored and a stub OpenMP library is linked\n          (sequential)\n/Qopenmp-lib:\n          choose which OpenMP library version to link with\n            compat - use the Microsoft compatible OpenMP run-time libraries\n                     (DEFAULT)\n/Qopenmp-threadprivate:\n          choose which threadprivate implementation to use\n            compat - use the Microsoft compatible thread local storage\n            legacy - use the Intel compatible implementation\n                     (DEFAULT)\n/Qparallel\n          enable the auto-parallelizer to generate multi-threaded code for\n          loops that can be safely executed in parallel\n/Qpar-threshold[n]\n          set threshold for the auto-parallelization of loops where n is an\n          integer from 0 to 100\n/Qpar-runtime-control[n]\n          Control parallelizer to generate runtime check code for effective\n          automatic parallelization.\n            n=0    no runtime check based auto-parallelization\n            n=1    generate runtime check code under conservative mode\n                   (DEFAULT when enabled)\n            n=2    generate runtime check code under heuristic mode\n            n=3    generate runtime check code under aggressive mode\n/Qpar-schedule-static[:n]\n          Specifies a scheduling algorithm for DO loop iteration.\n          Divides iterations into contiguous pieces.  Size n if\n          specified, equal sized pieces if not.\n/Qpar-schedule-static-balanced[:n]\n          Divides iterations into even-sized chunks.  Size n if\n          specified, equal sized pieces if not.\n/Qpar-schedule-static-steal[:n]\n          Divides iterations into even-sized chunks, but allows\n          threads to steal parts of chunks from neighboring threads\n/Qpar-schedule-dynamic[:n]\n          Specifies a scheduling algorithm for DO loop iteration.\n          Assigns iterations to threads in chunks dynamically.\n          Chunk size is n iterations if specified, otherwise 1.\n/Qpar-schedule-guided[:n]\n          Specifies a scheduling algorithm for DO loop iteration.\n          Indicates a minimum number of iterations.  If specified,\n          n is the minimum number, otherwise 1.\n/Qpar-schedule-guided-analytical[:n]\n          Divides iterations by using exponential distribution or\n          dynamic distributions.\n/Qpar-schedule-runtime\n          Specifies a scheduling algorithm for DO loop iteration.\n          Defers the scheduling decision until runtime.\n/Qpar-schedule-auto\n          Lets the compiler or run-time system determine the\n          scheduling algorithm.\n[press RETURN to continue]\n/Qpar-adjust-stack\n          perform fiber-based main thread stack adjustment\n/Qpar-affinity=[,...][,][,]\n          tune application performance by setting different thread affinity\n/Qpar-num-threads=\n          tune application performance by setting different number of threads\n/Qparallel-source-info[:n]\n          enable(DEFAULT)/disable the emission of source location information\n          for parallel code generation with OpenMP and auto-parallelization\n            0 - disable (same as /Qparallel-source-info-)\n            1 - emit routine name and line information (DEFAULT)\n            2 - emit path, file, routine name and line information\n/Qpar     same as /Qparallel\n/Qopenmp-simd\n          Enables OpenMP SIMD compilation.  Enabled by default with\n          /Qopenmp.  Use /Qopenmp-simd- to disable.\n/Qopenmp-offload[:]\n          Enables OpenMP* offloading compilation for target pragmas. This\n          option only applies to Intel(R) MIC Architecture.\n          Enabled by default with /Qopenmp.\n          Use /Qopenmp-offload- to disable.\n          Specify kind to specify the default device for target pragmas\n            host - allow target code to run on host system while still doing\n                   the outlining for offload\n            mic  - specify Intel(R) MIC Architecture\nFloating Point\n/fp:\n          enable  floating point model variation\n            except[-] - enable/disable floating point exception semantics\n            fast[=1|2]  - enables more aggressive floating point optimizations\n            precise     - allows value-safe optimizations\n            source      - enables intermediates in source precision\n                          sets /assume:protect_parens for Fortran\n            strict      - enables /fp:precise /fp:except, disables\n                          contractions and enables pragma stdc fenv_access\n            consistent  - enables consistent, reproducible results for\n                          different optimization levels or between different\n                          processors of the same architecture\n            double      - rounds intermediates in 53-bit (double) precision\n            extended    - rounds intermediates in 64-bit (extended) precision\n/Qfp-speculation:\n          enable floating point speculations with the following \n          conditions:\n            fast   - speculate floating point operations (DEFAULT)\n            safe   - speculate only when safe\n            strict - same as off\n            off    - disables speculation of floating-point operations\n/Qpc32    set internal FPU precision to 24 bit significand\n/Qpc64    set internal FPU precision to 53 bit significand (DEFAULT)\n/Qpc80    set internal FPU precision to 64 bit significand\n/Qprec    improve floating-point precision\n/Qprec-sqrt[-]\n          determine if certain square root optimizations are enabled\n/Qprec-div[-]\n          improve precision of FP divides (some speed impact)\n/Qfast-transcendentals[-]\n          generate a faster version of the transcendental functions\n/Qfp-port[-]\n          round fp results at assignments and casts (some speed impact)\n/Qfp-stack-check\n[press RETURN to continue]\n          enable fp stack checking after every function/procedure call\n/Qrcd     rounding mode to enable fast float-to-int conversions\n/Qftz[-]  enable/disable flush denormal results to zero\n/Qfma[-]  enable/disable the combining of floating point multiplies and\n          add/subtract operations\n/Qfp-trap:[,,...]\n          control floating point traps at program start.   can be of the\n          following values\n            [no]divzero   - [Do not] trap on division by zero\n            [no]inexact   - [Do not] trap on inexact result\n            [no]invalid   - [Do not] trap on invalid operation\n            [no]overflow  - [Do not] trap on overflow\n            [no]underflow - [Do not] trap on underflow\n            [no]denormal  - [Do not] trap on denormal\n            all           - enable trap on all of the above\n            none          - trap on none of the above\n            common        - trap on most commonly used IEEE traps\n                            (invalid, division by zero, overflow)\n/Qfp-trap-all:[,,...]\n          control floating point traps in every routine.   can be of the\n          values specified in /Qfp-trap\n/Qimf-absolute-error:value[:funclist]\n          define the maximum allowable absolute error for math library\n          function results\n            value    - a positive, floating-point number conforming to the\n                       format [digits][.digits][{e|E}[sign]digits]\n            funclist - optional comma separated list of one or more math\n                       library functions to which the attribute should be\n                       applied\n/Qimf-accuracy-bits:bits[:funclist]\n          define the relative error, measured by the number of correct bits,\n          for math library function results\n            bits     - a positive, floating-point number\n            funclist - optional comma separated list of one or more math\n                       library functions to which the attribute should be\n                       applied\n/Qimf-arch-consistency:value[:funclist]\n          ensures that the math library functions produce consistent results\n          across different implementations of the same architecture\n            value    - true or false\n            funclist - optional comma separated list of one or more math\n                       library functions to which the attribute should be\n                       applied\n/Qimf-max-error:ulps[:funclist]\n          defines the maximum allowable relative error, measured in ulps, for\n          math library function results\n            ulps     - a positive, floating-point number conforming to the\n                       format [digits][.digits][{e|E}[sign]digits]\n            funclist - optional comma separated list of one or more math\n                       library functions to which the attribute should be\n                       applied\n/Qimf-precision:value[:funclist]\n          defines the accuracy (precision) for math library functions\n            value    - defined as one of the following values\n                       high   - equivalent to max-error = 0.6\n                       medium - equivalent to max-error = 4 (DEFAULT)\n                       low    - equivalent to accuracy-bits = 11 (single\n                                precision); accuracy-bits = 26 (double\n                                precision)\n            funclist - optional comma separated list of one or more math\n                       library functions to which the attribute should be\n                       applied\n/Qimf-domain-exclusion:classlist[:funclist]\n[press RETURN to continue]\n          indicates the input arguments domain on which math functions\n          must provide correct results.\n            classlist - defined as one of the following values:\n                          nans, infinities, denormals, zeros\n                          all, none, common\n            funclist - optional list of one or more math library functions to\n                       which the attribute should be applied.\n/Qimf-force-dynamic-target[:funclist]\n          Instructs the compiler to use run-time dispatch in calls to math\n          functions\n            funclist - optional list of one or more math library functions to\n                       which the attribute should be applied.\n/Qfinite-math-only\n          Allow optimizations for floating point arithmetic that assume\n          arguments and results are not NaNs or Infinities\nInlining\n/Ob    control inline expansion:\n            n=0  disable inlining\n            n=1  inline functions declared with __inline, and perform C++\n                 inlining\n            n=2  inline any function, at the compiler's discretion\n/Qinline-min-size:\n          set size limit for inlining small routines\n/Qinline-min-size-\n          no size limit for inlining small routines\n/Qinline-max-size:\n          set size limit for inlining large routines\n/Qinline-max-size-\n          no size limit for inlining large routines\n/Qinline-max-total-size:\n          maximum increase in size for inline function expansion\n/Qinline-max-total-size-\n          no size limit for inline function expansion\n/Qinline-max-per-routine:\n          maximum number of inline instances in any function\n/Qinline-max-per-routine-\n          no maximum number of inline instances in any function\n/Qinline-max-per-compile:\n          maximum number of inline instances in the current compilation\n/Qinline-max-per-compile-\n          no maximum number of inline instances in the current compilation\n/Qinline-factor:\n          set inlining upper limits by n percentage\n/Qinline-factor-\n          do not set set inlining upper limits\n/Qinline-forceinline\n          treat inline routines as forceinline\n/Qinline-dllimport\n          allow(DEFAULT)/disallow functions declared __declspec(dllimport) to\n          be inlined\n/Qinline-calloc\n          directs the compiler to inline calloc() calls as malloc()/memset()\n/Qinline-min-caller-growth:\n          set lower limit on caller growth due to inlining a single routine\n/Qinline-min-caller-growth-\n          no lower limit on caller growth due to inlining a single routine\nOutput, Debug, PCH\n[press RETURN to continue]\n/c        compile to object (.obj) only, do not link\n/S        compile to assembly (.asm) only, do not link\n/FAs      produce assembly file with optional source annotations\n/FAc      produce assembly file with optional code annotations\n/FA       produce assembly file\n/Fa[file]\n          name assembly file (or directory for multiple files; i.e. /FaMYDIR)\n/Fo[file]\n          name object file (or directory for multiple files; i.e. /FoMYDIR)\n/Fe[file]\n          name executable file or directory\n/Fp[file]\n          name precompiled header file\n/Fi[file]\n          name preprocessed file (or directory for multiple files; i.e.\n          /FiMYDIR)\n/Zi, /ZI, /Z7\n          Produce symbolic debug information.  The /Zi and /ZI flags emit the\n          debug information for types into a separate PDB file.\n/Zo[-]    When symbolic debug information is being produced, enable/disable\n          emission of additional symbolic debug information to describe\n          optimized code.\n/debug[:keyword]\n          Control the emission of debug information.\n          Valid [keyword] values:\n             none\n                 Disables debug generation.\n         all, full (default if no keyword was specified)\n             Generates complete debug information.\n\n         minimal\n             Generates line number information.\n         [no]inline-debug-info\n             Controls additional debug information for inlined code.\n         [no]expr-source-pos\n             Controls output of source positions for expressions.\n\n/pdbfile[:filename]\n          Specify that debug related type information should be generated to a\n          program database file at link time.\n/nopdbfile\n          Do not generate debug related information to a program database file.\n/Qtrapuv  trap uninitialized variables\n/RTCu     report use of variable that was not initialized\n/RTC1     equivalent to /RTCsu\n/RTCs     enable stack frame runtime checks\n/RTCc     enable checks for converting to smaller types\n/Qmap-opts\n          enable option mapping tool\n/Yc[file]\n          create precompiled header file\n/Yu[file]\n          use precompiled header file\n/Y-       ignore all other precompiled header file options\n/Qpchi[-]\n          enable(DEFAULT)/disable PCH coexistence, to reduce build time\n/FD       generate file dependencies\n/FR[file]\n          name extended source browser file\n/Qcheck-pointers:\n          Specifies what type of bounds checking occurs. Possible values are:\n            none   - Disables bounds checking. This is the default.\n            rw     - Checks bounds for reads and writes through pointers.\n[press RETURN to continue]\n            write  - Checks bounds for writes through pointers only.\n/Qcheck-pointers-mpx:\n          Enables bounds checking using Intel(R) MPX support. Possible\n          values are:\n            none   - Disables bounds checking. This is the default.\n            rw     - Checks bounds for reads and writes through pointers.\n            write  - Checks bounds for writes through pointers only.\n          This switch is only valid on targets with Intel(R) MPX support.\n/Qcheck-pointers-dangling:\n          Specifies what type of dangling pointer checking occurs. Possible\n          values are:\n            none   - Disables dangling pointer checking. This is the default.\n            heap   - Check dangling references on heap.\n            stack  - Check dangling references on stack.\n            all    - Check dangling references on both heap and stack.\n/Qcheck-pointers-undimensioned[-]\n          Bounds checking occurs for memory access through arrays that are\n          declared without dimensions. This checking occurs for both\n          dimensioned and undimensioned arrays.\n/Qcheck-pointers-narrowing[-]\n          When this is disabled, Pointer Checker will not give an error when\n          pointers to a structure field are moved to fields in the same\n          structure.\n/Qeliminate-unused-debug-types[-]\n          When disabled, debug information for all types present in the\n          sources will be emitted.  Using this option may cause a large\n          increase in the size of the debug information.\n/Qemit-build-options\n          Output the options used during the compilation to a corresponding\n          .dashboard file.  This file is to be consumed by the dbmerge tool\n          and used by the dashboard tool.\n/Qemit-messages\n          Output the diagnostics emitted during the compilation to a\n          corresponding .dashboard file.  This file is to be consumed by the\n          dbmerge tool and used by the dashboard tool.\nPreprocessor\n/QA[]\n          create an assertion  having value \n/C        do not strip comments\n/D[{=|#}]\n          define macro\n/U  remove predefined macro\n/E        preprocess to stdout\n/EP       preprocess to stdout, omitting #line directives\n/EP /P    preprocess to file, omitting #line directives\n/P        preprocess to file\n/u        remove all predefined macros\n/FI\n          force inclusion of file\n/I   add directory to include file search path\n/X        remove standard directories from include file search path\n/QH       print include file order\n/QM       generate makefile dependency information\n/QMM      similar to /QM, but do not include system header files\n/QMG      similar to /QM, but treat missing header files as generated files\n/QMD      preprocess and compile, generating output file containing dependency\n          information ending with extension .d\n/QMMD     similar to /QMD, but do not include system header files\n/QMF\n          generate makefile dependency information in file (must specify /QM\n[press RETURN to continue]\n          or /QMM)\n/QMT\n          change the default target rule for dependency generation\n/QdM      output macro definitions in effect after preprocessing (use with /E)\n/QdD      same as /QdM, but output #define directives in preprocessed source\n/QdN      same as /QdD, but #define directives contain only macro names\n/Qicl-    do not predefine the \"__ICL\" and \"__INTEL_COMPILER\" macros.\n          Warning: can prevent correct Intel header compilation\nComponent Control\n/Qoption,,\n          pass options  to tool specified by \n/Qlocation,,\n          set  as the location of tool specified by \nLanguage\n/Qstd=\n          enable language support for , as described below\n            c99   conforms to ISO/IEC 9899:1999 standard for C programs\n            c11   conforms to ISO/IEC 9899:2011 standard for C programs\n            c++11 enables C++11 support for C++ programs\n            c++14 enables C++14 support for C++ programs\n            c++17 enables C++17 support for C++ programs\n/Za       disable Microsoft Visual C++ compiler language extensions\n/Zg       enable the generation of function prototypes\n/Zp[n]    specify alignment constraint for structures where\n          n=1,2,4,8,16. 16 is the default\n/Zc:arg1[,arg2]\n          specify standard conformance for the following arguments:\n            forScope[-] enforce standard compliance in for loop scope\n            throwingNew[-] link with the operator new implementation\n            wchar_t[-]  specify that wchar_t is a native data type\n            auto[-]  enforce compliance to the new standard meaning for auto\n            trigraphs[-]  accept trigraph character sequences\n            strictStrings[-] enforce const qualification for string literals\n            rvalueCast[-] cast of lvalue to its own type results in rvalue\n            threadSafeInit[-] thread-safe initialization of local statics\n            inline[-] control inline expansion\n            199711L[-] update 199711L macro value\n/Zs       perform syntax and semantic checking only (no object file produced)\n/vd{0|1|2}\n          disable or enable hidden vtordisp field in C++ objects\n/vm[x]    specify representation method for C++ pointers to members\n/J        change default char type to unsigned\n/noBool   suppresses the C++ bool, true, and false keywords\n/Qtemplate-depth:n\n          control the depth in which recursive templates are expanded\n/Qrestrict[-]\n          enable/disable the 'restrict' keyword for disambiguating pointers\n/Qhelp-pragma\n          output supported pragmas and their usage syntax\n/check:[,,...]\n          check run-time conditions.\n          keywords:  [no]conversions, [no]stack, [no]uninit\nCompiler Diagnostics\n/w        disable all warnings\n[press RETURN to continue]\n/W0       print only errors\n/W1, /W2, /W3\n          print only errors and warnings (DEFAULT)\n/W4, /Wall\n          print errors, warnings and most remarks\n/W5       print all errors, warnings and remarks\n/WL       print brief one-line diagnostics\n/WX       force warnings to be reported as errors\n/Werror-all\n          force warnings and currently enabled remarks to be reported as errors\n/Wcheck   enable more strict diagnostics\n/Wport    issue portability diagnostics\n/Qeffc++  enable effective C++ diagnostic warnings\n/Qwo[,,...]\n          issue diagnostics L1 through LN only once\n/Wp64     print diagnostics for 64-bit porting\n/Qdiag-enable:[,,...]\n          enable the specified diagnostics or diagnostic groups\n/Qdiag-disable:[,,...]\n          disable the specified diagnostics or diagnostic groups\n          where  may be individual diagnostic numbers or group names.\n          where group names include:\n              thread     - diagnostics to aid in thread-enabling source\n              power      - controls whether diagnostics are enabled for\n                           possibly inefficient code that may affect power\n                           consumption when running on Intel(R) processors\n              port-linux - diagnostics for Microsoft extensions that\n                           may cause errors when porting to Linux/MacOS\n              openmp     - diagnostics issued by the OpenMP* parallelizer\n              warn       - diagnostics that have \"warning\" severity level\n              error      - diagnostics that have \"error\" severity level\n              remark     - diagnostics that are remarks or comments\n          vec        - diagnostics issued by the vectorizer\n          par        - diagnostics issued by the auto-parallelizer\n          cpu-dispatch\n                     - specifies the CPU dispatch remarks\n\n/Qdiag-error:[,,...]\n          output the specified diagnostics or diagnostic groups as errors\n/Qdiag-warning:[,,...]\n          output the specified diagnostics or diagnostic groups as warnings\n/Qdiag-remark:[,,...]\n          output the the specified diagnostics or diagnostic groups as remarks\n/Qdiag-dump\n          display the currently enabled diagnostic messages to stdout or to a\n          specified diagnostic output file.\n/Qdiag-file[:]\n           where diagnostics are emitted to.  Not specifying this causes\n          messages to be output to stderr\n/Qdiag-file-append[:]\n           where diagnostics are emitted to. When  already exists,\n          output is appended to the file\n/Qdiag-id-numbers[-]\n          enable(DEFAULT)/disable the diagnostic specifiers to be output in\n          numeric form\n/Qdiag-error-limit:\n          specify the maximum number of errors emitted\n/Qdiag-once:[,,...]\n          issue diagnostics v1 through vN only once\n/Wpch-messages[-]\n          enable(DEFAULT)/disable PCH information messages\nMiscellaneous\n[press RETURN to continue]\n\n/nologo   do not display compiler version information\n/Qsave-temps\n          store the intermediate files in current directory and name them\n          based on the source file.  Only saves files that are generated by\n          default\n/watch:\n          tells the driver to output processing information\n            keywords: all, none (same as /nowatch), [no]source,\n                      [no]cmd\n/nowatch  suppress processing information output (DEFAULT)\n/Tc\n          compile file as C source\n/Tp\n          compile file as C++ source\n/TC       compile all source or unrecognized file types as C source files\n/TP       compile all source or unrecognized file types as C++ source files\n/showIncludes\n          emit include file names\n/Qmultibyte-chars[-]\n          provide support for multi-byte characters\n/MP[]  create multiple processes that can be used to compile large numbers\n          of source files at the same time\n/MP-force\n          Use with /MP to force the given  processes to be created\n/bigobj   generate objects with increased address capacity\n/Qoffload-arch:\n          specify the target architecture to use when offloading code\n            arch - Specifies the target architecture. On Intel(R) 64\n                   architecture targeting Intel(R) MIC Architecture, arch can\n                   be mic-avx512.\nData\n/Zp[n]    specify alignment constraint for structures (n=1,2,4,8,16\n          /Zp16 DEFAULT)\n/GS       enable overflow security checks.  Optional  can specify:\n            partial - provide a stack protection level that is compatible with\n                      Microsoft Visual Studio 2008.\n            strong  - provide full stack security level checking. This setting\n                      is compatible with recent Microsoft Visual Studio stack\n                      protection heuristics. This is the same as specifying /GS\n                      with no keyword.\n            off     - Same as /GS- (DEFAULT)\n/GF       enable read-only string pooling optimization\n/GA       optimize for Windows application (assume .exe)\n/GT       enable fiber-safe thread local storage\n/Qsfalign8\n          may align stack for functions with 8 or 16 byte vars (DEFAULT)\n/Qsfalign16\n          may align stack for functions with 16 byte vars\n/Qsfalign\n          force stack alignment for all functions\n/Qsfalign-\n          disable stack alignment for all functions\n/Qglobal-hoist[-]\n          enable(DEFAULT)/disable external globals are load safe\n/Qkeep-static-consts[-]\n          enable/disable(DEFAULT) the ability to preserve allocation of\n          variables that are not referenced in the source\n/Qlong-double\n[press RETURN to continue]\n          enable 80-bit 'long double'\n/Qnobss-init\n          disable placement of zero-initialized variables in BSS (use DATA)\n/Qzero-initialized-in-bss[-]\n          put explicitly zero initialized variables into the DATA section\n          instead of the BSS section\n/Qfnalign:\n          align the start of functions on a 2 (DEFAULT) or  byte boundary\n          where  is a power of 2\n/Qfnalign\n          align the start of functions to an optimal machine-dependent value.\n          /Qfnalign- (DEFAULT) aligns on a 2-byte boundary\nCompatibility\n/Qms      tells the compiler to emulate Microsoft compatibility bugs\n            n=0  disable Microsoft compatibility bugs\n            n=1  enable most Microsoft compatibilities (DEFAULT)\n            n=2  full Microsoft compatibility\n/Qvc\n          enable compatibility with a specific Microsoft Visual Studio version\n            12   - Microsoft Visual Studio 2013 compatibility\n            14   - Microsoft Visual Studio 2015 compatibility\n            14.1 - Microsoft Visual Studio 2017 compatibility\n/Qgcc-dialect:\n          enable a limited gcc-compatible dialect on Windows. The gcc\n          version may be specified as 440 to 710 range at increment of 10.\n            Example: /Qgcc-dialect:440 -> gcc 4.4 compatibility\nLinking/Linker\n/link     specify that all options following '/link' are for the linker\n/F     set the stack reserve amount specified to the linker\n/LD[d]    produce a DLL instead of an EXE ('d' = debug version)\n/MD[d]    use dynamically-loaded, multithread C runtime\n/MT[d]    use statically-linked, multithread C runtime (DEFAULT with\n          Microsoft Visual Studio 2005 and later)\n/Zl       omit library names from object file\nDeprecated Options\n/Quse-asm                No replacement\n/Qvc11                   No replacement\n/Qcilk-serialize         No replacement\n/arch:ICELAKE            use /arch:ICELAKE-CLIENT\n/QxICELAKE               use /QxICELAKE-CLIENT\n/QaxICELAKE              use /QaxICELAKE-CLIENT\n/arch:SSE                use /arch:IA32\n/Fr                      use /FR\n/GX                      use /EHsc\n/GZ                      use /RTC1\n/H                       No replacement\n/Qwn                     use /Qdiag-error-limit:\n/Qwd                     use /Qdiag-disable\n/Qwe                     use /Qdiag-error\n/Qww                     use /Qdiag-warning\n/Qwr                     use /Qdiag-remark\n/Qwo                     use /Qdiag-once\n/Yd                      use /Zi, /ZI, /Z7\n/Ze                      No replacement\n[press RETURN to continue]\n/Zg                      No replacement\n/Qrcd                    No replacement\n/help, /? [category]   print full or category help message\nValid categories include\n       advanced        - Advanced Optimizations\n       codegen         - Code Generation\n       compatibility   - Compatibility\n       component       - Component Control\n       data            - Data\n       deprecated      - Deprecated Options\n       diagnostics     - Compiler Diagnostics\n       float           - Floating Point\n       help            - Help\n       inline          - Inlining\n       ipo             - Interprocedural Optimization (IPO)\n       language        - Language\n       link            - Linking/Linker\n       misc            - Miscellaneous\n       opt             - Optimization\n       output          - Output\n       pgo             - Profile Guided Optimization (PGO)\n       preproc         - Preprocessor\n       reports         - Optimization Reports\n       openmp          - OpenMP and Parallel Processing\nCopyright (C) 1985-2018, Intel Corporation.  All rights reserved.\n* Other names and brands may be claimed as the property of others.\n. **Full build procedure:**\nMicrosoft Windows [Version 10.0.17134.376]\n(c) 2018 Microsoft Corporation. All rights reserved.\nD:_Johnex\\Desktop\\Libraries\\brotli-1.0.7>\"C:\\Program Files (x86)\\IntelSWTools\\compilers_and_libraries\\windows\\bin\\ipsxe-comp-vars.bat\" ia32 vs2017\nCopyright (C) 1985-2018 Intel Corporation. All rights reserved.\nIntel(R) Compiler 19.0 (package 117)\n\n Visual Studio 2017 Developer Command Prompt v15.8.7\n Copyright (c) 2017 Microsoft Corporation\n\n[vcvarsall.bat] Environment initialized for: 'x86'\nD:_Johnex\\Desktop\\Libraries\\brotli-1.0.7>mkdir 32\nD:_Johnex\\Desktop\\Libraries\\brotli-1.0.7>cd 32\nD:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32>cmake -G\"Visual Studio 15 2017\"       -T\"Intel C++ Compiler 19.0\" ..\n-- The C compiler identification is Intel 19.0.0.20180804\n-- Check for working C compiler: C:/Program Files (x86)/IntelSWTools/compilers_and_libraries_2019/windows/bin/intel64/icl.exe\n-- Check for working C compiler: C:/Program Files (x86)/IntelSWTools/compilers_and_libraries_2019/windows/bin/intel64/icl.exe -- works\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Detecting C compile features\n-- Detecting C compile features - done\n-- Looking for log2\n-- Looking for log2 - found\n-- Configuring done\n-- Generating done\n-- Build files have been written to: D:/_Johnex/Desktop/Libraries/brotli-1.0.7/32\nD:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32>msbuild /m /p:Configuration=Release ALL_BUILD.vcxproj\nMicrosoft (R) Build Engine version 15.8.169+g1ccb72aefa for .NET Framework\nCopyright (C) Microsoft Corporation. All rights reserved.\nBuild started 2018-10-26 14:02:31.\n     1>Project \"D:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\ALL_BUILD.vcxproj\" on node 1 (default targets).\n     1>Project \"D:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\ALL_BUILD.vcxproj\" (1) is building \"D:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\ZERO_CHECK.vcxproj\" (2) on node 1 (default targets).\n     2>InitializeBuildStatus:\n         Creating \"Win32\\Release\\ZERO_CHECK\\ZERO_CHECK.tlog\\unsuccessfulbuild\" because \"AlwaysCreate\" was specified.\n       CustomBuild:\n         All outputs are up-to-date.\n       FinalizeBuildStatus:\n         Deleting file \"Win32\\Release\\ZERO_CHECK\\ZERO_CHECK.tlog\\unsuccessfulbuild\".\n         Touching \"Win32\\Release\\ZERO_CHECK\\ZERO_CHECK.tlog\\ZERO_CHECK.lastbuildstate\".\n     2>Done Building Project \"D:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\ZERO_CHECK.vcxproj\" (default targets).\n     1>Project \"D:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\ALL_BUILD.vcxproj\" (1) is building \"D:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlicommon.vcxproj\" (3) on node 3 (default targets).\n     3>InitializeBuildStatus:\n         Creating \"brotlicommon.dir\\Release\\brotlicommon.tlog\\unsuccessfulbuild\" because \"AlwaysCreate\" was specified.\n     1>Project \"D:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\ALL_BUILD.vcxproj\" (1) is building \"D:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlicommon-static.vcxproj\" (5) on node 4 (default targets).\n     5>InitializeBuildStatus:\n         Creating \"brotlicommon-static.dir\\Release\\brotlico.0281AF36.tlog\\unsuccessfulbuild\" because \"AlwaysCreate\" was specified.\n     3>CustomBuild:\n         All outputs are up-to-date.\n     5>CustomBuild:\n         All outputs are up-to-date.\n     3>MessageBuildingWithCompiler:\n         Building with Intel(R) C++ Compiler 19.0\n       ClCompile:\n         * ClCompile (Win32 - Intel C++)\n     5>MessageBuildingWithCompiler:\n         Building with Intel(R) C++ Compiler 19.0\n       ClCompile:\n          ClCompile (Win32 - Intel C++)\n     3>ClCompile:\n         All outputs are up-to-date.\n     5>ClCompile:\n         All outputs are up-to-date.\n       Lib:\n         All outputs are up-to-date.\n         brotlicommon-static.vcxproj -> D:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\Release\\brotlicommon-static.lib\n       FinalizeBuildStatus:\n         Deleting file \"brotlicommon-static.dir\\Release\\brotlico.0281AF36.tlog\\unsuccessfulbuild\".\n         Touching \"brotlicommon-static.dir\\Release\\brotlico.0281AF36.tlog\\brotlicommon-static.lastbuildstate\".\n     5>Done Building Project \"D:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlicommon-static.vcxproj\" (default targets).\n     3>Link:\n         All outputs are up-to-date.\n         brotlicommon.vcxproj -> D:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\Release\\brotlicommon.dll\n       FinalizeBuildStatus:\n         Deleting file \"brotlicommon.dir\\Release\\brotlicommon.tlog\\unsuccessfulbuild\".\n         Touching \"brotlicommon.dir\\Release\\brotlicommon.tlog\\brotlicommon.lastbuildstate\".\n     1>Project \"D:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\ALL_BUILD.vcxproj\" (1) is building \"D:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj\" (7) on node 6 (default targets).\n     7>InitializeBuildStatus:\n         Touching \"brotlidec-static.dir\\Release\\brotlidec-static.tlog\\unsuccessfulbuild\".\n     3>Done Building Project \"D:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlicommon.vcxproj\" (default targets).\n     7>CustomBuild:\n         All outputs are up-to-date.\n       MessageBuildingWithCompiler:\n         Building with Intel(R) C++ Compiler 19.0\n       ClCompile:\n          ClCompile (Win32 - Intel C++)\n     1>Project \"D:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\ALL_BUILD.vcxproj\" (1) is building \"D:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj\" (6) on node 5 (default targets).\n     6>InitializeBuildStatus:\n         Touching \"brotlidec.dir\\Release\\brotlidec.tlog\\unsuccessfulbuild\".\n     7>ClCompile:\n         C:\\Program Files (x86)\\IntelSWTools\\compilers_and_libraries_2019\\windows\\bin\\intel64\\icl.exe /c /Qm32 /I\"D:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\include\" /nologo /W3 /O2 /Ob2 /D __INTEL_COMPILER=1900 /D WIN32 /D _WINDOWS /D\n          NDEBUG /D \"CMAKE_INTDIR=\\\"Release\\\"\" /D _MBCS /MD /GS /Zc:wchar_t /Zc:forScope /Fo\"brotlidec-static.dir\\Release\\\" /Fd\"brotlidec-static.dir\\Release\\brotlidec-static.pdb\" /Gd /TC /FC \"D:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\n         \\dec\\bit_reader.c\" \"D:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\decode.c\" \"D:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\huffman.c\" \"D:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\state.c\"\n     6>CustomBuild:\n         All outputs are up-to-date.\n       MessageBuildingWithCompiler:\n         Building with Intel(R) C++ Compiler 19.0\n       ClCompile:\n         ** ClCompile (Win32 - Intel C++)\n         C:\\Program Files (x86)\\IntelSWTools\\compilers_and_libraries_2019\\windows\\bin\\intel64\\icl.exe /c /Qm32 /I\"D:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\include\" /nologo /W3 /O2 /Ob2 /D __INTEL_COMPILER=1900 /D WIN32 /D _WINDOWS /D\n          NDEBUG /D BROTLI_SHARED_COMPILATION /D \"CMAKE_INTDIR=\\\"Release\\\"\" /D BROTLIDEC_SHARED_COMPILATION /D _WINDLL /D _MBCS /MD /GS /Zc:wchar_t /Zc:forScope /Fo\"brotlidec.dir\\Release\\\" /Fd\"brotlidec.dir\\Release\\vc141.pdb\" /Gd /TC /\n         FC \"D:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\bit_reader.c\" \"D:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\decode.c\" \"D:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\huffman.c\" \"D:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\n         \\c\\dec\\state.c\"\n     7>ClCompile:\n         bit_reader.c\n     6>ClCompile:\n         bit_reader.c\n     7>D:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec./../common/platform.h(338): error : expected a type specifier [D:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n           static BROTLI_INLINE uint16_t BrotliUnalignedRead16(const void p) {\n                  ^\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(338): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       static BROTLI_INLINE uint16_t BrotliUnalignedRead16(const void* p) {\n              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(338): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       static BROTLI_INLINE uint16_t BrotliUnalignedRead16(const void* p) {\n                            ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(339): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n         return *(const uint16_t*)p;\n                                  ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(341): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       static BROTLI_INLINE uint32_t BrotliUnalignedRead32(const void* p) {\n              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(341): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       static BROTLI_INLINE uint32_t BrotliUnalignedRead32(const void* p) {\n              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(341): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       static BROTLI_INLINE uint32_t BrotliUnalignedRead32(const void* p) {\n              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(341): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       static BROTLI_INLINE uint32_t BrotliUnalignedRead32(const void* p) {\n                            ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(342): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n         return *(const uint32_t*)p;\n                                  ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(366): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       static BROTLI_INLINE uint64_t BrotliUnalignedRead64(const void* p) {\n              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(366): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       static BROTLI_INLINE uint64_t BrotliUnalignedRead64(const void* p) {\n              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(366): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       static BROTLI_INLINE uint64_t BrotliUnalignedRead64(const void* p) {\n              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(366): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       static BROTLI_INLINE uint64_t BrotliUnalignedRead64(const void* p) {\n                            ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(368): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n         memcpy(&v, p, sizeof(uint64_t));\n                    ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(372): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       static BROTLI_INLINE void BrotliUnalignedWrite64(void* p, uint64_t v) {\n              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(372): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       static BROTLI_INLINE void BrotliUnalignedWrite64(void* p, uint64_t v) {\n              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(372): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       static BROTLI_INLINE void BrotliUnalignedWrite64(void* p, uint64_t v) {\n              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(372): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       static BROTLI_INLINE void BrotliUnalignedWrite64(void* p, uint64_t v) {\n                            ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(373): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n         memcpy(p, &v, sizeof(uint64_t));\n                ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(373): error : identifier \"v\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n         memcpy(p, &v, sizeof(uint64_t));\n                    ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(500): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       static BROTLI_INLINE void BrotliRBit(void) { /* Should break build if used. */ }\n              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(500): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       static BROTLI_INLINE void BrotliRBit(void) { /* Should break build if used. */ }\n              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(500): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       static BROTLI_INLINE void BrotliRBit(void) { /* Should break build if used. */ }\n              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(500): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       static BROTLI_INLINE void BrotliRBit(void) { /* Should break build if used. */ }\n                            ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(538): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_UNUSED_FUNCTION void BrotliSuppressUnusedFunctions(void) {\n       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(538): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_UNUSED_FUNCTION void BrotliSuppressUnusedFunctions(void) {\n       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(538): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_UNUSED_FUNCTION void BrotliSuppressUnusedFunctions(void) {\n       ^\n\n 7>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(538): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n       BROTLI_UNUSED_FUNCTION void BrotliSuppressUnusedFunctions(void) {\n       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(338): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       static BROTLI_INLINE uint16_t BrotliUnalignedRead16(const void* p) {\n              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(338): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       static BROTLI_INLINE uint16_t BrotliUnalignedRead16(const void* p) {\n              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(338): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       static BROTLI_INLINE uint16_t BrotliUnalignedRead16(const void* p) {\n                            ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(339): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n         return *(const uint16_t*)p;\n                                  ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(341): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       static BROTLI_INLINE uint32_t BrotliUnalignedRead32(const void* p) {\n              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(341): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       static BROTLI_INLINE uint32_t BrotliUnalignedRead32(const void* p) {\n              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(341): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       static BROTLI_INLINE uint32_t BrotliUnalignedRead32(const void* p) {\n              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(341): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       static BROTLI_INLINE uint32_t BrotliUnalignedRead32(const void* p) {\n                            ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(342): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n         return *(const uint32_t*)p;\n                                  ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(366): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       static BROTLI_INLINE uint64_t BrotliUnalignedRead64(const void* p) {\n              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(366): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       static BROTLI_INLINE uint64_t BrotliUnalignedRead64(const void* p) {\n              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(366): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       static BROTLI_INLINE uint64_t BrotliUnalignedRead64(const void* p) {\n              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(366): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       static BROTLI_INLINE uint64_t BrotliUnalignedRead64(const void* p) {\n                            ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(368): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n         memcpy(&v, p, sizeof(uint64_t));\n                    ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(372): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       static BROTLI_INLINE void BrotliUnalignedWrite64(void* p, uint64_t v) {\n              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(372): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       static BROTLI_INLINE void BrotliUnalignedWrite64(void* p, uint64_t v) {\n              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(372): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       static BROTLI_INLINE void BrotliUnalignedWrite64(void* p, uint64_t v) {\n              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(372): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       static BROTLI_INLINE void BrotliUnalignedWrite64(void* p, uint64_t v) {\n                            ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(373): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n         memcpy(p, &v, sizeof(uint64_t));\n                ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(373): error : identifier \"v\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n         memcpy(p, &v, sizeof(uint64_t));\n                    ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(500): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       static BROTLI_INLINE void BrotliRBit(void) { /* Should break build if used. */ }\n              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(500): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       static BROTLI_INLINE void BrotliRBit(void) { /* Should break build if used. */ }\n              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(500): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       static BROTLI_INLINE void BrotliRBit(void) { /* Should break build if used. */ }\n              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(500): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       static BROTLI_INLINE void BrotliRBit(void) { /* Should break build if used. */ }\n                            ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(538): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_UNUSED_FUNCTION void BrotliSuppressUnusedFunctions(void) {\n       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(538): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_UNUSED_FUNCTION void BrotliSuppressUnusedFunctions(void) {\n       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(538): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_UNUSED_FUNCTION void BrotliSuppressUnusedFunctions(void) {\n       ^\n\n 6>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(538): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n       BROTLI_UNUSED_FUNCTION void BrotliSuppressUnusedFunctions(void) {\n       ^\n\n 7>Done Building Project \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj\" (default targets) -- FAILED.\n 6>Done Building Project \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj\" (default targets) -- FAILED.\n 1>Project \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\ALL_BUILD.vcxproj\" (1) is building \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj\" (8) on node 7 (default targets).\n 8>InitializeBuildStatus:\n     Touching \"brotlienc.dir\\Release\\brotlienc.tlog\\unsuccessfulbuild\".\n   CustomBuild:\n     All outputs are up-to-date.\n   MessageBuildingWithCompiler:\n     Building with Intel(R) C++ Compiler 19.0\n   ClCompile:\n     ***** ClCompile (Win32 - Intel C++)\n     C:\\Program Files (x86)\\IntelSWTools\\compilers_and_libraries_2019\\windows\\bin\\intel64\\icl.exe /c /Qm32 /I\"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\include\" /nologo /W3 /O2 /Ob2 /D __INTEL_COMPILER=1900 /D WIN32 /D _WINDOWS /D\n      NDEBUG /D BROTLI_SHARED_COMPILATION /D \"CMAKE_INTDIR=\\\"Release\\\"\" /D BROTLIENC_SHARED_COMPILATION /D _WINDLL /D _MBCS /MD /GS /Zc:wchar_t /Zc:forScope /Fo\"brotlienc.dir\\Release\\\\\" /Fd\"brotlienc.dir\\Release\\vc141.pdb\" /Gd /TC /\n     FC \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\backward_references.c\" \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\backward_references_hq.c\" \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\bit_cost.c\" \"D:\\_Johnex\\Desk\n     top\\Libraries\\brotli-1.0.7\\c\\enc\\block_splitter.c\" \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\brotli_bit_stream.c\" \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\cluster.c\" \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\e\n     nc\\compress_fragment.c\" \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\compress_fragment_two_pass.c\" \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\dictionary_hash.c\" \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\encode.\n     c\" \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\encoder_dict.c\" \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\entropy_encode.c\" \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\histogram.c\" \"D:\\_Johnex\\Desktop\\Libraries\\\n     brotli-1.0.7\\c\\enc\\literal_cost.c\" \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\memory.c\" \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\metablock.c\" \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\static_dict.c\" \"D:\\_Jo\n     hnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\utf8_util.c\"\n 1>Project \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\ALL_BUILD.vcxproj\" (1) is building \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj\" (9) on node 8 (default targets).\n 9>InitializeBuildStatus:\n     Touching \"brotlienc-static.dir\\Release\\brotlienc-static.tlog\\unsuccessfulbuild\".\n   CustomBuild:\n     All outputs are up-to-date.\n   MessageBuildingWithCompiler:\n     Building with Intel(R) C++ Compiler 19.0\n   ClCompile:\n     ***** ClCompile (Win32 - Intel C++)\n     C:\\Program Files (x86)\\IntelSWTools\\compilers_and_libraries_2019\\windows\\bin\\intel64\\icl.exe /c /Qm32 /I\"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\include\" /nologo /W3 /O2 /Ob2 /D __INTEL_COMPILER=1900 /D WIN32 /D _WINDOWS /D\n      NDEBUG /D \"CMAKE_INTDIR=\\\"Release\\\"\" /D _MBCS /MD /GS /Zc:wchar_t /Zc:forScope /Fo\"brotlienc-static.dir\\Release\\\\\" /Fd\"brotlienc-static.dir\\Release\\brotlienc-static.pdb\" /Gd /TC /FC \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\n     \\enc\\backward_references.c\" \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\backward_references_hq.c\" \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\bit_cost.c\" \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\block_splitter\n     .c\" \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\brotli_bit_stream.c\" \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\cluster.c\" \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\compress_fragment.c\" \"D:\\_Johnex\\Desktop\\Lib\n     raries\\brotli-1.0.7\\c\\enc\\compress_fragment_two_pass.c\" \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\dictionary_hash.c\" \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\encode.c\" \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\n     \\enc\\encoder_dict.c\" \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\entropy_encode.c\" \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\histogram.c\" \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\literal_cost.c\" \"D:\\_Johnex\\\n     Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\memory.c\" \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\metablock.c\" \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\static_dict.c\" \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\utf8_\n     util.c\"\n 8>ClCompile:\n     backward_references.c\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(338): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       static BROTLI_INLINE uint16_t BrotliUnalignedRead16(const void* p) {\n              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(338): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       static BROTLI_INLINE uint16_t BrotliUnalignedRead16(const void* p) {\n              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(338): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       static BROTLI_INLINE uint16_t BrotliUnalignedRead16(const void* p) {\n                            ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(339): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n         return *(const uint16_t*)p;\n                                  ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(341): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       static BROTLI_INLINE uint32_t BrotliUnalignedRead32(const void* p) {\n              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(341): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       static BROTLI_INLINE uint32_t BrotliUnalignedRead32(const void* p) {\n              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(341): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       static BROTLI_INLINE uint32_t BrotliUnalignedRead32(const void* p) {\n              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(341): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       static BROTLI_INLINE uint32_t BrotliUnalignedRead32(const void* p) {\n                            ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(342): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n         return *(const uint32_t*)p;\n                                  ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(366): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       static BROTLI_INLINE uint64_t BrotliUnalignedRead64(const void* p) {\n              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(366): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       static BROTLI_INLINE uint64_t BrotliUnalignedRead64(const void* p) {\n              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(366): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       static BROTLI_INLINE uint64_t BrotliUnalignedRead64(const void* p) {\n              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(366): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       static BROTLI_INLINE uint64_t BrotliUnalignedRead64(const void* p) {\n                            ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(368): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n         memcpy(&v, p, sizeof(uint64_t));\n                    ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(372): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       static BROTLI_INLINE void BrotliUnalignedWrite64(void* p, uint64_t v) {\n              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(372): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       static BROTLI_INLINE void BrotliUnalignedWrite64(void* p, uint64_t v) {\n              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(372): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       static BROTLI_INLINE void BrotliUnalignedWrite64(void* p, uint64_t v) {\n              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(372): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       static BROTLI_INLINE void BrotliUnalignedWrite64(void* p, uint64_t v) {\n                            ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(373): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n         memcpy(p, &v, sizeof(uint64_t));\n                ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(373): error : identifier \"v\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n         memcpy(p, &v, sizeof(uint64_t));\n                    ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(500): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       static BROTLI_INLINE void BrotliRBit(void) { /* Should break build if used. */ }\n              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(500): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       static BROTLI_INLINE void BrotliRBit(void) { /* Should break build if used. */ }\n              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(500): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       static BROTLI_INLINE void BrotliRBit(void) { /* Should break build if used. */ }\n              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(500): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       static BROTLI_INLINE void BrotliRBit(void) { /* Should break build if used. */ }\n                            ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(538): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_UNUSED_FUNCTION void BrotliSuppressUnusedFunctions(void) {\n       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(538): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_UNUSED_FUNCTION void BrotliSuppressUnusedFunctions(void) {\n       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(538): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_UNUSED_FUNCTION void BrotliSuppressUnusedFunctions(void) {\n       ^\n\n 8>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(538): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n       BROTLI_UNUSED_FUNCTION void BrotliSuppressUnusedFunctions(void) {\n       ^\n\n 8>Done Building Project \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj\" (default targets) -- FAILED.\n 9>ClCompile:\n     backward_references.c\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(338): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       static BROTLI_INLINE uint16_t BrotliUnalignedRead16(const void* p) {\n              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(338): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       static BROTLI_INLINE uint16_t BrotliUnalignedRead16(const void* p) {\n              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(338): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       static BROTLI_INLINE uint16_t BrotliUnalignedRead16(const void* p) {\n                            ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(339): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n         return *(const uint16_t*)p;\n                                  ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(341): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       static BROTLI_INLINE uint32_t BrotliUnalignedRead32(const void* p) {\n              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(341): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       static BROTLI_INLINE uint32_t BrotliUnalignedRead32(const void* p) {\n              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(341): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       static BROTLI_INLINE uint32_t BrotliUnalignedRead32(const void* p) {\n              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(341): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       static BROTLI_INLINE uint32_t BrotliUnalignedRead32(const void* p) {\n                            ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(342): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n         return *(const uint32_t*)p;\n                                  ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(366): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       static BROTLI_INLINE uint64_t BrotliUnalignedRead64(const void* p) {\n              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(366): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       static BROTLI_INLINE uint64_t BrotliUnalignedRead64(const void* p) {\n              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(366): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       static BROTLI_INLINE uint64_t BrotliUnalignedRead64(const void* p) {\n              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(366): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       static BROTLI_INLINE uint64_t BrotliUnalignedRead64(const void* p) {\n                            ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(368): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n         memcpy(&v, p, sizeof(uint64_t));\n                    ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(372): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       static BROTLI_INLINE void BrotliUnalignedWrite64(void* p, uint64_t v) {\n              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(372): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       static BROTLI_INLINE void BrotliUnalignedWrite64(void* p, uint64_t v) {\n              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(372): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       static BROTLI_INLINE void BrotliUnalignedWrite64(void* p, uint64_t v) {\n              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(372): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       static BROTLI_INLINE void BrotliUnalignedWrite64(void* p, uint64_t v) {\n                            ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(373): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n         memcpy(p, &v, sizeof(uint64_t));\n                ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(373): error : identifier \"v\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n         memcpy(p, &v, sizeof(uint64_t));\n                    ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(500): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       static BROTLI_INLINE void BrotliRBit(void) { /* Should break build if used. */ }\n              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(500): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       static BROTLI_INLINE void BrotliRBit(void) { /* Should break build if used. */ }\n              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(500): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       static BROTLI_INLINE void BrotliRBit(void) { /* Should break build if used. */ }\n              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(500): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       static BROTLI_INLINE void BrotliRBit(void) { /* Should break build if used. */ }\n                            ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(double) BROTLI_MIN_MAX(float) BROTLI_MIN_MAX(int)\n                                                    ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                              ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_MIN_MAX(size_t) BROTLI_MIN_MAX(uint32_t) BROTLI_MIN_MAX(uint8_t)\n                                                       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(538): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_UNUSED_FUNCTION void BrotliSuppressUnusedFunctions(void) {\n       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(538): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_UNUSED_FUNCTION void BrotliSuppressUnusedFunctions(void) {\n       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(538): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_UNUSED_FUNCTION void BrotliSuppressUnusedFunctions(void) {\n       ^\n\n 9>D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(538): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n       BROTLI_UNUSED_FUNCTION void BrotliSuppressUnusedFunctions(void) {\n       ^\n\n 9>Done Building Project \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj\" (default targets) -- FAILED.\n 1>Done Building Project \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\ALL_BUILD.vcxproj\" (default targets) -- FAILED.\n\nBuild FAILED.\n   \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\ALL_BUILD.vcxproj\" (default target) (1) ->\n   \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj\" (default target) (7) ->\n   (ClCompile target) ->\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(338): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(338): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(338): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(339): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(341): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(341): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(341): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(341): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(342): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(366): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(366): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(366): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(366): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(368): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(372): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(372): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(372): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(372): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(373): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(373): error : identifier \"v\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(500): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(500): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(500): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(500): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(538): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(538): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(538): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(538): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec-static.vcxproj]\n\n\n   \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\ALL_BUILD.vcxproj\" (default target) (1) ->\n   \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj\" (default target) (6) ->\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(338): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(338): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(338): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(339): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(341): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(341): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(341): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(341): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(342): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(366): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(366): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(366): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(366): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(368): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(372): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(372): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(372): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(372): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(373): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(373): error : identifier \"v\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(500): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(500): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(500): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(500): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(538): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(538): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(538): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\dec\\./../common/platform.h(538): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlidec.vcxproj]\n\n\n   \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\ALL_BUILD.vcxproj\" (default target) (1) ->\n   \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj\" (default target) (8) ->\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(338): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(338): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(338): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(339): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(341): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(341): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(341): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(341): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(342): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(366): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(366): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(366): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(366): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(368): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(372): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(372): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(372): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(372): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(373): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(373): error : identifier \"v\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(500): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(500): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(500): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(500): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(538): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(538): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(538): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(538): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc.vcxproj]\n\n\n   \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\ALL_BUILD.vcxproj\" (default target) (1) ->\n   \"D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj\" (default target) (9) ->\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(338): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(338): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(338): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(339): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(341): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(341): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(341): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(341): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(342): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(366): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(366): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(366): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(366): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(368): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(372): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(372): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(372): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(372): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(373): error : identifier \"p\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(373): error : identifier \"v\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(500): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(500): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(500): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(500): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(514): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"a\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(515): error : identifier \"b\" is undefined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(538): error : expected a type specifier [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(538): error : function \"__attribute__\" has already been defined [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(538): error #141: unnamed prototyped parameters not allowed when body is present [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n     D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\c\\enc\\./../common/platform.h(538): error : expected a \"{\" [D:\\_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32\\brotlienc-static.vcxproj]\n\n0 Warning(s)\n400 Error(s)\n\nTime Elapsed 00:00:09.44\nD:_Johnex\\Desktop\\Libraries\\brotli-1.0.7\\32>\n```. ",
    "astratsx": "Thanks. Much appreciated.. ",
    "stephenkyle-ARM": "Thanks for the feedback, here's an updated version. I figured it would be best to avoid people mistakenly choosing the wrong guard for ARMV8* defines in the future by forcing them to choose _32, _64, or _ANY. Let me know what you think?. Added the guard, and an alternative solution if that guard fails.. Okay, here's a comparison of the code generation that I'm seeing with the versions of gcc/clang available in ChromeOS.\nThis is using the gcc compiler:\narmv7a-cros-linux-gnueabi-gcc.real (4.9.2_cos_gg_4.9.2-r191-71959ce8f47f676a26bb21da7117101d9d73867e_4.9.2-r191) 4.9.x 20150123 (prerelease)\nand the clang compiler:\nChromium OS 7.0_pre328903_p20180425-r5 clang version 7.0.0 (/var/cache/chromeos-cache/distfiles/host/egit-src/clang.git e7408fe366bb18923fa360b069b4e4566203f34f) (/var/cache/chromeos-cache/distfiles/host/egit-src/llvm.git 95561668f063fbcb8195bde05ecede721ece4ba4) (based on LLVM 7.0.0svn)\nTarget: armv7a-cros-linux-gnueabi\nThis produces the following assembly:\n```\n=== GCC NO NEON\n=== using: -march=armv8-a+crc -mtune=cortex-a57.cortex-a53 -O3\n00000000 :\n   0:   e9c0 2300   strd    r2, r3, [r0]\n   4:   4770        bx  lr\n   6:   bf00        nop\n00000008 :\n   8:   e9d0 0300   ldrd    r0, r3, [r0]\n   c:   2200        movs    r2, #0\n   e:   ea42 0200   orr.w   r2, r2, r0\n  12:   4610        mov r0, r2\n  14:   4619        mov r1, r3\n  16:   4770        bx  lr\n00000018 :\n  18:   6002        str r2, [r0, #0]\n  1a:   6043        str r3, [r0, #4]\n  1c:   4770        bx  lr\n  1e:   bf00        nop\n00000020 :\n  20:   6801        ldr r1, [r0, #0]\n  22:   2200        movs    r2, #0\n  24:   6840        ldr r0, [r0, #4]\n  26:   4603        mov r3, r0\n  28:   ea42 0201   orr.w   r2, r2, r1\n  2c:   4610        mov r0, r2\n  2e:   4619        mov r1, r3\n  30:   4770        bx  lr\n  32:   bf00        nop\n00000034 :\n  34:   b082        sub sp, #8\n  36:   6002        str r2, [r0, #0]\n  38:   6043        str r3, [r0, #4]\n  3a:   b002        add sp, #8\n  3c:   4770        bx  lr\n  3e:   bf00        nop\n00000040 :\n  40:   4b0a        ldr r3, [pc, #40]   ; (6c )\n  42:   f84d ed04   str.w   lr, [sp, #-4]!\n  46:   447b        add r3, pc\n  48:   681b        ldr r3, [r3, #0]\n  4a:   b085        sub sp, #20\n  4c:   6841        ldr r1, [r0, #4]\n  4e:   6800        ldr r0, [r0, #0]\n  50:   681a        ldr r2, [r3, #0]\n  52:   9203        str r2, [sp, #12]\n  54:   9a03        ldr r2, [sp, #12]\n  56:   681b        ldr r3, [r3, #0]\n  58:   e9cd 0100   strd    r0, r1, [sp]\n  5c:   429a        cmp r2, r3\n  5e:   d102        bne.n   66 \n  60:   b005        add sp, #20\n  62:   f85d fb04   ldr.w   pc, [sp], #4\n  66:   f7ff fffe   bl  0 <__stack_chk_fail>\n  6a:   bf00        nop\n  6c:   00000022    .word   0x00000022\n00000070 :\n  70:   6002        str r2, [r0, #0]\n  72:   6043        str r3, [r0, #4]\n  74:   4770        bx  lr\n  76:   bf00        nop\n00000078 :\n  78:   4603        mov r3, r0\n  7a:   6800        ldr r0, [r0, #0]\n  7c:   6859        ldr r1, [r3, #4]\n  7e:   4770        bx  lr\n=== GCC NEON\n=== using: -march=armv8-a+crc -mtune=cortex-a57.cortex-a53 -O3 -mfpu=neon\n00000000 :\n   0:   e9c0 2300   strd    r2, r3, [r0]\n   4:   4770        bx  lr\n   6:   bf00        nop\n00000008 :\n   8:   e9d0 1300   ldrd    r1, r3, [r0]\n   c:   2200        movs    r2, #0\n   e:   ea42 0201   orr.w   r2, r2, r1\n  12:   4610        mov r0, r2\n  14:   4619        mov r1, r3\n  16:   4770        bx  lr\n00000018 :\n  18:   6002        str r2, [r0, #0]\n  1a:   6043        str r3, [r0, #4]\n  1c:   4770        bx  lr\n  1e:   bf00        nop\n00000020 :\n  20:   6801        ldr r1, [r0, #0]\n  22:   2200        movs    r2, #0\n  24:   6840        ldr r0, [r0, #4]\n  26:   4603        mov r3, r0\n  28:   ea42 0201   orr.w   r2, r2, r1\n  2c:   4610        mov r0, r2\n  2e:   4619        mov r1, r3\n  30:   4770        bx  lr\n  32:   bf00        nop\n00000034 :\n  34:   b082        sub sp, #8\n  36:   6002        str r2, [r0, #0]\n  38:   6043        str r3, [r0, #4]\n  3a:   b002        add sp, #8\n  3c:   4770        bx  lr\n  3e:   bf00        nop\n00000040 :\n  40:   4b0a        ldr r3, [pc, #40]   ; (6c )\n  42:   f84d ed04   str.w   lr, [sp, #-4]!\n  46:   447b        add r3, pc\n  48:   681b        ldr r3, [r3, #0]\n  4a:   b085        sub sp, #20\n  4c:   6841        ldr r1, [r0, #4]\n  4e:   6800        ldr r0, [r0, #0]\n  50:   681a        ldr r2, [r3, #0]\n  52:   9203        str r2, [sp, #12]\n  54:   9a03        ldr r2, [sp, #12]\n  56:   681b        ldr r3, [r3, #0]\n  58:   e9cd 0100   strd    r0, r1, [sp]\n  5c:   429a        cmp r2, r3\n  5e:   d102        bne.n   66 \n  60:   b005        add sp, #20\n  62:   f85d fb04   ldr.w   pc, [sp], #4\n  66:   f7ff fffe   bl  0 <__stack_chk_fail>\n  6a:   bf00        nop\n  6c:   00000022    .word   0x00000022\n00000070 :\n  70:   ec43 2b30   vmov    d16, r2, r3\n  74:   f940 07cf   vst1.64 {d16}, [r0]\n  78:   4770        bx  lr\n  7a:   bf00        nop\n0000007c :\n  7c:   f960 07cf   vld1.64 {d16}, [r0]\n  80:   ec51 0b30   vmov    r0, r1, d16\n  84:   4770        bx  lr\n  86:   bf00        nop\n=== CLANG \n=== using: -march=armv8-a+crc -mtune=cortex-a57.cortex-a53 -O3 \n=== (using -mfpu=neon seems to have no effect)\n00000000 :\n   0:   e9c0 2300   strd    r2, r3, [r0]\n   4:   4770        bx  lr\n00000006 :\n   6:   e9d0 2100   ldrd    r2, r1, [r0]\n   a:   4610        mov r0, r2\n   c:   4770        bx  lr\n0000000e :\n   e:   6002        str r2, [r0, #0]\n  10:   6043        str r3, [r0, #4]\n  12:   4770        bx  lr\n00000014 :\n  14:   6802        ldr r2, [r0, #0]\n  16:   6841        ldr r1, [r0, #4]\n  18:   4610        mov r0, r2\n  1a:   4770        bx  lr\n0000001c :\n  1c:   b580        push    {r7, lr}\n  1e:   466f        mov r7, sp\n  20:   b084        sub sp, #16\n  22:   4909        ldr r1, [pc, #36]   ; (48 )\n  24:   9301        str r3, [sp, #4]\n  26:   4479        add r1, pc\n  28:   9200        str r2, [sp, #0]\n  2a:   eddd 0b00   vldr    d16, [sp]\n  2e:   6809        ldr r1, [r1, #0]\n  30:   680a        ldr r2, [r1, #0]\n  32:   9203        str r2, [sp, #12]\n  34:   f940 070f   vst1.8  {d16}, [r0]\n  38:   9803        ldr r0, [sp, #12]\n  3a:   6809        ldr r1, [r1, #0]\n  3c:   1a08        subs    r0, r1, r0\n  3e:   d101        bne.n   44 \n  40:   b004        add sp, #16\n  42:   bd80        pop {r7, pc}\n  44:   f7ff fffe   bl  0 <__stack_chk_fail>\n  48:   0000001e    .word   0x0000001e\n0000004c :\n  4c:   6802        ldr r2, [r0, #0]\n  4e:   6841        ldr r1, [r0, #4]\n  50:   4610        mov r0, r2\n  52:   4770        bx  lr\n00000054 :\n  54:   6043        str r3, [r0, #4]\n  56:   6002        str r2, [r0, #0]\n  58:   4770        bx  lr\n0000005a :\n  5a:   6802        ldr r2, [r0, #0]\n  5c:   6841        ldr r1, [r0, #4]\n  5e:   4610        mov r0, r2\n  60:   4770        bx  lr\n```\nYou can play around with the code I was using at https://godbolt.org/g/pE7Q9V\nSo I suggest we go with attribute(aligned) when available, and then memcpy in the rare case it's not?\nLet me know if you agree, and then I'll push a new version. Thanks!. Relands https://github.com/google/brotli/pull/699.. The CI seems to suffer from network issues often... let me try again.. Looks good now.. Hi. I've been doing some profiling of brotli on 32-bit arm, and found that the following code change can reduce the number of loads we do in the hot symbol preloading/decoding code path, which is good for an average 1.5% increase in decompression performance on recent out-of-order Arm cores, and an average 5% increase in decompression performance on recent in-order Arm cores. This is testing using the test cases found in the test suite for snappy (https://github.com/google/snappy/tree/master/testdata).\nI'd be interested to know if you have any other thoughts on potential avenues for optimisation of brotli on arm. I see that you've already used NEON to accelerate the CommandPostDecodeLiterals stage (the memmove16 optimisation), but otherwise there doesn't seem to be much else that I can see that is both amenable to vectorisation here, but also particularly hot.. Thanks for the advice, @eustas, I'll get back to you with a rewrite. Just to check for point 1, you want BROTLI_ALIGNED(N) to be a macro for __attribute__((aligned(N)), and to use it in the uint32_t definition of HuffmanCode, and also anywhere else we're using the attribute (my recent bugfix for example.). Hi. Unfortunately just using *table & 0xFF followed by *table >> 16 would always produce two loads, requiring me to add some extra macros to prepare a variable for loading the value into, and loading the value - _PREPARE_TO_ACCESS and _UPDATE. The use of these macros has no effect on the x86 code, as far as I can see.. I feel like the CI is suffering from some issues? Time outs, unable to install Java, a missing standard library header on OS X, and encoder tests failing, which my patches shouldn't be affecting?. Hi @eustas, did you get a chance to look at the latest version of this PR? . Thanks for the feedback, @eustas. I'm out of office for the next few days, I'll push an update next week. (This applies to the cross-compilation PR as well.). No problem, @eustas! It's good to get these things right.. Well that's unusual - the CI actually fails to use the arm-linux-gnueabihf compiler successfully, but then doesn't detect that the job failed? Will need investigation.. I've had to drop the aarch64-linux-gnu builder, because there appears to be a bug with the qemu-aarch64 available on Ubuntu trusty.\n@eustas, PTAL?. Ah, looks like TOOLCHAIN (which I was using to select which toolchain to use when running make) is being set in this case, but not to the correct triplet name, so that build is failing, let me rename it.... Thanks for doing that @eustas. I was curious why the CI bot I added didn't pick this up, I should have a PR that fixes this shortly.... Hi @eustas, thanks for the feedback.\nSo just to check, you're suggesting we make both the setters and getters access HuffmanCode (not a pointer):\n```\n/ Getters and setters must be given a HuffmanCode. /        \ndefine BROTLI_HC_GET_BITS(H) (H.bits)\ndefine BROTLI_HC_GET_VALUE(H) (H.value)\n```\n(and with FAST_LOAD:)\n```\n/ Getters and setters must be given a HuffmanCode. /   \ndefine BROTLI_HC_GET_BITS(H) (H & 0xFFu)\ndefine BROTLI_HC_GET_VALUE(H) (H >> 16)\n```\nAnd then we drop the PREPARE_TO_ACCESS and UPDATE macros, and just do things like:\nstatic BROTLI_INLINE uint32_t DecodeSymbol(uint32_t bits,                  \n                                           const HuffmanCode* table,       \n                                           BrotliBitReader* br) {          \n  HuffmanCode huffman_code;                                                \n  table += bits & HUFFMAN_TABLE_MASK;                                      \n  huffman_code = *table;                                                   \n  if (BROTLI_HC_GET_BITS(huffman_code) > HUFFMAN_TABLE_BITS) {             \n    uint32_t nbits = BROTLI_HC_GET_BITS(huffman_code) - HUFFMAN_TABLE_BITS;\n    BrotliDropBits(br, HUFFMAN_TABLE_BITS);                                \n    table += BROTLI_HC_GET_VALUE(huffman_code);                            \n    table += (bits >> HUFFMAN_TABLE_BITS) & BitMask(nbits);                \n    huffman_code = *table;                                                 \n  }                                                                        \n  BrotliDropBits(br, BROTLI_HC_GET_BITS(huffman_code));                    \n  return BROTLI_HC_GET_VALUE(huffman_code);                                \n}\n(Which name would you prefer for the local variable? huffman_code, prefix_code, _table, etc?. @eustas my rewrite of the code as described above unfortunately leads to code changes on x86, and a minor regression on the x86 chromebook I'm testing on, so I'm not sure if we can get rid of the prepare/update wrappers.. Done.. Done.. ",
    "jan-wassenberg": "How's code generation for uint64_t x; memcpy(&x, ptr, 8);? I'd recommend that approach instead because volatile semantics differ between compilers and type-punning might run into trouble with strict aliasing enabled.. Thanks for checking the output! Looks like -march=armv8-a is necessary to elide the memcpy call. Your suggestion of attr+memcpy fallback sounds good to me.. ",
    "jboero": "I signed it!. I'm the only contributor here.. ??. I signed it!. So weird - the brackets around my github name?  I never added them and can't seem to remove them.  Tried updating my username in the CLA with brackets.. wonky. Ah I see - local git config got brackets.  Let me try this again.. W00t thanks got my wibbly wobbly brackets sorted!. \n. Yeah sorry I developed it at root of a repo I created. Did you try it out anyway? I can correct the readme or play the pseudocode card.. ",
    "thc202": "The email in the commit is surrounded by square brackets, try remove them.. ",
    "SaveTheRbtz": "@eustas I've updated the diff w/ BROTLI_MAX_BACKWARD_LIMIT.. ",
    "pmouawad": "Hello @eustas ,\nIs there some planned date ?\nWe are interested also at JMeter project:\n\nhttps://bz.apache.org/bugzilla/show_bug.cgi?id=62842\n\nThank you\nRegards. Hello,\nThanks for feedback.\nIn JMeter we\u2019re using it for brotli decoding.\nIt works, but for www.google.com it fails:\n- https://bz.apache.org/bugzilla/show_bug.cgi?id=62842\nI double checked , I see changes in org.brotli.dec.Utils.\nI'll wait for the release.\nRegards . Hello,\nAfter double checking our code, there is no issue in dec, sorry for the noise.\nAnd thanks for your rapid and great quality feedback.\nRegards. ",
    "XPanniX": "Stumbled upon this after browsing the web like @maniac0s.  \nI just wanted to clarify how to get the Brotli module working in Apache2 (Version >=2.4.26) for anyone having the same problem. Apparently all you need to do is:\na2enmod brotli.\n",
    "chylex": "The default quality is mentioned:\n-Z, --best                  use best compression level (11) (default)\nI think the single dash (-0 to -9) quality parameters are just for convenience, the problem is that by convention a single dash parameter can only by followed by a single character, so -10 or -11 would break the convention.. ",
    "apan1000": "Signed CLA. ",
    "very-cool-name": "Or if for some reason number 217 is necessary, you can use array initialization:\nstatic const char kPrefixSuffix[217] = {'\\1', ' ', '\\2', ',', ' ', ...}\ntedious, but you have to write it only once.. ",
    "PopeSpaceous": "I signed it!. ",
    "enexusde": "Looks good.. ",
    "daisuke-t-jp": "Thanks review.\nI changed it.\nRegards.. ",
    "Ranguvar": "These should be different than the old VAAPI patches:\nhttps://aur.archlinux.org/cgit/aur.git/commit/?h=chromium-vaapi&id=5327b2124c5611b9ac5f585765acab763c4a5c5a. ",
    "nigoroll": "I signed it!. the travis failure looks quite unrelated to me. ",
    "mikir": "The generated code does not return the same data if you compress them by BrotliEncoderCompress and decompress by BrotliDecoderDecompress again.\nUsed underlying gcc version is 4.5.4. Actually, we use gcc 4.5.4 under Linux as well. This works. Even MinGW with gcc 4.5.4 works but only 64-bit.\nIt might be that this problem is somehow connected with broken packed attribute in mingw32 described here: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=52991. I don't know.\n32-bits MinGW starts to work as well if you force using of corresponding memcpy inline methods instead of these more efficient \"attribute aligned(1)\" alternatives.. ",
    "gvaish": "May be allow only one of c or d. Exit with an error when both are provided.\nLet the default value of opmode be UNKNOWN with:\nc\ntypedef struct _opmode {\n   BROT_MODE_UNKNOWN,\n   BROT_MODE_COMPRESS,\n   BROT_MODE_DECOMPRESS\n} opmode;\n```c\ncase 'c': {\n  if (opmode != BROT_MODE_UNKNOWN) {\n    exit_with_error(some-code);\n  }\n  proceed-with-compression\n}\n```. ",
    "robryk": "|| exit 1 ?. "
}