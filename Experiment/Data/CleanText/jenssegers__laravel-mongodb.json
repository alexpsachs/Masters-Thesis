{
    "jenssegers": "No this will not work in L3 because it extends Eloquent from L4.\n. I think this is the same behaviour as before, it is the MongoID object. I might take a look on how I can convert the MongoID object to string when it is used like this.\n. If more people would like to see the _id MongoID object converted to a string, please let me know.\n. I updated the code to hide the MongoId and MongoDate object from the user.\n. That should be possible already. It is tested here: https://github.com/jenssegers/Laravel-MongoDB/blob/master/tests/QueryTest.php#L154\n. You should be able to do this with the following configuration array:\nphp\n'mongodb' => array(\n    'host'     => 'db1.example.net:27017,db2.example.net:27017',\n    'database' => 'database',\n    'options'  => array(\n        'replicaSet' => 'myReplSetName'\n    )\n),\n. Did you register an alias, or only the serviceProvider?\n. Do you get this error?\nArgument 2 passed to Illuminate\\Database\\Query\\Builder::__construct() must be an instance of Illuminate\\Database\\Query\\Grammars\\Grammar, null given\nI will check how I can solve this problem.\n. The ConnectionResolver was indeed overwritten by the Mongo model. Update your version and it should work :)\n. Are you able to connect to your server using the regular PHP client? http://www.php.net/manual/en/class.mongoclient.php\n. The library should generate the following connection string for your configuration (https://github.com/jenssegers/Laravel-MongoDB/blob/master/src/Jenssegers/Mongodb/Connection.php#L94):\nmongodb://root:mypassword@localhost:27017/vbtest\n. Can you check if it is working with this last fix?\n. I did not look into pagination yet, I will try to add it today.\n. Pagination was actually working already when I tried it.\n$reports = Report::paginate(5);\nReturned me 5 items, and pagination links.\n. Take and skip is working as well, those are tested by unittests.\n. Can I see your chain?\n. I was able to execute the following without any errors:\n$reports = Report::where('node', 'vmware2')->orderBy('elapsed')->paginate(5);\nBut when I look at your error message, the query builder started using the aggregation framework. Did you use any grouping or aggregation somewhere else or in the same query?\n. Yes, you can just use something like this:\nUser::where('address.country', 'France')->get();\n. You can use this query for that:\nPost::where('tags', 'games')->get();\nCheck https://github.com/jenssegers/Laravel-MongoDB/commit/92754b8e12083e6e332909d511b48610cac4ab73\n. Could you give a bit more details about this error?\n. You can connect to a replica set as described here: https://github.com/jenssegers/Laravel-MongoDB/issues/4\nphp\n'mongodb' => array(\n    'host'     => 'db1.example.net:27017,db2.example.net:27017',\n    'database' => 'database',\n    'options'  => array(\n        'replicaSet' => 'myReplSetName'\n    )\n),\nI will try to make this more easier and better documented.\n. I updated the DSN method an readme to allow an easier connection to multiple hosts https://github.com/jenssegers/Laravel-MongoDB/commit/d8f6b839673db276d086233bc4f55fe7bcfab9d7.\n. The fromDateTime method is protected in the original code? https://github.com/illuminate/database/blob/master/Eloquent/Model.php#L2021\n. This seems to be an issue for Laravel 4.0.x installations, but not on 4.1.x.\n. I will to the latter. Once 4.1 becomes stable I might tag a 4.0 version and change it back.\n. What breaks exactly?\n. I had no trouble updating a project that uses laravel/framework\": \"4.0.*\",\n. What does your composer.json look like.\n. I updated the required versions and was able to do a composer install with your composer.json. Let me know if it is fixed.\n. I did not extend Eloquent, but replaced the DatabaseManager/Builder below. The session drivers are separated from the database.\n. It does indeed call the ConnectionFactory to get the internal PDO object. There is no easy way to get the session system working without a MongoDB session handler.\n. But I will look into MongoDB supported sessions soon.\n. Check out https://github.com/jenssegers/Laravel-MongoDB-Session\nIt adds a mongodb session driver.\n. I did indeed manage to extend the original database manager with a driver. However, this does not change anything for the session driver, so it is still needed.\n. The only thing that has changed for the session driver is to use the new database manager: https://github.com/jenssegers/Laravel-MongoDB-Session/commit/1ad7858a0d6496c08da51410596bf0af6dee39a3\n. This pull request breaks the code if there are no credentials. Are you sure you only need to add credentials once for multiple hosts?\n. Can you confirm that the correct DSN is mongodb://username:password@10.0.0.1,10.0.0.2 and not mongodb://username:password@10.0.0.1,username:password@10.0.0.2?\n. Maybe we should add this to a separate service provider so that we can make this optional? This pull request currently breaks the code because Illuminate\\Validation is not required in the composer.json.\n. I found a way to extend the original database manager instead of registering a new database manager. This pull request is probably no longer needed since it is now using app['db'] and not app['mongodb'] anymore.\n. I added support to execute raw expressions like this:\nDB::collection('users')->raw(function($collection)\n{\n    return $collection->find();\n});\nOr:\nDB::collection('users')->raw()->find();\n. This is currently not support because I try to follow the original Eloquent interface and methods. I might add an additional method for this functionality though. \n. I added push-support in the latest version. Will add support for set and pull soon.\n. Pull is also supported; check out https://github.com/jenssegers/Laravel-MongoDB#mongodb-specific-operations\n. Can you show me what connection string you used for the MongoClient class?\n. Can you show me the one you used for PHP's MongoClient one?\nYour configuration should generate:\nmongodb://darky:password@localhost:32759/database\n. I modified the DSN, can you try again now?\n. We both tackle the same problem in different ways, he creates a completely new eloquent/builder interface and I maintain the original eloquent/builder interface. \nI wanted to be able to switch an existing project from SQL to MongoDB without having to change anything. If you switch to MongoDB with lmongo, you need to completely rewrite your existing code. Even simple things like where('age', '>', 30) are not possible with lmongo.\n. From what I read on http://docs.mongodb.org/manual/reference/connection-string/ I might have to revert the last commit for some users. If you don't specify a database in the connection string it authenticates to the admin database.\nAre you sure you have correctly set up permissions etc?\n. I was unable to connect to a mongolab server because I had no permissions on the admin database. I reverted the changes.\nFailed asserting that exception of type \"MongoConnectionException\" matches expected exception \"Illuminate\\Database\\Eloquent\\ModelNotFoundException\". Message was: \"Failed to connect to: abc.mongolab.com:39058: Authentication failed on database 'admin' with username 'username': auth fails\".\nI think your problem is related to incorrect permissions.\n. I don't really know what is causing that warning, but I don't think it is related to the library as it is PHP's MongoClient that is throwing it. You could try localhost instead of 127.0.0.1.\nGood luck.\n. It will generate the following DSN for the configuration array above:\nmongodb://myusername:mypassword@127.0.0.1:27017/mydb\n. I will try passing the username and password as options to avoid this problem for future users.\n. I modified the Connection class, it should allow usernames and passwords with strange characters now.\n. I'm definitely not an expert in unit testing, there is still a lot I can learn myself.\nWritings tests for an application using this database driver should not be different from tests using the original drivers.\nThe original Laravel tests use Mockery, so be sure to check that out.\n. Is there an advantage in assigning your own values to the _id instead of a separate key? I don't really know any best practices about this.\n. @rms2219 check out the latest commit, it should fix your issue.\n. From where are you calling find, and could you provide the full error message?\n. I think I see your error, you have a syntax error in parent::construct($attributes, $exists);, this should actually be parent::__construct($attributes);.\nAlso, the attributes you are assigning will not be part of your model's attributes. If you want these values to be in your database as wel, add them to the $attributes array before passing it to the parent's constructor.\n. I'm sure if PHP's MongoClient supports this: http://www.php.net/manual/en/mongoclient.construct.php\nYou can try passing it as an 'option' from your connection configuration:\n'mongodb' => array(\n    'driver'   => 'mongodb',\n    ...\n    'options'  => array(...)\n),\n. I added some tests for this, but I don't see an exception? What exception did you get?\n. Are you using the latest version of this library?\n. What is on line 512 in your version? Because I only have a closing bracket on that line.\n. What would be the best solution; replace metrics.clicks with 'metrics_clicks', or just 'clicks'?\n. Sweet!\n. What would you suggest as a solution?\n. I'm closing this for now, as I don't think Laravel does this when connecting to an SQL database.\n. I can add a second optional options parameter to the update method that allows you to pass mongo specific options.\n. Done :)\n. I don't think I will be able to solve this, as doctrine is not used.\n. Fixed in https://github.com/jenssegers/Laravel-MongoDB/issues/34\n. Does this only happen when using migrations? Because MongoClient is the native PHP class.\n. Can you create an instance of MongoClient without this library? I don't think this error is related to this library, but with your Mongo installation.\n. There is also a new project that is creating a MongoDB driver that you can include using composer: https://github.com/mongofill/mongofill\nBut I have not tested it yet.\n. @a-ghasemi There's a separate branch for this. Will be released as a new major version soon.\n. Could you show some code? You can also email it if you prefer.\n. I added the interfaces to the user model I use in the tests, but I did not get the error.\n. I will try it out in a laravel application to see if I get the same error.\n. What features are you guys using from Auth? I created a user and logged in using Auth::attempt and did not see any errors.\n. I'm not getting this error. This is the header of my user model:\n```\n<?php\nuse Illuminate\\Auth\\UserInterface;\nuse Illuminate\\Auth\\Reminders\\RemindableInterface;\nuse Jenssegers\\Mongodb\\Model as Eloquent;\nclass User extends Eloquent implements UserInterface, RemindableInterface {\n```\nEverything else remains unchanged. The auth driver is set (by default) to 'eloquent'.\n. Oh, I was looking at line 216.\nI don't really know how to fix the issue with the date object. @philipzaengle, could you try this for me:\n$createdPlusHour = strtotime((string) $reminder->created_at) + $this->expires;\n. Never mind, the toString method of the MongoDate class does not return a nice date string.\n. I fixed the password reminder issue. Check out the Auth section in the readme: https://github.com/jenssegers/Laravel-MongoDB#auth\n. If you use pgsql as the default driver, you will need to tell your mongodb model to use the mongodb connection. You do this by setting the connection attribute.\n. It is something I should take a look at, but I don't really know when. It's open for pull requests :)\n. This seems to cause a few problems in the tests. I think it is best to manually create a MongoID object for this situation, like you would do with the native objects.\n. I added an example to the readme for your question:\nDB::collection('users')->where('name', 'John')->push('messages', array('from' => 'Jane Doe', 'message' => 'Hi John'));\n. Sorry for the delay, this is now fixed.\n. The soft delete functionality was not overwritten by this library, I don't really know what could be causing this issue.\n. Did you solve the problem?\n. Would it not be better to use the Connection's logQuery method?\n. This is not possible at the moment.\n. You could do this using the raw() method.\nhttps://github.com/jenssegers/Laravel-MongoDB#raw-expressions\n. Laravel has a insertGetId method that returns the id.\n. Can you check out: https://github.com/jenssegers/Laravel-MongoDB/blob/master/tests/RelationsTest.php#L105\nIt seems to be working for me, or am I missing anything?\n. I think so, because $img->meta() will return an SQL relation, and not a MongoDB relation.\n. Sorry for my delayed response.\n. They are using the same \"interface\", but not the same objects. If you define a belongsTo or any other relation on an original sql model object, it will return a mysql relation. And if you define a relation on a mongodb model, it will return a modified object, specific for mongodb.\n. @ollieread, then it would only work in 1 direction, from a mongo-model to original model. But not the other way around.\n. Sure, go ahead :)\n. Need to write unit tests before I can merge this. Will do as soon as I find the time.\n. For me, MongoDate() seems to be working. But new DateTime would be better I think. \n. I'm looking into this right now.\n. I did not encounter any problems with dates. Check the date tests in https://github.com/jenssegers/Laravel-MongoDB/commit/93e53ec9c01a74a1bf491f4758e55325037db546\n. Added some more date tweaks and a bit of documentation: https://github.com/jenssegers/Laravel-MongoDB#dates\n. I added Carbon date support to the latest version. Can anyone report back if he's having problems with these changes?\n. Are you using the correct connection?\n. Seeding works for me.\n. I added a troubleshooting section to the readme that explains this error: https://github.com/jenssegers/laravel-mongodb#troubleshooting\n. Not at this moment. What would be the native PHP code to do this?\n. This should be the same as the original query builder. Try:\n$query->where('column', 'like', 'abc%')\n. I did not try this, but that should work.\n. There is no command support at this moment, but you can get the original MongoDB object with the following method:\n$mongodb = DB::getMongoDB();\n. It returns the MongoDB object. getMongoClient() returns the MongoClient object.\nhttps://github.com/jenssegers/Laravel-MongoDB#raw-expressions\n. You can use the raw method:\nUser::raw()->find(...);\nhttps://github.com/jenssegers/Laravel-MongoDB#raw-expressions\n. I think it would be better to use the raw() method in this case and use the native MongoCollection methods.\nhttps://github.com/jenssegers/Laravel-MongoDB#raw-expressions\n. What do you mean? Using this library outside of a Laravel project?\n. You should be able to just use the query builder, like you would in Laravel: https://github.com/jenssegers/Laravel-MongoDB#query-builder\n. DB::getMongoDB() should work in that case.\nhttps://github.com/jenssegers/Laravel-MongoDB/blob/master/tests/ConnectionTest.php#L27\n. Why are you using the string()method if I may ask?\n. Oh, are you getting this error if you are running built-in migrations like reminders? I will add a string method to the blueprint class that does nothing to solve this :)\n. I updated the schema builder to support \"fluent\" schema building.\n. I don't know if I want to make this change at this moment. I prefer to follow the current stable Laravel release to prevent compatibility issues.\n. I added a test for this but did not see any errors.\n. Don't really know if I should change this now, or wait for the stable 4.1 release ...\n. The last commit on the develop branch updates some methods to their 4.1 version: https://github.com/jenssegers/Laravel-MongoDB/commit/257b92fe2b627c4ad268194e03b01a546ef1e54b\nCan you test this version?\n. If you want to work with \"custom\" date fields, you need to specify them in your model like you would with the original Eloquent model. https://github.com/jenssegers/Laravel-MongoDB#dates\n. The reason I convert it to a string is mainly for the JSON output of the model. But it should not really matter if you specify the date fields in the model class.\n. @robcaw, only if you specify them in your class: protected $dates = array('birthday');\n. That should not happen. This functionality is tested in https://github.com/jenssegers/Laravel-MongoDB/blob/master/tests/ModelTest.php#L312\n. The native MongoDB PHP driver always returns data as an array. It does not have something like PDO::FETCH_OBJ, so there is not much I can do about it.\n. I heard that the model is compatible with Sentry, but I did not test it.\nYou can access sub-documents, but there are no sub-models.\n. I did not test the methods you are using. I tested relations with the more manual approach by passing id's: https://github.com/jenssegers/Laravel-MongoDB/blob/master/tests/RelationsTest.php\nI will try to find out why items()->save(..) is not working. Do you have more documentation on this way of saving relations?\n. I added your way of saving models to the tests and did not encounter any problems: https://github.com/jenssegers/Laravel-MongoDB/blob/master/tests/RelationsTest.php#L105\n. Looking good man!\n. I slimmed down the BelongsToMany class in https://github.com/jenssegers/Laravel-MongoDB/commit/e89d2263642d69d5087b4b950fc00df479e40d0f\n. I added a bit of information: https://github.com/jenssegers/Laravel-MongoDB#relations\n. I added this in https://github.com/jenssegers/Laravel-MongoDB/commit/040b7944c4185db60f404866739a60044bed9963 :)\n. Maybe @DyeH could pitch in? I will take a look at it as well.\n. If you add this it will fail:\n```\n        // Detach clients from user\n        $user->clients()->sync(array());\n    // Get the new user model\n    $user = User::where('name', '=', 'Jane Doe')->first();\n    $client = Client::Where('name', '=', 'Buffet Bar Inc.')->first();\n\n    // Assert they are not attached\n    $this->assertFalse(in_array($client->_id, $user->client_ids));\n    $this->assertFalse(in_array($user->_id, $client->user_ids));\n    $this->assertCount(0, $user->clients);\n    $this->assertCount(1, $client->users);\n\n``\n. Are all your models extending the included model class?\n. No it should not create a pivot table. It will add a 'membership_ids' to your user document and a 'user_ids' to your membership document.\n. Are you using the dev-master version or the latest tag?\n. And you are using the latest version? BelongsToMany support has only been added 7 days ago.\n. Runcomposer update` to be sure :)\n. I should look into that to be sure. Will let you know asap.\n. You can, I just added a test for it in https://github.com/jenssegers/Laravel-MongoDB/commit/34ea8120f1ce59f9026de9c51129f4e8fcae7f13\nJust keep in mind that the second parameter for the belongsToMany methods does not actually do anything, since it defines the name of the pivot table.\nFor example:\npublic function groups()\n{\n    return $this->belongsToMany('Group', 'does_not_matter', 'users', 'groups');\n}\n. I just added some documentation on this in the readme.\n. Thanks David!\n. Validation seems to work for me. It's a bit hard to add it to the tests because it requires quite some components.\n. I don't know about the '.', I tested it with a collection name without a dot.\n. Collection names with a dot seems to work. It runs this query:\nmycollection.aggregate([{\"$match\":{\"id\":\"xxx\"}},{\"$group\":{\"_id\":null,\"*\":{\"$sum\":1}}}])\n. Bingo :p\n. This is a known issue with PHP's mongo driver. I can't really do anything about it without a big impact on the performance. This was also mentioned in #65.\nBut this should be possible:\n$transport = new Transport();\n$transport->received = array(\n    'date' => Input::get('received_date'),\n    'by' => Input::get('received_by'),\n);\n$transport->client = array(\n    'name' => Input::get('client_name'),\n    'givenname' => Input::get('client_givenname'),\n);\n. I have been thinking about the same thing, but I fear it would be bad for performance on big collections because you would have to recursively scan each document.\n. You map always send me possible solutions, preferably with benchmark results :)\n. Now working on embedsMany relations: https://github.com/jenssegers/Laravel-MongoDB#embedsmany-relations\n. @crazycodr, the proxy object would be a performant implementation, but it would only be possible when working with results returned from the model and not with regular queries from DB.\n. The main reason I made this library is for Laravel users to be able to quickly switch between a mysql database to a mongo database without having to change their models or logic. I want to try to stick to the Laravel behavior as much as possible. If users really need to use mongo specific operations, it is better to switch to the native client or to use raw expressions.\nNevertheless, this would be a useful feature that makes the model objects more intuitive. As long as it does not drift away from basic Laravel behavior.\n. Thanks man!\n. This is not possible as of this moment. You could raw expressions: https://github.com/jenssegers/Laravel-MongoDB#raw-expressions\n. I will add all support in the next update, check out #82 \n. Check out https://github.com/jenssegers/Laravel-MongoDB#mongodb-specific-operators\n. I could just overwrite the whereExists method, or does this mean something different in MySQL?\n. And I guess whereNotNull does not give the same results.\n. I will take a look at it, should not be that hard I guess.\n. Check out https://github.com/jenssegers/Laravel-MongoDB#mongodb-specific-operators\n. Should be something like:\nModel::whereRaw(...)->take(5)->get();\n. There a multiple ways to store subdocuments. You can do it the Eloquent way with relations, or do it manually and insert arrays/objects as model attributes.\n. Check out 'inserting related models' on http://laravel.com/docs/eloquent#relationships. This will not create an actual subdocument, but will store a reference to the related object.\n. Can you show me the test code that produced the error?\n. This is because MongoDates get converted to string when they are returned from the database. I'll check what I can do.\n. This should be fixed in the newest version.\n. Since the commit above, mongodates are only converted to string when the attributes are converted to an array, which can then be used to print json. So you can perfectly run fromDateTime on any attribute you want.\nI don't really know if $date overrides the original timestamps, that functionality is handled by the original class.\n. Yes that one would be skipped. You could add a saving-event listener that converts the date: http://laravel.com/docs/eloquent#model-events\n. Thanks!\n. You don't need to run migrations to enable soft deletion. But I will fix the nullable issue so that the migration will pass.\n. Try again with the latest version, it should work now :)\n. Not at this moment. But you could use a raw expression: https://github.com/jenssegers/Laravel-MongoDB#raw-expressions\n. The problem I have with these methods is that it deviates a lot from the original Eloquent functionality. MongoDB specific functionality is always available through raw expressions. I'll leave this open for opinions from other users for now.\nI would rather add a third $unique parameter to the push method than introduce a new non-eloquent method.\n. See issue #91\n. I don't really understand the problem. Eager loading with with('user.userame') means that you're loading a nested relationship, not the username attribute of the user.\nFrom the documentation:\n\nIn the example above, the author relationship will be eager loaded, and the author's contacts relation will also be loaded.\n. I can see quite some duplicate code. Do you think it's possible to replace some code with parent::method? The more logic you delegate to the original class, the better.\n. Also, the ModelCross class name, CrossModel sounds a bit better to me. But maybe there are some other possible names for this class?\n\nMaybe SqlModel, or PdoModel?\n. Could be, I did not look into it that much a this moment, was just an observation :)\n. You did not change the hasOne or hasMany relations right? Shouldn't those be modified too?\n. Actually, I think I found a better way to check the relation type:\nphp\nif (!is_subclass_of($related, 'Jenssegers\\Mongodb\\Model'))\n{\n    return parent::relation();\n}\n. With is_subclass_of you don't need to create an instance of the object, so you can add something like this before every relation method: (http://www.php.net/manual/en/function.is-subclass-of.php)\nphp\n    public function belongsToMany($related, $collection = null, $foreignKey = null, $otherKey = null, $relation = null)\n    {\n        // Check if it is a relation with an original model.\n        if (!is_subclass_of($related, 'Jenssegers\\Mongodb\\Model'))\n        {\n            return parent::belongsToMany($related, $collection, $foreignKey, $otherKey, $relation);\n        }\nThis way, there is no need to write any additional \"duplicate\" code, just check what kind of object it is and trigger the parent method.\n. No but this would make the Mongo Model a bit cleaner and easier. This still needs the other model for sql models.\n. Check out https://github.com/jenssegers/Laravel-MongoDB/commit/765e6670007ce6cbdbb5148cbff570d0cb87dfa1\nCould run your test with this model and see if it works?\n. Just thinking out loud here, what if we move the relationship logic to a intermediate class, something like a TwoWayModel, FlexModel, ModelCross or something like that. And let the Model class extend that class. Just like your ModelCross you can then use that intermediate class for 2 way relationships.\nMongo model:\nMongodb\\Model -> Mongodb\\TwoWayModel -> Eloquent\\Model\nSQL model with Mongodb support:\nMongodb\\TwoWayModel -> Eloquent\\Model\nThe only thing the intermediate class does is check what kind of relation you are using, return the parent method for sql models and use the mongodb logic otherwise.\nThis way, all relationship logic is grouped in 1 class without any duplicate code.\n. I am having some problems with belongsToMany relations. That relation assumes you're working with 2 mongodb models. Or maybe I'm doing something stupid ...\n. Check out https://github.com/jenssegers/Laravel-MongoDB/commit/f037b6ae75eddf0ab878053cb09c6d4195ea7784\nI decided to create a Jenssegers/Eloquent/Model which contains the relationship logic for both models.\n. What do you mean?\n. No the problem with BelongsToMany is that the original relationship uses an intermediate table containing the \"link\". The Mongo relationship does not use an intermediate table and instead uses an attribute containing an array of id's. If it would also use an intermediate table, it would also cause problems because you would have to decide which database will \"host\" that table.\nBelongsToMany relationships will not work without quite some additional logic.\n. @ollieread, are the latest changes on the develop branch working for you? I will then merge them into the master branch :)\n. Yes I will close this request :)\n. I have merged the branch and updated readme: https://github.com/jenssegers/Laravel-MongoDB#mysql-relations\n. Mongo specific operations can be executed using raw expressions: https://github.com/jenssegers/Laravel-MongoDB#raw-expressions\nThis package mainly focusses on transforming original Eloquent operations to MongoDB.\n. Why are you using ObjectId?\n. If your relations are set up correctly, you can attach models as described here: http://laravel.com/docs/eloquent#inserting-related-models\n$comment = new Comment(array('message' => 'A new comment.'));\n$post = Post::find(...);\n$comment = $post->comments()->save($comment);\nOr manually like:\n$post = Post::find(...);\n$comment = Comment::create(array('message' => 'A new comment.', 'post_id' => $post->_id));\n. Use $post->comments, because $post->comments() returns the query builder.\n. Indeed, it seems that items.find({\"user_id\":\"52b9505281fec66d6e0041a7\"}, []) does not work if the id is saved as MongoId.\nBut I don't know if it will be easy to make it work. If the id's are stored as string, and you search based on MongoId like items.find({\"user_id\":{\"$id\":\"52b9524181fec6916f0041a7\"}}, []) it won't work either.\n. If I remove the line I get the following error message:\nMongoCursorException: Cannot apply $inc modifier to non-number\n. This error occurs when there is a records that has 'null' as attribute value. This records in the test:\narray('name' => 'Error', 'age' => null, 'title' => null)\n. I will remove the protection for now.\n. I was actually able to tweak the protection to this:\n$this->where(function($query) use ($column)\n{\n    $query->where($column, 'exists', false);\n    $query->orWhereNotNull($column);\n});\nThis protection will included records with non-existing attributes and excluded records with the attribute set to null.\n. It should work fine with the original Laravel authentication. However, there is a known issue with reset/reminders: https://github.com/jenssegers/Laravel-MongoDB/issues/37\n. I fixed the password reminder issue. Check out the Auth section in the readme: https://github.com/jenssegers/Laravel-MongoDB#auth\n. It seems that your PR breaks the current build. Don't use [ ] to create arrays because Laravel has PHP 5.3 support.\n. Well, the main issue I have is that I don't want to add too much non-standard eloquent methods.\n. All MongoDB specific functions are available through raw expressions: https://github.com/jenssegers/Laravel-MongoDB#raw-expressions\n. I don't think this should be in the model code. I don't really want to add too much non-laravel methods.\nAlso, check out http://www.php.net/array_keys, this is a more efficient way to get all the keys of an arary.\n. The latest versions require Laravel 4.1, you can use earlier versions if you want 4.0 compatibility. \n. Probably a method that keeps getting called recursively. I do not think this is related to the library.\n. Should be fixed now.\n. There are some known issues with Laravel's auth, but I heard Sentry worked for at least one person.\n. I'm checking out the Auth issue again to see if there is an easy fix.\n. Your PR did break some relation stuff; but it should be fixed with the latest commit.\n. Oh I had to comment it because I had some problems with it. I enabled it again in the last commit.\n. Is that even possible in MongoDB?\n. Strange, did you change the primary key?\n. Can you try the latest master version? I made a slight modification to the id accessor.\n. And width b625036?\n. @bank32, in your issue, I had no indication what was happening. Because @dgreda provided me with a stacktrace I was able to find the underlying issue.\n. I don't see why it would call the accessor twice. As you can see in the model class, there are little modifications made to the original code.\n. Oh sorry. The dot notation is not something that is built-in to Eloquent, but I might be able to add it to the package.\n. So you're suggesting to not convert the date and return the MongoDate object? The only reason I did this was to mimic the original Eloquent behavior, which also displays dates in 'Y-m-d H:i:s'.\n. SQL databases return date fields as Y-m-d H:i:s, and Eloquent just returns those in toArray. The $dates field is used to convert the received strings to Carbon objects from accessors.\n. True, Eloquent was not really built for subdocuments.\n. You don't need to define an accessor for a custom date field. Eloquent will automatically convert the internal date if it's in the $dates array.\nWhy are you specifically using the date attribute value from toArray()?\n. Why not just treat models like objects instead of using the array values?\nChecking out something.date is on my to-do list.\n. I don't even know if this would be possible in the original eloquent.\n. Laravel's eloquent model stores all model attributes in an $attributes property. Why do you want to define public attributes? This is normal Eloquent behavior. \n. Make sure you are using the right connection: http://laravel.com/docs/schema#creating-and-dropping-tables\nIt seems that your default connection is MySQL.\n. Check out upsert in https://github.com/jenssegers/Laravel-MongoDB#mongodb-specific-operations\n. Does the original Eloquent do this? I thought you had to pass a DateTime object, rather than a string.\n. If you pass a DateTime instance, it will get transformed to a MongoDate object.\n. You need to define the mydate attribute as a date attribute: http://laravel.com/docs/eloquent#date-mutators\n. Check out https://github.com/jenssegers/Laravel-MongoDB#mongodb-specific-operations\n. I guess you will need to make a copy if the Cartalyst\\Sentry\\Users\\Eloquent\\User file, and modify it to extend the mongodb model.\n. Maybe I could create MongoDB-Sentry package that adds a Cartalyst\\Sentry\\Users\\MongoDB\\User model.\n. I created a separate package if you want to use Sentry: https://github.com/jenssegers/Laravel-MongoDB#sentry\n. Is this problem resolved?\n. DB::getQueryLog() will return the logs of the default connection. You need to specify your mongodb connection like this: DB::connection('mongodb')>getQueryLog()\n. find returns a single object, why are you calling first on it?\n. It should return the same result as Eloquent. You're calling find which returns a model instance, and then you call first which (is passed to the query builder) returns a different model instance. So it should actually ignore the first find.\n. It should behave just like the original Eloquent.\n. Don't think this is related to the library, but related to the driver?\n. Is this still a morphTo problem?\n. I added morphTo to the model and added a basic test. Try it out and let me know if it works.\n. I added support for \"hybrid\" relations, but I don't know it they work in this case. Just make sure your mysql models extend the included Eloquent model as described here: https://github.com/jenssegers/Laravel-MongoDB#mysql-relations\n. Check out the examples in the doc and the size method https://github.com/jenssegers/Laravel-MongoDB#mongodb-specific-operators\n. Is this still an issue or can I close this?\n. Can you check if this is fixed with #202?\n. It does not seems easy to add whereHas support, hope someone else can help on this one.\n. Stacktrace?\n. Probably not on subdocuments, unless someone adds it.\n. I tried using ObjectId's but it turned out to be a pain in the ass for Eloquent and the relations.\n. Yes.\n. Cool stuff, thanks!\n. Looks great man!\nBut I don't really like the LogicException. What does Eloquent throw in a similar case?\n. Sorry, Eloquent seems to throw a LogicException as well! Did not know that!\n. $address = new Address(array('city' => 'Paris'));\n$user->addresses()->save($address);\n$addresses = $user->addresses;\nThis does not work right? save() does not exists, and it seems that you need to do an additional save() on the parent object. Might have to look into this.\n. I just modified your code to be a bit more Laravel-like, and added some stuff. Check out the new readme section as wel: https://github.com/jenssegers/Laravel-MongoDB#embedsmany-relations\nWould be awesome of you could double check the code :)\n. @duxet, for some reason it did not let me do a push/pull with an embedded document.\n. @duxet, I was able to use push for inserts, but a pull and push for updates would modify the document order.\n. Thanks @duxet, will try that.\n. @duxet, it is now completely using push/pull/set to update the embedded documents. Still, it seems that embedsMany requires quite some code to do something this \"simple\".\nOne of the issues I'm struggling with is the use of MongoId's. I don't know up front if the embedded model is using the _id/MongoId as primary key, or a completely custom one.\n. @duxet, eager loading should work now.\n. I don't really know how that works in Laravel relations, may not even be possible.\n. Right now, it will store embedded documents in a 'relation_ids' attribute. Which will look like this:\n{\n  \"_id\": \"...\",\n  \"name\": \"John Doe\",\n  \"item_ids\" : [\n    {\n      \"_id\": \"...\",\n      \"name\": \"sword\"\n    }\n  ]\n}\nI don't really like the item_ids attribute because it contains documents, and not id's. But what would be a good alternative? You can't use the items attribute because Eloquent gives a greater priority to attributes over relationships.\n. @duxet and @alexandre-butynski, I changed the local attribute to _relation.\n. I think it's better to fall back to MongoDB queries for this. https://github.com/jenssegers/Laravel-MongoDB#raw-expressions\n. Was that all it took? :)\n. The parent contains the embedded model, so the query should be the parent's one.\n. Thanks for the fix. This was a bit easier: https://github.com/jenssegers/Laravel-MongoDB/commit/128eb7b5dfba95151fbf5ec95f22b3dcee6fbaca\n. Or do composer update.\n. Try \"jenssegers/mongodb\": \"v1.2.0\", it's the latest release.\n. Thanks!\n. I think this might be fixed by using:\nif ( ! $model->getAttribute('_id'))\nWill try that out with your new test.\n. This tweak will now only cause getAttribute('_id') to be called once instead of twice in these edge cases.\n. Great stuff.\n. You are correct, I was able to reproduce the issue. Will push an update in a few minutes.\n. You can now correctly push to model instances.\n. It seems that there is a similar issue with pull as wel.\n. I'm working on a fix. But there seems to be an additional issue with belongsToMany relations that needs to be solved.\n. Is fixed now, as well as belongsToMany relations.\n. Isn't natural sorting the default way of sorting?\n. Mh, I forgot about the actual order. But in that case, what if you have an attribute called natural? Or I should assume the chance of that happening is quite small.\n. Can you make a pull request with your change?\n. Thanks!\n. Great stuff!\n. Are you using the latest version? I updated the belongsToMany relation yesterday that fixed a similar issue.\n. And \"jenssegers/mongodb\": \"dev-master\"?\nWere you using the latest version when you had this error?\n\"minimum-stability\": \"stable\" does limit certain development versions.\n. Try the new version v1.2.1 if you want to keep \"minimum-stability\": \"stable\"\nhttps://github.com/jenssegers/Laravel-MongoDB/releases/tag/v1.2.1\n. Let me know if it solved the relation problem.\n. It's an interesting thought, but Laravel's save and create methods are also persistent right?\n. It might be a good thing to implement an associate method to do this. Is there an inverse method for this?\n. We could introduce an dissociate method to do this. I think most of the code is already there. It's just a matter of extracting the associate/dissociate functionality to a separate method that can be used by the original methods.\n. Although I agree with you, I think this adds a bit too much complexity to the relation class.\n. Looks good.\n. Because there is no intermediate \"table\", the related id's are stored in both collections. The query should return the same result.\nThe reason why this query might seem a bit strange is because the relation extends the original Laravel relation, which uses this kind of eager loading constraint.\n. No not as of this moment. The belongsToMany relation would not work without storing them in both collections (with the current design). Because the belongsToMany relation does not have any parent object and needs to work in both ways.\nI might be able to modify the constraints, but it would still need to save them in both collections.\n. After looking at the code, the way it is implemented right now might seem a bit odd, but it's actually better to do it like this. It's a bit hard to explain, but I'll try.\nRight now, it queries the related collection for objects that contain the parent id in the foreign key field. You suggested the query would make more sense to query the related collection for objects that are referenced in the parent object.\nThat last query will only work if you are sure current parent object is up to date with what is in the database, otherwise it would require an extra query to fetch the latest id's from the parent collection, and another one to actually query the related collection.\n. Thanks!\n. The query builder now converts all operators to lowercase.\n. I allowed the builder to pass the original result from the raw method.\n. Could you also post the expected query?\n. I will look into it. Still, the best way to group queries are the \"avanced queries\" in https://github.com/jenssegers/Laravel-MongoDB#examples\n. Try:\n$event = Event::where(\"active\", true)\n                ->where(function($query) {\n                                $query->where('start_at', '>', Carbon::now()->subHours(8))\n                                      ->orWhere('end_at', '>', Carbon::now()->subHours(2));\n                })\n                ->get();\nI should double check what the result would be for your query with the original Laravel code. But I don't think it's a good practice to rely on that order. It's better to group them in parentheses using \"advanced queries\".\nI think your query would result in:\nWHERE active = true AND start_at > 1395933266 OR end_at > 1395954866\nSo the result may not be what you expect it to be.\n. The update method uses the set operator, so it's not possible at this moment. You can always perform raw operations: https://github.com/jenssegers/Laravel-MongoDB#raw-expressions\n. Seems that there's a bug, probably introduced by some changes in the original Laravel code. I'm doing my best to find it.\n. I was able to fix the morphTo bug, but there seems to be a build error in your pull request, can you check it out?\n. Is this ready to be merged?\nCan you add mockery to the composer.json file?\n. I modified the query builder a bit, and added a test for your issue. This should be fixed now.\n. Check out https://github.com/jenssegers/Laravel-MongoDB#auth\n. Thanks!\n. MongoDB does not have a schema, the schema builder is mainly used create/delete collections and to define indexes.\nMore info: https://github.com/jenssegers/Laravel-MongoDB#schema\n. Probably through a raw operation or mark it as hidden in your model, check out https://github.com/jenssegers/Laravel-MongoDB#raw-expressions\n. I don't think there's a MongoDB schema option to define a field to accept binary data.\n. The belongsToMany relation is implemented this way. https://github.com/jenssegers/Laravel-MongoDB#relations\n. I added a validation test in https://github.com/jenssegers/Laravel-MongoDB/blob/master/tests/ValidationTest.php and it seems to work.\n. I just tested this behavior and it only saves 1 address. When the first address is passed to the save method of the relation, it will be created and assigned a unique id. If that same object, with the same id is passed again, it should update the original object, and not insert a new one.\n. The \"conversion\" is probably done by the getters of the Eloquent class, since this library does not change the getters, this behavior should still be there.\nSpecifying the fields kind of goes against the \"philosophy\" of MongoDB that does not require a schema.\n. They are stored like the actual object attributes. I don't think Eloquent modifies the setters to snake or came case, or it would be the same in this library since this library completely extends the original Eloquent class.\n. I added count() to the embedsMany relation, this should work now.\n. No it is not possible to do this at this moment. The advantage of having embedded documents is that you only need to do 1 query, so executing another query to sort subdocuments would be ridiculous.\nHowever, the relation returns a collection of objects, so you should be able to use the sortBy method. http://laravel.com/docs/eloquent#collections\n. It would be possible to mimic the orderBy function with the sortBy method of the collection. But I think that since the objects are embedded, the developer should be aware that he can not execute query methods on the subdocuments. \n. Are you sure you want to store that many embedded documents? :)\n. Because embedsMany stores related objects inside the parent object, you need to make sure that gets saved as last. Adding a relation to an embedded object will not trigger the save operation on the \"root\".\n. Can you show me the code example when it would fail without the contains?\n. Why would you create objects like that?\n. I'm going to merge this, it kind of makes sense to check primary keys.\n. The has and whereHas functionality has not been \"ported\" to MongoDB yet.\n. I just added has and whereHas functionality to hasMany and hasOne relations. However, the queries made in the background could cause some slight overhead. I would not suggest to use the has function on large collections.\nIn the background it will actually generate a whereIn() that is added to the main query. I could not figure out a different way to port has to MongoDB in a more performant way.\nTry it out and let me know if it works.\n. That is because in the \"query translation\", the $limit option is probably applied after the results are aggregated.\n// Apply order and limit\nif ($this->orders) $pipeline[] = array('$sort' => $this->orders);\nif ($this->offset) $pipeline[] = array('$skip' => $this->offset);\nif ($this->limit)  $pipeline[] = array('$limit' => $this->limit);\n. Can you check the output of DB::getQueryLog()?\n. I think the limit only applies to the results of the pipeline; http://docs.mongodb.org/manual/reference/operator/aggregation/limit/\nDo you know the correct mongodb query to get your desired result?\n. But in MySQL if you would execute this:\nSELECT AVG(connect_time) FROM statuses\nORDER BY date\nLIMIT 0,12\nIt would also be the same as:\nSELECT AVG(connect_time) FROM statuses\nSo right now, it would return the same result as the original Eloquent right? So if you want to change the order of the aggregation pipeline, I think you should execute it manually through a raw operation.\n. For MongoDB it would make sense. But this library is meant to be an easy replacement for the original Eloquent. I don't know if this new logic/behavior would be obvious for new users. It would also require quite some changes in the query builder.\n. But then again, if you're working with an sql database in mind, you would probably not do this query.\n. For avg, sum, min and max aggregations it would not matter indeed. But the aggregation framework is also used for grouping, and then the order does matter.\nI made this library to give developers the opportunity to switch from SQL to MongoDB whenever they want, without having to change any code. Therefor I want to follow the Eloquent functionality and behavior as closely as possible. Otherwise, you end up with 2 different \"ORM's\" and different syntaxes (such as LMongo).\n. Did you run the tests on that patch? I think that patch would cause issues for the grouping queries:\nUser::groupBy('age')->skip(1)->take(2)->orderBy('age', 'desc')->get();\nIn that case the limit and skip would be applied before the grouping.\n. That would solve it, but I feel it's more of a tweak for a very specific situation, rather than adding an extra feature.\nBecause then, developers need to keep in mind that when they're using sum/avg/max/min aggregations the limit/skip/sorting is done before the grouping, and without it it is done after the grouping.\n. Most of the id's are intentionally converted to strings because Eloquent relations do not like objects as primary keys.\nI really hope to someday release a 2.x version of this library that does not need to convert MongoId's.\n. I think Laravel's Eloquent behaves similar.\n. Check out http://docs.mongodb.org/manual/reference/method/db.collection.find/\n. Try version 1.2.7, it should be fixed again.\n. I will add HHVM and PHP7 to the Travis builds and try to fix them as much as possible.\n. Still need to figure out how to get mongodb working on Travis + HHVM\n. Not really. I'm hoping for people to contribute PR's as I'm not very familiar with HHVM.\n. This was fixed in the last version.\n. Can you show me a backtrace?\n. Thanks!\n. Can you do this in Eloquent? I can't seem to find any delete methods for hasMany relations.\n. I will take a look at that today.\n. I added a delete method to delete all embedded documents: https://github.com/jenssegers/Laravel-MongoDB/commit/b9e1efe874382b70a34abc0cf8d9d3d25eb45335\n. Multiple embedded relations are not supported yet.\n. You can try firstOrCreate or firstOrNew, which are standard Eloquent methods. Or you can use the MongoDB upsert flag which is explained here: https://github.com/jenssegers/Laravel-MongoDB#mongodb-specific-operations\nThe first option will do an additional query before each insert. The second option will only do a single query, but is not backwards compatible with Eloquent.\n. This is fixed in the current dev-master version, I will tag a new release.\n. Try v1.2.8\n. How are you using this library, in some sort of long running process? Laravel does not cache connections between requests. You could catch the exception and use the reconnect method.\nDB::reconnect('mongodb');\n. Sounds more like a driver related issue if it's not for a running process. Give the reconnect a go.\n. Address should be an object, I don't know why you want to use it as an array.\n. I did not have time yet to test model binding for forms. Will try to do it soon.\n. This is a difficult one, it seems that object_get does not work when you're working with mixed values. The only option I see is to create a custom FormBuilder class that overwrites getModelValueAttribute.\nMaybe this can be reported to the original Laravel repo. So that object_get supports sub-array.\n. I have added an EmbedsOne relation to the current dev-master https://github.com/jenssegers/Laravel-MongoDB/commit/a045497b6f01b0480ffd83e395dc801bf10f58ab. Let me know if this works.\n. It's probably better to use a hasOne relation if your user object is saved in a mysql database.\n. Because the models are embedded, you can't execute database queries. Only collection operations.\n. To execute collection methods you need to get the actual collection object like this:\n$user->books->filter(...)\nThis is because $user->books() returns the relation object instead of the collection object. However, I just commited a new version of the embedsMany relation that allows you to execute collection methods on the relation object. So your filter should work now.\n. You can execute find to get a specific item. If you want to filter items, use the filter method from the collection class.\n. Make sure you change the default connection, or define the connection in your model.\n. https://github.com/jenssegers/Laravel-MongoDB#configuration and https://github.com/jenssegers/Laravel-MongoDB#eloquent\n. I have added the elemMatch operator:\nUser::where('books', 'elemMatch', array('title' => 'The Great Gatsby'))->get();\nEmbedded relations do indeed use an underscore prefix, so in this case you would have to query the _books field.\n. Embedded relations use an underscore prefix to store the items.\n. Could you add a unit test about the problem, so we can make sure we keep this behavior?\n. Strange, maybe you can check the query log and see what goes wrong?\n. Try adding:\nuse Jenssegers\\Mongodb\\Model as Moloquent;\n. Try:\n$user->push(array('_friends' => array('$each' => $hashArray)));\nAnd if you want $addToSet:\n$user->push(array('_friends' => array('$each' => $hashArray)), null, true);\n. You are probable better of doing everything with a \"raw\" query.\n. I don't know if this will be that easy to implement. raw() just returns the underlying mongoCollection or passes it to a closure. The only way I can think of is to wrap the mongoCollection that logs every method.\n. If you remove it, you will see some errors pop up in the tests.\n. I added some more tests and it seems to be working.\n. Can I close this?\n. This is indeed an issue.\n. I modified the builder, your query should work now.\n. +1 What @alexandre-butynski said :)\n. Thanks, don't know why I used a capital D here.\n. @oadtz Did you run phpunit with mongofill? I'm curious if everything works :)\n. That last commit should fix that.\n. The embedded models use _id as default primary key as a way to identify the individual models. I don't really see why (or how) you would use embedded documents without _id.\n. This is fixed in the upcoming released.\n. Should be fixed in the last (master) version.\n. @v-six What would you change?\n. I just added some more operators in 6df8a48, but I did not test them out yet.\nTry something like:\nRestaurant::where('location_coordinates', 'near', array($longitude, $latitude))->get();\nLet me know if it works! And if not, add the resulting query below.\n. No I don't thing this is possible at this moment.\n. And in your database? Push might not modify the model attributes.\n. Push fires a query directly on the database, but does not update the actual model data. I'm putting myself in a tough spot here since I added push and pull to the Eloquent class. In the regular Eloquent class, there are not methods that fire queries and also update model data. The best thing would be to drop push/pull from the Eloquent class and only allow it on the database builder class.\nHowever, push and pull are handy methods when you're working with MongoDB, so I could make an exception for these ones and add code to reflect the database changes to the model data.\n. This is fixed in the next release.\n. A possible solution would be to completely hide the internal _users attribute when converting to json. If you want the users to be included, it will use the relation and you can hide the password there. I will look into this.\n. The internal embedded documents attribute is now automatically removed from the output.\n. The last commit 2dcb459 should fix this.\n. As the Connection object passes unknown methods to the internal MongoDB object, this should also work:\n$grid = DB::getGridFS();\n. Closing this one in favor of #262\n. Does your SQL model extend Jenssegers\\Eloquent\\Model? Check https://github.com/jenssegers/laravel-mongodb#mysql-relations\n. Both your models need to extend custom classes\n. There is a Jenssegers\\Eloquent\\Model class for SQL models and a Jenssegers\\Mongodb\\Model for Mongo models. This is explained in the readme: https://github.com/jenssegers/laravel-mongodb#mysql-relations\n. I don't think $with exists, try protected $appends = ['instructors'];\n. I just added some extra tests in bc842c0 to test with, but it seems ok. I did not test the actual $with attribute yet.\n. For embedded relations, it does not really matter if they get eager loaded or not because they don't require an additional database query. But it's indeed something that's misbehaving, and I will take a look at it as soon as I find some spare time.\n. I don't really understand why this is timing out.\n. Can you check what query is executed in the background?\n. Use:\n```\nuse Jenssegers\\Eloquent\\Model as Eloquent;\nclass Subject extends Eloquent {}\nuse Jenssegers\\Mongodb\\Model as Eloquent;\nclass SubjectDoc extends Eloquent {\n``\n. I just tweaked thegetAttributemethod to accept dot notations in e3ff880, can you check if it works now?\n. @Sjimi, check that last commit. I added a unit test and it seems to work, what are you doing differently?\n. Did not have time to look at it yet, sorry.\n. This will be fixed in the next release.\n. Try version 1.0.1 of the mongodb-session package.\n. Embedded models are stored in a collection, so you can't execute database queries on them. You can however use thefiltermethod of the collection class.\n. All collection methods should be available through the relation.\n. I think somehow, it could be possible to add where queries on the nested documents, but I did not find an elegant solution for it.\n. It was too difficult to execute actual queries on embedded models. However, I added some more operations that can be executed on the Collection instance such as orderBy and where. In the next release you will be able to do your query.\n. Deeply nested documents is not something I would recommend doing this way. But I did not find an alternative yet.\n. The original hasOne relation does not have an associate method.\n. You MySQL model needs to extendJenssegers\\Eloquent\\Model, notJenssegers\\MongoDB\\Model`.\n. Do you have a more detailed error traceback?\n. The \"bad\" thing about embedded models is that you can not use its save method directly, it's the parent that is responsible for saving it to the database.\nI'm thinking on how I could fix this in the next version.\n. This will be fixed in the next release.\n. Isn't this client configuration? Or am I missing something?\n. You just pass the stuff you want to the database config, like:\n'mongodb' => array(\n    'driver'   => 'mongodb',\n    'host'     => array('server1', 'server2'),\n    'port'     => 27017,\n    'username' => 'username',\n    'password' => 'password',\n    'database' => 'database',\n    'options'  => array('replicaSet' => 'replicaSetName')\n),\n. Damn, this might be a difficult one.\n. The \"thing\" that is causing an issue here is the orWhere. It creates: A and B or C. However, if you wrap your own query in another sub-query it should work:\n$users = User::where(function($query)\n        {\n            $query->where('name', 'Harry Hoe')\n                  ->orWhere(function($query)\n                  {\n                      $query->where('age', '>', 15)\n                            ->where('title', '<>', 'admin');\n                  });\n        })\nIt does make it look a lot more complicated :)\n. Would it be an option to re-use the existing appends attribute?\n. Could we rename the attribute to 'exposed'? I think that fits better with the existing 'hidden', 'visible' and 'appends' attributes that Eloquent has.\n. I will add some tests, readme stuff and tag a new version.\n. Don't really know if it should be 'expose', 'exposed' or 'exposes'.\n. Is @mikebronner's solution working for you? I will close this issue for now.\n. Does anyone know of a possible solution on how we could solve these timeout issues?\n. @v-six, thank you very much for that suggestion. It turns out this was really easy to add to the query builder. Setting cursor timeouts will be available in the next release!\n. Did you select the correct database connection? Try setting the default connection to mongodb.\n. Is it only in combination with paginate that select is not working?\n. I have found the issue. You need to pass the select fields to the paginate method:\nHistory::where('user_id', '=', $user_id)->paginate(10, $fields);\n. When does this happen?\n. This will be fixed in the next release.\n. When using groupBy or distinct, it will use mongo's aggregate functions, which will not return id's because the results don't correspond to their original objects anymore (like @mikebronner said).\n. Adding this functionality to the query builder will probably make it deviate from the original Laravel \"interface\" too much.\n. I added and modified your changes for the next release.\n. Could you give more detail about the problem with the find function? Is there an error or is there a bad result?\n. Did you try Package::with('company')->find($id);? With should not be at the end.\n. GridFS falls a bit outside of the Eloquent scope. If you want to use GridFS you can get it like this:\n$grid = DB::getGridFS();\n. Could you show me how you would prefer to use it in combination with the a model class?\n. You can use the findAndModify method directly like this:\nDB::getCollection('collection')-> findAndModify('..');\nAdding the findAndModify method is not on the roadmap yet.\n. Raw queries are executed on the internal mongodb objects at this moment. Because it is kind of impossible to know what results will be coming back from these queries, it is too difficult to convert the results to model objects.\n. You can always try Eloquent's hydrate method.\n$results = Store::hydrate($results);\nI should double check Eloquent's behavior when using groupBy.\n. The whereRaw function should pass the query directly to the query builder, have you tried this?\nPost::where('_id', ...)->where('_comments', 'slice', [0,3])\n. But it should maken an and right?\n. Projections fall outside of the Eloquent scope at this moment. I think the best thing you can do in this case is to use a raw query.\n. Query projections will be available in the next release.\n. Thanks! I moved it to the boot method.\n. @mikebronner The $exposed attribute was added in #248, and is in the readme as well. It basically exposes the hidden _ attributes when doing toJson or toArray.\n@nuwave I made this branch because I did not want to add it to the master directly, as it would break some applications. I will probably rethink some parts of the embedded relations and release it all together in a 2.x release.\n. I just updated the branch to be more flexible in terms of saving embedded models. This is now possible:\n```\n$user = User::create(array('name' => 'John Doe'));\n$address = $user->addresses()->create(array('city' => 'New York'));\n$address->city = 'Paris';\n$address->save();\n```\n. Just pushed another update to the branch that should allow the use of nested embedded relations.\nIt does not create the most optimal queries to update those deeply nested documents, but otherwise the code would become almost unreadable. If it detects that you are doing changes to a model that is a few \"levels\" deep, it will just associate the model with its parent, and trigger a recursive save() that triggers the \"root\" model to write the whole hierarchy do the database.\n. There we go, I merged the new release. You can read the changelog here: https://github.com/jenssegers/laravel-mongodb/releases/tag/v2.0.0\n. #268 might be a better solution for this.\n. How is that possible? It should be \"2014-08-03 23:44:43 America/New_York\" right?\n. I tweaked the password reminder repository to store dates as MongoDate internally. This will be fixed in the upcoming release.\n. I just added a test to the branch for the new version, it seems to be working there. Can you double check the test I added?\nEdit: the test I added was not for a many to many relation. Will add a new one.\n. There was indeed a bug in many to many relations, this will be fixed in the new v2 release.\nThere is still one bug however, the internal attributes of the related model instance are not updated when you attach it to a parent.\n. I added a wrong test for this issue (embedded instead of many to many). This is indeed an issue that is more related to the original Eloquent code than to this library.\nThe best thing you can do is use the save() method instead of attach, which will save it before attaching it to the parent.\n. Did you check the database itself? Are they inserted correctly?\n. I'm trying to rewrite a bit of the embedded model logic for a next release, but it's not going so well.\n. I just did a nice update to improve embedded documents on this branch: https://github.com/jenssegers/laravel-mongodb/tree/embedded-models\nWith this new update, you can do stuff like this:\n```\n$user = User::create(array('name' => 'John Doe'));\n$address = $user->addresses()->create(array('city' => 'New York'));\n$address->city = 'Paris';\n$address->save();\n```\nThe embedded documents will keep a reference to their parent relation and will use different insert, update, save and delete functionality based on their type of relation.\nNOTE! This will be a new major release because it breaks backwards compatibility! Check #269\n. This should already be possible like this:\n$user = User::create(array('name' => 'John Doe'));\n$place = new Place(['city' => 'Paris]);\n$user->placesVisited()->associate($place);\nThis will add a new place to the parent without saving anything to the database.\nI did not test the behavior of the new embedded models on deeply nested documents though.\n. I added some tests for this on the new branch, it seems to be working. Can you check if the test covers your problem?\n. I'm closing this issue for now.\n. It does seem a bit weird that this is not working for you, the unit tests should cover this and they are not failing yet.\n. You can't have $ or . characters in your attributes. I would recommend you to use something like this:\n$quote = $diqr->quotes()->find($quote_id);\n$quote->fill(Input::except('quote_id');\n$quote = $diqr->quotes()->save($quote);\nThere are some changes in the upcoming release that will make saving embedded models a lot easier.\n. No, only using the relation instance.\n. It would be possible to do, but I think it would require a lot of code. First you need to access the parent model's query instance, then you need to do a where query to select the parent object containing that specific object and finally return only that single embedded object.\nWith the changes in v2, this might be reduced to something like this:\nfunction find($id)\n{\n    return $this->getParentRelation()->find($id);\n}\n(not tested)\n. If things are missing in the docs, please tell me or do a pull request :)\n. That is weird, where is the error happening? Do you have a stacktrace?\nThe only thing that has changed recently, that has anything to do with this is https://github.com/jenssegers/laravel-mongodb/commit/96036ab144f7c24ee296f017a0e84050ef94911a But I don't really see why that should cause any problems.\n. @franzliedke do you know why this is happening?\n. @nuwave I'm going to revert the service provider to that code.\n. @nuwave Are you using the session service provider is well? It seems that those 2 were not working together nicely.\n. It should be possible with the Capsule manager, but you will need to find a way to register the mongodb extension with the manager instance.\n. Basically, doing the same as the service provider, but using $capsule->getDatabaseManager()->extend(...)\n. Use where('item', 'not regexp', '...'), it's the same as Laravel.\n. Check out that last commit, it fixes your problem. It will also automatically convert your regular expressions to MongoRegex objects. This will work now:\n$inventories = Inventory::where('item', 'not regexp', \"/^p./\")->take(10)->get();\n. Distinct is indeed not working like it should. It currently uses the mongo distinct method, which does something different from what we're used to in sql. I will see if I can fix this.\n. Did you install the mongodb driver for php? Check out https://github.com/leroy-merlin-br/mongolid-laravel#troubleshooting\n. whereHas is a bit weirdly implemented at this moment because it is really hard to do.\n. Can you do this in regular Eloquent? You can do this however:\nModel::from('...')\n. You will need to use a raw expression to do this: https://github.com/jenssegers/laravel-mongodb#raw-expressions\n. Can you check where this is happening? What is on lines 11132 and 12309\n. I don't know if this should be default behavior. The original query builder does not change what you pass to it either. If you want dates to be automatically converted to mongo dates, I guess you should add it to the dates array of your model.\n. Wow, I did not know this.\n. I added your test to the unit tests and it seems to pass without any errors.\n. I assume this PR is not valid anymore since the next release will be L5?\n. I pushed an update to the develop branch for L5.\n. The all() method should be tested in the unit tests. Can you check what queries are executed in the query log?\n. Can you check if this is fixed in the last release?\n. The alias in the readme completely optional and up to the developer. The Moloquent alias was actually added by the community. If you want to rename it to 'Eloquent', you are free to do so :)\n. I merged @pies PR to the current master branch. Will tag a new release when travis is done.\n. Could you give me some more information of what is happening?\n. This is indeed a bug, I think introduced with the new version with the new embedded relations logic. Will have to take a good look at this and probably rethink the way embedded relations work without having a reference to the parent relation.\n. This is indeed an issue with the current implementation of embedded models. I'm trying to get this fixed in the v3 release.\n. It is used to traverse through multiple embedded model levels to the main parent object that needs to be saved to the database.\n. It wil only break stuff if you are using multiple levels of embedded documents and are doing ->save() on those embedded models. I'm still figuring out a good solution to fix this.\n. Could you do a PR for this?\n. PR merged. Thanks @ricardoaponte!\n. Is this still an issue if you upgrade to the last version?\n. Are you using the latest version? I remember a PR that fixed this.\n. This is true, would you suggest a different approach?\n. If I'm not mistaken, if you execute your query against an sql database with the original Eloquent, you will also get sum of all orders.\n. No, not at this moment.\n. To do mongodb aggregations you need to use raw queries: https://github.com/jenssegers/laravel-mongodb#raw-expressions\n. There are different approaches to this I think. Either you do it the native way, and just get states array and get the first or whatever element. Or you could look into embedded documents: https://github.com/jenssegers/laravel-mongodb#embedsmany-relations\n. The current belongToMany implementation does not use a joining table, so there is no place to actually store it at the moment.\n. The current implementation uses strings rather than MongoId's for relations due to some complications with the original Eloquent code. This is something on the todo list.\n. I think people should be able to figure it out following the Capsule documentation. Will write it on my todo list to link it in the readme.\n. I did not test in on the current L5 code yet.\n. Will soon try to release a new version that supports Laravel 5.\n. Nice @duxet! You're ahead of me. I was waiting until L5 gets a bit more stable, because at this moment, they're still breaking a lot of stuff.\n. I agree that MongoId's are better, but it was too hard too implement it with the current way Eloquent is working. When Laravel 5 is released, and I can find some spare time, I will be looking into this.\n. I have been trying to do this for quite a while, but it takes a lot more changes than the one above. I'll have another go at it this weekend.\n. Sorry for the late response, how would you implement this?\n. I don't think the original Eloquent allows you do to this either. It will probably be better to use a raw query in this case.\n. It is not possible to do join's in mongodb.\n. Glad to see that it works now :)\n. There is no specific support for geodata in this library, but you can still use the original MongoDb methods to do special stuff.\n. Can you insert a MongoInt64 instead? PHP is kind of bad in handling 64 bit integers.\n. You don't have to add double indexes, just unique is fine.\n. Is there a reason why you want to suppress them?\n. Add the field to the dates attribute array, just like you would to in Eloquent. Then you can use the carbon object to format it.\n. I had to manually merge your changes, could not get the github merge to work :(\n. You should be able to use hydrate to create model instances from an array.\n. Marking the fillable dot notations as a feature for the next release.\n. Can you post the mongodb query that was executed?\n. Eager loading embedded relations does not really make that much sense, as they are already embedded in the object you get back from mongodb.\nHowever, the syntax should still work, even if it does nothing. I'll try to fix this in a next release.\n. We're working on it.\n. Use the 2.1.0 tag. I'm currently working on a 3.x version on the develop branch, but it is no way near stable :)\n. Hi @giboow, thank you for this pull request. Did you see the error from Travis?\n. Is it possible to add a simple unit test as a pull request? I will look into fixing it.\n. Could you provide a more detailed stack trace for the error?\n. Looking good!\n. Can you add composer.lock to the .gitignore again?\n. Thanks man!\n. Seems like I've missed your PR. Thanks!\n. Laravel 5 support has been added to the master branch.\n. Tagged a new version. Most of those commits are typo fixes :)\n. Like generates regexp queries, and I don't thing those work on mongo dates.\n. Try the current master branch.\n. Of course. Use the v2.0.3 version tag. The current master will be tagged as a new minor version I think.\n. Will take this into consideration for the new version. Will probably apply the solution with an array of ports for each server.\n. You should be able to either pass a complete DSN or pass hosts including their ports now: ['localhost:27001', 'localhost:27002']\n. Seems to be ok in the unit tests, can you check commit b31f54a?\n. There's no tagged version yet for L5, try the master branch. I'm going over some stuff tomorrow and will tag a new release then.\n. I will take a look at it when I have some time. Could you \"translate\" your issue to a unit test?\n. There are some limitations about the current embedded documents implementation, soft deletes is one of them. I hope I can fix these in v3.\n. Should associate generate timestamps? I don't think so.\n. I could be wrong, but I don't think Eloquent does any timestamp updates when doing associate.\n. Guess I will have to create a 4.2 branch and update it?\n. Should be fixed in the new 2.0.4 release.\n. Would you mind adding a unit test as well?\n. Are you sure this is the only way to do pagination?\n. I added this feature, but in a slightly different way. I would be cool if I could get some feedback from you.\n. Made a temp tag for L5.\n. I just pushed a first change to the develop brach; from now on, if you want to use the \"hybrid relations\" between mongodb and mysql, you no longer have to extend a special class, but you can use a HybridRelations trait instead.\n. Because this will probably be a new (breaking) major version. I decided to move the Model class to Jenssegers\\Mongodb\\Eloquent\\Model to respect the original Laravel folder structure.\n. It seems that the event based approach might not work out of the box. Observers are registered to all instances of a certain model class, not one instance in particular. Either I modify the model class to allow for instance observers, or I search for a different solution.\n. I don't think a specific trait for embedded models would be the way to go. For example, you could have objects embed each other; eg. a user embedding another user as parent/brother.\nI completely started embedded models from scratch in the current develop branch. But operations on embedded models are not working yet. There's still a lot of work to be done :)\n. Should be fixed on master now.\n. Are you using any group operations? Can you show me a code example (or a unit test)?\n. The builder gets the cursor for all the results, and then calls skip and limit on the cursor.\n. Try the current version on master.\n. I will try to take a look at it this weekend. It would be helpful if you could provide a small unit test snippet that shows this problem.\n. It took a while to debug the problem, but it is fixed now :)\n. What version are you using?\n. It is using the cursor to skip and take the items from the results. I just pushed a new version that uses the aggregation framework which works better for large data sets.\n. For the v3 version on the develop branch, I have already converted the class for the hybrid sql models to a trait. Instead of replacing the class for those models, they will have to use the HybridRelations trait.\nI don't know about converting the whole Mongo class to a trait though. I will think about it.\n. Does has work?\n. Thanks!\n. Is this still an issue if you update the package?\n. Not yet, I might give it another try for the v3 release once I get the embedded models working again.\n. No update on this yet. The way Eloquent is written requires a lot of the relation code to be rewritten. Still need to find a proper approach to the problem.\n. It was already removed on the develop branch. Removed it from master as well.\n. At first sight, it looks like your service provider is not registered correctly.\n. The only thing I can suggest with this much information is to double check your default connection and the service provider.\n. You can test it by running the unit tests. Let me know if it works.\n. In Laravel 5 this is currentPage()\n. Double check your service provider registration and the connection your model is using.\n. Since a recent PR, the project() method was added. You can give that a try.\n. If you want query logging, you need to enable it since it is disabled by default in Laravel 5.\n. Transactions are not support at this moment.\n. When I'm looking at the query log, I don't see integers being converted to strings: users.find({\"age\":{\"$gte\":0,\"$lte\":25}},[])\n. Try using the new attribute casting to cast strings to integers: http://laravel.com/docs/master/eloquent#attribute-casting\n. That is weird, this should be tested in the unit tests, what version of mongo are you using?\n. Do you have an example of a MongoDb query that does work with your regex?\n. Use ~2.0.\n. The where operator is used by default when doing ->where\n. Could someone add this as a PR to the documentation?\n. In what case would you get this error?\n. Could you show me a code example when this would happen? I will be able to add it to the tests then and fix it more easily :)\n. That is normal behaviour because it is not going through Eloquent.\n. Thanks!\n. I had to merge your changes manually, they are now in dev-master, thanks!\n. What Laravel version are you using?\n. Can you try it without getMongoClient()? It seems that command is a method of the DB class http://php.net/manual/en/mongodb.command.php\n. It may not be the optimal solution, but you can try ->timeout(-1).\nhttps://github.com/jenssegers/laravel-mongodb#mongodb-specific-operations\n. I don't know if Laravel supports calling primary without an argument:\nphp\npublic function primary($columns, $name = null)\n. Also, MongoDB has no primary() index, so I will add is as an alias for unique()\n. Should be fixed on dev-master.\n. I edited composer.json on dev-master.\n. public function update(array $values, array $options = array()) will set $options['multiple'] = true; by default and update multiple records.\npublic function insert(array $values) uses batchInsert as well, to mimic Laravel insert behaviour.\npublic function delete($id = null) uses remove which remove multiple records as well.\n. Laravel already has some basic structure set up for automatic reconnecting, but MongoDB can't use it. See tryAgainIfCausedByLostConnection.\nIt might be cool to add something similar for every query being done with automatic reconnect.\n. Also, is there a specific exception type that is being thrown? Just catching all Exceptions seems a bit dangerous.\n. Thanks!\n. It was recently added, but I don't thing it has been documented yet. https://github.com/jenssegers/laravel-mongodb/pull/501\n. Because it is a MongoId. Try something like where('fieldDescriptions._id', ...)\n. They are not supported yet.\n. I don't completely understand the problem, could you elaborate?\n. See http://docs.mongodb.org/manual/reference/operator/query/where/\n. It passes the 3rd parameter to the $where section of the query.\n. I still have not find the ultimate way to do embedded relations, and especially multiple levels of embedded models. There is always room for improvement.\n. Can you do a PR? :)\n. In what situation do you get this error? It seems that it is not covered by the unit tests.\nAnyway, I added back a method that I deleted to cleanup the class, does it work now?\n. But that doesn't look right. It should be Jenssegers\\Eloquent\\Model if you want to use MySQL. There is also a HybridRelations trait that you can now add to original Eloquent models.\n. Try this:\n```\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Jenssegers\\Mongodb\\Eloquent\\HybridRelations;\nclass Customer extends Model implements Transformable {\nuse HybridRelations;\n\n}\n``\n. Eloquent returns dates as Carbon as well. This is expected behaviour.\n. Carbon dates are much easier to work with than MongoDate's\n. Can you try the dev-master branch? I tried something small in b4dd583.\n. Thanks! Can you fix the CS warning?\n. Can you check if dev-master is working for you?\n. Would this work in the suggests section as well?\n. The reason I don't want to force it in the require section is because HHVM doesn't have a mongodb extension yet. Also; people can use https://github.com/mongofill/mongofill instead of the extension.\n. You can pass the entire dsn just by using the dsn config key.\n. Thanks!\n. Can't we use the same logic that Laravel had before instead of callingfirst()? Probably more efficient to forcelimit(1)on the exists query.\n. Ok I will merge this until we find actual complications :)\n. It was tagged on the master branch so it should be in there, or isn't it?\n. You're right, I used the wrong version number! It should be fixed now :)\n. Can you try the latest version? This should be fixed.\n. @jeremy-brenner What did you change in theMongoQueueclass? It looks almost identical as theDatabaseQueue` class.\n. Currently waiting one @jeremy-brenner's response.\n. I prefer extending original Laravel classes rather than copy pasting all their code. So I need to figure out what was changed before I can create an extended class. Or if you want to refactor your code that's good as well :)\n. Thanks @jeremy-brenner, I have added your code using an extending class in my latest commits.\n. @leakingminds I updated the readme as well.\n. You should use relations instead of joins since MongoDB has no joins.\n. Check the Laravel documentation of the readme.\n. Currently reviewing your PR. Will probably have to tag a new major version though.\n. Well thing is, the new v3 release will bring support for the new mongodb PHP driver. I feel like doing both the driver and the mongo id's at the same time will break too many applications.\nCurrent plan is to release v3 soon with the new driver, and work on a v4 featuring the mongo id's.\n. Also; because of the new mongodb driver, this PR is a bit outdated. So I can't really merge it into master.\n. Is this still an issue?\n. I should check out what the differences are between the old and new version. Is there a changelog or something we can check with differences between the two?\n. @syntheticminds Do you know if there's already a homebrew version of the new mongodb ext?\n. I'm working on a new version, but a lot of stuff has changed.\n. I currently pushed my \"work in progress\" changes to this branch: https://github.com/jenssegers/laravel-mongodb/tree/pecl-mongodb\nTests are still failing, would be great to have some pull requests so that we can release this faster!\n. @lukepolo No there are still more tests failing, check my last push.\n. I can't really merge this PR with all the other commits attached to it :p\n. They should not be disabled.\n. You should be able to do ->unique('xx', ['sparse' => true])\n. See https://github.com/jenssegers/laravel-mongodb/issues/658, currently working on a compatible version. But quite a lot has changed and trying my best to make all current tests pass.\n. I currently pushed my \"work in progress\" changes to this branch: https://github.com/jenssegers/laravel-mongodb/tree/pecl-mongodb\nTests are still failing, would be great to have some pull requests so that we can release this faster!\n. You are referencing the new mongodb driver which is not compatible with this library.\n. The new extension is not supported yet.\n. Queries are being logged using db query log.\n. Should be fixed in last version.\n. Do you know if there is a way of telling mongodb to return arrays instead of objects?\n. These changes are on the pecl-mongodb branch; but not all tests are green yet.\n. Closing because of duplicate issue.\n. Closing because of duplicate\n. Can you guys try out my last commit to the service provider?\n. @iceheat are you getting an error? Seems to be working fine for me in 5.1 tests.\n. Larevel 5.2 changed the auth system. Did you use the Authenticatable trait?\n. Is this code also compatible with 5.1? I would rather do one change at a time. Having the new mongodb support for 5.1 LTS would be the next major release.\n. Any chance you could squash your commits into 1 single commit?\n. When I run the test for 5.1, it seems that I'm getting errors during the mysql relations tests. Did you get those as well @WillSkates?\n. The location of the model class will change to Jenssegers\\Mongodb\\Eloquent\\Model in the new major version.\n. @WillSkates I'm still getting this on L5.1:\n```\n1) MysqlRelationsTest::testMysqlRelations\nFailed asserting that 0 matches expected 1.\n/var/www/laravel-mongodb/tests/MysqlRelationsTest.php:37\n``\n. I have merged the branch into master. I'm now wondering if I should do a rework of the embedded models in this major release or the next one.\n. I need to fix new test issues first\n. Yeah I'm in the middle of tagging a new release. The master version is the one your are looking for. This will soon be tagged as 3.0.0 alpha.\n. Should be fixed in 2.3.x.\n. Should be fixed in master :)\n. It should. All%'s get replaced by.*. This is actually not returning MongoDB instances anymore.\n. What version are you using?\n. 2.3 usesJenssegers\\Mongodb\\Model. This is a change in the new 3.0.0 version.\n. In my last commit both classes should work for you. Will tag new version.\n. Use the 3.0.0 alpha version\n. Can you check what queries are being executed?\n. What version are you using?\n. Fixed in last version.\n. Can you give me an example use case why this would be useful?\n. I'm not sure if the model would even work if you would give it an SQLiteConnection.\n. Pull requests are appreciated :)\n. http://mongodb.github.io/mongo-php-library/api/class-MongoDB.Collection.html\n. Why isUTCDateTimenot working? From what I remember, the DatabaseTokenRepository does not go through Eloquent.\n. What is actually broken inDatabaseFailedJobProvider? To me it looks like the default Laravel version should work?\n. Could you also add a unit test so that I does not happen again? :)\n. @Bodom78 Would you mind doing a PR for v2 and possible v3?\n. Embedded models are returned as an Eloquent Collection. You'll have to use the collection methods.\n. I removed the leftovers in the readme. Thanks for notifying me!\n. That is correct. Do you feel like doing a PR, or shall I update it.\n. Would you mind doing a PR? :)\n. @timemachine3030 Do you know if there is an alternate way of passing credentials?\n. If that works, please send the PR!\n. Looks like you are missing ext-mongodb. Check the readme for the installation link.\n. I would prefer having the username and password outside of theoptionsin the Laravel configuration (like it used to be). And pass them to theoptionsin theConnection` class.\nThat way it is a bit more similar to the mysql connection configuration, and might be more obvious for new users.\n. Can you squash your commits?\n. I added it back again.\n. Yeah Laravel makes is really hard to have iterators because of their Collection class.\n. I could create a custom collection class that somewhat supports iterators, but almost every operation on the collection requires the full data array.\n. You should be able to get the mongo client from the DB class as well.\n. I released 2.3.4 with the fix.\n. Try changing your configuration to:\n'username' => env('MONGO_USERNAME'),\n'password' => env('MONGO_PASSWORD'),\n. This was merged: https://github.com/jenssegers/laravel-mongodb/pull/769/files\n. You need the mongodb extension, not the mongo extension.\n. Any chance you could write unit tests for this?\n. This is for the old pecl extension, the new one is mongodb.\n. This is not necessary at the moment. I prefer to keep it compatible as long as possible.\n. @amiri27 It's on my todo list. There's quite some code to review.\n. Could you link me to a documentations page for this? Yesterday I got a PR for this exact change. Which one is the correct one?\n. Could you make a commit with only the actual changes? It's kinda hard for me to figure out what has actually changed.\n. I don't think this is a typo.\n. I'll merge this, but I can only tag a new release once we have fixed some of the tests though.\n. Looking good!\n. Let me know when your changes are done!\n. Ill release this as an RC and go over everything soon.\n. We're working on this :)\n. Thanks for your help @pi0!\n. @pi0 Can I get your input on this one? :)\n. Any chance you could add a unit test for this?\n. Was this fixed in the last Laravel release, or still an issue?\n. Can you try the master branch?\n. Will do this now \n. No problem! Will tag new version after some more fixes/tweaks.\n. Any chance you could add a test for this?. Could you still use the if that checks if the key contains a dot? So that we still use the parent logic in any other case.. Will this break previous Laravel releases?. There seems to be something wrong with your PR?. Can you use this to compare the version? http://php.net/manual/en/function.version-compare.php. Any chance you could only include the user class and not your second commit?. Can you provide some more information about what is going wrong?. PR's are definitely welcome!. I think this is fixed in the master branch. Let me know if it works.. Can you give some more information about this PR?. Also, can you use the same code style as the existing code?. I'm still working on getting the tests to pass on 5.4. Pull requests are welcome.. Can you change the casting to (int)?. @macdabby Wow, why didn't we see that. Are you up for making a PR? I'll get it merged.. Any chance you could use getOwnerKey as the function name?. Can you change src/Jenssegers/Mongodb/Auth/DatabaseTokenRepository.php as well?. Yes, see https://github.com/jenssegers/laravel-mongodb#mysql-relations. Damn that is weird, I'll check it out.. I'm not seeing this behaviour in my unit tests though. Could someone do a PR to revert the previous change to fix this issue?. The moloquent repository you mentioned is not maintained by me.. Probably makes sense to add Passport support here as well :). @deividaspetraitis Can you link me to your PR?. This might break things for older Laravel versions. Probably we will need to check the Laravel version first.. Was this fixed with https://github.com/jenssegers/laravel-mongodb/pull/1162 ?. Sorry for the delay!. Thanks for your contribution @Ardakilic!. Thanks @benargo! \ud83c\udf7a. Can you give an example of how you would use this?. Could you change it to short array notation?. Closing this PR because there seems to be something wrong with the commits/changes. Is this still an issue?. I released an alpha tag.. Looks like there are more things broken according to travis.. There are 2 PR's open, but both of them have failing tests. Would be nice if I could merge a PR to fix issues for 5.5 since I'm quite busy atm.. I released an alpha tag.. Can this be closed with https://github.com/jenssegers/laravel-mongodb/pull/1300?. I released an alpha tag.. Is it possible to make a PR without the docblock changes? This makes it more difficult to review.. @judhizputra This is not a PR. Can't find a PR by @NoelDeMartin. Thanks!. Looks like there are some issues with installing mongodb. Merged, but GitHub did something weird :)\nhttps://github.com/jenssegers/laravel-mongodb/commit/7445ea6cc0a139f40ac9cfe1b15952c961e58793. @milanspv v3.4.1. Merged and tagged!\nThanks so much for your help!. Thanks!. Sorry for the delay!. Done \ud83d\udc4c. Great work!. Thanks!. Tagged!. Done!. This PR will fail for all other versions lower than 5.8 right?. Yes, would rather have these 2 things as separate PR's if possible \ud83d\udc4c . These are a lot of changes in 1 PR. From what I hear, your main issue is that the mongodb installation on Travis is an old version? I'll look into fixing one problem at a time :). I pushed a new travis config the master today. I would rather stick with the docker setup because then I can better predict what the travis result will be when I run tests locally in docker.. Thanks!. Why did  you add this?\n. Why was this changed?\n. Shouldn't this return a UTCDateTime instance?\n. You should be able to remove the setConnection call as newFromBuilder does this internally.\nreturn $this->model->newFromBuilder((array) $results);\nWill look cleaner as well.\n. Could you change this to:\n```\n$collections = array_map(function ($collection) {\n    return $collection->getName();\n}, $db->listCollections();\nreturn in_array($collection, $collections);\n```\n. This overwrites a Laravel component and will probably break applications if they are using a different queue backend, right?\nIf there is no other way to extend, and overwriting is the only way, then this should be in a separate service provider.\n. Probably best to support both table and collection here.\n. Can you turn this into:\nif (! isset($options['username']) && isset($config['username'])) {\n    $options['username'] = $config['username'];\nAnd below as well:\n. This should be camel case.\n. Maybe this is cleaner:\n$this->useCollection = \\Illuminate\\Foundation\\Application::VERSION >= '5.3.0';\nOr using PHP's version_compare.\n$this->useCollection = version_compare(\\Illuminate\\Foundation\\Application::VERSION, '5.3.0', '>=');\n. Why was this needed?\n. This seems a bit odd, this is very specific to embedded relations, why was MorpTo added here?\n. Might be better to split the logic indeed, I'll have to check what exactly is going wrong because this is weird.\n. This should not be needed right? Since Eloquent had this trait as well?. Jenssegers\\Mongodb\\Eloquent\\Model already has the HybridRelations trait, which the model extends from.. This can be a fixed value I guess, or at least provide a default value. Could you change this?\nGreat job on these changes btw!. Do we need this fixed version?. Also can't we still use the docker-php-ext-install?. Can we also revert these changes please?. ",
    "adamlc": "Hi, \nI only put in the service provider as per the docs. The alias for Eloquent is still:\n'Eloquent'        => 'Illuminate\\Database\\Eloquent\\Model',\nThanks\nAdam\n. Awesome! I can confirm that the above fix sorted the issue.\nMany thanks :)\n. ",
    "rkang30": "I have set mysql as my defaut db and set mongodb as a second. When I print DB::connection('mongodb'), it was still pull my mysql db name. Could u help me with this issue please?\n. I have an authentication failed issue with mongodb 3.2 and laravel 5.2 \nI have tested it with just php and mongodb php library like below.\nrequire 'vendor/autoload.php';\n$uripotions = array();\n$uripotions['username'] = 'myuser';\n$uripotions['password'] = 'mypassword';\n$client = new MongoDB\\Client(\"mongodb://localhost:27017\", $uripotions);\n$collection = $client->client_db->accounts;\n$result = $collection->find();\nforeach($result as $item){\n    echo $item['first_name'];\n    echo '';\n}\nAnd it worked.\nHowever, it doesn't work on laravel 5.2 after following the steps that jenssegers/laravel-mongodb mentions. \nI have added the service provider class to config/app.php and added my mongodb config in config/database.php like below.\n'mongodb' => [\n        'driver'   => 'mongodb',\n        'host'     => env('DB_HOST', 'localhost'),\n        'port'     => env('DB_PORT', 27017),\n        'database' => env('DB_DATABASE', 'client_db'),\n        'username' => env('DB_USERNAME', 'myuser'),\n        'password' => env('DB_PASSWORD', 'mypassword'),\n        'options' => [\n            'db' => 'admin'\n        ]\n    ],\nIn my controller, I put a script like below:\nclass IntroController extends Controller\n{\n    public function index(Account $account)\n    {\n        $user = $account->where('first_name', 'ryan')->first();\n        return $user;\n    }\n}\nIn the Account model:\nnamespace App;\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Eloquent;\nclass Account extends Eloquent \n{\n    protected $connection = 'mongodb';\n    protected $collection = 'accounts';\n    protected $fillable = ['first_name', 'last_name', 'email'];\n}\nI get an error message like below:\nAuthenticationException in Find.php line 179: Authentication failed.\nIt would be appreciated if you could help me with this issue.\nThanks,\nRyan\n. ",
    "freak4pc": "Hey Jens,\nSorry it took 2 days to answer - Was away on vacation.\nIt does seem to work with a normal PHP client connection , e.g. \n$mongo = new MongoClient('mongodb://root:mypassword@localhost/database');\n. That is very interesting ... I'll check up a bit more on my end. I think you can close it and If i'll have any new findings I'll share them here. Thank you! \n. ",
    "mikeziri": "I struggled with this for a whole day...\nthe problem was 'localhost' did'nt work. on my system it must be '127.0.0.1'\n. ",
    "L422Y": "I fixed this by installing mongo 1.6.5 driver with pecl upgrade mongo (running MongoDB 3.0)\n. ",
    "leekaiwei": "Yes it is working. Thanks very much!\n. Oh I see. Thanks.\nEDIT: Actually what I want to do requires take() and skip() instead, so currently I don't need paginate() for now. \n. Interesting, no matter where I put the call to pagination method in the chain, it wouldn't work.\n. Yes they are working fine.\nUser::where('attribute', 'value')->orderBy('attribute')->paginate(number);\n. Not to my knowledge. If I have, then I've used it without knowing. I have 2 weeks experience of PHP/Laravel. If you say it works, then it probably does and I've done something stupid.\nOff-topic: Since MongoDB can have arrays inserted into them, does this package support something like where() but for matching an item in the array? Currently doing it manually and therefore cannot use Eloquent methods, making things like skip() and take() a bit harder.\n. I think we are thinking of slightly different arrays. I was thinking of having inserted:\narray('tag1', 'tag2', 'games', 'entertainment')\ninto a field tags. Then I would want to find all models in which its array in tags contain for example games. There isn't anything like that is there?\n. Oh I see. So that does work. Thanks very much for your help. Much appreciated.\n. Well currently, my system is using 4.0.x and 4.1.x is not out yet. Perhaps you could tag a version for 4.0.x and one for 4.1.x? Or maybe change the method to public as this will be compatible with both 4.0.x and 4.1.x?\n. - Installation request for jenssegers/mongodb * -> satisfiable by jenssegers/mongodb[dev-master].\n    - Conclusion: don't install laravel/framework 4.0.x-dev\n    - Can only install one of: laravel/framework[v4.0.0, 4.1.x-dev].\n    - Can only install one of: laravel/framework[v4.0.0-BETA2, 4.1.x-dev].\n    - Can only install one of: laravel/framework[v4.0.0-BETA3, 4.1.x-dev].\n    - Can only install one of: laravel/framework[v4.0.0-BETA4, 4.1.x-dev].\n    - Can only install one of: laravel/framework[v4.0.1, 4.1.x-dev].\n    - Can only install one of: laravel/framework[v4.0.2, 4.1.x-dev].\n    - Can only install one of: laravel/framework[v4.0.3, 4.1.x-dev].\n    - Can only install one of: laravel/framework[v4.0.4, 4.1.x-dev].\n    - Can only install one of: laravel/framework[v4.0.5, 4.1.x-dev].\n    - Can only install one of: laravel/framework[v4.0.6, 4.1.x-dev].\n    - jenssegers/mongodb dev-master requires illuminate/support 4.1.x -> satisfiable by laravel/framework[4.1.x-dev], illuminate/support[4.1.x-dev].\n    - Conclusion: don't install illuminate/support 4.1.x-dev\n    - Installation request for laravel/framework 4.0.*@dev -> satisfiable by laravel/framework[4.0.x-dev, v4.0.0, v4.0.0-BETA2, v4.0.0-BETA3, v4.0.0-BETA4, v4.0.1, v4.0.2, v4.0.3, v4.0.4, v4.0.5, v4.0.6].\n. Tried several times but still get this error:\n```\nYour requirements could not be resolved to an installable set of packages.\nProblem 1\n    - Conclusion: remove laravel/framework 4.0.x-dev\n    - Conclusion: don't install laravel/framework 4.0.x-dev\n    - Installation request for jenssegers/mongodb dev-master -> satisfiable by j\nenssegers/mongodb[dev-master].\n    - Can only install one of: laravel/framework[v4.0.0, 4.1.x-dev].\n    - Can only install one of: laravel/framework[v4.0.0-BETA2, 4.1.x-dev].\n    - Can only install one of: laravel/framework[v4.0.0-BETA3, 4.1.x-dev].\n    - Can only install one of: laravel/framework[v4.0.0-BETA4, 4.1.x-dev].\n    - Can only install one of: laravel/framework[v4.0.1, 4.1.x-dev].\n    - Can only install one of: laravel/framework[v4.0.2, 4.1.x-dev].\n    - Can only install one of: laravel/framework[v4.0.3, 4.1.x-dev].\n    - Can only install one of: laravel/framework[v4.0.4, 4.1.x-dev].\n    - Can only install one of: laravel/framework[v4.0.5, 4.1.x-dev].\n    - Can only install one of: laravel/framework[v4.0.6, 4.1.x-dev].\n    - jenssegers/mongodb dev-master requires illuminate/support 4.1.x -> satisfi\nable by laravel/framework[4.1.x-dev], illuminate/support[4.1.x-dev].\n    - Conclusion: don't install illuminate/support 4.1.x-dev\n    - Installation request for laravel/framework 4.0.* -> satisfiable by laravel\n/framework[4.0.x-dev, v4.0.0, v4.0.0-BETA2, v4.0.0-BETA3, v4.0.0-BETA4, v4.0.1,\nv4.0.2, v4.0.3, v4.0.4, v4.0.5, v4.0.6].\n```\nIt is \"jenssegers/mongodb\": \"dev-master\" yes? Looking at the error, there is clearly a conflict when its requires the illuminate packages. I'm not quite sure how you managed to update that.\n. {\n    \"name\": \"laravel/laravel\",\n    \"description\": \"The Laravel Framework.\",\n    \"keywords\": [\"framework\", \"laravel\"],\n    \"require\": {\n        \"laravel/framework\": \"4.0.*\",\n        \"cartalyst/sentry\": \"2.0.*\",\n        \"jenssegers/mongodb\": \"dev-master\",\n        \"hybridauth/hybridauth\": \"*\",\n        \"mockery/mockery\": \"dev-master@dev\"\n    },\n    \"autoload\": {\n        \"classmap\": [\n            \"app/commands\",\n            \"app/controllers\",\n            \"app/models\",\n            \"app/database/migrations\",\n            \"app/database/seeds\",\n            \"app/tests/TestCase.php\",\n            \"app/library\",\n            \"app/library/Crawler\",\n            \"app/library/Extraction\"\n        ]\n    },\n    \"scripts\": {\n        \"post-install-cmd\": [\n            \"php artisan optimize\"\n        ],\n        \"pre-update-cmd\": [\n            \"php artisan clear-compiled\"\n        ],\n        \"post-update-cmd\": [\n            \"php artisan optimize\"\n        ],\n        \"post-create-project-cmd\": [\n            \"php artisan key:generate\"\n        ]\n    },\n    \"config\": {\n        \"preferred-install\": \"dist\"\n    },\n    \"minimum-stability\": \"dev\"\n}\n. Yes it is fixed. Thanks.\n. Never mind. It works without my specifying.\n. ",
    "Mulkave": "Whoops my bad! this has to do with the MongoDB PHP driver, isn' an issue.\n. Good to know! Thanks.\n. You probably need not to get() before using avg('connect_time'), you may try:\nphp\n'hour' => Status::where('url',$u)->orderBy('date','desc')->take(12)->avg('connect_time'),\nwhich will aggregate the average directly instead of selecting the records first.\n. Ah right! I get what you mean :) :thumbsup: \n. +1. Same issue occurred with the order of $limit and $group.\njavascript\ndb.transactions.aggregate([{\"$group\":{\"_id\":null,\"total\":{\"$sum\":\"$package.price\"}}}, {\"$limit\":2}])\nwould return:\njson\n{\n    \"result\" : [ \n        {\n            \"_id\" : null,\n            \"total\" : 301.09\n        }\n    ],\n    \"ok\" : 1\n}\nas for this:\njavascript\ndb.transactions.aggregate([{\"$limit\":2}, {\"$group\":{\"_id\":null,\"total\":{\"$sum\":\"$package.price\"}}}])\nwould only consider the fetched results by $limit:\njson\n{\n    \"result\" : [ \n        {\n            \"_id\" : null,\n            \"total\" : 30.42\n        }\n    ],\n    \"ok\" : 1\n}\nIn times like these I tend to use the raw expressions as described in the docs\n. ",
    "khungdisan": "How to conver to array when use pagination.\nI using Laravel 5.4 and jensseger mongodb 3.2. ",
    "agdm": "I am using a Laravel 4.\nI reread your directions for set up... and realized I had something commented out in /app/config/app.php due to an earlier issue with Composer.\nConnects now.\n. Looks good to me. Cleaner than what I was trying to implement.\nWill test on my end.\n. works great.\nThanks\n. Added a default value, would this work? \nI assumed that user:pass credentials would always be required.\nhttps://github.com/agdm/Laravel-MongoDB/commit/94364f45294ae8dd6becb910242993b1c53d17e9#L0L113\n. Yes I have confirmed it, I use mongolab.com for my remote mongo host. \nIn order to connect to their master/slave set up the connection string is provided in mongodb://username:password@10.0.0.1:port,10.0.0.2:port  format. \nAlso when testing the site I'm building currently with Laravel, the DSN was erroring out and as soon as I updated the logic, it worked.\nSo my thoughts are that the user/pass only need to be specified once in the master/slave set up.\n. ",
    "SundarPPE": "hi @jenssegers I have followed the same configuration for connecting a cluster of databases.\nI'm getting the MongoCursorException  not master and slaveOk=false..\n'mongodb' => array(\n            'driver'   => 'mongodb',\n            'host'     => array('db1:27017','db2:27017'),           \n            'username' => '',\n            'password' => '',\n            'database' => 'database',           \n            'options'  => array('replicaSet' => 'replicaSetName'),          \n        ),\nany configuration I have missed here.?\nThanks\n. ",
    "RSully": "It looks like when the Session system is set to \"database\" it goes through this path https://github.com/laravel/framework/blob/master/src/Illuminate/Database/Connectors/ConnectionFactory.php#L64 (either createConnector or createConnection). \nMy temporary solution is to extend the session system and add a \"mongo\" driver, however I feel like this could be something that would be better suited at a lower level. \n. That is immensely helpful. Thanks. \nRegarding the initial reason for this issue though, can you look into getting the database connections based on the \"driver\" property rather than the key? Right now multiple connections feels kind of janky. \n. It looks like 5c6a971738697d32d67066dc16c6c61e319dfa04 might fix these issues, and from everything I've seen it looks great.\nDoes this also mean that the session driver is no longer necessary? \nEdit: I think the driver is still necessary (but might require modification)\n. For authentication I am using eloquent, and in my database config I have mongo setup as the default connection which Eloquent should use. \nEdit: I haven't tested password resets yet\n. ",
    "mscmorris": "Yes, that's probably a good idea, and I thought about it a bit some earlier.  The only thing I wonder is whether one service provider should depend on another.  \nAs for the break, the latest commit in the pull should have the proper dependency.  That is strange.\n. Thanks!\n. ",
    "ezsil": "That's awesome! Thanks so much\n. I am having this same issue.. Ok - the embedded model needs to be loaded (eager or lazy).. ",
    "abhishekgahlot": "Its\n'mongodb' => array(\n        'driver'   => 'mongodb',\n        'host'     => 'localhost',\n        'port'     => 32759,\n        'username' => 'darky',\n        'password' => 'password',\n        'database' => 'database',\n        )\nI tried another mongoDB package which is lmongo, That giving same error too.\n. class DbConnection{\n```\nstatic protected $_instance;\nprotected $db = null;\nfinal protected function __construct()\n{\n    $m = new MongoClient(\"mongodb://darky:password@localhost:32759\");\n    $this->db = $m->selectDB( \"database\" );\n}\nstatic public function getInstance() {\n    if (!(self::$_instance instanceof self))\n    {\n        self::$_instance = new self();\n    }\n    return self::$_instance;\n}\npublic function getConnection()\n{\n    return $this->db;\n}\nfinal protected function __clone() { }\n```\n}\nIts simple database connection class that i generally used to connect to mongo.\n. Yes, its fine. \nbut here are few things i found\n$m = new MongoClient(\"mongodb://darky:password@localhost:32759/database\");\n    $this->db = $m;\nIf i use this in my php code, I get same error auth fails. I think i need to setup database name afterwards.\n. Thanks, I just did with \ntweaking function getDsn and changed this line\nreturn \"mongodb://{$credentials}\" . implode(',', $hosts) . \"/{$database}\";\nreturn \"mongodb://{$credentials}\" . implode(',', $hosts);\nBecause database is already selected in constructor like this\n// Select database\n        $this->db = $this->connection->{$config['database']};\n. Also can you tell, is this repository https://github.com/navruzm/lmongo\nsimilar to this one.\n. Thanks for telling and yeah your repository looks like i am using mysql way to connect to mongo. Everything fine now. :)\n. I am not sure , But let me try with mongodb setup on cloud server ie mongohq.com\nYes there could be problem with permissions.\n. Yes  you are right, You will have to revert that commit , for users who have separate username and password for different databases.\n. ",
    "joeswann": "Not sure if this is still relevant or even related but I had the same OP problem and solved it by using \ndb.addUser() \nafter \nuse laravel_database;\nas per the first block on http://docs.mongodb.org/manual/tutorial/add-user-to-database/\n. ",
    "a-ghasemi": "I have same problem on Laravel MongoDB, I'm using Laravel 4.2, Mongo 3.2, PHP 5.6\nI can migrate and seed with artisan, but in php code when calling \nDB::table('users')->select();\nwith catching errors, it shows:\nError File: /var/www/laravel/vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Connection.php\nError Line: ** 133\nError Message: Failed to connect to: localhost:27017: Permission denied\nError Code:** 71\n'mongodb' => array(\n                'driver' => 'mongodb',\n                'host' => 'localhost',\n                'port' => 27017,\n                'username' => 'laravel_user',\n                'password' => '********',\n                'database' => 'laravel_db'\n            ),\n. Thank you all, My problem answered here:\nhttp://stackoverflow.com/questions/20954985/uncaught-exception-mongoconnectionexception\n. I have same problem on php new release, 7.0.2 . it has no mongoClient anymore and uses mongoDB extension! Now how can I use jenssegers/laravel-mongodb in my new server? please help about this asap.\n. Thanks for your afforts\nOn Sat, 30 Jan 2016 at 14:08, Jens Segers notifications@github.com wrote:\n\n@a-ghasemi https://github.com/a-ghasemi There's a separate branch for\nthis. Will be released as a new major version soon.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jenssegers/laravel-mongodb/issues/36#issuecomment-177144533\n.\n. \n",
    "bke-daniel": "Just in addition to @rkang30 \nThis is not mainly an issue but in my setup the \"port\" var doesn't seem to get through and is being replaced with the 3306 MySQL port. Therefore no connection at all, but changing this:\n'port'     => env('DB_PORT', 27017),\nto this\n'port'     => '27017',\nworks like a charme.\nCheers\n. @infernobass7 Sadly I have to answer that with a short and straight: Yes. :/\n. ",
    "infernobass7": "@bke-daniel Did you change your .env file?\n. Has there been any updates to when mongodb will be considered as the driver for this package?\n. Thanks! That is good to know!\n. I am looking into this now and it actually looks like the relationship model for many to many relationship will allow you to pass the attributes field in but it does absolutely nothing with the array.\n@jenssegers, is this a feature that is being looked into?\n. Ran into this same issue. Would be very nice to see this added. +1\n. I figured out my issue. The job needed to belong to the company,which doesn't make too much sense to me for the application. Also, is there a way to add a new relationship from the job class to the company by saving on the job instead of on the company?\n. @trololosha4real I believe your issue is that you are using the old Mongo database connector. In the newest version on this package, this connector has been deprecated. Try downloading and installing the connector listed below and then retry installing the package.\nhttp://pecl.php.net/package/mongodb\n. Did you add mongodb.dll/mongodb.so to the dynamic extension section ofor your php.ini files?\n. It looks like you might be using the deprecated version of the driver. You want to use mongodb. Found here http://pecl.php.net/package/mongodb. If you do not want to use this new driver, then you will have to go to a previous version of this package.\n. I managed to fix this by doing the follwoing:\nIn the class that user extends, change the model from the default to the MongoDB Model class and it will work.\nI don't know if there is any other suggestions on the proper way to handle this error.\n. @jenssegers  By any chance have you gotten a chance to take a look at this?\n. After looking further into the cause of this issue it comes down to an issue with Laravel Model Class. The class calls the mutate method before it converts the date value to a Carbon instance.\nSee: https://github.com/laravel/framework/issues/14720\n. ",
    "yazeed": "@chinhvowili's solution worked for me, Laravel 5 should take into consideration the default connection configuration required for MongoDB 3.. Any update? :)\n. ",
    "felixcheruiyot": "Thank you for the response. I am still trying to solve these problem. I noticed that passing the connection string directly at line 37 works.\n$this->connection = new MongoClient('mongodb://localhost/');\nThis gives me an idea that my mongo works with php, but how is the current connection string look like? Can there be a problem with the way we are passing it. Here is my server details:\n- PHP 5.3.6\n- Ubuntu server\n- Laravel 4\nThanks\n. Found the problem. It is on my side. Used a password generator and which produced my password with a '@' character. Just noticed that. The code is working well.\nI am now passing my connection as expected:\n'mongodb' => array(\n'driver' => 'mongodb',\n'host' => '127.0.0.1',\n'port' => 27017,\n'username' => 'myusername',\n'password' => 'mypassword',\n'database' => 'mydb'\n),\nThank you for the good library and support.\n. Yes that will help. It might take someone quite some time to figure out such an error.\n. Awesome. Works well now.\nCheers!\n. I agree with @abishekrsrikaanth  and @WMeldon on this. This will be very helpful.\n. ",
    "rms2219": "I'll tell you what I was trying to do; maybe I was doing something wrong.\nI originally set my model to override the key using the field \"email\". What I was trying to do was, when I create and save a new instance of the model with the same key as an entry already in the database, I wanted Mongo to complain (like it does if I try to add an identical \"_id\"). When I override the key, it allows me to save as many new entries as I want, because it will create a new _id for each one.\nIs there a way that I can use \"email\" as my key and have it throw an exception when I try to save a new model with the same key? If not, I see it as advantageous to be able to assign my own values to _id.\n. @jenssegers Thanks for the quick fix!\n. Can you use a \"project\" before the group to project $metric.clicks to something without a '.' in it? In my case, I have a \"Order\" document with an array of \"Line\" documents...I called $unwind on $lines and then projected \"order.lines.cost\" to 'cost', which I could then group:\nMyModel::raw(function($collection){\n               return $collection->aggregate(array(\n                   array('$unwind' => '$lines'),\n                   array('$project' => array(\n                       'orderName' => '$orderName',\n                       'cost' => array('$add' => '$lines.cost')\n                   )),\n                   array('$group' => array(\n                       \"_id\" => '$orderName',\n                       \"lineCost\" => array('$sum' => '$cost')\n                   )),\n               ));\n            });\n. I'd like to see how you did the aggregations without a raw query...I couldn't figure out what the format was for subdocuments, so I switched to raw.\n. OK I can look into the issue further on the Laravel issue tracker.\n. I did not...I just closed it so that it wasn't in your issue tracker any more since you said the functionality wasn't overwritten by this library. \n. Yeah, I'm not sure where the problem is stemming from. If you're sure it's a driver issue, then I can at least take 1 variable out of the equation.\n. @jcorry Unfortunately no, we never did resolve this. It hasn't been a problem, so we've brushed it under the rug for the time being. Let me know if you find anything.\n. I believe this is more of a framework issue. My particular issue is that I found that my configurations were merging, rather than being replaced. So, in my production config, I'm using a replica set as well as a username/pwd. In my local, I don't have those settings defined. By defining empty strings for each of those values on my local config, I was able to essentially fully replace the production configuration.\n. @jenssegers when you say it fixed in the last version, do you mean it was fixed in a version not yet released or that it was fixed in 1.2.7? Upgrading to 1.2.7 broke my code when I call fill() on my model.\nphp\nprotected $fillable = array(\n        '_id',\n        'contractNumber',\n        'contractName',\n        'customerId'\n)\nWhen I do:\nphp\n        $persistedContract->fill(...);\nwhere _id is some string, I get the following error: \"...Mod on _id not allowed\",\"file\":\"\\/Users\\/ryansmith\\/Git\\/ESGToolsWeb\\/laravel\\/vendor\\/jenssegers\\/mongodb\\/src\\/Jenssegers\\/Mongodb\\/Query\\/Builder.php\",\"line\":632}}\"\nI was able to do this before and it worked without an issue.\n. Here you are @jenssegers ... I've left out a large chunk of the Laravel-specific trace that doesn't really matter. This seems to be happening because now, \"_id\" is being filled as a string instead of an ObjectId like it used to.\n```\n[2014-04-17 10:38:06] ryan_local.ERROR: exception 'MongoCursorException' with message 'localhost:27017: Mod on _id not allowed' in /Users/ryansmith/Git/ESGToolsWeb/laravel/vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Query/Builder.php:632\nStack trace:\n0 /Users/ryansmith/Git/ESGToolsWeb/laravel/vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Query/Builder.php(632): MongoCollection->update(Array, Array, Array)\n1 /Users/ryansmith/Git/ESGToolsWeb/laravel/vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Query/Builder.php(394): Jenssegers\\Mongodb\\Query\\Builder->performUpdate(Array, Array)\n2 /Users/ryansmith/Git/ESGToolsWeb/laravel/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Builder.php(282): Jenssegers\\Mongodb\\Query\\Builder->update(Array)\n3 /Users/ryansmith/Git/ESGToolsWeb/laravel/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Model.php(1439): Illuminate\\Database\\Eloquent\\Builder->update(Array)\n4 /Users/ryansmith/Git/ESGToolsWeb/laravel/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Model.php(1375): Illuminate\\Database\\Eloquent\\Model->performUpdate(Object(Jenssegers\\Mongodb\\Eloquent\\Builder))\n5 /Users/ryansmith/Git/ESGToolsWeb/laravel/app/controllers/API/v1/EstimateContractController.php(1010): Illuminate\\Database\\Eloquent\\Model->save()\n6 [internal function]: EstimateContractController->replaceContract('532c4eb032d9bfc...')\n7 /Users/ryansmith/Git/ESGToolsWeb/laravel/vendor/laravel/framework/src/Illuminate/Routing/Controller.php(231): call_user_func_array(Array, Array)\n8 /Users/ryansmith/Git/ESGToolsWeb/laravel/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php(93): Illuminate\\Routing\\Controller->callAction('replaceContract', Array)\n...\n...\n35 /Users/ryansmith/Git/ESGToolsWeb/laravel/vendor/laravel/framework/src/Illuminate/Foundation/Application.php(606): Stack\\StackedHttpKernel->handle(Object(Illuminate\\Http\\Request))\n36 /Users/ryansmith/Git/ESGToolsWeb/laravel/public/index.php(49): Illuminate\\Foundation\\Application->run()\n37 {main} [] []\n```\n. I'm seeing this too. When I do a toJson() on my model, I end up with a string for \"_id\" on the parent object but the embedded document has:\n_id: {\n    $id: \"54259c3d32d9bf2734000922\"\n}\nIs there any way to return just the string ID for _id on all levels?\n. +1...I ran an update and all of a sudden \"find\" no longer works. I was quite confused for a while...should have just come here.\n. @jenssegers Can you update v1 with the fix as well? We haven't moved to v2 yet and could use the fix\n. I think it has something to do with how the object's relations property is being serialized. It contains an EmbedsMany object which has the full Jenssegers\\Mongodb\\Connection which has a Closure in it. There appear to be more Closures scattered around inside of the EmbedsMany object. \nDo I need to serialize the object to JSON and store the JSON in Memcached instead of trying to store the object? If so, what's the best way of loading that JSON back into my object? Will this do?: \nnew Contract(json_decode($jsonString))\n. @jenssegers would you suggest for the time being to just do a \"json_encode\", store the JSON, and when loading from the cache, just converting the JSON back to an associative array and passing it to the model's constructor? Will that build the relationships as I'd expect it to?\n. ",
    "hannesvdvreken": "@rms2219 is right. \"_id\" is indexed by default. Assign \"_id\" if you have a better primary key than the gibberish mongo_id.\n. ",
    "rapocalypse": "Hi,\nI got an MongoException Invalid Object ID, on\n  /\u00advendor/\u00adjenssegers/\u00admongodb/\u00adsrc/\u00adJenssegers/\u00adMongodb/\u00adBuilder.php:521\nThe error happens when I do: MyMongoModel::where('_id',$someObjectID)->first();\nI forced the error specifying a wrong Object ID, for example, the right Object ID is: 521b64a4fa4634aa068b456b and I pass 521b64a4fa4634aa068b45 (missing the last two characters).\nI expected to get a NULL or empty response.\nI'm using mongo v2.4.5 on a ubuntu 12.04 running with apache and php 5, on a Vagrant machine. Something due this config?\nThanks!\n. Yeap\u2026 just did a composer update right now to check and I'm with the last version.\n. ",
    "andrewryno": "I'm really trying to avoid having to use a raw query, simply because I just moved away from the default PHP driver for that reason. :P\nSo I was able to get this working. When you use the aggregate functions, it's completely unnecessary for the highest level key (in this case metrics.clicks) to be descriptive. So I did a \"hacky\" str_replace to fix it.\nI can provide a patch/tests if anyone wants. It doesn't change the output at all. I get my aggregations perfectly. :)\n. Probably underscore, although it really doesn't matter since that key isn't used anywhere else, since the aggregate() function itself uses return $results[0][$columns[0]]; instead of a key string.\nI'm working on a pull request right now.\n. Done in #29.\n. ",
    "programming-kid": "when mongod goes down it should give Failed to connect to: db error and when it up again it should work as normal\ni am not sure but i think there should be connection check before every query if connection is open it should go ahead with the query if connection check returns error it should close previous connection and open new connection and continue with querying \nWhat do you suggest ??\n. i think it something to do with whoops i tried replicating error with native php MongoClient, but it fails silently but when i install whoops it gives the above error .\n. yes this would be awesome using best of both mysql and mongo with same interface would be amazing \n. can you please show your relations in your Models \nmore details about your test dbs setup would be helpful \n. i got belongsTo relation working but could not get hasMany relation working \nhere is my test case\nUser Model \nUser.php - Mysql\nphp\npublic function projects()\n{\n   return $this->hasMany('Project');\n}\nMysql schema\nphp\n$u = new User;\n$u->user_id = Unique_user_id;\n$u->username = username;\n$u->password = password;\n$u->save();\nProject Model\nProject.php - Mongo\nphp\npublic function user()\n{\n   return $this->belongsTo('User');\n}\nMongo Schema\n``` php\n$u = User::find(1);\n$p = Project([\n'title'=>'new project',\n'description'=>'demo description of project'\n]);\n$saved = $u->projects()->save($p);\n```\nQuery Project \nphp\n$p = Project::find('52b142934e3afb6b058b4568');\nQuery projects user\nphp\n$username = $p->user->username; // this works\nQuery all projects belonging to user\n``` php\n$u = User::find(1);\n$projects = $u->projects; // this doesn't work\n// following query is fired when querying for projects related to user\nstring 'select * from users where id = ? limit 1' (length=44)\nstring 'projects.find({\"projects.user_id\":10}, [])' (length=42)\n// second query uses \"user_id\" instead of \"projects.user_id\" it works\n```\nAm i missing anything here\nplease help\n. Yep that works like charm thanks \n. This package should go in core laravel it has almost everything what eloquent has and it's more laravel like then any other mongodb package available  . Laravel should have at least one mongodb driver out of the box i think this should totally go in laravel 4.2 \n. yea ur first suggestion is what i tot about before but it may break in future i want something independent of Sentry. Creating a separate package would be an overkill i was hoping there would be a design patter to solve this issue . \n. ",
    "lsc20051426": "cool, you acts fast.\n. ",
    "abishekrsrikaanth": "Could you give an example on the documenation on how to do this. Will help a lot.\n. You will also need to fix composer.json on master to use the latest libraries for 4.1\n\"illuminate/support\": \"4.x\",\n \"illuminate/database\": \"4.x\",\n \"illuminate/events\": \"4.x\"\n. Sent a Pull Request for the same\n. It kinda becomes difficult for people who want to use this library with Laravel 4.1. \nYou can probably merge the latest version on the develop branch and also make this change, so that developers can point to that to make use of the library.\nOr may be there is another way to do this in composer it self, so that it doesn't affect Laravel 4.0 code.\n. @jenssegers, you could have a seperate branch that points to the development version of Laravel 4.1, so that people working on Laravel 4.1 could use that branch to take advantage of all the new changes of Laravel 4.1. The master and the tags can still point to 4.0\n. Are there any updates to this?\n. Would you have any specific date on when this would be ready. I am not able to deploy my application on hhvm because of this dependency.\n. ",
    "krtrth": "is it fixed and how\n. ",
    "bitinn": "thx! much appreciated.\n. ps: removing unique rule and my test works as intended.\n. would you say following is correct? \n```\n    protected $collection = 'leaf.category';\n    protected $connection = 'mongodb';\n...\nprotected $rules = array(\n    'id' => 'unique:leaf.category',\n);\n\n```\ni believe i am on latest dev-master already. \n. this explains why, we were using mongodb 2.0 for testing, which doesn't have aggregate\n. i will close this for now\n. oh man, cheers!\n. the test code:\n```\n    public function setUp()\n    {\n        parent::setUp();\n    $this->model = new Model();\n    $this->cache = $this->model->create(array(\n        'slug' => 'test.data',\n        'parent' => array('test.data.parent'),\n    ));\n}\n\npublic function tearDown()\n{\n    parent::tearDown();\n\n    $this->model->deleteById($this->cache->id);\n}\n\npublic function testGetBySlug()\n{\n    $data = $this->model->getBySlug($this->cache->slug);\n\n    $this->assertEquals($this->cache, $data);\n}\n\n```\nps: should note that i got an accessor alias $model->id (will return _id as string)\nalexandre were partially right, initially we didn't setup the tearDown properly so the date didn't match, but now it does, and error still appear.\n1) MongoCategoryTest::testGetBySlug\nFailed asserting that two objects are equal.\n--- Expected\n+++ Actual\n@@ @@\n         'parent' => Array (...)\n-        'updated_at' => MongoDate Object (...)\n-        'created_at' => MongoDate Object (...)\n+        'updated_at' => '2013-12-11 18:08:06'\n+        'created_at' => '2013-12-11 18:08:06'\n         '_id' => '52a8aa06fd029a720b8b456a'\n     )\n     'original' => Array (\n         'slug' => 'test.data'\n         'parent' => Array (...)\n-        'updated_at' => MongoDate Object (...)\n-        'created_at' => MongoDate Object (...)\n+        'updated_at' => '2013-12-11 18:08:06'\n+        'created_at' => '2013-12-11 18:08:06'\n         '_id' => '52a8aa06fd029a720b8b456a'\n     )\nif we var_dump these 2 created_at value (before assertEquals), they are converted to the same carbon date:\nobject(Carbon\\Carbon)#3595 (3) {\n  [\"date\"]=>\n  string(19) \"2013-12-11 18:08:06\"\n  [\"timezone_type\"]=>\n  int(3)\n  [\"timezone\"]=>\n  string(3) \"UTC\"\n}\nobject(Carbon\\Carbon)#3595 (3) {\n  [\"date\"]=>\n  string(19) \"2013-12-11 18:08:06\"\n  [\"timezone_type\"]=>\n  int(3)\n  [\"timezone\"]=>\n  string(3) \"UTC\"\n}\n. tried this some more, even toArray() or toJson() seems to return weird result when using the object returned by create() (i expect toArray convert MongoDate to array, and toJson should not encode object directly):\n```\n1) MongoCategoryTest::testGetBySlug\nFailed asserting that two arrays are equal.\n--- Expected\n+++ Actual\n@@ @@\n Array (\n     'slug' => 'test.data.slug'\n     'parent' => Array (...)\n     'meta' => Array (...)\n     '_id' => 'test.data.custom.id'\n-    'updated_at' => MongoDate Object (...)\n-    'created_at' => MongoDate Object (...)\n+    'updated_at' => '2013-12-12 07:31:01'\n+    'created_at' => '2013-12-12 07:31:01'\n )\n...\n1) MongoCategoryTest::testGetBySlug\nFailed asserting that two strings are equal.\n--- Expected\n+++ Actual\n@@ @@\n-'{\"slug\":\"test.data.slug\",\"parent\":[\"test.data.parent\"],\"meta\":{\"main\":false},\"_id\":\"test.data.custom.id\",\"updated_at\":{\"sec\":1386833658,\"usec\":542000},\"created_at\":{\"sec\":1386833658,\"usec\":542000}}'\n+'{\"_id\":\"test.data.custom.id\",\"slug\":\"test.data.slug\",\"parent\":[\"test.data.parent\"],\"meta\":{\"main\":false},\"updated_at\":\"2013-12-12 07:34:18\",\"created_at\":\"2013-12-12 07:34:18\"}'\n```\ndumping the toArray() result, as well as the object in mongodb\n```\n//create()\nobject(Models\\Mongo\\MongoCategory)#3598 (23) {\n  [\"collection\":protected]=>\n  string(16) \"leaf.v2.category\"\n  [\"connection\":protected]=>\n  string(7) \"mongodb\"\n  [\"fillable\":protected]=>\n  array(8) {\n    [0]=>\n    string(3) \"_id\"\n    [1]=>\n    string(4) \"slug\"\n    [2]=>\n    string(4) \"name\"\n    [3]=>\n    string(6) \"parent\"\n    [4]=>\n    string(5) \"alias\"\n    [5]=>\n    string(5) \"count\"\n    [6]=>\n    string(5) \"ngram\"\n    [7]=>\n    string(4) \"meta\"\n  }\n  [\"rules\":protected]=>\n  array(2) {\n    [\"slug\"]=>\n    string(45) \"required|min:1|max:32|unique:leaf.v2.category\"\n    [\"name\"]=>\n    string(12) \"min:1|max:64\"\n  }\n  [\"error\":protected]=>\n  NULL\n  [\"options\":protected]=>\n  array(0) {\n  }\n  [\"primaryKey\":protected]=>\n  string(3) \"_id\"\n  [\"table\":protected]=>\n  NULL\n  [\"perPage\":protected]=>\n  int(15)\n  [\"incrementing\"]=>\n  bool(true)\n  [\"timestamps\"]=>\n  bool(true)\n  [\"attributes\":protected]=>\n  array(6) {\n    [\"slug\"]=>\n    string(14) \"test.data.slug\"\n    [\"parent\"]=>\n    array(1) {\n      [0]=>\n      string(16) \"test.data.parent\"\n    }\n    [\"meta\"]=>\n    array(1) {\n      [\"main\"]=>\n      bool(false)\n    }\n    [\"_id\"]=>\n    string(19) \"test.data.custom.id\"\n    [\"updated_at\"]=>\n    object(MongoDate)#3607 (2) {\n      [\"sec\"]=>\n      int(1386834294)\n      [\"usec\"]=>\n      int(655000)\n    }\n    [\"created_at\"]=>\n    object(MongoDate)#3607 (2) {\n      [\"sec\"]=>\n      int(1386834294)\n      [\"usec\"]=>\n      int(655000)\n    }\n  }\n  [\"original\":protected]=>\n  array(6) {\n    [\"slug\"]=>\n    string(14) \"test.data.slug\"\n    [\"parent\"]=>\n    array(1) {\n      [0]=>\n      string(16) \"test.data.parent\"\n    }\n    [\"meta\"]=>\n    array(1) {\n      [\"main\"]=>\n      bool(false)\n    }\n    [\"_id\"]=>\n    string(19) \"test.data.custom.id\"\n    [\"updated_at\"]=>\n    object(MongoDate)#3607 (2) {\n      [\"sec\"]=>\n      int(1386834294)\n      [\"usec\"]=>\n      int(655000)\n    }\n    [\"created_at\"]=>\n    object(MongoDate)#3607 (2) {\n      [\"sec\"]=>\n      int(1386834294)\n      [\"usec\"]=>\n      int(655000)\n    }\n  }\n  [\"relations\":protected]=>\n  array(0) {\n  }\n  [\"hidden\":protected]=>\n  array(0) {\n  }\n  [\"visible\":protected]=>\n  array(0) {\n  }\n  [\"appends\":protected]=>\n  array(0) {\n  }\n  [\"guarded\":protected]=>\n  array(1) {\n    [0]=>\n    string(1) \"*\"\n  }\n  [\"dates\":protected]=>\n  array(0) {\n  }\n  [\"touches\":protected]=>\n  array(0) {\n  }\n  [\"with\":protected]=>\n  array(0) {\n  }\n  [\"exists\"]=>\n  bool(true)\n  [\"softDelete\":protected]=>\n  bool(false)\n}\n//first()\nobject(Models\\Mongo\\MongoCategory)#3610 (23) {\n  [\"collection\":protected]=>\n  string(16) \"leaf.v2.category\"\n  [\"connection\":protected]=>\n  string(7) \"mongodb\"\n  [\"fillable\":protected]=>\n  array(8) {\n    [0]=>\n    string(3) \"_id\"\n    [1]=>\n    string(4) \"slug\"\n    [2]=>\n    string(4) \"name\"\n    [3]=>\n    string(6) \"parent\"\n    [4]=>\n    string(5) \"alias\"\n    [5]=>\n    string(5) \"count\"\n    [6]=>\n    string(5) \"ngram\"\n    [7]=>\n    string(4) \"meta\"\n  }\n  [\"rules\":protected]=>\n  array(2) {\n    [\"slug\"]=>\n    string(45) \"required|min:1|max:32|unique:leaf.v2.category\"\n    [\"name\"]=>\n    string(12) \"min:1|max:64\"\n  }\n  [\"error\":protected]=>\n  NULL\n  [\"options\":protected]=>\n  array(0) {\n  }\n  [\"primaryKey\":protected]=>\n  string(3) \"_id\"\n  [\"table\":protected]=>\n  NULL\n  [\"perPage\":protected]=>\n  int(15)\n  [\"incrementing\"]=>\n  bool(true)\n  [\"timestamps\"]=>\n  bool(true)\n  [\"attributes\":protected]=>\n  array(6) {\n    [\"_id\"]=>\n    string(19) \"test.data.custom.id\"\n    [\"slug\"]=>\n    string(14) \"test.data.slug\"\n    [\"parent\"]=>\n    array(1) {\n      [0]=>\n      string(16) \"test.data.parent\"\n    }\n    [\"meta\"]=>\n    array(1) {\n      [\"main\"]=>\n      bool(false)\n    }\n    [\"updated_at\"]=>\n    string(19) \"2013-12-12 07:44:54\"\n    [\"created_at\"]=>\n    string(19) \"2013-12-12 07:44:54\"\n  }\n  [\"original\":protected]=>\n  array(6) {\n    [\"_id\"]=>\n    string(19) \"test.data.custom.id\"\n    [\"slug\"]=>\n    string(14) \"test.data.slug\"\n    [\"parent\"]=>\n    array(1) {\n      [0]=>\n      string(16) \"test.data.parent\"\n    }\n    [\"meta\"]=>\n    array(1) {\n      [\"main\"]=>\n      bool(false)\n    }\n    [\"updated_at\"]=>\n    string(19) \"2013-12-12 07:44:54\"\n    [\"created_at\"]=>\n    string(19) \"2013-12-12 07:44:54\"\n  }\n  [\"relations\":protected]=>\n  array(0) {\n  }\n  [\"hidden\":protected]=>\n  array(0) {\n  }\n  [\"visible\":protected]=>\n  array(0) {\n  }\n  [\"appends\":protected]=>\n  array(0) {\n  }\n  [\"guarded\":protected]=>\n  array(1) {\n    [0]=>\n    string(1) \"*\"\n  }\n  [\"dates\":protected]=>\n  array(0) {\n  }\n  [\"touches\":protected]=>\n  array(0) {\n  }\n  [\"with\":protected]=>\n  array(0) {\n  }\n  [\"exists\"]=>\n  bool(true)\n  [\"softDelete\":protected]=>\n  bool(false)\n}\n//mongodb\n{\n    \"_id\" : \"test.data.custom.id\",\n    \"slug\" : \"test.data.slug\",\n    \"parent\" : [\n        \"test.data.parent\"\n    ],\n    \"meta\" : {\n        \"main\" : false\n    },\n    \"updated_at\" : ISODate(\"2013-12-12T07:41:05.624Z\"),\n    \"created_at\" : ISODate(\"2013-12-12T07:41:05.624Z\")\n}\n```\n. Many thx for the fix, I got 2 quick follow-up questions:\nDoes $date array on model has an effect on created_at field if we add them manually?\nIf we have field name birthday that's not in the $date array, and we manually use fromDateTime before saving it, it will be returned as MongoDate or String?\nhttps://github.com/jenssegers/Laravel-MongoDB/blob/master/tests/ModelTest.php#L323\n. Thx again, I now see there is asDateTime method and its called on attributesToArray.\nBut it's probably going to skip nested array right?\nSay I have this:\n{\n    \"data\": {\n        \"feed\": [\n            {\n                \"url\": \"http://some.url/feed/\",\n                \"title\": \"some feed title\",\n                \"retry\": 0,\n                \"failure\": false,\n                \"force\": false,\n                \"next_update\": ISODate(\"2013-xxx\")\n            },\n        ],\n        ...\n    }\n}\nSay feed is an attribute of a document, what's the expected result of next_update when running toArray on this model ?\n. @jenssegers apologize for asking this again, why does binding to saving event affect the output of toArray, isn't it strictly for saving (updates)?\n. just wondering if this error comes from any specific test case? if whereNotNull does not guard non-existing value then my problem could be elsewhere.\nmaybe a testcase can be added to https://github.com/jenssegers/Laravel-MongoDB/blob/727f0e9e346226948a9646b0bc1f5c363333d01e/tests/QueryTest.php#L152 to double check if a missing field will be created when we try to increment?\n. updated issue ticket (initial test was wrong)\n. current we need to do this instead. not sure if it is intended.\n$collection->dropIndex(array(array('count.pin' => -1, '_id' => 1)));\nwould also be great if deleteindexes() is supported. (simpler down method in migration)\n. my bad, i guess it's possible to set them in app config.\n. interesting, so DB::collection does return int, but not for model. by design?\nDB::collection('my.model')->where('_id', $id)->pull(array(\n            'feeds' => array('url' => $url),\n        ));\nPS: should add that MyModel::update does return int, which seems to suggest otherwise...\n. so this is the call stack:\n```\n0  Jenssegers\\Mongodb\\Query\\Builder->push()\n1  call_user_func_array() called at [/var/www/leaf/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Builder.php:872]\n2  Illuminate\\Database\\Eloquent\\Builder->__call()\n3  Illuminate\\Database\\Eloquent\\Builder->push() called at [/var/www/leaf/app/models/BaseModelMongo.php:209]\nJenssegers\\Mongodb\\Query\\Builder->pull()\n1  call_user_func_array() called at [/var/www/leaf/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Builder.php:872]\n2  Illuminate\\Database\\Eloquent\\Builder->__call()\n3  Illuminate\\Database\\Eloquent\\Builder->pull() called at [/var/www/leaf/app/models/BaseModelMongo.php:213]\n```\nseems like __call on Illuminate/Database/Eloquent/Builder use a $passthru to controll if builder should be returned or not. adding push and pull make my test works.\n. test case missing at the moment, love to know how to setup phpunit for this repo\n. cheers! just curious, you seem to comment out the test itself? is it not working as expected?\n. ignore this comment, existing field does not need append... my mistake. the original problem still holds though :)\nanother weird behaviour that accessor for an existing field appeared to be called twice.\nfor example if i have these lines in a model:\n```\n    protected $appends = array('title');\npublic function getTitleAttribute($title)\n{\n    var_dump($title);\n\n    return $title;\n}\n\n```\ni can see $title being dump twice, first time with the actual title, the second time with NULL\nthe result from toArray will give title as NULL...\nthe workaround i currently use is $this->attributes['title'];\nPS: the issue does not appear for non-existing field (only called once), which need $this->attributes to work anyway.\n. sorry. ignore my follow up comment, it's just wrong...\nmy original question is valid i think...\n. hmmm, i haven't used the laravel eloquent enough to be sure, but would like to confirm:\n1. Does laravel eloquent convert any date field to Y-m-d H:i:s format, or just created_at and updated_at?\n2. If so, I wonder why $dates were added.\n. then we will try to workaround this ourselves. and only instance of failing is when MongoDate is in some sort of array field anyway...\n. Apologize for re-open this ticket, but I just went through the code in Illuminate\\Database\\Eloquent\\Model and found the mismatching behaviour I was thinking about:\nAs far as I can tell, it's not that SQL database return date fields as Y-m-d H:i:s, but rather it's stored as Y-m-d H:i:s in the first place, because created_at, updated_at and deleted_at are created/updated with setAttribute, which in turn calls getDates to check which fields should be converted to a string (defaults to those 3).\nWhen we try to retrieve these date there are actually 2 different results: if we get them with toArray, then the date string will be returned as such; but if we try to get them with model->created_at it will return a Carbon date instead, as getAttribute eventually calls getDates too.\nIn addition to that, the modified attributesToArray attempts to convert just about any field that appear to be MongoDate, which doesn't match the original Eloquent behaviour (it does not touch any other field besides those 3). This is problematic, because unlike the original Eloquent (which works with SQL DB), we are not saving the date as string, but as MongoDate.\nMy suggestion is: keep those 3 dates return as string for backward compatibility, but leave developer to handle the other fields with $date or accessor.\n. If developer want to get an arbitrary date field to do following:\n1. automatically convert DateTime/Carbon to MongoDate on save\n2. automatically output as DateTime/Carbon on retrieve (model->date)\n3. automatically format to string when converting to array (model->toArray)\n4. store as MongoDate in db\nhe/she needs both of $date and accessor:\n```\nprotected $date = array('date');\npublic function getDateAttribute($date)\n{\n  return $this->asDateTime($date);\n}\n```\nBut the dilemma is:\nIf getDateAttribute returns Carbon, item 3 will not be string; if getDateAttribute return string, item 2 will not be Carbon date (because accessor take precedence over date mutator.)\nIf attributesToArray can fix this issue by converting Carbon to string (and use custom formatting like the original Eloquent), then all 4 condition can be met.\n. using $date mutator and the current attributesToArray we can get date to behave roughly like our expectation 1-4 (albeit missing custom format, but not a big deal).\ngetting something.date to work as expected is much harder. mostly due to $date does not support dot notation (understandable, given elqouent is designed for SQL). but also because the same accessor limit applies.\n. Why are you specifically using the date attribute value from toArray()?\nwe use it mostly for display, which expects string; so date mutator work fine with date.\nbut for something.date where something is an array, if we use getSomethingAttribute to convert its date field, then model->something is affected as well. we are still thinking of a good workaround.\n. ",
    "martinAnsty": "Looks like an issue with the php-mongo extension not being loaded by PHP. Check phpinfo() and see if the Mongo extension is being loaded, if not check your php.ini file or load the extension through a separate mongo.ini file in conf.d\n. ",
    "ghost": "What is I get the same error (Class 'MongoClient' not found) but Mongo is enabled within PHP.\nI also checked phpinfo() within laravel to make sure it loads it (and not only via cli/configuration files).\nAny idea? \n. Having spent some more time thinking this through, I don't think camel case is the way to go as that would conflict with the Eloquent way of getting underscored attributes. Maybe underscores to denote array depth with camel case attributes. Again this is a touchy subject as there would need to be database naming convention compromises made. Some suggestion on this would be good.\n. All good man! Looking forward to using this now outside of tests. Need to update the readme as well.\n. Ah ok :+1: \n. Will look into this, I did test this and it seemed to work ok. \n. Pull request 57c5bed should fix this\n. No worries, this should have cleared that up now\n. Having just read over this, the main concern is the move away from Eloquent standards that were clearly laid out in the original brief of this package. That aside, Mongo does not fit the Eloquent standard very well. As @crazycodr says we loose a lot of the power of MongoDB without having specific ways to use it specifically when accessing and setting data without replacing an entire array structure with a new updated one.\nI think that the suggestions are certainly viable, and would be a welcome addition to the package. I particularly like the idea of a MongoDocument and would like to work with you chaps on building this.\n. after strugling for 3 hours it seems I cannot use Log or MongoLog for the class name. Don't know why but there is no error and nothing happen ... no IoC ... nothing ... just not working if you use Log or MongoLog for class name. \n. Maybe laravel IoC uncatched exception... but its time consuming....\n. lol.... the userid is not $fillable \n. @JoeyHoutenbos did you ever find a solution for this?\n. checking in to see if there's a fix or workaround for this? though eager loading shouldn't strictly be necessary, it prevents you from getting the ID of deeply nested items.\nA concrete example: if you have Content -> embedsOne Video -> embedsMany Captions, the _id property for each Caption will be an empty object as shown in the comment by @damienwebdev when retrieving the document.\nMy current workaround is to manually load the relationship i.e.\n$content = Content::find($id);\n$content->video->load('captions');\nThis works in the short run for me\n. Trying to port Baum\\Baum nested sets to use jenssegers/laravel-mongodb\n, but they are using transactions and they aren't supported by this mongodb implementation.\n. Just rebuild your config cache:\nartisan config:cache\n(leave the mongodb connection inside your connections array, as it is supposed to be).\n. +1\n. Can confirm, had the same problem. The save() saves the timestamps while associate() does not.\n. Can confirm that I'm seeing this as well. Working in 5.1.19, broken in 5.1.20.\n. hi @jenssegers , laravel stock DatabaseFailedJobProvider only works with mysql (it populates the failed jobs to mysql failed_jobs table), it's okay if an app has both mysql and mongodb connections, but if laravel app is fully on mongodb (no mysql connection), it will fail when recording the failed jobs\n. I already install the adapter and it connects well using homebrew on my OSX El Capitan..\nwhen i called using mongod and mongo on the terminal it works\nBut when i install it using composer require jenssegers/mongodb, it throws the error like the first post on this thread..\nSo i use  Denys-Bushulyak method and it works on the installation..my question is..is anyone working around with the complete instalation on OSX?if one doesn't use the package requirements..is it working too?\n. Ok after searching me and my coleague manage to figure some of the process and successfully install it on the el-capitan..  At first we need to compile manually and install dependencies(such as autoconf) even the openssl as well(relink and all) .. it works well now.\nThese link also helps greately for anyone having trouble on updating and symlink openssl\nhttp://apple.stackexchange.com/questions/244058/homebrew-trouble-upgrading-openssl\n. duplicate of #179 i think\n. same error..\ncomposer.json\n        {\n            \"require\": {\n                \"maximebf/cachecache\": \"^1.0\",  \n                \"erusev/parsedown\": \"^1.6\", \n                \"illuminate/database\": \"^5.2\",\n                \"illuminate/events\": \"^5.2\",\n                \"schnittstabil/csrf-tokenservice\": \"^1.0\",\n                \"maximebf/debugbar\": \"^1.13\", \n                \"matthiasmullie/minify\": \"^1.3\",\n                \"vlucas/valitron\": \"^1.4\",\n                \"illuminate/pagination\": \"^5.2\",\n                \"symfony/yaml\": \"^3.3\",\n                \"rmccue/requests\": \"^1.7\",\n                \"kamermans/docblock-reflection\": \"^1.0\",\n                \"crada/php-apidoc\": \"^1.3\",\n                \"overtrue/easy-sms\": \"^0.0.5\",\n                \"jenssegers/mongodb\": \"^3.2\"\n\n            },\n            \"autoload\": {\n                    \"classmap\": [\"./framework/\"] ,\n                    \"psr-4\": { \n                        \"modules\\\\\": \"./modules/\",\n                        \"models\\\\\": \"./models/\",\n                        \"cs\\\\\": \"./class/\" \n                    }\n            }\n        }\n\nuser.php \n   namespace models;\n   use Jenssegers\\Mongodb\\Eloquent\\Model as Eloquent;\n\n   class user extends Eloquent { \n    protected $connection = 'mongodb';\n            protected $collection = 'users';\n            protected $dates = [\n                'created_at', 'last_modified'\n            ];\n\n\n\n\n       }\n\n\n\n       print_r(user::all() );\n\nFatal error: Uncaught Error: Call to a member function all() on array i\nadd mognodb.\n    use Illuminate\\Database\\Capsule\\Manager as Capsule;\n    use Illuminate\\Events\\Dispatcher;\n    use Illuminate\\Container\\Container;\n    //https://laravel.com/docs/5.4/database\n    //https://laravel.com/docs/5.4/eloquent\n    class_alias('Illuminate\\Database\\Eloquent\\Model','model');\n    class_alias('Illuminate\\Database\\Capsule\\Manager','db');\n    $capsule = new Capsule;\n    $config = config('db');\n    /**\n     * @desc \u914d\u7f6eMYSQL\n     */\n    if($config){\n            foreach($config as $k=>$v){\n              $capsule->addConnection($v,$k);  \n            }\n    }\n    // use Jenssegers\\Mongodb\\Eloquent\\Model as Eloquent;\n    if($config['mongodb']){   \n            $capsule->getDatabaseManager()->extend('mongodb', function($config)\n            {\n                return new Jenssegers\\Mongodb\\Connection($config);\n            }); \n    }\n\n    $capsule->setAsGlobal();\n    $capsule->bootEloquent();\n\n. I have same problem:\n`\nPHP Warning:  PHP Startup: Unable to load dynamic library '/usr/lib/php/20160303/mongodb.so' - /usr/lib/php/20160303/mongodb.so: cannot open shared object file: No such file or directory in Unknown on line 0\nUsing version ^3.1 for jenssegers/mongodb\n./composer.json has been created\nLoading composer repositories with package information\nUpdating dependencies (including require-dev)\nYour requirements could not be resolved to an installable set of packages.\nProblem 1\n    - jenssegers/mongodb v3.1.0 requires mongodb/mongodb ^1.0.0 -> satisfiable by mongodb/mongodb[1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.1.0].\n    - jenssegers/mongodb v3.1.1 requires mongodb/mongodb ^1.0.0 -> satisfiable by mongodb/mongodb[1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.1.0].\n    - jenssegers/mongodb v3.1.2 requires mongodb/mongodb ^1.0.0 -> satisfiable by mongodb/mongodb[1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.1.0].\n    - jenssegers/mongodb v3.1.3 requires mongodb/mongodb ^1.0.0 -> satisfiable by mongodb/mongodb[1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.1.0].\n    - mongodb/mongodb 1.1.0 requires ext-mongodb ^1.2.0 -> the requested PHP extension mongodb is missing from your system.\n    - mongodb/mongodb 1.0.4 requires ext-mongodb ^1.1.0 -> the requested PHP extension mongodb is missing from your system.\n    - mongodb/mongodb 1.0.3 requires ext-mongodb ^1.1.0 -> the requested PHP extension mongodb is missing from your system.\n    - mongodb/mongodb 1.0.2 requires ext-mongodb ^1.1.0 -> the requested PHP extension mongodb is missing from your system.\n    - mongodb/mongodb 1.0.1 requires ext-mongodb ^1.1.0 -> the requested PHP extension mongodb is missing from your system.\n    - mongodb/mongodb 1.0.0 requires ext-mongodb ^1.1.0 -> the requested PHP extension mongodb is missing from your system.\n    - Installation request for jenssegers/mongodb ^3.1 -> satisfiable by jenssegers/mongodb[v3.1.0, v3.1.1, v3.1.2, v3.1.3].\nTo enable extensions, verify that they are enabled in those .ini files:\n    - /etc/php/7.1/cli/php.ini\n    - /etc/php/7.1/cli/conf.d/10-opcache.ini\n    - /etc/php/7.1/cli/conf.d/10-pdo.ini\n    - /etc/php/7.1/cli/conf.d/15-xml.ini\n    - /etc/php/7.1/cli/conf.d/20-calendar.ini\n    - /etc/php/7.1/cli/conf.d/20-ctype.ini\n    - /etc/php/7.1/cli/conf.d/20-dom.ini\n    - /etc/php/7.1/cli/conf.d/20-exif.ini\n    - /etc/php/7.1/cli/conf.d/20-fileinfo.ini\n    - /etc/php/7.1/cli/conf.d/20-ftp.ini\n    - /etc/php/7.1/cli/conf.d/20-gettext.ini\n    - /etc/php/7.1/cli/conf.d/20-iconv.ini\n    - /etc/php/7.1/cli/conf.d/20-json.ini\n    - /etc/php/7.1/cli/conf.d/20-mbstring.ini\n    - /etc/php/7.1/cli/conf.d/20-phar.ini\n    - /etc/php/7.1/cli/conf.d/20-posix.ini\n    - /etc/php/7.1/cli/conf.d/20-readline.ini\n    - /etc/php/7.1/cli/conf.d/20-shmop.ini\n    - /etc/php/7.1/cli/conf.d/20-simplexml.ini\n    - /etc/php/7.1/cli/conf.d/20-sockets.ini\n    - /etc/php/7.1/cli/conf.d/20-sysvmsg.ini\n    - /etc/php/7.1/cli/conf.d/20-sysvsem.ini\n    - /etc/php/7.1/cli/conf.d/20-sysvshm.ini\n    - /etc/php/7.1/cli/conf.d/20-tokenizer.ini\n    - /etc/php/7.1/cli/conf.d/20-wddx.ini\n    - /etc/php/7.1/cli/conf.d/20-xmlreader.ini\n    - /etc/php/7.1/cli/conf.d/20-xmlwriter.ini\n    - /etc/php/7.1/cli/conf.d/20-xsl.ini\n  You can also run php --ini inside terminal to see which files are used by PHP in CLI mode.\nInstallation failed, deleting ./composer.json.\n`. MongoDB support  enabled\nMongoDB extension version   1.2.8\nMongoDB extension stability stable. here is config.\nuse Illuminate\\Database\\Capsule\\Manager as Capsule;\nuse Illuminate\\Events\\Dispatcher;\nuse Illuminate\\Container\\Container;\n//https://laravel.com/docs/5.4/database\n//https://laravel.com/docs/5.4/eloquent\nclass_alias('Illuminate\\Database\\Eloquent\\Model','model');\nclass_alias('Illuminate\\Database\\Capsule\\Manager','db');\n$capsule = new Capsule;\n$config = config('db');\n/*\n * @desc \u914d\u7f6eMYSQL\n /\nif($config){\n        foreach($config as $k=>$v){\n          $capsule->addConnection($v,$k);\n        }\n}\n// use Jenssegers\\Mongodb\\Eloquent\\Model as Eloquent;\nif($config['mongodb']){ \n        $capsule->getDatabaseManager()->extend('mongodb', function($config)\n        {\n            return new Jenssegers\\Mongodb\\Connection($config);\n        }); \n}\n$capsule->setEventDispatcher(new Dispatcher(new Container));\n$capsule->setAsGlobal();\n$capsule->bootEloquent();. @jenssegers I will send you flowers, a box of chocolate and also a love letter (if you wish) if you manage to update your awesome package to Laravel 5.5 any time soon. I know you're busy but boy, that would make my day.. @RemiCollin oh, didn't even notice. that would be fantastic.. @RemiCollin actually, I'm not so sure that PR really solves the issue. It seems to make some tests work by simply removing a lot of assertions. See tests/EmbeddedRelationsTest.php to see what I mean.. @sagargulati @jenssegers All checks pass because this just removes lot of assertions from tests, see EmbeddedRelationsTest.php. I'm not sure if this really is the PR we're all hoping for. You can't make things pass the test by simply removing failing assertions.. @MCMatters nice work, man! if that PR is accepted by @jenssegers, I owe you one!. Up pls ? :). Thx @petronetto I'll give a try asap and let you know.\nDo you confirm a bug in the EmbedsMany relation ?. ",
    "brunocascio": "Same problem @cloud-ops \n. Yes! I fixed it.\nMongoLid -> https://github.com/Zizaco/mongolid-laravel#troubleshooting\n. I will test!\nThanks Jens\n. Posible Solution:\nphp\n\n<ppublic function store(){\n    $data = array();\n    $data['title'] = Input::get('title');\n    $data['body'] = Input::get('body');\n    $data['user'] = array('_id' => Auth::user()->_id, 'name' => Auth::user()->name);\n```\n$validation = Post::validate( $data );\nif ( $validation->passes() ) {\n   $post = Post::create( $data );\n       return Response::json( array('flash' => 'Publicado!'));\n}\nelse {\n    return Response::json( array('flash' => $validation->messages()->first()), 500 ); \n}\n```\n}\n?>\n. With eloquent it's implemented?\n$user = User::find('a23s988a8sa98s9')->get();\n$post->user = $user;\n$post->user() = $user;\ni get error mass assignment...\n. I don't understand, but now it's working :| \nThanks and i'm sorry!\n. Great!, I'll wait for the fix. Thanks for always helping.\n. Yes it's work! :) Thanks jens!\n. I have sent a pull request with that functionality.\nI checked with same operation, and work fine.\n. Yes! Good idea.\nAnyway..\nRaw update:\n``` php\n$data = array('foo' => 'bar', 'foo2' => 'bar2');\n$id = '52ae0bf538d34983168b4571';\nPost::raw(function($collection) use ($data, $id)\n{\n  return $collection->update(array('_id' => new MongoID($id) ), array('$addToSet' => array( 'stars' =>  $data  ) ) );\n});\n```\n. Thank Jens!\n. I think I've found the solution.. \nI use this code:\nphp\nreturn Response::json(Post::where('_id', $id)->with( array('user' \n => function($query) {\n  $query->get(array('username', 'name'));\n}))->get(), 200);\nThe problem is Find() method ?\n. user.username is not a relation, just work with relations for example, with('user.comments')\nThanks jens!, \n. Now it works. I guess it would have been a cache problem... Thanks!\n. Cheque\u00e1 en los logs de laravel. (app/storage/logs/), me pas\u00f3 en modo producci\u00f3n, pero en version de desarrollo, me mostraba una advertencia de duplicacion de llaves en la base de datos (la key de sesi\u00f3n que hace referencia a un usuario) \n. Yo dej\u00e9 de usar las sesiones de mongo, en reemplazo por redis, que este \u00faltimo es una BD en memoria (mas rapida que en disco), y laravel te permite una gran facilidad para instalarlo. Saludos!\n. Update your MongoDB.\nAggregate method is available only MongoDB > 2.2\n. maybe the field is \"_id\"\nYou can use, \nreturn Country::find($id);\n. Field ID is defined for you? MongoDB _id field to make an ALL documents. The _id field Mongo ObjectID is not an int type\n. mmm... I see... Maybe using pattern ?\n``` php\nRoute::pattern('id', '[0-9]+');\nRoute::get('user/{id}', function($id)\n{\n    // Only called if {id} is numeric.\n});\n```\nor\nphp\nRoute::get('user/{id}/{name}', function($id, $name)\n{\n    //\n})\n->where(array('id' => '[0-9]+', 'name' => '[a-z]+'))\nreference: http://laravel.com/docs/routing#route-parameters\n. Hey!\nCheck my method:\n``` php\npublic function addFav() \n    {\n        $user = Auth::user(); //Obtengo usuario actual\n    $new_friend = User::find(Input::json('friend_id'));\n\n    if ( $new_friend && $user->_id != $new_friend->_id ) \n    {\n        // Chequeo que no sea un favorito actualmente\n        $friends = $user->friendships;\n\n        foreach ( $friends as $friend ) {\n            if ( $friend['_id'] == $new_friend->_id )\n                return Response::json(['message' => 'Ya es un favorito.'], 400);\n        }\n\n        // Datos del usuario agregado\n        $data = array( \n                            '_id'               => $new_friend->_id,\n                            'username'      => $new_friend->username,\n                            'profile_pic'   => $new_friend->profile_pic,\n        );\n\n        // Datos sobre mi\n        $dataMe = array( \n                            '_id'               => $user->_id,\n                            'username'      => $user->username,\n                            'profile_pic'   => $user->profile_pic,\n        );\n\n        // guardo el usuario agregado en el actual\n        DB::collection('users')->where('_id', $user->_id)->push('friendships', $data);\n\n        // guardo mis datos en el usuario agregado\n        DB::collection('users')->where('_id', $new_friend->_id)->push('friends_with_me', $dataMe);\n\n        return Response::json(['data' => $dataMe ]);\n    }\n\n    return Response::json(['message' => 'Bad request'], 400);\n}\n\n```\n. ",
    "nadavkav": "Thanks @brunocascio , you last (above) comment was very helpful :smile: \n. ",
    "ryansmith94": "Same here @brunocascio, that last comment helped me too, thanks :smile_cat:\n. Version: 1.4.3\nError message: Failed to connect to: DELETED:25497: Remote server has closed the connection\nStack trace: \n[\n  {\n    \"file\":\"\\/var\\/www\\/learning_locker\\/releases\\/be24d6339b19c9bded4e74825214b19432a0903c\\/vendor\\/jenssegers\\/mongodb\\/src\\/Jenssegers\\/Mongodb\\/Connection.php\",\n    \"line\":0,\n    \"function\":\"__construct\",\n    \"class\":\"MongoClient\",\n    \"type\":\"->\"\n  },\n  {\n    \"file\":\"\\/var\\/www\\/learning_locker\\/releases\\/be24d6339b19c9bded4e74825214b19432a0903c\\/vendor\\/jenssegers\\/mongodb\\/src\\/Jenssegers\\/Mongodb\\/Connection.php\",\n    \"line\":40,\n    \"function\":\"createConnection\",\n    \"class\":\"Jenssegers\\\\Mongodb\\\\Connection\",\n    \"type\":\"->\",\n    \"args\":[\n      \"mongodb:\\/\\/DELETED:25497\\/DELETED\",\n      {\n        \"driver\":\"mongodb\",\n        \"host\":\"DELETED\",\n        \"port\":\"25497\",\n        \"username\":\"DELETED\",\n        \"password\":\"DELETED\",\n        \"database\":\"DELETED\",\n        \"options\":{\n          \"ssl\":true\n        }\n      },\n      {\n        \"ssl\":true\n      }\n    ]\n  },\n  {\n    \"file\":\"\\/var\\/www\\/learning_locker\\/releases\\/be24d6339b19c9bded4e74825214b19432a0903c\\/vendor\\/jenssegers\\/mongodb\\/src\\/Jenssegers\\/Mongodb\\/MongodbServiceProvider.php\",\n    \"line\":19,\n    \"function\":\"__construct\",\n    \"class\":\"Jenssegers\\\\Mongodb\\\\Connection\",\n    \"type\":\"->\",\n    \"args\":[\n      {\n        \"driver\":\"mongodb\",\n        \"host\":\"DELETED\",\n        \"port\":\"25497\",\n        \"username\":\"DELETED\",\n        \"password\":\"DELETED\",\n        \"database\":\"DELETED\",\n        \"options\":{\n          \"ssl\":true\n        }\n      }\n    ]\n  },\n  {\n    \"function\":\"Jenssegers\\\\Mongodb\\\\{closure}\",\n    \"class\":\"Jenssegers\\\\Mongodb\\\\MongodbServiceProvider\",\n    \"type\":\"->\",\n    \"args\":[\n      {\n        \"driver\":\"mongodb\",\n        \"host\":\"DELETED\",\n        \"port\":\"25497\",\n        \"username\":\"DELETED\",\n        \"password\":\"DELETED\",\n        \"database\":\"DELETED\",\n        \"options\":{\n          \"ssl\":true\n        }\n      },\n      \"mongodb\"\n    ]\n  },\n  \"DELETED\"\n]\n. Additional research:\nhttps://jira.mongodb.org/browse/PHP-1115\nhttps://jira.mongodb.org/browse/PHP-854\n. You're welcome @madmanlear :-) \n. Closing because of inactivity.\n. Closing because of inactivity.\n. ",
    "alexmon": "Same here @brunocascio, your last comment helped me.\nAs soon as i setup mongo PHP driver message disappears\n. ",
    "dweinerATL": "@jenssegers I am getting this same error.  I have confirmed via a phpinfo() statement that the Mongo driver has loaded\n. I have the same problem.\n. I'm not certain if this is the fix, but it's now throwing an error anymore when I changed 'Jenssegers\\Mongodb\\Auth\\PasswordResetServiceProvider', to 'Jenssegers\\Mongodb\\Auth\\ReminderServiceProvider',\nI'll let you know if I get it working\n. That was it!  As soon as I added the getReminderEmail() method to my User model to return the users email address, it started working.\n. You're welcome!  In my copious free time, I'll submit a patch to the README.md :)\n. ",
    "nandwabee": "My experience using Ubuntu is that once the PHP MongoDB driver is correctly installed you will have to add the line extension = mongo.so to both the /etc/php5/cli/php.ini and /etc/php/apache2/php.ini.\nI had the exact error and that is what solved it for me.\n. I am getting the same error on centos 6,PHP 5.4.\n'Cannot use Illuminate\\Database\\Eloquent\\Collection as Collection because the name is already in use'\nSame code runs on Ubuntu although on php 5.5\nUpdate\nI have installed opcache and now its working fine thanks. Strange one right there.\n. Thanks a bunch guys. Working great.\n. ",
    "Rents": "If your \"php -i\" shows that Mongo enabled, but you're still getting the same error, that means you need to restart something. Lost a few hours before it downed on me to restart php-fpm.\nSolution for php-fpm (Ubuntu):\n1. Create new file in /etc/php5/cli/conf.d/ :\n sudo vi /etc/php5/cli/conf.d/20-mongo.ini\n1. Type \"extension=mongo.so\" in that file and save file.\n2. After that you need to restart php-fpm service:\n   sudo service php5-fpm restart\nAs you have now have two declaration \"extension=mongo.so\", it would be better to comment line \"extension=mongo.so\" in your php.ini \n. ",
    "jonathanpmartins": "It can be a Mongo integration problem, but if it isn't, and if like me, you are using native MongoDB commands with PHP, try to put a backslashe before the class, like so: \"\\MongoClient()\"\n. @bgarrison25 Use the master branch.\n\"jenssegers/mongodb\": \"dev-master\"\nI think the 3.0 version is not finished yet. I use the master branch to do all my test before shipping to php7 server. The \"MongoClient not found\" is because you are using a old mongo client.\nI had a diferente issue, but I guess you can get rid of this message, compiling _libmongoc_ again, and installing the mongo client via pecl. Look up https://github.com/mongodb/mongo-php-driver/issues/219#issuecomment-179858933\n. Same problem here! Don't know why @jenssegers \n. @jenssegers Resolved with this Answer:\nhttp://stackoverflow.com/questions/29050410/trouble-with-configuring-users-and-connecting-to-mongo-with-php/29052015#29052015\n. How can I install this new branch: \"jenssegers:pecl-mongodb\" via composer? @WillSkates @jenssegers @amiri27 \nSomething is changed? Or the lib functionality is the same? \n. Thanks @WillSkates very helpfull.\n. @WillSkates Im making tests with Lumen 5.2 and Php7, Ubuntu... if something goes wrong I will return with the scenario.\n. @WillSkates @jenssegers \nThe only change I notice is:\nuse Jenssegers\\Mongodb\\Model;\nto\nuse Jenssegers\\Mongodb\\Eloquent\\Model;\nThis will remain so? Or it will change when It merges the master branch?\n. But it dont exist yet. https://github.com/jenssegers/laravel-mongodb/tree/pecl-mongodb/src/Jenssegers/Mongodb. And I can find it in the Eloquent folder. For now the second choice is working, while the first one throw a error.\n. @jenssegers @WillSkates  Why does 3.0 dont appear on packagist?\nhttps://packagist.org/packages/jenssegers/mongodb\n. ",
    "osadan": "I had the same problem . after I upgraded my Yosemite to 10.10.5 . all answers above did not solved my problem . my php --ini displayed that the mongo drive is loaded . But still got the error .\nand php -v showed that I am running php version 5.6. \nWhat worked for me eventually copying the libexec/apace2/phpLibModule to the apace libexec directory . \n It turned out that the apache was running version 5.5 .\n. ",
    "biswajitpanday": "Thanks man. I am using Linux Mint. To solve this issue i added \"extension=mongo.so\" (Without quotes) in two directories - \n1. /etc/php5/cli/php.ini\n2. /etc/php5/apache2/php.ini\n. ",
    "mvladk": "is there expected release date for support mongodb 3.2?\n. @bgarrison25, exactly. finally it some how worked with \"mongodb\" and composer\n\"laravel/framework\": \"5.1.*\",\n\"jenssegers/mongodb\": \"~3.0\",\n. ",
    "jensk": "@mvladk Version 2.3.x works well with mongodb 3.2.\n. @bgarrison25 Indeed, php 7 requires a new driver called mongodb. (only supported by the current master branch, no release yet) Though, in my post I just answered the question about mongodb 3.2 support. ;-)\n. Awesome work @jenssegers !\n. This should work:\nphp\nforeach($form->questions as $question) {\n    $question->title = 'Test';\n    $question->save();\n    $form->questions()->save($question);\n}\n. Same issue with the apc driver. Probably all cache drivers are affected.\n. Related reports:\nhttps://github.com/mongodb/mongo-php-library/issues/109\nhttps://jira.mongodb.org/browse/PHPC-460\n. There is a saveMany method.\n. ",
    "bgarrison25": "@jenssegers I see your 3.0 branch that uses mongodb pecl extension but I can't figure out how to install this with composer. if I put in \"3.*\" in my composer.json it yells at me because you haven't released it yet. How might I be able to use this or is there a release date for this? \n. @jensk it might work well with mongodb 3.2 but php 7 now uses a new pecl extension called \"mongodb\" instead of \"mongo\" and this is causing the \"MongoClient not found\" error. That is what he is talking about.\n. ",
    "gsolak": "@mvladk - thank you. Upgrading composer to ~3.0 jenssegers/mongodb  fixed it for me.\nRunning Windows +  php 7.0.1 + mongodb 3.2.1\ncomposer.json\n\"laravel/framework\": \"5.2.*\",\n\"jenssegers/mongodb\": \"^3.0\"\nphp -i | grep\nmongodb support => enabled\nmongodb version => 1.1.2\nmongodb stability => stable\nlibmongoc version => 1.1.2\nThe versioning is from:\nhttps://pecl.php.net/package/mongodb\nSome tips:\n1) Make sure CLI php and apache php is the same (as mentioned before). Hopefully composer will fail on installation without the proper mongodb extension.\n2) initially I had the .dll named as \"mongo.dll\" ... I recommend keeping it as \"php_mongo.dll\".\n3) Make sure php is in Windows' path\n3) http://php.net/manual/en/mongodb.installation.windows.php\n. ",
    "goopter": "The following php code runs fines on command line, but it failed to open in browser, with error class not found. There's one possible cause is that even the phpinfo() page shows /etc/php-zts.d/mongodb.ini is loaded, but it doesn't show anything else for mongodb module, the mongodb.so file is already defined in the ini file, spent long time can't figure out the reason, pls advise how to proceed?\nFatal error: Class 'MongoDB\\Driver\\Manager' not found in /var/www/vendor/mongodb/mongodb/src/Client.php on line 56\ntest.php\nphp\n$filename='/var/www/ee14dev/vendor/autoload.php';\nrequire $filename;\n$client = new MongoDB\\Client(\"mongodb://localhost:27017\");\n$collection = $client-demo->beers;\n$result = $collection->insertOne( [ 'name' => 'Hinterland', 'brewery' => 'BrewDog' ] );\necho \"Inserted with Object ID '{$result->getInsertedId()}'\";\n?>\n.",
    "midium": "For all having problems with MongoClient function on php7 please check the following link:\nhttp://stackoverflow.com/questions/34486808/installing-the-php-7-mongodb-client-driver\nBasically as php7 uses a new driver class for MongoDB they has changed the function to be called.\nHope this can help\n. ",
    "nigeltiany": "Having the same issue as @goopter. Lets revisit this issue here on github please\n. ",
    "lewiswebber": "Thanks to @Rents answer I fixed this issue.\nIf you installed PHP with brew, do brew services restart php70 or php56 if you use version 5.6.x.\n. ",
    "junibrosas": "I do not know but all the things above did not work for me.\nHere is my workaround:\nInstall MongoDB client\nhttps://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/\nInstall MongoDB driver for PHP\nhttp://www.bictor.com/2015/02/15/installing-mongodb-for-php-in-ubuntu-14-04/\nIf you come across with configure: error: sasl.h not found! error, use:\nsudo apt-get install libsasl2-dev\nfor CentOS:\nyum install cyrus-sasl-devel\n. ",
    "mohammad-69": "I have the same problem on homestead with php 5.6 - laravel give me the same error but strange thing is I can work with mongo in php artisan tinker and I can migrate but in browser it shows : Class 'MongoDB\\Driver\\Manager' not found.  I'm using \"jenssegers/mongodb\": \"^3.1\", in my composer.json file.\n. @henriale Can you put your code here how did you solve it ? I'm facing same problem. Thanks. ",
    "gvsagar411": "i got the error as     Fatal error: Class 'Mongoclient' not found in D:\\xampp\\htdocs\\mongo.php on line 3 \n for fixing this to get mongodb driver i have added this extension=php_mongodb.dll in php.ini file, but still the error was not fixed. can anyone please help me to get out of this issue. ",
    "Werter12": "Hi! For those who use vagrant/homestead (also different versions of jenssegers/mongodb for two projects on one homestead)and as I stumbled on this problem, my solution will be useful. So, homestead (6.4.0) use php cli 7.1 as default and command 'php artisan' run by default cli.  So if  you face 'MongoClient' problem, that means you use not right cli version. In order to use right cli version you have to specify 'php5.6 artisan' or 'php7.1 artisan'. Also you must have right extension in php.ini. mongo.so - for old projects, mongodb.so - for new projects.. ",
    "craigward": "Here is the model in question \n```\n<?php\nuse Illuminate\\Auth\\UserInterface;\nuse Illuminate\\Auth\\Reminders\\RemindableInterface;\nclass User extends MongoModel implements UserInterface, RemindableInterface {\n/\n * The database table used by the model.\n \n * @var string\n /\nprotected $table = 'administrators';\n/\n * The attributes excluded from the model's JSON form.\n \n * @var array\n /\nprotected $hidden = array('password');\n/\n * Get the unique identifier for the user.\n \n * @return mixed\n /\npublic function getAuthIdentifier()\n{\n    return $this->getKey();\n}\n/\n * Get the password for the user.\n \n * @return string\n /\npublic function getAuthPassword()\n{\n    return $this->password;\n}\n/\n * Get the e-mail address where password reminders are sent.\n \n * @return string\n /\npublic function getReminderEmail()\n{\n    return $this->email;\n}\n}\n```\nI have an Alias set up for MongoModel. Its the standard User model that is shipped with laravel really\n. How odd, I'll have a dig round and see if it could be anything else.\nThanks for looking\n. In the Auth config file should I be using 'Eloquent' or 'database' as the driver?\nIf I use Eloquent I get a different error, which is: Trying to get property of non-object on line 109 of vendor/laravel/framework/src/Illuminate/Auth/Reminders/DatabaseReminderRepository.php\n$createdPlusHour = strtotime($reminder->created_at) + $this->expires;\nI think this is because the date is now an array which it is not expecting.\n. The problem with using the Eloquent driver is its throws the error I wrote about above.\n. I've added a question on Stack Overflow to see if I can get to the bottom of the issue. Once I do I'll post back here\nhttp://stackoverflow.com/questions/18750824/laravel-and-mongodb-generating-must-implement-remindable-interface\n. ",
    "philipzaengle": "Running into this issue here as well, digging in unless someone has found a solution...\n. The error I am experiencing is with Password::reset\n. Are you using the standard password_reminders table (in this case a collection)? My issues are in the DatabaseReminderRepository class in namespace Illuminate\\Auth\\Reminders on line 110 there's a check to see if the reminder has expired, which is unable to perform due to the nature of the data being passed to it via $reminder->created_at.\nUgly core hack, change line 110:\n$createdPlusHour = strtotime($reminder->created_at) + $this->expires;\nto\n$createdPlusHour = strtotime($reminder['created_at']['date'] + $reminder['created_at']['timezone']) + $this->expires;\n. ",
    "rbianchi": "Yes! thanks Jean\nIt works!\nJust do not understand why this is not so in PHP 5.3, but that is another problem :)\n. ",
    "royduin": "Is this implemented yet? It's an old issue but I can't find anything about it in the readme but I came across some issues where people are talking about pivot tables... I need a many-to-many relation with the same collection, for example: I've got a \"values\" collection with a lot of values, I'd like to create a many-to-many relation between those values. Does Moloquent have something for this?\nEdit: this is what I want: https://github.com/laravel/framework/issues/441#issuecomment-28891399 which is using the belongsToMany relationship which is supported by Moloquent, so I think I've answered my own question :) let's experiment with it.\n. Thank you @pi0! The working result:\n\\DB::connection('mongodb')->collection('values')->where('entity_id',123)->update([\n    '$rename' => ['oldname' => 'newname']\n]);\n. ",
    "jmshelby": "Okay -- digging into this more, it turns out that the aggregate function in MongoDB is new as of version 2.2 (of the mongod service). So if you're using this package, you'll want make sure you're using the latest version of the service. \n@jenssegers --> Might be good to add this to the documentation ;)\nIf you're on ubuntu, like I am, you need to install from the 10Gen aptitude repo, as the default one (just using apt-get install mongodb) will give you a quite older version, 2.0.4 in my case.\nhttp://docs.mongodb.org/manual/reference/method/db.collection.aggregate/\n. Since $geoNear is a command, and not an operator, I haven't found a built in way yet to get it into the models easily (since raw queries don't accept commands, it's a different type of call). \nHowever, it shouldn't be too hard to add some way of combining the command calling functionality of Mongo, with this ORM, would just have to figure out a way to handle aggregates, and where to put the additional diagnostic information that comes with a mongo command call (like distance from the near point).\nSomething like this:\n```\n        $point = array(\n            'type' => \"Point\",\n            'coordinates' => array($long, $lat),\n        );\n    $db = \\DB::getMongoDB();\n\n    $r = $db->command(array(\n        'geoNear' => 'stores',\n        'near' => $point,\n        'spherical' => true,\n    ));\n\n    $stores = Store::hydrate( some_function_to_pull_out_records($r) );\n    $stores->some_function_to_add_data( some_function_to_pull_out_diagostic_data($r) );\n\n```\nYou could possibly add this as an abstract function to your base Eloquent model (or a php trait to be used on your Geo Centric Model).\nOr if you want to be really cool, then you can build this functionality into the query builder classes. In the end you just need to make sure $db->command() is being called, instead of collection->find() (or aggregate(), or distinct())\n. Can you give us some info on the environment you're running in? OS, server, php ver., etc....\n. Actually, I'm seeing the same thing now (on tag v1.3.0). I have the same setup as @kaamaru except i'm using apache\n. $with does exist as a property to Eloquent\\Model -- it allows eager loads to always happen when building queries with a particular model.\n$appends is for a very different purpose -- to add function output or relationships to the output of the toArray method\n. Think about what you're asking .... What's the purpose of eager loading on a single record? Eager loading is only useful for multiple records.\nEven with base Eloquent, the with() function on the model is just a pass-through to the query class. It's only there for syntax convenience when building a query, not for the find function.\n. Like i said, the with() method is a passthrough to the query object. However, find() is returning the model object, so it doesnt work to call with().\nEither way, its pointless, there's no reason to eager load on a single record, just leave the with() call out of it; unless you're building a query of multiple record results.\n. Is this the way Laravel works on it's own? If not, then I think it's better to include that functionality at that level (in the Laravel framework).\nI think it's a good idea, but it's better to exclude general improvements to the ORM from this project, to focus on the mongodb aspects. Unless i'm understanding this incorrectly, your suggestion sounds like a non-mongodb related feature?\n. Can you give an example of what would cause the error? Is it like this:\n$emptyModel = new User;\n    $fredUser->bestFriends()->attach($emptyModel);\n. Cool -- do you have a stack trace?\n. The stack trace will help to know where the error is coming from in eloquent, and if it makes sense to change the behavior. However, to me, it seems like the attach function (which is a method on the BelongsToMany relationship class) has always at least required a valid numeric id, if not an existing model instance with a valid id. So I don't think it has anything to do with the latest release.\nYou can try submitting a pull request there, Taylor is usually pretty receptive, or at least give you a reason why he doesn't prefer it this way. Personally i'm on the fence with this behavior, not sure what the best approach should be. I definitely think it should change so it's not causing a php error; but I could go either way with suggesting it throwing an actual exception when a model is passed that doesn't exist, or just gracefully return if it doesn't exist. An exception is a nice way to go, because it's at least catchable.\nTwo ways I would suggest, Illuminate/Database/Eloquent/Relations/BelongsToMany.php\nExisting:\n``` php\n    public function attach($id, array $attributes = array(), $touch = true)\n    {\n        if ($id instanceof Model) $id = $id->getKey();\n    $query = $this->newPivotStatement();\n\n    $query->insert($this->createAttachRecords((array) $id, $attributes));\n\n    if ($touch) $this->touchIfTouching();\n}\n\n```\nThrow Exception:\n``` php\n    public function attach($id, array $attributes = array(), $touch = true)\n    {\n        if ($id instanceof Model)\n        {\n            if (!$id->exists)\n            {\n                throw new SomeExceptionGoodForThisCase('An existing model is required');\n            }\n            $id = $id->getKey();\n        }\n    $query = $this->newPivotStatement();\n\n    $query->insert($this->createAttachRecords((array) $id, $attributes));\n\n    if ($touch) $this->touchIfTouching();\n}\n\n```\nGracefully Return:\n``` php\n    public function attach($id, array $attributes = array(), $touch = true)\n    {\n        if ($id instanceof Model)\n        {\n            if (!$id->exists) return;\n            $id = $id->getKey();\n        }\n    $query = $this->newPivotStatement();\n\n    $query->insert($this->createAttachRecords((array) $id, $attributes));\n\n    if ($touch) $this->touchIfTouching();\n}\n\n```\n. Taylor has moved things to a new PR with failing tests format; along with an IRC channel for feature requests/ideas. Not sure what happened to all the past issues however ... I think they were just nuked.\nhttp://laravel.com/docs/contributions#new-features\nhttp://laravel.io/forum/09-09-2014-laravel-github-issues\n. This is actually a bug in your code Mick -- take a look in the PHP documentation on how the foreach function works ... You'll see that it assigns the iteration variable as copy, instead of a reference (like a function parameter). Use an ampersand in front of the iteration variable if you want it to be a reference to the original spot in the array.\n. Well, laravel has some handy functions to access array elements in dot notation, take a look in the laravel/laravel package under Support/helpers.php to see them. Also the laravel base collection class has built in functions for nested arrays like this, I believe it's called: Illuminate\\Support\\Collection, take a look at it's functions; it's easy to create and use as a data access object.\n. Why are you writing SQL to query against mongodb?\n. I asked about this in #134 ... But I would still like to see this implemented some time, maybe as an option. One day when I have enough time, I'll try and see exactly what issues jens ran into, and find solutions ....\n. ",
    "disfasia": "I'm pretty new to laravel, i didn't find the logQuery method. I guess this is working as well, but i dont see the display of cursor->info useful data. Do you think it would be good to have that displayed ?\nPlus, I think it would be good to only log the queries if debug is enabled, to save some time consuming functions to be exectued ( json_encode, cursor info, etc)\n. fixed! Thanks for the hint\n. @jenssegers i'm pretty new to contributing on github, I'd like to know if you can accept my pull request and or what to improve about it!\nThank you\n. But this way you limit mongodbs capabilites! \n. I know that, IMHO shortcuts are handful  and definitely more readable. Is the point of Eloquent, right ?\nUser::raw(function($collection)\n{\n    return $collection->findOne(array('_id' => 1), array( 'field' => array('$slice' => 1) ) );\n});\nversus\nUser::find(1)->slice('field', 1);\n. @innova it should be:\nphp\nCategories::find('t3')->slice('sub_categories', [ 6, 3 ] )\n. ",
    "yefriddavid": "In laravel is this in the model of Eloquent (->getKey())\n. namespace App\\Models\\MongoDB\\Cases;\nuse Jenssegers\\Mongodb\\Model as Eloquent;\nclass MyModel extends Eloquent {\n    protected $collection = 'xxxtableMongo';\n    protected $connection = 'mongodb';\n}\nin controller\n$myModel->save()\n$myModel->getKey();\n. ",
    "tdicks": "I think the difference is I'm using MySQL for the Image and User models, and MongoDB for the ImageMeta model. Would that cause any problems?\n. Ah right, I was expecting it to return a generic relation which is independent of the databases used. If that's not the case, I expect I can work around it. Or alternatively just not use MySQL and have MongoDB as my main database for everything.\nThanks for your help, much obliged.\n. ",
    "amacgregor": "Is there any way to get this working( A relation between a Mongo Model and a MySql Model) ?\n. This might a compatibility issue with this bundle https://github.com/creolab/laravel-modules?source=cc\nMy current code looks something like this  \n```\n        $container = \\App\\Modules\\Catalog\\Models\\Attribute\\Container::find('528bed717c89f55850000029');\n        echo get_class($container) . ' - ' . $container->entity_id . \"\";\n    $items = $container->items();\n\n    foreach($items as $item)\n    {\n        echo get_class($item) . ' - ' . $item->name . \"<br/>\";\n    }\n\n```\nContainer class\n```\nclass Container extends Eloquent {\nprotected $connection = 'mongodb';\nprotected $collection = 'attribute_container';\n\npublic function items()\n{\n    return $this->hasMany('App\\Modules\\Catalog\\Models\\Attribute\\Entity');\n}\n\n} \n```\nEntity class \n```\nclass Entity extends Eloquent {\n    protected $connection = 'mongodb';\n    protected $collection = 'attribute_container_item';\npublic function container()\n{\n    return $this->belongsTo('App\\Modules\\Catalog\\Models\\Attribute\\Container');\n}\n\n} \n```\nSo I do see the container id being added to the entity model, but when I try to retrieve the items nothing comes back.\n. Closing this ticket, I was incorrectly calling \n$container->items();\nThis works:\n$container->items;\n. ",
    "ollieread": "I'm using both MongoDB and MySQL in my application, and I thought about this issue too. Couldn't you check the connection type? So if we're trying to use a MySQL model as a relationship, wait until after the initial query then get it separately? The fact that the child is a MySQL object should make it easy there on to modify.\n. @jenssegers I see what you're saying but that would at least solve half the problem, perhaps a second model for Eloquent models, that overrides the relationship handler if the requested object extends your Model? I imagine it'd be relatively simple, I'd be happy to take a look myself?\n. Changes\n- Jenssegers\\Mongodb\\Model will now return MySQL relations if the Model in question is an instance of Illuminate\\Database\\Eloquent\\Model\n- Added Jenssegers\\Mongodb\\CrossModel so that MySQL models can have MongoDB relations and MySQL relations.\nI tested quite a bit on my end, but if somebody else would like to test, then please do so.\nI have the tests viewable here: http://laravel.ollieread.com/mongo\n. Your model that users MySQL, the User model, are you extending ModelCross?\nHere's my test code: https://gist.github.com/ollieread/8020640\nHere's the result: http://laravel.ollieread.com/mongo\n. Excellent :)\nJust waiting for the pull request to be accepted :D\n. If I get chance I'll have a stab at the unit tests.\n. I chose ModelCross because it is just the normal Eloquent model except that it provides cross database relationships. I feel that SqlModel or PdoModel would give the wrong impression as they're only to be used in the instance where you want a normal model to provide relationships to MongoDB.\nIn my own implementation I setup the alias EloquentCross.\n. The reason the code is duplicated is that until we check the instanceof we don't know whether or not to return a default relation. Creating an instance straight away and then passing to the parent will mean that we've essentially created two instances of the related model in the memory.\n. To be honest, I wasn't very happy about the duplicated code and did try to limit it as much as possible, but I unfortunately couldn't find a way to do it without compromising something. I'm definitely open to changes if we can do it.\n. I can't remember, but I tested all sides of it, and they all worked.\nI don't understand how using is_subclass_of is better than instanceof? Also, what is parent::relation();? I kept it simple, adding another method just complicates things and you break away from the inheritance of default functionality.\n. What about the else? The model needs to support relations all ways whether it's mongo to mongo, mysql to mysql, mysql to mongo or mongo to mysql. Since we can't extend both the Eloquent model and your model, there's no way to have access to all functions without reworking the model.\n. Would that really tidy it up though? If you think it works better than by all means.\n. All works fine on my end, well done :D \n. Do you want to take a stab at that?\n. Have you tried dumping out the result of is_subclass_of?\n. Well the belongsToMany() is assuming that you're working with 2 mongodb models, perhaps it's an instance of something else?\n. Let me check that. If it does, we going to close this merge request?\n. Sorry I haven't had chance to test yet, going back to my hometown on Monday, so everything has been mad!! Will test asap\n. Good man!\n. My understanding is that @jenssegers has been quite busy lately, and hasn't had the time to fully tend to this project, so you're probably correct in that it could do with some collaborators.\nIt is, however, worth noting that there's currently a rework in progress, splitting out the core of the functionality to https://github.com/jenssegers/laravel-mongodb-core, with this package eventually being modified to use that and then become an Eloquent extension of it.. @Stackout You need to specify the table as connection.collection, like this example from my own code;\nphp\n        return [\n            'name'                => ['required'],\n            'slug'                => [\n                'required',\n                $this->data['world_id'] ?\n                    Rule::unique('account_mongodb.collections', 'slug')\n                        ->ignore($this->model->id, '_id')\n                        ->where('world_id', $this->data['world_id']) :\n                    Rule::unique('account_mongodb.collections', 'slug')\n                        ->ignore($this->model->id, '_id')\n                        ->whereNull('world_id'),\n            ],\n            'description'         => ['required'],\n            'items.*.title'       => ['required'],\n            'items.*.description' => ['required'],\n        ];. @koAndy This isn't a problem with this package. The problem is that you're changing the config dynamically, but the connection instance still exists. You have to force the connection to reconnect to load the new config.\nAlso, as a side note, there are nicer ways to achieve this. I have a multitenancy package and I handle it like so;\n\nI have a separate db config in the config file called multitenancy\nI then extend the db manager with something to identify the database name (https://github.com/ollieread/multitenancy/blob/master/src/ServiceProvider.php#L64)\nI have a manager class that stores the current tenant\nOn setting the tenant, I call the reconnect method app(DatabaseManager::class)->connection('multitenancy')->reconnect(). \n",
    "devbeans": "I am also having a problem with the dates, I have a script like this:\n$from = new MongoDate(Input::get('from')); //from is in time format\n$to = new MongoDate(Input::get('to')); // to is in time format\n$between = array( $from, $to);\n$leads = Lead::whereBetween('created_at', $between)->get();\nI don't know what I'm missing but the date range is not working, is there something I am missing? Thanks for writing a great extension btw.\nCheers,\nAlbert\n. Awesome, got some tips from your tests. Thank you\n. ",
    "sebastiaanluca": "Could you perhaps quickly explain how to get MongoDate objects converted to Carbon instances? Whenever I read out data, the created_at and updated_at fields are always of the MongoDate type.\n. Seems to work here, but I haven't tested it with such a specific query. More like Post::with('comments')->orderBy('created_at', 'desc')->paginate(2);.\n. Excellent! If everything would be so easy\u2026 :) Thanks!\n. Finally got it working! To be a bit more specific: I had a regular Eloquent model with a belongsTo relationship (so the title might not be representative anymore), but your library wouldn't load it as somehow Eloquent prefixed the _id field with the table name, resulting in feed._id. This was invalid MongoDB syntax, so it wouldn't return anything as far as the relationship went.\nI spent a few hours (yeah, I know) searching for what caused this, and came up with a \"fix\":\nphp\nif(strpos($where['column'], '_id') !== -1){\n    $where['column'] = '_id';\n}\nPlaced in compileWheres in src/Jenssegers/Mongodb/Query/Builder.php:\n``` php\n/\n     * Compile the where array.\n     \n     * @return array\n     /\n    protected function compileWheres()\n    {\n        if (!$this->wheres) return array();\n    // The new list of compiled wheres\n    $wheres = array();\n\n    foreach ($this->wheres as $i => &$where)\n    {\n\n        if(strpos($where['column'], '_id') !== -1){\n            $where['column'] = '_id';\n        }\n\n        // Convert id's\n        if (isset($where['column']) && $where['column'] == '_id')\n        {\n            // Multiple values\n            if (isset($where['values']))\n            {\n                foreach ($where['values'] as &$value)\n                {\n                    $value = $this->convertKey($value);\n                }\n            }\n            // Single value\n            elseif (isset($where['value']))\n            {\n                $where['value'] = $this->convertKey($where['value']);\n            }\n        }\n\n        // Convert dates\n        if (isset($where['value']) && $where['value'] instanceof DateTime)\n        {\n            $where['value'] = new MongoDate($where['value']->getTimestamp());\n        }\n\n        // First item of chain\n        if ($i == 0 && count($this->wheres) > 1 && $where['boolean'] == 'and')\n        {\n            // Copy over boolean value of next item in chain\n            $where['boolean'] = $this->wheres[$i+1]['boolean'];\n        }\n\n        // Delegate\n        $method = \"compileWhere{$where['type']}\";\n        $compiled = $this->{$method}($where);\n\n//          dd($compiled);\n        // Check for or\n        if ($where['boolean'] == 'or')\n        {\n            $compiled = array('$or' => array($compiled));\n        }\n\n        // Merge compiled where\n        $wheres = array_merge_recursive($wheres, $compiled);\n    }\n\n    return $wheres;\n}\n\n```\nFor now, I'll try to extend your class and implement this on my own\u2026 because I have no idea what this is worth to you :)\n. Thanks! Just asking to be sure: do all models need to extend your Eloquent class, or just the ones using MongoDB? Because if it's the latter, then I guess your tweak doesn't apply here, because the relation is defined in a regular \"MySQL class\". But I'll test it first thing in the morning.\nIn short: Eloquent model => morphTo => belongsTo => prefixes the _id field with the table name, becoming something like feed._id (where it goes awry) => Sends it to your MongoDB query builder => Generates a where clause using feed._id \u00e0nd doesn't convert the ID fields to a Mongo IDObject (because feed._id != _id) => Loads the relationship with the wrong column in where => Doesn't find anything because that column doesn't exist\nHope you'll get my chaotic explanation!\n. Oh wow. I should definitely read instructions more clearly next time :') Confirming morphTo works, just had to use your Eloquent model. Something I forgot. Never again.\nThanks!\n. I implemented this in an environment where morphTo morphs to multiple classes, and it seems it only loads the first and returns NULL for all subsequent classes.\nFor instance:\nphp\npublic function reportable() {\n    return $this->morphTo();\n}\nin a regular Eloquent model (but extending your Eloquent class) with App\\Models\\Feed\\FeedEntryComment and App\\Models\\Feed\\Users\\TextualFeedEntry as reportable_type (which use MongoDB and extend your MongoDB model).\nAlso, should a relation work when not eager loading it? If I do $spam = Report::findOrFail($ID) and load the relation through $spam->reportable, it returns NULL. Once I eager load it via $spam->load('reportable'), it does work.\n. ",
    "atapatel": "I am facing the issue with new version..\n. ",
    "jkpatil211": "@sebastiaanluca : u can use MongoDate::toDateTime as given in following link\nhttp://php.net/manual/en/mongodate.todatetime.php\n. @puffstream This happened with me also. Please provide solution if you find it. ",
    "saraht129": "@jenssegers The whereBetween query doesn't work with Carbon date, only MongoDate. Using v2.2.4.\n```\n    $startDate = Carbon::createFromDate(2015, 4, 1);\n    $endDate = Carbon::createFromDate(2015, 4, 30);\n    $users = User::whereBetween('created_at', array($startDate, $endDate))->get();\n    //Return empty result\n$startDate = new MongoDate(Carbon::createFromDate(2015, 4, 1)->timestamp);\n$endDate = new MongoDate(Carbon::createFromDate(2015, 4, 30)->timestamp);\n$users = User::whereBetween('created_at', array($startDate, $endDate))->get();\n//Return correct results\n\n```\nIs the Carbon date support not applicable to this case? Thanks!\n. ",
    "thiantunesalves": "I am facing the issue with new version..\u00b2\n. I'm having the same problem.\n:(\n. $books = $author->books()->get()->where('pages', '>', 300);\nWorked for me!\n:)\n. ",
    "mshahamirian": "@saraht129 @jenssegers I've tired your solution and still get empty result! Also tried (for example)\nUser::where('created_at','>',$startDate)->where('created_at','<',$endDate)->get();\nstill get empty result.\nI don't know why it doesn't work with more than one where clause :disappointed: . ",
    "fbraem": "I think so ... The user model (reused from Laravel) is correctly seeded. My own model fails ...\nThis is my DatabaseSeeder class:\n```\n<?php\nclass DatabaseSeeder extends Seeder {\n/**\n * Run the database seeds.\n *\n * @return void\n */\npublic function run()\n{\n    Eloquent::unguard();\n\n    $this->call('UserTableSeeder');\n    $this->call('ArticleTableSeeder');\n    $this->call('PageTableSeeder');\n}\n\n}\n```\nAnd this is the ArticleTableSeeder:\n```\n<?php\nclass ArticleTableSeeder extends Seeder {\npublic function run()\n{\n    echo \"Seeding Articles ...\";\n    DB::table('articles')->delete();\n\n    $user = User::where('username', 'root')->first();\n\n    if ( $user )\n    {\n        Article::create(array(\n        'title'   => 'First post',\n        'slug'    => 'first-post',\n        'body'    => 'Lorem ipsum',\n        'user_id' =>  $user->getKey()\n        )); \n    }\n\n    echo \"Seeded.\";\n}\n\n}\n```\nAnd this is the Article model:\n```\n<?php\nuse Jenssegers\\Mongodb\\Model as Eloquent;\nclass Article extends \\Eloquent {\nprotected $collection = 'articles';\n\nprotected static $unguarded = true;\n\npublic function author()\n{\n    return $this->belongsTo('User');\n}\n\n}\n```\n. Problem solved: my Article model extended from \\Eloquent. When removing the backslash I can seed using the Article model.\nThanks for your time.\n. Are you always so impatient? Read my answer on how I solved it. It's probably something in your code ...\n. ",
    "ganapathi-threesquare": "hi Even i am facing the same problem can u tell where i need change which file???\nmac:FASE kakashi$ php artisan authentication:install\nMigrated: 2014_02_19_095545_create_users_table\nMigrated: 2014_02_19_095623_create_user_groups_table\nMigrated: 2014_02_19_095637_create_groups_table\nMigrated: 2014_02_19_095645_create_user_throttle_table\nMigrated: 2014_02_19_160516_create_permission_table\nMigrated: 2014_02_26_165011_create_user_profile_table\nMigrated: 2014_05_06_122145_create_profile_field_types\nMigrated: 2014_05_06_122155_create_profile_field\n[ErrorException]\n  Argument 2 passed to Illuminate\\Database\\Query\\Builder::__construct() must\n  be an instance of Illuminate\\Database\\Query\\Grammars\\Grammar, null given, c\n  alled in /Applications/XAMPP/xamppfiles/htdocs/FASE/vendor/laravel/framewor\n  k/src/Illuminate/Database/Eloquent/Model.php on line 1787 and defined \n. hi i am waiting for the response........\n. working fine...\n. der is link problem localhost and mongo\n. ",
    "duffybelfield": "How would this work with a nested array?\n\"skills\" : {\n        \"Turbo Pascal\" : {\n            \"order\" : 1,\n            \"id\" : \"21\"\n        },\n        \"Accounting\" : {\n            \"order\" : 2,\n            \"id\" : \"715\"\n        },\n        \"Pascal\" : {\n            \"order\" : 3,\n            \"id\" : \"12\"\n        },\n        \"javascript\" : {\n            \"order\" : 4,\n            \"id\" : \"635\"\n        },\n        \"Assembly\" : {\n            \"order\" : 5,\n            \"id\" : \"9\"\n        }\n    },\n$query->where('skills, 'like', 'abc%')?\n. Apologies, I will post the stacktrace tomorrow.\n. ",
    "RdlP": "Ok, thanks very much.\nA last question, what's object return DB::getMongoDB()? MongoClient MongoDB MongoCollection?\n. First yo got a mongodb instance\n$mongodb = DB::getMongoDB();\nand then you run the command.\n$r = $mongodb->command(array(\n    'geoNear' => \"tiendas\",  // Put here the collection\n    'near' => array(\n            'type' => \"Point\",\n            'coordinates' => array(doubleval($lng), doubleval($lat))),\n    'spherical' => true,\n    'maxDistance' => 100,\n));\nFinally in $r you obtain the result.\nI hope that this help you.\n. Can you post the exactly error?.\nMonth ago I don't use this project but maybe I could help you.\n. ",
    "duro": "@RdlP: Any chance you got this to work and could provide an example of how you ran a geoNear command?\n. Thanks! This is perfect.\n. @jenssegers Forgive the accidental closing of the issue. That was a mistake.\n. I don't want to use it as an array. When I save to Mongo on a create, it saves as an object. The problem is, when it comes out of mongo, and is represented as an Eloquent model, it is typed as an associative array in PHP.\nThis leads me to believe that when the Laravel-MongoDB library converts the object coming out of Mongo I to an Eloquent model, those nested objects are not being typed correctly.\n. @jenssegers, any insight you can provide? This is preventing me from utilizing nested objects within my MongoDB documents as well as Form Model Binding.\n. ",
    "mikebronner": "RdIP, duro, thanks for your examples above. I have a similar situation, however, I want to get the distance between two points in an already complex query.\njson\ndb.stores.aggregate([{$geoNear: {near: [-118.09771, 33.89244], \"distanceField\": \"distance\", \"maxDistance\":100, \"spherical\": true}}])\nThe above query works great stand-alone, but how can I integrate this into a query like this:\nphp\n        $stores = Store::with('employees')\n            ->where('_items', 'elemMatch', ['value' => ['$gte' => $minValue, '$lte' => $maxValue]])\n            ->whereType('Bookstore')\n            ->whereIn('status', ['Closed', 'Open', 'Active', 'Planned'])\n            ->orderBy('_items.title')\n            ->aggregate('$geoNear', ['near' => [-118.09771, 33.89244], \"distanceField\" => \"distance\", \"spherical\" => true])\n            ->get();\nI tried to add the aggregate as I thought it might work, but I get an error, (Array to string conversion) which indicates that I am using it wrong.\nAny suggestions?\n. Hi RdIP, thanks for your response. That is the exact error. I believe that I am using aggregate() incorrectly. The signature for the aggregate function is \naggregate($function, array $colums)\nI'm guessing that the location array for 'near' is causing the issue.\nMy goal is to determine the distance of each item in the query result to a given set of coordinates. How would you best do that?\n. Making some progress -- I think I have a query that works in mongo, now to see if it can be rewritten in Moloquent?\njs\ndb.stores.aggregate([\n{$geoNear: {near: [-118.09771, 33.89244], distanceField: \"distance\", spherical: true}},\n{\"$match\":\n    {\"_books\":{\"$elemMatch\":{\"soldDate\":{\"$gte\":<date>,\"$lte\":<date>}}}}}], [])\nAny ideas how to write this using Laravel-MongoDB? :)\nOr also how would I write this as a raw query and get it into my models?\n. Wow, heavy stuff. Thanks for your thoughts ... will think this over. Right now I'm making progress using the raw aggregate queries returning array results -- focus is on getting it working first, improving it is secondary. :)\n. So then we define the relationships in our models, along with other things, and we never need to establish all the properties of a given model anywhere, except for indexes and such? Thanks for bearing with me. Still wrapping my head around all the various concepts. :)\nOn Mar 25, 2014, at 11:59 AM, Jens Segers notifications@github.com wrote:\n\nMongoDB does not have a schema, the schema builder is mainly used to define indexes.\n\u2014\nReply to this email directly or view it on GitHub.\n. You mention the getters, but not the setters: is the conversion being handled there as well?\nHow are your database fields stored (camel or snake)?\n\nThanks, Jens :)\n. Ok, this is starting to make sense now. I think Eloquent will dynamically convert between camelCase and snake_case when saving, as the field name is already specified for RDBMS'. However, with MongoDB there is no schema to fall back on, so it inserts it the way the object property was created.\nWould this be worthy of a pull request?\n. Interesting to note that the creation of collections is in snake_case (if not defined in the class), while creation of fields is however they are assigned in the collection object (like you said).\nI have not yet found a way to make Eloquent name the fields properly. Tried the following:\n- creation without mass assignment, leaving fillable empty.\n- creation using Collection::create facade, but that failed without fillable being set.\nPerhaps there is a setting for this, or perhaps Eloquent just doesn't have this capability, relying on the existing schema?\n. Thank you for that tidbit! Didn't know it existed. :) Wish there was some documentation on all the database modifiers we can use in the models.\nDid find this discussion around the topic though: https://github.com/laravel/framework/issues/391#issuecomment-13844569, and maybe it's not a huge deal -- I was just looking for consistency.\nI will try playing around with the snakeAttributes setting, and if that doesn't work, I will leave it be. :)\nThanks!\n~Mike\n. Thanks!\n. Thank you! I was actually reading through that page but missed the very last section (was looking for 'orderBy' instead of 'sortBy'). Thanks for bearing with me! :)\n. Yea, I don't need another database query, just want the resulting collection re-arranged, so your answer is perfect. :)\n. This is just a horrible example. Maybe a more realistic example would be:\nMyStore embedsMany Sections hasMany Books hasMany Authors\nI have found that in some cases if I save one item before the other, it doesn't get stored. Is this the correct order of operations:\n1. Save non-embedded objects first.\n2. Save related objects next.\n3. Last, save embedded objects into non-embedded objects from top down (outer first).\nThanks again, Jens.\n. I still can't seem to get this to work:\n- Given Store embedsMany Categories.\n- Given Categories belongsTo Store and embedsMany Books.\n- Given Books belongsTo Categories\n$store = Store::findOrFail($storeId);\n$category = $store->categories()->find($categoryId);\n$book = new Book(['title' => 'The Great Gatsby']);\n$category->books()->save($book);\n$store->categories()->save($category);\n$store->save();\nThis executes the following queries:\n{ op: \"query\", ns: \"acme.store\", query: { _id: ObjectId(\"5344c62cfa4634ff038b45a8\") }, ntoreturn: 1, idhack: true, keyUpdates: 0, numYield: 0, lockStats: { timeLockedMicros: { r: 89, w: 0 }, timeAcquiringMicros: { r: 4, w: 3 } }, responseLength: 3353, millis: 0, ts: ISODate(\"2014-05-06T00:56:28.758Z\"), client: \"173.58.194.250\", allUsers: [ { user: \"xxxx\", userSource: \"xxxx\" } ], user: \"xxxx@xxxx\" }\n{ op: \"update\", ns: \"acme.categories\", query: { _id: ObjectId(\"53458a68fa4634fb038b4567\") }, updateobj: { \"$addToSet\": { _books: { title: \"The Great Gatsby\", updated_at: ISODate(\"2014-05-06T00:56:28.847Z\"), created_at: ISODate(\"2014-05-06T00:56:28.847Z\"), _id: ObjectId(\"5368333cfa4634b61a8b4569\") } } }, nscanned: 0, nupdated: 0, keyUpdates: 0, numYield: 0, lockStats: { timeLockedMicros: { r: 0, w: 911 }, timeAcquiringMicros: { r: 0, w: 14 } }, millis: 0, ts: ISODate(\"2014-05-06T00:56:28.900Z\"), client: \"xxxxx\", allUsers: [ { user: \"xxxx\", userSource: \"xxxx\" } ], user: \"xxxx@xxxx\" }\n{ op: \"update\", ns: \"acme.store\", query: { _id: ObjectId(\"5344c62cfa4634ff038b45a8\"), \"_categories._id\": ObjectId(\"53458a68fa4634fb038b4567\") }, updateobj: { \"$set\": { \"_categories.$\": { updated_at: ISODate(\"2014-05-06T00:56:28.960Z\"), created_at: ISODate(\"2014-04-09T17:59:04.074Z\"), _id: \"53458a68fa4634fb038b4567\", name: \"Best Sellers\", updated_at: ISODate(\"2014-05-06T00:56:28.962Z\") } }, nscanned: 1, nupdated: 0, keyUpdates: 0, numYield: 0, lockStats: { timeLockedMicros: { r: 0, w: 131 }, timeAcquiringMicros: { r: 0, w: 8 } }, millis: 0, ts: ISODate(\"2014-05-06T00:56:29.012Z\"), client: \"xxxx\", allUsers: [ { user: \"xxxx\", userSource: \"xxxx\" } ], user: \"xxxx@xxxx\" }\nSo what it looks like is that when saving the book to the category, it is firing off an update to mongo, but not with the right document name. Then, when it fires off the save event for the store, it doesn't include any of the data that should have been added to the category.\nI am trying to follow the example in the documentation as best as possible, but I feed this multi-level nesting may need a different approach.\nSo my thinking at this point is that the book needs to be added to the category in a different manner (other than the save() method), and then the updated category added to the store using the save() method, as the category update query appears to have all the book information in it, but the category subsequently does not, when trying to save the store.\nAny advice would be helpful at this point, as I have spent all day trying to troubleshoot this, and getting nowhere. :)\nThanks!\n~Mike\n. OK .. of course after posting the problem, I was able to find a solution. :) Nothing like getting your thoughts on paper. It looks like the following is the correct procedure for deeply nested items.\n$store = Store::findOrFail($storeId);\n$category = $store->categories()->find($categoryId);\n$book = new Book(['title' => 'The Great Gatsby']);\n$category->books()->associate($book);\n$store->categories()->associate($category);\n$store->save();\n. Hi anandue,\nIt's always helpful for others who might be experiencing the same thing, if you could leave a comment that describes what the offending code was, and then what the necessary correction was. Others will come and search through the issues to see if it was already resolved, before opening another issue.\nThanks :)\n. The problem was some invalid data in my document in mongo. I cleaned that up and it fixed the issue.\n. I wasn't able to find documtation either, but have found some code examples: http://stackoverflow.com/questions/14174070/automatically-deleting-related-rows-in-laravel-eloquent-orm\n. I have not been able to get this to work.\n- Given I have a multiple stores that each embedsMany customers.\n- Given each customer embedsMany books.\nThe following does not work:\n$store = Store::findOrFail($storeId);\n$customer = $store->customers->find($customerId);\n$customer->books()->delete(); \ndd($customer); // books are still there.\n. Thanks! This sounds like exactly what I am looking for. :)\n. Does this also work on nested documents?\n. Good point with catching the error. I'll try that.\nI'm not using a long-running process. This just happens on my laptop, lets say I use it, it establishes a connection to my external mongo database, then it falls asleep. I wake it up an hour or so later to continue development, only to find that mongo now refuses the connection. From what I have been reading, this is because the connection is a persistent connection. Because my laptop went to sleep, it has expired, but not cleared the old connection. Now it tries to connect again using the old connection, which the server no longer recognizes, and it denies the request.\n. Yes, I spoke with the folks at MongoHQ as well, and they concurred that this was something at the system-level of my MBP. They have the same issue when working off of their MBPs as well. :)\n. Not really :(. I resorted to restarting my MBP and it worked fine. Annoying, for sure, but acceptable as I only use my MBP when traveling.\n. I did not see this issue on desktop machines or servers at all yet. I believe it has to do with how the MBP goes to sleep. I have not had this issue using Laravel Homestead on my Mac mini or Laravel Forge on DigitalOcean.\n. Right, that was my thinking as well, but filter didn't work either, and that is listed as a collection function. From what I could find out, filter is the only search functionality for collections. Is there a different function that should be used?\n. Ahhhhh!! Thank you, that distinction wasn\u2019t clear to me (obviously). This should make it much easier :) Thanks so much, I will add a section to the relationship documentation outlining these things, once I get them working.\n~Mike\nOn Apr 28, 2014, at 9:21 AM, Jens Segers notifications@github.com wrote:\n\nTo execute collection methods you need to get the actual collection object like this:\n$user->books->filter(...)\nThis is because $user->books() returns the relation object instead of the collection object. However, I just commited a new version of the embedsMany relation that allows you to execute collection methods on the relation object. So your filter should work now.\n\u2014\nReply to this email directly or view it on GitHub.\n. Could this also be used in conjunction with firstOrCreate, i.e.:\n\n$user = Users::firstOrCreate(['books.title' => 'The Great Gatsby']);\nUpdate: in testing this I found that the 'title' field must also be set in the fillable property of the User model. Is this expected behavior, or should it not check the fillable or guarded properties of the model linked via embedsMany or embedsOne?\nUpdate 2: while this does return a new User object, it will not return an existing object, but instead always return a new object, no matter if one exists or not. It will create the new User and store it in the database.\n$user = User::where('books.title', 'The Great Gatsby')->get(); and\n$user = User::where('books.title', '=', 'The Great Gatsby')->get(); both return an empty collection object.\nUpdate 3: eventually I was able to get something working, but I don't think it's quite in the form it needs to be:\n$user = User::where('_books.title', '=', 'The Great Gatsby')->get();\nTwo things should probably be improved:\n- not needing the preceding underscore before the sub collection name, here _books.\n- not needing the fillable field on the parent item set, in this case the User model needed books.title to be fillable.\n. Cool! For some reason, though, I still need to prefix my sub collection with an underscore. The underscore is not something I added, but that the system adds when creating the sub collection.\nMy user document looks like this:\njson\n{\n  _id: ObjectId(\"535eca9cfa4634af0976af87\"),\n  _books: [\n    {\n      title: \"The Great Gatsby\",\n      updated_at: ISODate(\"2014-04-28T21:39:40.498Z\"),\n      created_at: ISODate(\"2014-04-28T21:39:40.498Z\"),\n      _id: ObjectId(\"535eca9cfa4634af0976af88\")\n    }\n  ],\n  created_at: ISODate(\"2014-04-28T21:39:40.388Z\"),\n  updated_at: ISODate(\"2014-04-28T21:39:40.388Z\")\n}\nMy user class looks like this:\n``` php\nclass User extends Eloquent\n{\n    protected $dates = ['deleted_at'];\n    protected $fillable = [];\npublic function books()\n{\n    return $this->embedsMany('Book');\n}\n\n}\n``\n. Not sure if this is related or not, but now I also can no longer do$user->books(), or$user->books`. They return the error \n\nUndefined property: Illuminate\\Database\\Eloquent\\Collection::$books\n\nHowever, if I dd() $user, it clearly contains an array _books.\nNow, this is only with collections returned via the new elemMatch. It seems they are just pure Eloquent collections, and not actual instance of the User class.\nUpdate: using the following does return an instance of the user class!!\nUser::where('books', 'elemMatch', array('title' => 'The Great Gatsby'))->first();\n. Ah, nevermind, I found the issue: it had nothing to do with the query itself, but in that I can't create a new user without a username or email. So it wasn't finding the result, and tried to create a new user, but couldn't because the username and email fields are indexed.\n. Further investigation suggests that it might have something to do with what this issue describes: https://github.com/yiisoft/yii2/commit/3af22ece0a78a0c01f208cdea349c0f3c1b6c466\nWhen I var_dump out the $address variable just prior to saving, I get a huge error dump, part of which is the following:\nErrorException:\nvar_dump(): the 'connected' property is deprecated\nI just rebuilt my vagrant box the other day with the following:\n- Ubuntu 12.04.4\n- Apache 2.4.9\n- PHP 5.5.12-2\n- MongoDB 1.5.2\nNot sure if I'm chasing down a rabbit-hole here.\n. That was indeed the rabbit's hole. The problem was that the new user created with firstOrCreate() conked out when trying to fetch any associated addresses, and filled the address variable with errors from the Relationship object.\nPerhaps this can be caught, and return null instead?\n. Yup, just got the notification that it was released. Looks like our messages crossed paths. :) Thanks for the quick turnaround!\nTried composer udpate, but looks like they didn't take yet.\n. Update: I was able to get it installed via composer, but for some reason I had to manually specify version \"1.0.1\" for it to pull down. \"*\" didn't do it anymore. Odd.\nAfter that it worked fine. Thanks!\n. Going out on a limb, just hypothetically: would it be possible to have the cake and eat it as well?\nCould Moloquent catch that the eloquent chain is being places on a collection, and jump in and run collection filters and modifications, instead of passing it on to Eloquent?\nBut I guess the collection object would catch the event first, you'd have to somehow intercept before the collection object gets hit, which would mean overriding the collection object as well.\n. The way I understand things (and I may be wrong, please someone correct me if I am, so I can fix it):\nYou create a model for each nesting, except the last one. Then you set up the relationships between the models, which creates the nesting as desired (belongsTo, hasMany, etc.).\nSo, for example:\nYour models:\n``` php\nclass Channel extends Moloquent\n{\npublic function themes()\n{\nreturn $this->hasMany('Theme');\n}\n}\nclass Theme extends Moloquent\n{\npublic function channel\n{\nreturn $this->belongsTo('Channel');\n}\npublic function images\n{\nreturn $this->embedsMany('Image');\n}\n}\nclass Image extends Moloquent\n{\npublic function theme\n{\nreturn $this->belongsTo('Theme');\n}\npublic function poster\n{\nreturn $this->embedsOne('Poster');\n}\n}\nclass Poster extends Moloquent\n{\npublic function getCustomAttribute()\n{\n$custom = $this->attributes['custom']\n//custom functionality here\nreturn $custom;\n}\n}\n[etc.]\n```\nThen in your business logic:\n``` php\n$channel = new Channel();\n$theme = new Theme();\n$image = new Image();\n$image->poster = new Poster()\n$poster->custom = $data;\n$image->poster()->associate($poster);\n$theme->images()->associate($image);\n$channel->themes()->associate($theme);\n$channel->save();\n//then later on retrieve custom attribute with modifications:\necho $poster->custom;\n```\nUpdate: incorrectly used assign instead of associate.\n. I updated the code above.\n. No worries, I understand the uphill battle this can cause. :) Please do report back if you find a solution.\n. Point taken.\nphp\n$user->profile = $profile;\nCounterpoint: this causes me to have to consider the specific implementation of the relationship every time I deal with it in code. Once I have the models and controllers set up, I'm not necessarily worried about that anymore and would like to use a consistent method of assignments across the board.\nI guess this isn't such a big deal, as I would find the problem (as I am now) while developing and update accordingly. Thanks for looking into it. :) \n. Comment retracted for inaccuracy\n. Try something like this:\nphp\n$participations = Participation::whereIn(['client' => 'A'], 'rank')->get();\n. IDs aren't relevant in these cases, as the results do not correspond to individual rows, but aggregations thereof. If you wanted an ID to be returned, you can't use aggregate functions.\nPerhaps the premise of your query is not set up correctly. What is it you are trying to achieve?\n. Duplicate request -- see #231 which does recommend a solution/workaround further down in the comments. Still would be nice to see this added to the Moloquent core.\n. I was thinking perhaps a GridFS field type, but that might be extrapolating too much. Something where you could save a file to a model, and it would just store the GridFS File ID in the file, and save it to GridFS behind the scenes, and the same with retrieval. But that might be convoluting things, instead of making it easier.\n. Just off the top of my head, something like this:\n``` php\nclass Book extends Moloquent\n{\n    protected $fillable = [\n        'title',\n        'coverArt',\n        'author'\n    ];\nprotected $gridFs = [\n    'coverArt'\n];\n\n}\n```\nThen you could do something like this:\nphp\n$book = new Book();\n$book->coverArt = Input::file('image');\n$book->save();\nThis would then save the image to gridfs, save the fileid to the book. When referencing gridfs elements in models, it would do the opposite: using the fileid stored in the book, it would retrieve and return the file from gridfs.\nStoring of the file to gridfs would only work on save methods (create, save, update, etc.), and deleting it would happen on update, save, delete, etc.).\nThis is just an idea of how it might be incorporated, food for thought if you find this intriguing. :) I realize that as it stands there may be issues deciding when a file needs to be deleted from GridFS and preventing orphaned files left and right.\n. Update: I was on the right track with the above, but found a simpler way to do it:\nphp\n$books = User::where('_books.purchaseDate' => ['$gt' => $minDate . \"\", '$lt' => $maxDate . \"\"])->get();\nWhen comparing database fields to values, like when using gt, lt, gte, lte, etc., be sure that your database fields are in the proper data type. Comparing strings against numbers doesn't work. That's one problem I ran into when I started using Mongo, erroneously thinking it was data type agnostic.\n. I know this is probably because most aggregate query results don't have a 1-to-1 relationship with the original records anymore (group-by, etc.). However, in those cases that do still have individual ID fields in them (forcing them to uphold that 1-to-1 relationship) could we return it as model collections?\nOr, if that's impractical, what would be the best way for me to shoe-horn the results back into models?\n. So there's really no way to shoe-horn them into models either, short for looping through each element in the results array and building up the model collection from scratch? I have it working with arrays at this point, thought it might be nice to be able to use the models.\nWhat does eloquent return when you do groupby, etc?\n. AH! Thanks :) that sounds promising.\n. Update: figured it out ... was using MongoDate incorrectly earlier. Here's what ended up working for me:\nphp\n        $books = Book::raw(function ($collection) {\n            return $collection->aggregate([\n                ['$geoNear' => ['near' => <location>, 'maxDistance' => 100, \"distanceField\" => \"distance\", \"spherical\" => true, 'distanceMultiplier' => 3959]],\n                ['$match' => ['inventoriedAt' => ['$gte' => new MongoDate(time() - (60 * 60 * 24 * 150))]]]\n            ]);\n        });\nThis will get all books inventoried within the last 150 days.\n. I agree, I think this is the more intuitive approach, and would like to use this method going forward. I don't see any practical purpose to using the '_model' approach, since I never used toJson() or toArray(). I always try to work with the model objects if possible.\nI guess for extremely large nested documents, you might want to exclude them so save overhead, if not needed. So why not make that an option: instead of $exposed = []; use $exluded = []; as well as an eloquent method excluded(). If you did want to override the \"$exluded = [];\" in the model, you could use Model::with(sub-document) to pull it in.\nJust some brainstorming, but I like the removal of the '_' as well. :)\nThanks Jens!\n. Correct, this would deviate from the Eloquent functionality, so perhaps it's not such a good idea. However, in looking at Eloquent, it will create a new relationship when attaching models, if that relationship doesn't exist (which would be for new models). \nSo I guess the question then is, why am I getting an error when trying to attach a new model? I've had other oddities happen yesterday as well, wonder if its related to 4.2.8?\n. Oh, sorry, thought I had an example. :) Yes, that's exactly it.\n. @jmshelby Thanks for the thorough review of the issue. I would prefer the exception, as it gives a clear call of action, whereas the gracefully fail option seems to mask the issue, and then the developer has to backtrack why the model was not attached, and eventually find out that it was the attach() method dropping the ball.\nThe stack-trace is as follows:\n```\n[2014-08-05 18:28:22] development.ERROR: exception 'ErrorException' with message 'Undefined offset: 0' in /home/vagrant/Sites/investorexpert/app/InvestorExperts/Feeds/Processor.php:531\nStack trace:\n0 /home/vagrant/Sites/investorexpert/app/InvestorExperts/Feeds/Processor.php(531): Illuminate\\Exception\\Handler->handleError(8, 'Undefined offse...', '/home/vagrant/S...', 531, Array)\n1 /home/vagrant/Sites/investorexpert/app/InvestorExperts/Feeds/Processor.php(166): InvestorExperts\\Feeds\\Processor->getSourceIdKey(Array, 'propertyListing')\n2 /home/vagrant/Sites/investorexpert/app/InvestorExperts/Feeds/Processor.php(106): InvestorExperts\\Feeds\\Processor->mapField('53b5c62bbffebc6...', 'listing', '(PostalCode=906...', Object(InvestorExperts\\DataSource), Array, Array)\n3 /home/vagrant/Sites/investorexpert/app/InvestorExperts/Feeds/Processor.php(82): InvestorExperts\\Feeds\\Processor->map('53b5c62bbffebc6...', 'listing', '(PostalCode=906...', Object(InvestorExperts\\DataFeed), Object(InvestorExperts\\DataSource))\n4 /home/vagrant/Sites/investorexpert/app/controllers/FeedRunner.php(24): InvestorExperts\\Feeds\\Processor->run('53b5c62bbffebc6...', '53b5c697bffebc6...', 'listing', '(PostalCode=906...', NULL)\n5 [internal function]: FeedRunner->index()\n6 /home/vagrant/Sites/investorexpert/vendor/laravel/framework/src/Illuminate/Routing/Controller.php(231): call_user_func_array(Array, Array)\n7 /home/vagrant/Sites/investorexpert/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php(93): Illuminate\\Routing\\Controller->callAction('index', Array)\n8 /home/vagrant/Sites/investorexpert/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php(62): Illuminate\\Routing\\ControllerDispatcher->call(Object(FeedRunner), Object(Illuminate\\Routing\\Route), 'index')\n9 /home/vagrant/Sites/investorexpert/vendor/laravel/framework/src/Illuminate/Routing/Router.php(962): Illuminate\\Routing\\ControllerDispatcher->dispatch(Object(Illuminate\\Routing\\Route), Object(Illuminate\\Http\\Request), 'FeedRunner', 'index')\n10 [internal function]: Illuminate\\Routing\\Router->Illuminate\\Routing{closure}()\n11 /home/vagrant/Sites/investorexpert/vendor/laravel/framework/src/Illuminate/Routing/Route.php(109): call_user_func_array(Object(Closure), Array)\n12 /home/vagrant/Sites/investorexpert/vendor/laravel/framework/src/Illuminate/Routing/Router.php(1028): Illuminate\\Routing\\Route->run(Object(Illuminate\\Http\\Request))\n13 /home/vagrant/Sites/investorexpert/vendor/laravel/framework/src/Illuminate/Routing/Router.php(996): Illuminate\\Routing\\Router->dispatchToRoute(Object(Illuminate\\Http\\Request))\n14 /home/vagrant/Sites/investorexpert/vendor/laravel/framework/src/Illuminate/Foundation/Application.php(776): Illuminate\\Routing\\Router->dispatch(Object(Illuminate\\Http\\Request))\n15 /home/vagrant/Sites/investorexpert/vendor/laravel/framework/src/Illuminate/Foundation/Application.php(746): Illuminate\\Foundation\\Application->dispatch(Object(Illuminate\\Http\\Request))\n16 /home/vagrant/Sites/investorexpert/vendor/laravel/framework/src/Illuminate/Session/Middleware.php(72): Illuminate\\Foundation\\Application->handle(Object(Illuminate\\Http\\Request), 1, true)\n17 /home/vagrant/Sites/investorexpert/vendor/laravel/framework/src/Illuminate/Cookie/Queue.php(47): Illuminate\\Session\\Middleware->handle(Object(Illuminate\\Http\\Request), 1, true)\n18 /home/vagrant/Sites/investorexpert/vendor/laravel/framework/src/Illuminate/Cookie/Guard.php(51): Illuminate\\Cookie\\Queue->handle(Object(Illuminate\\Http\\Request), 1, true)\n19 /home/vagrant/Sites/investorexpert/vendor/stack/builder/src/Stack/StackedHttpKernel.php(23): Illuminate\\Cookie\\Guard->handle(Object(Illuminate\\Http\\Request), 1, true)\n20 /home/vagrant/Sites/investorexpert/vendor/laravel/framework/src/Illuminate/Foundation/Application.php(642): Stack\\StackedHttpKernel->handle(Object(Illuminate\\Http\\Request))\n21 /home/vagrant/Sites/investorexpert/public/index.php(49): Illuminate\\Foundation\\Application->run()\n22 {main} [] []\n```\n. What ended up working was\nphp\n$model->subModels()->associate($subModel);\nIs that the intended method? I know that Eloquent doesn't have embedsMany(), but save() and update() should still work, as described in the readme, right?\n. Your solution shows the work-around. Can you do the following:\nphp\n$p->translations()->save($tr);\nFrom what I understand, that should work (but hasn't for me, hence this issue).\n. Using save() nothing gets inserted, using associate they get inserted, but duplicate if saving updates (See issue #275).\n. Thanks for the update :) I hope it gets better. :) Would help with pull requests if I had a better grasp of Mongo and Eloquent internals, but learning as I go. Thanks for bearing with us and providing this tool! :)\n. Jens, that's awesome news! :)\nAs a point of clarification: at this time then each embedded document must be saved on its own, separate from the parent, correct? (That's great, will save some unnecessary relationship wrangling in many cases!)\nI was wondering if we might add something that would allow the save to update the parent without writing to the database, and only write to the database when the parent is saved? Perhaps something like this:\nphp\n$user = User::create(array('name' => 'John Doe'));\n$visited1 = $user->placesVisited()->create(array('city' => 'New York'));\n$visited1->city = 'Paris';\n$visited1->updateParent();\nThis is just an example, and it probably is not a good idea to introduce new methods, I just wanted to illustrate the idea. This is for those nasty deeply nested documents, to avoid 25 save calls to the database for each embedded sub-document. Or did you have another idea on handling that?\n. Excellent - I will continue discussion re. associate() in issue #275 . Thanks! :)\n. Thanks for the updates to the embedded documents process. In the discussion in #274 we discussed the best way to update the parent document was throughout the associate() method. That works great for new documents, but doesn't seem to work so well for updating existing documents. Is it intended to work for updates as well? On the surface it would need to check for the id of the subdocument, then replace the existing one with the newly associated one. I think as of last release it added the associated one to the collection without checking if it already existed.\n. The test looks good. :) I think that should take care of it.\n. This is probably the same issue as referenced here: #274 . Jens is working on some fundamental changes for the embedded documents.\n. Wouldn't this be a belongsToMany relationship the way you have it set up?\nI would think you would want to change it to where the user ID is stored with the email, so that from the User view it is a hasMany relationship, and from the email a belongsTo relationship. Assuming that the email would be unique to one person.\n. ",
    "madmanlear": "Has anyone gotten this working cleanly? Iterating through an array doesn't really seem sustainable.\n. Don't forget to create the password_resets collection and then test out the reset functionality from the beginning. This was the issue I can into, being a MongoDB rookie.\n. I experienced the same issue with Object Rocket and found this fix worked perfectly. I would recommend integrating it.\nThanks ryansmith94!\n. The exception is \"Remote server has closed the connection.\" The full log is below.\n```\n[2015-08-18 13:33:57] local.ERROR: exception 'MongoConnectionException' with message 'Failed to connect to: iad-mongos0.objectrocket.com:15109: Remote server has closed the connection' in ~/Sites/site-name/vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Connection.php:153\nStack trace:\n0 ~/Sites/site-name/vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Connection.php(153): MongoClient->__construct('mongodb://iad-m...', Array, Array)\n1 ~/Sites/site-name/vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Connection.php(38): Jenssegers\\Mongodb\\Connection->createConnection('mongodb://iad-m...', Array, Array)\n2 ~/Sites/site-name/vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/MongodbServiceProvider.php(30): Jenssegers\\Mongodb\\Connection->__construct(Array)\n3 [internal function]: Jenssegers\\Mongodb\\MongodbServiceProvider->Jenssegers\\Mongodb{closure}(Array, 'mongodb')\n4 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Database/DatabaseManager.php(163): call_user_func(Object(Closure), Array, 'mongodb')\n5 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Database/DatabaseManager.php(67): Illuminate\\Database\\DatabaseManager->makeConnection('mongodb')\n6 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Model.php(3175): Illuminate\\Database\\DatabaseManager->connection(NULL)\n7 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Model.php(3141): Illuminate\\Database\\Eloquent\\Model::resolveConnection(NULL)\n8 ~/Sites/site-name/vendor/jenssegers/mongodb/src/Jenssegers/Eloquent/Model.php(276): Illuminate\\Database\\Eloquent\\Model->getConnection()\n9 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Model.php(1838): Jenssegers\\Eloquent\\Model->newBaseQueryBuilder()\n10 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Model.php(1812): Illuminate\\Database\\Eloquent\\Model->newQueryWithoutScopes()\n11 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Model.php(667): Illuminate\\Database\\Eloquent\\Model->newQuery()\n12 ~/Sites/site-name/app/Http/Controllers/PhotoController.php(20): Illuminate\\Database\\Eloquent\\Model::all()\n13 [internal function]: App\\Http\\Controllers\\PhotoController->index()\n14 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Routing/Controller.php(256): call_user_func_array(Array, Array)\n15 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php(164): Illuminate\\Routing\\Controller->callAction('index', Array)\n16 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php(112): Illuminate\\Routing\\ControllerDispatcher->call(Object(App\\Http\\Controllers\\PhotoController), Object(Illuminate\\Routing\\Route), 'index')\n17 [internal function]: Illuminate\\Routing\\ControllerDispatcher->Illuminate\\Routing{closure}(Object(Illuminate\\Http\\Request))\n18 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(139): call_user_func(Object(Closure), Object(Illuminate\\Http\\Request))\n19 [internal function]: Illuminate\\Pipeline\\Pipeline->Illuminate\\Pipeline{closure}(Object(Illuminate\\Http\\Request))\n20 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(103): call_user_func(Object(Closure), Object(Illuminate\\Http\\Request))\n21 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php(114): Illuminate\\Pipeline\\Pipeline->then(Object(Closure))\n22 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php(69): Illuminate\\Routing\\ControllerDispatcher->callWithinStack(Object(App\\Http\\Controllers\\PhotoController), Object(Illuminate\\Routing\\Route), Object(Illuminate\\Http\\Request), 'index')\n23 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Routing/Route.php(201): Illuminate\\Routing\\ControllerDispatcher->dispatch(Object(Illuminate\\Routing\\Route), Object(Illuminate\\Http\\Request), 'App\\Http\\Contro...', 'index')\n24 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Routing/Route.php(134): Illuminate\\Routing\\Route->runWithCustomDispatcher(Object(Illuminate\\Http\\Request))\n25 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Routing/Router.php(704): Illuminate\\Routing\\Route->run(Object(Illuminate\\Http\\Request))\n26 [internal function]: Illuminate\\Routing\\Router->Illuminate\\Routing{closure}(Object(Illuminate\\Http\\Request))\n27 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(139): call_user_func(Object(Closure), Object(Illuminate\\Http\\Request))\n28 [internal function]: Illuminate\\Pipeline\\Pipeline->Illuminate\\Pipeline{closure}(Object(Illuminate\\Http\\Request))\n29 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(103): call_user_func(Object(Closure), Object(Illuminate\\Http\\Request))\n30 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Routing/Router.php(706): Illuminate\\Pipeline\\Pipeline->then(Object(Closure))\n31 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Routing/Router.php(671): Illuminate\\Routing\\Router->runRouteWithinStack(Object(Illuminate\\Routing\\Route), Object(Illuminate\\Http\\Request))\n32 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Routing/Router.php(631): Illuminate\\Routing\\Router->dispatchToRoute(Object(Illuminate\\Http\\Request))\n33 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php(236): Illuminate\\Routing\\Router->dispatch(Object(Illuminate\\Http\\Request))\n34 [internal function]: Illuminate\\Foundation\\Http\\Kernel->Illuminate\\Foundation\\Http{closure}(Object(Illuminate\\Http\\Request))\n35 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(139): call_user_func(Object(Closure), Object(Illuminate\\Http\\Request))\n36 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php(50): Illuminate\\Pipeline\\Pipeline->Illuminate\\Pipeline{closure}(Object(Illuminate\\Http\\Request))\n37 [internal function]: Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken->handle(Object(Illuminate\\Http\\Request), Object(Closure))\n38 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(124): call_user_func_array(Array, Array)\n39 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/View/Middleware/ShareErrorsFromSession.php(54): Illuminate\\Pipeline\\Pipeline->Illuminate\\Pipeline{closure}(Object(Illuminate\\Http\\Request))\n40 [internal function]: Illuminate\\View\\Middleware\\ShareErrorsFromSession->handle(Object(Illuminate\\Http\\Request), Object(Closure))\n41 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(124): call_user_func_array(Array, Array)\n42 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php(62): Illuminate\\Pipeline\\Pipeline->Illuminate\\Pipeline{closure}(Object(Illuminate\\Http\\Request))\n43 [internal function]: Illuminate\\Session\\Middleware\\StartSession->handle(Object(Illuminate\\Http\\Request), Object(Closure))\n44 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(124): call_user_func_array(Array, Array)\n45 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.php(37): Illuminate\\Pipeline\\Pipeline->Illuminate\\Pipeline{closure}(Object(Illuminate\\Http\\Request))\n46 [internal function]: Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse->handle(Object(Illuminate\\Http\\Request), Object(Closure))\n47 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(124): call_user_func_array(Array, Array)\n48 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Cookie/Middleware/EncryptCookies.php(59): Illuminate\\Pipeline\\Pipeline->Illuminate\\Pipeline{closure}(Object(Illuminate\\Http\\Request))\n49 [internal function]: Illuminate\\Cookie\\Middleware\\EncryptCookies->handle(Object(Illuminate\\Http\\Request), Object(Closure))\n50 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(124): call_user_func_array(Array, Array)\n51 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/CheckForMaintenanceMode.php(42): Illuminate\\Pipeline\\Pipeline->Illuminate\\Pipeline{closure}(Object(Illuminate\\Http\\Request))\n52 [internal function]: Illuminate\\Foundation\\Http\\Middleware\\CheckForMaintenanceMode->handle(Object(Illuminate\\Http\\Request), Object(Closure))\n53 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(124): call_user_func_array(Array, Array)\n54 [internal function]: Illuminate\\Pipeline\\Pipeline->Illuminate\\Pipeline{closure}(Object(Illuminate\\Http\\Request))\n55 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php(103): call_user_func(Object(Closure), Object(Illuminate\\Http\\Request))\n56 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php(122): Illuminate\\Pipeline\\Pipeline->then(Object(Closure))\n57 ~/Sites/site-name/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php(87): Illuminate\\Foundation\\Http\\Kernel->sendRequestThroughRouter(Object(Illuminate\\Http\\Request))\n58 ~/Sites/site-name/public/index.php(54): Illuminate\\Foundation\\Http\\Kernel->handle(Object(Illuminate\\Http\\Request))\n59 {main}\n```\n. ",
    "khoatran": "Hi Mike,\nI think firstly you should make the test of the geo query on a flat collection - then the next step for aggregate later.\nIn my case, I have a collection called poi (Point of Interest). Inside this collection, there is a field called 'geo_point'. To make it works, I do below steps:\n1/ Do the  2dsphere index for the field 'geo_point'. To do that with this package, I use below command:\n```\nSchema::collection('poi', function ($collection) {\n                $collection->index(['geo_point' => '2dsphere']);\n            });\n```\n2/ When doing the query (eg: query poi locations that nears to a specific geo point), I just use the below code:\n```\n       /* @var \\Jenssegers\\Mongodb\\Query\\Builder $queryBuilder /\n        $queryBuilder = DB::collection('poi');\n    $result = $queryBuilder->where('geo_point', 'near', [\n        '$geometry' =>  [\n            'type' => 'Point',\n            'coordinates' => [floatval(106.637056), floatval(10.825903)]\n        ],\n        '$maxDistance' => 10000,\n    ])->get();\n\n```\nIf you want to use query raw, then:\n$result = $queryBuilder->whereRaw([\n                    'geo_point'=> [\n                        '$near' => [\n                            '$geometry' =>  [\n                                'type' => 'Point',\n                                'coordinates' => [floatval(106.637056), floatval(10.825903)]\n                            ],\n                            '$maxDistance' => 10000,\n                        ]\n                    ]\n                ]\n        )->get();\nAlso, when you insert the data to the geo location field which is indexed, you must follow the specification of  MongoDB. If we do the indexing by 2dsphere, the location data must be a geometry point.\nI made a function to help me convenient to create the location data format as below:\npublic static function createLocationData($lat, $lng) {\n        return [\n            'type' => 'Point',\n            'coordinates' => ['lng' => floatval($lng), 'lat' => floatval($lat)]\n        ];\n    }\nIf you follow above steps and can make it works with the example for the flat structure, I think it's easier for you to debug and check on the aggregate function later. \nHope this help.\n. I am facing to the same issue and I posted my approach on this: link\n. Hi all, I have the same issue. Actually, this is not the problem of jenssegers/laravel-mongodb package. The root cause is inside MongoDB driver changes of their implementation.\nStill waiting for their fix. However, I have figured out another way to pass by this issue. The general idea is: you need to implement your own serialize/deserialize yourself for your model. \nMy solution: I create a custom Eloquent model which extend from Jenssegers\\Mongodb\\Eloquent\\Model. Then, implements the \\Serializable interface myself.  This is the gist which introduces my approach: gist\nIn the above gist, I also try to detect whether the string is a 'serialised string' or not. The approach to detect this is implemented using exactly the same code with the 'is_serialized' method of Wordpress here\nI hope this one is useful for everyone. I will refactor the gist to put into laravel mongodb package and make a pull request to fix this issue if the MongoDB team takes so long to fix this issue.\n. Updated: I have figured out the root cause. It's related to a bug of another package which uses laravel-mongodb. This is not the issue of laravel-mongodb anymore. Sorry to make you confused.\n. I found the way to do this, just call:\n$collection->index(['field_alias' => '2d']);\n. ",
    "msankar1991": "Is there any options with pagination option while using the raw() queries.. @rjvandoesburg : I've used like above query for aggregation getting below result set is coming. Here we need to get all sub documents based on parent.\nLaravel version : 5.4\nMongoDB version : 3.4\nJessengers MongoDB : 3.2\nOS : Windows 10\ncollection name: csc\nFind below documents\ndocument 1\n{\n    \"id\" : 2,\n    \"country_name\" : {\n        \"1\" : \"United States\",\n        \"2\" : \"\u0627\u0644\u0648\u0644\u0627\u064a\u0627\u062a \u0627\u0644\u0645\u062a\u062d\u062f\u0629 \u0627\u0644\u0627\u0645\u0631\u064a\u0643\u0627\u0646\u064a\u0629\",\n        \"3\" : \"Estados Unidos\"\n    },\n    \"iso_code\" : \"USA\",\n    \"alpha_code\" : \"US\",\n    \"isd_code\" : \"+1\",\n    \"currency_code\" : \"USD\",\n    \"currency_symbol\" : \"$\",\n    \"currency_decimal_places\" : \"2\",\n    \"currency_symbol_position\" : \"1\",\n    \"created_at\" : \"2017-05-27 11:58:51\",\n    \"country_status\" : 1,\n    \"country_default_status\" : 0,\n    \"url_index\" : \"united-states\",\n    \"state_info\" : [ \n        {\n            \"state_id\" : 1,\n            \"state_name\" : {\n                \"1\" : \"California\",\n                \"2\" : null,\n                \"3\" : null\n            },\n            \"state_country_id\" : 2,\n            \"state_status\" : 0,\n            \"default_status\" : 0,\n            \"city_info\" : []\n        }, \n        {\n            \"state_id\" : 2,\n            \"state_name\" : {\n                \"1\" : \"Florida\",\n                \"2\" : null,\n                \"3\" : null\n            },\n            \"state_country_id\" : 2,\n            \"state_status\" : 0,\n            \"default_status\" : 0,\n            \"city_info\" : []\n        }\n    ]\n}\n_document 2\n{\n    \"_id\" : 3,\n    \"country_name\" : {\n        \"1\" : \"Spain\",\n        \"2\" : \"\u0625\u0633\u0628\u0627\u0646\u064a\u0627\",\n        \"3\" : \"Espa\u00f1a\"\n    },\n    \"iso_code\" : \"ESP\",\n    \"alpha_code\" : \"ES\",\n    \"isd_code\" : \"+34\",\n    \"currency_code\" : \"EUR\",\n    \"currency_symbol\" : \"\u20ac\",\n    \"currency_decimal_places\" : \"2\",\n    \"currency_symbol_position\" : \"1\",\n    \"created_at\" : \"2017-05-27 11:59:36\",\n    \"country_status\" : 1,\n    \"country_default_status\" : 0,\n    \"url_index\" : \"spain\",\n    \"state_info\" : [ \n        {\n            \"state_id\" : 1,\n            \"state_name\" : {\n                \"1\" : \"Barcelona\",\n                \"2\" : \"\u0628\u0631\u0634\u0644\u0648\u0646\u0629\",\n                \"3\" : \"Barcelona\"\n            },\n            \"state_country_id\" : 3,\n            \"state_status\" : 0,\n            \"default_status\" : 0,\n            \"city_info\" : []\n        }, \n        {\n            \"state_id\" : 2,\n            \"state_name\" : {\n                \"1\" : \"Madrid\",\n                \"2\" : \"\u0645\u062f\u0631\u064a\u062f\",\n                \"3\" : \"Madrid\"\n            },\n            \"state_country_id\" : 3,\n            \"state_status\" : 0,\n            \"default_status\" : 0,\n            \"city_info\" : []\n        }\n    ]\n}\nLaravel query method1\n$ops = array(\n        array('$unwind' => array('path'=>'$state_info','preserveNullAndEmptyArrays'=>true)),\n        array('$project' => array('_id' => 0,\n          'state_id' => '$state_info.state_id', \n          'state_name' => '$state_info.state_name',\n          'state_countryid' => '$state_info.state_country_id',\n          'state_status' => '$state_info.state_status',\n          'state_default' => '$state_info.default_status',\n          'country_name' => '$country_name'\n          )\n        )\n      );\n      $collection = $this->mongo_db->selectCollection('csc');\n      $result1 = $collection->aggregate($ops);\nquery method1 result\n```\nMongoDB\\Driver\\Cursor Object\n(\n    [database] => rideshare\n    [collection] => \n    [query] => \n    [command] => MongoDB\\Driver\\Command Object\n        (\n            [command] => stdClass Object\n                (\n                    [aggregate] => csc\n                    [pipeline] => Array\n                        (\n                            [0] => stdClass Object\n                                (\n                                    [$unwind] => stdClass Object\n                                        (\n                                            [path] => $state_info\n                                            [preserveNullAndEmptyArrays] => 1\n                                        )\n                            )\n\n                        [1] => stdClass Object\n                            (\n                                [$project] => stdClass Object\n                                    (\n                                        [_id] => 0\n                                        [state_id] => $state_info.state_id\n                                        [state_name] => $state_info.state_name\n                                        [state_countryid] => $state_info.state_country_id\n                                        [state_status] => $state_info.state_status\n                                        [state_default] => $state_info.default_status\n                                        [country_name] => $country_name\n                                    )\n\n                            )\n\n                        [2] => stdClass Object\n                            (\n                                [$sort] => stdClass Object\n                                    (\n                                        [country_name] => 1\n                                    )\n\n                            )\n\n                    )\n\n                [allowDiskUse] => \n                [readConcern] => stdClass Object\n                    (\n                    )\n\n                [cursor] => stdClass Object\n                    (\n                    )\n\n            )\n\n    )\n\n[readPreference] => MongoDB\\Driver\\ReadPreference Object\n    (\n        [mode] => primary\n    )\n\n[isDead] => \n[currentIndex] => 0\n[currentDocument] => MongoDB\\Model\\BSONDocument Object\n    (\n        [storage:ArrayObject:private] => Array\n            (\n                [state_id] => 1\n                [state_name] => MongoDB\\Model\\BSONDocument Object\n                    (\n                        [storage:ArrayObject:private] => Array\n                            (\n                                [1] => Tamilnadu\n                                [2] => \n                                [3] => \n                            )\n\n                    )\n\n                [state_countryid] => 1\n                [state_status] => 0\n                [state_default] => 0\n                [country_name] => MongoDB\\Model\\BSONDocument Object\n                    (\n                        [storage:ArrayObject:private] => Array\n                            (\n                                [1] => India\n                                [2] => \n                                [3] => \n                            )\n\n                    )\n\n            )\n\n    )\n\n[server] => MongoDB\\Driver\\Server Object\n    (\n        [host] => localhost\n        [port] => 27017\n        [type] => 1\n        [is_primary] => \n        [is_secondary] => \n        [is_arbiter] => \n        [is_hidden] => \n        [is_passive] => \n        [last_is_master] => Array\n            (\n                [ismaster] => 1\n                [maxBsonObjectSize] => 16777216\n                [maxMessageSizeBytes] => 48000000\n                [maxWriteBatchSize] => 1000\n                [localTime] => MongoDB\\BSON\\UTCDateTime Object\n                    (\n                        [milliseconds] => 1496994360694\n                    )\n\n                [maxWireVersion] => 5\n                [minWireVersion] => 0\n                [readOnly] => \n                [ok] => 1\n            )\n\n        [round_trip_time] => 0\n    )\n\n)\n```\nLaravel query method 2\n$result = Csc::raw()->aggregate(\n        array(\n            array('$unwind' => array('path'=>'$state_info','preserveNullAndEmptyArrays'=>true)),\n            array('$project' => array('_id' => 0,\n              'state_id' => '$state_info.state_id', \n              'state_name' => '$state_info.state_name',\n              'state_countryid' => '$state_info.state_country_id',\n              'state_status' => '$state_info.state_status',\n              'state_default' => '$state_info.default_status',\n              'country_name' => '$country_name'\n              )\n            )\n          )\n        );\nquery method2 result\n```\nMongoDB\\Driver\\Cursor Object\n(\n    [database] => rideshare\n    [collection] => \n    [query] => \n    [command] => MongoDB\\Driver\\Command Object\n        (\n            [command] => stdClass Object\n                (\n                    [aggregate] => csc\n                    [pipeline] => Array\n                        (\n                            [0] => stdClass Object\n                                (\n                                    [$unwind] => stdClass Object\n                                        (\n                                            [path] => $state_info\n                                            [preserveNullAndEmptyArrays] => 1\n                                        )\n                            )\n\n                        [1] => stdClass Object\n                            (\n                                [$project] => stdClass Object\n                                    (\n                                        [_id] => 0\n                                        [state_id] => $state_info.state_id\n                                        [state_name] => $state_info.state_name\n                                        [state_countryid] => $state_info.state_country_id\n                                        [state_status] => $state_info.state_status\n                                        [state_default] => $state_info.default_status\n                                        [country_name] => $country_name\n                                    )\n\n                            )\n\n                    )\n\n                [allowDiskUse] => \n                [readConcern] => stdClass Object\n                    (\n                    )\n\n                [cursor] => stdClass Object\n                    (\n                    )\n\n            )\n\n    )\n\n[readPreference] => MongoDB\\Driver\\ReadPreference Object\n    (\n        [mode] => primary\n    )\n\n[isDead] => \n[currentIndex] => 0\n[currentDocument] => MongoDB\\Model\\BSONDocument Object\n    (\n        [storage:ArrayObject:private] => Array\n            (\n                [state_id] => 1\n                [state_name] => MongoDB\\Model\\BSONDocument Object\n                    (\n                        [storage:ArrayObject:private] => Array\n                            (\n                                [1] => California\n                                [2] => \n                                [3] => \n                            )\n\n                    )\n\n                [state_countryid] => 2\n                [state_status] => 0\n                [state_default] => 0\n                [country_name] => MongoDB\\Model\\BSONDocument Object\n                    (\n                        [storage:ArrayObject:private] => Array\n                            (\n                                [1] => United States\n                                [2] => \u0627\u0644\u0648\u0644\u0627\u064a\u0627\u062a \u0627\u0644\u0645\u062a\u062d\u062f\u0629 \u0627\u0644\u0627\u0645\u0631\u064a\u0643\u0627\u0646\u064a\u0629\n                                [3] => Estados Unidos\n                            )\n\n                    )\n\n            )\n\n    )\n\n[server] => MongoDB\\Driver\\Server Object\n    (\n        [host] => localhost\n        [port] => 27017\n        [type] => 1\n        [is_primary] => \n        [is_secondary] => \n        [is_arbiter] => \n        [is_hidden] => \n        [is_passive] => \n        [last_is_master] => Array\n            (\n                [ismaster] => 1\n                [maxBsonObjectSize] => 16777216\n                [maxMessageSizeBytes] => 48000000\n                [maxWriteBatchSize] => 1000\n                [localTime] => MongoDB\\BSON\\UTCDateTime Object\n                    (\n                        [milliseconds] => 1496994360694\n                    )\n\n                [maxWireVersion] => 5\n                [minWireVersion] => 0\n                [readOnly] => \n                [ok] => 1\n            )\n\n        [round_trip_time] => 0\n    )\n\n)\n```. I'm using latest laravel 5.4 & mongodb 3.4 also still its not working.\n. @anggarasaja & @pfzwaan : Can you give mongodb php driver details & mongodb version details with laravel you used to got the result. @puzc1993,\nHow we will render this pagination in view files. Can you give example code for this.. After composer update getting same error with mongodb. I'm also using Raw queries only while using lookup and text search options. How we can apply pagination for raw() query result cursor object. Is any other option there for this problem. Hi Rafael,\nDid you got solution kindly update here it will be useful to us.. @d0hn : Getting same error after composer update. May I know how revert the last changes using composer. . I'm using windows 10 and wamp server. \nIf using PHP 7.0 also installed latest mongodb driver 1.4.1 also, And added in extension=php_mongodb.dll not getting with extension while seeing phpinfo() also. \nRestarted Wamp server -> Restarted Machine also its not working at all.\nWamp server having both PHP 5.6 & 7.0 versions. While using PHP 5.6 version its working mongodb.. Getting same problem here also any updates on this?. @ProgrammerM3 \ud83d\udc4d : As per your example exactly matching records only comes into result.. ",
    "nbertal": "I tried this but the query failed.\nI'm new to MongoDB so it's probably that I'm not using aggregation operators properly..\nThank you!\n. Nope, for instance I want to use it in a class that is not a \"Model\" per say (but inside a L4 project where jenssegers/Laravel-MongoDB is present and configured).\n. That works indeed, but I need to get the MongoClient and MongoDB objects.\n. At least the MongoDB. This I couldn't succeed outside of a Jenssegers\\Mongodb\\Model extended class..\n. I suspect it doesn't work because it does not precise what connection to use, so it's using the default one (ie. in my case I use postgre):\ncall_user_func_array() expects parameter 1 to be a valid callback, class 'Illuminate\\Database\\PostgresConnection' does not have a method 'getMongoDB'\nSo I thought I was a dependency issue, but I couldn't resolve it.\n. Just to be clear and summarizing a little:\nIt seems impossible to access the MongoClient or MongoDB objects when not working with established Models if Mongo not the default DB connection.\n. I developped my own connection class based on yours, now everything is fine.\nThank you!\n. ",
    "tomhalley": "This might have been a bad idea. I saw your comment in the issue raised by abishe and you were right, it's not a good idea to build your library on top of a non-stable build of Laravel.\n. ",
    "WMeldon": "A separate dev-type branch like @abishekrsrikaanth suggested that just maintains compatibility would be great.  A lot of these things can just be fillers initially, I'd just rather not maintain my own fork to avoid simple errors.\n. Works like a charm.  Thanks @jenssegers .  I'll be back as soon as Taylor adds another method parameter to Eloquent :D\n. ",
    "alexandre-butynski": "Thank's for your fast answer. I have missed a part of the story ! \nThe following line solve my issue :\nphp\nprotected $dates = array('date_start');\nSo, it's not very important to me now, but why convert MongoDate to string ? It could be the role of a custom getter, to let everyone choose its own output format.\n(I let you close the issue if it's ok for you).\n. Yes, it means something different (http://dev.mysql.com/doc/refman/4.1/en/exists-and-not-exists-subqueries.html) and a method already exists. We can't override it because the first argument has to be a Closure. \n. In fact, whereNotNull give something very close that {$exists: true}. The only difference is were an index exists but has a null value... but it doesn't matter in my use case. It look like a side effect but, in my particular case, it does the job for the moment. Thanks to lead me to this solution.\nIn a more general discussion, what do you think about writing custom methods for specific MongoDB operators ($type, $exists, $all, $size...) ?\n. Ok, ask if you need help.\n. Great !\n. I have met this issue. It generally happens when the assertion fail. If your dates are equals, the assertion will pass but, if there is a difference between the need and the result, PHPUnit will show this kind of error message.\nI bet that your dates are not the same, without any consideration of format.\n. Strange failure... I will check that later (probably tuesday).\n. Good work guys. I'm happy to see my code improved while I was skiing !\nEverything you have done seems to be great for more generalization and more Laravel-like code. I think that few things could be improved again, I will take a look today.\nAbout the name of the attribute, I don't really like the 'relation_ids' too, it just seemed to be the best compromise at the moment. I used it because it was already used in many-to-many relationships and, with denormalization, this two kind of relations can be mixed (you have a classic many-to-many relation but you embed a small part of the related model in order to optimize read performance).\nI also thought about 'relation_data' and the @duxet idea of '_relation' is also a good one. I have no definite opinion about that....\n. Great !\n. In a many-to-many relation maybe but, for example, in the belongsTo relation you have an associate method that is not persistent and just set the parent_id attribute.\n. The only non persistent method in Laravel relations seems to be associate because belongsTo is the only one relation that don't touch to an other table... exactly like the embedsMany relation. \n. Perfect, I do a PR for that.\n. @mbeech you can easily build a basic custom relationship. For example :\n``` PHP\nclass Order extends Eloquent {\npublic function products() {\n    return Product::whereIn('_id', $this->steps_ids);\n}\n\npublic function getProductsAttribute() {\n    return $this->products()->get();\n}\n\n}\n```\nLike that you have a one way many-to-many relationship. You just have to manually set the steps_ids attribute but, in many cases, that's easy.\nI hope I helped you.\n. You're welcome. You can add simple other methods for basic actions like :\nPHP\npublic function addOrder($order) {\n    $this->query->push('steps_ids', $order->id, true);\n}\nOr something like that. Look at what you need in your controllers.\n. My example was not a good one. The bug occur when we add a new embedded item from an array. This a classic case when data come from form.\nPHP\n$addressData = array('_id' => new MongoId);\n$user->adresses()->create($addressData);\n$user->adresses()->create($addressData);\nMy pull request correct it.\n. I wrote a failing test case before writing the code. The simple example below save two records with the same _id in the _addresses attribute : \nPHP\n$addressData = array('_id' => new MongoId);\n$user->adresses()->create($addressData);\n$user->adresses()->create($addressData);\nThis happens when data come from a form, for example when you update the existing addresses of a user.\n. I don't want to create objects, I want to save data in my database. These data come from a form filled by the user.\nSomething like that :\nPHP\n$user->adresses()->createMany(Input::get('addresses');\nWhen the user want to update its addresses, a hidden field with the existing _id is sent with the text fields values in order to not erase and resave all the embedded items (of course, my use case is more complex than basic adresses).\n. The best way should be an embedsOne relation but this is not yet implemented in this package.\nWaiting for that, you can just write a small getter like that :\nPHP\npublic function getUserAttribute($value)\n{\n    return new User($value);\n}\nYou have to choose between a traditional relation (with user_id) and a denormalize relation (with all or a part of the user object stored as an array). To keep both kinds of data could be confusing.\n. Hi Julien ! I have worked on this topic in my current project and the only solution with this package is to use a raw query. The complexity of geospatial queries (there is a lot of combination of queries/types of params) make me think that it is the best solution.\nIn order to keep my code clean, I use query scopes and a small custom dedicated class (GeoPosition) for spatial datas.\n. You can use : \nPHP\nDB::statement(\"db.subjectdocs.renameCollection('subjects')\");\n. Did you run your migrations in your testing environment ? Sometimes it could matter, even in MongoDB.\nCould you paste your error message here ?\n. Your problem come from your environment management in Behat. I think sometimes you call your testing database and sometimes you call your local database.\nWhen you do Artisan::call( 'migrate:reset' );, I'm pretty sure that you always work in your local database.\nYou should try Artisan::call( 'migrate:reset', array('env' => 'testing');. I have never tested that but it should work !\n. MongoDB does not support joins.\nI think that you should use Eloquent query builder instead of the basic query builder. Like that you will be able to use an Active Record ORM and abstract your relations. Your request will become :\n``` PHP\n// LandingPage.php\npublic function campaign() { return $this->belongsTo('Campaign'); }\n// Anywhere\nLandingPage::with('campaign')->get();\n```\n. You have to use the specific MongoDB dot syntax : http://docs.mongodb.org/manual/reference/operator/update/set/#set-fields-in-embedded-documents.\nIn Laravel, it should be like that :\nPHP\n$story = InfoDB::where('_id', $id)->update(array('items.1.message' => $foo));\n. You just have to save your data in the GeoJSON format (specification here : http://geojson.org/geojson-spec.html). For a simple point, it is just something like that :\nPHP\n$event->location = ['type' => 'Point', 'coordinates' => [100.0, 0.0];\n$event->save();\nIf you want to perform geospatial requests you have to create the index in a migration :\nPHP\nSchema::collection('events', function ($table) {\n    $table->index(['location' => '2dsphere']);\n});\nAnd then you can do :\nPHP\n$query->where('location', 'near', [\n    '$geometry' => ['type' => 'Point', 'coordinates' => [101.54, 0.43],\n    '$maxDistance' => 200,\n]);\n. @anodal88 column type ? That doesn't exist in MongoDB !\n. :+1: \n. That's the expected behavior of MongoDB : http://docs.mongodb.org/manual/tutorial/project-fields-from-query-results/.\n. You can do :\nPHP\n$fillable = array('profile');\nAnd you will be able to save any array in the profile attribute. If you do that, you will have a small mass assignment security issue but it could be acceptable for a field like that.\nI think that we can't do anything better today. Add nested attributes with dot notation in the fillable array would be a great feature !\n. Great, thanks for your great work Jens ! Working with nested attributes (dates, fillable, Undefined Index...) is sometimes the dark side of this package ;)\nWe can use embedded relations to make it more robust but it is not always relevant.\n. You should use raw statements for low level operations :\nPHP\nDB::statement('db.source.copyTo(target)');\n. @Henri85 look how the many to many relationship work : https://github.com/jenssegers/laravel-mongodb#relations. Try it.\nAlso, you can build a kind of custom relationship by defining a custom schema and custom getters and setters like this ones :\n``` PHP\nclass User {\npublic function getEmailsAttribute();\npublic function attachEmail($email, $pivot = array());\npublic function removeEmail($emailId);\n\n}\n``\n. Maybe your php config is not the same for your cli and for Apache. Tryphp -iand see if the package php-mongo is installed.\n. You just have to use thewhereRaw` method. It can be better if you encapsulate this in a query scope.\n``` PHP\nclass User extends Moloquent {\npublic function scopeWhereFullText($query, $search)\n{\n    return $query->whereRaw(array('$text' => array('$search' => $search)));\n}\n\n}\nUser::whereFullText('jaygoel')->get();\n```\n. I think that you can only do this by using PHP Driver base methods. It can be something like that :\nPHP\nUser::raw(function ($collection) use ($search) {\n    return $collection->find(\n        [\n            '$text' => ['$search' => $search]\n        ],\n        [\n            'score' => ['$meta' => 'textScore']\n        ]\n    )->sort(\n        [\n            'score' => ['$meta' => 'textScore']\n        ]\n    )->limit(6);\n});\n. Sometimes some ORM methods are broken when you use low level methods. I didn't experience your use case but you can try to make a custom paginator like that :\n```\nprotected function customPaginator($query, $countParam, $perPage)\n{\n    $paginator = $query->getQuery()->getConnection()->getPaginator();\n$total = $query->count($countParam);\n\n$page = $paginator->getCurrentPage($total);\n\n$items = $query->forPage($page, $perPage)->get()->all();\n\nreturn $paginator->make($items, $total, $perPage);\n\n}\n```\nOr to do something else custom and more low level than the standard paginator method. Can't be more helpful today, sorry !\n. I think that no conflict could appear with the same method name in a controller and in a model. Your issue should come from something else.\nCould you past more code (your entire controller method code for example) and your error page/data ?\n. We can' help you with so few informations. I currently use MongoDB on EC2 with no problem.\nIf you have not solved your problem, where your MongoDB instance is located (same instance, other instance, other service like MongoLab...) ? Have you properly installed and configured the php-mongo and the mongodb packages (check php-info) ?\n. Hi Jens, few words about embedded relations and objects :\nFirst, embed objects in MongoDB is one of the key features for a lot of web application. The ability of easily saving complex and changing data structures is probably the main reason for us for using MongoDB. \nSecond, you are right, there are few improvements that could be done in this part of the package. Someones are listed in the issues #310 or #387 for example but there are also some ambiguous things like when you do Comment::create(array()) when Comment is an embedded model. This can be particularly surprising for beginners.\nThird, I have not take time to look at your first try but I know that working with events can be really tricky in Laravel (even if it seems to be improved in L5). Why not create an EmbeddedModel class or an EmbeddedModelTrait ?\nI would have liked to have more time to contribute but, at least, I can be in the corner next days to take a look at what will be done.\n. Yes, this package can do it ! Read this section of the doc : https://github.com/jenssegers/laravel-mongodb#mysql-relations.\nAnyway, you just can choose to extends Jenssegers\\Eloquent\\Model or Illuminate\\Database\\Eloquent\\Model to use this package or the standard Eloquent.\n. If you have routing issues, this package can't be the source of the problem.\nAnyway, we can't help you with so few informations about your problem and your existing configuration.\n. I don't know why the with() method doesn't work but, in fact, this is a   nonsense to use it with embedded relations. This method is used to do eager loading where the two models are stored in different collections/table.\nBecause the embedded object is always loaded with the parent object (except if you exclude the field containing the subdocument in your request), the with() method become useless.\n. Have you tried something like that ?\nPHP\nDB::collection('products')->where('comments.id', '793644433634148')->update(['comments.$.approve', false]);\n. You can use DB::getQueryLog(); to debug your request and see what is different between the original request and the one produced by the ORM.\nCan't help you more right now :/\n. Same issue here.\n. $this->first() is faster than $this->limit(1)->count() because count() method ignores the effect of limit() method. A quick test on a 2 000 documents dataset shows a request 6 times faster.\nSee this doc page for more informations : http://docs.mongodb.org/manual/reference/method/cursor.count. The best performance would be reached by setting applySkipLimit to true to the cursor count() method but a simple find() is at least better than the previous solution.\n. Thanks.\nMaybe did I have made this PR in the wrong branch but this should be integrated in the 2.2 version of the package too !\n. Thanks for your report. This was fixed just now with this pull request : https://github.com/jenssegers/laravel-mongodb/pull/620.\nA new version of the package will be released soon with this patch.\n. @jenssegers I think there is an issue in the package tagging. The 2.1.* tag is more advanced than the 2.2.* tag. This bug fix is present in the 2.1.10 release but not in the 2.2.2.\n. ",
    "rcwsr": "Why does the documentation say \"Internally, these dates will be converted to MongoDate objects when saved to the database.\"?\n. Oh right. I have protected $dates = array('dob'); in my User class, but\nas far as I can see, it is stored as a string in the db.\nOn Mon, Nov 25, 2013 at 7:22 PM, Jens Segers notifications@github.comwrote:\n\n@robcaw https://github.com/robcaw, only if you specify them in your\nclass: protected $dates = array('birthday');\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/jenssegers/Laravel-MongoDB/issues/64#issuecomment-29232861\n.\n. Nevermind, I hadn't saved the date string as a DateTime object when creating my User. Thanks!\n. Yes, I've tried using the alias and use Jenssegers\\Mongodb\\Model as Eloquent;. My Club class:\n\n```\nuse Jenssegers\\Mongodb\\Model as Eloquent;\nclass Club extends Eloquent {\nprotected $collection = 'clubs';\n\npublic function users()\n{\n    return $this->belongsToMany('User', 'memberships');\n}\n\n}\n```\nAnd my User class is set up in a similar manner.\nThe relationship is successfully recorded in the memberships pivot-table.\n. I've just looked at my original post, I started writing something then forgot about it. Where I wrote:\n\"When creating the relationship, nothing is stored Is this expected behavior?\"\nI meant, nothing is stored in either model collection, but the relationship is stored in the pivot table.\n. The pivot table is created whether or not I specify a pivot table name, or pass the relationship any data upon creation. Have I just accidentally created a feature?!\nA document from the pivot-collection in question, status is an extra field.\n{\n  \"_id\" : ObjectId(\"529619f9fa4634b4038b456a\"),\n  \"user_id\" : \"5293a000fa463492038b456b\",\n  \"club_id\" : \"52951ff2fa4634d9038b4567\",\n  \"status\" : \"active\"\n}\n. \"jenssegers/mongodb\": \"*\"\n. Argh I think I might have an older version! Should I be using dev-master instead of *? I only set this laravel project up at the weekend, I assumed it would download the latest.\n. Thanks, that's sorted it. One question, is there a way to name the field in the model collection that holds the referenced ids?\n. Thanks for this.\n. ",
    "jgrossi": "Sure! Actually I'm doing something like:\n$comment = (object) $comment;\necho $comment->author;\nSo maybe an option to retrieve them like FETCH_OBJ will be a good idea.\nNo problem! Thank you.\n. ",
    "kmmathis": "I also tested out the attach / detach methods and got the same result as using the sync method\n``` php\n$user = User::find(\"5294f9d695463439088b4569\");\n$user->roles()->attach(\"52953c599546345b048b456a\");\n// the above code puts the Role id on the User document, as expected.\n// it also puts the User id on the Role document, as expected.\n// later on...\n$user->roles()->detach(\"52953c599546345b048b456a\");\n// that line removes the Role id from the User document\n// but it does not remove the User id from the Role document\n```\n. Works incredibly well. Beaming with joy. Thank you!\n. ",
    "crazycodr": "I'll see if it could be simple to actually scan the arrays and transform them in objects but put an option in the driver to achieve so. Would you agree on accepting a PR if i found how to do it?\n. As long as it's toggleable as an option, i don't see an issue, else i'll just have to move away from the laravel querybuilder and make my own data access layer. Not that hard, but just annoying to have to do so!\n. If you agree on this, i'll just close this PR and start over and do:\nProxy MongoDocument\n\nCreate proxy MongoDocument class that accepts an array in reference to serve it's content\nAll content served by this MongoDocument will return another MongoDocument if the property is an array with only non numeric keys\nSupport for accessors all go through the magic methods __get, __set, __isset and __unset\nAll MongoDocuments refer to references of data stored in the Model, thus all writes, reads, sets, unsets are done on the original data, keeping referential integrity and possibility to detect dirty attributes by comparing \"original\" and \"data\"\nA MongoDocumentFactoryInterface and MongoDocumentInterface will be create to support multiple versions of MongoDocuments, i foresee this as a good start for custom MongoDocument structures\nThere will be no caching in the MongoDocument, it will always be a clean instanciation because we want to keep referential integrity of data, else, we could end up with two instances of the same data reference but end up with one that cached the existence of a property and the other that deleted it afterwards. This caching could be implemented using a different factory and mongodocument\n\nMongoDocument support in model\n\nInstall the MongoDocument support in the MongoModel\n\nServiceProvider binding support\n\nBecause we will be using interfaces and IoC bindings, i'll modify the service provider to setup default bindings of classes MongoDocument to MongoDocumentInterface and MongoDocumentFactory to MongoDocumentFactoryInterface\n\nI'm waiting for your approval\n. @DyeH The main standards are immediately compromised as soon as you move from a relational datastore to a document data store, there is no way to keep the two in sync unless you don't take advantage from any of the two. Imagine not using joins in SQL but still using only a 2D array to store data in MongoDB.\nIn all my carreer, i've never seen a project change so drastically as to rewrite the complete data layer because of such major changes. At that point, you need a major release and will also do core replacements.\n. @jenssegers Agreed, but at this point you are not using laravel naturally, you're doing your own query, and the reason for this module is not just a link between laravel and mongodb it's the querying aspect and automatic modelisation, which becomes even more true when we're talking about document databases that map tightly to an object model.\nSecond, nothing prevents the user from using another special kind of MongoDocument that takes in not a reference but a real dataset and passes on references to sub documents. We'll see what we can do about that later. First things first.\nI'll immediately close this PR and revert the changes and start implementing this new revision!\n. I think i messed something up, i'm still not used with forking, i guess i should not have deleted the branch...\nI hope it won't mix up stuff when i submit again!\n. ",
    "m-nel": "Disclaimer: just started looking into MongoDB, have not used either Laravel-MongoDB or Mongolid.\nThat said, have you had a look at https://github.com/Zizaco/mongolid-laravel ?\nSpecifically, the relationships:\nDocs - https://github.com/Zizaco/mongolid-laravel#relationships\nCode - https://github.com/Zizaco/mongolid/blob/master/src/Zizaco/Mongolid/Model.php#L580\n. ",
    "ifeltsweet": "Would really like to have this implemented as well.\n. Why don't you merge this? I really need this feature.\n. ",
    "NominationP": "How to solve this . $query->whereExists(function($que){\n$que->select(1)->from('bargain_coupons')->whereRaw('bargain_coupons.shop_id=id');\n});\n--! help. and how ?. same question , @sagargulati  did you solve this ?. ",
    "dgreda": "Thank you too, for quick merge :+1:  Needed that urgently for project :)\n. Nope. When I specify v1.1.0 in my composer.json file it works fine. When I upgrade it fails like this.\n. It's returning other errors now, like this one:\n1) AuctionHouseTest::testRelations\nErrorException: Undefined index: _id\n/vagrant/vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Model.php:51\n/vagrant/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Model.php:2316\n/vagrant/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Model.php:2248\n/vagrant/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Model.php:2211\n/vagrant/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Relations/HasOneOrMany.php:281\n/vagrant/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Relations/HasOneOrMany.php:48\n/vagrant/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Relations/Relation.php:52\n/vagrant/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Relations/HasOneOrMany.php:36\n/vagrant/vendor/jenssegers/mongodb/src/Jenssegers/Eloquent/Model.php:58\n/vagrant/vendor/trademachines/core/src/Trademachines/Core/Models/AuctionHouse.php:28\n/vagrant/vendor/trademachines/core/tests/Models/AuctionHouseTest.php:41\n. Great! It works now. Thank you for your support. Closing.\n. ",
    "rishabhp": "Went through the commit logs -> Updated the Package -> Works fine now!\n. ",
    "talukdar": "My exist database is in that structure. \n. Actually saving data is not my concern. It will work any of the method you point out. My concern is retrieving the data like \nPost::find(...)->comments();\n. Yes $post->comment. But it's nor working when the post_id on comments collection is ObjectId.\n. ",
    "rohitkhatri": "Any workaround for this?. Any fix for this?. +1 on having this implemented. Thanks. Is this fixed?. ",
    "Chintan7027": "For the application where data is produced by Nodejs or any other framework, it stores relationship as ObjectId('related model id'), \nIn my case I am using database where Related model id are stored as MongoDb\\BSON\\ObjectID(). \nNON of Moloquent relationship working\n. ",
    "mehulpanchasara": "@talukdar here is your solution,\n$userFiles = UserFile::whereIn('directory_id',$userDirectories->map(function($dir){\n    return new \\MongoDB\\BSON\\ObjectID($dir->directory_id);\n}))->get();\nHowever you'll not be able to use any Eloquent/Moloquent Relationships in these type of case as described by @Chintan7027 . ",
    "jakyns": "I just added 'Jenssegers\\Mongodb\\Auth\\ReminderServiceProvider' into app.php but when I run my website it's show error Class 'Jenssegers\\Mongodb\\Auth\\ReminderServiceProvider' not found. I'm already composer update and my laravel version is 4 not 4.1 it's a problem ?\n. why my issue has no response ?\n. I just added 'Jenssegers\\Mongodb\\Auth\\ReminderServiceProvider' into app.php but when I run my website it's show error Class 'Jenssegers\\Mongodb\\Auth\\ReminderServiceProvider' not found. I'm already composer update and my laravel version is 4 not 4.1 it's a problem ?\n. I'm pass the old error but I got new error when I Auth::login it's shown \"Maximum function nesting level of '100' reached, aborting!\" and I will find in the www and found solution set max_input_nesting_level = 200 in php.ini but when I set to 200 it's show \"Maximum function nesting level of '200' reached, aborting!\",\ncan you advise me ? my auth code it's same at the topic, and my model is \n```\n    public static function whereFBid($fbid)\n    {\n        $rsUser = DB::collection('users')\n        ->where('fbid', $fbid)\n        ->first();\n    return $rsUser;\n}\n\npublic static function registerUser($rsUser)\n{\n    DB::collection('users')->insert($rsUser);\n}\n```\n. It's same as my problem, but you tell me is not related this library ???\nhttps://github.com/jenssegers/Laravel-MongoDB/issues/103\n. ",
    "fawwaz": "Can you provide me a link explaining a complete usage about how to use your library from the begining to the end. I want to build a REST based application by using your library. How Could i do that ?\n. ",
    "innova": "Hi\nI want to run db.categories.find({id:\"t3\"},{sub_categories:{$slice:[6, 3]}}) query using your laravel lib how to execute this query. Actually I want to know $slice part of the query\n. ",
    "Twinski": "Good point! I was a bit too enthusiastic perhaps. Have a good newyear, guys!\n. ",
    "deepak-kumar": "@bitinn can you please share the exact file path or syntax to change the writeconcern? \nThanks.\n. ",
    "grayxr": "Thanks - would you have any recommendation in regard to using this package with cartalyst/sentry? Or would you just recommend using this package with Laravel's native auth?\n. ",
    "mbeech": "It's not possible in MongoDB. If you only need one article then you can around it by taking one and skipping a random number of records. Not at all good for performance so use it wisely:\n$article = Article::take(1)->skip(rand(0,$noOfArticles))->first();\n. Hi Jens\nThanks for the quick reply. That makes sense, but is there a way to force the relation to look for related_ids in the current record?\nIn my case it seems inappropriate to store all the order_ids in the product table.\nThanks\n. I wonder if my use case isn't belongsToMany, but something else. As I don't mind if it doesn't work both ways, and I'm fine for Orders to be treated as the parent.\n. Thanks @alexandre-butynski! I hadn't thought of trying that.\nIn your solution, I lose the ability to sync() and other nice to haves related to belongsToMany() but it's definitely a step forward as I'm getting some results returned now.\n. ",
    "mdhama": "if number of articles equals to random number than it will gives null. should use\n$article = Article::take(1)->skip(rand(0,$noOfArticles-1))->first();. ",
    "ragazzid": "if mongo 3.2:\ndb.collection.aggregate([{$sample: {size: 5} }])\n. ",
    "alagaccia": "News about this?. News about this?. Is this still unfixed?. it seems still unfixed.. Why @jenssegers closed this post?\nIs there anybody who knows how to fix it? . It's quite insane using this method.. Any answer after 2 years?. Here it is the print_r of the \"birth\" and of the \"birthdate\"\n```\nArray\n(\n    [date] => MongoDB\\BSON\\UTCDateTime Object\n        (\n            [milliseconds] => 315532800000\n        )\n[place] => \"New York\"\n\n)\nCarbon\\Carbon Object\n(\n    [date] => 1980-01-01 00:00:00.000000\n    [timezone_type] => 3\n    [timezone] => UTC\n)\n```\n                 . The point is that the two dates are the same and Carbon should parse them equally, but it seems it cannot do the job from inside an array (protected $dates). What do you mean? The primary key is only one and it is defined by protected $primaryKey. ",
    "shrimpwagon": "Update....\nSo it seems as though it won't save any public properties.\nIn this example, the name will save but the _id and age will not save.\n```\nclass Employee extends Moloquent {\nprotected $connection = 'mongodb';\nprotected $collection = 'employee';\n\npublic $_id;\npublic $age;\n\npublic static function find($id, $columns = array())\n{\n    $employee = parent::find($id, $columns);\n\n    if(!$employee) {\n        // Some other API to retrieve the not found information\n        $op = Abas::query('11:1', 'id=' . $id, 'id,nummer');\n\n        if(count($op)) {\n            $op = $op[0];\n\n            $employee = new Employee();\n            $employee->_id = $op['id'];\n            $employee->name = $op['name'];\n            $employee->age = $op['age'];\n\n            $employee->save();\n        }\n    }\n\n    return $employee;\n}\n\n}\n```\nThis is what I see in MongoDB command client:\n```\n\ndb.employee.find()\n{ \"_id\" : ObjectId(\"52de8dff40ca4a35488b4567\"), \"name\" : \"Shawn\", \"updated_at\" : ISODate(\"2014-01-21T15:10:55.501Z\"), \"created_at\" : ISODate(\"2014-01-21T15:10:55.501Z\") }\n```\n\nRemoving _id and age out of class public declaration will allow save() to work properly:\n```\nclass Employee extends Moloquent {\nprotected $connection = 'mongodb';\nprotected $collection = 'employee';\n\npublic static function find($id, $columns = array())\n{\n    $employee = parent::find($id, $columns);\n\n    if(!$employee) {\n        // Some other API to retrieve the not found information\n        $op = Abas::query('11:1', 'id=' . $id, 'id,nummer');\n\n        if(count($op)) {\n            $op = $op[0];\n\n            $employee = new Employee();\n            $employee->_id = $op['id'];\n            $employee->name = $op['name'];\n            $employee->age = $op['age'];\n\n            $employee->save();\n        }\n    }\n\n    return $employee;\n}\n\n}\n```\nThis is what I see in MongoDB command client:\n```\n\ndb.employee.find()\n{ \"_id\" : 123456, \"name\" : \"Shawn\", \"age\" : 25, \"updated_at\" : ISODate(\"2014-01-21T15:10:55.501Z\"), \"created_at\" : ISODate(\"2014-01-21T15:10:55.501Z\") }\n```\n\nIs there how it's supposed to work??? Am I missing something here. How would I get it to write any public variables?\n. Oh, right, I didn't realize that until now. Ty.\n. It's MongoDate: http://www.php.net/manual/en/class.mongodate.php\n. Hey, thanks for the response.\nI tried that and I don't think that is true.\nThis is how you have to do it:\nphp\n$this->mydate = new MongoDate(strtotime(\"09/08/2014\"));\nPassing a DateTime just creates an object of:\njson\n    {\n        'date': \"2014-08-09 00:00:00\",\n        'timezone': \"EST\"\n    }\n. ",
    "AleksMeshkov": "Oh, my fault. I forgot this:\nuse Illuminate\\Auth\\UserInterface;\nclass User extends Eloquent implements UserInterface{\n. @brunocascio doesn't work. Even if do type casting to int.\n. @brunocascio I override it's value when instantiate an Eloquent model. So the main issue is that route GET parameter is a string while in Mongo it's an integer... I thought PHP would try type casting automatically...\n``` php\n$c = new City;\n                $c->_id = $city_to_get->id;\n            foreach ($city_to_get as $key => $prop)\n            {\n                $c->$key = $prop;\n            }\n\n$c->save();\n```\n\n. ",
    "mean-cj": "my composer \n{\n    \"require\": {\n        \"laravel/framework\": \"4.1.\",\n        \"jenssegers/mongodb\": \"\",\n}\n. Solve\n$user = User::where('UserID','1234')->first();\n$user -> Email = 'ABC@domain.com';\n$user -> save();\n. +1\n. +1\n. yes i same.. has fixed , thank your very much sir.\n```\nuse \\MongoDB\\Operation\\FindOneAndUpdate;\npublic static function getNextSequence( $collection )\n    {\n           $seq = DB::getCollection('_data_counters')->findOneAndUpdate(\n                array('_id' => $collection),\n                array('$inc' => array('seq' => 1)),\n                array('new' => true, 'upsert' => true, 'returnDocument' => FindOneAndUpdate::RETURN_DOCUMENT_AFTER)\n           );\n           return $seq -> seq;\n}\n``\n. Upsert not work with relationUser::first() -> books() -> where('name', 'John') ->update($data, ['upsert' => true]);`\nWithout relation is work.\nBook::where('name','John') -> update($data, ['upsert' => true]);. See Official Answer Here\nhttps://github.com/laravel/framework/issues/2536. ",
    "eminos": "Is there any solution for this?\nRight now I'm getting this error whenever I try to do anything with Sentry.\nI'm not sure if it has anything to do with this issue, but I do use both packages (Laravel-MongoDB, Sentry, Syntara).\n[ErrorException]\n  Argument 2 passed to Illuminate\\Database\\Query\\Builder::__construct() must be an instance of Illuminate\\Databas\n  e\\Query\\Grammars\\Grammar, null given, called in /home/greenz/laravel/vendor/laravel/framework/src/Illuminate/Da\n  tabase/Eloquent/Model.php on line 1692 and defined\n. ",
    "wasilak": "Hi, I am also having trouble with this. My application is already using Sentry extensively and now we need to switch to MongoDB. Thanks in advance.\n[ErrorException]\n  Argument 2 passed to Illuminate\\Database\\Query\\Builder::__construct() must be an instance of Illuminate\\Database\\Query\\Grammars\\Grammar, null given, called in \nvendor/laravel/framework/src/Illuminate/Database/Eloquent/Model.php on line 1718 and defined\n. ",
    "almaro90": "Es cierto, tengo el mismo de error de duplicaci\u00f3n. Lo he solucionado haciendo las migrations y una vez este falla borro la collections de sessions. Despu\u00e9s de hacer esto funciona siempre bien. Gracias.\n. yes, thank you\n. ",
    "mutaharte": "before query execute\nDB::connection( 'mongodb' )->enableQueryLog();\nafter query\ndd(DB::connection('mongodb')->getQueryLog());\nyou will get the array containing the query.\n. ISSUE FIXED\n880 solution worked.\n. ",
    "davemathews": "I can understand that, my point was while that was not an expected use, it did not give an expected result, was not sure if it was going to lead to other issues possibly.\n. ",
    "bastiendonjon": "Thanks for your comment. Eloquent it's designed for the relationned database. \nYou build your database as a sql database ?\n. ",
    "jcorry": "@rms2219 did you ever resolve this? We are having similar issues and I don't know where to begin to troubleshoot...\n. ",
    "roosh-t3": "This Still persist !! I can confirm\n. ",
    "doespresso": "I have the latest 2.4.9 \n. ",
    "SpekkoRice": "cowers in shame\n. After digging into the source code a bit you will find this:\n/vendor/laravel/framework/src/Illuminate/Validation/Validator.php\n```\n/\n Get the excluded ID column and value for the unique rule.\n\n @param  array  $parameters\n @return array\n*/\nprotected function getUniqueIds($parameters)\n{\n$idColumn = isset($parameters[3]) ? $parameters[3] : 'id';\nreturn [$idColumn, $parameters[2]];\n\n}\n```\nIt's looking for a 3rd parameter to define the id field.\nSimply put: your rule should look like this: 'email' => 'required|email|unique:users,email,'.$id.',_id',\nThats:\n'{field}'         => '{rules}:{targetTable/Collection},{targetColumn},{exclusionRecord/ID},{exclusionColumn}',\nI bet this is somewhere in the documentation but why the hell use the short way of finding information?\n. ",
    "duxet": "I think it would be way better to store embedded items in array. It would allow to use push/pull instead of saving entire object containing all embedded items. Another gain would be posibility of creating indexes on related element fields.\n. Modifying could be done using update, eg. to change multiple fields value:\njson\ndb.users.update({\n    \"_id\": \"userid\",\n    \"books._id\": \"book_id\"\n}, {\n    \"$set\": {\n        'books.$': {\n            \"title\": \"...\",\n            \"author\": \"...\"\n        }\n    }\n})\nOr if we have index of array element, it could be just:\njson\ndb.users.update({ \"_id\": \"userid\", }, { \"$set\": { 'books.2': { \"title\": \"...\" } } })\n. Thanks, i have tested it and it works. The only problem i noticed, is eager loading. It doesn't load any embedded document. In my case i need it to eager load nested elements.\n. It works, but eager loading relationship of embedded model has no effect.\n. I had that problem yesterday. To keep attribute name simple and short, i just added underscore as prefix.\n. Yes. I didn't expect that could be so easy, i was really surprised when it worked on the first try :D\n. Right, i see now.\n. eh, variadic functions and argument unpacking would be very useful in fixing that :p\n. I am working on this: https://github.com/duxet/laravel-mongodb/tree/L5\n. It's not so hard to make it work with L5, however there is a problem with cleaning after QueryTest: https://travis-ci.org/duxet/laravel-mongodb/jobs/46657530\n. OK, all tests are passing, so i will open PR after final version of L5 gets released :)\n. ok, done :)\n. It fixes problem with Mockery error reporting.\nhttps://travis-ci.org/jenssegers/Laravel-MongoDB/builds/21143880\nIt's not really neccessary, as tests passes without that fix, however im makes finding errors easier.\n. ",
    "podluzhnyi": "Hi! \nFirst of all, I should note: if paths, of your Laravel project is not standard, you need add paths to plugin classes into '~/vendor/composer/autoload_classmap.php' for normaly classes autoload.\nAnd secondly. I want to use mongodb with mysql in my project. I Installed your plugin, but can't configure using mongo with mysql((\nIf someone has correctly sought collaboration of mysql and mongo, please write me\n. Eureka! problem solved just with adding\nprotected $connection = 'mongodb'; to model class))\n. ",
    "webpolis": "Yes of course I did \"composer update\", but it doesn't fetch last master revision\n. I am providing with a gist that shows how the test fails while checking the congruence between Project.staff and User.staff_projects; please check here: https://gist.github.com/webpolis/feb6f18c10a5f4c7df2f\nThe test fails on line 45, after deleting 1 user from the staff array (which originally contains 2 ids) and re-synching the project<->staff relationship; the Project.staff gets updated in db but User.staff_project does not.\n. I always have trouble doing composer update with your package, even when I clean the composer's cache, it never gets your last repo's version.\n. In fact, I re-confirm what happened in issue https://github.com/jenssegers/Laravel-MongoDB/issues/143 \nEven when I delete cache for composer and remove composer.lock, when doing a composer update I don't get your last changes (I can confirm by comparing recent commits changes in github with local copy).\nI tried in my composer.json:\n\"jenssegers/mongodb\": \"*\"\nor\n\"jenssegers/mongodb\": \"~1.2.0\",\nAnd also have (if this helps):\n\"minimum-stability\": \"stable\"\nThanks in advance.\n. Well, thanks. I've temporarily solved this by applying the proper patches, however it failed to update via composer even with or without \"minimum-stability\": \"stable\" at that moment. I will use the new version tag.\nThanks for your support.\n. Yes :+1: \n. ",
    "nsebban": "It now works wonders. Thank you for providing a quick fix !\n. Definitely.\nNo idea if more methods have the same issue though, since I only use ::push and ::pull right now.\n. Just tested the ::pull method, and as expected it still has an effect on every single record on my collection, and not only on the one corresponding to my Model instance.\nWould that do the trick ?\nphp\n/**\n* Pass pull to the query builder.\n*\n* @return mixed\n*/\npublic function pull()\n{\n    if ($parameters = func_get_args())\n    {\n        $query = $this->setKeysForSaveQuery($this->newQuery());\n        return call_user_func_array(array($query, 'pull'), $parameters);\n    }\n    return parent::pull();\n}\nEdit : I don't think I can re-open the issue :/\n. ",
    "khamkham": "Thanks for the quick fix!\nI think the default way of sorting is insertion sort (or the order in which the documents are stored).\nThe orderBy('natural') you just added is correctly affecting the order of the results now though, so there definitely is a difference.\nI think the latest commit assumes the natural sort is always ascending. This should work for descending sort as well:\n```\n    /\n     * Add an \"order by\" clause to the query.\n     \n     * @param  string  $column\n     * @param  string  $direction\n     * @return Builder\n     /\n    public function orderBy($column, $direction = 'asc')\n    {\n        $direction = (strtolower($direction) == 'asc' ? 1 : -1);\n    if ($column == 'natural')\n    {\n        $this->orders['$natural'] = $direction;\n    }\n    else\n    {\n        $this->orders[$column] = $direction;\n    }\n\n    return $this;\n}\n\n```\n. First pull request, fun stuff :)\n. Perhaps this is what you're looking for:\npublic static $snakeAttributes = false;\nInclude it in your model that extends eloquent/moloquent. I use it to keep the names of my eloquent relationships camelCased when eager loading.\n. ",
    "coveralls": "\nCoverage remained the same when pulling 14e8022e8b837262d6e868539ffcc344b7a78814 on codeclown:master into 3a30bf7f0b24666acf0cb747d31a5d9911610a12 on jenssegers:master.\n. \nCoverage remained the same when pulling b8895c9638843fe60fb6e49769d66faa8d1f6af0 on oadtz:patch-1 into 19e9e9f5a170431cb8a5bbc54061b866e0d9af88 on jenssegers:master.\n. \nCoverage remained the same when pulling db53da28aadb6c645a14a52dccafc373696fbcaf on potsky:master into 66de10e3864352a10efe9d2e174760929c185686 on jenssegers:master.\n. \nCoverage remained the same when pulling cca9a2a8937fc895ac540b19bba15db34e3192f4 on JesseObrien:master into 44f9eebc6031d5c4754499ea550f6fc3e03e3d4c on jenssegers:master.\n. \nCoverage remained the same when pulling 983d46345f620a167894cd42d00cc7dac99b5a8f on JesseObrien:master into 44f9eebc6031d5c4754499ea550f6fc3e03e3d4c on jenssegers:master.\n. \nCoverage remained the same when pulling 11107adf979a74c6ccf210d3c173f7dec7ab2d1e on JesseObrien:master into 44f9eebc6031d5c4754499ea550f6fc3e03e3d4c on jenssegers:master.\n. \nCoverage remained the same when pulling 67584e314cc3a13c86bc6f03b79356d72a6c1cb2 on vsouza:master into 44f9eebc6031d5c4754499ea550f6fc3e03e3d4c on jenssegers:master.\n. \nCoverage increased (+0.0%) when pulling f39c67aebe22194287aaaa1e020df9bb60f6985b on franzliedke:patch-1 into 27b52063422e85ff083c5f54ed8c741b1951b311 on jenssegers:master.\n. \nCoverage remained the same when pulling 6c69953710d5032211315964e9a17b8f91367e10 on cerbero90:patch-1 into 27b52063422e85ff083c5f54ed8c741b1951b311 on jenssegers:master.\n. \nCoverage decreased (-72.33%) when pulling b4456474421527cd3773d506365e96c86d7a651d on v-six:master into 96036ab144f7c24ee296f017a0e84050ef94911a on jenssegers:master.\n. \nCoverage decreased (-0.52%) when pulling 943145700ee7235e927324d72bb856b71ff3e835 on embedded-models into 7534e6f999fca65c208559998d593769a53d5160 on master.\n. \nCoverage increased (+0.04%) when pulling 0bbc9022e5f33c722284525de7db426ecb9840a4 on nuwave:master into d9f2c51c9e5ce2829c1869af943a827b52af5d9c on jenssegers:master.\n. \nCoverage increased (+0.05%) when pulling 8c462408c696ba7a35bba977b2a602ba4ef9ca0b on nuwave:master into d9f2c51c9e5ce2829c1869af943a827b52af5d9c on jenssegers:master.\n. \nCoverage decreased (-39.67%) when pulling 046c68d7cf737dc8c62ad4e19ae7457aa1f4f02b on hansvn:MongoInt-support into d9f2c51c9e5ce2829c1869af943a827b52af5d9c on jenssegers:master.\n. \nCoverage decreased (-34.25%) when pulling b73e672966bccbc7a904ea2f654f1e5544f6608f on hansvn:MongoInt-support into d9f2c51c9e5ce2829c1869af943a827b52af5d9c on jenssegers:master.\n. \nCoverage decreased (-34.25%) when pulling b73e672966bccbc7a904ea2f654f1e5544f6608f on hansvn:MongoInt-support into d9f2c51c9e5ce2829c1869af943a827b52af5d9c on jenssegers:master.\n. \nCoverage increased (+0.02%) when pulling d694ac4f2e2995aa9c85d4961d29421a43d30e6a on olegpopadko:datetime_convert_values into d9f2c51c9e5ce2829c1869af943a827b52af5d9c on jenssegers:master.\n. \nCoverage remained the same when pulling b96dc5d91ba468b5128fe290f261361b860f7180 on gmann1982:master into d9f2c51c9e5ce2829c1869af943a827b52af5d9c on jenssegers:master.\n. \nCoverage remained the same when pulling d6a16c15c2f6a9219039b4dff72645e5fa0f8ca5 on dbwhddn10:patch-1 into d9f2c51c9e5ce2829c1869af943a827b52af5d9c on jenssegers:master.\n. \nCoverage decreased (-32.21%) when pulling ab79382ba55288ae540902e683a6dd275dd0d6c5 on pies:patch-1 into d9f2c51c9e5ce2829c1869af943a827b52af5d9c on jenssegers:master.\n. \nCoverage decreased (-17.76%) when pulling 6d8543f762de6ca32468e609cf95f4a62bcec2f6 on duxet:patch-1 into b3bdd0dfb103aa6793addaf52c5b7d40b827751f on jenssegers:master.\n. \nCoverage increased (+0.0%) when pulling 267b9a146c8fee1a6db1e4c6a3460e855548a625 on duxet:master into b3bdd0dfb103aa6793addaf52c5b7d40b827751f on jenssegers:master.\n. \nCoverage remained the same when pulling 926f7406ce730316f27200b8dd6436d794fae83e on ricardoaponte:master into 65b5972e73c94c62937812226d9f086696f5126d on jenssegers:master.\n. \nCoverage remained the same when pulling 926f7406ce730316f27200b8dd6436d794fae83e on ricardoaponte:master into 65b5972e73c94c62937812226d9f086696f5126d on jenssegers:master.\n. \nCoverage decreased (-11.77%) when pulling eada4376933b8591bb07c4b6fa3aa6649b38ed96 on mitulgolakiya:master into f13fe171005f5b6246844e4aa32042639db86636 on jenssegers:master.\n. \nCoverage remained the same when pulling 4fe2c40e4d4212ddd102858f7779ae71a4161253 on mohitmamoria:patch-1 into a126460a5313f8d8d44cc855b3256f470016a2a5 on jenssegers:master.\n. \nCoverage remained the same when pulling 6680b49f255a336fde1a6b582ef73c5bd238fe15 on duxet:gitattributes into 7734303e121c0a6893c9390be44e772737f603f1 on jenssegers:master.\n. \nCoverage remained the same when pulling a695684af0551cbb7fc8e7d30e03805a3b29fb9b on kpnbg:patch-2 into 7734303e121c0a6893c9390be44e772737f603f1 on jenssegers:master.\n. \nCoverage increased (+0.0%) when pulling 2475dd6c9854c464836a4938d88c3a35c446b208 on bbrothers:custom-eloquent-collections into 3bddd4b13be72d30f5af09ae41eec0c38028ca63 on jenssegers:master.\n. \nCoverage increased (+0.01%) when pulling cf28733b8bfd518d58c515be87669d3d46610ac1 on NSmithUK:master into 3bddd4b13be72d30f5af09ae41eec0c38028ca63 on jenssegers:master.\n. \nCoverage decreased (-19.09%) to 78.59% when pulling 8309fdc2e1e252a619558589df221001d1a4528b on giboow:query-aggregation into 3bddd4b13be72d30f5af09ae41eec0c38028ca63 on jenssegers:master.\n. \nCoverage decreased (-11.95%) to 85.73% when pulling c52fe6925dc3a0c6458e9b1f9e63b6377e2c4c40 on giboow:query-aggregation into 3bddd4b13be72d30f5af09ae41eec0c38028ca63 on jenssegers:master.\n. \nCoverage decreased (-0.06%) to 97.62% when pulling 928d216054ad6b3adde9fe85103a10999d932c37 on giboow:query-aggregation into 3bddd4b13be72d30f5af09ae41eec0c38028ca63 on jenssegers:master.\n. \nCoverage decreased (-0.07%) to 97.61% when pulling 728a0378d65946ebab0f5bdf236e634976a04edd on giboow:query-aggregation into 3bddd4b13be72d30f5af09ae41eec0c38028ca63 on jenssegers:master.\n. \nCoverage remained the same at 97.68% when pulling d0912dba8295530dd1e50d703f5aa279319dbbee on duxet:fix into 3a8df834a46bff12681339b7762bd03109a77f79 on jenssegers:master.\n. \nCoverage decreased (-0.17%) to 97.51% when pulling 7b02af30798c0660fd746812d5737d18e9d612b3 on bonroyage:master into 23f93aeb8c2375e0332c16166e957e34e4a3ac1d on jenssegers:master.\n. \nCoverage remained the same at 97.68% when pulling dfdb936aac8bf64c992eb8e1cf949638794d79a0 on andrewelkins:patch-1 into 23f93aeb8c2375e0332c16166e957e34e4a3ac1d on jenssegers:master.\n. \nCoverage remained the same at 97.68% when pulling dfdb936aac8bf64c992eb8e1cf949638794d79a0 on andrewelkins:patch-1 into 23f93aeb8c2375e0332c16166e957e34e4a3ac1d on jenssegers:master.\n. \nCoverage remained the same at 96.82% when pulling a229d272bd0d366252a4d390658d290b2e95709a on neoxia:fix-php-version into 8448aa98d085dc5249e50c18295dc473b42ff406 on jenssegers:master.\n. \nCoverage decreased (-61.2%) to 35.62% when pulling 24d5f8958b5b6f14c230c0a2b3e63e97186310fa on akaroot:master into a2d9eacb95ee16c50a68eacc8309c03093fbbbd8 on jenssegers:master.\n. \nCoverage remained the same at 96.82% when pulling 5022a547d3da381b45570163e687ed36c7183af9 on jonwhittlestone:fix-readme-softdelete into a2d9eacb95ee16c50a68eacc8309c03093fbbbd8 on jenssegers:master.\n. \nCoverage decreased (-0.07%) to 97.61% when pulling 15e30e75017f943b035e4193535d99b62ed0145f on startingplex:query-aggregation into 31774a1ebeff659908fa63d482350e6b51c044ed on jenssegers:4.2.\n. \nCoverage decreased (-0.16%) to 96.52% when pulling 3bb1343d284438afc9ce58e880ae6bb78e658bbe on lennynyktyk:mongo30-distinct into 6f7363396a029f0e63f398f41cde06eefbf8a835 on jenssegers:master.\n. \nCoverage decreased (-23.37%) to 73.15% when pulling ee54b92cbaa106ba77f5b7714141539fa3a997af on philipbrown:relation-ids-as-object-ids into 265ef41e02cce6bd9dbfa1ed5dc87801454e39b6 on jenssegers:master.\n. \nCoverage remained the same at 96.52% when pulling 3fb67d120288f83c5729b02b5ffc449fac4dc6af on shazamjad:patch-1 into 265ef41e02cce6bd9dbfa1ed5dc87801454e39b6 on jenssegers:master.\n. \nCoverage remained the same at 96.52% when pulling 3fb67d120288f83c5729b02b5ffc449fac4dc6af on shazamjad:patch-1 into 265ef41e02cce6bd9dbfa1ed5dc87801454e39b6 on jenssegers:master.\n. \nCoverage decreased (-0.15%) to 96.41% when pulling 759cbdc7c4035ace668a3d6975faa4d03f64c558 on NSmithUK:AddMongoClientDriverOptions into 8304a46fb89d1f718ec794704cf2c5f587f016ac on jenssegers:master.\n. \nCoverage decreased (-0.07%) to 96.49% when pulling f3e5c7f5dde76bf578c41ba9f4c3edaeefc4cff2 on foxbit19:patch-1 into 8304a46fb89d1f718ec794704cf2c5f587f016ac on jenssegers:master.\n. \nCoverage decreased (-0.07%) to 96.49% when pulling f3e5c7f5dde76bf578c41ba9f4c3edaeefc4cff2 on foxbit19:patch-1 into 8304a46fb89d1f718ec794704cf2c5f587f016ac on jenssegers:master.\n. \nCoverage decreased (-0.07%) to 96.49% when pulling f3e5c7f5dde76bf578c41ba9f4c3edaeefc4cff2 on foxbit19:patch-1 into 8304a46fb89d1f718ec794704cf2c5f587f016ac on jenssegers:master.\n. \nCoverage decreased (-0.07%) to 96.49% when pulling f3e5c7f5dde76bf578c41ba9f4c3edaeefc4cff2 on foxbit19:patch-1 into 8304a46fb89d1f718ec794704cf2c5f587f016ac on jenssegers:master.\n. \nCoverage decreased (-0.07%) to 96.49% when pulling f3e5c7f5dde76bf578c41ba9f4c3edaeefc4cff2 on foxbit19:patch-1 into 8304a46fb89d1f718ec794704cf2c5f587f016ac on jenssegers:master.\n. \nCoverage decreased (-0.07%) to 96.49% when pulling f3e5c7f5dde76bf578c41ba9f4c3edaeefc4cff2 on foxbit19:patch-1 into 8304a46fb89d1f718ec794704cf2c5f587f016ac on jenssegers:master.\n. \nCoverage remained the same at 96.56% when pulling aabac7c6738bfb33a9ebd7684cc662a48da1cd51 on hackel:belongstomany-sync into e6ad623fdc614f77d4af248e8c1f2fff0930eb4e on jenssegers:master.\n. \nCoverage remained the same at 96.56% when pulling aabac7c6738bfb33a9ebd7684cc662a48da1cd51 on hackel:belongstomany-sync into e6ad623fdc614f77d4af248e8c1f2fff0930eb4e on jenssegers:master.\n. \nCoverage remained the same at 96.26% when pulling 6402331ac732e48302ff4f7a1d74ab6a503a3647 on lukepolo:lukepolo-patch-1 into faba8698981e2b955700fdb5027b77d62dc7a302 on jenssegers:master.\n. \nCoverage decreased (-0.15%) to 96.11% when pulling 3562a570b27faaeb5d8c8d3a5f939c52c6aa0f30 on spawn-guy:feature_mongoDotDates into 52145b0cda105219779f0a195a62bec981372e23 on jenssegers:master.\n. ",
    "philipstanislaus": "If I understand you correctly, I expect both method chains to result in the following query:\njson\nevents.find({\"active\":true,\"start_at\":{\"$gt\":{\"sec\":1394720784,\"usec\":0}},\"$or\":[{\"end_at\":{\"$gt\":{\"sec\":1394742384,\"usec\":0}}}]}, [])\n(This is the query of the first method chain.)\nThank you very much\n. Dear jenssegers, did you solve this issue? \nMaybe I can further explain again what I mean: \nI expect the following two calls:\nphp\n$event = Event::where(\"active\", true)\n                ->where('start_at', '>', Carbon::now()->subHours(8))\n                ->orWhere('end_at', '>', Carbon::now()->subHours(2))\n                ->get();\nand \nphp\n$event = Event::where('start_at', '>', Carbon::now()->subHours(8))\n                ->orWhere('end_at', '>', Carbon::now()->subHours(2))\n                ->where(\"active\", true)\n                ->get();\nto result in the following queries: \nWHERE active = true AND (start_at > 1395933266 OR end_at > 1395954866)\nand \nWHERE (start_at > 1395933266 OR end_at > 1395954866) AND active = true\nwhich should return the exact same results. As described above, these two calls do not result in the same results. \nIn my view, your suggested \"advanced queries\" do something completely different. For instance, the following call:\nphp\n$event = Event::where(\"active\", true)\n                ->orWhere(function($query) {\n                                $query->where('start_at', '>', Carbon::now()->subHours(8))\n                                      ->where('end_at', '>', Carbon::now()->subHours(2));\n                })\n                ->get();\nwould result in a the following - completely different - query:\nWHERE active = true OR (start_at > 1395933266 AND end_at > 1395954866)\n(ANDs and ORs switched places.)\nMaybe my expectations are odd, please let me know if that is the case.\nBest regards and thanks a lot!\nPhilip\n. ",
    "rporrasluc": "I found the error. I was using a version of Mongo lower than 2.1. Sorry for the mistake.\n. ",
    "lpopov": "You are welcome :)\n. ",
    "prashant-pokhriyal": "@jenssegers did you add any functionality for this specific issue or still we have to do this by raw way. @ssatz thank you for your response but it's not always that I don't want it in the result.. You have to start your mongodb service. I'm for sure that mongodb service is not running. You can check the status by typing following command (if system is ubuntu):\nservice mongod status\nIf status of Active is failed or inactive. Run the following command: \nsudo service mongod start\nNow you will not face any issue.\n. This is because your mongodb service is not running. Check the status of your mongodb service by typing :\nservice mongod status . \nIf the status is failed or inactive, try to run the service again by typing \nservice mongod start\n and then again check the status of mongodb service. @janhartigan , where to overload beginTransaction method?. @uriel2707  It's not working.  Please help me out I got stuck for past 1 month.. @shijinmon, you can use [select][1] method to get specific columns. Like below\nphp\nUser::select('_id')->find($id);\n[1]: https://laravel.com/docs/5.7/queries#selects. How to define $dates attribute for array of documents. For example I want following structure.\nversions => [\n  [\n    updated_at => 'some date',\n    created_at => 'some_date'\n  ],\n  [\n    updated_at => 'some date',\n    created_at => 'some_date'\n  ],\n]\nIs there any way to achieve this without explicitly converting date like below\nversions => [\n  [\n    updated_at => new \\MongoDB\\BSON\\UTCDateTime(new \\DateTime('now')),\n    created_at => new \\MongoDB\\BSON\\UTCDateTime(new \\DateTime('now'))'\n  ],\n  [\n    updated_at => new \\MongoDB\\BSON\\UTCDateTime(new \\DateTime('now'))',\n    created_at => new \\MongoDB\\BSON\\UTCDateTime(new \\DateTime('now'))\n  ],\n]\n. @lscarneiro , how to override beginTransaction() method?. @lscarneiro Actually I'm using a library which internally uses Transactions. Since laravel-mongodb does not have Transaction, it throws an error: Call to a member function beginTransaction() on null. I somehow want to bypass this.. ",
    "ssatz": "@prashant-pokhriyal  you could do something like this\nprotected $hidden = ['_id'];. ",
    "evinkuraga": "I've been tinkering with this.. Anyone has a sample of a raw query with the _id field being hidden? I've tried a bunch of different ways and haven't been able to hide it with a raw query. \nThe only way I managed to get it to work is with a query scope.. IE: \npublic function scopeHideid($query){\n        $query->getQuery()->projections = [\n            '_id'=>0,\n        ];\n        return $query;\n    }\n. Continuation on @proofyman :\nArticles::whereRaw(['$text' => ['$search' => $query]])->orderBy('score', ['$meta' => \"textScore\"])->take(10)->get()\nThis gives: \nCan't canonicalize query: BadValue must have $meta projection for all $meta sort keys\nUnfortunately, this doesn't seem to work for me. I've also tried:\n$results = Articles::raw(function($collection) use ($request)\n        {\n            return $collection->find(\n                ['$text'=>['$search'=>$request->input('searchquery')]],\n                ['score'=>['$meta'=>\"textScore\"]],\n                ['sort'=>['score'=>['$meta'=>'textScore']]]\n            );\n        })->take(10);\nWhich will return results, just not in the right order. \n@m0lll0t - Seems like he committed a fix to use the orderBy chaining method, but seems like it hasn't been implemented yet. Currently using version:\njenssegers/mongodb (v3.0.2)\nIf there a way to implement sort with text score with the current version?\n. It won't work. I've found a few work arounds since. Here's the prettiest:\nBuild a query scope. IE:\n// Your search controller\nSearch::whereText($searchterm)->orderBy('score', 'desc');\n// In model -- need to project the score field\npublic function scopeWhereText($quer)\n    {\n$query->getQuery()->projections = [\n            'name'=>1,\n            'slug'=>1,\n                          ... whatever else field you use\n            'score'=>['$meta'=>'textScore'],\n        ];\n}\n. ",
    "rkgarcia": "\n@ssatz thank you for your response but it's not always that I don't want it in the result.\n\nYou have 3 choices\n1.- Raw query\n2.- Duplicate Model with hidden in one of them for the specific cases\n3.- You could remove _id after query\nphp\n$models = MyModel::get(['field1']);\n        foreach ($models as $model) {\n            unset($model->_id);\n        }. Do you test using protected $primaryKey = 'your_key_field'; ?. Are you adding the ServiceProvider? Update your mongodb driver. @doliskani do you have the mongodb extension installed and activated?. Please share the output of php -m command share more information about OS  i suspect that you use Windows and you need the 32 bits versi\u00f3n of driver. Please follow the issues:\n1358\n761\n1163\n1093\n. Please install without the --ignore-platform-reqs, please share the output of command php --ini. > I'm really helpless, why this error does not fix\nYou need to update your mongodb extension.. ",
    "alextripiq": "We have a number of methods that set or change the $hidden and $visible attributes on a model. You could add something like this to your base Model class:\n```php\n/\n * Make the given, typically visible, attributes hidden.\n \n * @param  array|string  $attributes\n * @return $this\n /\npublic function makeHidden($attributes)\n{\n    $attributes = (array) $attributes;\n    $this->visible = array_diff($this->visible, $attributes);\n    $this->hidden = array_unique(array_merge($this->hidden, $attributes));\nreturn $this;\n\n}\nand then call it via something like:php\n$models = MyModel::query()->get();\n$models->each->makeHidden(['id']);\n```. ",
    "s0ckz": "I tried the following:\n                $user->photo = new MongoBinData(file_get_contents($_FILES['photo']['tmp_name']), MongoBinData::GENERIC);\nIt does persist but returns 'false' as the inserted entity. How can I solve that?\n. ",
    "joebenson": "In case someone runs into this again, the likely culprit is if you're using multiple database connections and MongoDB is not your default. In this case, you must set the presence verifier's connection to your MongoDB connection key prior to validating, then all should work well.\nOne way to do it is in the authorize() method of a custom FormRequest class (because it is called prior to validate()). Example:\nphp\npublic function authorize(){\n    // Make MongoDB the presence verifier\n    $this->getValidatorInstance()->getPresenceVerifier()->setConnection('mongodb');\n    // in this case we're authorizing any user\n    return true;\n}\n. ",
    "rolodef1": "\nIn case someone runs into this again, the likely culprit is if you're using multiple database connections and MongoDB is not your default. In this case, you must set the presence verifier's connection to your MongoDB connection key prior to validating, then all should work well.\nOne way to do it is in the authorize() method of a custom FormRequest class (because it is called prior to validate()). Example:\npublic function authorize(){\n    // Make MongoDB the presence verifier\n    $this->getValidatorInstance()->getPresenceVerifier()->setConnection('mongodb');\n    // in this case we're authorizing any user\n    return true;\n}\n\nOther solution is to specify the database connection in unique validation\n'email' => 'unique:mongodb.users,email_address'. ",
    "investorexperts-git": "I would expect the second save to overwrite the first save, leaving us with only one address. (I was able to verify this in a quick test on my end.) Your scenario of work and home address are logically two different addresses, which happen to have the same content. Changing this behavior would break too many things. We should program for data structure, not data content, since we have little control over what the user enters.\nThis would be correct behavior.\n$addressWork = new Address();\n$addressHome = new Address()\n$user->adresses()->save($addressWork);\n$user->adresses()->save($addressHome);\nPlease apologize if I misunderstood your question.\n. ",
    "juanjolainez": "Hey there! \nI've got a similar thing but I have it not working yet. \nThe point is that I have a simple Post/Comment app, with Post specified as:\nclass Post extends Moloquent {\n    protected $collection = 'posts';\n    ...\n    public function comments()\n    {\n        return $this->embedsMany('Comment');\n    }\n       ...\n}\nand Comment as \nclass Comment extends Moloquent {\n    public function post()\n    {\n        return $this->belongsTo('Post');\n    }\n}\nIf I do $post->comments()->count() I get 1, but if I do count($post->comments) I get 11 (the expected result). \nWhat am I doing wrong? \nThank you!\n. I just figured it out, I had comments in my document and it had to be _comments. I think that will be useful for other people!\n. Do you have it working? I am struggling with this as well and don't have it working yet...\n. In my case I have posts and comments, where a Post embeds many comments and comment belongsTo post.\nWhat I want to do is to find if a post have a comment of a certain user (user_id = whatever).\nDoing\n$comments = $post->comments;\n$previousComment = $comments->filter(function($comment){\nif($comment->user_id == Auth::user()->id) return true;\n});\nI have a \"Call to a member function filter() on a non-object\" because it returns an array of arrays (instead of a collection of Comments, as expected).\nIf I do this instead:\n$comments = $post->comments();\nIt returns a Relation Object, but not a collection. this way, if I filter, I obtain an empty collection.\nWhat's the proper way to do this?\n. This way I am getting \n\nFatal error: Call to a member function connection() on a non-object in /Users/juanjoselainezreche/CreativeHotHouse/mongoCasper/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Model.php on line 2780\n\n. I have already checked that.\nMy PHPTest extends from TestCase \nclass TestPerformance extends TestCase\nand TestCase is defined as follows:\n\n```\nclass TestCase extends Illuminate\\Foundation\\Testing\\TestCase {\n/**\n * Creates the application.\n *\n * @return \\Symfony\\Component\\HttpKernel\\HttpKernelInterface\n */\npublic function createApplication()\n{\n        $unitTesting = true;\n\n    $testEnvironment = 'testing';\n\n   return require __DIR__.'/../../bootstrap/start.php';\n}\n\n}\n```\n\nIt is the way Laravel suggests but I am still having the same problem... :S\nAny ideas? \nThank you!\n. I have tried it this way:\n\nclass TestCase extends Orchestra\\Testbench\\TestCase {\n```\n/\n * Get package providers.\n \n * @return array\n /\nprotected function getPackageProviders()\n{\n    return array('Jenssegers\\Mongodb\\MongodbServiceProvider');\n}\n/\n * Define environment setup.\n \n * @param  Illuminate\\Foundation\\Application    $app\n * @return void\n /\nprotected function getEnvironmentSetUp($app)\n{\n    // reset base path to point to our package's src directory\n    //$app['path.base'] = DIR . '/../src';\n// load custom config\n$config = require 'config/database.php';\n\n// set mongodb as default connection\n$app['config']->set('database.default', 'mongodb');\n\n// overwrite database configuration\n$app['config']->set('database.connections.mongodb', $config['connections']['mongodb']);\n\n}\n```\n}\n\nBut I have still the same answer:\n\nFatal error: Call to a member function connection() on a non-object in /Users/juanjoselainezreche/CreativeHotHouse/mongoCasper/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Model.php on line 2780\n\nMy phpunit.xml is the following:\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<phpunit backupGlobals=\"false\"\n         backupStaticAttributes=\"false\"\n         bootstrap=\"bootstrap/autoload.php\"\n         colors=\"true\"\n         convertErrorsToExceptions=\"true\"\n         convertNoticesToExceptions=\"true\"\n         convertWarningsToExceptions=\"true\"\n         processIsolation=\"false\"\n         stopOnFailure=\"false\"\n         syntaxCheck=\"false\"\n\n<testsuites>\n    <testsuite name=\"Application Test Suite\">\n        <directory>./app/tests/</directory>\n    </testsuite>\n</testsuites>\n\n\n\nI am using Laravel 4.1.\nAny thoughts?\n. For more details, the most important part of the error log is:\nPHP  14. Illuminate\\Database\\Eloquent\\Model->save() /Users/juanjoselainezreche/CreativeHotHouse/mongoCasper/app/tests/ExampleTest.php:32\nPHP  15. Illuminate\\Database\\Eloquent\\Model->newQueryWithDeleted() /Users/juanjoselainezreche/CreativeHotHouse/mongoCasper/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Model.php:1360\nPHP  16. Illuminate\\Database\\Eloquent\\Model->newQuery() /Users/juanjoselainezreche/CreativeHotHouse/mongoCasper/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Model.php:1726\nPHP  17. Jenssegers\\Eloquent\\Model->newBaseQueryBuilder() /Users/juanjoselainezreche/CreativeHotHouse/mongoCasper/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Model.php:1704\nPHP  18. Illuminate\\Database\\Eloquent\\Model->getConnection() /Users/juanjoselainezreche/CreativeHotHouse/mongoCasper/vendor/jenssegers/mongodb/src/Jenssegers/Eloquent/Model.php:276\nPHP  19. Illuminate\\Database\\Eloquent\\Model::resolveConnection() /Users/juanjoselainezreche/CreativeHotHouse/mongoCasper/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Model.php:2746\nPlease help me, I'm desperate!! \n. After a LONG search and banging my head against the screen for a while I discovered that the createApplicationMethod was not being called (I don't know why). \nI solved it by putting this before each test.\nDoes anyone knows why It's happening? Thank you all guys @kaamaru  and  @jenssegers  for your time! :D\n\npublic function testPerformance()\n    {\n$app = $this->createApplication();\n           $app->make('artisan')->call('migrate');\n           .....\n }\n\n. I solved it in a not very elegant way by doing:\n\nAuth::user()->raw()->update(\n    array('phone_hash' => (Auth::user()->phone_hash)),\n    array('$addToSet' => array('_friends' => array('$each' => $hashArray)))\n);\n\n. I did it this way:\n\n$numUpdates = Auth::user()->raw()->update(\n                array('phone_hash' => (Auth::user()->phone_hash)),\n                array('$addToSet' => array('_friends' => array('$each' => $hashArray)))\n            );\n\nHope it helps someone! :D\n. Yep, I just tried it right now and the query executed is likes this:\nposts.find({\"$and\":[{\"_id\":{\"$id\":\"53b23a4705ea67955b8b464f\"}},{\"_comments\":\"$slice\"}]}, []\nWhat it actually makes is an and, instead of the expected behavior.\nAny thoughts? \nThank you! :)\n. Yes in the query above, but I want to make a projection (I found it here http://docs.mongodb.org/manual/reference/operator/projection/slice/ )\nSo the query I want to execute is this:\ndb.posts.find({'_id':ObjectId('53b23a4705ea67955b8b464f')}, {'_comments':{'$slice':[0,50]}})\nThere is no and there, it's just a filter and the condition is the {'_id': ....} part. \nWhat I've made so far is patch the output like this:\n$post = Post::find($id); \n$postToSend = $post->toArray();\n$comments = array_slice($postToSend['comments'], 0, min(count($postToSend['comments']), 50));\n$postToSend['comments'] = $comments;\nbut this is not optimal at all because I have to load all the comments array (which can be really big) and I am trying to avoid it. \nDo you know if there's any way to do so?\n. ",
    "amin-mirmahmoudi": "this link can be helpful : https://stackoverflow.com/q/53168002/6685154. @SamsamBabadi  tanks :) .. this pull request can fix this problem  : https://github.com/jenssegers/laravel-mongodb/pull/1145. ",
    "stampycode": "I got this error by accidentally passing an array into the search criteria for a field expecting a single value:\n    $user = $repo->findBy(['username' => $username]);\n    if($user) {\n        $owner = $repo->findBy(['owner' => $user]);\n    }\n\nThe first findBy should have been a findOneBy - even if only one $user is found, it breaks the query.. ",
    "tusharvikky": "@Mulkave Where you able to query has and whereHas?\n. This update breaks package for Laravel v4.2.\n. @jenssegers thanks \n. @jenssegers \nThe problem here is i'm querying in a relation. And if relation query satisifies only then fetch the relation\nTest::where('isCompleted', true)\n                            ->with(['qpaper' => function($query)\n                                {\n                                    $query->where('isPrivate', false);\n                                }])\n                            ->get();\nDo you recommend a solution?\n. This issue is with L4.\n. Does this has something to do with #443 ?\n. ",
    "bart": "What would be a possibility to query for related information instead, like for a comment title which is related to a post?\n. I have some additional information. Maybe this package does not work with L5.1 ?!\n```\n\n\n\n$author = App\\Author::first();\n=>  {\n       _id:  {\n           $id: \"5583ffa56e78943d518b4567\"\n       },\n       book_id: null,\n       created_at:  {\n           sec: 1434714021,\n           usec: 150000\n       },\n       name: \"JK Rowling\",\n       updated_at:  {\n           sec: 1434714435,\n           usec: 410000\n       }\n   }\n```\n\n\n\n```\n\n\n\n$book = App\\Book::first();\n=>  {\n       _id:  {\n           $id: \"558401656e78948e518b4569\"\n       },\n       title: \"Harry Potter\",\n       updated_at:  {\n           sec: 1434714469,\n           usec: 12000\n       },\n       created_at:  {\n           sec: 1434714469,\n           usec: 12000\n       }\n   }\n```\n\n\n\n```\n\n\n\n$book->author = $author;\n=>  {\n       _id:  {\n           $id: \"5583ffa56e78943d518b4567\"\n       },\n       book_id: null,\n       created_at:  {\n           sec: 1434714021,\n           usec: 150000\n       },\n       name: \"JK Rowling\",\n       updated_at:  {\n           sec: 1434714435,\n           usec: 410000\n       }\n   }\n```\n\n\n\n```\n\n\n\n$book->save();\nMongoException with message 'zero-length keys are not allowed, did you use $ with double quotes?'\n```\n\n\n\nDo you guys have any idea? Here are my models:\n```\n// Author.php\n<?php\nnamespace App;\nuse Jenssegers\\Mongodb\\Model;\nclass Author extends Model\n{\n    public function books() {\n        return $this->embedsMany('App\\Book');\n    }\n}\n// Book.php\n<?php\nnamespace App;\nuse Jenssegers\\Mongodb\\Model;\nclass Book extends Model\n{\n    public function author() {\n        return $this->embedsOne('App\\Author');\n    }\n}\n```\n. I really don't know what I did wrong but after some more trying I got it working!\n. ",
    "sfaisal-modus": "https://stackoverflow.com/questions/42430157/laravel-jenssegers-mongodb-wherehas-and-has-returns-empty-collection\nhttps://stackoverflow.com/questions/46023352/laravel-mongo-many-to-many-relation-wherehas-not-working. Nope. Ended up using an additional query. . ",
    "lucabartoli": "Hi Mulkave, as I told, I tried but the result is not correct.\nInfact, take is not taken into consideration (the same happens on max,min, but get seems to fix it).\nEssentially\nphp\n'hour' => Status::where('url',$u)->orderBy('date','desc')->take(12)->avg('connect_time'),\nIs the same as\nphp\n'hour' => Status::where('url',$u)->avg('connect_time'),\nbut it shouldn't ;)\n. Sure, here it is!\nstatuses.aggregate([{\"$match\":{\"url\":\"http:\\/\\/www.myurl.com\\/\"}},{\"$group\":{\"_id\":null,\"aggregate\":{\"$avg\":\"$connect_time\"}}},{\"$sort\":{\"date\":-1}},{\"$limit\":12}])\n. Yes I do. It's the same query, but sort and limit are executed before aggregating\ndb.statuses.aggregate([{\"$match\":{\"url\":\"http://www.myurl.com/\"}},{\"$sort\":{\"date\":-1}},{\"$limit\":12},{\"$group\":{\"_id\":null,\"aggregate\":{\"$avg\":\"$connect_time\"}}},])\n. In MySQL you can't limit before ordering, because of MySQL instructions can't be placed anywhere in the query.\nMongoDB is order-relevant, i think it would be good if also query builder result consider ordering.\nIn our case I think it should be logical to transform this\nwhere('url',$u)->orderBy('date','desc')->take(12)->avg('connect_time')\nin\nmatch->sort->limit->avg\ninstead of\nmatch->avg->sort->limit (nonsense)\nMoreover, from http://docs.mongodb.org/manual/reference/operator/aggregation/limit/\n\nWhen a $sort immediately precedes a $limit in the pipeline, the $sort operation only maintains the top n results as it progresses, where n is the specified limit, and MongoDB only needs to store the number of items specified by $limit in memory.\n. I do not agree and I'll tell you why:\nI can install mysql to work with a sql database in mind. But i'm working with a Mongo database and i'm using your library to use Mongo on Eloquent, not to use Mongo as Mysql on Eloquent.\n\nFurthermore, i'm a new user too, but i didn't expect to work with mongo as it is mysql.\nAnyway, I respect your work and your opinion ;)\n. Anyway, I think it's possible to modify the query builder to execute $sort and $limit immediately after $match.\nIf you want to retrieve avg, sum, min or max on the entire collection you can omit $limit (it would be logical, because you don't want to limit your dataset for calculation).\nCan you find an example in which the actual behavior does make sense?\n. I didn't undersand why this should be different for a MySQL user.\nI posted my personal idea of patch, so you can take a look.\nhttps://github.com/lucabartoli/Laravel-MongoDB/tree/patch-1\n. Got it!\nCan we apply sort,skip an limit after if $this->aggregate and before otherwise?\nDo you think it would break something else?\n. Sure! infact, I was trying to figure out if there's such a situation in which it's important to execute an aggregation before grouping.\nI think that in any case it really doesn't matter, because it's a nonsense to keep aggregation data with more than one result (the aggregation itself).\nI updated the possible patch.\nAnyway, how do you suggest to execute this query obtaining an array of models?\ndb.statuses.aggregate([{\"$match\":{\"url\":\"http://www.myurl.com/\"}},{\"$sort\":{\"date\":-1}},{\"$limit\":12},{\"$group\":{\"_id\":null,\"aggregate\":{\"$avg\":\"$connect_time\"}}},])\n. ",
    "NorbertGroen": "OK, understandable, I think I'll just have to wait for that change before implementing the embedded relations.\nThanks for the quick answer.\n. ",
    "poorcoder": "My mistake :(\nI was asking this king of query... thanks for your help. :+1: \n$query = DB::collection('addressTable');\n$query = $query->where('tels.number', '=', 123456);\nreturn $query->get();\n. ",
    "lukepolo": "I have installed hhvm and mongofill-hhvm , it almost works except it doesn't like the IN clause \n\"$err\" => \"Can't canonicalize query: BadValue $in needs an array\"\n    \"code\" => 17287\n. Thanks for that tip, it seems to work ok for me haven't had any issues! \n. :+1: , i may work on this soon. As I will be needing this for testing ~ \n. I also this problem on 5.2 \n. This could help as well : https://github.com/laravel/framework/compare/v5.1.19...v5.1.20\n. I only see 1 failed test in travis , is there more that need to be tested ? I can possibly work on this later tomorrow\n. Doing this will convert it from being an object to just a date string though \n  protected $dates = [\n        'updated_at',\n        'created_at'\n    ];\n. Awesome news! \n. Should make a new version with these changes exception of the service provider.\n. Also , remove deprecated lists. \n. Please use the search feature to find open issues #925\n. Hopes this gets merged, there is 1 test failing though , but is failing on master anyways \n. Please use the search feature to find open issues #925 \n. #925 solves this , no need , just needs merged. \n. ",
    "fraank": "Is this issue still open? I'm running into the same problems, when updating a Model (on created-observer, which is just created) getting an error \"Mod on _id not allowed\".\n. Ok, my fault. I added the providers at the wrong place. Please ensure that the providers\n'Jenssegers\\Mongodb\\MongodbServiceProvider',\n        'Jenssegers\\Mongodb\\Auth\\ReminderServiceProvider',\nare in the \"providers\"-Array in \"config/app.php\"!\n. I can do that, but not before the weekend. I'll attach it here as soon as it is finished.\n. ",
    "327": "Hi \uff0chow to delete an embed document in embedsMany collection?\nThere are sample code :\n$member = $group->members()->where(\"uid\",$uid)->first();\n $group->members()->delete($member);\n $group->save();\nwhen run these code,the members(embedsMany collection) was empty,but I just want to delete one member in the collection\nplease give me some suggestion.\nthank you\n. @jenssegers \nthank you for your great job\ndoes we can use $with property in Eloquent now?\n. ",
    "igormatkovic": "Just did. It works. Thanks\n. @askmatey  are you using the queue driver = database ?\n. No i have not, switched to beanstalk and its all good\n. ",
    "whobutsb": "Hey @mikebronner did you ever figure out this issue?  I have the same problem after not connecting to the mongo server (MongoLab) for a little bit.  If I keep refreshing the page a couple of times eventually it loads.  I would like to find a solution to this.  Thanks!\n. Hmm, I'm wondering if I move this to production on a server that is always running if this issue would arise.  Thanks for the response!\n. ",
    "benbogin": "Only partially tested, but overriding laravel's object_get seemed to help (you have to override it before the auto-load):\n``` php\nfunction object_get($object, $key, $default = null)\n    {\n        if (is_null($key) || trim($key) == '') return $object;\n        foreach (explode('.', $key) as $segment)\n        {\n            if ( is_object($object) && isset($object->{$segment}))\n            {\n                $object = $object->{$segment};\n            }\n            else if ( is_array($object) && isset($object[$segment]))\n            {\n                $object = $object[$segment];\n            }\n            else\n                return value($default);\n        }\n    return $object;\n}\n\n```\n. ",
    "foxbit19": "Any news on this?\n. I've no foreign keys fields for some documents in a collection. The foreign keys fields are inserted progessively by a laravel application. I think this problem comes up because I've first inserted the documents inside some collections, then I've defined the relations between them.\n. Just define your model without relations:\n/*\n* Keyboard's key :)\n*/\nclass Key extends Moloquent \n{\n    protected $collection = 'keys';\n    protected $connection = 'mongodb';\n}\nThen use the model in your code to populate the collection.\nYou want to add another collection for the keyboard. But your key collection is populated and you don't want to delete all the documents inside it. You just want to add the relation between the collection without touching any data.\nSo you add the Keyboard model with the correct relation.\n```\nclass Keyboard extends Moloquent \n{\n    protected $collection = 'keyboards';\n    protected $connection = 'mongodb';\npublic function getKeys() \n{\n    return $this->hasMany('App\\Models\\Key','keys');\n}\n\n}\n```\nAdd now add an inverse relation to the model Key:\n```\nclass Key extends Moloquent \n{\n    protected $collection = 'keys';\n    protected $connection = 'mongodb';\n/*\n* Since this is a one to many relation, I want a 'keyboard' field\n* inside the collection using the inverse relation\n*/\npublic function getKeyboard() \n{\n    return $this->belongsTo('App\\Models\\Keyboard', 'keyboard');\n}\n\n}\n```\nYou expected to work with the field keyboard of the collection key but when you use this code\n$keyboard = $key->getKeyboard;\nyou get an ErrorException.\nThe above code fails because belongsTo search for a field named keyboard inside the collection key. This field cannot exist at this moment.\nConsider the case in which I want to add some one-to-many relations to my collections and my data cannot be touched because they are used daily by my clients (through my production systems).\nThis is the context in which this error happen and I think the same behaviour can be extended to other inverse relations.\n. Any news of this?\n. ",
    "lokielse": "Test Report (Hybrid environment mysql && mongodb)\n- work but not perfect!\nTest Code\nphp\n$user = User::find(112); //User mysql Eloquent\n$card = Post::create(['id' => 123]); //Post mongodb Eloquent\n$card->user()->save($user);\n1. The document save user as the follow:\njson\n{\n    \"_id\" : ObjectId(\"535de3a0c70d9e6c04000029\"),\n    \"id\" : 123,\n    \"updated_at\" : ISODate(\"2014-04-28T05:14:08.000Z\"),\n    \"created_at\" : ISODate(\"2014-04-28T05:14:08.000Z\"),\n    \"user_id\" : {  /* here is not named \"user\" */\n        \"user_id\" : 112,\n        \"name\" : \"loki\",\n        \"gender\" : 1,\n        \"age\" : 23,\n        \"_id\" : <ObjectId>\n    }\n}\n1. mysql Eloquent event throw an Pdo Exception\nphp\nUser::created(function(User  $user){\n    $user->meta()->save(new UserMeta()); \n    //table user_metas with unique user_id index throw an duplicate index exception.\n});\nThe subdocument user on post is redundant, I think it should not trigger created event each time.\n. ",
    "krishnae": "I installed jenssegers for mongodb in Laravel and i just started to using mongoDB with Laravel.\nI followed the steps to install through https://github.com/jenssegers/laravel-mongodb this link\nthis is my eloquent model\n<?php\nnamespace App;\nuse Jenssegers\\Mongodb\\Model as Eloquent;\nuse Illuminate\\Database\\Eloquent\\Model;\nclass Events extends Eloquent\n{\n    protected $connection='mongodb';\n    protected $colletion='eventType';\n}\nand i am trying to get the data from my collection in controller\n$customers = mongodbtest::all();\nand tried $user = \\DB::connection('mongodb')->collection('eventType')->get(); like this also\nbut i am getting empty json object with both approaches\ncan you please anyone help me out on this\n. ",
    "liujijun": "@jenssegers \n\"change the default connection\" I can use the Config::set('database.default',\"mongodb\"),\n\"define the connection in your model\" ? I don't understand ,How to define the connections in model? Can you give me an example \uff1fThank you very much!!\n. ",
    "calumks": "I just tried using a fresh install of Linux Mint 16 and it's still won't work :(.\nI have Nginx 1.4.1\nMySQL 5.5.37\nPHP 5.5.3\nMongoDB 2.4.6\nMaybe I am testing wrong? What I do is clone the repository and then use composer to get the required packages and install phpunit.\nHere is what I tested on https://www.mediafire.com/?q9k2cfro8ro116w\nI don't need to use MySQL and MongoDB together any time soon so it doesn't matter too much.\n. Fixed! MySQL was returning integers as strings. mysqlnd returns native data types. Thanks for your help.\nsudo apt-get install php5-mysqlnd\n. Does this help? Seems like you have the same problem.\nhttps://laracasts.com/forum/1429-phpunit-call-to-a-member-function-connection-on-a-/0\n. What about if you extend from https://github.com/jenssegers/laravel-mongodb/blob/master/tests/TestCase.php\n. If you upload your project, I'll have a look. I'm always up for a chalange.\n. ",
    "ingro": "I got the same problem, have you found a solution? Thanks!\nThe query: \nphp\nPosts::orderBy('date','asc')->get();\nreturn:\nposts.find([], [])\n. I'm sorry, I was just extending from the wrong class, \"Jenssegers\\Eloquent\\Model\", instead of \"Jenssegers\\MongoDB\\Model\"... Shame on me!\n. ",
    "Epick362": "I got it to work.\n. ",
    "MartijnThomas": "I'm interested in this adition as well. Although Eloquent does not support dot notations, dot notation would be a supurb way to support nested documents or multidimensional arrays (which are a big big part of Mongo.\n. Sorry, never realized that I could do it in that way.\nThanks for the help!\n. ",
    "spawn-guy": "this should be supported via embedOne/Many and then no dot-notation would be needed for dates.\n. I just wanted to say, that i have the exact problem with embedOne as @juaniiton1 .\nWhen I use \"with\" I get \"Argument 2...\" Exception.\nMy intention is about GeoJSON Point, as I have to store GeoJSON into mongoDB, but i'd still like to export it as [lng,lat] only. i would like to override toArray() method (or some appended attributes)\n. i would like to monitor the progress over here. as i started using the embedMany, but it gives me weird results. Like, a separate \"table\" in the database.\nso i dropped the idea and went for dot-notation :/  and now i'm fixing dot-Dates in attributesToArray and dot-enabled syncOriginalValue (as it doesn't work with ->increments(something.sometingelse)).\nam i doing something not in a correct way? is there an example to embedOne, that embedMany?\nalso i'm interested in GeoJSON, but this is for later\n. $this->attributes['features']\n. @daPhantom to understand recursion you need to understand recursion.\nalso this is not a Moloquent issue.\n. Testing this approach. I do agree, that there is a problem with eagerLoading.. after eagerLoading.\nThe parent always exists, which results into an infinite loop on getPathHierarchy() and to getParentRelation().\nTest scenario is simple, based on your models (except embedOne in my case)\n$lesson=App\\Lesson::all();\n$lesson->load('sublessons');\n. and again, this IS a Working solution, but.. one wouldn't be able to re-use models if they are sometimes embeded and sometimes not. this needs to be dynamic, imo.\nhere are my ideas:\n- probably we should utilize $casts functionality by adding \"collection:ModelName\"/\"item:ModelName\" or \"embedMany:ModelName\"/\"embedOne:ModelName\" as values and \"auto\"-load the embeded models right when they are, basically, loaded. also Ignoring them if someone wants to \"load\" them afterwards\n- or limit getPathHierarchy() to just 1 level up so it will not get into an endless loop\nalso, this does and doesn't make sense: that ::match() requires a Collection to be passed as a second parameter.\nhere is a \"merged\" vesion\nhttps://github.com/spawn-guy/laravel-mongodb/tree/feature_EmbedModelsWithParentFlag\n. change 'new ISODate(0)'\nto new \\MongoDate()\n. https://docs.mongodb.org/manual/reference/operator/query/near/#op._S_near\n. ",
    "erkanarslan": "This feature is needed +1. That solves the problem. Thank you.\n. I have the same problem. If you try to use MongoDB modifiers like $pull and $addToSet in update method, this error is created because Laraval MongoDB also tries to set \"updated_at\" field with these modifiers. As there is a key which doesn't start with $ sign in raw MongoDB update query, MongoDB creates an error.\nCurrently, I prevent this problem by using\nModel::raw()->updateOne(...)\n\ninstead of using\nModel::update(...). @jenssegers Is this problem solved in the new versions? I use version 3.2.x as I use it with Laravel 5.4. Is this fix applied to this version as well or only the most up-to-date version?. @uriel2707 Thanks, your solution works.\n\nHowever, editing gitignored files is not a correct solution. Every time someone clones the project or pulls this change, he will need to manually edit files. This is a temporary solution, a correct solution should be implemented into laravel-mongodb repository.. ",
    "j42": "I'm sorry I didn't comment on this earlier.  It actually started working for me randomly (and has been ever since) once I re-provisioned my vagrant box.  Still can't seem to trace what happened as all packages were installed from the lock file and the puppet manifest wasn't changed...\nWhatever happened seems to have been intermittent and on my end.  Thanks for the awesome package!\n[edit] the database was never modified either as it exists on a separate staging server\n. ",
    "bharanirajan3495": ".. ",
    "JulienTant": "Hello Alexandre,\nThe world is so small :-) This how i implemented it finally, except for the GeoPosition class, but it sounds great... I'll probably create one ! \nThanks!\n. ",
    "oadtz": "@jenssegers Sorry, I haven't tried that yet. :(\n. ",
    "yaede7": "I figured it out.  I guess I should make sure I have the correct namespace. Opps...\nuse Illuminate\\Database\\Eloquent\\SoftDeletingTrait \nshould be \nuse Jenssegers\\Mongodb\\Eloquent\\SoftDeletingTrait;\n. ",
    "84564221": "I'm looking for a solution, to reduce blowed up laravel model classes. WIth the DoctrineMongoDBBundle this was a common way for me, to embed objects {} within MongoDB documents.\nWhat do you recommend to achieve this?\n. The joy of a Document database is that it eliminates lots of Joins. My first instinct is to place as much in a single document as I can. I hope you can realize it somehow, Jens.\n. Can't reproduce this\n. > Wheres\n\n$users = User::where('votes', '>', 100)->take(10)->get();\n\nExamples\nPlease clarify your specific problem or add additional details to highlight exactly what you need. As it's currently written, it\u2019s hard to tell exactly what you're asking.\n. Did you uncommented the $app->withEloquent() call in your bootstrap/app.php file?\n. ",
    "apollopy": "You can try: \n``` php\n<?php\nclass User extends Moloquent\n{\n    protected $collection = 'users';\n...\n\npublic function item()\n{\n    return $this->embedsOne('Item');\n}\n\n}\n...\nclass Item extends Moloquent\n{\n        protected $primaryKey = '__id';\n...\n\n}\n```\nand dont set  __id\n. ",
    "Kabangi": "Am getting this error and it only goes away if i have $timestamp = false. Kindly help. Using laravel 5.2 and laravel-mongodb ^3.0\n. ",
    "oaloria": "I just figured it out.\nIt was Nothing related to the package, it was a conflict with another mongodb connection I have for another laravel+mongo package, so I created one connection per package and runs smoothly.\nThanks.\n. I got it working after solving the conflict with the configuration of 2 packages I describe above.\nSo I got that was not package issue, but config issue of my project.\nYou should check the environment is being taken correctly using the url laravel provides.\n/environment will give you the name of the current environment.\nHope this helps.\n. ",
    "Ardakilic": "I'm having the exact same issue, this did not work. Any info?\n. @oaloria I've found the issue.\nIn the production environment, my mongo connection has username and password, but in my test server it doesn't.\nThat's why it took the address from my test environment config, but the username and password from the production.\nI've added\nphp\n'username'=>null,\n'password'=>null,\nto the test environment connection, and it started working as it should. (My test application without environment didn't need these keys.)\nI don't know whether this is a bug or the normal behaviour. @jenssegers Could you please clarify?\nThanks again,\n. +1, I'd love to use this package on Laravel 5.\n. Thanks @jenssegers for the fast response and interest, good luck :+1: !\n. Laravel 4 now officially supports PHP7 with 4.2.20 and upwards updates, so I'm in the same boat with you guys. I have created a PR for this: https://github.com/jenssegers/laravel-mongodb/pull/1197 , please check. The fix requires an additional package, and may break compatibility with PHP versions lower than 5.5. I can confirm I can run Laravel 4.2 with PHP7 smoothly with the patch in the PR.. @ricardoaponte try dev-2.0 because there isn't a release of it yet.. @adiyodishreyas Did you change minimum stability of your composer.json ? Try manually editing composer.json and try updating packages. May work.. Another +1 for this.\nI'm trying https://github.com/alcaeus/mongo-php-adapter/ but insert (save()) method throws error, so I'm not sure if it's compatible.\n@jenssegers any plans for this ?. @jenssegers Sorry to bump, but any plans for this ? Current Laravel 4 version's PHP7 compatibility would be already enough for my case.. I have created a PR for this: https://github.com/jenssegers/laravel-mongodb/pull/1197 , please check. The fix requires an additional package, and may break compatibility with PHP versions lower than 5.5. I can confirm I can run Laravel 4.2 with PHP7 smoothly with the patch in the PR.. @opb You're welcome! Actually, none of the code is my original work. I saw solutions in the other discussions, tried them, simply merged them and made a pull request. I hope it's considered \ud83d\ude4f . @jenssegers Awesome! Thank you for reviewing and merging this! \ud83c\udf89 . @opb Hey there, I'm not using LearlngLocker neither. Just found the fix there. Can you give me some example code please to reproduce the issue ?. @adiyodishreyas I guess your issue is same with @opb 's , this one: https://github.com/LearningLocker/learninglocker/issues/893#issuecomment-287790662\nSorry, I just brought the commit as a pull request. I've tried to fix it further but stuck on same issue. Have you tried moving your issue to here? https://github.com/alcaeus/mongo-php-adapter/issues/107 ? Sorry can't help you further.. Late bump.\nIf you're still in need of this in PHP7 With Laravel 4. I made a commit to prevent the undefined index: _id exception issue for the cases where the row's just been created and on the same request that field's being called. This'll work, but only if you don't need the _id field beginning at all.\nCheck this commit:\nhttps://github.com/Ardakilic/laravel-mongodb/commit/99ddd15e05da498a4e1dc728fe6eb6e82eb56550\nThis prevents the  \"Undefined index _id\" issue, but please consider my warn on the first paragraph. I didn't need the _id field upon creation, so this works for me, also everything else seem to work nicely.\nTo use my fork, simply alter your composer.json like this:\njson\n{\n    \"repositories\": [\n        {\n            \"type\": \"vcs\",\n            \"url\": \"https://github.com/Ardakilic/laravel-mongodb\"\n        }\n    ],\n    \"require\": {\n        \"jenssegers/mongodb\": \"dev-2.0-php7\"\n    }\n}\nminimum-stability can still be still set as stable. No worries there.. ",
    "nanchet": "Perfect! @jenssegers, thank you very much! Nice work!\n. ",
    "v-six": "I don't think this is a correct approach for this issue jenssegers.\nMongoDB allows all kind of _id (String, Int, ...) and like WiredPrairie said in this topic, MongoId objects are only there for situations where you don't already have a unique key. \nSo, I think the MongoId object should be a default only in case of an empty _id, but not an obligation.\nPersonally, I use a lot of unique string keys.\n. @jenssegers I'll give you a pull request in a few days :-).\n. @jenssegers : In a raw PHP way, this is solved by setting a timeout on the query cursor before its execution (see http://php.net/manual/fr/mongocursor.timeout.php).\nIt could be great if these timeouts were customizable in the query builder like :\n$all = Collection::timeout(60000)->all().\n. Connection tests are broken since the last illuminate/database release 4.2.8.\n. Same problem here since the last 4.2.9 Laravel release. \n=> Downgrade to 4.2.8 temporarily resolve this issue.\n. @jenssegers : All is working well since your latest release, thank you very much from our entire team :-).\n@alexkavon : I use redis to store user sessions with Laravel and I have no issue. I think there is a problem in your session configuration file or in your Redis server configuration.\n. ",
    "jimeshgajera": "@jenssegers \nI hope you are doing good!\nI have an issue with relationship id, which is store as string. \nHow I can store that companyId as Object id?\n$user = new User;\n$user->companyId        = $companyId;\n$user->save();\n. @pirmax \nI have find solution for same. Try below syntax.\n$id = new \\MongoDB\\BSON\\ObjectID($id);\nAs per my code, it will look like below this\n$user = new User;\n$user->companyId = new \\MongoDB\\BSON\\ObjectID($companyId);\n$user->save();. ",
    "pirmax": "@jimeshgajera I want this too!. Thanks @jimeshgajera !. I have the same issue. Have you got news?. Try \n\ncomposer require jenssegers/laravel-mongodb --ignore-platform-reqs. I have the same issue.... I have this error with a fresh Laravel 5.5 installation... It isn't been released :/\nDeclaration of Jenssegers\\Mongodb\\Eloquent\\HybridRelations::belongsToMany($related, $collection = NULL, $foreignKey = NULL, $otherKey = NULL, $relation = NULL) should be compatible with Illuminate\\Database\\Eloquent\\Model::belongsToMany($related, $table = NULL, $foreignPivotKey = NULL, $relatedPivotKey = NULL, $parentKey = NULL, $relatedKey = NULL, $relation = NULL). Thank you for making fast \u263a Courage and luck!. \n",
    "cbking": "Anyone who can point me in the right direction is greatly appreciated\n. The above query is working, I should have pointed out I was on version 1.2.*, I updated the package and its works.\nNow I need to figure out how to implement pagination as it doesn't seem to like adding ->paginate(xx) after the query. That I will spend some time on when I come back from work tonight :).\nThanks for the blazing quick response!!\n. ",
    "modipriya87": "Above query gives me whole data, can you please improve it for specified radius.\nI mean I want the places in the given radius of chosen area.\nThank you in advance with hope\n. ",
    "djit": "OK, thanks.\n. Found out\"the \"raw\" command accepts $unwind.\n. Here's the dirty hack I'm using:\n```\n// in \"City\" model:\npublic function relatedRegion()\n{\n    return $this->belongsTo('Region', 'region.id');\n}\npublic function getFk()\n{\n    return $this->region['id'];\n}\n```\nin Jenssegers\\Mongodb\\Relations\\BelongsTo\n$q = $this->parent->getFk();\n$this->query->where($this->otherKey, '=', $q);\n. +1, really need this to work.\n. ",
    "chrissm79": "The attributes are stored the the DB correctly. In order to get the updated model, I have to use find(). Is updating the attributes with push() possible, or should I do something like:\nphp\n$name = ['first' => 'John', 'last' => 'Doe'];\n$user->name = $name;\n$user->push('name', $name);\nAwesome package BTW, and thanks for the quick response!\n. That solution works great! Thanks!!\n. Awesome!\n. Model::with('relation') works for me as well. However, using the $with attribute is what's timing out. Since https://github.com/jenssegers/laravel-mongodb/commit/1c4df65a2ded77999c4b5a3b126eb886feade8c9 removed embedded relations by default when retrieving a model, using the $with attribute would be a nice to use so I don't have to go to my controllers and repos and add with() to all of my queries. \nIf you add the following to your User model and test, it will timeout:\n``` php\nclass User extends Eloquent implements UserInterface, RemindableInterface {\nprotected $dates = array('birthday');\nprotected static $unguarded = true;\nprotected $with = array('addresses');\n\n// ...\n\n}\n```\n. It was timing out on embedded documents but I haven't tested it in awhile. If v2 includes embedded documents when outputting JSON (while removing their hidden attributes) then it removes the need to include $with.\n. Personally I would really like to see this new direction implemented. I think it makes things a bit simpler when running raw queries and although the expose attribute is nice to have, it adds the an additional attribute when we could do without it.\nJust curious, will you keep embedded-models up to date w/ the master branch? I would like to start using this new approach in my application.\nThanks again for putting so much effort into this package!!\n. This is actually something I'm currently dealing with myself. I have a many-to-many relationship with emails. I would like to just store the user's ids in the email model, but I don't want to attach a long list of email ids to my user model. I am attempting to create a new relation (referencesMany) but it's a little more in depth than I thought so I need to dedicate some more time to it.\n. This is a really strange one... The only changes I made were to models to accommodate the new changes. What's weird is that the app works fine from the command line (or least it appears to be that way). I reverted back to 1.4.3 and still experienced the issue. If I fall back to 1.4.2 everything works fine again. Here's a stacktrace:\n```\nInvalidArgumentException thrown with message \"Unsupported driver [mongodb]\"\nStacktrace:\n21 InvalidArgumentException in /var/www/MongoDB/vendor/laravel/framework/src/Illuminate/Database/Connectors/ConnectionFactory.php:194\n20 Illuminate\\Database\\Connectors\\ConnectionFactory:createConnector in /var/www/MongoDB/vendor/laravel/framework/src/Illuminate/Database/Connectors/ConnectionFactory.php:59\n19 Illuminate\\Database\\Connectors\\ConnectionFactory:createSingleConnection in /var/www/MongoDB/vendor/laravel/framework/src/Illuminate/Database/Connectors/ConnectionFactory.php:47\n18 Illuminate\\Database\\Connectors\\ConnectionFactory:make in /var/www/MongoDB/vendor/laravel/framework/src/Illuminate/Database/DatabaseManager.php:161\n17 Illuminate\\Database\\DatabaseManager:makeConnection in /var/www/MongoDB/vendor/laravel/framework/src/Illuminate/Database/DatabaseManager.php:63\n16 Illuminate\\Database\\DatabaseManager:connection in /var/www/MongoDB/vendor/jenssegers/mongodb-session/src/Jenssegers/Mongodb/Session/SessionManager.php:56\n15 Jenssegers\\Mongodb\\Session\\SessionManager:getMongoDBConnection in /var/www/MongoDB/vendor/jenssegers/mongodb-session/src/Jenssegers/Mongodb/Session/SessionManager.php:14\n14 Jenssegers\\Mongodb\\Session\\SessionManager:createMongoDBDriver in /var/www/MongoDB/vendor/laravel/framework/src/Illuminate/Support/Manager.php:88\n13 Illuminate\\Support\\Manager:createDriver in /var/www/MongoDB/vendor/laravel/framework/src/Illuminate/Support/Manager.php:61\n12 Illuminate\\Support\\Manager:driver in /var/www/MongoDB/vendor/jenssegers/mongodb-session/src/Jenssegers/Mongodb/Session/SessionServiceProvider.php:17\n11 Jenssegers\\Mongodb\\Session\\SessionServiceProvider:Jenssegers\\Mongodb\\Session{closure} in /var/www/MongoDB/vendor/laravel/framework/src/Illuminate/Support/Manager.php:102\n10 Illuminate\\Support\\Manager:callCustomCreator in /var/www/MongoDB/vendor/laravel/framework/src/Illuminate/Session/SessionManager.php:16\n9 Illuminate\\Session\\SessionManager:callCustomCreator in /var/www/MongoDB/vendor/laravel/framework/src/Illuminate/Support/Manager.php:84\n8 Illuminate\\Support\\Manager:createDriver in /var/www/MongoDB/vendor/laravel/framework/src/Illuminate/Support/Manager.php:61\n7 Illuminate\\Support\\Manager:driver in /var/www/MongoDB/vendor/laravel/framework/src/Illuminate/Session/Middleware.php:251\n6 Illuminate\\Session\\Middleware:getSession in /var/www/MongoDB/vendor/laravel/framework/src/Illuminate/Session/Middleware.php:111\n5 Illuminate\\Session\\Middleware:startSession in /var/www/MongoDB/vendor/laravel/framework/src/Illuminate/Session/Middleware.php:67\n4 Illuminate\\Session\\Middleware:handle in /var/www/MongoDB/vendor/laravel/framework/src/Illuminate/Cookie/Queue.php:47\n3 Illuminate\\Cookie\\Queue:handle in /var/www/MongoDB/vendor/laravel/framework/src/Illuminate/Cookie/Guard.php:51\n2 Illuminate\\Cookie\\Guard:handle in /var/www/MongoDB/vendor/stack/builder/src/Stack/StackedHttpKernel.php:23\n1 Stack\\StackedHttpKernel:handle in /var/www/MongoDB/vendor/laravel/framework/src/Illuminate/Foundation/Application.php:642\n0 Illuminate\\Foundation\\Application:run in /var/www/MongoDB/public/index.php:49\n```\n. Not sure why it's happening, but this worked for the time being:\n``` php\n    // MongodbServiceProvider.php\n/**\n * Bootstrap the application events.\n *\n * @return void\n */\npublic function boot()\n{\n    Model::setConnectionResolver($this->app['db']);\n\n    Model::setEventDispatcher($this->app['events']);\n}\n\n/**\n * Register the service provider.\n *\n * @return void\n */\npublic function register()\n{\n    $this->app->resolving('db', function($db)\n    {\n        $db->extend('mongodb', function($config)\n        {\n            return new Connection($config);\n        });\n    });\n}\n\n```\n. @jenssegers I thought that might be the problem so I removed the session service provider, but I still got the same error. I'll test this again later today just to be sure. \nThe code in MongodbServiceProvider.php looked fine to me, I couldn't find out what was going on as the code looked correct and there were no errors.\n. #286 I thought maybe a referencedBy/referencesMany relationship type might be a good idea.\n. ",
    "haperlot": "Same problem here, just with the User Model . I suppose it has something to do with\nuse Illuminate\\Auth\\UserTrait;\nuse Illuminate\\Auth\\UserInterface;\nuse Illuminate\\Auth\\Reminders\\RemindableTrait;\nuse Illuminate\\Auth\\Reminders\\RemindableInterface;\n. Thanks for the fast response . Great, is good to know . I already use push/pull like you said it becomes very handy . I don't mind using \n$name = ['first' => 'John', 'last' => 'Doe'];\n$user->name = $name;\n$user->push('name', $name);\n. Solved :\nJust had to add everything into an array. \n $collection->dropIndex(array('author_slug','slug'));\n. ",
    "nithilgeorge": "I am a newbie in Laravel MongoDB \nI would like to mention a problem here,\noutline of my Mongo document should be like\n{\n     _id:****,\n     subscriptions: [{list_id: \"14Q3\"},\n        {list_id: \"153\"}],\n     offers: [ { targetURL: \"www.qwerty.com\", title: \"25% discount\" }, \n    { targetURL: \"www.abcd.com\", title: \"55% discount\" } ],\n} \nI have used the following code to insert a list id (was successful).\nDB::connection('mongodb')->collection('subscribers')->insert(array(\n                    '_id' => $subscriber->device_id,\n                    'subscriptions' => array('list_id' => $subscriber->list1_id),\n                     ));\nBut when I try to push another list_id as next object it is showing error.\nI used the following code for pushing\nDB::connection('mongodb')->collection('subscribers')\n->push('subscriptions', array('list_id' => $subscriber->list1_id));\nI don't know whether i am right or wrong.\nI need to store the data as the outline given above. \nMy controller is is given below, I create new collection for each subscriber. Problem is before \nreturn \"Subscribed successfully 1\";\npublic function store()\n    {\n```\n       $newsubscriber = Input::json(); \n       //DB::connection('mongodb')->collection($newsubscriber->get('device_id'))->delete();\n       $result = Subscriber::where('list1_id',$newsubscriber->get('list_id'))->where('device_id',$newsubscriber->get('device_id'))->get();\n       if (!$result->isEmpty()) {\n        return \"You are already a subscriber of this List\";\n        }\n        else{\n            $result1 = Subscriber::where('device_id',$newsubscriber->get('device_id'))->get();\n            $subscriber = new Subscriber();\n            $subscriber->list1_id = $newsubscriber->get('list_id');\n            $subscriber->device_id = $newsubscriber->get('device_id');\n            $subscriber->subtype = 1;\n            $subscriber->save();\n        if (!$result1->isEmpty()) {\n            DB::connection('mongodb')->collection($subscriber->device_id)->push('subscriptions', array('list_id' => $subscriber->list1_id));\n            return \"Subscribed successfully 1\";\n        }\n        else{\n            DB::connection('mongodb')->collection($subscriber->device_id)->insert(array(\n            '_id' => $subscriber->device_id,\n            'subscriptions' => array('list_id' => $subscriber->list1_id),\n\n            ));\n\n        return \"Subscribed successfully 2\";\n        }\n\n    }\n\n}\n```\nFirst i have used following API\ncurl -H \"Content-Type: application/json\" -d '{\"list_id\":\"2\",\"device_id\":\"987654321\"}' http://localhost/lemmeknw/public/index.php/api/v1/subscribe/subscribers\nThis returned \"Subscribed successfully 2\"\nbut when I used \ncurl -H \"Content-Type: application/json\" -d '{\"list_id\":\"1\",\"device_id\":\"987654321\"}' http://localhost/lemmeknw/public/index.php/api/v1/subscribe/subscribers\nThere was error \"Something went wrong\"\n. ",
    "Asarew": "When using the model method push the timestamp is not being updated\n. ",
    "Twister915": "+1\n. ",
    "potsky": "Hi guys,\nit is really too simple to implement this in this package I think.\nTo store a file :\n$grid = DB::getMongoDB()->getGridFS();\n$file_id   = $grid->storeFile( $file_path_on_your_server );\nTo retrieve the file :\n$mongo_file = $grid->get( new MongoId( $file_id ) );\necho $mongo_file->getBytes();\nNice isn't it?\n. Yes it is already uploaded to the server by Laravel :\nif ( ( Input::hasFile( 'image' ) ) && ( Input::file( 'image' )->isValid() ) )\n{\n    $path = strval( Input::file( 'image' ) );\n    $id   = $grid->storeFile( $path );\n. ",
    "mediablenders": "How can I use a gribfs record as a hasOne relationship to a document?\n. ",
    "ryangurn": "@potsky do you have to upload it to the server and then save it to grid or can you do it all via the upload?\n. So i am trying to do the same thing with laravel 5.2 and mongodb and I cannot get the DB::statement(\"...\"); to work properly. Any advice?\n. ",
    "rbruhn": "I'm not doing that exactly. As I mentioned above, I'm using the 'Moloquent' alias. Should I change that?\n. Not sure I understand your meaning. Using the alias: \n'Moloquent'       => 'Jenssegers\\Mongodb\\Model',\nWith\nclass MyModel extends Moloquent {\nIs the same as using what you linked to above. Or is it not? Both my models extend Moloquent.\nI'm trying to get the count on how many Subject are not in Expedition.\nphp\nreturn Subject::has('expedition','<', 1)->where('project_id', '=', $projectId)->count();\nphp\npublic function expedition()\n{\n  return $this->belongsToMany('Expedition');\n}\nBoth Subject and Expedition are MySql using a many to many relationship. The above works fine if Subject extends Laravel Eloquent. If I extend Subject using Moloquent (for the SubjectDocs  Mongo relationship), the above returns this error:\nphp\nSQLSTATE[42S22]: Column not found: 1054 Unknown column 'subjects.id' in 'where clause' (SQL: select count(*) from `expeditions` inner join `expedition_subject` on `expeditions`.`id` = `expedition_subject`.`expedition_id` where `expedition_subject`.`subject_id` = `subjects`.`id`)\n. Ahhhhhhh. Sorry. Since Jenssegers\\Eloquent\\Model is the same as the alias, your directions should state extending the alias does not work with MySql.\n. Resubmitted #235 because issue was not resolved.\n. There we go!!!! Thank you. \n. Just to add a note as this might be related:\nI ran into sync issues on newly created records. This is with mysql (expeditions) to mongodb (subjects) models.\n```\npublic function create($data = array())\n {\n        $expedition = $this->model->create($data);\n    $expedition->subjects()->sync($data['subject_ids']);\n    return $expedition;\n\n}\n```\nThe above would enter the related expedition_ids as NumberLong() in MongoDb. The model->create method above returns the new record like \"$user = User::create(array('name' => 'John Doe'));\" does above. Nothing special there.\nIf I retrieved the newly created record using find() as below, then it worked as expected. The expedition_ids are placed in MongoDb as strings: expedition_ids : [\"10\"]\nNot sure why there is a difference, as I dumped out both $result and $expedition and they are exactly the same. However, this is the way it works.\n```\npublic function create($data = array())\n {\n        $result = $this->model->create($data);\n    $expedition = $this->model->find($result->id);\n    $expedition->subjects()->sync($data['subject_ids']);\n    return $expedition;\n\n}\n```\n. Thanks.\n. Yes, it works. I see you changed back to ( ! is_subclass_of) and all my tests work accordingly.\n. Figured this issue out. I was running a different MySql client on production than I was locally. If someone runs into this, be sure to run php5-mysqlnd instead of php5-mysql.\n. Figured out it was an issue with softDeletes.. ",
    "mattbit": "Laravel Validator uses the field id by default while Mongo uses _id, so you have to specify it as the 4th parameter:\n\"unique:collection,field,{$model->_id},_id\"\n. ",
    "darkin1": "Please reopen issue.\nI had that same problem and the answear it's convert $id to int.\nI did something like this\nphp\n'unique:operators,email,'.$id.',_id']\nafter I checked parameters in Illuminate\\Validation\\Validator.php I got\narray:4 [\u25bc\n  0 => \"operators\"\n  1 => \"email\"\n  2 => \"2\"\n  3 => \"_id\"\n]\n2 => \"2\" it's string not numeric\nWhen I converted id $id = (int)$id; in Validator.php, validation worked correctly\nL.V 5.1., L.M. 2.2.3\n. Confirm this, LV: 5.1, Moloquent: 2.2\n. LV 5.1, Moloquent: 2.1 - confirmed\n. Laravel 5.2.\njessenger/mongodb: 3.0.\nPHP 7\nFor fixing Password Reset case, only what you need to do it's to change Provider for Reset Password\nIlluminate\\Auth\\Passwords\\PasswordResetServiceProvider::class,\nto \nJenssegers\\Mongodb\\Auth\\PasswordResetServiceProvider::class,\nAfter that created_at will be convert from array to MongoDate and you will not get the Type error: DateTime::__construct() expects parameter 1 to be string, array given error.\n@jenssegers Maybe could you add this to the documentation? \nCheers ;)\n. Work like a charm \nBeer for you @wasilak  . ",
    "webexpert4rv": "Following worked for me.\n'unique:admin_groups,name,'.$request->get('group_id') . ',_id',. ++1. Same issue :(. ",
    "sjimi": "Okay the correct query is now executed:\njson\n{\n    \"query\": \"twitter.processed.users.find({\\\"data.user_id\\\":{\\\"$in\\\":[\\\"18158758\\\"]}},[])\",\n    \"bindings\": [],\n    \"time\": 0.01\n}\nAnd when dumping hasMany->getResults() there are results. But these do not appear in the model. It stays an empty array. (for example if my relationship was called data(), the result in the model is still \"data\" : [])\n. The query is now fixed. But I try to eager load the relationship using load/with. Apparently then the results of the relationship don't come through.\n. Any update on this? =)\n. ",
    "CammoKing": "Is this not easily added on the Eloquent/Builder because it returns the parent EloquentBuilder which does not have the placeholder for the $options array? Thanks much!\n. I ran into this as well. The proper way to handle the error is not to modify core Laravel files but extend the User.php class that is likely at app/User.php\nInside the file change:\nuse Illuminate\\Foundation\\Auth\\User as Authenticatable;\nto:\nuse YourApp\\Authentication\\User as Authenticatable;\nCreate the file (and folder if necessary) for:\nYourApp\\Authentication\\User.php\nInside that file paste the User.php but modify with your namespace, as follows:\n```\n<?php\nnamespace YourApp\\Authentication;\nuse Illuminate\\Auth\\Authenticatable;\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Model;\nuse Illuminate\\Auth\\Passwords\\CanResetPassword;\nuse Illuminate\\Foundation\\Auth\\Access\\Authorizable;\nuse Illuminate\\Contracts\\Auth\\Authenticatable as AuthenticatableContract;\nuse Illuminate\\Contracts\\Auth\\Access\\Authorizable as AuthorizableContract;\nuse Illuminate\\Contracts\\Auth\\CanResetPassword as CanResetPasswordContract;\nclass User extends Model implements\n  AuthenticatableContract,\n  AuthorizableContract,\n  CanResetPasswordContract\n{\n  use Authenticatable, Authorizable, CanResetPassword;\n}\n```\nThis is the band-aid version and this process should actually probably get worked into the module so you would actually end up editing the User.php to something like (note that this is hypothetical and does not exist): \nuse Jenssegers\\Mongodb\\Authentication\\User as Authenticatable;\nAfter I made these changes I was able to get through the registration/signup flow with a new record being created in MongoDB. The next hurdle I ran into which is a bigger issue is that the authentication identifier that L5 (5.2.x) is looking for is \"id\" and the MongoID is _id. By copying the \"_id\" to \"id\" in the json/bson on the MongoDB document I was able to force it to work testing, but this was just a test to see if the identifier was being pulled as \"id\".\nI'm looking into options to solve for the _id vs id issue which probably means extending the auth driver for Laravel.\nhttps://github.com/laravel/framework/blob/5.2/src/Illuminate/Auth/GenericUser.php#L34\nI will post a follow-up if I'm able to figure out the next piece in this puzzle.\n. @TheeAndre @infernobass7 \nI will try to get the changes I have made to get auth working for 5.2 forked and a pull request in tonight or sometime tomorrow. Their will need to be some documentation updates as well because you have to add a custom user provider for the driver implementation and also a custom generic user implementation because otherwise it tries to reference the wrong string identifier in the users table.\nI will provide an update here asap.\n. @TheeAndre @infernobass7 \nHere is the pull request that is in for these updates:\nhttps://github.com/jenssegers/laravel-mongodb/pull/895\nThis fixes login, logout, and registration for the native Laravel auth. I saw an error with the password reset endpoint which appears to originate from the PasswordBroker class. Probably something needs to be updated there but I don't have time to tackle that at this moment.\nThe error was: UnexpectedValueException in PasswordBroker.php line 238: User must implement CanResetPassword interface.\nIf either of you want to test these updates the documentation in the readme is updated with some instructions on my forked repo. You can pull that and symlink in that repo to your vendor, or just temporarily replace the /vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Auth directory, etc (if this is a show stopper for you at this time). Just thinking if you want to keep moving forward while the pull request is awaiting review.\nLet me know if you have any issues/need any clarification.\n. @c0h1b4 Thanks for that catch, I looked into it last night and realized the naming snafu in the docs as well. I will get the readme updated and pushed. \n. ",
    "gai00": "How about this?\nphp\n// PS: books model has no $collection, and User::embedsMany('Book', 'books').\nUser::first()->books()->raw( function($collection) {\n    return $collection->->aggregate([\n            [\n                '$project' => [\n                    'books' => 1\n                ]\n            ],\n            [\n                '$unwind' => '$books'\n            ],\n            [ // where\n                '$match' => [\n                    'books.no' => [ '$gt' => 0 ]\n                ]\n            ]\n        ])['result']; // return array(4)\n        // get each book\n        // return ...['result'][0][books]\n        // return ...['result'][1][books] ...etc\n});\n. ",
    "rattler72": "I'll give this a try, thanks.\n. I gave this a try and seems a little complicated for my case. I tried creating the other Models but it's now looking for collections for those models. \nIn a nutshell this is what I am doing. \nWhen I update a channel, I use mass assignment by passing in all the values as an array (including the nested values) such as this: \nphp\n$channel->update(Input::all());\nHowever I would just like to override the getter and setter for $channel->theme->image->poster because I have some additional logic I need to process on the poster. I thought there might be a naming convention to use, but I tried getThemeImagePosterAttribute($value) and that didn't work. \n. Thanks Mike, I appreciate your approach, but at the moment I am dumping the entire document into the channel collection. Perhaps if there isn't currently a naming convention for targeting nested attributes, it would be really great to have. \n. ",
    "opb": "More code.\nMigration:\n``` php\n<?php\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nclass CreateTestModelsTable extends Migration {\npublic function up()\n{\n    Schema::create('test_models', function(Blueprint $table)\n    {\n        $table->increments('id');\n        $table->string('name');\n        $table->timestamps();\n    });\n}\n\npublic function down()\n{\n    Schema::drop('test_models');\n}\n\n}\n```\nTable seeder:\n``` php\n<?php\nuse Faker\\Factory as Faker;\nclass TestModelsTableSeeder extends Seeder {\npublic function run()\n{\n    $faker = Faker::create();\n\n    foreach(range(1, 10) as $index)\n    {\n        TestModel::create([\n            'name' => $faker->name\n        ]);\n    }\n}\n\n}\n```\nAnd the table following the seed:\nsql\nmysql> select * from test_models;\n+----+-----------------------+---------------------+---------------------+\n| id | name                  | created_at          | updated_at          |\n+----+-----------------------+---------------------+---------------------+\n|  1 | Jack White            | 0000-00-00 00:00:00 | 0000-00-00 00:00:00 |\n|  2 | Mr. Jerrold Hills PhD | 0000-00-00 00:00:00 | 0000-00-00 00:00:00 |\n|  3 | Elvie Stamm           | 0000-00-00 00:00:00 | 0000-00-00 00:00:00 |\n|  4 | Addie Powlowski       | 0000-00-00 00:00:00 | 0000-00-00 00:00:00 |\n|  5 | Lamar Adams           | 0000-00-00 00:00:00 | 0000-00-00 00:00:00 |\n|  6 | Ozella Rowe           | 0000-00-00 00:00:00 | 0000-00-00 00:00:00 |\n|  7 | Linda Terry           | 0000-00-00 00:00:00 | 0000-00-00 00:00:00 |\n|  8 | Jaquelin Rau          | 0000-00-00 00:00:00 | 0000-00-00 00:00:00 |\n|  9 | Grayce Brakus         | 0000-00-00 00:00:00 | 0000-00-00 00:00:00 |\n| 10 | Mrs. Sabina Bartell   | 0000-00-00 00:00:00 | 0000-00-00 00:00:00 |\n+----+-----------------------+---------------------+---------------------+\n. Awesome, thanks!\n. @Ardakilic awesome, thanks for your work on this. I hope it makes it in!. Hi @Ardakilic I'm having problems with this change in our L4 app. I seem to be having the same issue as https://github.com/LearningLocker/learninglocker/issues/893#issuecomment-287790662, though we're not using LearningLocker. Turning error reporting off allows the insert to work, if not, the document is still inserted, but we don't have an _id to return.\nAny suggestions would be much appreciated!. ",
    "lelu85": "What else do you need? \nSeems that the problem could be at the mongo.so extension maybe.\n. ",
    "sprik": "any news?\n. is there a special configuration for sharding database or all is abstracted by your library?\n. ",
    "zaidhaider": "The above solution ain't sharding, it's making of replica set of secondary servers.. ",
    "dmamills": "+1 You should be able to pull an entire document with a single call.\n. ",
    "JesseObrien": "Hmm, I'm not sure. Is the intent of the $appends to be involved with arrays/json? I picked the property name to be quite explicit in what it's function is.\n. Actually it looks like it is intended to be used for that. I will change that.\nFrom the Laravel docs: \n\nOnce the attribute has been added to the appends list, it will be included in both the model's array and JSON forms.\n. Alright, tried it. It looks like the $appends attribute won't work, the model is doing some work with it before it gets to the toArray() called by this library and is throwing an error that the attribute doesn't exist. This is likely caused by the relations being set up as _key instead of the normal way.\n. Yep I'll change it to $exposed.\n. Awesome, thanks! :+1: \n. I think $expose works. As in \"when I request an object be converted to an array, expose these fields\"\n. \n",
    "RobertCalise": "Also, the query log looks like this:\n``````\n\n$m = Member::find('535a...f69c')->first();\n// object(Member)(\n//   'incrementing' => true,\n//   'timestamps' => true,\n//   'exists' => true\n// )\nDB::connection('mongodb')->getQueryLog();\n// array(\n//   0 => array(\n//     'query' => 'members.find({\"_id\":{\"$id\":\"535a...f69c\"}}, [])',\n//     'bindings' => array(\n// \n//     ),\n//     'time' => 0.40999999999999998\n//   ),\n//   1 => array(\n//     'query' => 'members.find([], [])',\n//     'bindings' => array(\n// \n//     ),\n//     'time' => 0.050000000000000003\n//   )\n// )```\n``````\n. For the record, the issue here is that ->first() screws this all up and I wasn't paying close enough attention.\n. \n",
    "EhsanZ": "No it doesn't work ..\n. @manojnegii90 Hi\nI did it by getting all user ids at first then send it to a new query to get articles.\nI'm sorry I can't find the code since it is from 2014 and I made up a scenario for company policy, I'll write it here if I found it.. Your code should work, I had a similar scenario but without or operator and it did work.\nbtw, I don't know if this is the issue but you added - mistakenly - quotes around $search variable.  . ",
    "manishambashta": "No it does not work. ",
    "Binternet": "Is there a way I can set this timeout on a ::push method?\n. ",
    "sefsinalas": "What if I'm not using query builder but Eloquent instead?\n. +1\n. same error here\n. +1 im needing this too\n. Same error here.\nI solved with franquis comment: https://github.com/jenssegers/laravel-mongodb/issues/1028#issuecomment-259247035\nChange composer.json\nthis:\n\"jenssegers/mongodb\": \"^3.1\"\nto this:\n\"jenssegers/mongodb\": \"3.1.1\"\n. ",
    "lpbarcenas": "Same thing here. I created a model named Site and along with it the database in MongoDB.. I think we still need some configurations fixed?\n. ",
    "siboulet": "It's working now. I think my problem was I was using the standard Eloquent class instead of using Jenssegers\\Mongodb\\Model as Eloquent.\n. Make sure you have \"use Jenssegers\\Mongodb\\Model as Eloquent;\" in your PHP. See https://github.com/jenssegers/laravel-mongodb#eloquent\n. ",
    "veerendratasol": "Hello what will be the steps to use Jenssegers\\Mongodb\\Model as Eloquent\nI have the exact same issue.\n. Thanks for the reply yesterday i got the solution on your repo later :) \n. @siboulet , @jenssegers \nI have added the line as suggested by siboulet but i am facing some issues can you please help me out \nI am using 2 connections in my project. One is mysql and another is mongo. I am creating separate database for each user/company.\nSo while register i need to create 2 database for each type mysql and mongo.\nI have added the line just below the regular Eloquent\nuse Illuminate\\Database\\Eloquent\\Model as Eloquent;\nuse Jenssegers\\Mongodb\\Model as Eloquent; \nUser class is like \nclass User extends Eloquent implements AuthenticatableContract, CanResetPasswordContract {\nI want both the connection to be available in the same model. I can switch the connection to use like\nDB::connection(\"connection name\")\nBut i need to comment the line \nuse Jenssegers\\Mongodb\\Model as Eloquent; \nto use mysql and comment the regular Eloquent to use mongo\nuse Illuminate\\Database\\Eloquent\\Model as Eloquent;\nIs there a way out to include both and then can switch the connection anytime without commenting anyone of them.\nLooking forward to your support.\nSorry if i sound irrelevant i am new to Laravel\n. ",
    "mikehenken": "Often times you will extend a class that implements or uses Eloquent. In those cases there will often times be errors similar to this one #493. I am not sure of the best course of action.\n. ",
    "alexgiuvara": "If someone needs it:\nFor dual connection, mongodb as default and mysql I use a separate folder to store and run sql migrations:\nphp artisan migrate --database=mysql --path=database/migrations/sql/\nphp artisan migrate:rollback --database=mysql --path=database/migrations/sql/\nand php artisan migrate:* for MongoDB collections.\nWhen I revert a migration in this way,  everything works fine.\nTo instruct Migrator where to locate sql folder, you have to add the following line in the boot method of a service provider:\napp('migrator')->path(database_path('migrations/sql'));\nThis will migrate your tables when running tests. DB::collection('products')->truncate(). MongoDB's left join $lookup operator has not been implemented here. Check here how to use advanced aggregations. Schema::connection('mongodb')->drop('mycollection');\nCheck Jenssegers\\Mongodb\\Schema\\Blueprint for supported methods.. The properties are accessible as any regular SQL powered Eloquent model. To answer your questions:\n1. $obj->name;\n2. $obj->created_at\nYou have to implement the magic getters. > The belongsToMany relation will not use a pivot \"table\" but will push id's to a related_ids attribute instead\nSo, users and groups collection must have group_ids and user_ids fields.\nMaybe you want to use embedsMany\n```\nclass User {\n    public function groups()\n    {\n        return $this->embedsMany(Group::class, 'userGroups');\n    }\n}\nUser::first()->groups()->create(['group_details_here']);\ndd(User::first()->groups());\n. @vaishnavmhetre sorry mate, can't help you. I haven't touched mongo for one year already.. I am going to take care of that; I will commit in few days. I pushed to https://github.com/jenssegers/laravel-mongodb/compare/master...alexgiuvara:cast_to_from_decimal128, but Travis jobs fail because Decimal128 has been added in MongoDB 3.4\n`MongoDB\\Driver\\Exception\\ConnectionTimeoutException: Failed to send \"insert\" command with database \"unittest\": socket error or timeout` (MongoDB 3.2)\n. you cannot use native PHP json_* functions to save directly to MongoDB. \ncreated_at is automatic when you save the model and follow Laravel's documentation.. Can't reproduce the problem:\n`php artisan tinker`\n\n\n\nuse Illuminate\\Support\\Facades\\DB;\nDB::collection('mycollection')->where(\"locations.latiude\",35)->get();\n=> Illuminate\\Support\\Collection {#889\n     all: [\n       [\n         \"_id\" => MongoDB\\BSON\\ObjectID {#888\n           +\"oid\": \"598577f3acb9ee0c3b3e7199\",\n         },\n         \"shenase\" => \"12300\",\n         \"name\" => \"ff\",\n         \"vehicle\" => \"van\",\n         \"locations\" => [\n           [\n             \"time\" => \"12:16:59\",\n             \"date\" => \"12/05/1396\",\n             \"latiude\" => 35.738026608826,\n             \"langtiude\" => 51.507290722408,\n           ],\n           [\n             \"time\" => \"12:17:00\",\n             \"date\" => \"13/05/1396\",\n             \"latiude\" => 35.738026608826,\n             \"langtiude\" => 51.507290722408,\n           ],\n. Please share with us the actual query you want to run.. The `_id` field is the default key in mongo, **unless you use capped collections**.\nBeing an immutable field, you are sticked with it. Check MongoDB documentation.. Change your default database connection name in `config/database.php`:php\n'default' => env('DB_CONNECTION', 'mongodb'),\n``\nThe piece of code you're trying to test doesn't say anything to me \nI am trying the code below in my routes file web.phpget(); var_dump($entries);** });and I am getting error. Try to useSchema::collectioninstead ofSchema::table`. Also, would be very helpful to post the entire migration here.. duplicate of https://github.com/jenssegers/laravel-mongodb/issues/359. \n\n\n",
    "chazuka": "Ah found the problem $with attributes trigger those, probably better to enforce embedsMany to remove related model from $with attributes in parent model when exists.\n. ",
    "jaxyeh": "Ok, I am going to skip paginate() function and go forward with manual skip() and take() callbacks, so this issue can be ignored. Please go ahead close it if you don't think it should require your attention. Thanks.\n. ",
    "garthos": "I get a bad result, when I use something like : \nPackage::find($id)->with('company'); \nCompany is a relation defined like that : \npublic function company()\n    {\n        return $this->belongsTo('Company' , 'company_id');\n    }\nI get a result but it's not the correct one, it's the wrong id.\n. From my point of view , it's not logic that it's work for multiple result and not for one,\nthe objective is also to write less code lines.\n. ",
    "lenyapugachev": "Hello, @jenssegers \nNot sure if it's issue of this package, but I'm craving for your help.\nI'm using multiple db connections and the main is mysql, so I'm trying to get GridFS like this:\n$grid = DB::connection('mongo')->getMongoDB()->getGridFS();\nBut it's throwing \"Call to undefined method MongoDB\\Database::getGridFS()\". I did read #838, but I've checked phpinfo and pecl drivers mongo and mongodb are up to date.\nSo I'm stuck. Where should I dig now?\n. ",
    "lindelius": "Note: The getGridFS() function is no longer available in the new PHP MongoDB driver, which means that the code snippets above does not work if you have migrated to the new driver. In order to use GridFS with the new driver you will either have to import and use the MongoDB\\GridFS classes from the official PHP library, or use the PHP driver classes directly.\n. Why do you need the sub-documents to extend the Eloquent model?. Do your sub-documents also live in their own collection, or is the data just saved on the parent models?\nIf yes (they have their own collection), then you're going to need to keep the IDs to be able to keep the normalized data up-to-date with the original document.\nIf no, then there's no reason to use Eloquent models to represent the sub-documents and the embed-methods to add them to the parent model.. Can we get this reviewed and merged, please? @jenssegers . Thanks!. Can we get a review and merge on this one, too? @jenssegers . ",
    "JoeyHoutenbos": "It is possible: https://github.com/jenssegers/laravel-mongodb/issues/826#issuecomment-290362789. Thanks @lucknerjb this solves the problem. I think the issue can be closed..?!\n. @lucknerjb I still have this problem when using nested embedsMany relationships. Do you have an solution for this?\nFor example:\nForm ==> embedsMany ==> Fields ==> embedsMany ==> Subfields\n. @digitalturtle I ended up overriding/extending the toArray-function in my BaseModel:\n```\npublic function toArray()\n{\n    $data = parent::toArray();\n// Transform IDs\narray_walk_recursive($data, function(&$item, $key) {\n    if ('_id' === $key && is_object($item) && get_class($item) === 'MongoId') {\n        $item = (string)$item;\n    }\n});\n\nreturn $data;\n\n}\n```\nBe aware that this uses the deprecated MongoId (http://php.net/manual/en/class.mongoid.php). \n. @jenssegers is this fixed in branch 4.2? Because I'm having this problem in Laravel 4.2 at the moment..\n. Would love to see this feature =)\n. Eager loading does makes sense for this issue: https://github.com/jenssegers/laravel-mongodb/issues/313\nI also want to eager load nested relationships, but this is indeed not working =(\n. A workaround for this problem is by defining a accessor in the Sublesson class.\nYou already have the embedsMany relation:\npublic function packets()\n{\n    return $this->embedsMany('Packet');\n}\nDefine an accessor like this to solve the problem with the IDs:\npublic function getPacketsAttribute()\n{\n    return $this->packets;\n}\n. This should work in MongoDB PHP Library version 1.1.x:\nDB::getMongoDB()->selectGridFSBucket();\nThis will return an instance of MongoDB\\GridFS\\Bucket. Next steps can be followed here: https://docs.mongodb.com/php-library/master/tutorial/gridfs/. @jenssegers any update about the Passport support?. @deividaspetraitis , this fork has an Service Provider which fixes the problems: https://moloquent.github.io/master/#passport. @deividaspetraitis I see what you mean. Is there any reason not to solve this problem using the method provided by Moloquent?\n@jenssegers Would be awesome to have Passport support as soon as possible, so maybe you can help us out?. ",
    "plcosta": "@laojin you can use this code:\n```\npublic static function getNextSequence($collection, $field) {\n           $seq = DB::getCollection($collection)->findAndModify(\n                array('_id' => $field),\n                array('$inc' => array('seq' => 1)),\n                null,\n                array('new' => true, 'upsert' => true)\n           );\n       return $seq['seq'];\n    }\n\n```\n. ",
    "franzliedke": "Oh, I just noticed that you will definitely resolve the database object in your boot() method. That could be optimized by either moving the previous code from register() to boot() or by moving the static calls in boot() to the callback that is passed to resolving(). Hope that makes sense.\n. @jenssegers Sorry, was on vacation. That was the right way to fix it then. =)\n. ",
    "cerbero90": "Even better :)\nI close here\n. ",
    "MaxShv": "It treats the strings as numbers because of the '+' sign.\nIt should be written as\n$reminder['created_at'] = $reminder['created_at']['date'] . ' ' . $reminder['created_at']['timezone'];\n. ",
    "aleplusplus": "when these changes will be released\n. I'm running everything locally so it should take my time zone \n$ date\nvie mar  6 11:03:36 ECT 2015\nbut is keeping the default UTC.\n. ",
    "mhddurrah": "I've encountered the same issue.\n. \nIt's solved now\n. not worked using the second way. :(\n. I have not found this issue, added Jenssegers\\Mongodb\\Eloquent\\SoftDeletingTrait not the laravel one, deleted an entry and found the deleted_at key, listing all entries via all(); returns all except with deleted_at.\nso it worked for me.\n\n. you missed the operator\ntry:\n\n$login_details = LoginSection::where('email', '=', $username)->get();\n\n. Thanks a lot. solved :)\n. It was 2.0.3.\n. ",
    "codeclown": "@mikebronner It might be related, however I think it'd be strange if there is no way at all to update an embedded document. So I think there must be, but maybe it's not documented.\nI would love to help with refactoring this great package, if I had enough knowledge about the inner workings of Eloquent and MongoDB.\n. @jensk That did the trick.\n. ",
    "that0n3guy": "I'll test that out on monday.  \nIn the upcoming changes, are you going to allow for something like $quote = Quote::find($id)?  This would essentially do 2 steps:\n$diqr = Diqr::where('_quotes._id', '=', new MongoId($id)); // typo's probably, you get the idea\n$quote = $diqr->quotes()->fine($id);\n. Gotcha, thanks for the quick reply.\nLast question.  Is there a way to \"fake\" that (my last post) in the model.  So if I were to call $quote = Quote::find($id) my model would return what I want, w/o completely taking over the find() method.\n. Ok,   I'll just have to \"hack\" my app for now.  From everything I've seen, I like the direction of v2.  Embeded docs are great (sometimes).\n. ",
    "Prakash-Threesquare": "Hi nuwave,\nI got the prob like, when i try to migrate its showing this \" [InvalidArgumentException]\nUnsupported driver [mongodb] \".. Can u suggest me with the solution pls\n. Hi any1 there?? Thank you\n. ",
    "jalon726": "in config/app.php, add mongo provider . ",
    "joe2tw": "Hi jenssegers,\nThank you for your reply.\nI got an error message:\n\nMongoCursorException (17287) \nlocalhost:27017: Can't canonicalize query: BadValue unknown operator: $not regexp'\n\nWhether I tried\n\n$inventories = Inventory::where('item', 'not regexp',  \"/^p./\")->take(10)->get();\n\nor\n\n$inventories = Inventory::where('item', 'not regexp',  new MongoRegex(\"/^p./\"))->take(10)->get();\n\n\nThis works fine:\n\n$inventories = Inventory::where('ip', 'regexp',  new MongoRegex(\"/^p.*/\"))->take(10)->get();\n\n. ",
    "vijay-dhokrat": "Hi @jenssegers what will be the max limit for ->take(10)\nI want all data for regex. ",
    "cachila": "Sorry for reopening this but I am having the same problem.\n->distinct('id_str')->count() does not return the expected.. I could solve it by using\nDB::connection('mongodb')->collection('col')->raw(function($collection) {\n            return $collection->aggregate(\n                        ...\n            );\n)};\nThe query I used was based in this great article http://www.forwardadvance.com/course/mongo/mongo-aggregation/aggregation-count.\nI would recommend to test the query purely in mongo and then convert the JSON objects to key => values arrays.\nHope you make this work.. ",
    "diogolast": "I am having the same problem, the solution I am using is \n$count = Model::distinct('status.user.id_str')->get();\necho count($count);\nbut this is not performatic. Anyone founds a properly solution???. @cachila thanks, saved my day this great article.. ",
    "nateemerson": "Hey @jenssegers, this issue has cropped up again for me and I was wondering if you had any knowledge of the root cause. In further manifestations, it happens with any embedded document that itself has an array on it. It seems nearly impossible to clear/delete an array on an embedded object. I've tried setting it to an empty array, using unset() to unset the array entirely, and using pull to explicitly remove items from the array. \n. @JDurrah I would recommend you elaborate on your question a bit more. Are you trying to get the values of an attribute that is itself an array? (if this is the case, you should be able to merely access the attribute and it will come out as an array). Alternatively, are you trying to get all values for a single attribute across a collection? I'm a bit confused by what you are actually asking here...\n. You are correct! Forgot to update my composer.json to the latest tag. Thank you @jenssegers! Love your work!\n. ",
    "rmb938": "I am having the same exact issue. \nAlso to go off of the example given. When I add an Item to a Location without the \"items\" key existing it creates the key as a document containing sub documents instead of a list containing sub documents. \nSo I end up with\n{\n    locations: [\n        {\n            items: {\"0\": {}, \"1\": {}, \"2\": {}}\n        }\n    ]\n}\nInstead of \n{\n    locations: [\n        {\n            items: [{}, {}, {}]\n        }\n    ]\n}\nAlso when deleting an item using\n$item->delete()\nthe item is deleted however a previous item in the list is duplicated to fill in the space.\n. After googling around a bit I was able to find this \nhttp://stackoverflow.com/questions/14860247/why-is-my-php-array-being-saved-to-mongodb-as-an-object-then-being-retrieved-as\nThis could be the issue but I don't know enough about php to figure out how to fix it my self. Any idea? @jenssegers \n. Ok so I found the fix. It seems like you have to save the parent document after you save the child document. You also have to specifically set the array to a empty array for it to insert into mongo as an array instead of an object.\n. ",
    "Oleg-Arkhipov": "@jenssegers why did you close this issue?\nDo you consider this feature unnecessary at all or is its implementation would be too hard?. +1. Yes, it works only that way. You can just check the query which is made when you call $parent->children, it is something like:\nchildren.find({\"parent_ids\":\"parent_object_id_here\"}. You may also need migrations to create some initial data which your application requires to work.. At least there is a lack of issue management. There are a ton of issues here, and a lot of them are plain questions (some of them are really old and it is unlikely that authors are still waiting for answers), duplicated issues, etc.\nLabels are barely used too (to distinguish bugs and enhancements, to manage priorities, etc).\nI think that these problems should be fixed for a serious product like this.. ",
    "darkeus": "i have the same problem, then i tried write a session Store with SuperClosure class to serialize, but it seems it failed too, got exception cant serialize an array, it seems my closure is in the depth like @ThibaudDauce ,\n@jenssegers  do you have any workaround for this?\n. @rms2219 i have the same issue too, do u already get any workaround? now i am browsing the source code trying to check where is the closure. do you know where is the closure located?\n. @jenssegers i just tried edit the code, in the class EmbedsOneOrMany, i comment all line of code with setParentRelation($this); and now the serialization is working, the closure are contains at the parentRelations attribute, and without parentRelations it is work. \n. @jenssegers yep, i think i found the fix =D, i just wanna ask, what is the parentRelation attribute use for? since after i comment it, all work fine for me in embbededMany Relation. thanks for your hard work anyway\n. @jenssegers i see, then this is not a fix. if i comment this out. it will broke the saved feature, btw jens, how can i contribute? maybe i can help with some bug fixing. since i do my project on mongodb now\n. @jenssegers  jens i think i got an idea, how about we implement __sleep magic method in the model class like this\npublic function __sleep(){\n     return array_diff(array_keys(get_object_vars($this)), array('parentRelation'));\n}\nthis code work for me, it still persist relations attribute, so it will cached, only parentRelation set to null before serialization, and if after unserialize we need to call save() method, it still working. it will recreate parentRelation attribute when calling save();\nhow about you add this to your source for next release? =D\n. @kojuka i dont know if you already fixed this. but it seems because on your class Menu has a BelongsTo Relationship, on embedsMany relationship automatically add parent relationship, try comment the \npublic function website()\n{\n    return $this->belongsTo('Website');\n}\nmaybe this will work.\n. for embedOne problem i think i solved it already so ill share my fix\nin the file \\Jenssegers\\Mongodb\\Relation\\EmbedOne.php\nadd the function i write below to the file EmbedOne.php\nthen you will be able to use eagerLoading\n```\nclass EmbedsOne extends EmbedsOneOrMany {\n/**\n * Shorthand to get the results of the relationship.\n *\n * @return Jenssegers\\Mongodb\\Eloquent\\Collection\n */\npublic function get()\n{\n    return new Collection($this->getResults());\n}\n/**\n * Get the embedded records array.\n * dn additional because null will failed on match function\n * @return array\n */\nprotected function getEmbedded()\n{\n    return parent::getEmbedded() ?: [];\n}\n\n}\n```\nbut to be able use silent save feature please see issue #488  i explain how to fix it too \n. yup this is gud, it has aggregation feature that i looking for maybe you can look at how the aggregation works. and i dont have any experience with this package, but ill try soon \n. @daPhantom i dont know why you u make a make a function with the same name as your attribute, but what i can say is, __get magic in model will call Model->getAttribute('features');\nthat have a function like this\n`public function getAttribute($key)\n{\n              $inAttributes = array_key_exists($key, $this->attributes);\n```\n    // If the key references an attribute, we can just go ahead and return the\n    // plain attribute value from the model. This allows every attribute to\n    // be dynamically accessed through the _get method without accessors.\n    if ($inAttributes || $this->hasGetMutator($key))\n    {\n        return $this->getAttributeValue($key);\n    }\n// If the key already exists in the relationships array, it just means the\n// relationship has already been loaded, so we'll just return it out of\n// here because there is no need to query within the relations twice.\nif (array_key_exists($key, $this->relations))\n{\n    return $this->relations[$key];\n}\n\n// If the \"attribute\" exists as a method on the model, we will just assume\n// it is a relationship and will load and return results from the query\n// and hydrate the relationship's value on the \"relationships\" array.\nif (method_exists($this, $key))\n{\n    return $this->getRelationshipFromMethod($key);\n}\n\n```\n}`\nnow you see there is \nif (method_exists($this, $key))\n{\n    return $this->getRelationshipFromMethod($key);\n}\nthat will check your model class when u call $this->features , the selection code above will add relations attribute to model, hope it answer your question =D\n. @daPhantom sorry i have a few code that i forget to post here, the function getAttribute i post above is from \\Illuminate\\Database\\Eloquent\\Model.php and yet i dont notice there is a override function in \\Jenssegers\\Mongodb\\Model ,here the code\n```\n/\n * Get an attribute from the model.\n \n * @param  string  $key\n * @return mixed\n /\npublic function getAttribute($key)\n{\n// Check if the key is an array dot notation.\nif (str_contains($key, '.'))\n{\n    $attributes = array_dot($this->attributes);\n\n    if (array_key_exists($key, $attributes))\n    {\n        return $this->getAttributeValue($key);\n    }\n}\n\n$camelKey = camel_case($key);\n\n// If the \"attribute\" exists as a method on the model, it may be an\n// embedded model. If so, we need to return the result before it\n// is handled by the parent method.\nif (method_exists($this, $camelKey))\n{\n\n    $relations = $this->$camelKey();\n    // This attribute matches an embedsOne or embedsMany relation so we need\n    // to return the relation results instead of the interal attributes.\n    if ($relations instanceof EmbedsOneOrMany)\n    {\n        // If the key already exists in the relationships array, it just means the\n        // relationship has already been loaded, so we'll just return it out of\n        // here because there is no need to query within the relations twice.\n        if (array_key_exists($key, $this->relations) && !$this->serialized)\n        {\n            return $this->relations[$key];\n        }\n\n        // Get the relation results.\n        return $this->getRelationshipFromMethod($key, $camelKey);\n    }\n}\n\nreturn parent::getAttribute($key);\n\n}\n```\nyou see in moloquent it is checking the method first then return the method value if exists, but on \\Illuminate\\Database\\Eloquent\\Model.php getAttribute() it will check the attribute first instead of method_exists function, this is because moloquent extends from \\Illuminate\\Database\\Eloquent\\Model.php and using it parent function at the end of function , instead of adding some logic like its parent \n```\n$inAttributes = array_key_exists($key, $this->attributes);\n// If the key references an attribute, we can just go ahead and return the\n// plain attribute value from the model. This allows every attribute to\n// be dynamically accessed through the _get method without accessors.\nif ($inAttributes || $this->hasGetMutator($key))\n{\n    return $this->getAttributeValue($key);\n}\n// If the key already exists in the relationships array, it just means the\n// relationship has already been loaded, so we'll just return it out of\n// here because there is no need to query within the relations twice.\nif (array_key_exists($key, $this->relations))\n{\n    return $this->relations[$key];\n}\n```\nbefore the\n```\n    $camelKey = camel_case($key);\n// If the \"attribute\" exists as a method on the model, it may be an\n// embedded model. If so, we need to return the result before it\n// is handled by the parent method.\nif (method_exists($this, $camelKey))\n{\n\n    $relations = $this->$camelKey();\n    // This attribute matches an embedsOne or embedsMany relation so we need\n    // to return the relation results instead of the interal attributes.\n    if ($relations instanceof EmbedsOneOrMany)\n    {\n        // If the key already exists in the relationships array, it just means the\n        // relationship has already been loaded, so we'll just return it out of\n        // here because there is no need to query within the relations twice.\n        if (array_key_exists($key, $this->relations) && !$this->serialized)\n        {\n            return $this->relations[$key];\n        }\n\n        // Get the relation results.\n        return $this->getRelationshipFromMethod($key, $camelKey);\n    }\n}\n\n```\nso yeah to avoid confusion, you better use $this->attribute['features'] instead of $this->features, too much magic called when you call $this->features \n. @daPhantom yep $this->key is  better used outside of the Model class, well you can use the $this->key but you should know what it do, then again if you want to make a function that will act like an attribute you better use acessor way getKeyAttribute($value) , using this will make your model accessible like $model->key, it's on getAttribute() magic logic. \nAnd if you actually want to make features as a function then yes to call an attribute inside model class better use $this->attribute['key'], but if you actually want to make features() function as accessor then that is a wrong way. \nsorry my bad english =p\n. @daPhantom oh actually in your case you can write it like this \npublic function features() {\n    return array_merge($this->relationOne->features, $this->attributes['features']);\n}\nbecause relationOne magic wont affect your current model magic, unless your relationOne have another features() function, and actually i dont know magic is CPU intensive. from the magic logic it is quite good and direct, maybe the \"intensive\" refers to how PHP engine call the magic function?\n. @daPhantom  i see that's answer all my question =) good luck \n. @ohmance sir i want to ask how do you access your relation? is it $model->_notes; or $model->notes?\nAFAIK the function of getAttribute wont execute _notes method if you call your $model like this \n$model->notes;\nthe code of\nreturn $this->embedsMany('ContactNote', '_notes');\nwil make your model accesible like this\n$model->notes\nand it's still call _notes in your data model \nCMIIW =)  \n. ",
    "cleanunicorn": "I have the same problem. Can you confirm if this is a library bug?\n. This fixed it for me.\n. It seems the issues are private now. The link I posted above is dead.\nDoes anyone know what happened with the Laravel issues? Where are they located now?\nEDIT:\nJust read this http://laravel-news.com/2014/09/laravel-removes-github-issues/\n. ",
    "bipinu": "Dang! It took me another day but I finally figured it out. \nThis particular behavior is displayed by Eloquent as well, and isn't limited Moloquent. However, this is not a bug with the library. Closing the issue.\nJust for the record, if the your Model has a constructor, it needs to call the parent's constructor (Moloquent, Eloquent, etc.). This is because PHP does not implicitly call parent constructor, if you define one: http://php.net/manual/en/language.oop5.decon.php\n. +1\nJust spent the last hour battling with this issue. \n. ",
    "ErikPartridge": "Whoops. Just must have missed it. Packalyst reports MIT license. Thanks!\n. ",
    "sstativa": "It looks like I was wrong. This is not a bug, I messed up with ids.\n. I don't think this is a bug. Think about fields() as a set of where clauses. In this case your query looks like (this is \"pseudo code\")\nfields()\n    AND (label = question_$randomNum1)\n    OR (label = question_$randomNum2)\n    OR (label = question_$randomNum3)\nYour query should be\n$questions = $current_section->fields()\n    ->where(function($query) {\n        $query->orWhere('label', 'question_$randomNum1');\n        $query->orWhere('label', 'question_$randomNum2');\n        $query->orWhere('label', 'question_$randomNum3');\n    })\n    ->get();\n. I'm not sure what do you suggest.\nAuth::check() will pull the whole document from MongoDB on each request. If my users' records are 1MB on average that means on each request Laravel will pull 1Mb from Mongo.\n100 req/seconds = 100MB/s from Mongo. \nProbably there should be a way for laravel-mongo, to select a limited set of fields on Auth and a full document on a request. \nAs for myself, I created a custom UserProvider that uses only a limited set of fields and caches that record in Redis. Then I use something like this User::findOne(Auth::id()). It's ugly, but it works and does not \"waste\" a lot of memory. I assume the issue can be closed. . ",
    "GoldenZero": "the problem $query->lists($relation->getHasCompareKey()) is array or \"MongoId\" objects \n. @jenssegers @andrewryno have you looked at this? :+1: \n. ",
    "guicunha": "$proximos = Perfil::raw(function($collection)\n        {\n           return $collection->aggregate(\n               [\n                '$geoNear' => [\n                    'near' => [\n                        'coordinates' => [-19.927954,-43.938203]\n                    ],\n                    'sphercial' => 'true'\n                ]\n            ]);\n        });\nInvalidArgumentException in Aggregate.php line 93:\n$pipeline is not a list (unexpected index: \"$geoNear\")\n. return $collection->aggregate([\n               [\n                '$geoNear' => [\n                    'near' => [\n                        'coordinates' => [-19.927954,-43.938203],\n                        'type' => 'Point'\n                    ],\n                    'distanceField' => 'distancia.calculada',\n                    'spherical' => true\n                ]\n            ]]);\nbut return nohing in CLI returns \n\ndb.perfils.aggregate({\n...             $geoNear: {\n...                 near: {\n...                     coordinates: [-19.927954,-43.938203],\n...                     type: 'Point'\n...                 },\n...                 distanceField : \"distancia\",\n...                 spherical: true\n...             }\n...         });\n{ \"_id\" : ObjectId(\"57d086a7269f335d067af2df\"), \"contato\" : { \"cep\" : \"30150150\" }, \"localizacao\" : { \"coordinates\" : [ -23.555141, -46.635746 ], \"type\" : \"Point\" }, \"updated_at\" : ISODate(\"2016-09-07T21:29:11.608Z\"), \"created_at\" : ISODate(\"2016-09-07T21:29:11.608Z\"), \"distancia\" : 413277.8945996578 }\n. \n",
    "RafaelPlantard": "'gps_location' => [\n    '$nearSphere' => [\n        '$geometry'    => [\n            'type'        => 'Point',\n            'coordinates' => [\n                $latitude,\n                $longitude\n            ]\n        ],\n        '$maxDistance' => $rangeInKm * self::meters_per_km\n    ]\n]. 'property_name' => [\n    '$nearSphere' => [\n        '$geometry'    => [\n            'type'        => 'Point',\n            'coordinates' => [\n                $latitude,\n                $longitude\n            ]\n        ],\n        '$maxDistance' => $rangeInKm * self::meters_per_km\n    ]\n]. 'property_name' => [\n    '$nearSphere' => [\n        '$geometry'    => [\n            'type'        => 'Point',\n            'coordinates' => [\n                $latitude,\n                $longitude\n            ]\n        ],\n        '$maxDistance' => $rangeInKm * self::meters_per_km\n    ]\n]. My bad \ud83d\udc4e . ",
    "skeezus": "If anyone is having problems with their index, make sure you know if your database has been configured using GeoJSON or Legacy Coordinate Pairs. As you might suppose, GeoJSON is an object that can have several properties whereas legacy coordinate pairs is just a pair of coordinates.\nMore on this: https://docs.mongodb.com/manual/reference/glossary/#term-legacy-coordinate-pairs \nI've inherited a database with legacy pairs and below is some code which may help. I haven't tested it extensively but it appears to be working. Scroll to the very bottom of this mongo doc for the function that got me on the right track: https://docs.mongodb.com/manual/reference/operator/query/near/#op._S_near\n$query = Shop::raw(function($collection)\n                {\n                    return $collection->find([\n                        'loc' => [\n                            '$near' => [\n                             -105.0376084, \n                             39.7620472\n                            ]\n                        ]\n                    ]);\n                });. @usamamashkoor I did not. Current fix is to put the fields I need from the database query into an array before returning the response to the client. . @har256b How do you force mongo to use that php method?...I'm getting the following error: \n\"Call to undefined method MongoDB\\Driver\\Cursor::fields()\". ",
    "ryuheiyokokawa": "I'm having the same issue using HHVM-3.2/3.3 with Mongofill-hhvm.  Funny enough, it never happens on PHP55.\nI'm starting to think that if the parameters are copied (so no longer a reference) earlier on in the code somewhere.  Have you figured this out?\n. ",
    "bedeoverend": "@ryuheiyokokawa  I had this same issue, looks like its a caveat - unfixable issue - of Mongofill. I haven't tried it, but perhaps 10gen-labs driver would work better? \nBasically its because laravel-mongodb calls the driver without passing a reference - that's the way you're supposed to do it with the normal PHP mongo driver (see PHP's docs, but mongofill works in the opposite. A hacky fix is to insert this function into the Jenssegers Collection class:\n/**\n     * Handle specific insert call.\n     * Cannot be handled dynamically because a reference needs to be passed\n     * Only use for MongoFill, won't work otherwise\n     * @param  array   $document\n     * @param  array   $options\n     * @return mixed\n     */\n    public function insert(&$document, array $options = [])\n    {\n        return $this->__call('insert', array(&$document, $options));\n    }\nwhich will pass it to mongofill by reference, and thus add the MongoID object. It will, however, break for the default Mongo driver for PHP.\nBe interested to know if you found a solution to this.\n. ",
    "StarpTech": "Does exist any clean solution for this?\n. ",
    "domagala": "Any luck?\n. Same here, is there a planned fix? \n. Issue exists with PHP 7.0 and MongoDB 1.2.5 driver. Had to downgrade to 3.2.0 and its working.. ",
    "fuzeboxsoftware": "@Pezmc did you ever figure out how to resolve this issue?\n. @razzbee that is correct. mongofill was still on composer. Removing this from composer did the trick.\n. Using laravel 4.2 and have \"jenssegers/mongodb\": \"2.0.*\" set to match laravel version.\nThis code was working before but had to reinstall the server setup. Not sure if I am missing a configuration on mongo (which I am new to) or what.\n. ",
    "Pezmc": "Oh hey Frank, yes! It was something to do with having the wrong version of the Mongo extension for PHP installed. I think one might come bundled with it, BUT it's not the right version. Download a new copy (or try one different to what you already have) and you should be grand!\n. ",
    "csiltanen": "@Pezmc thanks buddy! Great to see you! Hope all is well. :) \n. ",
    "razzbee": "hello , but this problem is still in hhvm mongofill .\n. If I am not getting you wrong, I am not using the composer version of mongofill, I compiled the binary version.so I dont have mongofill in composer.\n. have you also tried eloquent with the ::create(array) method ?\n$insert = \\App\\User::create([\n\"role\" => new \\MongoId($roleId),\n\"title\" => $request->title,\n\"category\" => $request->category,\n\"__v\"  => 0\n]):\nmake sure you set the database connection in User.php model to mongodb \n. ",
    "billy124": "Have tried with and without mongofill however still getting this error, any suggestions?\n\"Parameter 1 to MongoCollection::insert() expected to be a reference, value given\"\ncode\n$user = new User();\n        $user->role = new \\MongoId($roleId);\n        $user->title = $request->title;\n        $user->category = $request->category;\n        $user->__v = 0;\n        $user->save();\n. @SuperSephy nice one thats a good workaround\n. ",
    "gdeulkar": "@ryuheiyokokawa this worked out for me with mongofill and hhvm . but this works only for inserts\nDB::connection('connection_name')->selectCollection(\"collection_name\")->insert(arrray()).\nFor other operations DB::connection('connection_name')->collection(\"collection_name\") works well\n. ",
    "WenXuanYuan": "\n       where('position', 'near', [\n            '$geometry' => [\n                'type' => 'Point',\n                'coordinates' => [73, -51],\n            ],\n            '$maxDistance' => 10000000,\n        ])\n\n. \ndb.places.find(\n...    {\n...      location:\n...        { $near :\n...           {\n...             $geometry: { type: \"Point\",  coordinates: [ -73.9667, 40.78 ] },\n...             $minDistance: 1000,\n...             $maxDistance: 5000\n...           }\n...        }\n...    }\n... )\n\n. ",
    "hansvn": "Ok, it seems this pull request is redundant...\nWhen you just save a value from an input field, just explicitly cast the value to an integer (or double or float or ...) and the value will save just fine as a NumberLong (or just the double value) in the document.\nExample: \nphp\n$age = \"23\";\n$user = new User();\n$user->age = (int) $age;  // this will be a NumberLong(23) in the document\n$user->height = 1.82;  // this will be stored in the document as {\"height\" : 1.82}\n$user->height = floatval(1.82);  // explicitly set the value as a float\n$user->save();\nMaybe it's not a bad idea to add this to the docs.\n. ",
    "omanizer": "I currently have to use mutator functions to accomplish something like this.  The model has a couple of methods that make life easier to do this however \nphp\n$this->asDateTime(string)\nand\n$this->fromDateTime(string)\n+1 for being able to specify nested properties as dates like root level date properties can be.\n. You could just pull the MongoClient from the DB object and then do the exact same thing:\n$db = DB::connection('mongodb')->getMongoClient();\n$db->command(['mapreduce' => .... ]);\n. @darkeus I agree what what you're saying as the camel_case() method strips out the preceding underscore, however it's impossible for me to interchange \"notes\" and \"_notes\" as I maintain a unique schema for every account and store such keys for each account.  A preceding underscore in my case typically indicates a system maintained field.  Long story short I need to be able to support both '_notes' and 'notes' in the case that one of my users utilizes the field 'notes' while the system is also storing data in '_notes'.\n. Just as an update on this, I'm currently having to actually create a _parentGetAttribute() method in my class that contains the contents of Mongodb/Model's getAttribute method as well as Eloquent/Model's getAttribute method with the above $camelKey code changed.  This works and I'm able to accomplish what I need without modifying any vendor code, but it does add 80 extra lines to my model and force me to watch for changes within these two vendor methods in the future.\n. This may be related.... I was attempting to use clockwork/debug bar to show all my database queries.  I noticed that I wasn't getting anything in the listen callback, or was DB::getQueryLog() yielding anything.  I found that the log was disabled and I just needed to enable it.\nDB::enableQueryLog();\nBoth the callback and the query log array are working after this.\n. Yes, I am only using a mongo db connection in this site.  I assume that since Moloquent is a superclass of Eloquent, logging is probably being handled in the Eloquent code since many of the Moloquent methods build off of the Eloquent ones.\n. It's been on my task list but I haven't gotten to it yet.\n. ",
    "2014030439": "could you specify i have the same problem. ",
    "wppd": "okay, I trace down and find out the query\n{ \"$and\":[{\"name\":\"Network2\"},{\"user_id\":2}]}\nhowever, my mongodb record\n{\n               \"_id\": ObjectId(\"53fefd7f6c6d4875448b4572\"),\n               \"name\": \"Network2\",\n               \"user_id\": \"2\" \n            }\nthe 2 should be string rather than integer.\nso, it should be Network::where('name','Network2')->where('user_id','2')->first();\n. well, it leads to another problem, why the \"user_id\" isn't stored as integer\n```\n    $user = \\User::find(2);\nforeach(range(1, 10) as $index)\n{\n    $network = new \\Network(['name'=>'Network'.$index]);\n    $user->networks()->save($network);\n}\n\n```\nInterestingly, associate() will store it as integer.\nokay, I think I need to dig into the source code again.\nCurrently, I just \n$network = new \\Network(['name'=>'Network'.$index,'user_id'=>2]);\n $network->save();\n. I'm trying to delete user's product id 1.\nas you can expect, this method deletes all the products of the user.. rawurlencode($dsn_string) causes problem if not using unix socket....... ",
    "obahareth": "I was trying to get something optimized for production and lose those lines. I'll try to re-create the issue on a development environment soon.\nI do believe the first error was something to do with Laravel doing something like \nuse LaravelCollection as Collection // LaravelCollection isn't an actual class name\nand that conflicted with one of your classes.\n. ",
    "olegpopadko": "Your are right. But if we add field to $dates = ['remind_date'] array. We don't have such functionality. \nQuery like\nphp\n$query->whereBetween('remind_date', [new DateTime(\"1981-01-01 00:00:00\"), new DateTime(\"1982-01-01 00:00:00\")]);\ndoesn't return any results, but query\nphp\n$query->where('remind_date', '>=', new DateTime(\"1981-01-01 00:00:00\")->where('remind_date', '<=', new DateTime(\"1982-01-01 00:00:00\"));\ndoes. Because in \\Jenssegers\\Mongodb\\Query\\Builder::compileWheres we have convert DateTime to MongoDate for value, but not for values. Maybe this conversion should be removed? (I added conversion for values).\nPlease, correct me if I'm wrong.\n. ",
    "waterlink": "LGTM\n. ",
    "gidomanders": "You could use https://github.com/bmcmurray/ardent-mongodb, it's an Ardent fork that uses Moloquent.\n. That's because this plugin doesn't fully support L5 yet. #398 \n. Using db.version() in the console gives me 2.6.8. Using mongod --version results in \ndb version v2.6.8\n2015-04-12T15:18:25.341+0000 git version: 3abc04d6d4f71de00b57378e3277def8fd7a6700\n. Any update on this?\n. db.schools.find({\"name\":{\"$regex\":/haag/i}}) works, you see there's no quotes around the expression.\n. http://laravel.io/forum/02-08-2014-difficulty-installing-laravel-getting-error-mcrypt-php-extension-required\n. And it is trying to install laravel/framework v5.0.27 instead of Laravel 4 like you asked in the title of this issue.\n. ",
    "arcadas": "+1\n. I round the problem by this not too nice solution:\nphp\nBook::whereNotIn('user_id', [0])\n  ->orWhere('user_id', $userId)\n  ->orWhereIn('group_id', $groups)\n  ->get()\njs\nbook.find{{\"$and\":[\n  {\"deleted_at\":null},\n  {\"user_id\":{\"$nin\":[0]}}\n],\n\"$or\":[\n  {\"user_id\":\"541bf64fd4b41cda04fad053\"},\n  {\"group_id\":{\"$in\":[1,2]}}\n]}, []}\nThe whereNotIn('user_id', [0]) condition always will be true.\nOriginal (not works):\nphp\nBook::where('user_id', $userId)\n  ->orWhereIn('group_id', $groups)\n  ->get()\njs\nbook.find({\"$and\":[\n  {\"deleted_at\":null},\n  {\"user_id\":\"541bf64fd4b41cda04fad053\"}\n],\n\"$or\":[\n  {\"group_id\":{\"$in\":[1,2]}}\n]}, [])\nI also tried (not works):\nphp\nBook::orWhere('user_id', $userId)\n  ->orWhereIn('group_id', $groups)\n  ->get()\njs\nbook.find({\"$or\":[\n  {\"deleted_at\":null},\n  {\"user_id\":\"541bf64fd4b41cda04fad053\"},\n  {\"group_id\":{\"$in\":[1,2]}}\n]}, [])\n. The problem is the table name, not the null:\njs\nbooks.find({\"deleted_at\":null},[])\nBut I do not know, how can I remove it...\n. Finally I modified the Jenssegers/Mongodb/Query/Builder.php file, and now it works...\n``` php\nprotected function compileWhereNull($where)\n{\n    $where['operator'] = '=';\n    $where['value'] = null;\nif (strpos($where['column'], 'deleted_at') !== false) {\n    $where['column'] = 'deleted_at';\n}\n\nreturn $this->compileWhereBasic($where);\n\n}\n```\n. Thanks! This solved my problem.\n. I had a same issue. I can't figured out what is the problem, so I created a new Service Provider and enable the query log in the boot method:\nphp\n// Debug bar - Queries\nif ($config->get('app.debug')) {\n    \\DB::enableQueryLog();\n}\nDo you have a better solution?\n. ",
    "jithinjose2": "+1\n. +1\n. ",
    "artemverbo": "+1\n. ",
    "shehi": "$card = Card::get()->first();\n$deck->cards()->save($card);\n$deck->cards()->save($card);\nInstead, if you create new Card object and try to save it, duplicate line will be inserted. At least it works this way using Tinker.\n$card1 = Card::get()->first();\n$card2 = Card::get()->first();\n$deck->cards()->save($card1);\n$deck->cards()->save($card2);\n. Closing this issue would be nice. Search engines will pick up on it anyway.\n. ",
    "lucknerjb": "When you fetch your model / models, make sure that you use the \"with\" function. That will ensure that the embeds are returned BEFORE the toJson / toArray calls are \nSomething along the line of:\n\nMovie::find(1)->with('actors')\n\nor\n\nMovie::with('actors')->get()\n\n. ",
    "jekjek": "To circumvent sync() I use this workaround method in my product repository class:\n``` php\npublic function setCategories(Product $model, array $categoryIds)\n{\n    // remove existing category relations except those that should be assigned anyway\n    foreach($model->categories as $category) {\n    $cid = $category->getKey();\n    if (in_array($cid, $categoryIds)) {\n        unset($categoryIds[array_search($cid, $categoryIds)]);\n    } else {\n        $model->categories()->detach($category);\n    }\n}\n\n// add new category relations\nforeach($categoryIds as $categoryId) {\n    $model->categories()->attach($categoryId);\n}\n\n}\n```\n. Ok, interesting. \nI installed the latest dev-master version via composer into a fresh environment to try again.\nAfter all package dependencies were installed I started the testsuite with phpunit:\n```\nvagrant@Sandbox_default_1410716971456_18929 /vagrant/vendor/jenssegers/mongodb # phpunit4\nPHPUnit 4.2.4 by Sebastian Bergmann.\nConfiguration read from /vagrant/vendor/jenssegers/mongodb/phpunit.xml\n............F\nTime: 611 ms, Memory: 18.50Mb\nThere was 1 failure:\n1) ConnectionTest::testAuth\nFailed asserting that exception message 'Failed to connect to: localhost:27017: Authentication failed on database 'unittest' with username 'foo': auth failed' contains 'Failed to connect to: localhost:27017: Authentication failed on database 'unittest' with username 'foo': auth fails'.\n```\nIt seems pecl-mongo did a minor text change of the exception message. I test with \n- php 5.5.16\n- pecl-mongo 1.5.4 \n- mongodb 2.6.4\nAfter I disable or fix the test I run the suite again and now the error  shows up:\n```\nvagrant@Sandbox_default_1410716971456_18929 /vagrant/vendor/jenssegers/mongodb # phpunit4\nPHPUnit 4.2.4 by Sebastian Bergmann.\nConfiguration read from /vagrant/vendor/jenssegers/mongodb/phpunit.xml\n...............................................................  63 / 151 ( 41%)\n............................................................... 126 / 151 ( 83%)\n.E\nTime: 2.84 seconds, Memory: 58.50Mb\nThere was 1 error:\n1) RelationsTest::testBelongsToManySync\nMongoWriteConcernException: localhost:27017: $in needs an array\n/vagrant/vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Collection.php:59\n/vagrant/vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Query/Builder.php:679\n/vagrant/vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Query/Builder.php:679\n/vagrant/vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Query/Builder.php:627\n/vagrant/vendor/jenssegers/mongodb/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Builder.php:913\n/vagrant/vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Relations/BelongsToMany.php:220\n/vagrant/vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Relations/BelongsToMany.php:220\n/vagrant/vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Relations/BelongsToMany.php:114\n/vagrant/vendor/jenssegers/mongodb/tests/RelationsTest.php:276\nFAILURES!                            \nTests: 128, Assertions: 580, Errors: 1\n```\n. If you\u00b4re in a hurry then just use your fork via composer.\n. ",
    "gmann1982": "If this could be implemented asap as i am using Laravel 4.3 to build an in house project and would really like to use this package for the mongo abstraction.\n. Perfect thank you for your help.\n. ",
    "seivad": "okay, on another note - how would I run this query?\ndb.tours.update({ \"dates.id\": 572541906 }, { $inc: { \"dates.$.spaces\": -1 } } )\nIt works fine within the Mongo Console, but following your documentation - I can't figure out how I would do the update like this, using the $inc operator. Sorry for all the questions.\n. Duh! Didn't even think of that. \nIs there any other way such as dot notation to get to it directly without having to traverse over the array using a foreach for such a simple update?\nOn Tue, Sep 16, 2014 at 11:52 PM, Jacob Shelby notifications@github.com\nwrote:\n\nThis is actually a bug in your code Mick -- take a look in the PHP documentation on how the foreach function works ... You'll see that it assigns the iteration variable as copy, instead of a reference (like a function parameter). Use an ampersand in front of the iteration variable if you want it to be a reference to the original spot in the array.\nReply to this email directly or view it on GitHub:\nhttps://github.com/jenssegers/laravel-mongodb/issues/323#issuecomment-55745239\n. \n",
    "trxndynamics": "I had the same issue with the update to laravel 4.2.9 but it is working now with the jenssegers/mongodb 2.0.2 release.\n. I use the following in my composer.json:\n        \"jenssegers/mongodb\": \"\",\n        \"jenssegers/mongodb-session\": \"\",\n        \"jenssegers/mongodb-sentry\": \"*\",\nIf you're looking to use Moloquent then try out the mongodb-session.\n. Its a MongoDB session driver for Laravel 4:  see here http://jenssegers.be/projects/laravel-mongodb-session\n. ",
    "alexkavon": "Still not working. Am I supposed to install a special sessions package that allows Moloquent to work with redis/cookie/file sessions?\n. mongodb-session is for storing sessions in MongoDB correct?\n. Yeah, I'm storing sessions in redis though so that doesn't help. It seems that currently a new session is being generated on every new page load...this might be a Homestead issue.\n. Confirmed this is a local testing issue.\n. This will likely cause confusion when someone adds another 'Eloquent' alias and the framework complains. The developer should be aware by looking at the code that the ORM has been modified.\n. ",
    "louisyau": "I have encountered the same problem. I solved the problem if I change the following code:\nBelongsToMany.php Line 115\nphp\nif ($current instanceof Collection) $current = $ids->modelKeys();\nto \nphp\nif ($current instanceof Collection) $current = $current->modelKeys();\nI'm wondering is it a typo? Because it should convert $cuurent to array instead of $ids, which has already converted to array in:\nBelongsToMany.php Line 107\nphp\nif ($ids instanceof Collection) $ids = $ids->modelKeys();\n@jenssegers Please verify if this is a bug, thanks\n. ",
    "sontungx305": "Is it a bug ? I wonder why is it still not fixed :). Do you have a solution ?. ",
    "ton212": "I still experience this.\nI tried pass an array of document id and Eloquent collection but neither is works. I tried apply a changes in @louisyau comment above and it's works.. ",
    "pies": "I've verified that the problem is caused by getQualifiedKeyName prepending key name with collection name, which I assume MongoDB has a problem with, and I've submitted a patch.\n. ",
    "Nishchit14": "This is mongoDB 32/64 bit version issue.\nphp\nini_set('mongo.native_long', 1);\n\n<pThis resolved issue.\nFor more detail refer this http://derickrethans.nl/64bit-ints-in-mongodb.html\n. ",
    "zamrih": "Hi,\nAs it's only used for generating a cache key, ->compileWheres() in replacement of ->wheres will avoid getting into serializing any where Closures.\nFeel free to check that out.\n. ",
    "ricardoaponte": "Gladly!\nOn Sep 30, 2014, at 8:58 AM, Jens Segers notifications@github.com wrote:\n\nCould you do a PR for this?\n\u2014\nReply to this email directly or view it on GitHub.\n. Done!\n. Forgot to change the compileWhereNotIn also\n. \n",
    "Daveawb": "Do you have the service provider included? This would indicate that the actual driver hasn't been loaded in. If you have it in your providers array and you have run a composer update try running composer dump-autoload from the command line.\n. ",
    "pwfraley": "Ok I seemed to have missed that line.  Adding it worked, but now I am getting a different error message, but I open a ticket on laravel-mongodb-sentry, since it is more related to that now ...\n. ",
    "ashokcs94a": "Hi, \n i am also getting error while migration \n[InvalidArgumentException]\n  Unsupported driver [mongodb] \ni don't why any one plz help ...?\n. i m tried but its not working for me ..plz any help me out\n. ",
    "tralves": "1) make sure you are adding the service provider.\n2) if you are using lumen, make sure you are adding the service provider before $app->withEloquent();\n. ",
    "kahovn": "HI Tralves \n  That great. ",
    "rntorm": "One possible workaround: \n$user = User::find($userId);\n$notification = new Notification(array('user' => $user->toArray()); \n@nelsonzheng\n.  Would it be possible to create this kind of relation? Maybe have any tips how to create something like this? @jenssegers\n. ",
    "mrakodol": "Because I make some project and in one case(search), I must return results in one format: \"id, sudent\" , because it use more tables and more systems which work in different databases (mysql, mongodb and mssql). And when user click on result item, I must show details.\n. ",
    "mitulgolakiya": "Yes, I tested it with sql Eloquent and it also gives same result, sum of all orders.\nSo may be I have to do this stuff with Raw query.\n. ",
    "manojnegee": "hi , do you get any solution for this ?. @EhsanZ Hi, thanks for the reply  but I want to search on both article title and user name something like this : \n$articles = Article::with('user')->where('title','like',$search')->orWhereHas('user',function($q) use($search) {\n         $q->where('user_name','like', $search);\n})->paginate(20);\nThanks again for the quick reply. \ud83d\udc4d . Well, The code do work when the relation is hasMany but it is not working in case of belongsTo. I don't know why ? \nand that quote doesn't exits. It shouldn't be there . It exists mysteriously . I've no idea :). any solution for this ?. OK I will upload it soon.\nOn Nov 25, 2016 7:23 PM, \"Artur D\" notifications@github.com wrote:\n\n@manojnegii90 can you put more data ? Your full stack, some code snippets\n, what have you tried and so ?\nPeople here cant read minds yet and fortunetelling wont work either..\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. \n",
    "Grummfy": "Thanks.\nBecause I don't find this so easy to understand I add a wiki page https://github.com/jenssegers/laravel-mongodb/wiki/Complexe-aggragate-call with an example. \nHope it helps other and you will enrich it in the future.\n. yep, it's what I have done, but I think it could be a good improvements.\n. for information I use this one : \nDB::connection('mongodb')->command(....)\n. it doesn\u2019t explain how to use with this library ...\n. $query->where('$where', null, $whereParameters); ?\n. ",
    "milsanore": "@Grummfy is the wiki still available?\nThanks. @jenssegers why is this not being accepted?. Thank you kindly. ",
    "Traxo7": "@milsanore \nhttps://github.com/jenssegers/laravel-mongodb/wiki\nhttps://github.com/jenssegers/laravel-mongodb/wiki/Complexe-aggregate-call. ",
    "tandasima": "Thanks.\n. Found the answer here: https://github.com/jenssegers/laravel-mongodb/issues/413\nThanks\n. ",
    "girokon": "You do some thing wrong, what SoftDeletingTrait you use? You must use \\Jenssegers\\Mongodb\\Eloquent\\SoftDeletingTrait, this trait override method getQualifiedDeletedAtColumn, and returning column without collection name.\n. tags is array of strings, so we can do this:\n::where(\"tags\",\"=\",\"tag1\") //find all elements where tags has \"tag1\" or where tags is  equals \"tag1\"\n::where(\"tags\",\"=\",[\"tag1\",\"tag2\"]) //find all elmentes where tags is equals [\"tag1\",\"tag2\"]\nRead about query in mongodb documentation http://docs.mongodb.org/manual/tutorial/query-documents/#arrays\n. ",
    "zhshhere": "Thanks girokon!\nThe same problem\n. ",
    "kisuka": "I have the same issue.\n. ",
    "ChenAlon": "The issue was that $startDate and $endDate was sent as strings instead of int.\nFixed it by doing this:\n$startDate = $startDate + 0;\n$endDate = $endDate + 0;\n. Hi @digitalplatinum, glad I could help you with this! :). ",
    "digitalplatinum": "Hi chen , this topic helped me, thanks ;) . ",
    "Seitk": "You can set it in database.php:\nuse MongoClient;\n'mongodb' => array(\n    'driver'   => 'mongodb',\n    'host'     => array('localhost'),\n    'username' => 'username',\n    'password' => 'password',\n    'database' => 'mongo-database',\n    'options'  => array(\n        'replicaSet' => 'replset-name',\n        'readPreference' => MongoClient::RP_SECONDARY_PREFERRED\n    )\n),\n. Hi, I came across and found your issue here. I just started to work with this library yesterday so correct me if I am wrong.\nBased on the PHP driver document (http://php.net/manual/en/mongo.connecting.rs.php). The replicaSet option is passed as option when establishing the MongoClient connection.\n// Sample code from php.net\n$m = new MongoClient(\"mongodb://rs1.example.com:27017\", array(\"replicaSet\" => \"myReplSetName\"));\n// Sample code from php.net END\nWhich is already done in this library Jenssegers\\Mongodb\\Connection@createConnection:133\nI tried to dump the options and the replicaSet option is correctly set.\nHere is my database configuration:\n'mongodb' => array(\n    'driver'   => 'mongodb',\n    'host'     => array('localhost'),\n    'username' => 'username',\n    'password' => 'password',\n    'database' => 'mongo-database',\n    'options'  => array(\n        'replicaSet' => 'replset-name',\n        'readPreference' => MongoClient::RP_SECONDARY_PREFERRED\n    )\n),\n. ",
    "theantichris": "I found the \"issue\". The id column parameter needs to be passed in as \"_id\".\n. ",
    "rmedcalf": "I think this is also the same problem the guy in issue #350 is seeing\n. Possible workaround is to use the attribute mutator\npublic function setRoleIdAttribute($value)\n{\n    $this->attributes['role_id'] = new \\MongoId($value);\n}\nor override the save method in hasone.php\n```\npublic function save(\\Illuminate\\Database\\Eloquent\\Model $model)\n{\n    $value = new \\MongoId($this->getParentKey());\n    $model->setAttribute($this->getPlainForeignKey(), $value);\nreturn $model->save() ? $model : false;\n\n}\n```\nor perhaps just override getParentKey\npublic function getParentKey()\n{\n    $value = $this->parent->getAttribute($this->localKey);\n    return new \\MongoId($value);\n}\nAnyone see any issues by doing that?\n. My code above appears to  take care of the insert but now I'm having issues with retrieving the objects with those modifications. So yeah, he pretty much sums it up in his comment.\n. OK. With my changes I can do this and get the expected result:\n$user = User::where('user_name', '=', 'rmedcalf')->with('role')->first();\n    var_dump($user->role->type);\nThis is a one-to-one relationship with the role_id being saved as an ObjectId rather than string\nChanges that had to be done\nHasOne.php:\npublic function getParentKey()\n{\n    $value = $this->parent->getAttribute($this->localKey);\n    return new \\MongoId($value);\n}\nBelongsTo.php:\n```\npublic function match(array $models, Collection $results, $relation)\n{\n    $foreign = $this->foreignKey;\nforeach($models as $m)\n{\n    if(gettype($m->$foreign == 'object') && get_class($m->$foreign) == 'MongoId')\n    {\n        $m->$foreign = (string)$m->$foreign;\n    }\n}\n\nreturn parent::match($models, $results, $relation);\n\n}\n```\nI'm sure there are things I'm not considering.. Would like the author's feedback\nThanks!\n. ",
    "developerdino": "Is there any movement on this - I'm dealing with a legacy db which uses ObjectId throughout which I can't change.\n. ",
    "stratease": "Would love to see this implemented too. I'm probably going to implement a workaround like the one listed above - not excited about it.\n. I'm trying to solve this too - is there a solution, or should the above work?. Ahh, thanks I'll give it a try. Forgot all about scopes. ",
    "barroca": "+1 on having this implemented. Thanks\n. ",
    "omidahn": "+1 on having this implemented. Thanks\n. see #1164\n. i have the same problem.\nlaravel 5.4\nthat's because i'm using wrong DatabaseTokenRepository :\nIlluminate/Auth/Passwords/DatabaseTokenRepository.php instead of \\Moloquent\\Auth\\DatabaseTokenRepository.\nbut the original problem was this error (using Moloquent\\Auth\\PasswordResetServiceProvider) :\nFatalThrowableError in DatabaseTokenRepository.php line 58:\nType error: Argument 2 passed to Illuminate\\Auth\\Passwords\\DatabaseTokenRepository::__construct() must implement interface Illuminate\\Contracts\\Hashing\\Hasher, string given, called in /home/omid/tmp/b2c-wl/vendor/moloquent/moloquent/src/Auth/PasswordBrokerManager.php on line 22\nso i had to use laravel default PasswordResetServiceProvider.\n(same error using \"Jenssegers\\Mongodb\" or \"Moloquent\"). ",
    "martingg88": "+1\n. any update and plan for this ?\n. any update?. any update to commit into master version?\n. any update?. ",
    "ericsala": "+1 . ",
    "maslauskas": "+1 would really love to see this implemented. ",
    "kojuka": "is your fillable set on the model?\n. For those experiencing the same thing.\nI've tried commenting out the following code on my menu model:\npublic function website()\n{\nreturn $this->belongsTo('Website');\n}\nNo difference in behavior.  When i do the following everything still hangs - no errors:\n$website->menus()->save($menu);\n. try this:\n// Embed the user\n$pool->user()->associate($user);\n$pool->save();\n. ",
    "vingrad": "\n\nphp artisan migrate\n\n[Symfony\\Component\\Debug\\Exception\\FatalThrowableError]\n  Call to a member function prepare() on null. +1. any updates?. Laravel 5.4\n\nphp artisan migrate\n\n[Symfony\\Component\\Debug\\Exception\\FatalThrowableError]\n  Call to a member function prepare() on null. \n",
    "peterver": "I know it looks ugly, but try the following in the meanwhile :) \n```\n$db = config('database.connections.mongodb.database');\nDB::connection('mongodb')->getMongoClient()->admin->command([\n    'renameCollection' => \"{$db}.ORIGINAL_NAME\",\n    'to' => \"{$db}.NEW_NAME\",\n]);\n```\nIt follows the original PHP spec : http://php.net/manual/en/mongodb.command.php. ",
    "david-navarro": "Same, when I try: \nSchema::connection('mongodb')->rename('table1', 'table2');\nI get this error on type >php artisan migrate:\nType error: Argument 2 passed to Illuminate\\Database\\Schema\\Blueprint::build() must be\n  an instance of Illuminate\\Database\\Schema\\Grammars\\Grammar, null given, called in /home\n  /vagrant/code/adinton/vendor/laravel/framework/src/Illuminate/Database/Schema/Builder.p\n  hp on line 252\nand trying this \nDB::statement(\"db.table1.renameCollection('table2')\");\non type >php artisan migrate:\nCall to a member function prepare() on null. @peterver your solution works!. ",
    "lennynyktyk": "Essentially you are trying to get multiple row aggregate.  Eloquent doesn't seem to have an eloquent way to do.  This StackOverflow http://stackoverflow.com/questions/16764346/getting-daily-aggregates-sum-sorted-by-day-in-laravel answer uses the techniques I would suggest, i.e. select(DB:raw(...))and lists().\nIn your case you'll need to do something to the effect of:\nphp\n<?php\npublic function subjectsCountRelation ()\n{\n    $query = $this->belongsToMany('Subject')->groupBy('expedition_ids');\n    $query->getQuery()->aggregate = [ 'function' => 'count', 'columns' => [ 'id' ] ];\n    return $query->get();\n}\nEssentially this is what the Illuminate\\Database\\Query\\Builder::aggregate() does just skips the return $results[0]; step.\n. ",
    "kimsyversen": "This is not a direct solution to your answer (and mabye late), but I guess you could solve it by something like this:\nModel::whereRaw([\n            'created_at' => [\n                        '$gte' => new MongoDate(strtotime($from)),\n                        '$lt' => new MongoDate(strtotime($to))\n            ],\n            'updated_at' => [\n                        '$gte' => new MongoDate(strtotime($from)),\n                        '$lt' => new MongoDate(strtotime($to))\n            ]])->get();\n. Actually it was me overlooking something very banal. It was expected behavior and nothing wrong with the package.\nAnyways, thanks for being helpful :)\n. Im no expert, but maaaybe you could unwind offers, then search.\nI don't know if this can be done more elegant, but here is some raw code that could lead you on a right path\n```\n$mongoCollection = DB::getCollection('collectionNameHere');\n    $unwind = array('$unwind' => '$offer');\n\n    $match = array (\n        '$match' => array (\n          'offers.campaign_id'=> 47,\n        )\n    );\n\n    $array = $mongoCollection->aggregate($unwind, $match);\n\n```\nThen you probably have to go trough $array['result']\n. ",
    "stones": "So my local and test are the same environment, just with the $testEnvironment = 'testing'; and $unitTesting     = true;.\nI am running Behat 3 and beforeScenario has Artisan::call( 'migrate' ); and my afterScenario has Artisan::call( 'migrate:reset' );. \nI am actually not getting any errors, but the test fails after i try to add the same user again.\nTo me that is the data not being cleaned by the migrate:reset.\nbut what ever reasons : \n```\nlocal/database and testing/database\n'database' => 'local'\n```\nworks\n```\nlocal/database\n'database' => 'local'\ntesting/database\n'database' => 'localtest'\n```\nDoesn't. Which makes no sense to me.\n. I think you are right about the issue, but unfortunately the fix doesn't work. You can't set the environment from Artisan::call (I read through the docs and env isn't an option you can pass).\nWhat i just noticed is that if i delete all the databases in mongo, and then run the test, both local and testing database get created.\nIf DD'd the environment out and several stages of the test process and it always says 'testing' .\nThanks for the help, btw.\n. ",
    "robsoncombr": "I'm facing this problem.\nIt sends the failed jobs to mongodb, however artisan fails:\n$ php artisan queue:failed\n  [ErrorException]\n  strstr() expects parameter 1 to be string, array given\nHow do I implement the workaround?\nIs this going to be fixed?\nThank you,\nRobson\n. Any plan to have this incorporated?. News? Thank you very much!\n. +1\nAnd I can elaborate.\nForms come as strings from user interface, so for example a field called 'code' that is supposed to be int, comes as string and is saved as string into MongoDB.\nThis cause several problems:\na) you can not search correctly (if saved as int)\nb) you can not order correctly (if saved as string)\nc) you have problems to write custom Validators\nYou can convert the attribute to int before save, on Model:\npublic function setCodeAttribute($value) { $this->attributes['code'] = (int) $value; }\nThis solves the order problem, but causes the search issue reported on this.\nWe also find problems when using DB:: instead of Eloquent.\nI was still not able to completely solve this, if someone find a solution please share.\n. +1\nCurrently I use a setAttribute on Model as workaround:\npublic function setVolumeAttribute($valor) { $this->attributes['volume'] = (int) $valor; }\n. Is this still an issue for you?\nDoes 'where('id', $id)' really returns an Object?\nHave you tried with 'withTrashed()->where('id', $id)->restore()'?\nIf the problem is resolved, could you please close this?\n. Can't we have this officially documented on package read me? There are new differences now in Laravel 5.4.. same problem. how do we load? anyone?. ok worked here: Model::with(['relationEmbedMany'])->find(<_id>). +1. ",
    "Fynkymynky": "Thanks :)\n. ",
    "pmventura": "Thanks @alexandre-butynski \n. ",
    "harshvirani": "How to find index so i can apply that query with index @alexandre-butynski . ",
    "RedsAnDev": "@alexandre-butynski  Thank you so much, your answer is useful, even after 3 years!. ",
    "navneetccna": "what if we don't know the index instead we have id in child doc. @prafful-panwar I don't think looping is the right solution. There is already $ operator available in mongo but how we can use in this library. . found any solution for this problem ?. what is the solution ?. @jenssegers what is the solution? you just closed the issue without any answer.. found any solution for this problem ?. ",
    "prafful-panwar": "@navneetccna if you are using raw query than \nhttps://docs.mongodb.com/manual/reference/operator/update/positional/#up.S\nelse \nyou have to loop it your array and do something like this\nforeach ($post->comments as $key => $comments) {\n          if ($comments['id'] === $commentId) {\n                  $id = $post->update([\"comments.$key.comments\" => [$data]], ['upsert' => true]);\n          }\n}. ",
    "Saneesh": "\n@prafful-panwar I don't think looping is the right solution. There is already $ operator available in mongo but how we can use in this library.\n\nIs this is your question? Here in this snippet, old coupon's(>24Hr) state setting as Expired.\n```\n$yesterdaySameTime = Carbon::now()->subHours(24)->format('Y-m-d\\TH:i:s');\n$yesterdaySameTime = new \\DateTime($yesterdaySameTime);\n$couponUsage = CouponUsage::query()\n      ->where('customer_id', 53)\n      ->whereNotIn('data.usage.state', ['Consumed', 'Expired'])\n      ->where('data.usage.time', '<', $yesterdaySameTime)\n      ->update([\n        'data.usage.$.state' => 'Expired'\n      ]);\n``. If the tags are integer, don't forget to typecast!Coupon::where('recipients', 'all', [(int)$cid])->get();`\n(I took half day to find it!). +1. @jenssegers Could you please explain how can we achieve it or share the documentation link which helps to solve this?. @HirenTariwala Could you please share the query to solve this issue?. Without '$' also not working.\nI read somewhere since 'data.usage' is an array with states (Consumed,\nActive or Expired) we need to pass '$' also with that query update.\nOn Thu, Sep 27, 2018 at 3:37 PM Stas notifications@github.com wrote:\n\nfield data.usage exists Object in MongoDb, because use $ for arrays it is\nnot correct.\nVaild query:\nCouponUsage::query()\n  ->where('customer_id', $customer->customer_id)\n  ->whereNotIn('data.usage.state', ['Consumed', 'Expired'])\n  ->where('data.usage.time', '<', $yesterdaySameTime)\n  ->update([\n    'data.usage.state' => 'Expired'\n  ]);\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/jenssegers/laravel-mongodb/issues/1603#issuecomment-425034841,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABbqQy5joGT_s0Mn_HdunAgKOR_uOUXUks5ufKNVgaJpZM4WjVS6\n.\n. Hello,\nIt is not working for me, it is worked for you when data.usage have array of values?\n```\n{\n    \"_id\" : ObjectId(\"5ba0f8155cb8512fee57d538\"),\n    \"customer_id\" : 53,\n    \"code\" : \"PYDY15\",\n    \"data\" : {\n        \"assign_total\" : 1,\n        \"usage_total\" : 0,\n        \"usage\" : [ \n            {\n                \"order_id\" : \"1234\",\n                \"state\" : \"Consumed\",\n                \"time\" : ISODate(\"2018-09-18T13:05:25.058Z\")\n            },\n            {\n                \"order_id\" : null,\n                \"state\" : \"Active\",\n                \"time\" : ISODate(\"2018-09-18T13:05:25.058Z\")\n            },\n            {\n                \"order_id\" : null,\n                \"state\" : \"Active\",\n                \"time\" : ISODate(\"2018-09-18T13:05:25.058Z\")\n            },\n            {\n                \"order_id\" : null,\n                \"state\" : \"Active\",\n                \"time\" : ISODate(\"2018-09-18T13:05:25.058Z\")\n            }\n\n    ]\n},\n\"updated_at\" : ISODate(\"2018-09-18T15:37:51.000Z\"),\n\"created_at\" : ISODate(\"2018-09-18T13:05:25.000Z\")\n\n}\n```\n. I want to update the old usage record's state to Expired. In this example we can see all the usages(data.usage.time more than 24hr old) and one is Consumed. So I want to set the data.usage.state to Expired for all Active. \nNote: data.usage is an array of usages.. To edit the condition based sub-array in a document, we have to find the index of the corresponding array elements.\n```\n$yesterdaySameTime = Carbon::now()->subHours(24)->format('Y-m-d\\TH:i:s');\n        $yesterdaySameTime = new UTCDateTime((new\n            \\DateTime($yesterdaySameTime))->getTimestamp() * 1000);\n$query = CouponUsage::query()\n            ->where('customer_id', '=', 53)\n            ->whereNotIn('data.usage.state', ['Consumed', 'Expired'])\n            ->where('data.usage.time', '<', $yesterdaySameTime);\n        $res = $query\n            ->update(\n                [\n                    'data.usage.1.state' => 'Expired',\n                    'data.usage.2.state' => 'Expired',\n                    'data.usage.3.state' => 'Expired'\n                ]\n            );\n```\nTo find the index of the matching records my code:\n```\n// set 'Expired' for old coupons. To do this, have to find the index 'Active' usages older than 24Hour.\n    $yesterdaySameTime = Carbon::now()->subHours(24)->format('Y-m-d\\TH:i:s');\n    $yesterdaySameTime = new UTCDateTime((new \\DateTime($yesterdaySameTime))->getTimestamp() * 1000);\n// Get the old coupon usages to be set as 'Expired'\n$query = CouponUsage::query()\n  ->where('customer_id', $customer->customer_id)\n  ->where('data.usage.state', 'Active')\n  ->where('data.usage.time', '<', $yesterdaySameTime);\n\n$couponUsages = $query->get();\n\n// Loop through the 'usage' of each document and get the conditions and to be updated($set) values\n$setExpiry = $couponUsages->map(function ($couponUsage) use ($yesterdaySameTime) {\n  $data = $couponUsage->data;\n\n  $result = $sets = [];\n\n  foreach ($data['usage'] as $key => $usageItem) {\n    $hours = Carbon::now()->diffInHours(Carbon::createFromTimeString(($usageItem['time']->toDateTime())->format('Y-m-d H:i:s')));\n\n    if ($usageItem['state'] === 'Active' && $hours > 24) {\n      $sets[\"data.usage.{$key}.state\"] = 'Expired';\n    }\n  }\n\n  $result[] = [\n    'customer_id' => $couponUsage->customer_id,\n    'state' => 'Active',\n    'time' => $usageItem['time'],\n    'sets' => $sets\n  ];\n\n  return $result;\n});\n\nforeach ($setExpiry as $setExpiryItem) {\n  $setExpiryItem = $setExpiryItem[0];\n\n  // Get the condition based document.\n  $query = CouponUsage::query()\n    ->where('customer_id', $setExpiryItem['customer_id'])\n    ->where('data.usage.state', $setExpiryItem['state'])\n    ->where('data.usage.time', '<', $setExpiryItem['time']);\n\n  $query->update($setExpiryItem['sets']);\n}\n\n```\nThe generated array to be edited will be look like: \narray (\n  'customer_id' => 53,\n  'state' => 'Active',\n  'time' => \n  MongoDB\\BSON\\UTCDateTime::__set_state(array(\n     'milliseconds' => '1537407257000',\n  )),\n  'sets' => \n  array (\n    'data.usage.1.state' => 'Expired!!!',\n  ),\n)  \n[2018-09-27 13:52:02] local.INFO: array (\n  'customer_id' => 53,\n  'state' => 'Active',\n  'time' => \n  MongoDB\\BSON\\UTCDateTime::__set_state(array(\n     'milliseconds' => '1535826194000',\n  )),\n  'sets' => \n  array (\n    'data.usage.1.state' => 'Expired!!!',\n    'data.usage.3.state' => 'Expired!!!',\n  ),\n)\n. Thank you for your reply!\nI think there is a squire bracket is missing\n[\n              '$inc' => [\n                'data.usage_total' => 1\n              ]\n]\nBut still the value is not increment.\n. Thank you so much! it worked!. ",
    "ByScripts": "It takes time to find this information. I think it should be in the documentation ;) Thanks for the info :+1: \n. ",
    "anodal88": "But in the migration wich type of data i need to set as column type?\n. ",
    "hackel": "I just ran into this issue as well.  I think we need to override the getDirty method and add an additional test just like originalIsNumericallyEquivalent to compare the MongoDate attributes individually.\nIn the meantime, I simply tested it myself in a mutator:\nphp\npublic function setDateAttribute($value)\n{\n    $newDate = $this->asDateTime($value);\n    if ($newDate->ne($this->date)) {\n        $this->attributes['date'] = $this->fromDateTime($newDate);\n    }\n}\n. Nice, thanks @jenssegers!\n. You closed this without any explanation.  Did you ever find a solution?\n. @jenssegers Thanks, I did find that solution mentioned in another bug report.  Was something like this what you had in mind?  It works, but feels a bit janky...\nphp\n        return $this->raw(function ($collection) {\n            return Category::hydrate($collection->aggregate([\n                ['$match' => [\n                    'type' => 'metro_area'\n                ]],\n                ['$sort' => ['name' => 1, 'region_abbr' => 1]],\n                ['$project' => [\n                    'name' => [\n                        '$concat' => ['$name', ', ', '$region_abbr']\n                    ]\n                ]]\n            ])['result']);\n        });\n. @vanchelo This is not a Mongo support forum!\n. So...this is fixed now?\n. One problem is in Jenssegers\\Mongodb\\Eloquent\\Builder::insert.  This calls $relation->performInsert(), but doesn't check its return value and always returns true.  I think it should just return the value of the performInsert call.  \nJenssegers\\Mongodb\\Relations\\EmbedsOne::performInsert calls $this->getBaseQuery()->update() regardless of whether the parent model exists yet.  Does it need to do this at all?  If the update call doesn't return true, then it never associates the embedded document to the parent.  It should at least check if the model exists, and if not, either save it, or just skip calling update and assume the dev will do this manually.  I tried changing that on line 40 to\n$result = $this->parent->exists ? $this->getBaseQuery()->update([$this->localKey => $model->getAttributes()]) : true; and everything  started working for me.\nAlso, Jenssegers\\Mongodb\\Query\\Builder::performUpdate only checks that $result['ok'] == 1, not that $result['nModified'] > 0.  Not sure if this is by design, but as a result it fails to detect an attempted update of a model that doesn't exist.\n. @jenssegers It should if you've enabled timestamps on that model.  Why don't you think it should?  The developer is setting this option for a reason.\n. It's not that it happens in the associate method itself, but doesn't it do it when it saves the individual model?  A BelongsTo relation is slightly different than an EmbedsOne, of course.  There's really no such thing as an unassociated embedded document, so the only done to attach multiple embedded documents and save them all at once.  I would still like some way to put a timestamp on them.  Of course I could specify this manually, but it seems to me like it should just follow the existing standard for timestamps.\n. Moved to https://github.com/hackel/laravel-mongodb/tree/use-traits if anyone's interested in pursuing this further.  Unless I find a better solution, I will be using this for one of my own projects so will try to keep the fork in sync and minimize any changes.\n. Adding the following to Builder::compileWheres() seems to have fixed the issue for me (with mongo.native_long disabled), but I'm uncertain if there could be other side-effects.\nphp\nif (isset($where['value']) and is_numeric($where['value']))\n{\n    $where['value'] = $where['value'] + 0;\n}\nAlso I just realized that I need to add a case for multiple values as well.  If you think this solution is appropriate I can make a PR for it.\n. I think it's because the integers are coming from an input form, which sends everything as a string.\n. I tried casting the field to an integer in my model, but it had no effect.\nThe problem is in the generated query itself.  MySQL doesn't care if you say WHERE val=1 or val=\"1\", it treats them the same, so unfortunately many packages are designed with this assumption.  That's why I think some kind of automatic conversion within the MongoDB query builder would be appropriate.  I can use Input::merge() to cast each integer query parameter manually, but this is a major pain.\nHere is my solution:\nhttps://github.com/jenssegers/laravel-mongodb/compare/master...hackel:cast-numerics-in-wheres\nAnother option might be to check the $casts array in the model, and then automatically apply those casts before running the query.\nUnfortunately the problem also exists for saving, but that is easier to correct using a simple mutator to manually cast the value as an integer.\n. This only affects removing more than 1 category at a time.  If I perform a sync that removes only a single category, the following query works fine:\njs\n\"directory_entries.update({\"$and\":[{\"deleted_at\":null},{\"_id\":{\"$id\":\"552837bfbffebc30158b4568\"}}]},{\"$pullAll\":{\"category_ids\":[\"552472a4bffebc37158b457c\"]}},{\"multiple\":true})\"\nThe difference is that this is is being generated as a $pullAll query.  BelongsToMany::sync() is passing a non-sequential array to detach(), which Builder::pull() thinks is an associative array.  If I re-index the array with $this->detach(array_values($detach)); on line 114, it generates a working $putAll query and everything works as expected.\n. Dupe of #439 \n. Didn't even notice that this had already been fixed by you when I merged my changes with the latest code.\n. I can confirm this issue.  Thankfully queue:flush still works!\n. I've been struggling with this issue as well, and unfortunately it seems that it is not supported.  I think that it requires some thought, since \"product_variant_ids\" in the Facet document is completely meaningless, since it doesn't convey which Product they are in, and those IDs could theoretically be duplicated across products.\nThis could be done by storing embedded documents that are essentially a reverse of the dependency tree:\nproduct_variant_ids: [\n  {\n    _id: MongoID,\n    product_id: MongoID\n  }\n], ...etc.\nIt could keep burying down for multiple levels until it got to the parent object.\nMy problem with this is, it seems like overkill, and I can't even imagine how nasty the Mongo query would have to be to do anything useful with this data.  The problem seems to be that laravel-mongodb refuses to return a related object unless the ID is present in both tables.  A single table should be sufficient.  Yes, you won't be able to get a list of Products from a Facet document, but I can live with that.  I can manually add Facet::hasMany(Products) if I need that information.\nThis limitation almost makes me think that using a pivot table is actually an easier approach, even though this isn't very no-sql-like  It would also allow storing extra data on the pivot table, which would be extremely useful for a project I'm working on now.  So basically I think some kind of a flag would be nice, that allowed you to toggle the \"embedded pivot table\" behaviour on a per-collection basis.\nWould appreciate any thoughts or alternative approaches.\n. Dupe of #491. Not supported, but would be easy to add as an option in \\Jenssegers\\Mongodb\\Query\\Builder::getFresh.\n. @chloealee You would have to fork it and modify the getFresh method.  This is where MongoCollection::aggregate() is called, and allowDiskUse needs to be passed as an option there.  If you don't want to bother with forking, you can just create a raw query with the raw() method.\n. You are trying to create a relation to non-existent classes \\User and \\Address.  You need to specify the fully namespaced class names when defining relations.\n. The namespace is declared, but you are just passing in a string, not a class.  If you used 'Address::class', that would work because it returns the FQCN.  But the string 'Address' corresponds to the root \\Address class.\n. You can't paginate a standard Eloquent collection either.  Pagination operates on the query level.  There is an EmbedsMany::paginate method you can try.\nThe purpose of the paginate method is to retrieve DB records a few at a time so you're not storing them all in memory.  Unless you use, e.g. a $slice query to limit the number of embedded documents returned in the parent object, this isn't going to help you.  If you have thousands of embedded documents, you may want to re-think your data model.\n. Eager loading makes no sense for embedded relations.  The data is already loaded from the original query, so it should just work.  You can't query just an embedded document by itself, that's why the original query for the parent document is cloned.\n. @JoeyHoutenbos That seems entirely redundant, as the accessor will never get called.  $model->packets __calls \\Jenssegers\\Mongodb\\Model::getAttribute(), which first checks for the existence of the packets() method on the model, and then returns the relationship.  It doesn't even check for get*Attribute methods unless the embedded relationship doesn't exist and it gets passed off to Eloquent's getAttribute().  Am I missing something?\nI feel like there is some misunderstanding of what \"eager loading\" means.  It means querying the database for the related data in a model before it is accessed.  For embedded relationships, this happens automatically, every time, because there is only ever one database query to begin with.  That's why I said it makes no sense above.  Now, if you're talking about filling the model $relations property with the embedded model instances based on the attributes, that should be happening automatically on access, lazily.  This is fine, because you already have the data, which is the expensive operation, so there's no reason to \"eagerly\" create these instances if they aren't even going to be used.\n. I think it's probably getting confused with Eloquent's own attributes property.  Can you rename it?  If not, perhaps you could do something like $question->getAttribute('attributes')['title'];\n. Hey @jenssegers, any more issues or is this good to go?\n. Try $embed->belongs()->attach($belong); before $main->embeds->associate($embed);.\nRemember, associate() is merely copying the raw attributes from the embedded model to your parent model, so if you modify it after the fact, that new information won't be saved. The two objects are not linked.\n. Above did you spit out a plain User model, or did you look at $user->Incomes?  Just as with Eloquent, the model is not loaded automatically, even though the data is there.\n. @bitcine-darcy Hate to say it, but RTFM.  You want detach(), not remove().  This isn't even related to laravel-mongodb.  See http://laravel.com/docs/5.1/eloquent-relationships#inserting-many-to-many-relationships\n. @bitcine-darcy Perhaps you should consider not using a bug tracker as a support forum in the future.\n. \\Illuminate\\Database\\Eloquent\\Model::newFromBuilder is calling $this->newInstance([], true);  The second parameter is setting $exists to true regardless of whether the embedded model really exists or not.\n. I'm dealing with this issue as well.  Is this a PHP issue?  When passing a Carbon date into a where query as in where('starts_at', '<=', Carbon::now()), the resulting Mongo query is{\"starts_at\":{\"$lte\":{\"sec\":1446007699,\"usec\":78000}}}.  It should be{\"starts_at\": {\"$lte\": ISODate(\"2015-10-28T04:57:19.000Z\")}}`.  The Carbon date is clearly being converted into a MongoDate (in PHP), but the MongoDate isn't being converted into proper Mongo query language.\nI thought this would work: where('started_at', '<=', \\DB::raw('IsoDate(' . Carbon\\Carbon::now()->toIso8601String() . ')')), but no such luck, it gives the dreaded \"zero-length keys are not allowed\" error.  Not sure where to go from here, short of doing the query manually.\nEdit: This also does not work: whereRaw(['started_at' => ['$lte' => \\DB::raw('ISODate(\"' . Carbon\\Carbon::now()->toISO8601String() . '\")']])  whereRaw() is including the entire ISODate value quoted, so Mongo just thinks it's a string.\nEdit 2: So the query just looks different when using DB::getQueryLog() than it does in the MongoDB shell, but they do the same thing.  I managed to get everything working fine by standardizing on Carbon objects everywhere in my code.\n. You're saying that \"roles\" is an embedded document of users, with two properties, admin and user, but what are their values?  You need to change \"roles\" into an array, then User::where('roles', '=', 'admin') should work.\nPlease direct support questions to forums or Stackoverflow. Github issues are for bugs only. Thank you.\n. This has absolutely nothing to do with laravel-mongodb.  You need to implement Illuminate\\Contracts\\Auth\\Authenticatable in your User model.  The error message seems rather self-explanatory, no?  Please direct support questions to forums or Stackoverflow.  Github issues are for bugs only.  Thank you.\n. @yufeiGit Please close the bug report.\n. You probably shouldn't be using push() with embedded relationships.  Even if it did skip the automagically created reverse relationship, it's still going to save your parent model once for every single relationship.  What I've settled on doing is:\nphp\n$m1->m2s()->associate($m2);\n$m1->save();\nYes, it's annoying that you have to associate every single relationship, but at least that way there's only one save.  I think that the save() method needs to be overriden to do this automatically for embedded relationships.\n. Okay, here's what I did to my model to fix this:\n``` php\n    public function save(array $options = [])\n    {\n        $this->syncEmbeddedRelations();\n        parent::save($options);\n    }\npublic function syncEmbeddedRelations()\n{\n    foreach ($this->relations as $relation => $value) {\n        $callback = function ($value) use ($relation) {\n            if (\n                $value->getParentRelation() instanceof EmbedsOneOrMany &&\n                (!$this->getParentRelation() || $this->getParentRelation()->getParent() != $value)\n            ) {\n                $value->syncEmbeddedRelations();\n                if ($value instanceof Model && method_exists($this, $relation)) {\n                    $this->$relation()->associate($value);\n                }\n            }\n        };\n        if ($value instanceof Collection) {\n            $value->transform($callback);\n        } else {\n            call_user_func($callback, $value);\n        }\n    }\n}\n\n```\nThis allows freely setting values on embedded relations and associating them automatically when saving the parent, without redundant DB queries.\nEdit: didn't take Collections into account.\n. Just look at the source!  Taking a peek at the Blueprint::index method, it would seem you can just do $collection->index(['name' => -1]);\n. $guarded prevents mass-assignment, it has nothing to do with displaying values.  Try $hidden.\n. What do you mean by \"it shows everything?\"  How are you \"showing\" the model?  $hidden will only remove the attributes from the output of toArray() and similar functions.  This is not a laravel-mongodb issue.\n. @samthomson I ended up implementing what I needed as a separate trait.  It's super hackish but gets the job done.  I had originally overridden __unset but took that out for some reason which I can't remember now.  I think it was causing trouble syncing embedded relations.  Unfortunately this unsets the fields in a separate DB transaction, but I think that's unavoidable due to the way library constructs queries.. Brilliant, thanks.  This still doesn't cover ~~% appearing mid-string, or~~ _ at all, but I'm not using that personally.  Obviously people should be using a proper regex for that anyway.  This still allows me to use a library that runs a like query on my models.\n. Bah, yes sorry, I was just testing and realised that.  Excellent!\n. Is this actually supposed to be helpful?  Please, think before you post.\n2.x uses the old, deprecated driver.  3.0 uses the new driver.  Pretty simple.  I can't imagine anyone's going to invest the time to migrate the old Laravel 4.2 version of this package to use the new driver.  You need to upgrade.\n. I'm not aware of anything in MongoDB that would do this.  Just create an Embeddable trait that overrides create() and any other methods you don't want to use and throws an exception instead.\n. Your autoloader setup is broken.  Look for composer support.  This has nothing to do with this project.\n. The $dates property is reserved in Eloquent models, it's an array that defines date fields.  Just pick a different name.\n. Don't use auto-incrementing, set the ID to a new MongoId/MongoDB\\BSON\\ObjectID before you insert it.\n. You do not need MySQL or any other database at all.  It's totally up to you.  This package provides a HybridRelations trait if you want your models to be able to include related data from other Eloquent models (MySQL, etc.).\nThis is clearly not an issue with this package, just your own lack of research.  Please use Stackoverflow, etc. for such support questions.\n. Ugh, really, Composer?  How does this make any sense?\n- satooshi/php-coveralls v0.6.0 requires psr/log 1.0.0 -> satisfiable by psr/log[1.0.0].\n- satooshi/php-coveralls v0.6.1 requires psr/log 1.0.0 -> satisfiable by psr/log[1.0.0].\n- Conclusion: don't install psr/log 1.0.0\n- Installation request for satooshi/php-coveralls ^0.6 -> satisfiable by satooshi/php-coveralls[v0.6.0, v0.6.1].\nAnyway, this is solved by updating the satooshi/php-coveralls constraint to \"^1.0\" instead of \"^0.6\", but that is a different issue.. ",
    "murwa": "Is it that u want to have 'key' as both an index and a unique key?\n. i realised you need to set the foreign_key on the relationships. Something like\n``` php\npublic function user() {\n    return $this->belongsTo('App\\User', 'user_id');\n}\n```\nworks for me\n. I think it's because associate doesn't send the document to the DB until you do save on the parent\n. got it to work. thanks to @Carthagian-Traveler \n. Mongo date has no timezone; that means the created_at field should assume the server's timezone. When converting from MongoDate to DateTime, u'll have to set the target timezone. \n. From the docs\n\nMongoDB stores dates as milliseconds past the epoch. This means that dates do not contain timezone information\n\nWith a created_at field, you do not need to store the timezone in the db; coz all you need is to add the tz information to your DateTime object and can be set in the .ini file or using date_default_timezone_set\nEither way, you now do \nphp\nprint_r((new \\MongoDate())->toDateTime()->setTimezone(new \\DateTimeZone(date_default_timezone_get())))\n. Hope it worked!\nSent from my iPhone\n\nOn Mar 7, 2015, at 3:42 AM, Alejandro Labrada Diaz notifications@github.com wrote:\nClosed #441.\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "Zwaen91": "I have the same problem. How did you solve it @webular ?. ",
    "philipbrown": "Hey @jenssegers any reason why you haven't merged this? :relaxed:\n. Ah screw it, ignore this :stuck_out_tongue: \n. Hey Jens, have you had any more thought around this issue?\n. Hey @pi0, any thoughts on this? :relaxed:\n. @pi0 Great suggestion! I've updated the PR \ud83d\ude04 \n. Thanks Jens \u2764\ufe0f \n. ",
    "ryangoodrich": "+1 to have this merged in to the next release\n. ",
    "neovdr": "I wanted to pass along only the columns asked of me. In the end it is not a big issue.\n. ",
    "marcoskubis": "@jenssegers This enhancement was done?\n. Yes, I have the same problem. You solved it?\n. ",
    "andycaramba": "DB::statement gets Symfony\\Component\\Debug\\Exception\\FatalErrorException Call to a member function prepare() on a non-object but \nphp\nDB::getMongoDB()->execute(\"db.source.copyTo('target')\");\nworks fine.\nThank you and Happy New Year.\n. Please, merge this PR. I have an error after updating to Laravel 5.2 with _id as pluck method key parameter. In Laravel 5.2 lists method just an alias to pluck.\n. Broken from Laravel v5.4.31. See this commit.. I believe that Collection::truncate() should use remove({}) for greater clarity and compatibility with Laravel. The speed of execution in this case is not so important.. ",
    "vainsoul59": "Hi,\nNot sure if you've found your solution but just in case, that's how I'd do it :\n::where('tags.tag1', 'exists', true)->get();\nhope it helps.\n. ",
    "giolvani": "No, I'm not found solution yet. I'll try your suggestion, tks!\n. Hi guys, unfortunately the both @vainsoul59 and @girokon way doesn't worked for me. Maybe this drive doesn't not support this operation.\nI've got the follow error:\njavascript\n{    \n  \"error\": {        \n    \"type\": \"ErrorException\",        \n    \"message\": \"Object of class Jenssegers\\Mongodb\\Eloquent\\Builder could not be converted to string\",        \n    \"file\": \"C:\\Projects\\Laminapp\\app\\service\\vendor\\symfony\\http-foundation\\Symfony\\Component\\HttpFoundation\\Response.php\",        \n    \"line\": 406    \n  }\n}\n. Hey guys, sorry for my mistake... The solutions was in documentation https://github.com/jenssegers/laravel-mongodb#mongodb-specific-operators \nI use ::where('tags', 'all', ['campo'])->get() almost equals @girokon suggest.\nThank you all\n. I'm also try it. I have many records that the foreign key doesn't exists anymore.\n+1\n. I can not solve the issue with the #426 thread...\nAnyone solve this?\n. Actually, there is a solution, but it is in another fork https://github.com/jeremy-brenner/laravel-mongodb.\nUnfortunatelly, the PR does not merged until now.\n. +1\n. I did a PR https://github.com/jenssegers/laravel-mongodb/pull/769 to solve this in master branch.\nNow, it works fine to me. I hope help someone else.\n=D\n. +1\n. I replaced some methods because the base methos doesn't work with mongodb, perhaps because the primary key is _id and not id\nI overwrite the methods markJobAsReserved() and deleteReserved() and copied releaseJob() from @Bodom78 implementation.\n. Your welcome guys!\n. ",
    "JandreColoj": "@Saneesh thanks for you comment, its works !.",
    "karunais13": "Did you manage to solve the problem? if yes can you post the solution here.\n. ",
    "luhfilho": "UP!\nI have the same problem...\nHow to sort by multiple fields?\n. I solved my problem creating an index with the two columns with the sorting i want.\nSo, at query i sort from first field and mongo sort from second with index defined\n. ",
    "raylight75": "I have the same problem...\n. ",
    "andrew-waters": "+1 for this. Adding a compound index isn't a viable option, particularly when performing arbitrary queries.\n. ",
    "HassanIbrahim": "@luhfilho Can you please post a code snippet . I had the same issue with Laravel 5.5 and didn't find an official fix; so I did the following workarounds:\n1. To use Accessor on the Model\npublic function getAssociatedViewsCountAttribute()\n{\nreturn $this->associated_views->count();\n}\n2. Simply Call the Count() method on Relation Collection\necho $vehicle->associated_views->count();. Similar to https://github.com/jenssegers/laravel-mongodb/issues/1339. Solved by Appending and Accessor\nprotected $appends = ['RepliesCount'];\npublic function getRepliesCountAttribute()\n    {\n        return $this->replies->count();\n    }. @alexjose done. . Hi Guys, any update regarding this? I installed MongoDriver using PECL and updated composer. . @josemiguelq which composer.json?. @jenssegers please help.. @BlueAmbition You can do BaiKeRecommend::latest(). @BlueAmbition BaiKeRecommend::orderBy('db_field', 'desc')->get();. ",
    "kodeine": "update\nrunning following query works but it returns data as an array not as an object.\n$query = $this->getConnection()->table('oauth_clients')\n                ->select(['id', 'secret', 'name'])\n                ->where('id', $clientId)\n                ->where('secret', $clientSecret);\n//$result = $query->first();\n// i had to use (object) for a fix since above query returns array()\n$result = (object) $query->first();\nMaybe when queries are passed, we should strip database table name from the select() and where() statements. This way one would not need to update existing applications.\n. Its never a good practice to edit the vendor source.\nYou could simply make your model use primary key as id.\nprotected $primaryKey = '_id';\n. i like how L5 handle validations, You have different class which extends formRequest. Maybe take a look at that. Cleaner and effective code.\n. You mean graphql?. ",
    "mshalash": "I have sorted this problem as follows:\n(please note this workaround is ok for MongoDB only)\nedit (laravel bas folder)/vendor/laravel/framework/src/illuminate/Validation/Validator.php\nchange at line 1009 9 (just add _ to the id):\n$idColumn = isset($parameters[3]) ? $parameters[3] : 'id';\nto\n$idColumn = isset($parameters[3]) ? $parameters[3] : '_id';\nSince mongodb uses _id for id field and not id as in MySql and other databases.\nI have tested this and works perfect with my Rad4PHP CRUD generator (www.rad4php.com)\n. You are absolutely right \u00a0but unfortunately there is no way around this problem but to modify the source code, I have tried your suggestion but did not work (still does not exclude the current record from checking unique rule).\nSo it is up to jessegers to sort this problem, meanwhile my workaround is fine as long as you are using Mongodb.\nThanks\u00a0M A Shalash M.Sc. B.Sc.\nOn Thursday, 15 January 2015, 22:48, Ahsen M <notifications@github.com> wrote:\nIts never a good practice to edit the vendor source.\nYou could simply make your model use primary key as id.\nprotected $primaryKey = '_id';\u2014\nReply to this email directly or view it on GitHub. \n. Hi SanJay1688 \nAccording to Laravel docs,I use rules as follows:\n        protected $rules =array(\n                    'username'   => 'required|unique:users,username,{id}',\n            );\nUse my generater at (www.rad4php.com)  current version it will generate CRUD scaffolding and all the models, views, routes ...\nIf you  wait a week I will upload a new version with graphical interface.\nThanks\n. ",
    "sanjay1688": "Inside Model \npublic static function rules ($id=0, $merge=[]) {\n    return array_merge( \n        [\n            'username'  => 'required|min:3|max:12|unique:users,username' . ($id ? \",$id\" : ''),\n            'email'     => 'required|email|unique:member'. ($id ? \",id,$id\" : ''),\n            'firstname' => 'required|min:2',\n            'lastname'  => 'required|min:2',\n        ], \n        $merge);\n}\nValidation on create:\n$validator = Validator::make($input, User::rules());\nValidation on update:\n$validator = Validator::make($input, User::rules($id));\nValidation on update, with some additional rules:\n$extend_rules = [\n    'password'       => 'required|min:6|same:password_again',\n    'password_again' => 'required'\n];\n$validator = Validator::make($input, User::rules($id, $extend_rules));\nGiving me an error\nMongoResultException (15959) \nlocalhost:27017: exception: the match filter must be an expression in an object\n/var/www/html/fitadmin/vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Collection.php\n            {\n                $query[] = '{...}';\n            }\n        }\n```\n    $start = microtime(true);\n$result = call_user_func_array(array($this->collection, $method), $parameters);\n\n// Once we have run the query we will calculate the time that it took to run and\n\n```\nedit (laravel bas folder)/vendor/laravel/framework/src/illuminate/Validation/Validator.php\nchange at line 1009 9 (just add _ to the id):\n$idColumn = isset($parameters[3]) ? $parameters[3] : 'id';\nto\n$idColumn = isset($parameters[3]) ? $parameters[3] : '_id';\nbut does not work\n. ",
    "eduardoarandah": "THIS IS AN EASY SOLUTION\nJust add $this->route('id') as the third parameter\nif your route was defined like this:\nRoute::put('{company}', 'CompanyController@update')\n        ->name('update');\n\nthen your parameter name is \"company\"\nSo in your FormRequest:\npublic function rules()\n{\n    $rules = [\n        'url' => [\n            'required',\n            'url',\n            'unique:companies,url,'.$this->route('company') ?? 0\n        ],    \n    ];\n    // dd($rules); << check yourself\n\n    return $rules;\n}\n\nThis FormRequest works the same for insert or update. \nthis line will instruct to ignore \"0\" in case of insert\n$this->route('company') ?? 0. ",
    "alexeyriva": "php\npublic function calculationsCount()\n{\n    return $this->raw(function($collection)\n    {\n        return $collection->aggregate([\n            [\n                '$group' => [\n                    '_id' => '$user_id',\n                    'count' => [\n                        '$sum' => 1\n                    ]\n                ],\n            ],\n        ]);\n    })[\"result\"];\n}\n. ",
    "vanchelo": "@alexeyriva I cant use it in this case User::with('calculationsCount')->get()\n. ",
    "juaniiton1": "Thanks for your answer. I agree with you, but I have some appends attributes in the embedded model, and I think that without the eager loading it doesn't work (doesn't return the appended attributes). Because of this I was trying to use the eager loading.\n. Yes, at the moment I've hardcoded the laravel version to 4.2.16, so it's working fine (until you add this little fix to a stable version).\n. ",
    "schellingerht": "Hi Jens, interesting.\nIn extension to the question of juanilton1. It suggests too the embedding of the reference, such as:\nUser collection:\n[{\n    \"_id\" : ObjectId(\"54f9ce74e75a4fe067b7acd9\"),\n    \"first_name\" : \"Hostan\",\n    \"last_name\" : \"Placstac\",\n    \"sex\" : \"male\",\n    \"agree_with_conditions\" : true,\n    \"updated_at\" : ISODate(\"2015-03-06T15:59:17.915Z\"),\n    \"created_at\" : ISODate(\"2015-03-06T15:57:40.700Z\"),\n    \"password\" : \"$2y$10$LrAW.6EQT2KZFYfG996jhuGGCxVPb0PrWN6nIF3M/VP21U2djpVFe\",\n    \"active\" : true,\n    \"remember_token\" : \"zjUXrQfxyngCRQrDhxlZ6Hz0HyC39GtljeFaNvmb6AMvUFsXFWRCck0FMcR6\",\n    \"emails\" : [{ \n        \"_id\": ObjectId(\"54f9ce74e75a4fe067b7acda\")\n    }]\n}]\nEmail collection:\n[{\n    \"_id\" : ObjectId(\"54f9ce74e75a4fe067b7acda\"),\n    \"email\" : \"hostan@act.com\",\n    \"active\" : true,\n    \"updated_at\" : ISODate(\"2015-03-06T15:58:19.744Z\"),\n    \"created_at\" : ISODate(\"2015-03-06T15:57:40.708Z\")\n}]\nI'm using emails in difference situations. That's why I store the emails in own collection.\nIn my User model, i've embedsMany to Email. How do I eager load User with Emails?\n. Hi Mike,\nThanks for your reply. I'm using emails in a lot of contexts. That's why I've a email collection (instead of data duplication).\nI don't want to use link tables, but embedded arrays with id's (see my example above).\nIn my User model, I've:\npublic function emails() {\n    return $this->hasMany('App\\Email');\n}\nIn my Email model, I've:\npublic function user() {\n    return $this->belongsTo('App\\User');\n}\nBut no result by storing embedded relations. Even so if I change hasMany into embedsMany....\n. Hi Murwa,\nThanks, but your solution only works for me by storing the user_id in de email collection.\nI'm really confused about the embedded relation:\nI only want to embed the reference to another collection instead of using a linking table.\n. @Alexandre, thanks, and yes, I know your suggestions.\nI'm wondering why embedded references to other collections is not default\nsupported. Now, I'm obliged to save emails in difference (sub)collections.\nThe second option is using linking tables. The third option is to create a\ncustom relationship.\nI consider to downshift MySQL.\n2015-03-09 18:40 GMT+01:00 Alexandre Butynski notifications@github.com:\n\n@Henri85 https://github.com/Henri85 look how the many to many\nrelationship work :\nhttps://github.com/jenssegers/laravel-mongodb#relations. Try it.\nAlso, you can build a kind of custom relationship by defining a custom\nschema and custom getters and setters like this ones :\nclass User {    public function getEmailsAttribute();    public function attachEmail($email, $pivot = array());    public function removeEmail($emailId);}\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jenssegers/laravel-mongodb/issues/397#issuecomment-77903719\n.\n. \n",
    "damienwebdev": "Is there an accepted fix for this? I understand that the embedsOne relationship is directly included on the original object, but I've found that in the latest Lumen that without eager loading the relationship on the model, you end up with missing keys...e.g.\njavascript\n{\n\"_id\": \"574cfeb79a89200be60018b3\",\n\"updated_at\": \"2016-05-31 03:02:15\",\n\"created_at\": \"2016-05-31 03:02:15\",\n\"embededDocument\": {\n    \"updated_at\": {},\n    \"created_at\": {},\n    \"_id\": {}\n},\n@jenssegers is this intended functionality?\n. ",
    "sakirsensoy": "I have a crazy solution for this problem :D\n``` php\n$media = Media::first();\n// load video relation\n$media->video = $media->video;\nreturn $media;\n```\n. ",
    "gnrcampos": "I solved my problem using something along the lines suggested by @sakirsensoy , but I overrode the toArray() method so it looks like this:    \npublic function toArray() {\n    $this->setAttribute('community', $this->getAttribute('community'));\n    return parent::toArray();\n}. @vincentshiqi your command seems to be not properly set up. Check this example and let me know if you can't use it. $p_Lat, $p_Long and $p_Dist are raw numbers.\n\n$v_Point = [\n    'type' => 'Point',\n    'coordinates' => [$p_Lon, $p_Lat]\n];\n  $v_Results = DB::connection('mongodb')->getMongoDB()->command([\n    'geoNear' => 'coordinates',\n    'near' => $v_Point,\n    'spherical' => true,\n    'distanceField' => 'dist',\n    'maxDistance' => $p_Dist,\n    'limit' => 5\n]);\n. +1\n. Any progress on this? Depending on this merge to do some things, can I help in any way?\n. You can use geoNear for that. For what I understood (I'm new to the package) it's not currently supported but you can user a raw command to achieve this. In my case, here's what I had to do:\n1 - Get the raw response from the database ($p_Lat = Latitude, $p_Long = Longitude, $p_Dist = Distance)\n$v_Point = [\n    'type' => 'Point',\n    'coordinates' => [$p_Lon, $p_Lat]\n];\n$v_Results = DB::connection('mongodb')->getMongoDB()->command([\n    'geoNear' => 'coordinates',\n    'near' => $v_Point,\n    'spherical' => true,\n    'distanceField' => 'dist',\n    'maxDistance' => $p_Dist,\n    'limit' => 5\n]);\n2 - The result nests the object inside an 'obj' key, so I had to override the \"newFromBuilder\" method in the Model object and unwrap it.\npublic function newFromBuilder($attributes = [], $connection = null)\n{\n    if(isset($attributes['obj'])) {\n        $attributes = array_merge($attributes, $attributes['obj']);\n        unset($attributes['obj']);\n    }\n    return parent::newFromBuilder($attributes, $connection);\n}\nPlease let me know if my approach wasn't the best one and I'm happy to discuss and learn more!\n. +1, debugbar giving me a hard time\n. It will be easier to help if you post the rest of the error message.\nI, for instance, had a similar issue and what was missing was the 'database' => 'authentication db name' in the options array. Try 'replicaset' instead of 'replicaSet' as well.. ",
    "salzamt": "+1!\n. awesome, thanks a lot and much luck! \n. ",
    "reallyalok": "Thanks for your effort @jenssegers . Is it available now or by when we will be available to use it with Laravel 5 .\nI tried with laravel 5 and getting below message\nYour requirements could not be resolved to an installable set of packages.\nProblem 1\n    - Conclusion: remove laravel/framework v5.0.13\n    - way/generators 2.0 requires illuminate/support 4.1.* -> satisfiable by ill\numinate/support[v4.1.0, v4.1.1, v4.1.10, v4.1.11, v4.1.12, v4.1.13, v4.1.14, v4.\n1.15, v4.1.16, v4.1.17, v4.1.18, v4.1.19, v4.1.2, v4.1.20, v4.1.21, v4.1.22, v4.\n1.23, v4.1.24, v4.1.25, v4.1.26, v4.1.27, v4.1.28, v4.1.29, v4.1.3, v4.1.30, v4.\n1.4, v4.1.5, v4.1.6, v4.1.7, v4.1.8, v4.1.9].\nwhat should I do please suggest some. Thanks @jenssegers \n. Thanks for the reply, what do you mean by 2.1.0 tag and 3.x version here, Is that mean I can use with Laravel 5.0.0 to Laravel 5.0.2, or will be better to use L 4.2.x and if we have docs to use that with L 5 versions  @jenssegers \n. ",
    "MaurizioBrioschi": "This is the solution:\nSchema::create('collection', function ( $collection ) {\n      $collection->unique(array( 'a', 'b' ));\n});\n. ",
    "giboow": "Hi @jenssegers, I've seen it. I' will correct this soon\n. It works now!\nI've correct my mistakes in order to pass library's phpunit tests.\nMy solution uses map reduce of mongo to get datas.\nContact me if you have any comments about my merge request\nPhilippe\n. the old request is here : https://github.com/jenssegers/laravel-mongodb/pull/400\n. ",
    "franquis": "Got the same issue running MongoDB v2.4.11. \nPlease note that when running MongoDB v2.6.9, it works as expected.\n```\nclass OrderController {\n    public function createOrder(){\n        $order = new Order();\n        $order->addProduct();\n        ...\n        $order->save();\n    }\n}\nclass Order extends Moloquent {\npublic static function boot(){\n    parent::boot();\n\n    static::created(function($order) {\n        $order->fees = $order->getFees();\n        $order->save();            \n    });\n}\n\npublic function getFees(){\n    return ProductFee::where('order_id', $this->id)->sum('amount');\n}\n\n}\n```\nSTACK TRACE\n```\nERROR: exception 'MongoCursorException' with message 'mongohost:43440: Mod on _id not allowed' in /vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Collection.php:59\nStack trace:\n0 [internal function]: MongoCollection->update(Array, Array, Array)\n1 /vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Collection.php(59): call_user_func_array(Array, Array)\n2 /vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Query/Builder.php(679): Jenssegers\\Mongodb\\Collection->__call('update', Array)\n3 /vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Query/Builder.php(679): Jenssegers\\Mongodb\\Collection->update(Array, Array, Array)\n4 /vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Query/Builder.php(436): Jenssegers\\Mongodb\\Query\\Builder->performUpdate(Array, Array)\n5 /vendor/laravel/framework/src/Illuminate/Database/Eloquent/Builder.php(316): Jenssegers\\Mongodb\\Query\\Builder->update(Array)\n6 /vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Eloquent/Builder.php(36): Illuminate\\Database\\Eloquent\\Builder->update(Array)\n7 /bootstrap/compiled.php(6874): Jenssegers\\Mongodb\\Eloquent\\Builder->update(Array)\n8 /bootstrap/compiled.php(6845): Illuminate\\Database\\Eloquent\\Model->performUpdate(Object(Jenssegers\\Mongodb\\Eloquent\\Builder), Array)\n9 /app/models/Order.php(45): Illuminate\\Database\\Eloquent\\Model->save()\n10 [internal function]: Order::{closure}(Object(Order))\n11 /bootstrap/compiled.php(6246): call_user_func_array(Object(Closure), Array)\n12 /bootstrap/compiled.php(6923): Illuminate\\Events\\Dispatcher->fire('eloquent.create...', Object(Order))\n13 /bootstrap/compiled.php(6895): Illuminate\\Database\\Eloquent\\Model->fireModelEvent('created', false)\n14 /bootstrap/compiled.php(6847): Illuminate\\Database\\Eloquent\\Model->performInsert(Object(Jenssegers\\Mongodb\\Eloquent\\Builder), Array)\n15 /app/controllers/OrderController.php(75): Illuminate\\Database\\Eloquent\\Model->save()\n16 [internal function]: OrderController->createOrder()\n{ ... }\n32 /public/index.php(49): Illuminate\\Foundation\\Application->run()\n33 {main} []\n``\n. Same problem after upgrading this package from v3.1.1 to v3.1.3 usingcomposer update` (on production and on localhost)\nAny use of Moloquent throw a AuthenticationException 'Authentication failed', while still using correct mongodb credentials.\nI did not changed anything in my database.php configuration, nor in my .env.\nReverting to v3.1.1 fixed the problem.\nStack:\nPHP 5.6.27 (cli)\nmongodb extension version 1.1.9\nMongoDB version 3.2.9\n. ",
    "bonroyage": "Any chance on getting this merged?\n. No worries, thanks!\n. ",
    "amahrt": "This should be in the readme! :-) +1\n. ",
    "orangeShadow": "And how ordered that by score like in js  query? \ndb.products.find({$text:{$search:\"SomeText\"}},{score:{$meta:'textScore'}}).sort({score:{$meta:'textScore'}})\n. I write that code \n```\npublic function scopeWhereFullText($query, $search)\n{\n    $query->getQuery()->projections = ['score'=>['$meta'=>'textScore']];\nreturn $query->whereRaw(['$text' => ['$search' => $search]]);\n\n}\n```\nand in result\n```\n$products = Product::whereFullText($request->get('q',''))\n                    ->orderBy('score',['$meta'=>'textScore'])->get();\n$max = $products->max('score');\n$min = $products->min('score');\n$products = $products->filter(function($item) use($max,$min){\n    return $item->score > ($max+$min)/2;\n});\n```\nBut this method broke pagination  :( \n. I'm sorry homestead has 2 php.ini to cli and fpm :( I add extension only cli \n. Yes,I will do, if you help me. What I must test ? The result is array or equal nesting?. ",
    "mateusvtt": "An alternative for custom pagination using textScore:\n```\n//App\\Models\\User\npublic function scopeWhereFullText($query, $search, $page = 1, $limit = 10)\n    {\n        $query->getQuery()->projections = ['score'=>['$meta'=>'textScore']];\n    $query->orderBy('score',['$meta'=>'textScore']);\n\n    $query->skip(($page - 1)*$limit);\n\n    $query->take($limit);\n\n    return $query->whereRaw(['$text' => ['$search' => $search]]);\n}\n\n```\nUsage:\nUser::whereFullText('searchable',1,10)->get();. Hi @balap777  I've tried to reproduce your issue adding a extra field to sort.\n$query->orderBy('score',['$meta'=>'textScore'])->orderBy('_id', 'asc');\nIt works here, but keep in mind that the second orderBy acts as a tie-breaking criterion. I.e. the documents with the highest score will continue at the top, only those with similar scores will be resorted.. ",
    "balap777": "hello @mateusvtt i am using your function for mongodb it works but when i use another orberby after $query->orderBy('score',['$meta'=>'textScore']) the second orberby not been used or been neglected for ordering the data your help will greatly appreciated. ",
    "andrewelkins": "Thanks!\nOn Wed, Feb 4, 2015 at 2:38 AM, Jens Segers notifications@github.com\nwrote:\n\nClosed #409 https://github.com/jenssegers/laravel-mongodb/issues/409.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/jenssegers/laravel-mongodb/issues/409#event-229944850\n.\n. \n",
    "Haseeb90": "The date in the database is ISODate format\n\"created_at\" : ISODate(\"2015-02-03T16:29:26.965Z\")\nAnd I want to find all content of this month \nSelect * from content where created_at like '2015-02%'\nThe above is the SQL versions of the query\n. ",
    "Geraden07": "Sorry the screenshot isn't easy to read without zooming in.\nBasically issued \"composer require jenssegers/mongodb\" as instructed in documentation and the requirements could not be resolved to an installable set of packages. Most of the issues seem related to the laravel/framework v5.0.0 dependency (specifically illuminate/events).\n. ",
    "nhalloran": "+1 for this. \nSeeing that compose.io uses a different port for each replica, I think it would be a common use case.\nTo nitpick -  allowing an array for port would work, but the relationship between the host and port field is not that intuitive.  For example, if there were 3 hosts and 2 port, what does that mean?  Still, other solutions I can think of would require coding something more elaborate.....\n. You know, this makes me appreciate the beauty of the good ol' connection string, that in my case, compose.io provided for my copy+paste pleasure.\nIt seems like in this library, this string ultimately gets generated from the config array here:\nhttps://github.com/jenssegers/laravel-mongodb/blob/master/src/Jenssegers/Mongodb/Connection.php#L152-L174\nSo in my case, I deconstruct the connection string into an array which gets re-assembled into the original connection string - only it can't support the host-specific port. Is there an option to provide the original connection string instead of the array, to bypass all of this?\n. Thanks so much J/S!  I just updated and it's working.\n. ",
    "akaroot": "The problem is in Illuminate\\Support\\Arr::pluck. It can't assign MongoID object as key for results array\nWhen I modified to \nphp\nMyModel::where( 'network_id', 5 )->get()->lists('name', '_id');\nit works.\n@jenssegers , maybe you would like to override lists method in Jenssegers\\Mongodb\\Eloquent\\Builder (I don't sure that it's a good idea)\n``` php\npublic function lists($column, $key=null){\n        if( $key == '_id' )\n        {\n            return parent::get([$column, $key])->lists($column, $key);\n        }\n    return parent::lists($column, $key);\n}\n\n```\n. take a look at issue #1282. see PR #1282 . ",
    "dannysood": "@jenssegers Any update on this?. Same issue. Worked out is what i am depending on for now. This only happened for me when i had the following query \n->where('access', EnumPermission::PUBLIC ()->getValue())\n                ->orWhere('owner_id', Auth::user()->id)\n                ->where('title', 'like', $search_regex)\n                ->orWhere('description', 'like', $search_regex)\n                ->orWhere('tags', 'like', $search_regex)\nHere this part was never getting executed ->orWhere('description', 'like', $search_regex)\n                ->orWhere('tags', 'like', $search_regex)\nI ended up fixing it by ->where('access', EnumPermission::PUBLIC ()->getValue())\n                ->orWhere('owner_id', Auth::user()->id)\n                ->where(function($query) use ($search_regex){\n                  $query->where('title', 'like', $search_regex)\n                      ->orWhere('description', 'like', $search_regex)\n                      ->orWhere('tags', 'like', $search_regex);\n                }). @lukergz  did you find a workaround?. @pi0 Thanks for the response :) Ill close this then. ;). ",
    "george-viaud": "This still appears to be a problem in 5.2 ?. @gieroj 's fix worked for me - thank you\n. So sorry - marking this as closed...  The problem is clearly solved in the error itself:\nTo enable extensions, verify that they are enabled in those .ini files:\n    - /etc/php5/cli/php.ini\nI had enabled in my main php.ini but not in the cli php.ini file - enabling there solved the problem:\nextension=mongodb.so\nNot enough coffee or more sleep required :)\n. Ok - I figured out what was wrong and will clarify below, but I'm not sure if this is the cleanest way to do this as it requires modifying the framework...\nThe problem has to do with Auth (I'm using mongo for auth db as well, I forgot I had to hack this in before and since upgrading the framework the hack needed to be re-implemented).\nThe vendor/laravel/framework/src/Illuminate/Foundation/Auth/User.php file now reads:\n```\n<?php\nnamespace Illuminate\\Foundation\\Auth;\nuse Illuminate\\Auth\\Authenticatable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Moloquent; // ADDED THIS LINE\nuse Illuminate\\Auth\\Passwords\\CanResetPassword;\nuse Illuminate\\Foundation\\Auth\\Access\\Authorizable;\nuse Illuminate\\Contracts\\Auth\\Authenticatable as AuthenticatableContract;\nuse Illuminate\\Contracts\\Auth\\Access\\Authorizable as AuthorizableContract;\nuse Illuminate\\Contracts\\Auth\\CanResetPassword as CanResetPasswordContract;\nclass User extends Moloquent implements // MODIFIED THIS LINE\n    AuthenticatableContract,\n    AuthorizableContract,\n    CanResetPasswordContract\n{\n    use Authenticatable, Authorizable, CanResetPassword;\n}\n```\nThoughts on this?\n. My apologies - I discovered my error:\nUTCDateTime's constructor expects the timestamp to include uSeconds,  i.e. timestamp * 1000\nsolution was:\nnew UTCDateTime($startDate->timestamp * 1000);\nfor both start and end times.. I see now I likely need: \nhttps://github.com/jenssegers/Laravel-MongoDB-Session\n. Indeed, the following corrected my issues:\n\ncomposer require jenssegers/mongodb-session\nAdd the session service provider in app/config/app.php: Jenssegers\\Mongodb\\Session\\SessionServiceProvider::class,\nUpdate .env file to reflect: SESSION_DRIVER=mongodb. Thanks for the insight @pablofmorales  - any idea why the raw code works but model-derived call didnt?  Thanks!. It sounds like you're describing some sort of item variant or item modifier for variant-style items.\n\nThat is, normal items have a single fixed weight but variant items may have varying attributes but share others.\nPerhaps you can approach this by having your parent item embedsMany itemVariants (or similar).\nThe itemVariants can contain any differences that should override the parent item's parameters.  In this way variant items can be extensible such that things like color, weight, size, foo can be altered going forward with the same mechanism.\nYou would need to work out how to detect variant-type items and iterate over variants to produce the resulting solid item.\nI hope my understanding of your issue was correct =). Thinking on this further, this is likely very related to #1628 and #1618 if instead of an embedsMany you wanted to use a relational table.. Perhaps sort companies by name, then iterate over the results, building a collection or array of users as you go using the inverse relationship users() in the Company model?\n. I think this may be related to #1628 - similar issue.\nThis is from the readme:\nThe belongsToMany relation will not use a pivot \"table\", but will push id's to a __related_ids__ attribute instead. This makes the second parameter for the belongsToMany method useless. If you want to define custom keys for your relation, set it to `null`:\nIf I understand correctly, this is a real super weakness of the implementation in this lib and should be brought to work in a similar way to the standard tabular databases.\nThe created field x_ids would just become x_pivot or similar and would contain not only the IDs of the associated collection but also the pivot data.\nI think you can achieve the same end-effect but with extra steps if you manually implement the pivot, but this is heavy / shows the weakness... \nI wish I had better news but will subscribe to this thread in hopes an answer better than mine emerges as this is a major issue I would also like to see rectified.\nBe well\n. Would you post an example string in the error message (xxxxxxx) please?  (I don't think this has to do with laravel-mongodb). I assume this is in your model?  If so, there is no need to pass a variable in, just do:\nreturn $this->created_at->diffForHumans();\nLaravel will auto-magically treat any $dates field as Carbon.\nHope this helps. Simple example from inside tinker using standard Users collection:\n```\n\n\n\n\\App\\User::first()->created_at->diffForHumans();\n=> \"2 years ago\"\n```. Ahh.  Carbon doesn't take epoch time in this way.  Try createFromTimeStamp instead:\n\n\n\nCarbon::createFromTimeStamp(1540051389)->diffForHumans();. So I was able to get what I want thought I hope there is a better way.\nI implement a function in the child class that finds the instance of the parent which contains the matching child ID... then I filter where _id of the child = $id like so:\nfunction getById($id) {\n   return ParentClass::where('child_class._id', '=', $id)->first()->children()->where('_id', $id)->first();\n}\nIs there a better way to do this?\nI'm worried about multiple-sublevels deep as I plan to use embedsmany in this way if possible.\nHowever I can imagine needing to parse through child1.child2.child3.child4._id and then ->children->where('child2.child3.child4._id', $id) and this solution then seems much less sexy\nYour thoughts greatly appreciated. Further boiled down into single-question form:\n\"Why is 'babies' an array of objects when 'toys' is a object of objects?\"\nThen:  Isn't this inconsistent?. (If I understand you correctly)\nMongo's decimal type is Double and php's soft-type is Float (single precision) so assuming this is sufficient precision, storing the data with this level of precision would be sufficient.\nIf you wish, on the presentation level, to only show particular bits of precision, you could store the data as an object with the number of decimals or bits of precision stored as a parameter.\nYou could then overload the magic getter for that value such that it checks for the precision parameter and returns the value as a massaged string, only showing the precision requested, performing the appropriate rounding etc as you see fit.\nThere are likely other ways to do this - I hope this helps.. ",
    "ilesinge": "We experience the same issue.\nThe problem was resolved by this commit in 2.1.0beta:\nhttps://github.com/jenssegers/laravel-mongodb/commit/76675fd7ee47f3c01737d268e64cae124aebe1e9\nBut 2.1.0beta is only compatible with Laravel 5.0.\nAs we need to maintain a project still using 4.2, it would be nice to have a 2.0.4 release of Laravel-MongoDB to fix this one issue.\nMaybe it would be nice to create a 4.2 branch of Laravel-MongoDB for that kind of fix ?\n. By the way the change was introduced by Laravel 4.2.17, so it should be OK to use 4.2.16 against last stable version of Laravel-MongoDB\n. That would be perfect!\n. ",
    "BenoitTalbot": "hi, \n@igormatkovic Do you have to find a solution to your problem?\nthx,\n. ok thanks, I meet the same problem, I will switch too..\n. ",
    "stephandesouza": "Just an update that I got this bug too\nException\n```\n  [MongoException]\n  zero-length keys are not allowed, did you use $ with double quotes?\nException trace:\n () at /var/www/sys/vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Collection.php:42\n MongoCollection->update() at n/a:n/a\n call_user_func_array() at /var/www/sys/vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Collection.php:42\n Jenssegers\\Mongodb\\Collection->__call() at /var/www/sys/vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Query/Builder.php:763\n Jenssegers\\Mongodb\\Collection->update() at /var/www/sys/vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Query/Builder.php:763\n Jenssegers\\Mongodb\\Query\\Builder->performUpdate() at /var/www/sys/vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Query/Builder.php:493\n Jenssegers\\Mongodb\\Query\\Builder->update() at /var/www/sys/vendor/laravel/framework/src/Illuminate/Queue/DatabaseQueue.php:198\n Illuminate\\Queue\\DatabaseQueue->releaseJobsThatHaveBeenReservedTooLong() at /var/www/sys/vendor/laravel/framework/src/Illuminate/Queue/DatabaseQueue.php:164\n Illuminate\\Queue\\DatabaseQueue->pop() at /var/www/sys/vendor/laravel/framework/src/Illuminate/Queue/Worker.php:177\n Illuminate\\Queue\\Worker->getNextJob() at /var/www/sys/vendor/laravel/framework/src/Illuminate/Queue/Worker.php:151\n Illuminate\\Queue\\Worker->pop() at /var/www/sys/vendor/laravel/framework/src/Illuminate/Queue/Console/WorkCommand.php:109\n Illuminate\\Queue\\Console\\WorkCommand->runWorker() at /var/www/sys/vendor/laravel/framework/src/Illuminate/Queue/Console/WorkCommand.php:71\n Illuminate\\Queue\\Console\\WorkCommand->fire() at n/a:n/a\n call_user_func_array() at /var/www/sys/vendor/laravel/framework/src/Illuminate/Container/Container.php:502\n Illuminate\\Container\\Container->call() at /var/www/sys/vendor/laravel/framework/src/Illuminate/Console/Command.php:150\n Illuminate\\Console\\Command->execute() at /var/www/sys/vendor/symfony/console/Command/Command.php:259\n Symfony\\Component\\Console\\Command\\Command->run() at /var/www/sys/vendor/laravel/framework/src/Illuminate/Console/Command.php:136\n Illuminate\\Console\\Command->run() at /var/www/sys/vendor/symfony/console/Application.php:878\n Symfony\\Component\\Console\\Application->doRunCommand() at /var/www/sys/vendor/symfony/console/Application.php:195\n Symfony\\Component\\Console\\Application->doRun() at /var/www/sys/vendor/symfony/console/Application.php:126\n Symfony\\Component\\Console\\Application->run() at /var/www/sys/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php:100\n Illuminate\\Foundation\\Console\\Kernel->handle() at /var/www/sys/artisan:36\n```\nHere comes the JSON:\n{\n   \"_id\" : ObjectId(\"55e7b59c9cb7881e178b4568\"),\n   \"queue\" : \"default\",\n   \"payload\" : \"{\\\"job\\\":\\\"Illuminate\\\\\\\\Events\\\\\\\\CallQueuedHandler@call\\\",\\\"data\\\":{\\\"class\\\":\\\"App\\\\\\\\Listeners\\\\\\\\Me\\\\\\\\EmailAddConfirmation\\\",\\\"method\\\":\\\"handle\\\",\\\"data\\\":\\\"a:1:{i:0;O:24:\\\\\\\"App\\\\\\\\Events\\\\\\\\Me\\\\\\\\EmailAdded\\\\\\\":2:{s:4:\\\\\\\"user\\\\\\\";O:45:\\\\\\\"Illuminate\\\\\\\\Contracts\\\\\\\\Database\\\\\\\\ModelIdentifier\\\\\\\":2:{s:5:\\\\\\\"class\\\\\\\";s:14:\\\\\\\"App\\\\\\\\Model\\\\\\\\User\\\\\\\";s:2:\\\\\\\"id\\\\\\\";s:24:\\\\\\\"55b072c034a84b2aee4edd55\\\\\\\";}s:8:\\\\\\\"newEmail\\\\\\\";s:28:\\\\\\\"stephan@pontocriativo.com.br\\\\\\\";}}\\\"}}\",\n   \"attempts\" : NumberLong(0),\n   \"reserved\" : NumberLong(0),\n   \"reserved_at\" : null,\n   \"available_at\" : NumberLong(1441248668),\n   \"created_at\" : NumberLong(1441248668)\n}\n. Is the same issue from #548:\n- Maybe you not configured \"migrations\" table name onto \"config/database.php\". ",
    "jeremy-brenner": "I'm working on rolling my fix into laravel-mongodb here: https://github.com/jeremy-brenner/laravel-mongodb \nI will post here and submit a pull request once it is ready.\n. Ok, pull request submitted.  https://github.com/jenssegers/laravel-mongodb/pull/623\nIf you want to pull mine in the meantime in your composer.json change your require:\n\"jenssegers/mongodb\": \"dev-master\",\nand add the repository:\n\"repositories\": [\n    {\n        \"type\": \"vcs\",\n        \"url\": \"git@github.com:jeremy-brenner/laravel-mongodb.git\"\n    }\n],\nYou also need to set your QUEUE_DRIVER to \"database\".\n. It isn't a driver per se.  The 'database' setting uses whatever database driver Laravel is already using.  If you set your queue driver to database while the laravel-mongodb driver is in use it will try to use your mongo database and fail.  This really just patches it so that it can work as intended.  I have not really looked at how the other queues are implemented but since mongodb isn't really a queue then I doubt anybody would want a standalone mongodb queue while using some other database as default laravel db driver.  That is my reasoning anyway. :)\ntl;dr: the queue drivers are for different \"queues\" and \"database\" is to use the Laravel database which in this case happens to be mongodb.\n. The difference is that Mongo can't \"select for update\" so it was replaced with a simple loop.  As for the naming, the \"database\" and \"table\" nomenclature was kept because really the \"database\" driver has nothing to do with the db and really means \"use the ORM\" which in this case happens to be Moloquent rather than Eloquent.  If I switch then name then I have to do a little bit of redirecting instead of just using the ORM directly like it already does.  It's a trivial difference so I left it.  It works fine, I use it personally.  I have not done a recent merge and test but I use it in a couple projects.\n. This is a simple connector to make job queues work with Moloquent.  It just adds the necessary files and makes no changes to Moloquent directly.  You just need to load them as outlined in the docs to make it work.\n. Is there any more I can do to help this go more smoothly?  Any other outstanding questions that I have not covered?\n. The issue is pretty straightforward.\nIn releaseJobsThatHaveBeenReservedTooLong in Illuminate/Queue/DatabaseQueue.php the query chains an update.  This doesn't work with mongo. \n```\nprotected function releaseJobsThatHaveBeenReservedTooLong($queue)\n{\n    $expired = Carbon::now()->subSeconds($this->expire)->getTimestamp();\n$this->database->table($this->table)\n            ->where('queue', $this->getQueue($queue))\n            ->where('reserved', 1)\n            ->where('reserved_at', '<=', $expired)\n            ->update([\n                'reserved' => 0,\n                'reserved_at' => null,\n                'attempts' => new Expression('attempts + 1'),\n            ]);\n\n}\n```\nThats really it.  I tried extending the Illuminate classes but had little luck.  Another approach might be to simply emulate the ->update() behavior in the db driver leaving the database queue driver alone entirely.\n. ",
    "lasselehtinen": "Nevermind. I created a new model from scratch php artisan make:model and forgot these:\n```\nuse Jenssegers\\Mongodb\\Model as Eloquent;\nclass Model extends Eloquents {\n```\n. Sorry I forgot to mention that. But yes I did. I just tried migrations and seeding first.\n. ",
    "zoli": "There was an issue with my mcrypt package which has changed in laravel 4.2\n. ",
    "geofflancaster": "I'm not using group operations, just order by but the query log shows it's grouping.\n``` php\nMyModel:\npublic function scopeWithSuccess($query) {\n    return $query->withTrashed()->with('user')->where('status', '=', 1);\n  }\nService:\n$items = MyModel::withSuccess()->orderBy('created_at', 'DESC')->paginate(15, ['id','name']);\ndd(\\DB::getQueryLog());\nQuery Log Output:\narray (size=2)\n  0 => \n    array (size=3)\n      'query' => string 'mymodels.aggregate([{\"$match\":{\"$and\":[{\"status\":\"1\"}]}},{\"$group\":{\"_id\":null,\"aggregate\":{\"$sum\":1}}}])' (length=105)\n      'bindings' => \n        array (size=0)\n          empty\n      'time' => float 6.74\n  1 => \n    array (size=3)\n      'query' => string 'mymodels.find({\"$and\":[{\"status\":\"1\"}]},{\"id\":true,\"name\":true})' (length=64)\n      'bindings' => \n        array (size=0)\n          empty\n      'time' => float 0.06\n```\n. any ideas of what could be causing this? I'm still having the issue. thanks.\n. Is it possible to merge this into a branch that is capable of running on laravel 4.2? We have not yet upgraded to 5.0.\n. Any ideas on this one @jenssegers?\n. 4.2\n. Thanks @cnhttpd. I'm familiar with the orderBy method, but that was not my question.\nMy question was dealing with Blueprint and creating an index on a collection.\n. ",
    "irukukagika": "I am also experiencing this issue.. how to deal with it!!???\n. ",
    "nabizan": "Hello, can anybody look at this?\n. Hello?\n. Hi thank you. I have just checked your belongsToMany tests in RelationsTest and of course they are all passing.\nI will create ma own test at sunday probably. \nMeantime if you have some spare time I would be more than happy if you take a look at this even without my test. Maybe I have misunderstand logic behind this. Thank you\n. Hi, those are two failing unit tests. 8d06ac5342b00705e2dd7a78ea84368a3c7ed697 \nAll other operations seem to be ok. I write about 20 more test\nPlease take a look at this\n. Any update on this issue?\n. nice. I can confirm that fix is ok. Thank you\n. what is the status of this feature?\n. ",
    "emeno89": "Easiest way:\n//$mongoDate from db\n$dateTime = new \\DateTime();\n$dateTime->setTimestamp($mongoDate->sec);. ",
    "camohub": "The default timezone should be set in ->toDateTime() call. And only if is necessary to set another timezone it should be set up manually. . Hi do you have a solution of this issue?\nThanks.. ",
    "joshua-paddle": "issue turned out to be different - it was for some reason defaulting to admin database if user not found; so, checking for user first fixed.\n. ",
    "tayyabkhanrind": "Is it working for laravel 5? it's not working on my side\n. ",
    "ldynia": "Yes it is working\n. ",
    "Alain1405": "Any news on this?\n. Thanks!\n. ",
    "ScottSpittle": "Update on this? It's a blocker for me moving over fro MogoLid. :D\n. Ok thanks for the reply, I'll check back another time :D Good work!\n. How would you go about passing in values from outside $duplicates, such as an array to compare.\n. Yeah, but the index filtering results before they are returned would be a lot quicker\n. @chloealee No worries, Thanks anyway.\n. Your profile is an array of documents.\nSolution: $j['profile'][0]['gender']\nHowever if you did not have an array of embedded documents, then you could simply just go;\n$j->profile->gender\n. Ok, I'm trying to move over from MongoLid you see. No worries. It's just strange that other fields with MongoDate type are return as MongoDate, it's just created_at which is changed to carbon.\nThanks for the response\n. I'm with the same issue. https://github.com/jenssegers/laravel-mongodb/issues/585\n. This may help. I've changed to belongsTo() as that is the correct relationship. \nI'm now having an issue by which I cannot specify a custom foreign_key.\n``` php\npublic function account()\n{\n    return $this->belongsTo(Account::class);\n}\ndd($user->account);\n\n```\nThe above example works great when the User document has an 'account_id' field. Where as the example below does not, I receive \"Undefined property: App\\Entities\\User::$account\", which makes no sense as I have the following in the db;\n``` php\n{\n    \"_id\" : ObjectId(\"55fa8716bffebc0e328b4579\"),\n    \"account\" : \"55fa8716bffebc0e328b4578\",\n    \"updated_at\" : ISODate(\"2015-09-17T09:25:42.237Z\"),\n    \"created_at\" : ISODate(\"2015-09-17T09:25:42.237Z\")\n}\npublic function account()\n{\n    return $this->belongsTo(Account::class, 'account');\n}\ndd($user->account);\n\n```\nAgain, thanks for any help you can provide.\n. Resolved. You cannot have the method name be the same as the custom foreign_key\n. This is preventing me from using the library as all my existing data has them stored as MongoId's. So I cannot use relationships.\n. ",
    "devcodebakerz": "Is there any update on this ? if it's not implemented, i would really like to know the issues that you faced, so that may be I can give it a try, as I had my whole query engine written around eloquent, now I am moving to mongo and want to use the same, I don't want to move to doctrine as of now because of the learning curve.\nPlease let me know.. ",
    "pauloallex24": "Can you explain it better please?\n. Solved. You were right. Yesterday I was really tired and I've placed the string on the aliases and not on the providers. I'm really sorry and thanks for the help.\nYou havbe made an amazing work!\nRegards\n. Hi. Sorry for the late response, hope you already solved it.\nI've not much to say, but I think that it was because I have the Class string inside the Aliases array and not the Providers array.. ",
    "CloudS-Hu": "i have the same question , how did you solve? thank you very much. ",
    "daPhantom": "Setting the minimum-stability to \"dev\" does not help as well...\nMy composer.json:\n\n{\n    \"name\": \"xxx/yyy\",\n    \"description\": \"yyy\",\n    \"keywords\": [\"yyy\", \"zzz\"],\n    \"license\": \"MIT\",\n    \"require\": {\n        \"laravel/framework\": \"4.2.*\"\n    },\n    \"autoload\": {\n        \"classmap\": [\n            \"app/commands\",\n            \"app/controllers\",\n            \"app/models\",\n            \"app/database/migrations\",\n            \"app/database/seeds\",\n            \"app/tests/TestCase.php\"\n        ]\n    },\n    \"scripts\": {\n        \"post-install-cmd\": [\n            \"php artisan clear-compiled\",\n            \"php artisan optimize\"\n        ],\n        \"post-update-cmd\": [\n            \"php artisan clear-compiled\",\n            \"php artisan optimize\"\n        ],\n        \"post-create-project-cmd\": [\n            \"php artisan key:generate\"\n        ]\n    },\n    \"config\": {\n        \"preferred-install\": \"dist\"\n    },\n    \"minimum-stability\": \"dev\"\n}\n. I found a way to get it working... So the tutorial does not work ;)\ncomposer require jenssegers/mongodb:2.0.4\n. Thanks spawn-guy. But that does not explain why I can't use the same name.\n\nIs it better to always use $entity->attributes['features'] instead of $entity->features? Or is there not difference at all?\n. @spawn-guy Well this is kind of a recursion issue - you are right. However you are not right in pointing out that this isn't a Moloquent issue since it is. Check the code provided by darkeus and read the comment regarding the last if:\n// If the \"attribute\" exists as a method on the model, we will just assume\n   // it is a relationship and will load and return results from the query\n   // and hydrate the relationship's value on the \"relationships\" array.\nBut what I don't get is that the first if should already be returning the value instead of the last if returning the relation and therefore perform an early exit. \nThe error I receive in the end is total useless and does not point to the root of this issue which is reflection.\n@darkeus Thanks ;)\n. Thanks @darkeus! That makes a lot more sense actually than with the previous code snippet.\nSo as a rule of thumb you can say that you should always stick with $this->attributes['key'] instead of $this->key when not using a relation. Yet alone to avoid magic functions, reflection and additional execution time.\n. @darkeus Yes. It is kind of an accessor but it combines features from multiple relations instead of just FooBar. Just like this:\npublic function features() {\n    return array_merge($this->relationOne->attributes['features'], $this->attributes['features']);\n}\nThanks again for your help. I like magic functions and reflection but sometimes it's not bad to avoid them and just stick to direct functions. Most of the time \"magic\" is CPU intensive.\n. @darkeus You are right but as I pointed out earlier I would like to stick to a fixed scheme. First to avoid magic, where it's not needed, and second to have it stringent throughout the project. This way I know instantly if it is a relation or an attribute ;)\n. ",
    "anoopj1": "If you are using Laravel 5 then tutorial is working\nIn my case L4.2\ncomposer require jenssegers/mongodb:2.0.4\n. ",
    "danpecher": "I comfortably use Doctrine ODM with Laravel.\n. oh sry\n. ",
    "kirkbushell": "Not what I asked. At all =\\\n. ",
    "zeusent": "Hey!\nI'm having the same problem. Using the built in register/login screens I get this error:\n\nErrorException in Builder.php line 198:\nArgument 2 passed to Illuminate\\Database\\Query\\Builder::__construct() must be an instance of Illuminate\\Database\\Query\\Grammars\\Grammar, null given, called in /var/www/.../vendor/laravel/framework/src/Illuminate/Database/Eloquent/Model.php on line 1883 and defined\n\neven though my User model looks like this:\n```\nuse Jenssegers\\Mongodb\\Model as Eloquent;\nclass User extends Eloquent {\n    protected $connection = 'mongodb';\n}\n```\nAm I missing something?\n. Never mind my last comment!\nI've fixed it by changing the default User class and make it extend Jenssegers\\Mongodb\\Modelinstead of Model.\n. ",
    "paramoshkinandrew": "It was my fall. Problem solved with db.createUser() (not addUser) to needle database\n. ",
    "nsmithuk": "If you choose to merge this, please can you also apply it to the 4.2 branch.\n. ",
    "enginkartal": "thank you :)\n`<?php\nreturn  [\n    'default' => 'mongodb',\n'connections' => [\n    'mongodb' => [\n        'driver'   => 'mongodb',\n        'host'     => env('MONGODB_HOST'),\n        'port'     => env('MONGODB_PORT'),\n        'username' => env('MONGODB_USERNAME'),\n        'password' => env('MONGODB_PASSWORD'),\n        'database' => env('MONGODB_DATABASE'),\n        'options'  => ['replicaSet' => env('MONGODB_REPLICASET'),'database'=>'admin','ssl'=>true],\n        'driver_options' => [\n            'context' => stream_context_create([\n                \"ssl\" => [\n                    \"verify_peer\"       => false,\n                    \"verify_peer_name\"  => false,\n                    \"verify_expiry\"     => false\n                ]])],\n    ]\n]\n];`\n. +1\n. thank's :) problem is solved \ud83d\udc4d \n. ",
    "sameer1750": "I know how to do it in mongo \nIe.db.products.find({\"images.filename\":\"551e617eccfff2fc193c9869_logo-big.jpg\"},{\"images.$.filename\":1,\"currency\":1}).pretty()\nBut how to execute it with this package?\n. ",
    "DenchikBY": "@gidomanders it worked time ago in L5, but recently broke\n. @arcadas thanks, it works, but not well... will wait updates\n. ",
    "kroleg": "If you are using non-default connection named \"mongodb\" you'll need to add in your AppServiceProvider inside boot() method this code:\nphp\n\\DB::connection('mongodb')->enableQueryLog();\nBecause \\DB::enableQueryLog(); enables log only for 'default' database connection.\nHope that this comment will save couple of minutes for someone who tries to see what's going on in database :)\n. ",
    "adriantombu": "@kroleg you bet, thanks for your answer ! ( almost one year later, but who cares :beers:  )\n. Same problem here, doesn't go to the proper class\nvendor/laravel/framework/src/Illuminate/Auth/Passwords/DatabaseTokenRepository.php line 126\nhere are the providers added at the end of the array\nJenssegers\\Mongodb\\MongodbServiceProvider::class,\nJenssegers\\Mongodb\\Session\\SessionServiceProvider::class,\nJenssegers\\Mongodb\\Auth\\PasswordResetServiceProvider::class\n. I'm on the 5.2, so looks like I'll have to wait then ^_^\n. Hey @sachinvrg ! I'm sorry I haven't used the package on another project since then, I hope someone else will be able to help you !\n. ",
    "RemiCollin": "In that case, maybe it would be cleaner to throw a more explicit exception from the child Connection class, what do you think ?\n. +1, not working here. The union() statement are simply not compiled into the query. . PR in progress : https://github.com/jenssegers/laravel-mongodb/pull/1295\nBelongsToMany & Embedded relationships are not working anymore (see failing tests). Anyone wanting to join in to help find the fix is welcome ;) . This release works for me : https://github.com/jenssegers/laravel-mongodb/releases/tag/v3.3.0-alpha. Nope, checks the composer.json, version constraint is ^5.1, so it will not prevent installing it from a 5.5 version. \nWhat we might need is to tag a new package version (3.3 ?) to reflect the breaking change. . Yes of course. . Be aware these commits don't solve issues introduced with Laravel 5.5. I fixed some of them but some of the test aren't passing yet : https://github.com/jenssegers/laravel-mongodb/pull/1295\n. It seems https://github.com/jenssegers/laravel-mongodb/pull/1300 is fixing the issues. Guess we just need @jenssegers to merge & bump package version . Ah yes you're right... didn't watch in details.. I'll see if I can have my PR working soon, was nearly there but lack time. Update : have a near working Travis script for 7.1/7.2, but mongodb connection is still failing in the tests :\nMongoDB\\Driver\\Exception\\ConnectionTimeoutException: No suitable servers found (`serverSelectionTryOnce` set): [Failed to resolve 'mongodb']\nif anyone has a clue ?. @solofeed : also from experience, when you manage a large number of laravel projects, it's more effective to upgrade all your project pool at once, and not leave some projects a few version behind. \nAnyway, for those wanting to upgrade before this PR is merged, you can use my fork by adding this to composer.json : \n\"repositories\": [\n        {\n            \"type\": \"vcs\",\n            \"url\": \"https://github.com/RemiCollin/laravel-mongodb\"\n        }\n    ],\n. @arthurkirkosa : I didn't tag it. Just use dev-master , should work. . A PR for supporting Laravel 5.6 is underway : https://github.com/jenssegers/laravel-mongodb/pull/1428. A PR for supporting Laravel 5.6 is underway : https://github.com/jenssegers/laravel-mongodb/pull/1428. Facing the same issue right now. I'm afraid this solution won't work as Passport models are not resolved by the IoC container, but instantiated using new. . No the IoC container won't take over unless called explicitely using make() . Simple to verify : \n```php \napp()->when(\\Laravel\\Passport\\Token::class)->needs(\\Illuminate\\Database\\Eloquent\\Model::class)->give(\\Jenssegers\\Mongodb\\Eloquent\\Model::class);\n\n$model = new \\Laravel\\Passport\\Token;\ndd($model instanceof \\Jenssegers\\Mongodb\\Eloquent\\Model); // false\n\n```\n. ",
    "chasen": ":+1: \n. Assuming you are using an embedsMany relationship, couldnt you just use $cart->items()->where('variant_id','=',1)->increment('quantity'); ?\n. could you not do echo $j['profil']['gender']; ?\n. ",
    "korobkadima": "what is the status of this feature?\n. ",
    "clementbirkle": "Do you plan to set up this next feature? It seems to me to be an indispensable feature. I found this package but it didn't try it: https://github.com/matryoshka-model/mongo-transactional. Thank you very much for your analyse and looking forward for the next release :)\n. ",
    "sathishkumarls": ":thumbsup:. ",
    "CHOMNANP": "Anyone manage to get this work yet?\nThanks,\nPunleu. @uriel2707 thank you.\nYour solution work for my case. Noted.\nWe also need to apply \"use CrudTrait;\" in each model as well.. ",
    "YuriScarbaci": "Need just this feature to migrate from mySql database to the MongoDB database,\nAny news on it, is some1 looking to implement this or is it just forgotten?\nany work around to grant my application atomocity on multiple documents and operations?. ",
    "eswarreddy43": "I am also facing the same issue with double slashes. Eloquent is adding that slashes. \nIs there any way to escape those slashes?\n. ",
    "zamanianb": "I have similar issue. Thanks\nFrom: bsarraf notifications@github.com\nReply-To: jenssegers/laravel-mongodb reply@reply.github.com\nDate: Thursday, May 10, 2018 at 1:51 AM\nTo: jenssegers/laravel-mongodb laravel-mongodb@noreply.github.com\nCc: Bardia Zamanian Bardia.Zamanian@panasonic.aero, Comment comment@noreply.github.com\nSubject: Re: [jenssegers/laravel-mongodb] Can't canonicalize query: BadValue $regex has to be a string (#465)\nI had the same issue, after debugging I figured that this error was being thrown when I was trying to apply regex on a null value. Please make sure your variable on which you are applying the regex is not null\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHubhttps://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_jenssegers_laravel-2Dmongodb_issues_465-23issuecomment-2D387994321&d=DwMFaQ&c=laiMAACGcvAxeLF9-K5nZ1uCTN9kBzTH8fWOxFTVLgs&r=fG1LzPyD2NTWykMZbzNoIpZGtFt_GxkVNU_RYwYuBEQ&m=Hhbajpwp1gwPesKvKwlWiEQpfLc4Q-CRiRCNX8UNQTI&s=zEnFr0VNp2uFj7N7cuJV_Yexgc78EcIf6T4SwW7ziaY&e=, or mute the threadhttps://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_AUSNIWsyevpH5IDPZPYkqPMcEltfgiDvks5tw-5F91gaJpZM4D91fI&d=DwMFaQ&c=laiMAACGcvAxeLF9-K5nZ1uCTN9kBzTH8fWOxFTVLgs&r=fG1LzPyD2NTWykMZbzNoIpZGtFt_GxkVNU_RYwYuBEQ&m=Hhbajpwp1gwPesKvKwlWiEQpfLc4Q-CRiRCNX8UNQTI&s=Jq-qzZ2PncZGGVuZ5xam61hhIuz8AfMssuyRTHdNGc8&e=.\n. ",
    "diegoaguilar": "That gives total compatibility to L4? And what about mongodb-session?\n. You should try:\ncomposer require jenssegers/mongodb ~2.0\n. ",
    "ImanMh": "I have the same issue what should I do? (please write the command that I should run, I'm not a composer expert)\n```\n composer require jenssegers/mongodb\n\ufeff\ufeffUsing version ~2.1 for jenssegers/mongodb\n./composer.json has been updated\nLoading composer repositories with package information\nUpdating dependencies (including require-dev)\nYour requirements could not be resolved to an installable set of packages.\nProblem 1\n    - laravel/framework v5.0.27 requires ext-mcrypt * -> the requested PHP extension mcrypt is missing from your system.\n    - laravel/framework v5.0.27 requires ext-mcrypt * -> the requested PHP extension mcrypt is missing from your system.\n    - Installation request for laravel/framework == 5.0.27.0 -> satisfiable by laravel/framework[v5.0.27].\n```\n. Still doesn't work :( \n```\n\u2192 composer require jenssegers/mongodb ~2.0\nPHP Warning:  PHP Startup: Unable to load dynamic library '/usr/lib/php/extensions/no-debug-non-zts-20121212/newrelic.so' - dlopen(/usr/lib/php/extensions/no-debug-non-zts-20121212/newrelic.so, 9): image not found in Unknown on line 0\n./composer.json has been updated\nLoading composer repositories with package information\nUpdating dependencies (including require-dev)\nYour requirements could not be resolved to an installable set of packages.\nProblem 1\n    - laravel/framework v5.0.27 requires ext-mcrypt * -> the requested PHP extension mcrypt is missing from your system.\n    - laravel/framework v5.0.27 requires ext-mcrypt * -> the requested PHP extension mcrypt is missing from your system.\n    - Installation request for laravel/framework == 5.0.27.0 -> satisfiable by laravel/framework[v5.0.27].\n```\n. @askmatey I took this here cause I didn't knew if it's an issue with this repo or with laravel or any other thing. but thanks for mentioning Stack Overflow. \n. ",
    "kahmaly": "In the following link you will find a section talking about mongo specific operators\nmongo specific operators\nin which you will find that there is an operator called where\nExample in mongo:\ndb.users.find({\"$where\":\"/3/.test(this.age)\"});\nthis would get all users with a digit 3 in their age(int)\n. ",
    "kieranajp": "Having the same issue here, albeit I'm not trying migrations & seeding, just attempting to pull from an existing MongoDb database.\nAs Lumen is just using the Illuminate\\Database component I'm sure it's going to be fairly simple to get this all hooked up, but it's Friday afternoon and I'm having too much trouble concentrating to figure it out at the moment :)\n. Looks like you're using Laravel full, this issue is about Lumen. The instructions for the full framework should still work on 5.2.35.\n. ",
    "yohang88": "I created simple config/database.php to override vendor/laravel/lumen/config/database.php.\n```\n<?php\nreturn [\n'default' => 'mongodb',\n\n'connections' => [\n\n    'mongodb' => array(\n        'driver'   => 'mongodb',\n        'host'     => 'localhost',\n        'port'     => 27017,\n        'username' => '',\n        'password' => '',\n        'database' => 'test_db'\n    ),\n\n],\n\n'migrations' => 'migrations',\n\n];\n```\nIt's works.\n. @alex-LE \nThis is my bootstrap/app.php\n```\n<?php\nrequire_once DIR.'/../vendor/autoload.php';\n// Dotenv::load(DIR.'/../');\n/\n|--------------------------------------------------------------------------\n| Create The Application\n|--------------------------------------------------------------------------\n|\n| Here we will load the environment and create the application instance\n| that servers as the central piece of the framework. We'll use this\n| application as an \"IoC\" container and router for this framework.\n|\n/\n$app = new Laravel\\Lumen\\Application;\n// $app->withFacades();\n// $app->withEloquent();\n/\n|--------------------------------------------------------------------------\n| Register Container Bindings\n|--------------------------------------------------------------------------\n|\n| Now we will register a few bindings in the service container. We will\n| register the exception handler and the console kernel. You may add\n| your own bindings here if you like or you can make another file.\n|\n/\n$app->singleton(\n    'Illuminate\\Contracts\\Debug\\ExceptionHandler',\n    'App\\Exceptions\\Handler'\n);\n$app->singleton(\n    'Illuminate\\Contracts\\Console\\Kernel',\n    'App\\Console\\Kernel'\n);\n/\n|--------------------------------------------------------------------------\n| Register Middleware\n|--------------------------------------------------------------------------\n|\n| Next, we will register the middleware with the application. These can\n| be global middleware that run before and after each request into a\n| route or middleware that'll be assigned to some specific routes.\n|\n/\n// $app->middleware([\n//     // 'Illuminate\\Cookie\\Middleware\\EncryptCookies',\n//     // 'Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse',\n//     // 'Illuminate\\Session\\Middleware\\StartSession',\n//     // 'Illuminate\\View\\Middleware\\ShareErrorsFromSession',\n//     // 'Laravel\\Lumen\\Http\\Middleware\\VerifyCsrfToken',\n// ]);\n// $app->routeMiddleware([\n// ]);\n/\n|--------------------------------------------------------------------------\n| Register Service Providers\n|--------------------------------------------------------------------------\n|\n| Here we will register all of the application's service providers which\n| are used to bind services into the container. Service providers are\n| totally optional, so you are not required to uncomment this line.\n|\n/\n// $app->register('App\\Providers\\AppServiceProvider');\n$app->register('Jenssegers\\Mongodb\\MongodbServiceProvider');\n/\n|--------------------------------------------------------------------------\n| Load The Application Routes\n|--------------------------------------------------------------------------\n|\n| Next we will include the routes file so that they can all be added to\n| the application. This will provide all of the URLs the application\n| can respond to, as well as the controllers that may handle them.\n|\n/\nrequire DIR.'/../app/Http/routes.php';\nreturn $app;\n```\nMaybe the tricky setting is $app->withEloquent(); . I'm uncommented that line, and get Unsuporrted Driver also.\nThis is my Model file User.php\n```\n<?php namespace App;\nuse Jenssegers\\Mongodb\\Model as Eloquent;\nclass User extends Eloquent {\nprotected $collection = 'users';\n\n}\n```\nThis is my routes.php for test purpose:\n```\n$app->get('/', function() use ($app) {\n$users = App\\User::all()->toJson();\n\necho $users;\n\n});\n```\nResponse:\n[{\"_id\":\"5533b08eb8b200865f64f21f\",\"nama\":\"Yoga Hanggara\"},{\"_id\":\"5533b0c9b8b200865f64f220\",\"nama\":\"Handoko\"}]\n. ",
    "alex-LE": "@yohang88 did you make any other changes than adding the service provider to the boostrap/app.php?\nI've also created the config file and i get the same \"Unsupported driver\" error.\nHow does your model look like?\n. @yohang88 thanks!\nI've disabled $app->withEloquent(); and now it works.\nIt might be a problem as i'm unable to use Eloquent now, but in my case i don't need it.\n. ",
    "bryceadams": "Also having trouble with this, same error\n. ",
    "andreipop2005": "Disabling $app->withEloquent() works, but I consider this a workaround.\n. ",
    "krisanalfa": "Just realized that registering Jenssegers\\Mongodb\\MongodbServiceProvider after make db via App::withEloquent() will throw Unsupported driver [mongodb].\n``` php\n// bootstrap/app.php\n// $app->withFacades();\n$app->withEloquent();\n$app->register('Jenssegers\\Mongodb\\MongodbServiceProvider');\n```\nBut if you register before withEloquent() line, it will be OK.\n``` php\n// bootstrap/app.php\n// $app->withFacades();\n$app->register('Jenssegers\\Mongodb\\MongodbServiceProvider');\n$app->withEloquent();\n```\n. @askmatey Keep rock, bro!\n@guns28 Anytime :smile:\n. @zahiruldu You have to install PHP MongoDB first. You can do it via PECL installation.\npecl install mongodb\n. ",
    "kh411d": "You may want to use The Capsule Manager and then creating your own mongodb config at project root \nhttps://github.com/illuminate/database/blob/master/README.md\nIt's more portable I think.\nTake advantage by using the middleware to configure mongodb:\n```\n<?php \n            namespace App\\Http\\Middleware;\n            use Closure;\n            use Illuminate\\Database\\Capsule\\Manager as Capsule;\n            use Illuminate\\Events\\Dispatcher;\n            use Illuminate\\Container\\Container;\n        class ExampleMiddleware {\n\n            public function handle($request, Closure $next)\n            {\n                $capsule = new Capsule;\n\n                //Configure config file config/defaultmongodb.php\n                \\App::configure('defaultmongodb');\n                $capsule->addConnection(config('defaultmongodb'));\n\n                // Set the event dispatcher used by Eloquent models... (optional)\n                $capsule->setEventDispatcher(new Dispatcher(new Container));\n\n                // Make this Capsule instance available globally via static methods... (optional)\n                $capsule->setAsGlobal();\n\n                // Setup the Eloquent ORM... (optional; unless you've used setEventDispatcher())\n                $capsule->bootEloquent();\n\n\n                $capsule->getDatabaseManager()->extend('mongodb', function($config){\n                    return new \\Jenssegers\\Mongodb\\Connection($config);\n                });\n\n                return $next($request);\n            }\n        }\n\n```\nIf you want to make it globally, you need to add it on the bootstrap file bootstrap/app.php\n$app->middleware([\n    'App\\Http\\Middleware\\ExampleMiddleware',\n ]);\n. ",
    "guns28": "thx :) @krisanalfa\n. ",
    "hieuvan": "Thank you so much @krisanalfa \n. ",
    "zahiruldu": "When I try to install the package it show the following errprs.\nProblem 1\n    - jenssegers/mongodb v3.0.0 requires mongodb/mongodb ^1.0.0 -> satisfiable by mongodb/mongodb[1.0.0, 1.0.1, 1.0.2].\n    - jenssegers/mongodb v3.0.1 requires mongodb/mongodb ^1.0.0 -> satisfiable by mongodb/mongodb[1.0.0, 1.0.1, 1.0.2].\n    - jenssegers/mongodb v3.0.2 requires mongodb/mongodb ^1.0.0 -> satisfiable by mongodb/mongodb[1.0.0, 1.0.1, 1.0.2].\n    - mongodb/mongodb 1.0.2 requires ext-mongodb ^1.1.0 -> the requested PHP extension mongodb is missing from your system.\n    - mongodb/mongodb 1.0.1 requires ext-mongodb ^1.1.0 -> the requested PHP extension mongodb is missing from your system.\n    - mongodb/mongodb 1.0.0 requires ext-mongodb ^1.1.0 -> the requested PHP extension mongodb is missing from your system.\n    - Installation request for jenssegers/mongodb ^3.0 -> satisfiable by jenssegers/mongodb[v3.0.0, v3.0.1, v3.0.2].\n. ",
    "thxv3n0lvl": "I'm using Laravel Framework version 5.2.35 and the code is kind of different.\nCan't use $app->withEloquent() this doesn't exist on laravel's Illuminate \nAny update for this version? \n```\n<?php\n/\n|--------------------------------------------------------------------------\n| Create The Application\n|--------------------------------------------------------------------------\n|\n| The first thing we will do is create a new Laravel application instance\n| which serves as the \"glue\" for all the components of Laravel, and is\n| the IoC container for the system binding all of the various parts.\n|\n/\n$app = new Illuminate\\Foundation\\Application(\n    realpath(DIR.'/../')\n);\n/\n|--------------------------------------------------------------------------\n| Bind Important Interfaces\n|--------------------------------------------------------------------------\n|\n| Next, we need to bind some important interfaces into the container so\n| we will be able to resolve them when needed. The kernels serve the\n| incoming requests to this application from both the web and CLI.\n|\n/\n$app->singleton(\n    Illuminate\\Contracts\\Http\\Kernel::class,\n    App\\Http\\Kernel::class\n);\n```\n. What I did:\n```\n<?php\nuse Jenssegers\\Mongodb\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\nclass CreateActionsTable extends Migration\n{\n    /\n         * The name of the database connection to use.\n         \n         * @var string\n         /\n    protected $connection = 'mongodb';\n/**\n * Run the migrations.\n *\n * @return void\n */\npublic function up()\n{        \n    Schema::connection($this->connection)\n    ->table('actions', function (Blueprint $collection) \n    {\n        $collection->index('name');\n    });\n}\n\n/**\n * Reverse the migrations.\n *\n * @return void\n */\npublic function down()\n{\n    Schema::connection($this->connection)\n    ->table('actions', function (Blueprint $collection) \n    {\n        $collection->drop();\n    });\n}\n\n}\n```\nthe just\nphp artisan migrate\n... and it worked.\n. Nevermind I found how seeders works and did this:\nActionsCollectionSeeder.php\n```\n<?php\nuse Illuminate\\Database\\Seeder;\nuse Illuminate\\Support\\Facades\\DB;\nclass ActionsCollectionSeeder extends Seeder\n{\n    /\n     * Run the database seeds.\n     \n     * @return void\n     /\n    public function run()\n    {\n        $data = [\n            'name' => 'lorem',\n            'display_name' => 'lorem',\n            'description' => 'Clorem ipsum.',\n            'find_element' => null,\n            'app_message' => null\n        ];\n         App\\Action::create($data);\n     $data = [\n         'name' => 'psum',\n         'display_name' => 'ipsum',\n         'description' => 'bla bla',\n         'text_input' => 'text to put in the field',\n         'find_element' => null,\n         'app_message' => null\n     ];\n      App\\Action::create($data);\n  }\n\n}\n```\nMy model: Action.php\n```\n<?php\nnamespace App;\nuse Moloquent;\nclass Action extends Moloquent\n{\n    /\n     * The name of the database connection to use.\n     \n     * @var string\n     /\n    protected $connection = 'mongodb';\n    /\n     * Fields that will be able to mass assign.\n     \n     * @var array\n     /\n    protected $fillable = ['_id','name'];\n}\n```\n. ",
    "rafaelcpalmeida": "@yohang88 solution is working.\nMy config/database.php looks like:\n<?php\n    return [\n        'default' => 'mongodb',\n        'connections' => [\n            'mongodb' => [\n                'driver'   => 'mongodb',\n                'host'     => env('DB_HOST', 'localhost'),\n                'port'     => env('DB_PORT', 27017),\n                'database' => env('DB_DATABASE'),\n                'username' => env('DB_USERNAME'),\n                'password' => env('DB_PASSWORD'),\n                'options'  => [\n                    'database' => 'admin' // sets the authentication database required by mongo 3\n                ]\n            ],\n        ],\n        'migrations' => 'migrations',\n    ];. ",
    "farzan-ghalami": "hi guys\n(my english is so bad and  excuse me for this format)\nafter a lot of search into the net,finally figure out how to use 2 different databases (Mongodb and mysql) in LUMEN.\n1) create config directory in root and create new php file into config directory, named database.php (this is so important that name of php file  must to be database.php )\nhere is my database config file:\n`<?php\nreturn [\n    'default' => 'mongodb',\n    'connections' => [\n    'mongodb' => [\n        'driver' => 'mongodb',\n        'host' => 'localhost',\n        'port' => 27017 ,\n        'database' => 'appstore',\n        'username' => 'farzan',\n        'password' => '1234admin',\n        'options' => [\n            'database' => 'admin' // sets the authentication database required by mongo 3\n        ]\n    ],\n\n    'mysql' => [\n        'driver' => 'mysql',\n        'host' => 'localhost',\n        'database' => 'lumen',\n        'username' => 'root',\n        'password' => null ,\n        'charset'   => 'utf8',\n        'collation' => 'utf8_unicode_ci',\n    ],\n]\n\n];\nas you see, my default db is mongodb, but you can switch between databases easily when you create a  Model class. for example if you want to work with mysql db you have to write:\nprotected $connection = 'mysql';\nthis line of  code change the default db in database.php\nhere is my model class\n`<?php\nnamespace App\\models;\nuse Illuminate\\Database\\Eloquent\\Model;\nclass Car extends Model\n{\n    protected $connection = 'mysql';\n    protected $fillable = [\n        'name', 'model' , 'created_at' , 'updated_at',\n    ];\n}and my controller class<?php\nnamespace App\\Http\\Controllers;\nuse App\\models\\Car;\nclass CarController extends Controller\n{\n    public function showCars()\n    {\n   $cars = Car::all();\n    return response()->json($cars);\n}\n\npublic function showCar($id)\n{\n    $cars = Car::find($id);\n    return response()->json($cars);\n}\n\n}`\nenjoy it:)))). ",
    "adear11": "Nevermind. As soon as I posted this, I realized I wasn't setting the relationship field in the hasMany relationship. I added the document field that holds the \"foreign key\" and everything started working.\nSorry for the false alarm.\n. ",
    "tomvo": "Ok I tried the whole day to get this to work, but a hint of insight made me remove the ->with() call and this fixed my problem.\nSo this works:\nphp\n$room = Room::where('environment_id', (int) $environment->id)\n                ->where('date', '=', $date->format('d-m-Y'))\n                ->first();\nthis not:\n$room = Room::where('environment_id', (int) $environment->id)\n                ->where('date', '=', $date->format('d-m-Y'))\n                ->with('reservations')\n                ->first();\nDid I misread the docs?\n. yeah, I misread the docs on the with(), shouldn't have been there in the first place. Strange that was the reason for failing though.\n. ",
    "jamesmunday": "Managed to figure it out:\nThe default Apache settings did not let requests make network connections, meaning that the driver will get \"Permission denied\" errors when it tries to connect to the database. If you run into this, try running: http://php.net/manual/en/mongo.installation.php#mongo.installation.fedora\n. ",
    "alquesadilla": "any updates ? Were you able to solve your issue?\n. Still an issue @benargo \nI am not using hybrid relations or MySQL. Nothing gets returned on belongsToMany mongo db specific query. @jenssegers so sorry to bug you but can you please confirm that this functionality is not in place. Many thanks in advance. \nhttps://stackoverflow.com/questions/46023352/laravel-mongo-many-to-many-relation-wherehas-not-working. Call to undefined method Jenssegers\\Mongodb\\Query\\Builder::getRelationWithoutConstraints()  when using dev-master\nhttps://stackoverflow.com/questions/46023352/laravel-mongo-many-to-many-relation-wherehas-not-working. ",
    "jovanialferez": "one thing i noticed, by watching the logs (query), it uses the alias or collection name together with the deleted_at, which generally a non-existent field (e.g. my_collection.deleted_at vs just deleted_at) in that collection\n. i found out the issue. this happens when you use SoftDeletes trait from Laravel, not from this library. so it should be from Jenssegers\\Mongodb\\Eloquent\\SoftDeletes.\n. ",
    "approached": ":+1:  I have the same question.\nI  think you mean http://docs.mongodb.org/manual/reference/database-references/#dbref-explanation\nI would use the same feature. But think this feature is not available in this module.\n. ",
    "nenodias": "Link. Use\nuse MongoDB\\BSON\\ObjectId;\nAfter all you, need to create DBRef struct, like mongodb doc\npublic function store(Request $request)\n    {\n        $data = $request->all();\n        if($data['id_role']){\n            $role = [\n                '$ref' => 'role',\n                '$id' => new ObjectId($dados['id_role'])\n            ];\n            unset($data['id_role']);\n            $data['role'] = $role;\n        }\n        return User::create($data);\n    }\nExample of my controller, but you will need to load the DBRefs manually on show.\n```\npublic function show($id)\n    {\n        $user = User::find($id);\n        if($user){\n            $user->role = Role::find($user->role['$id']);\n            return $user;\n        }\n    return response('{\"message\":\"NOT FOUND\"}', 404);\n}\n\n```. ",
    "renatobecker": "Hi\nI'm trying to use this command, but I get the following error:\n\"Call to undefined method MongoClient::command()\"\nWhat's wrong?\n. Hi @Grummfy \nIt works!\nThank you very much.\n. ",
    "vincentshiqi": "i use\n$near = [doubleval($la_x), doubleval($la_y)];\n        $data = $mongodb->command([\n            'geoNear'   =>  'vincent',\n            'near'      =>  $near,\n            'spherical' =>  true\n        ]);\nbut it's work\nand give me \n```\narray(2) { [\"ok\"]=> float(0) [\"errmsg\"]=> string(13) \"can't find ns\" }\n```\nwho can help me \n. ",
    "levinhne": "T\u00f4i c\u00f3 c\u00e1ch gi\u1ea3i quy\u1ebft \u0111\u01a1n gi\u1ea3n b\u1eb1ng s\u1eed d\u1ee5ng sqlite (install php5-sqlite)\n'failed' => [\n        'database' => 'sqlite', 'table' => 'failed_jobs',\n    ],\nho\u1eb7c \nhttp://packalyst.com/packages/package/pmatseykanets/file-queue-failer\nC\u1ea3m \u01a1n :)\n. ",
    "lapswr": "i can confirm the issue too.\n. i think the problem is has something to do with the Laravel Queues source code that use \nIlluminate\\Database\\Eloquent\\Collection\nbut @jenssegers use his own MongoDB\\Collection\nany ideas?\n. I find a way to work around this issue \nSo instead of using the $bookModel->authors()->detach(); \nyou can use $bookModel->authors()->sync([]);\nNote\nThis is working because this library has implement a sync() function for mongodb \nbut the detach() function is using Laravel's implementation so i think this is happening\n because the Laravel's implementation use a pivot table for ManyToMany relations.\n. ",
    "pi0": "We will investigate and resolve this issue soon :)\n. @gerald27 \nThis issue is now fixed on Moloquent Branch :)\n. @sparrowbear @chloealee\nThis issue is now fixed on Moloquent Branch\nThanks to  @hackel  :)\n. There are breaking changes on master so unitTests are failing. would you please follow This steps to rebase this PR with master branch and running UnitTests against latest changes ?\nThanks :)\n. There are breaking changes on master so unitTests are failing. would you please follow This steps to rebase this PR with master branch and running UnitTests against latest changes ?\nThanks :)\n. There are breaking changes on master so unitTests are failing. would you please follow This steps to rebase this PR with master branch and running UnitTests against latest changes ?\nThanks :)\n. Nice idea :D related to #926 \n@jenssegers would you please review this PRs ?\n. @dmitrimaltsev tests are added, would you please merge dmitrimaltsev#1 ? :)\n. There are breaking changes on master so unitTests are failing. would you please follow This steps to rebase this PR with master branch and running UnitTests against latest changes ?\nThanks :)\n. lists fully removed on last release :) so maybe better closing this PR? \n. @Bodom78 StyleCI fails because it should be an empty line at the end of file :)\n. @Bodom78 StyleCI fails because it should be an empty line at the end of file :)\n. There are breaking changes on master so unitTests are failing. would you please follow This steps to rebase this PR with master branch and running UnitTests against latest changes ?\nThanks :)\n. There are breaking changes on master so unitTests are failing. would you please follow This steps to rebase this PR with master branch and running UnitTests against latest changes ?\nThanks :)\n. There are breaking changes on master so unitTests are failing. would you please follow This steps to rebase this PR with master branch and running UnitTests against latest changes ?\nThanks :)\n. +1 for merge!\n@RTLer it seems some diff file is accidentally committed but thanks for this nice patch :)\n@jenssegers is there any chance make a review/merge tonight? We already merged this PR to our fork and it was really working fine .. :)\n. Some changes may required before merge !?\n. @jenssegers why not merging this ?\n. There are breaking changes on master so unitTests are failing. would you please follow This steps to rebase this PR with master branch and running UnitTests against latest changes ?\nThanks :)\n. @jenssegers please check this out :) thanks :)\n. There are breaking changes on master so unitTests are failing. would you please follow This steps to rebase this PR with master branch and running UnitTests against latest changes ?\nThanks :)\n. There are breaking changes on master so unitTests are failing. would you please follow This steps to rebase this PR with master branch and running UnitTests against latest changes ?\nThanks :)\n. @nitinsurana please update you composer dependency version to 3.1.0-alpha and do run composer update\n. @alexjose it will certainly work, but if you still have problems you could also try Moloquent :)\n. @lukepolo Thanks for mentioning. i'll take a look tonight :)\n. Unfortunately I've lost this fork, so please refer to #925\n. @jenssegers should it be fixed ? :D\n. There are breaking changes on master so unitTests are failing. would you please follow This steps to rebase this PR with master branch and running UnitTests against latest changes ?\nThanks :)\n. There are breaking changes on master so unitTests are failing. would you please follow This steps to rebase this PR with master branch and running UnitTests against latest changes ?\nThanks :)\n. @alsemany True, but not related to this PR. according to official README, Supported relations are :\n- hasOne\n- hasMany\n- belongsTo\n- belongsToMany\n- embedsOne\n- embedsMany\n. @jenssegers Finally all tests fully passed :) Would you please Review and Approve this PR ? \n. @jenssegers last commit was due to accidental fast-forward :) if you think something is missing just let me know :) \n. Hi . this issue is fixed and will be resolved after new composer tag :)\n. @yazeed it is already fixed in 3.1.x release ;) @jenssegers would you close this issue ?\n. @kschethan Would you please tell exact installed version from composer.lock and the part code you are defining relations ? (so we can try to reproduce and debug this error)\n. @Parziphal It is up to decision of @jenssegers, maintainer of this repo.  But why aren't you migrating to 3.1.x ?\n. @Parziphal glad that you want to migrate :) Although 3.1.x is fully UnitTested against PHP 5.6 .. \nAlso you can use another standard solution, like docker to easily host your laravel instance with fully dependencies less 30 minutes !\nTake a look at PaaS project if you are interested :)\n. @kschethan really sorry for that typo in docs. i have created a pull request to correct versions table.\nlaravel 5.3 support currently is available for 3.1.0-alpha release only!  so simply upgrade your version and run composer update every thing should be fixed :)\n. I'll make a full functionality test tomorrow. However it should not have any major incompatibilities as This library extends the original Laravel classes, so it uses exactly the same methods.\n. I've made a fast look at this library. And it seems to be working fine.\nBuilder.php\nThis class relies on this functions of $engine variable, which may be an instance of Moloquent. almost all of them are currently supported.\n- get\n- paginate\n- Paginator::appends\n- Paginator::hasMorePagesWhen\nSearchableScope.php\n\nextend function blueprint is extend(EloquentBuilder $builder)\nThis may cause some minor problems and require some fixes.\n\nEngines\nEngines seem to be fine as they are fully abstracted.\nAlgoliaEngine.php\n. .\n. We probably add features like this in next releases ... ;) +1 for your suggestion :)\n. Good news, Passport support is now available on moloquent. (fafa51eb2ed4c43d1882c87917e9fe1f9985829e).\nRead more here: https://moloquent.github.io/master/#passport\n. @jenssegers isn't this a safe solution ? and would you consider merging this ?\n. @DimasL @kudosagency Please See Here\n. Duplicated of #969 ! @jenssegers would you please close this ?\n. Please upgrade composer to latest version or switch to Moloquent \n. This is not a library related issue\n@iceheat You may use Eloquent Query Scopes. (They are fully supported by laravel-mongodb\nOne simple approach is applying a global scope to Foo model, so every query on it (thus any relation) will return sorted form :)\nApp\\Foo.php\n``` php\nclass Foo extends Moloquent\n{\nprotected static function boot()\n{\n    parent::boot();\n    static::addGlobalScope('sorted_scope', function (Builder $builder) {\n        $builder->orderBy('created_at', 'desc');\n    });\n}\n\n```\n. @iceheat Thanks for your nice discovery :) Your workaround is applied on Moloquent. (a36bc4e)\n. @iceheat Please checkout 6a536f67277927e5a778ca1fe4ab108d079977ec ;)\n. @iceheat  Would you please explain more about that ? ( or opening PR on Moloquent )\n. Your issue is related to #953 . This pull request is already merged to Moloquent  Branch. Read More\n. You may use something like this to rename\nphp\n        DB::connection('mongodb')->collection('values')->update([\n            { entity_id: 123 },\n            '$rename'=>['oldname'=> \"newname\"],\n        ]);\nSee here for more details.\n. try adding _id field to your model's $visible array \n. Would you provide your composer.json ?\n. @gp187 Latest version (which supports 5.3) is tagged as alpha so you have to explicitly change it to something like  this:\n\"jenssegers/mongodb\": \"^3.1.0-alpha\" \n. @idnan Did you setup your default mongo connection ?  Check here\n. If you see base Migration class (https://github.com/illuminate/database/blob/master/Migrations/Migration.php)\nphp\n<?php\nnamespace Illuminate\\Database\\Migrations;\nabstract class Migration\n{\n    /**\n     * The name of the database connection to use.\n     *\n     * @var string\n     */\n    protected $connection;\n}\nYou can simply override and change $connection variable to either default or mysql for each individual migration :)\nBut i think if you want behaviour something like Mysql migration with history to mongoDB it may need lots of laravel core hacking ... \n. Two possible solutions : \nAs you already mentioned you can use startOfDate method to set time part to 0, this can be done using methods like defining settter mutator on Model for that date fields. how ever i personally recommand a better approach, using whereBetween queries for non-exact dates, this way you can ensure your query always works correct! (consider situations you have databases with already some data without setting every minute and second to 0 or using )\n. I hope you can fix this using mutators :)\n\nWhen another user do exactly the same query, I need to fetch the same result.\nRedis Cache Can be Also utilized if you have exactly one result for each query ...\n\n@tperrelli is this is not really an issue or bug , would you please close it ?\n. Soooo this may be really interesting bug :D i'll try to reproduce same situation and stack trace it tonight :)\n. Yes, I can confirm this bug.. we even have that issue in our production .. will try to resolve it ASAP dude\n. This issue is known in PR #948 :) Hopefully it will be merged and resolved soon\n. @EdelBlau why are you using raw() method ?? i think you have to use library query builder to use features like pagination .. raw method returns native Cursor object\n. Would you please provide TickTack_Email implementation ?\n. I mean Source Code of TickTack_Email.php File :)\n. Looks strange, would you please also provide error's stack trace? (i mean full error output from browser) or this file : storage/logs/app.log\n. @BlakeGardner Thanks for starting this topic, as a newbie to opensource community, it was always my question that when MIT almost allows anything to do without restrictions, so why it even matters including MIT or not ? \n. @dannysood  Both jenssegers/laravel-mongodb and moloquent are active projects and are being used by hundreds of production projects. (at least we at @fandogh have more than 3 active projects using moloquent, and even zarinpal (a big financial and online payment service in iran) i think are using too)\nFor big projects like this, it is actually normal thing to have many open issues, but should not be considered as unstable ;)\n .  This tests fail without this check:\n- RelationsTest.php:384\n- RelationsTest.php:433\nError: array_map(): Argument #2 should be an array\nLaravel has returns arrays instead of Collections!\n. RelationsTest.php:367 : Failed asserting that null is an instance of class \"User\".\nAs a workaround to working MorphTo Relations will be directly returned and resolved.\nIs it necessary to separate this logical part?\n. Should not this diff patch file be excluded from commit ?\n. What about relations ending with _ids ?\n. we where already enabling use_mongo_id in RelationsWithMongoIdTest setUp method ! why enforcing it here again? (if this tast runs after other tests then tearDown will be called later and every other test before that will be using mongo_ids enabled !\n. A agree with your reasons  :) but it may break many older projects relying on this type of connection if they just upgrade! So why not using a backward compatible trick like this : \nphp\nreturn \"mongodb://\" . implode(',', $hosts) . ($database? \"/{$database}\" : '');\n. ",
    "sebastian-domagala": "Any feedback on this issue?. ",
    "anhphamt": "Any news? got the same issue now. . ",
    "brezzhnev": "@robsoncombr @anhphamt Did you have Jenssegers\\Mongodb\\MongodbQueueServiceProvider::class provider in the app.php?. @nirradi are you still solving this issue? :smile: . ",
    "nirradi": "+1. ",
    "borice": "Looking for a solution to this also.. ",
    "mbordash": "Laravel Framework version 5.0.30\n. ",
    "caseycs": "I think you forgot to add\n'Jenssegers\\Mongodb\\Auth\\PasswordResetServiceProvider',\nIn app/config.php, providers section.\n. ",
    "Cengkaruk": "Hi\nI'm using Laravel 5.1.4 and this thing not working.\nErrorException in DatabaseTokenRepository.php line 126: strtotime() expects parameter 1 to be string, array given\nin DatabaseTokenRepository.php line 126\nat HandleExceptions->handleError('2', 'strtotime() expects parameter 1 to be string, array given', '/App/vendor/laravel/framework/src/Illuminate/Auth/Passwords/DatabaseTokenRepository.php', '126', array('token' => array('_id' => object(MongoId), 'email' => 'hi@test.com', 'token' => '895e1c6f6f77a2540fb671865e3092e8cc1e0df3abba8b06a6c4865dcccb2504', 'created_at' => array('date' => '2015-07-03 07:38:59.000000', 'timezone_type' => '3', 'timezone' => 'UTC'))))\nat strtotime(array('date' => '2015-07-03 07:38:59.000000', 'timezone_type' => '3', 'timezone' => 'UTC')) in DatabaseTokenRepository.php line 126\n...\nI've add the provider. Any suggestion?\nJenssegers\\Mongodb\\Auth\\PasswordResetServiceProvider::class,\n. ",
    "lordcoste": "I've got the same error with lumen.\n. Has anyone found a workaround?\n. ",
    "dineshcooper": "Same error on Laravel 5.1.7, I do have the provider added.\n. Sorry - I should have dug through the code first.\n. ",
    "wuori": "The timestamp being returned from Mongo is an array, which is passed directly into strtoTime(), which causes the error. Quick fix is to edit the line and reference the date index to read:\n$expirationTime = strtotime($token['created_at']['date']) + $this->expires;\nWill see if I can find a better solution. \nEdit: I did (i think). See below.\nEdit 2: Fixed in PR #663 \n. Upon further inspection, there were two mistake I saw:\n1. I was putting my service providers at the top of the array instead of the bottom. Rookie mistake I hope.\n2. My PHP wasn't recognizing the token as a MongoDate instance, causing it to bypass the mongodb provider override. \nIn vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Auth/DatabaseTokenRepository.php I modified the tokenExpired function to look like this so that I could take my previous fix out of the default Laravel package:\n```\nprotected function tokenExpired($token)\n{\n    // Convert MongoDate to a date string.\n    if ($token['created_at'] instanceof MongoDate)\n    {\n        $date = new DateTime;\n    $date->setTimestamp($token['created_at']->sec);\n\n    $token['created_at'] = $date->format('Y-m-d H:i:s');\n\n}elseif(is_array($token['created_at']) && isset($token['created_at']['date'])){\n\n   $token['created_at'] = $token['created_at']['date'];\n\n}\n\nreturn parent::tokenExpired($token);\n\n}\n```\nI don't know if this is the best way to go about this, but will create a pull request and let the expert(s) decide. \n. Fixed in PR #663 \n. If using the default User model, it's worth double-checking to make sure you're using mongodb as Eloquent: \nuse Jenssegers\\Mongodb\\Model as Eloquent;   \nclass User extends Eloquent implements AuthenticatableContract,\nIn context: \n```\n<?php\nnamespace App\\Models;\nuse Illuminate\\Auth\\Authenticatable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Auth\\Passwords\\CanResetPassword;\nuse Illuminate\\Foundation\\Auth\\Access\\Authorizable;\nuse Illuminate\\Contracts\\Auth\\Authenticatable as AuthenticatableContract;\nuse Illuminate\\Contracts\\Auth\\Access\\Authorizable as AuthorizableContract;\nuse Illuminate\\Contracts\\Auth\\CanResetPassword as CanResetPasswordContract;\nuse Jenssegers\\Mongodb\\Model as Eloquent;\nclass User extends Eloquent implements AuthenticatableContract,\n                                   AuthorizableContract,\n                                   CanResetPasswordContract\n{\n   use Authenticatable, Authorizable, CanResetPassword;\n/\n    * The database table used by the model.\n    \n    * @var string\n    /\n   protected $table = 'users';\n```\n. Fixed with #663\n. @adriantombu @zeroonnet Which versions of Laravel are you using? There's an issue with 5.2 that has not been resolved yet with Auth. \n. @adriantombu Temp fix is in #694. I'm hoping to look into this soon if nobody else has by then. \n. Alright, I'll fix this up. To confirm, should I be working of the \"develop\" branch or master? Develop seems a bit old. \n. Conferred with some buddies at work, they suggested creating fix branch off of master then pull requesting just my one commit, so that should fix the problem.\n. The only issue I've had is with the Database Token Repository, which will throw an error anytime an Auth token is evaluated against it's expire date (e.g. when you click a change password email link). \nThe problem is how they changed the service provider for 5.2 vs. 5.1 (https://github.com/laravel/framework/commit/1aa9577caf43fbcd769050d4c49f4af880991ef2#diff-ae1e33c0c665facb622cf6ce6187d5f1). I've been trying to create a workaround for this but haven't had too much time to figure out.\nIf you want to upgrade to 5.2, then in the meantime for a quick-fix, try replacing the code in /vendor/laravel/framework/src/Illuminate/Auth/Passwords/DatabaseTokenRepository.php, line 126 from:\n$expirationTime = strtotime($token['created_at']) + $this->expires;`\nto \n$expirationTime = strtotime($token['created_at']['date']) + $this->expires;\nThis will solve any password reset or token expires comparison issues, which are the only ones I've found so far and I've been using laravel-mongodb for both Eloquent and Query Builder on 5.2 quite a bit in the short time it's been released. I'm sure others besides myself are working on a permanent solution for the package so hopefully that'll be available soon, the code I offered is just a quick band-aid until that fix is merged.\n. I was having the same problem for 3.0 but adding a ->with('relation_name') to the model query fixed it. I don't remember if this was required before but maybe that helps. Doesn't feel \"right\" but I had exhausted all other options short of going through each line of this extension. \nAdditionally, fill() wouldn't update the relation, instead I would have to do it on the model its self: $item->relation_name = (MongoID). \n. What you're doing would probably be best achieved by another method as well as not an issue specific to this library (laravel-mongodb) and therefore is not likely to be answered here.\nHowever, to help you on your way, perhaps you want to revisit the idea of storing javascript inside of a database to start with. Either you want to execute this operation (adding two numbers) on the front-end, in which case your JS should already be available on the page or otherwise you're wanting to add these numbers on the store event, in which case you can use an existing database function.\nAdditionally you may want to revisit the way Mongo is storing these values, particularly the _id, which should be a MongoID Object.\nAgain, this is not an issue specific to the library itself, so another forum (Stack Overflow, etc.) may be more helpful to you in your search for a solution.\n. Which version of Laravel and laravel-mongodb are you using?\n. Unless you want to port those parts in particular over from the 2.* versions I don't know of a good way to get by this. The Laravel framework for these modules were rewritten and the 3.* just won't match up. Guess the README could be updated?\n. You have to also install it to the CLI for PHP (that is, as the extension to two separate php.ini's).\nQuick-add for the CLI\nsudo nano /etc/php/7.0/cli/php.ini\nadd extension=mongodb.so to file\nFWIW, Here's a copy of part of my .homestead/after.sh that installs Mongo to my Homestead box, for both ini files. It's not perfect but could be helpful. Hope that works!\n```\necho \"\\n--- Updating APT ---\\n\"\nsudo apt-get update\necho \"\\n--- Installing PHP-specific packages ---\\n\"\nsudo apt-get -y install pkg-config > /dev/null 2>&1\necho \"\\n--- Installing MONGODB package ---\\n\"\nsudo pecl install mongodb\necho \"\\n--- Adding Mongo Extension to both ini files ---\\n\"\nFILES=\"/etc/php/7.0/fpm/php.ini\n/etc/php/7.0/cli/php.ini\"\nmodule=\"mongodb.so\"\nfor i in $FILES\ndo\ngrep -Eq \";extension=php_bz2.dll$\" $i && {\nsudo sed -i.bkp \"s/^;extension=php_bz2.dll$/extension=$module/\" $i &&\necho \"Successfully added $module to $i\"; } || echo \"cant add mongodb, probably already installed\"\ndone\necho \"\\n--- Restarting Nginx... ---\\n\"\nsudo service nginx restart\necho \"\\n--- Nginx Restarted! ---\\n\"\n```\n. Sure I'll try to get that done soon, thanks!. @jenssegers Doesn't seem like this is needed any longer?. ",
    "shazm": "Try this:\n->where( function($query){\n  $query->orWhereIn( 'email', $email );\n  $query->orWhereIn( 'mobile', $mobile );\n})\n. ",
    "gianx89": "I confirm, it's fixed. Thank you for the fast commit.\n. ",
    "maulikmmodi": "It will work great with bulk addition, this way, you just need to create on array and pass it to it.\n$temp = [\n            [\n                'item'=> \"envelopes\"\n            ],`enter code here`\n            [\n                'item'=> \"envelopesas\"\n            ],\n            [\n                'item'=> \"lala\"\n            ]\n        ];\n\n        $userData = DB::table('log')->raw( function ( $collection ) use ($temp) {\n\n            return $collection->insertMany($temp);\n        });. It will work great with bulk addition, this way, you just need to create on array and pass it to it.\n\n$temp = [\n            [\n                'item'=> \"envelopes\"\n            ],\n            [\n                'item'=> \"envelopesas\"\n            ],\n            [\n                'item'=> \"lala\"\n            ]\n        ];\n\n        $userData = DB::table('log')->raw( function ( $collection ) use ($temp) {\n\n            return $collection->insertMany($temp);\n        });. U can try like this, It will work\n\n$nacionalidad = DB::table('medicos')->raw( function ( $collection ) {\nreturn $collection->aggregate([\n[\n'$group' => [\n'_id' => array(\n'nacionalidad' => '$nacionalidad'\n),\n'count' => ['$sum' => 1],\n]\n],\n]);\n});\nIt will return CURSOR pointer and u need to iterate that, u can look it in here https://docs.mongodb.com/v3.0/reference/glossary/#term-cursor or by following :\n. Try this way, use  \"\\MongoDB\\BSON\\UTCDateTime\" because \"MongoDate\" id deprecated and \"DateTime\" will convert your date to timestamp in milliseconds.\n$date = new \\MongoDB\\BSON\\UTCDateTime(new DateTime(\"2017-03-31\");. It will work great with bulk addition, this way, you just need to create on array and pass it to it.\n$temp = [\n            [\n                'item'=> \"envelopes\"\n            ],\n            [\n                'item'=> \"envelopesas\"\n            ],\n            [\n                'item'=> \"lala\"\n            ]\n        ];\n\n        $userData = DB::table('log')->raw( function ( $collection ) use ($temp) {\n\n            return $collection->insertMany($temp);\n        });. I have same problem and i am not able to find any specific solution for this, it always returns NULL on count.  $nacionalidad = DB::table('medicos')->raw( function ( $collection ) {\n        return $collection->aggregate([\n            [\n                '$group' => [\n                    '_id'    => array(\n                        'nacionalidad' => '$nacionalidad'\n                    ),\n                    'count'  => ['$sum' => 1],\n                ]\n            ],\n        ]);\n    });\n\nIt will return CURSOR pointer and u need to iterate that, u can look it in here https://docs.mongodb.com/v3.0/reference/glossary/#term-cursor or by following :\n$nacionalidad = json_decode(json_encode(iterator_to_array($nacionalidad)));\n. ",
    "m0lll0t": "Hi @jenssegers\nJust pinging about this PR.\n. ",
    "garymalcolm": "I have answered my own question:\n$c->update(array('upsert' => true));\nworks as expected. Awesome! \n. ",
    "arirah": "$data = array ('name'=>'Jhon') ;\nDB::collection('users')->where('id',$id)->update($data , array('upsert' => true));\nInsert a new row ! Then how it works ? . ",
    "hlorofos": "Is there a way to determine if the record has been inserted or updated?. @halaei good job on this, I have to fork the project and apply your fix to use the driver.\nIts ridiculous this PR still haven't merged yet 8-)\nI also added an ability to parse out database name from DSN string here https://github.com/jenssegers/laravel-mongodb/pull/1491. ",
    "delahappy": "I made a mistake during installation.  This should be closed.\n. ",
    "ViktorKudlai": "I found the answer Stackoverflow.\n. Thanks, worked for me.)\n. ",
    "KTAnj": "$where=array(\"child.id\"=>$id);\n$data= DB::connection($connection)->collection($collection)->raw(function($collection) use($where) {\n            return $collection->aggregate(array(\n                       array('$unwind'=>'$child'),\n                       array('$match'=>$where)\n            ));\n        });\n        return $data['result'];\n. Please let me know , how to do this with package.\n. ",
    "steveneaston": "Have you put the configuration under the connections key in  config/database.php\nphp\n'mongodb' => array(\n    'driver'   => 'mongodb',\n    'host'     => 'localhost',\n    'port'     => 27017,\n    'username' => 'username',\n    'password' => 'password',\n    'database' => 'database',\n    'options' => array(\n        'db' => 'admin' // sets the authentication database required by mongo 3\n    )\n),\nIf so, try: dd(DB::connection('mongodb')->collection('potato')->get()); It should return []. Note: ensure \u2026connection( [THIS KEY] )->\u2026 matches the connection config key.\nI had this problem at first, because I had a typo in my model's protected $connection attribute.\n. Does your ThemeGenerator\\User model extend Jenssegers\\Eloquent\\Model? It needs to extend that, rather than the default Illuminate\\Database\\Eloquent\\Model.\n. ",
    "lotrietb": "Just got this issue, andresenra's answer did the trick for me.. ",
    "panbhatt": "As per the mongodb documentation \nFor in-memory sorts that do not use an index, the sort() operation is significantly slower. The sort() operation will abort when it uses 32 megabytes of memory.\nso please create an index over the Column on which the search is being made and also make sure the total number of indexes in the collection wont go beyond 64, as this is the limit imposed by MONGODB. \nRead further for this: \nhttp://stackoverflow.com/questions/24690812/index-for-gte-lte-and-sort-in-different-fields\n. ",
    "lloy0076": "Use the setConnection method on the model, see this stack overflow.. ",
    "jonwhittlestone": "Oh I solved by using different creation syntax\n$r = new Setting;\n$r->id = $client['id'];\n$r->save();\n. +1\n. ",
    "skmail": "Duplicated ... #347 \n. ",
    "IamRobin": "Well, it's been over a month since I've asked this question and so far the author hasn't responded, so I guess this is working as he intended it. But I still had to solve my issue. So I created my own BelongsToMany relation that extends the original one and applied it to the embedded model. I created a sync method for that like this:\n```\npublic function sync($ids, $detaching = true)\n{\n    $current = $this->parent{$this->otherKey} ?: array();\nif($current instanceof Collection) $current = $current->modelKeys();\n\n$detach = array_diff($current, $ids);\n\nforeach ( $detach as $id ) {\n    $this->related\n         ->where('_id', $id)\n         ->pull($this->foreignKey, $this->parent->_id);\n}\n\n$attach = array_diff($ids, $current);\n\nforeach ( $attach as $id ){\n\n    $this->related\n        ->where('_id', $id)\n        ->push($this->foreignKey, $this->parent->_id);\n}\n\n$this->parent->{$this->otherKey} = $ids;\n\nreturn;\n\n}\n```\nIt's probably not the right way. I suspect this increases the number of database transactions needed on write, but it's the only way I got it to work. I simply used the push and pull methods to update arrays. The original sync method didn't seem capable of updating the embedded document. I still don't know why.\nPersonally, I wouldn't like the approach of having something like a pivot document. I would like to retrieve as much information that I need in one place with a single read. Also, it doesn't hurt to have product_ids on a facet, because when you delete that facet you also need to remove it from the products it is attached to. In this case I would call the sync with an empty array before deleting the facet. \nI don't know if I'm doing this right, so feel free to correct me, but for now it saved my case.\n. ",
    "nicklee1990": "did you find a way to do this? I was embedding a user and the password was being returned in the document! I managed to avoid this when originally embedding the document by doing an 'exclude' e.g.\n$user = $this->user->all()->except('password')->first();\n// Embed the user\n$other->user()->associate($user);\n$other->save();\nNow the password will not be on the embedded User in the Other document\n. cheers!\n. ",
    "tekminewe": "Hi @nicklee1990 sorry for the late reply. I tried your method but I don't know how to do it.\nHere is my code\n```\n$address = new Address();\n$address->country = 'us';\n$user = new User();\n$user->save();\n$user->address()->save($address);\n```\n. At the moment, i just manually exclude the attributes after retrieve. Anyone has the proper solution?\n. ",
    "zuc": "I'm experiencing the same issue too\n. ",
    "kargnas": "+1. ",
    "sakalauskas": "Not sure how, but the issue disappeared magically, though, I am not sure what I've done to fix it.\n. If you want to return them as Carbon instance, just declare additional fields in the model.\nFor example: \n    protected $dates = [ 'created_at', 'updated_at', 'another_date' ];\n. Looks like you are comparing ISODate and DateTime object and it does not work like that I think.\ntry changing $start to:\n$start = new MongoDB\\BSON\\UTCDateTime(Carbon::createFromDate(2015, 10, 1)->timestamp * 1000)\n. You need to upgrade laravel-mongodb to 3.x version. \nThere are two mongodb php libraries: mongodb (latest) and mongo (deprecated). From what you written I believe you have latest mongodb library. \nTherefore 2.x laravel-mongodb library supports the old library.\n. Yes you did.\nCheck your config/database.php config\nthe line starting with...\n'mongodb' => [\n                'driver' => 'mongodb',\n                'host' => 'localhost',\n                'port' => 27017,\n                'username' => '',\n                'password' => '',\n                'database' => env('DB_DATABASE', 'forge'),\n            ],\n. Why don't just use model->where('start_date', '>=', Carbon::now())?\nor if you want to still use $gte you can simply pass UTCDateTime there instead of Carbon object like:\nmodel->where('start_date', ['$gte' => new UTCDateTime(Carbon::now()->timestamp * 1000)])\n. It's not you. That queue test always fails in all builds \ud83d\ude03 \n. Had the same problem, after upgrading to 5.3\nSimple fix is just make sure in your db configuration you have name and driver as mongodb\ne.g.\n'mongodb' => [\n                'name' => 'mongodb',\n                'driver' => 'mongodb',\n                'host' => 'localhost',\n                'port' => 27017,\n                'username' => '',\n                'password' => '',\n                'database' => env('DB_DATABASE', 'forge'),\n            ],. It does work.. ",
    "amiri27": "@jenssegers I think you can merge https://github.com/jenssegers/laravel-mongodb/pull/834 and close this pull request.\n. +1 it.. nice implementation..\n. @jenssegers any update on this?\n. @RTLer Could you please solve the conflicts?\n. @jenssegers do you have any plan to support new mongodb driver?\n. This is the new version of mongodb driver:\nhttp://mongodb.github.io/mongo-php-driver/\n. https://github.com/jenssegers/laravel-mongodb/pull/834 See this\n. @WillSkates Nice Job.. I tested that and working well.. Could you please fix StyleCI tests also? Hope to be merged by @jenssegers soon..\n. @WillSkates Thanks a lot for the time you put.. That saved us a lot of time due to working on same PR...\n. See this https://github.com/jenssegers/laravel-mongodb/pull/834\n. @lukepolo please close this pull request cause this change is already done on readme file..\n. +1 it.. Nice job guy..\n. @jenssegers ignoring community pull requests is not an acceptable behavior..\n. Well done @jenssegers ... Thanks a lot for your great library..\n. @jenssegers still no update after 1 month..\n. @jenssegers can you merge these changes?\n. @jenssegers guy could you please respect to community by reply to them? still waiting to see any changes regarding this PR...\n. @Gtskk auto_increment using mongodb is not safe with race conditions. You can use redis cache to auto_increment indexes which is safe regarding race conditions. \n. @jenssegers any chance to merge this PR?\n. @pi0 Any chance to merge this?\n. ",
    "iZaL": "any plan on merging this PR ?. ",
    "slickorange": "But why is it sometimes returning the _id as a string and other times (for example - a model's relationships) as the MongoID?\nI saw in another post I can use with to get the result I want:\n$this->modelDescription->where('name',$name)->with('fielddescriptions')->first();\nBut this does not work if the relationship name is written in camel case as 'fieldDescriptions' because laravel then returns the JSON snake cased as 'field_descriptions' while it is stored in the database as fieldDescriptions.\n. ",
    "acidjazz": "@webular @nicklee1990 so after having the same issue as this ticket, and #968 as well, i've found that using ->associate() is the only way this works for me as well.\nWhy does the readme.md example then say to use ->save() when it's clearly not doing anything? Why not get ->save() working or change the readme? This way the next person that wants to try out ->embedsOne doesn't have to find this issue or #968 to get it working.\n. @bram1028 I was about to go this way as well, but found that going after nested ID's became an issue, did you find a solution for this as well?\n. to fix this issue on AWS I did:\nbash\necho \"extension=mongodb.so\" > /etc/php.d/20-mongo.ini\n. @BillKeenan either/or works, > will overwrite what was ever in there and >> will append, there shouldn't be anything else in there.. same here\ntemporary fix until things are resolved in Builder.php line 94:\n``` php\n/**\n * Create a new query builder instance.\n *\n * @param Connection $connection\n * @param Processor  $processor\n */\npublic function __construct(Connection $connection, Processor $processor)\n{\n    $this->grammar = new Grammar;\n    $this->connection = $connection;\n    $this->processor = $processor;\n    //$this->useCollections = version_compare(\\Illuminate\\Foundation\\Application::VERSION, '5.3', '>=');\n    $this->useCollections = true;\n}\n\n```\n. if it helps speed things up @jenssegers it looks like instead of that constant there is a an $app->version() function for Lumen (which is what I'm using)\n. @jetsynthesys thanks, why is that though? why does returning collections only exist in 5.3 now but in Lumen it was always OK?\n. It looks like PR #948 seems to address this, if you look at the addition\n. @GreenLamantin I would say @morrislaptop 's change is the most sound in #948 so far since he's still actually checking for the version \n. Ran into this same exact issue, found that ->associate() was the only way to save mine as well, also mentioned in #534, don't know why that ticket is closed.\n. @JanisOzolins can you tell us what you found wrong? how you fixed this?. confirmed, php7, both of my setups, laravel 5.4 and lumen 5.2, all 6 of my models. @Endijs to what version? i always keep mine up to date. @Endijs you sure your dates are being stored correctly now? \nif this is the solution then @jenssegers can we somehow put a stipulation on this version to require that version of the php driver to help avoid this severe issue?. I'm unable to produce this error anymore, apologies, closing.\n. ",
    "nahuelsgk": "Maybe this help you:\n$result = \\YOURMODEL::raw(function($collection) {\n            return $collection->aggregate(\n                [\n                    '$group' => [\n                        '_id'   => [\n                            '_id' => '$web_proxy_site',\n                        ]\n                        'count' => [\n                            '$sum' => 1\n                        ]\n                    ]\n                ],\n            );\n        });\n. ",
    "julianoribero": "Thank you @nahuelsgk ....\n. ",
    "nishants93": "I'm already using\n$data = Impression::raw()->aggregate(['$group'=>['_id'=>'$slug', 'count'=>['$sum'=>1]]]);\nto find the result of aggregation query but I want to write the same using eloquent only so that i'm not dependent on DB\nI tried\n$data = Impression::groupBy('slug')->aggregate('count', ['slug'])->get(array('count'));\nBut not getting the desired result\nI have worked a lot and tried dd($result) in Query/Builder.php class in getFresh() function\nthe result from this function seems to have the required data.\nBut I do not receive it in my controller, I think it is neglected somewhere in between.\nPlease help me in what i'm doing wrong.\n. ",
    "fppont": "Hello, I was looking for the same thing, and was wondering if this is now supported or might happen later on ?\nMany thanks\n. ",
    "Stretsh": "2 years later I wonder about the status of these relationships. Are they going to be added or should we just give up hope?. I would suggest adding this to the documentation in README.md.. ",
    "inflex13": "Hi,\nAny ETA on this bug?\n. ",
    "stefanschindler": "Hi,\nunfortunately this bug is still open. Any updates?. ",
    "iyourplus": "It can not find by id if the type of id is integer.\nUser::find($id)    // ok\n{\n    \"_id\": \u201c4e7020cb7cac81af7136236b\u201d\n}\nUser::find($id)          // error\nUser::find((int)$id)     // ok, you must convert it to integer\n{\n    \"_id\": 1\n}\n. ",
    "joepherh": "I've the same problem, I'm not using objectId as _id, I'm using integer 1, 2, 3, 4, 5 etc as _id and I cannot do something like User::where('_id', $id)->get(), I need to add (int) User::where('_id', (int)$id)->get() to get it done\n. ",
    "chloealee": "Having the same issue! @hackel do you mean it'd be an easy fix on jenssegers end or would anyone be able to add code into their app for it to work? If the latter, could you explain how?\n. @hackel great, thanks! \n. @hackel still having some trouble - tried to insert it into my raw query (below) but getting this error: \n[MongoResultException]\n  localhost:27017: exception: Unrecognized pipeline stage name: 'allowDiskUse'\n$duplicates = User::raw(function($collection) {\n            return $collection->aggregate(\n                [\n                    '$group' => [\n                        '_id' => ['email' => '$email'\n                        ],\n                        'uniqueIds' => [\n                            '$addToSet' => '$_id'\n                        ],\n                        'count' => [\n                            '$sum' => 1\n                        ]\n                    ]\n                ],\n                [\n                    '$match' => [\n                        'count' => [\n                            '$gt' => 1\n                        ]\n                    ]\n                ],\n                [\n                    'allowDiskUse' => true,\n                    // 'cursor' => {}\n                ]\n            );\n        });\ndo you know what I'm doing wrong?\n. I see what I did wrong now! If anyone is having this issue too and needs an example, got this to work: \n$duplicates = User::raw(function($collection) {\n            return $collection->aggregate(\n                [\n                    [\n                        '$group' => [\n                            '_id' => ['email' => '$email'\n                            ],\n                            'uniqueIds' => [\n                                '$addToSet' => '$_id'\n                            ],\n                            'count' => [\n                                '$sum' => 1\n                            ]\n                        ]\n                    ],\n                    [\n                        '$match' => [\n                            'count' => [\n                                '$gt' => 1\n                            ]\n                        ]\n                    ]\n                ],\n                [\n                    'allowDiskUse' => true,\n                ]\n            );\n        });\nThe issue was that it thought 'allowDiskUse' was a pipeline stage name so I had to separate it out even further from the query.\n. I think you'd want to do that after you find all of the $duplicates instead of passing through - just compare with the results in the array that gets returned.\n. I'm not quite sure - sorry @ScottSpittle !\n. ",
    "Puggers": "Not sure if I am in the right place for this, I am attempting to add the AllowDiskUse option invoking the options function, it doesn't seem to be handling it. Is AllowDiskUse usable outside of a raw query? \n$tweets = Tweet::whereBetween('created_at.sec', dateToInt($request->get('startDate'), $request->get('endDate')))\n            ->where(getTweets($request))\n            ->orderBy('created_at.sec', 'desc')\n            ->options(['AllowDiskUse' => true])\n            ->paginate(10);\n. @amjad-eremnews The power of cases... yup that did it. Thanks!. ",
    "amjad-eremnews": "@Puggers Can you please change AllowDiskUse to allowDiskUse?. After changing function's access modifier from protected to public, another Error occurs with lumen 5.6\n(1/1) ErrorException\nDeclaration of Jenssegers\\Mongodb\\Eloquent\\HybridRelations::morphTo($name = NULL, $type = NULL, $id = NULL) should be compatible with Illuminate\\Database\\Eloquent\\Model::morphTo($name = NULL, $type = NULL, $id = NULL, $ownerKey = NULL). Yes solved in 3.4.0. ",
    "UnrealKazu": "That is understandable, as it can be quite complex. Thanks for your quick response!\n. ",
    "maxrosecollins": "how did you authenticate with your query routers?\nI am getting an Authentication failed message, I'm using the same auth as before I sharded the db. I just updated the hostname to the query router but it doesn't seem to work :/. @cedricve damn okay. Can anyone help?. ",
    "cedricve": "@maxrosecollins no idea, I stopped working on this approach. . Sorry @maxrosecollins! I hope you find the solution quickly \ud83d\udc4d . ",
    "enric612": "If you can see theres a namespace declared:\nnamespace App\\Models;\nThe erro you are mention is a class not found error.... \nThe solution for me was:\nreturn $this->hasMany('Address', 'user_id', '_id');\nreturn $this->belongsTo('User', 'user_id', '_id');\nAnd it works!\n. ",
    "shannoncurnew": "Do you have a key with the name of the migration table in your ./config/database.php ?\n'migrations' => 'migrations',\nThe refresh command works fine for me in Lumen 5.1.\n. ",
    "Codestudios": "I have the same error, some answer ?. ",
    "AlaaAttyaMohamed": "i've the same error too. ",
    "deividaspetraitis": "Bump. +1, i'm too interested and waiting.\n. Fixed but not released yet as stable. However we can build from master manualy, worked like a charm. Reference: https://github.com/mongodb/mongo-php-library/issues/150 \n. @jenssegers any updates according this?\n. Thanks @sakalauskas , seems following expression works well:\nmodel->where('start_date', '>=', Carbon::now())\nHowever, I'll keep this pull request open, since in second example provided functionallity is the same what's done internaly with single DateTime instances and I think the same should be supported natively with MongoDB operators.\n. Can't get what's wrong with build? And how queue is related with mine fix?\n. That's weird. @jenssegers ?\n. Ok, thanks for clarifying things up. Please feel free to close this issue since I was misled. In case anything about passport I will create new one. . Sure, I'm open for contribution just need to do some research. :). @JoeyHoutenbos I believe there is no possible solution to integrate passport without modifying directly it's own files, since all models are extending elequent. I have forked passport repo and added configuration feature to be able set own models it worked like a charm and I'm using it on my projects without any problems. However my pull request to official repo was rejected. Please see my fork: https://github.com/deividaspetraitis/passport. @JoeyHoutenbos well, they just merged passports source with moloquent source since as I mentioned you can't integrate passport with MongoDB without modifying directly it's source.\n@jenssegers please see: https://github.com/laravel/passport/pull/306. The main reason why I do not updated this issue is that changes must be made from passport side not from this package.\nHowever in order to add default support of passport I think best way is to follow moloquent approach and include passport source to this package. However you will need to maintain two packages.. @jenssegers what do you think? In case such approach would be considered I could merge my repo and create a pull request. . @azhard4int  I would suggest update to laravel 5.4.. I've already fork version with models extending feature implemented here: https://github.com/deividaspetraitis/passport but thanks, maybe for others it will be useful!. @saman I would suggest to use it as a local package. I should notice that this package is not synchronized with latest repo at the moment but I will try to do that when have some free time.. ",
    "tzubertowski": "Shameless dump - this is because Codeception Laravel5 module runs all of the tests in transaction in order to roll them back each test. \nYou can safely extend this Module and override _before method to disable the transaction triggering.. ",
    "HasnBatal": "MySQL Relations\nIf you're using a hybrid MongoDB and SQL setup, you're in luck! The model will automatically return a MongoDB- or SQL-relation based on the type of the related model. Of course, if you want this functionality to work both ways, your SQL-models will need use the Jenssegers\\Mongodb\\Eloquent\\HybridRelations trait. Note that this functionality only works for hasOne, hasMany and belongsTo relations.\nExample SQL-based User model:\n```\nuse Jenssegers\\Mongodb\\Eloquent\\HybridRelations;\nclass User extends Eloquent {\nuse HybridRelations;\n\nprotected $connection = 'mysql';\n\n.....\n}\n```. @JudJin  yes, but in my project, i has same problem and it solved . ",
    "JudJin": "@HasnBatal have you tried it yourself?. ",
    "duongtdvn": "Hi there,\nHave you fixed your issue as I'm also having the same. Do you mind to share your fix?\n. I'm facing the issue while declaring connection as mysql as documented in: https://github.com/jenssegers/laravel-mongodb#mysql-relations\n\nuse Jenssegers\\Mongodb\\Model as Eloquent;\nclass Customer extends Eloquent implements Transformable {\n    protected $connection = 'mysql';\n}\n\nJust applied your changes but the error still occur.\n. Ah okay, the Jenssegers\\Eloquent\\Modelfixed the issue without the need of change of Model.php. I have no idea why it work with Jenssegers\\ Mongodb\\Model before.\nThank you so much!\n. ",
    "lohiaad": "Hi roosh-t3,\nI have same issue. not able to find out any solution.\n. Facing same issue. Need to extend Jenssegers\\Eloquent\\Model in all model \n. ",
    "StefanoFrazzetto": "Since I also had this problem and this is the first result from Google, this is how I solved it.\nYou need to add the HybridRelations trait from Jenssegers\\Mongodb\\Eloquent\\HybridRelations in the SQL model you want to use.\nExample:\n```<?php\nnamespace App;\nuse Jenssegers\\Mongodb\\Eloquent\\HybridRelations;\nclass User\n{\n    use HybridRelations;\n```\nReference: laracast.com\n. @ZaeemR \nDon't know if you already solved, but I had to add these lines to my dockerfile:\n```\nInstall required libraries for mongodb\nRUN apt-get install pkg-config libssl-dev -y && pecl install mongodb\nRUN echo \"extension=mongodb.so\" > $PHP_INI_DIR/conf.d/mongodb.ini\n```. ",
    "pengkong": "@jenssegers could you kindly add this function to Blueprint.php this will allow us to create sparse and unique indexes.\n```\n/\n * Specify a sparse and unique index for the collection.\n \n * @param  string|array  $columns\n * @return Blueprint\n /\npublic function sparse_and_unique($columns = null)\n{\n    $columns = $this->fluent($columns);\n    $this->index($columns, ['sparse' => true, 'unique' => true]);\nreturn $this;\n\n}\n```\n. ",
    "702webdev": "To anyone else having this issue please go into your Config folder and edit the file \"cartalyst.sentry.php\". \nchange the Sentry configuration model sections:\n```\n'groups' => array(\n'model' => 'Jenssegers\\Mongodb\\Sentry\\Group',\n\n),\n'users' => array(\n'model' => 'Jenssegers\\Mongodb\\Sentry\\User',\n\n),\n'throttling' => array(\n'model' => 'Jenssegers\\Mongodb\\Sentry\\Throttle',\n\n),\n```\n. ",
    "dimasdanz": "I can confirm this.\nProbably due to update method is passed on Eloquent\\Builder which does not have second parameter\n. ",
    "pashamesh": "+1\n. ",
    "mynamespace": "+1\n. ",
    "amiraliio": "Yes, but I got an error :\nMongoWriteConcernException in Collection.php line 42:\nlocalhost:27017: Modifiers operate on fields but we found a Array instead. For example: {$mod: {: ...}} not {$set: [ \"comments.$.approve\", true ]}\n. ",
    "kpswamy540": "It's my mistake. Please ignore it\n. ",
    "muhammadfarizarya": "Thank you, It works! I changed to 'Jenssegers\\Mongodb\\Auth\\ReminderServiceProvider', and it works! Thank you very much\n. ",
    "bkpandeymca": "i have the same question.\n. ",
    "ahmadazimi": "I have the same question?!. There is no idea about it?!. I've just open commented on Laravel issue [https://github.com/laravel/framework/issues/15892#issuecomment-255517921]\nThey said the similar problem was fixed before but work in my case!\nlaravel version: 5.3.19\njenssegers/laravel-mongodb version: 3.1.1\n. @ellej16 make a comment on that Laravel issue:\n\nAs far as I checked jensessegers/laravel-mongodb's source code, it's missing a few key methods/attributes introduced by this particular PR: #15780 . If I remember correctly, one of those are: getSchemaGrammar() and useDefaultSchemaGrammar() on Connection.php (With this being the culprit behind your troubles).\n\nIs there any chance to fix it here?\n. Thank you @kofispaceman \nI think I should switch to https://github.com/moloquent/moloquent ;-)\n. @jenssegers using Laravel v5.3.21 and jenssegers/mongodb v3.1.1\nand still this is an issue!\n. @jenssegers Looks like it has been fixed in the master branch.\nThanks.\n. @jenssegers when we can have it in stable channel?\n. ",
    "johngieselmann": "https://github.com/jenssegers/laravel-mongodb/issues/426\n. Any progress?\n. ",
    "wprk": "I'm having this issue too. Haven't been able to find a solution and fix in #426 didn't work for me. I'm going to use beanstalkd for now as others have suggested.\n. ",
    "Ynk33": "I'm experiencing the same issue. I expect the 2nd call to work as well as the first one, but it does return a empty Collection.\n. ",
    "benargo": "I'm having the same issue as well, the 'solution' @erkanarslan outlined above works well as a way around:\n\nTest::where(function($query){\n    $query->where('votes', '>', 100)->orWhere('name', 'John');\n})->get();`\n. Getting this as well with both has and whereHas.\n\n\nLaravel Version: 5.3.30\nLaravel-MongoDB Version: 3.2.1\nPHP Version: 7.1.2\n. Is this still causing issues? I believe I fixed this issue with #1158.. The syntax for index has changed. Try this:\n\nSchema::collection('mycollection', function ($collection)\n{\n            $collection->index('location', ['2dsphere']));\n});\n. @9787954511 MongoDB doesn't have restrictive column types, so there's no real need to create indices of this nature. I would advise using Eloquent's mutators if you need to validate data types here.. Hey @sizerm,\nThis package utilises Eloquent from Laravel, so just follow the documentation on defining Eloquent Relationships.\nFor example:\n````php\n<?php\nnamespace App;\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Eloquent;\nclass Post extends Eloquent\n{\n    /\n     * Get the comment record associated with the post.\n     \n     * @return \\Jenssegers\\Mongodb\\Relations\\HasOne\n     /\n    public function comment()\n    {\n        return $this->hasOne('App\\Comment');\n    }\n}\n````\nSince MongoDB also supports embedded documents, you can also utilise the package-specific embedsOne and embedsMany relationships. See the package documentation.. Can you provide a little more context? It would be useful to see the whole class.\nHowever, you're probably better off asking this on Stack Overflow in the first instance, since there's a high probability this isn't an issue with this particular package.\n@jenssegers I suggest you close this issue.. I've noticed that the same exception is thrown on Builder::count() too. \nI think I've determined this is because both the count and paginate functions cause aggregations, and I don't think there's much we can do about this. I guess I'll just have to stick with simplePagination.. Alas not.\nHowever, if you are keen on having length-aware pagination you could always manually create a paginator by slicing the collection.. I got around it using the following:\n```php\n$users = Users::with('relation')->get();\n$users->transform(function ($item, $key) {\n    $item->relation_count = $item->relation()->count();\nreturn $item;\n\n});\n```\nIt's not the cleanest solution, but it works \ud83d\ude42. I believe this was fixed by #1300. Can anyone confirm?. I upgraded to v3.2.3 earlier today, and this issue is still present.\nThe workaround I mentioned still works, so I'm going to submit a pull request to get it incorporated. :). Not sure I can do anything to make the Travis CI build pass. \ud83e\udd14. I need to do some more testing on it first, as I haven't attempted to replicate the issue on >3.2.3. I'm aiming to do this in the coming week.. I'm really sorry about the delay. I had the day off today and took the opportunity to revisit this PR.\nI've made sure this change is compatible with the latest version (as I developed the original fix on a previous build). Your comments were very helpful with this as well.\nI'm going to resubmit the PR.. ",
    "stuartm": "Same issue, workaround described by erkanarslan works for now.. ",
    "rizalmovic": "Adding mutator method to get foreign key id to string seems to work also.\n. ",
    "bram1028": "I gave up on the inconsistent behavior and started using strings in Mongo instead of ObjectId to reference other documents.\n. ",
    "dedidot": "work, but data not show bro\n. ",
    "tacone": "Whoops. I forgot :)\nHere it is: https://github.com/jenssegers/laravel-mongodb/pull/580\n. ",
    "xufuhero": ":+1: I also want to use my id instead of default id\n. :+1: \n. @tabbi89 Thank you very much :+1: \n. ",
    "sagarrayudu": "I'm having same problem I wonder why this question has no support since it was posted ?\n. ",
    "Krlinhos": "For me, it was an error in my code, but it is just fixed\n. ",
    "silencechow": "+1\n. ",
    "juliancc": "+1\n. ",
    "MustafaMagdi": "Any updates?. ",
    "zishiguo": "not ways to solve ?. @jenssegers configuration\n'mongodb' => [\n    'driver'   => 'mongodb',\n    'host'     => ['server1', 'server2'],\n    'port'     => env('DB_PORT', 27017),\n    'database' => env('DB_DATABASE'),\n    'username' => env('DB_USERNAME'),\n    'password' => env('DB_PASSWORD'),\n    'options'  => [\n        'replicaSet' => 'replicaSetName'\n    ]\n],\nI see source code.\n`\n    /\n     * Create a DSN string from a configuration.\n     \n     * @param  array $config\n     * @return string\n     /\n    protected function getDsn(array $config)\n    {\n        // Check if the user passed a complete dsn to the configuration.\n        if (! empty($config['dsn'])) {\n            return $config['dsn'];\n        }\n    // Treat host option as array of hosts\n    $hosts = is_array($config['host']) ? $config['host'] : [$config['host']];\n\n    foreach ($hosts as &$host) {\n        // Check if we need to add a port to the host\n        if (strpos($host, ':') === false && ! empty($config['port'])) {\n            $host = $host.':'.$config['port'];\n        }\n    }\n\n    // Check if we want to authenticate against a specific database.\n    $auth_database = isset($config['options']) && ! empty($config['options']['database']) ? $config['options']['database'] : null;\n\n    return 'mongodb://'.implode(',', $hosts).($auth_database ? '/'.$auth_database : '');\n}\n\nand\n    /\n     * Create a new MongoDB connection.\n     \n     * @param  string $dsn\n     * @param  array  $config\n     * @param  array  $options\n     * @return \\MongoDB\\Client\n     /\n    protected function createConnection($dsn, array $config, array $options)\n    {\n        // By default driver options is an empty array.\n        $driverOptions = [];\n    if (isset($config['driver_options']) && is_array($config['driver_options'])) {\n        $driverOptions = $config['driver_options'];\n    }\n\n    // Check if the credentials are not already set in the options\n    if (! isset($options['username']) && ! empty($config['username'])) {\n        $options['username'] = $config['username'];\n    }\n    if (! isset($options['password']) && ! empty($config['password'])) {\n        $options['password'] = $config['password'];\n    }\n\n    return new Client($dsn, $options, $driverOptions);\n}\n\n`\nNo dsn way of configuration use $uriOptions. However $uriOptions accepts \"authMechanism\" and \"authMechanismProperties\" options until 1.3.0. \nCan you compatible the version  1.2.0 ?\n. ",
    "henriale": "Solved. I forgot to convert date values to a MongoDate object.\n. @mohammad-69 @worker-zx sorry guys, but I don't have the solution anymore. however, I guess you should cast Carbon object to MongoDate. ",
    "im-zhangxi": "@henriale @mohammad-69 Can you put your code here how did you solve it ? I'm facing same problem. @Wu4m4n me too. ",
    "marcnewton": "This post shows up still in 2019 \ud83d\udd22 \nuse MongoDB\\BSON\\UTCDateTime;\nnew UTCDateTime(new \\DateTime('now'));\nCarbon extends DateTime so a carbon instance should be usable:\nnew UTCDateTime(Carbon::now());. Why has the working fixes for password resets that currently reside in the master branch not been published to packagist @jenssegers ?\nThe current latest published version v3 package is 3.4.2 and contains the bad DatabaseTokenRepository & PasswordBrokerManager files.\nDiff on 3.4.2 and master shows those files are the only 2 remaining unpublished changes and seem to work.\nShould these fixes have not been published as v3.4.3 to packagist?. dropIfExists has never failed me so far. Also do not specify cast Blueprints, omit it.\n```php\n<?php\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Migrations\\Migration;\nclass CreateEventAuditCollection extends Migration\n{\n    /\n     * Run the migrations.\n     \n     * @return void\n     /\n    public function up()\n    {\n            Schema::connection('audit')->create('event_audits', function ($collection) {\n            $collection->index('user_id');\n    });\n}\n\n/**\n * Reverse the migrations.\n *\n * @return void\n */\npublic function down()\n{\n    Schema::connection('audit')->dropIfExists('event_audits');\n}\n\n}\n``. I found the problem to be with having only specifieduse SoftDeletes` in a Model that extends a Model that also has eloquent Soft Delete related queries. \nBoth the top level Model and the extended Model need to specify use SoftDeletes. Hi, Two things I have observed.\nOne\nI have found when using any relationship models with MondgoDB that it is best to specify the class model name only on all relations, leave all other attributes alone in every single model and it all works perfectly.\nTwo\nIn every single model, adding the following line also resolves a lot of issues :\nprotected $appends = ['id'];. Oh there is a 3rd observation too, When I found when being field selective in a parent model, you must also select the children's ids too when working a on a with() relation query..\nWont work: \nParent::select(['name'])->with(['child'])->get()\nWill work:\nParent::select(['name','child_id')->with(['child'])->get(). Laravel 5.7.15 has just broken this again early this week, Reverting back to 5.7.14 with package 3.4.4 works fine.. I can confirm this PR fixes compileWhereInRaw issue in Laravel 5.7.14\nhttps://github.com/jenssegers/laravel-mongodb/issues/1649. Make sure you have run composer require mongodb/mongodb:1.3.2. PR #1661 Resolves this issue.. Oh yes, there is some much deeper issue going on this time around :(. @Zuken Yes, that looks like relationship id's are now getting set. Nice. ",
    "curtisdf": "I wondered the same thing, and I dug into the source code.  Unfortunately there does not seem to be any logging.\nThis is a disappointment for me.  I am new to Mongo (and NoSQL in general), and being able to see what exactly is going into my queries would help immensely for learning it, and for understanding why they're returning unexpected results or errors.\n. Hi @ohmance -- You're getting Mongo queries in the logfile now too?  Or just MySQL queries logged?  I ask because when I dug into the code for laravel-mongodb, it did not appear that there was any logging-related code at all. But I might have missed something.\n. ",
    "stevenmyhre": "To those using multiple database connections (mysql + mongodb in my case), you just need to enable the query log on the specific mongodb connection you want to use, i.e. in boot method of my app service provider:\nDB::connection('mongodb')->enableQueryLog();\nDB::connection('mongodb')->listen(function ($sql, $bindings, $time) {\n    Log::info($sql . var_export($bindings, true));\n});\n. FYI, looks like you can specify these by specifying the whole DSN url, using the dsn key on the options array\nsee here\n. ",
    "TJM": "Hi Jens,\nAccording to the documentation: (https://getcomposer.org/doc/04-schema.md#suggest)\n\nSuggested packages that can enhance or work well with this package. These are just informational\nand are displayed after the package is installed, to give your users a hint that they could add more\npackages, even though they are not strictly required.\n\nThe README.md even indicates that it is required. It seems logical to include any required packages in the composer.json file: https://getcomposer.org/doc/02-libraries.md#platform-packages\n~tommy\n. Hmmm, well I have a few responses to that...\n- In the \"ruby\" world, the \"Gemfile\" has a notion of \"platform\" (mri, jruby, etc) so that you can require certain \"packages\" (gems) on certain platforms ... perhaps if composer intends to support multiple incompatible platforms it should look into implementing the same thing? Perhaps they are trying to? https://github.com/composer/composer/issues/1468 (and related)\n- If mongofil is going to implement the same capabilities as the \"official\" (native?) mongo extension, then perhaps there needs to be a way to say \"provides ext-mongo\" and respond to all the same calls so that people don't need to modify third party code based on what extension they are using to access mongodb. Or perhaps you need an \"HNI version\" (branch) until the tools have caught up with having incompatible platforms? ... (from the mongofil readme)\n\nNote: as pure PHP, the phpversion('mongo') will return null and some libraries as Doctrine will not work properly without modifications, so please use the HNI version.\n- It is ultimately your project and your prerogative, but I thought the point of a composer.json file was to list all your requirements so that people could install all requirements, including a requirement of a \"sub package\" (such as this one) without having to become an expert in each one. If someone is going to run on some non-standard platform, then perhaps they could deal with that? What is your core audience/market running in production?\n\nBy adding this \"required\" extension to the composer.json, we were able to deploy to heroku. There wasn't any \"oh yea, by the way, you have to make sure you install ....\" necessary, it was in the documented place to keep dependencies. Like I said, its your project :)\n~tommy\nEDIT: At the very least, maybe someone will come across this bug if they are encountering the same issue and googling, or it could be documented in README to add one or the other to composer.json, especially in PaaS offerings such as Heroku.\n. My apologies, I looked at the code and didn't see anything that indicated that, but it has been a long time since I worked on PHP :)\n~tommy\n. ",
    "RTLer": "just use this https://github.com/RTLer/laravel-mongodb/commit/4ec4ff96479215dc318e958d3f2f0ccee3842b2f\n. @jenssegers, \nthx for reviewing this PR, I was Busy on some project\nreally want to see this in action, there is any thing i can do to help?\n. see #834\n. thx @pi0, i'm updated the branch with the latest changes on master and now all tests pass again,\nit's been long time since i made this PR, @jenssegers is there any hope that this PR get merged?\n. it's been long time since i opened this PR, i think it's not going to merge, so i'm closing this PR.\nif anyone wants this functionality it can be found on \"moloquent/moloquent\" (it's based on jenssegers/laravel-mongodb but active!). adding auto-incrementing id to mongo like this is not good idea considering race condition\nit can cause duplicate key error.\n. i use redis to to generate true incremental id.\n. ",
    "matthewnance": "Have this issue as well - RTLer's suggestion is much appreciated, but didn't seem to fix the issue for me.\nOnly working solution I've found after a few hours rolling back Laravel from 5.1.20 to 5.1.8.\n. ",
    "Frozire": "Seems like Laravel 5.1.20 breaks all methods, rather then just exists(), that gets returned from the query builder in Jenssegers\\Mongodb\\Eloquent\\Builder.php on $passthru variable:\nprotected $passthru = [\n        'toSql', 'lists', 'insert', 'insertGetId', 'pluck',\n        'count', 'min', 'max', 'avg', 'sum', 'exists', 'push', 'pull',\n    ];\n. ",
    "Tobiasartz": "@hackel Thank you!\nThat was very helpful.\nI ended up modifying my User model like this:\n```\n    protected $appends = ['Incomes'];\npublic function getIncomesAttribute() {\n    return $this->Incomes;\n}\n\npublic function Incomes() {\n    return $this->embedsMany('App\\Models\\Income');\n}\n\n```\nThis way I control the way the Incomes attribute gets returned.\n. ",
    "bitcine-darcy": "@hackel Oh yes, I found my answer in the laravel docs yesterday after some searching (notice you linked many-to-many when my relation is one-to-many - as I wasn't using \"attach\", I didn't think I would need to use \"detach\".)\nPS If you hate to say something, you probably shouldn't. ;)\n. I wasn't aware that I would face such hostility by asking a question, sorry that I'm new around here. I'll be sure to keep your comments in mind.\n. ",
    "zeroonnet": "I still have this issue.\nI added the provider to the config.php but it still displays the same error \"strtotime() expects parameter .....\"\nThe code never gets inside the \"DatabaseTokenRepository.php\" that comes on this package, it's always including the \"\\Illuminate\\Auth\\Passwords\\DatabaseTokenRepository\" by default.\n. ",
    "jaffar-citytwig": "\nI'm on the 5.2, so looks like I'll have to wait then ^_^\n\ni am having same issue\nLaravel Framework version 5.2.14\n\"jenssegers/mongodb\" \"version\": \"v2.3.0\",\n. Thanks @dkstar88 , i was having same issue\n. But if you have username and password for your mongodb then\nthere is an issue with this plugin,\nYou can find further details in this ticket:\nhttps://github.com/jenssegers/laravel-mongodb/issues/772\n. hi @jenssegers \nOn my live system i don't have .env\nand am using config as below \n   'username' => env('MONGO_USERNAME', 'somevalue'),\n   'password' => env('MONGO_PASSWORD', 'somepass'),\n. I have used following config and problem solved.\n'options' => array(\n                'database' => 'admin' // sets the authentication database required by mongo 3\n            )\nfor latest extension use database instead of db in options array .\n. I was having same issue and then came here on this thread.\nI have done exactly as mentioned above and problem resolved,\nBut don't know how this error happened.\nCan anyone let us know the exact reason and proper solution for this??\n. Hi,\nFirst you need to install latest mongodb php extension:\nhttp://php.net/manual/en/mongodb.installation.php\nThen add below line to you php ini\nextension=mongodb.so\n. ",
    "abhijeetkumar": "@darkin1 Hey thanks a lot buddy.... It's working for me now.... :+1: . ",
    "LaGgY-Eval": "php: 5.5.9\nlaravel/framework: 5.2\njenssegers/mongodb : 2.2\nSame issue, have tried what @darkin1 stated above, still receiving the exception.. ",
    "k-zakhariy": "@darkin1 Thanks, you saved my day!!!!\nphp 5.6\nLaravel 5.3\njenseegers/mongodb: ~3.0. ",
    "mcandylab": "In Config/App.php replace Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider on Jenssegers\\Mongodb\\Auth\\PasswordResetServiceProvider\nIn App/Http/Controllers/Auth/ResetPasswordController.php add use MongoDB\\BSON\\UTCDateTime;\nTimezone: Europe/Moscow\nLaravel: 5.7.*\nJenssegers/mongodb: \"^3.4\"\n. In Config/App.php replace Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider on Jenssegers\\Mongodb\\Auth\\PasswordResetServiceProvider\nIn App/Http/Controllers/Auth/ResetPasswordController.php add use MongoDB\\BSON\\UTCDateTime;\nTimezone: Europe/Moscow\nLaravel: 5.7.*\nJenssegers/mongodb: \"^3.4\"\n. In Config/App.php replace Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider on Jenssegers\\Mongodb\\Auth\\PasswordResetServiceProvider\nIn App/Http/Controllers/Auth/ResetPasswordController.php add use MongoDB\\BSON\\UTCDateTime;\nTimezone: Europe/Moscow\nLaravel: 5.7.*\nJenssegers/mongodb: \"^3.4\"\n. ",
    "litan1106": "I found a solution using raw\nExample:\nUser::raw()->ensureIndex('created_at', ['expireAfterSeconds' => 60]);\n. ",
    "pfzwaan": "`namespace App;\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Eloquent;\nuse Illuminate\\Auth\\Authenticatable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Auth\\Passwords\\CanResetPassword;\nuse Illuminate\\Foundation\\Auth\\Access\\Authorizable;\nuse Illuminate\\Contracts\\Auth\\Authenticatable as AuthenticatableContract;\nuse Illuminate\\Contracts\\Auth\\Access\\Authorizable as AuthorizableContract;\nuse Illuminate\\Contracts\\Auth\\CanResetPassword as CanResetPasswordContract;\nclass MongoUser extends Eloquent implements AuthenticatableContract,\n    AuthorizableContract, CanResetPasswordContract\n{\n    use Authenticatable, Authorizable, CanResetPassword;\n}`\nclass User extends MongoUser\nhttps://github.com/barryvdh/laravel-translation-manager\nDid the following but when i ran php artisan translation:import still getting the error\n[Symfony\\Component\\Debug\\Exception\\FatalErrorException]\n  Call to a member function compileSelect() on null\n. K fixed the problem was in the package itself\n. return Users::raw(function($collection)\n    {\n        return $collection->aggregate(\n            [[\n                '$lookup' => [\n                    'as'=>'info',\n                    'from'=>'beroep',\n                    'foreignField'=>'voornaam',\n                    'localField'=>'voornaam'\n                ]\n            ]]\n        );\n    });\n. ",
    "fuzonmedia": "Same issue facing .. \"Fatal error: Call to a member function compileSelect() on null\"\nUsing \n\"laravel/framework\": \"5.2.*\",\n\"jenssegers/mongodb\": \"^3.0\"\nCan you help how to solve ? \n. I fixed it by changing the extends class from \"Model\" to \"Eloquent\" in my DB model \n. @ahmedash95  you have to change it in your model file \nuse Jenssegers\\Mongodb\\Eloquent\\Model as Eloquent;\nclass User extends Eloquent {} \n- User is the laravel model \n. ",
    "ahmedash95": "@fuzonmedia i'm facing this problem now but i can't understand which file you had change model to eloquent ? \n. @fuzonmedia okay i got it , but i change it in the Authenticate class in the laravel core itself and it works fine for me\n. @Ravaelles thanks ^_^ \ud83d\udc4d \n. ",
    "Ravaelles": "@ahmedash95 Because overriding core classes is always wrong as they will be overriden in the next Laravel upgrade via composer, I think it's a good idea to introduce new App\\MongoUser class over which you have full control.\nclass MongoUser extends \\Jenssegers\\Mongodb\\Eloquent\\Model implements\nAuthenticatableContract, AuthorizableContract, CanResetPasswordContract\n{\n    use Authenticatable,\n        Authorizable,\n        CanResetPassword;\n}\nAnd then change your User model to:\nclass User extends MongoUser\nThat works for me :+1: \n. iceheat is right, it broke my Laravel 5.1.30 project as well. I will upgrade to 5.2, I hope it solves the problem. But anyway, thanks for the mongo development, Jens!\n. @Oyelaking Too late for you, but info for future visitors. To remove index just use:\n$collection->dropIndex();. I just want to wrap up the conversation above and leave a complete fix file that restored the functionality, for me (Laravel 5.5), here it is:\nhttps://gist.github.com/Ravaelles/3878d82117d2881c03ee02e036cc67cb\nYou also need to update the composer file, read closely microwavekonijn's post two messages above this one.. Quoting:\n\"I think it is better to replace dropIfExists with drop in your migrations or implement the dropIfExists logic using drop and hasCollection method like @MightyPork in your migrations.\"\nBasically the problem is in dropIfExists function. . sudo reboot helped in my case. Probably need to restart php etc.. ",
    "deanmcpherson": "For reference, I was getting the above error when using Cashier (User and Subscriptions are MySQL backed). The issue was because the default connection is set to mongo, the Cashier Models where looking in the wrong place.\nI forked Cashier to fix, setting the connection direction on the subscription model.\n. ",
    "chintan13": "thanks to @Ravaelles\nfor some one new with same problem her is full Class:\n```\n<?php\nnamespace App;\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Eloquent;\nuse Illuminate\\Auth\\Authenticatable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Auth\\Passwords\\CanResetPassword;\nuse Illuminate\\Foundation\\Auth\\Access\\Authorizable;\nuse Illuminate\\Contracts\\Auth\\Authenticatable as AuthenticatableContract;\nuse Illuminate\\Contracts\\Auth\\Access\\Authorizable as AuthorizableContract;\nuse Illuminate\\Contracts\\Auth\\CanResetPassword as CanResetPasswordContract;\nclass MongoUser extends Eloquent implements AuthenticatableContract, \n            AuthorizableContract, CanResetPasswordContract \n{ \n    use Authenticatable, Authorizable, CanResetPassword; \n}\n```\nand then \nclass User extends MongoUser\nWorks like a charm\nI have used this with Laravel 5.3\n. ",
    "loonytoons": "@alexandre-butynski Is this fix also going to be applied to the 2.2 package?\n. I'll check again but didn't appear to be. Just in 2.1.10.\nOr is the 2.1.10 package actually good to use with laravel 5.1?\nUpdate: @jenssegers we're including \"jenssegers/mongodb\": \"2.2.*\" in our composer.json which doesn't include the fix. Not sure if we're actually good to be using 2.1 though for laravel 5.1, or if 2.2 just needs a fresh tag cut.\n. Awesome, thanks guys!\n. ",
    "juanramonperez": "Thanks!\n. ",
    "CurosMJ": "Instead of having a table config parameter, we should have a collection parameter, since this is Mongo.\n. And, why not have a seperate mongodb queue driver, instead of extending the database driver?\n. See #1196 . ",
    "sajadghawami": "Any news on this? Does it work?\n. hmm... ok well, since this post is pretty old, i guess there wont be any response... \nhas anyone tried it out yet? i havent really worked with qeues, so i cant confirm this!\n. Sweet! Pretty excited to try it out :)\nOne more question, which i didnt really understand from your post: Do you use Eloquent or Moloquent for this?\n. Nice, that was fast :)\nHow about using and setting everything else up? Is it basically the same as:\nhttps://laravel.com/docs/5.1/queues\nNothing else to keep in mind?\nThanks guys!\n. I fixed it.\nAs described in the Readme, one should cange the default \"database\" connector, and not add a new one!\n. Update:\nI created a empty job, it does basically nothing... saving this to the database works without any problems... but as soon as i say: \nqueue:work\nit fires the above error... \nas i said, the job itself doesnt do anything really\nUpdate 2:\nI added: \nmongo.allow_empty_keys=true\nto my php.ini so that i can debug that error.\nNow i am getting:\n[MongoException]\n  '\\0' not allowed in key: \\0...\n. Are you sure the IP is right?\n. is this version 2* or 3* ?\n. could this be a possible solution for #738 ?\ni cant find a solution... id be glad if someone could point me to the right direction ^^\n. ",
    "imdketav": "@jenssegers : Can you give me an example of relation?\nI haven't any idea about this.\n. ",
    "smgom": "Hey @imdketav  Did you get any success! Can you give me any example?. ",
    "saeedvaziry": "I have same problem. Any solutions?. @jenssegers any news?. any solutions?. My foreign keys are oid like bellow \n{\n    \"_id\" : ObjectId(\"5ad261321c76fb0c2800303f\"),\n    \"slug\" : \"5ad26132ad114\",\n    \"title\" : \"Title\",\n    \"content\" : \"Content\",\n    \"tags\" : [ \n        \"Tag1\", \n        \"Tag2\"\n    ],\n    \"user_id\" : ObjectId(\"5ad2612e1c76fb0c28000922\"),\n}\n\nin this case hasMany not working... How can i fix this?. @Sebbba Thanks for your answer. I used this solution to my problem\nhttps://docs.mongodb.com/php-library/current/tutorial/indexes/#create-indexes. ",
    "blitzfu": ":+1:\n. ",
    "sirago": "Can we get this implemented? Relationships should use MongoId.\n. ",
    "scrummitch": "Is there a way of saving a one a to many relationship using the traditional eloquent method of $object->children->save($child) instead of Child::create([object_id = $object->_id]) ? I would be willing to help make this change\n. ",
    "ahmedaisar": "Still no work around for this?\n. Can you show me a small example to use \"newQuery()\" method of Eloquent class in my models.\n. ",
    "abrarazeem": "Actually there is a workaround, a bit dirty though but it will work,\nUse trait to override queries and use trait in Models where you want to apply certain type of query scoping.\nlike \"newQuery()\" method of Eloquent class to include your conditions \n. Here is small example,\n`trait SomeTrait{\npublic function newQuery()\n{\n    $query = parent::newQuery();\n    $query->where('column',\"value\");\n    return $query;\n}\n}`\n`class SomeModel extends Eloquent{\nuse SomeTrait;\n}\n`\nwhenever you will be querying SomeModel you will always have this condition in your query, which you defined in SomeTrait, You can put any conditions to include condition or not in Trait etc.\n. ",
    "truongthaison": "i same\n. As I know Laravel create index is:\n$collection>index('index_cloumn');\n. i'm run:\nsudo apt-get install libpcre3-dev\nthen:\npecl install mongodb\nand add: extension=mongodb.so to bottom line of cli/php.ini\n. @jaffar-citytwig Thanks.\n. Oh! ->first([is-array]);\n. In MySQL + Eloquent, I use $this->belongsToMany()->withPivot();\nIn MongoDB not used\n. I'm have same error.\nif use  https://github.com/OpenSkill/Datatable/ <== collection get all: ex: User::all()\n. $this->connection->getQueryGrammar() is null\n. i'm try change code in line:\n$row_count = $this->connection->getQueryGrammar()->wrap('row_count');\nto\n$row_count = \"row_count\";\nit's work, but, total is 0. And paging do not work.\nI think, problem is:\nreturn $this->connection->table($this->connection->raw('(' . $myQuery->toSql() . ') count_row_table'))\n. in mongodb\n\nselect * from (select '1' as row_count from \"posts\") count_row_table\n\nin Mysql\n\nselect * from (select '1' as row_count from posts) count_row_table\n\nShow query:\n(select '1' as row_count from \"posts\") count_row_table.aggregate([{\"$group\":{\"aggregate\":{\"$sum\":1},\"_id\":null}}],{\"typeMap\":{\"root\":\"array\",\"document\":\"array\"}})\n. ",
    "PardeepGrover": "I am facing the same issue.. ",
    "tpaksu": "Are you using https://github.com/jenssegers/laravel-mongodb-session or the default session driver?. #1162 . Duplicate of #1187 . ",
    "yufeiGit": "yes. Is my fault. sorry.\n. ",
    "RatkoR": "Hi,\nwe're facing the same issue. Is there any other way to do the pagination that doesn't use aggregation?\n. We've extended Eloquent and Query Builder classes so that QueryBuilder::forPage() doesn't set paginating variable.\nDon't know if this threw universe out of ballance, but it seems to be working for us ok.\n. ",
    "bjsun": "```\n/\n * Simulate order by clause on the collection.\n \n * @param  string  $key\n * @param  string  $direction\n * @return $this\n /\npublic function orderBy($key, $direction = 'asc')\n{\n    $descending = strtolower($direction) == 'desc';\nreturn $this->sortBy($key, SORT_REGULAR, $descending);\n\n}\n```\n. BUT:  DB::collection(\"\")->find(); can perform\uff1f\nwhy ?\n. ",
    "Danjavia": "Yeah, but the user model run directly on mysql. It's maybe cause a trouble?\n. ",
    "lobermann": "Just after writing, figured out that the environment had a too old php mongo version for the server I use. Updating it, resovled.\n. I know, but in my case I need to create a ttl index, not a normal one. \n. ",
    "tobias-kuendig": "Did you run composer dump-autoload?\nDoes this file exist in your vendor directory?\nvendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Eloquent/HybridRelations.php\n. Make sure to rename the other getName and ensureIndex calls since they don't exist in https://github.com/mongodb/mongo-php-library anymore:\nhttps://github.com/OFFLINE-GmbH/laravel-mongodb/compare/2dc68b03be0e9f9878937832029c16ca7d8fcf9d...OFFLINE-GmbH:ec2d90b26e6ec3fb3c2e24eea09ee873ef6666e8\n. When running unit tests I set sqlite as a global database driver to run tests in memory. This means that newBaseQueryBuilder gets called with an sqlite instance. Since Jenssegers\\Mongodb\\Query\\Builder only accepts a Jenssegers\\Mongodb\\Connection all tests fail with the following exception:\nArgument 1 passed to Jenssegers\\Mongodb\\Query\\Builder::__construct() must be an instance of Jenssegers\\Mongodb\\Connection, instance of lluminate\\Database\\SQLiteConnection given, called in /[...]/vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Model.php on line 519\nWith this check, the code falls back to the default Illuminate\\Database\\Query\\Builder and you are able to run the tests with the sqlite driver.\nObviously not the most beautiful solution, but without the check it is pretty hard to use in memory tests.\nYou know of a better solution to this problem?\n. ",
    "foolish15": "I got the same issue. It because of I still use laravel version 4.2 that mean I have to use \"jenssegers/mongodb\" version \"2.0.*\" and HybridRelations does not exist. I'm still stuck on that.\n. ",
    "headdetect": "Make sure you are using\nphp\nuse Jenssegers\\Mongodb\\Eloquent\\SoftDeletes;\nand not the default that comes with Laravel.\n. ",
    "easthing": "@headdetect thanks\n. ",
    "campherkurt": "After lots of debugging the issue has been located.\nThe culprit is:\n```\nfunction __construct(array $array=[]) {\n       $this->connection = env('MONGODB');\n\n\n\n$this->formatter  = new EntryFormat; <<<<\n       parent::__construct($array);\n       return $this;\n    }\n```\n\n\n\nWhen logging the data that gets inserted/created we end up with:\narray(1) {\n  [0]=>\n  array(4) {\n    [\"formatter\"]=>\n    object(App\\helpers\\EntryFormat)#127 (1) {\n      [\"input\":\"App\\helpers\\EntryFormat\":private]=>\n      NULL\n    }\n    [\"brand\"]=>\n    string(9) \"testBrand\"\n    [\"updated_at\"]=>\n    object(MongoDate)#117 (2) {\n      [\"sec\"]=>\n      int(1447917863)\n      [\"usec\"]=>\n      int(857000)\n    }\n    [\"created_at\"]=>\n    object(MongoDate)#117 (2) {\n      [\"sec\"]=>\n      int(1447917863)\n      [\"usec\"]=>\n      int(857000)\n    }\n  }\n}\nThe formatter object, instantiated from the EntryFormat class, is injected into the \"normal\" data for some reason.\nIt should actually be:\narray(1) {\n  [0]=>\n  array(3) {\n    [\"brand\"]=>\n    string(9) \"testBrand\"\n    [\"updated_at\"]=>\n    object(MongoDate)#119 (2) {\n      [\"sec\"]=>\n      int(1447918063)\n      [\"usec\"]=>\n      int(378000)\n    }\n    [\"created_at\"]=>\n    object(MongoDate)#119 (2) {\n      [\"sec\"]=>\n      int(1447918063)\n      [\"usec\"]=>\n      int(378000)\n    }\n  }\n}\nOnce the line \"$this->formatter  = new EntryFormat;\" is removed then it works fine.\nWhy is that added to the data though? Still investigating that :)\n. ",
    "ajayideal": "Use where(array('_id'=>$id))->pull($update);\n. ",
    "always-beta": "I had same issue where find($id) doesn't work with primary key, and turned out that if _id is a string with length of 24, it will be converted to ObjectID object, which won't match the original 24 length string. Not sure if it's your case.\nNow I have the same issue with the new attribute is not saved after call save(). Do you find out why?\n. $model->breakUps['expiry'] = $model->freshTimestamp() worked for me, which used UTCDateTime internally like @ricardo  mentioned.. ",
    "Hussam3bd": "this error fix after add $key parameter to pluck() function\nin : src\\Jenssegers\\Mongodb\\Query\\Builder.php\n```\npublic function pluck($column, $key = null)\n{\n    $result = (array) $this->first([$column]);\n// MongoDB returns the _id field even if you did not ask for it, so we need to\n// remove this from the result.\nif (array_key_exists('_id', $result))\n{\n    unset($result['_id']);\n}\n\nreturn count($result) > 0 ? reset($result) : null;\n\n}\n```\n. ",
    "paulocoghi": "I confirm this. I installed only the new mongodb pecl driver and laravel-mongodb, and it returns Class 'MongoClient' not found\nI have installed and successfully enabled the extension in both cli and fpm .ini file\nBoth phpinfo() to fpm and php -i confirm the correct installation:\n```\nmongodb\nmongodb support => enabled\nmongodb version => 1.0.0\nmongodb stability => stable\nlibmongoc version => 1.2.0\nlibbson version => 1.2.0\n``\n. Lavarel MongoDB only works with deprecatedmongodriver at the moment.\n. Since Laravel MongoDB [doesn't play well](https://github.com/jenssegers/laravel-mongodb/issues/298) with deprecatedmongodriver in HHVM ( detailed in issue #298 that seems unfixable: mongofill/mongofill#23  ), implementing the new drivermongodb` would finally enable everyone that runs HHVM to use Laravel with MongoDB\n@jenssegers The new mongodb driver is the way to go!\n. @devdreamajax What you get with phpinfo()? Can you paste the mongodb part in your results?. Now I see that you are trying to use the old mongo driver. Unfortunately laravel-mongodb doesn't play well with it in hhvm as I explained before.\nYou have two options:\n1 - Use the new mongodb driver, available and stable in both HHVM and PHP7 along with laravel-mongodb version 3.0.x or 3.1.x\n2 - Use the old mongo driver with PHP 5.6, instead of HHVM, if you need laravel-mongodb up to 2.x version.. ",
    "wissamk": "I am getting 'SASL Authentication failed on database' error when attempting to connect to a remote database. No error when using the latest driver?!\nAny pointers to integrate this driver to the library Jens?\n. ",
    "joaokamun": "Also with php7. \n. Oh I see.. Thanks @jhariani ! \n. ",
    "syntheticminds": "I forked this repo yesterday to see how easy it would be to implement the new driver. It's very different to the 'legacy' one and even with the userland library, there is a lot of work to be done. I like the new driver and library but some things are trickier. For instance (and I could very well be mistaken here) but the new driver doesn't seem to expose MongoDB's cursor methods like the old library.\n. I wouldn't know; I use Homestead. If you provision a box with the following in ~/.homestead/after.sh, you'll be running the new driver.\n```\nsudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10\necho \"deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.0 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.0.list\nsudo apt-get update\nsudo apt-get install mongodb-org pkg-config libsasl2-dev -y\nsudo pecl install mongodb\necho 'extension=mongodb.so' | sudo tee /etc/php5/mods-available/mongodb.ini\nsudo ln -s /etc/php5/mods-available/mongodb.ini /etc/php5/fpm/conf.d/mongodb.ini\nsudo ln -s /etc/php5/mods-available/mongodb.ini /etc/php5/cli/conf.d/mongodb.ini\nsudo service php5-fpm restart\n```\nI guess there are two approaches to get PHP 7 and HHVM support:\n1. Use the mongodb/mongo-php-library. It does take a lot of the heavy lifting out and then cursor opperations can be performed as options on the queries themselves.\n2. Use mongofill/mongofill so the MongoDB extension isn't even needed. Not sure what the performance hit is and the repo looks a bit quiet.\n. ",
    "ThibaudDauce": "Hi, I just ran the tests on the pecl-mongodb branch and everythings seems to work properly with the new driver and PHP 7 (on ArchLinux)\nI just ran into one issue with the whereIn function that doesn't match anymore the Laravel Collection whereIn signature\u2026\n. ",
    "devdreamajax": "Hi, I have installed mongo-hhvm driver with php version of 5.6. I have connected the mongo database while executing hhvm filename.php. I got an error as \n\"Uncaught exception: Could not open extension /usr/lib/x86_64-linux-gnu/hhvm/extensions/20150212/mongo.so: /usr/lib/x86_64-linux-gnu/hhvm/extensions/20150212/mongo.so: cannot open shared object file: No such file or directory\" . \nIn php.ini file , i have specified extensions as, \nhhvm.dynamic_extension_path=/usr/lib/x86_64-linux-gnu/hhvm/extensions/20150212,\nhhvm.dynamic_extensions[mongodb]=mongodb.so . \nkindly provide me solution to proceed further.\n. \n@paulocoghi  Thanks for your response ,also i have changed the hhvm.dynamic_extension_path to \"/usr/lib/php/20131226/mongo.so\"  and restarted the apache server. But it dint work it out, Can you please suggest to continue the process . . ",
    "innov89": "How do you install an earlier version like 3.0.x or 3.1.x?\n\"jenssegers/mongodb\": \"3.1\" didn't work. I've got a similar issue, can't do php artisan migrate and I get the following error:\n[MongoDB\\Exception\\InvalidArgumentException]\n  $collectionName is invalid:\nI'm just doing a simple schema create at the moment, any ideas?. ",
    "nabedesu": "\nMy question is how we're gonna do that using laravel-mongodb drive.\nIs there a way to catch and handle the errors?\n\nIf you use the native class then how is this?\nIn my environment, this worked well.\n\ntry {\n  $coll->insert($doc, $MONGO_WRITE_CONCERN);\n} catch (\\Exception $e) {\n  if ($e->getCode() == 64) {\n    echo \"waiting for replication timed out.\\n\";\n  } else {\n    throw $e;\n  }\n}\n\n. ",
    "developernaren": "I am trying to connect to compose.io using this package. A test in local has succeeded without ssl but seems compose.io requires ssl, this is my config file.\n'driver' => 'mongodb',\n        'host' => [env('MONGO_DB_HOST', '127.0.0.1'), env('MONGO_DB_HOST_2', '127.0.0.1')],\n        'port' => env('MONGO_DB_PORT', 27017),\n        'database' => env('MONGO_DATABASE', 'mydb'),\n        'username' => env('MONGO_USERNAME', ''),\n        'password' => env('MONGO_PASSWORD', ''),\n        'options' => [\n'ssl' => true,\n'db' => 'mydb'\n],\n        'driver_options' => [\n'context' => stream_context_create([\n    'ssl' => [\n        'local_cert'        => base_path('mongo.pem'),\n        'cafile'            => base_path('mongo.pem'),\n        'allow_self_signed' => true,\n        'verify_peer'       => true,\n        'verify_peer_name'  => true,\n        'verify_expiry'     => true,\n    ]\n])\n]\n\nNo suitable servers found (serverSelectionTryOnce set). I have correctly set config in my .env file. I can confirm that the credentials work because I can connect to compose using\n$ mongo --ssl --sslCAFile mongo.pem <composeurl>:<port>/<database>  -u<username> -p<passsword>\nHow do I reflect this config in the configuration file?\n. unfortunately,  no. I pushed this back and have continued with Mongo 2.I will let you know if I find a solution. Keep me posted on your progress as well ;) . any update on this. Has anybody actually done this?. ",
    "outrunthewolf": "Same issue @developernaren \nDid you solve it?. ",
    "jrschumacher": "@cnhttpd see #470 \n. ",
    "mckomo": "+1\n. ",
    "jhariani": "AFAIK, there is no mongo PHP driver that works with PHP7 at the moment. See https://jira.mongodb.org/browse/PHPC-285 for progress on the new, phongo based one. Probably need to wait for the driver before @jenssegers can support it in this library...\n. ",
    "jhdxr": "According to mongodb/mongo-php-driver#175 , https://pecl.php.net/package/mongodb has released v1.1 for php7\n. Here is a style problem.\n. ",
    "i0": "Compatibility with PHP 7 and pecl-mongodb: \nhttps://github.com/jenssegers/laravel-mongodb/pull/691\n. There is a method named \"toArray\" for MongoDB\\Driver\\Cursor\nsee: http://php.net/manual/en/mongodb-driver-cursor.toarray.php\n. I didn't change it,\nProbably my laravel-mongodb package was older.\n. In this case, it gives an exception because that the object values are not same between MongoDate and UTCDateTime, but the script will change generated microtime to an UTCDateTime instance later.\n. ",
    "MartinPham": "Because jenssegers use PHP's deprecated Mongo driver, (I think) It won't be supported in PHP 7+.\nSo I decided to make changes to this package to add support PHP's new MongoDB driver.\nhttps://packagist.org/packages/martinpham/mongodb\n. Great!!! jenssegers\n. ",
    "ludovic-coder": "+1 @MartinPham Why no pull requests ?\n. ",
    "WillSkates": "Hi @jenssegers if you have done any more work on this could you please push as I'd like to get into working on this as well.\nShould I extend the composer build matrix so that we can test against different versions of the laravel framework as well as differing versions of php (omitting cases where they aren't compatible)?\n. I've made a certain amount of headway on this today in that I have no errors just failures running on 5.6 (https://gist.github.com/WillSkates/915bdfeb2237bf2af6d2) with mongo 3.2.1 and mysql 5.7.10. https://github.com/WillSkates/laravel-mongodb is the link to my repo. I'll push a pr once I have stuff working on my end and i've stripped my test config out.\n. @jenssegers Please see PR #704. All tests are passing.\n. Try using this PR and see if you get the same error.\n. Leaving this for now. Locally everything runs fine using php 5.6 and 7 with Mongo 3.2.1 and MySQL 5.7.10. ~~It looks like the service provider just isn't being booted on travis and I have no idea why. If anyone has some advice I'd really appreciate it.~~\nEdit: Never mind the test models may just not be being autoloaded.\n. Yep I have no idea why the various 'on null' errors are happening.\n. @amiri27 I'll push what I have on my machine and see if that solves it.\nNote If you plan on using this library with the pecl-mongodb extension and testing with travis then make sure that you use the addons section from the .travis.yml config file. I don't know why it doesn't work with the stock 2.4.* version of mongo that comes in travis containers but it doesn't.\nApologies for the wild goose chase (I thought the above issue might be something far more complicated.) I'll see if I can fix the styleci issues.\n. Sorted. This should be ready to merge.\n. @jenssegers Yep it works against 5.1.28 using testbench 3.1.7.\n. Yep I can squash them all. Lets see if I can get it working consistently first.\nI reverted the array_map based change for two reasons the first being that the errors in the build say to me that the method returns an object that uses an iterator interface and I'm not currently able to find out which one and whether ArrayObject::getArrayCopy() is available.\nThe second is that it seems the simpler alternative of the two.\n. There we are @jenssegers. I hope I saved you some time :D.\n. No problem @amiri27 I hope this makes things easier for a lot of people wanting to use php7.\n. Hi Jenssegers I didn't get those. I tested using mysql 5.7.10 within a docker container.\nI'm in the larachat slack (https://larachat.slack.com / http://larachat.co/ if you haven't used it before) if you want me to look into it with you.\n. The functionality is the same. You should be able to install it by using \"dev-pecl-mongodb\" as the version constraint in your composer file. \n. ~~\"Jenssegers\\Mongodb\\Model\" is what you should be using.~~\n. @jonathanpmartins Apologies @jenssegers is correct you should be using \"Jenssegers\\Mongodb\\Eloquent\\Model\". I looked in the wrong branch facepalm.\n@jenssegers How do you have it set up cause I honestly cant replicate that.\n. Honestly I'm not sure what you mean but as a general rule I'd say if you are thinking about it then push it to the next release.\nDid you fix your issue with the MySQL relations test?\n. Should L242 also be removed? \n. ",
    "zakhttp": "i've created a bash script to automate the installation of mongoDB on Homestead with php7:\nhttps://github.com/zakhttp/Mongostead7.git\n. ",
    "zainescu": "@jenssegers I tested some more relation and noticed the following:\n- for hasMany if I apply the \"select\" it does not generate exception but it returns an empty array.\n- for belongsTo the \"select\" fields seems to work properly.\n. ",
    "arnabrahman": "Any update on this?. ",
    "zloadmin": "i has same problem.\ntry add connection in your mobel\nprotected $connection = 'mongodb';\nphp\n\n<pnamespace App;\nclass Post extends \\Moloquent {\n```\nprotected $connection = 'mongodb';\nprotected $collection = 'post_collection';\n```\n}\n. Me too :( \nobject(Carbon\\Carbon)#231 (3) {\n  [\"date\"]=>\n  string(26) \"1970-01-01 00:00:00.000000\"\n  [\"timezone_type\"]=>\n  int(3)\n  [\"timezone\"]=>\n  string(3) \"UTC\"\n}\nLaravel 5.4\n\"jenssegers/mongodb\": \"^3.2\"\nMongoDB version: 3.2.7. ",
    "BhaskarNewase": "close issues...\n. ",
    "rjvandoesburg": "@campherkurt You can do this by calling the aggregate method directly on the collection itself.\nif you can access the Jenssegers\\Mongodb\\Connection connection,  you can get access to the MongoDB like so $mongoDB = $connection->getMongoDB() followed by selecting the collection $collection = $mongoDB->selectCollection('mobile_package')\nNow you have a MongoDB\\Collection allowing you to call aggregate\n$collection->aggregate([\n ['$match' => [\n  'network.value' => 'Vodacom'\n  ]],\n ['$group' => [\n    '_id' => '$brand.value',\n    'total' => ['$sum' => 1]\n  ]]\n]);\nThis might not be exactly what you want but hopefully points you in the right direction :)\n. @davidchchang This is already possible, I'm already using the bulkwrite from version 3.2 in some imports scripts I wrote.\nFirst I create a new connection\nnew Jenssegers\\Mongodb\\Connection(\\Config::get('database.connections.mongodb'))\nThen i select the collection like so: $this->collection = $this->connection->getMongoDB()->selectCollection('collection');\nThis will give me a MongoDB collection in return and on that collection I can call bulkWrite\nNow this isn't using the this library, except for the connection, but should enable you to write bulk imports :)\nAnd personally when importing in bulk I'd rather be as close to the driver as possible as to not cause any unnecessary overhead.\n. @jenssegers Hey, so by a coincidence I was having credential problems and I stumbled upon this ticket. I had a @ in my password that caused a problem (see password parameter here: http://uk3.php.net/manual/en/mongoclient.construct.php) I know this is deprecated but it seems the problem persists in the newer driver.\nThe new manager seems to still accept the same parameters (or at least the credentials)\nSo to answer the question you asked @timemachine3030 yes, there is an alternative way to pass the credentials, even other parameters.\nI've have made some changes locally and am willing to put up a pull request but we might want to expand the parameters. What are your thoughts on this?\nSee the diff of the change I've made so far: https://github.com/rjvandoesburg/laravel-mongodb/commit/2948b7148068553593d61e9ab3dd465447042d92\nand https://github.com/rjvandoesburg/laravel-mongodb/commit/f3c646e947a03ec798d32cdc770132303e114fb6\n. Actually, silly old me (only actually started using your project today) this is already possible.\nSee: https://github.com/rjvandoesburg/laravel-mongodb/commit/eaf2b8f1fdd297f2cd612c437cc2d18724746306\nBy adding the credentials to options in the config they are automatically passed as extra options in the MongoDB constructor :)\nHowever this change will cause problems when people update because the config needs to be updated.\n. Ok, I will change that back and add the credentials to the constructor in the Connection class\n. Ok, so the changes I've made are as followed.\nIn the Connection class I've added a couple of checks to see if a person has already provided credentials in the options, if not the credentials will be used from the config (the old way)\nI've reverted the readme as no changes are there and I've changed the access level of a method because it was different from the access level of the method it was overriding.\nBut it seems I've managed to mess up the tests... I'll be fixing those next :)\n. Tests are working again. Applied the change you found as well.\n. Ah sorry missed the notification.\nCheers for accepting the PR\n. Hmm, I see what you mean.\nHowever I do think there is a difference in having empty fields or no fields at all.\nI'd suggest changing the readme so it states to remove the username and password if you wish to use anonymous login.\nBy having an empty username and password a user might be alerted for a misconfiguration in the .env file.\n*edit: Because this has no inpact on my way of using it what so ever I don't mind the empty check t.b.h.\n. Ah, I've just noticed there are tests for the query builder so allow me to write some tests as well.\n. Yes, I've seen that that is indeed where the problem was.\nI've got the test suite running locally now as well so I can test before pushing bad code again.\nI want to test the entire suite before pushing so I just need to get MySQL up and running, after that I will submit the new changes again\n. ",
    "josephting": "Make sure you have added the service provider to your config/app.php.\nJenssegers\\Mongodb\\MongodbServiceProvider::class,\n. ",
    "vrkansagara": "@josephting it's works.\n. @gp187  and @pi0  works fine thanks  :+1:\n. ",
    "wedgwood": "I meet the problem too\n. Still getting this error after updating too.. @haridarshan you could solve it use method from #1037 before fixed.. it seems the root cause of #955 . ",
    "alenn-m": "I have this problem too\n. ",
    "SuperSephy": "Upvoted!\nI'm having the same issue. It looks like something may have changed recently where now it's returning Mongo NumberLong values as doubles (9.0, 12.0, etc) instead of as Integers (9, 12) which means they aren't matching. Haven't found a fix yet, but comparing a working version and a version that's having the same problem you mentioned - it's the only difference I've found between the Laravel collections. \n. Confirmed the issue is related to laravel-mongodb is creating laravel collections with all mongo NumberLong values as doubles instead of integers.\nTemporary workaround will be to access directly using the query builder until the issue is resolved. Ex:\nuse App\\Models\\Messages;\n// assumes you're user is logged in\n$collection = Messages::where('foreign_key', (double) Auth::user()->id)->get();\n. ",
    "kothman": "Also, having this same issue, used a similar workaround.\npublic function someCollection() {\nreturn Collection::where('foreign_key', new \\MongoDB\\BSON\\ObjectID($this->id))->get();\n}\n. ",
    "acid-reign": "I had this same issue, and after seeing abkothman's workaround it occurred to me that since the relation query was failing to find results due to a type mismatch, I would need to change the data...\nI had an ObjectId(\"...\") in my \"foreign key\" field and the Builder is creating a query that looks for the string representation of the object's ID, and mongodb does not see that as a match. \n[ db.stuff.find({\"user_id\":ObjectId(\"123\")}) != db.stuff.find({\"user_id\":\"123\"}) ]\nChanging the data in the field from ObjectId(\"...\") to a string \"...\" worked for me.\nNow belongsTo() and hasMany() are able to match the appropriate records from the other collections.\n[note: the \"_id\" fields still contain ObjectId(\"...\") values, just the \"something_id\" fields need to have the string representation of the same value, instead of true ObjectId()s]\nIf you add records using Eloquent, instead manual input, it does store a string not an ObjectId, \neg:\nclass User extends Model {\n    function stuff() { return $this->hasMany(Stuff::class); }\n}\nclass Stuff extends Model {\n    function user() { return $this->belongsTo(User::class);\n}\n$user = User::find(\"123\");\n$stuff = $user->stuff->create($data);\n$stuff->user == $user;\n. ",
    "sharmasabhay": "@jenssegers In MongoDB 3.2 lookup is working for ObjectId(\"...\") not for string type ids, let me know if you have the solution in you latest release\n. @jenssegers do you have this update in your latest release\n. ",
    "iqbalme": "this seems not fixed, please any solution? i'm still facing the problem. ",
    "tabbi89": "You have to set in Your model public $incrementing = false;. This will avoid casting for primary key IMO Jenssegers\\Mongodb\\Model is missing this. This happens because getCasts method is invoked and primary key gets int cast.\n``` PHP\n    /\n     * Get the casts array.\n     \n     * @return array\n     /\n    protected function getCasts()\n    {\n        if ($this->incrementing) {\n            return array_merge([\n                $this->getKeyName() => 'int',\n            ], $this->casts);\n        }\n    return $this->casts;\n}\n\n```\n. ",
    "ItomicInfrastructure": "Did you end up solving this? . ",
    "Symfomany": "You must use MongoDB\\BSON\\UTCDateTime for handle datetime\n. ",
    "austinh": "Any update on this?\n. ",
    "andrewjameshough": "Yeah i'd be interested to know if there's any update too. If any help is required i'm more than happy to lend a hand where i can.\n. This still hasn't been fixed in laravel 5.5.x either :/. ",
    "dgbrunoh": "Hi @CWood1,\nI don't know if helps, but I have a small application using Laravel 5.2 and this package and it's working fine until now.\nAre you having any issues?\n. Sounds Great ;)\n. ",
    "CWood1": "I was mainly asking as, if not, I was going to take a look at starting the conversion, and wanted to avoid duplicate effort. If it tentitively works, I'll try on a larger application shortly, and report back here; if I find any issues, I'll start work on 5.2 support.\nThanks for reporting back!\n. Sorry about the delay. Probably a stupid question, but how would I check this?\n. Okay, yes it was a stupid question. This is what profiling gave me:\n{\n        \"op\" : \"query\",\n        \"ns\" : \"database.object_state\",\n        \"query\" : {\n                \"$query\" : {\n                        \"$and\" : [\n                                {\n                                        \"object_id\" : \"568fe409d52bab43c80000c1\"\n                                },\n                                {\n                                        \"object_id\" : {\n                                                \"$ne\" : null\n                                        }\n                                }\n                        ]\n                }\n        },\n        \"ntoreturn\" : 1,\n        \"ntoskip\" : 0,\n        \"nscanned\" : 0,\n        \"keyUpdates\" : 0,\n        \"numYield\" : 0,\n        \"lockStats\" : {\n                \"timeLockedMicros\" : {\n                        \"r\" : NumberLong(156),\n                        \"w\" : NumberLong(0)\n                },\n                \"timeAcquiringMicros\" : {\n                        \"r\" : NumberLong(4),\n                        \"w\" : NumberLong(3)\n                }\n        },\n        \"nreturned\" : 0,\n        \"responseLength\" : 20,\n        \"millis\" : 0,\n        \"ts\" : ISODate(\"2016-02-18T10:00:55.181Z\"),\n        \"client\" : \"127.0.0.1\",\n        \"allUsers\" : [\n                {\n                        \"user\" : \"username\",\n                        \"userSource\" : \"database\"\n                }\n        ],\n        \"user\" : \"username@database\"\n}\nShouldn't that object_id in the query be wrapped in ObjectId()? So, \"object_id\": ObjectId(\"568fe409d52bab43c80000c1\"). Or have I just fragged my schema some?\nEDIT: Should have pointed out, in the schema itself, object_id is of type ObjectId. So now, my query becomes, is there a way to get hasOne relations to use ObjectIds on the foreign key?\n. Update: Thanks to info on #744, I updated the code to use $object->state()->get()->toArray(). I tried this before, but I now know it /should/ be the correct line to use. This doesn't error, however returns an empty array, in every case. Manually querying the database confirms that the state objects do exist (as mentioned above, using ObjectIDs on the relation).\nEDIT: That doesn't work with fill(), either.\n. ",
    "bhargav3": "Thanks for mentioning the fix but I wouldn't be comfortable changing framework files as I need to sync this among different environments. Can we have a Laravel 5.2 release for this?\n. Thanks @jenssegers I'll try and let you know\n. @jenssegers worked for me too. Thanks!\n. +1\n. @DFurnes Thanks for resolving this issue. As far as I see it is just enough to add this to the documentation and open a PR.\n. ",
    "zhaff": "Hi, I have same the problem as well using Laravel 5.2. I' m also not comfortable changing the framework files. Any thought?\n. @jenssegers Thank you for the fix. I just tested. The password reset worked perfectly now. Just that need to use Carbon to generate valid token's timestamp. Ref: https://github.com/zhaff/laravel-mongodb/commit/fb405cd92f3aadb31588410e91779cb47ae00980\n. Yup, its not working, its returning: Uncaught MongoDB\\Driver\\Exception\\InvalidArgumentException: MongoDB\\BSON\\UTCDateTime::__construct() expects parameter 1 to be integer\nTried these, also not working. I think the easiest way is to use Carbon.\n```\n$utcdatetime = new MongoDB\\BSON\\UTCDateTime(round(microtime(true)*1000));\n$datetime = $utcdatetime->toDateTime();\nvar_dump($datetime);\n// Return: Uncaught MongoDB\\Driver\\Exception\\InvalidArgumentException: MongoDB\\BSON\\UTCDateTime::__construct() expects parameter 1 to be integer\n$utcdatetime = new MongoDB\\BSON\\UTCDateTime((int) round(microtime(true)*1000));\n$datetime = $utcdatetime->toDateTime();\nvar_dump($datetime);\n// return: 1969-12-24 11:48:21.-164000000\"\n$utcdatetime = new MongoDB\\BSON\\UTCDateTime(time());\n$datetime = $utcdatetime->toDateTime();\nvar_dump($datetime);\n// return: 1970-01-17 20:15:45.34000000\"\n```\n. I just realized the problem is caused by my PHP_INT_MAX is 2147483647. Fyi, I am on windows x86_64. Just hold this PR at the moment.\n. Tested on homestead, all run just fine. I think only affected on Window.\n. Cancelled.\n. ",
    "iceheat": "@jenssegers The latest commit breaks compatibility with Laravel 5.1 LTS. Illuminate\\Auth\\PasswordBrokerManager is only available in 5.2.\n. @jenssegers yes, don't have the Class on my installation. Laravel api  shows its only available from 5.2. I only noticed the problem when I was attempting artisan route:list. \nLink to Laravel 5.1 Auth on github\nhttps://github.com/laravel/framework/tree/5.1/src/Illuminate/Auth/Passwords\n. @Ravaelles a quick fix is to set your composer.json to require  \"jenssegers/mongodb\": \"3.0.0-alpha\" for now. Hope @jenssegers would figure a way around it soon \n. Unfortunately, I'm not sure of the PR process. \n. @pi0 \nThank you for the reply. Query Scopes are a good tool, but in the specific case I have more than query adjustment to be done.  I did track down the problem to Mongodb\\Eloquent\\Model@getAttribute. The problem is that the method searches for relationships before it passes to parent:getAtttribute(). Only the parent method checks for hasGetMutator($key). \nMy current hack is to add \nphp\n   public function getAttribute($key)\n    {\n        // Check for get mutator first\n        return $this->hasGetMutator($key) \n            ? $this->getAttributeValue($key)\n            : parent::getAttribute($key);\n    }\nto my BaseModel class\n. @pi0 I had a look at your commit. Unfortunately, this wouldn't solve the problem since it is run at the end of the method. hasGetMutator should run before checking for embedded relations.\n. That looks perfect!!\nDon't you think overriding the parent method makes more sense than extending it in this case?\n. ",
    "lexx27": "I have the same issue with 5.2\n. ",
    "tekzoom": "I used \"class User extends Moloquent\" or otherwise migration would not work.\nNote: 'Moloquent' => Jenssegers\\Mongodb\\Model::class\n. @gieroj 's solution worked for me too. Thanks so much!\n. ",
    "gieroj": "In your app/Model/User.php you can try:\n`\nuse Illuminate\\Contracts\\Auth\\Authenticatable;\nuse Illuminate\\Auth\\Authenticatable as AuthenticableTrait;\nclass User extends \\Eloquent implements Authenticatable\n{\n    use AuthenticableTrait;\n`\n. ",
    "hfingler": "In case someone else has the same issue as me, @gieroj 's solution worked.\nMy error: \n     ErrorException in Builder.php line 216:\n     Argument 2 passed to Illuminate\\Database\\Query\\Builder::__construct() must be an instance of   Illuminate\\Database\\Query\\Grammars\\Grammar, null given, called in /your path/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Model.php on line 1876 and defined\nUser model becomes the following:\n```\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Eloquent;\nuse Illuminate\\Contracts\\Auth\\Authenticatable;\nuse Illuminate\\Auth\\Authenticatable as AuthenticableTrait;\nclass User extends Eloquent  implements Authenticatable\n{\n    use AuthenticableTrait;\n```\n. ",
    "si2w": "I tried the @gieroj 's solution. I have the error : \nFatalErrorException in User.php line 9: Class 'Jenssegers\\Mongodb\\Eloquent\\Model' not found\n`<?php\nnamespace App;\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Eloquent;\nuse Illuminate\\Contracts\\Auth\\Authenticatable;\nuse Illuminate\\Auth\\Authenticatable as AuthenticableTrait;\nclass User extends Eloquent implements Authenticatable\n{\n    use AuthenticableTrait;\n```\n/\n * The attributes that are mass assignable.\n \n * @var array\n /\nprotected $fillable = [\n    'name', 'email', 'password',\n];\n/\n * The attributes excluded from the model's JSON form.\n \n * @var array\n /\nprotected $hidden = [\n    'password', 'remember_token',\n];\n```\n}`\nDo you see what's wrong ?\nThanks\n. I update everything with composer update and it worked ! \n. Solution : implement CanResetPasswordContract interface :+1: \nUser.php\nuse Illuminate\\Auth\\Authenticatable;\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Eloquent;\nuse Illuminate\\Auth\\Passwords\\CanResetPassword;\nuse Illuminate\\Contracts\\Auth\\Authenticatable as AuthenticatableContract;\nuse Illuminate\\Contracts\\Auth\\CanResetPassword as CanResetPasswordContract;\nclass User extends Eloquent implements AuthenticatableContract, \n                                    CanResetPasswordContract {\n    use Authenticatable, CanResetPassword;\n    ...\n}\nhttps://laravel.com/docs/5.2/authentication#resetting-passwords\n. Same issue here. Any idea how to solve this ? \nThanks. I solved the issue on the version 2.3.5 by doing those modifications : \nsee pull request https://github.com/jenssegers/laravel-mongodb/pull/1569 and https://github.com/jenssegers/laravel-mongodb/pull/1570. ",
    "davyjiang": "@gieroj the solution worked for me too. \nThanks so much!\nBy the way, how did you fixed this problem before? I think this need troubleshoot.\n. ",
    "hung0": "Feedback from gieroj worked for me as well...many thanks!!!!. ",
    "naeemquadistic": "i am getting this when i am trying to Auth::login($user); i want to sign in user after registration auto.\n\"Argument 1 passed to Illuminate\\Auth\\SessionGuard::login() must be an instance of Illuminate\\Contracts\\Auth\\Authenticatable, instance of App\\User given, called in E:\\xampp\\htdocs\\clazzylaravel\\vendor\\laravel\\framework\\src\\Illuminate\\Auth\\AuthManager.php on line 294 and defined\"\nplease help me. i checked out many forums no thing work for me.. ",
    "naveenroy001": "i have used \"composer dump-autoload\" \nand it works for me...... ",
    "Mahnoor47": "@gieroj Thanks. You solved it. :). ",
    "lanka-senanayaka": "@gieroj  solution worked for me too. Thanks so much!. When installing mongo db using (I'm using nginx)\nsudo pecl install mongodb\nsometimes it gives phpize error so you need to run\napt-get install php7.0-dev (or php7.1-dev)\nafter that it will install mongodb successfully\ndon't forget to run\nsudo service nginx restart\nsudo /etc/init.d/php7.0-fpm restart. When installing mongo db using (I'm using nginx)\nsudo pecl install mongodb\nsometimes it gives phpize error so you need to run\napt-get install php7.0-dev (or php7.1-dev)\nafter that it will install mongodb successfully\ndon't forget to run\nsudo service nginx restart\nsudo /etc/init.d/php7.0-fpm restart. ",
    "bajrang8955": "@naveenroy001 \n\"composer dump-autoload\" also worked for me too. I also stuck into this problem for 5 days. Whenever I install new package, this error occurs. \nI tried all the possible solutions on google. but finally I came to know that when-ever we install a new package, Laravel remove all the compiled services. and we ran into this problem. That's why we need to run \"composer dump-autoload\".. ",
    "dhurba87": "@bajrang8955 solution worked for me. Thanks.. ",
    "jaiminrockersinfo": "Hello,\n@naveenroy001\n\"composer dump-autoload\" also worked for me too, but we want token in API response.. ",
    "ramsis23": "\nclass User extends Eloquent  implements Authenticatable\n{\n    use AuthenticableTrait;\n\nwow finally, that's work for me\ni'm using\n        \"php\": \"^7.1.3\",\n        \"jenssegers/mongodb\": \"^3.4\",\n        \"laravel/framework\": \"5.7.*\",. ",
    "mint-ws": "Did you resolve this? I have the same issue.\n. ",
    "davericher": "? why is this closed\n. ",
    "aruncnt": "I have same issue \n. Same problem with we \n. ",
    "CImrie": "Hi ssenaria,\nI'm not sure if I accidentally did a composer update or something, but I ended up with the same issue as you despite not making changes (to working code).\nMy User class is now working with the following:\n```\n<?php\nnamespace App\\Models; // this might be just 'App' for you, as I prefer to put it in a folder called models\nuse Illuminate\\Auth\\Authenticatable;\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Eloquent;\nclass User extends Eloquent implements \\Illuminate\\Contracts\\Auth\\Authenticatable\n{\n    use Authenticatable;\n/**\n * The attributes that are mass assignable.\n *\n * @var array\n */\nprotected $fillable = [\n    'name', 'email', 'password',\n];\n\n/**\n * The attributes excluded from the model's JSON form.\n *\n * @var array\n */\nprotected $hidden = [\n    'password', 'remember_token',\n];\n\n}\n```\n. ",
    "ganeshp0001": "Faced same issue with Laravel 5.2, after bit of debugging solve by changing User model.\nModified User model:\n``` javascript\nnamespace App;\nuse Illuminate\\Auth\\Authenticatable;\nuse Illuminate\\Auth\\Passwords\\CanResetPassword;\nuse Illuminate\\Foundation\\Auth\\Access\\Authorizable;\nuse Illuminate\\Contracts\\Auth\\Authenticatable as AuthenticatableContract;\nuse Illuminate\\Contracts\\Auth\\Access\\Authorizable as AuthorizableContract;\nuse Illuminate\\Contracts\\Auth\\CanResetPassword as CanResetPasswordContract;\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Eloquent;\nclass User extends Eloquent implements\n    AuthenticatableContract,\n    AuthorizableContract,\n    CanResetPasswordContract\n{\n    use Authenticatable, Authorizable, CanResetPassword;\n   ........\n```\n. ",
    "antsanchez": "On laravel 5.3, I just did that and it worked perfectly.\non /vendor/laravel/framework/src/illuminate/Foundation/Auth/user.php \nadded \nuse Moloquent\\Eloquent\\Model as Model;\nLike that:\n```\nnamespace Illuminate\\Foundation\\Auth;\nuse Illuminate\\Auth\\Authenticatable;\nuse Moloquent\\Eloquent\\Model as Model;\nuse Illuminate\\Auth\\Passwords\\CanResetPassword;\nuse Illuminate\\Foundation\\Auth\\Access\\Authorizable;\nuse Illuminate\\Contracts\\Auth\\Authenticatable as AuthenticatableContract;\nuse Illuminate\\Contracts\\Auth\\Access\\Authorizable as AuthorizableContract;\nuse Illuminate\\Contracts\\Auth\\CanResetPassword as CanResetPasswordContract;\nclass User extends Model implements\n    AuthenticatableContract,\n    AuthorizableContract,\n    CanResetPasswordContract\n{\n    use Authenticatable, Authorizable, CanResetPassword;\n}\n```\n. ",
    "arifulhb": "Any example for Laravel 5.4 ?. But its not a good idea to change the vendor files :(. @NoelDeMartin Yes, thats what I mean, these will be in my vendor file, but thanks for the Fork trick.. ",
    "vignesh007vicky": "same issue i have used like this\nim using laravel 5.5.3  please help\nnamespace App;\nuse App\\User;\nuse Illuminate\\Notifications\\Notifiable;\nuse Illuminate\\Foundation\\Auth\\User as Authenticatable;\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Eloquent;\nuse DB;\nclass User extends Authenticatable \n{   \nuse Eloquent ;\nuse Notifiable;\n\n    protected $connection = 'mongodb';\n    protected $collection = 'users';\nprotected $fillable = [\n    'name', 'email', 'password',\n];\n\n\nprotected $hidden = [\n    'password', 'remember_token',\n];\n\n}\n. I have deleted the default migration provided by laravel \nand created a new users migration file\nuse Illuminate\\Support\\Facades\\Schema;\nuse Jenssegers\\Mongodb\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Support\\Facades\\DB;\nclass CreateUserCollection extends Migration\n{\n   /\n     * Run the migrations.\n     \n     * @return void\n     /\n    public function up()\n    {\n        Schema::create('users', function (Blueprint $collections) {\n            $collections->increments('id');\n            $collections->string('name');\n            $collections->string('email')->unique();\n            $collections->string('password');\n        });\n    }\n/**\n * Reverse the migrations.\n *\n * @return void\n */\npublic function down()\n{\n    Schema::dropIfExists('users');\n}\n\n}\nbut still\nroot@system3:/var/www/html/mongolaravel/jen/laravel# php artisan migrate:rollback\nIn Blueprint.php line 83:\nType error: Argument 2 passed to Illuminate\\Database\\Schema\\Blueprint::build() must be an instance of Illuminate\\Database\\Schema\\Grammars\\Grammar\n  , null given, called in /var/www/html/mongolaravel/jen/laravel/vendor/laravel/framework/src/Illuminate/Database/Schema/Builder.php on line 252    \nand also password feild not created. thanks @harrysbaraini  \nI have solved this issue \nthe password is in the hidden property, i just removed from the array its just worked fine.\n. ",
    "tallesdantas": "i've tryed this too , same problem  https://gist.github.com/tallesdantas/f4721f0050ff65fddd12 here is my model , please giv'me a help =/\n. sorry didnt know this, thx for the dumb question answer btw xD\n. ",
    "ht2": "Err, some interesting Style failures! Not sure of the best way to rectify them\n. ",
    "macdabby": "\ud83d\udc4d  same issue here. Absolutely - done!. It looks like 32bit PHP will overflow as you are experiencing. It also looks like a float should work with this function, and this is more likely a bug in HHVM. I'll create a PR to revert this change.. This function should also accept null to use the current time. @jenssegers should we use that instead?. I ran tests with this code in the freshTimestamp() method:\n    print new UTCDateTime().get;\n    print \"\\n\";\n    print new UTCDateTime((int)round(microtime(true) * 1000));\n    print \"\\n\";\n\nWhat's interesting is that the output was as follows:\n1487777270195\n1487777270195\n1487777270197\n1487777270197\n1487777270197\n1487777270197\n1487777270197\n1487777270198\n1487777270197\n1487777270198\n1487777270198\n1487777270198\n1487777270198\n1487777270198\n1487777270198\n1487777270199\n1487777270198\n1487777270199\nIn most cases, you'll see the matching pair, however in a few cases they were off by one second. I suppose that comes from rounding.. Yeah, I also added an explicit null as a parameter to prevent notices. Tested to make sure I got the same output as above.. ",
    "samthomson": "@hackel any workaround to this?\n. @jaffar-citytwig Thanks!!!!\n. ",
    "sachinvrg": "I am getting same error \nPHP Fatal error:  Call to a member function beginTransaction() on null in /var/www/html/push-admin/setupl/vendor/laravel/framework/src/Illuminate/Database/Connection.php on line 577\nwhen fire php artisan queue:work command , I've tried your solution but still not working , can you please help me.Thanks much!!!\n. Thank you @adriantombu  , I've opened this issue also but unfortunately getting no response , do you any other package for laravel 5.2 and mongodb ? I'll switch to another , please help if you know.\n. I have commented codes in beginTransaction and commit()  and return null , now it is not showing error but still php artisan queue:work  command not sending email.\n. can anybody help me working it out ?\n. can you please let me know working codes for queue ? \n. I have the same issue when running php artisan queue:work  command , getting following error \nPHP Fatal error:  Call to a member function beginTransaction() on null in /var/www/html/push_admin/setupl/vendor/laravel/framework/src/Illuminate/Database/Connection.php on line 576\n. @JuCarr  , thank you for your timely reply , my laravel version is 5.2.0 , I am not getting exactly what is solution in #854 , I have commented codes in beginTransaction() and commit() function and return null instead, error has gone after that but still queue is not working , when I run php artisan queue:work command , it prints nothing , neither it works.\n. When I run php artisan queue:failed command , it says \n[PDOException]\n  SQLSTATE[28000] [1045] Access denied for user 'forge'@'localhost' (using pa\n  ssword: NO)\nI don't know in which file I have to change it , I have checked .env and database.php files.\n. Also posted question on stack overflow http://stackoverflow.com/questions/39615770/php-fatal-error-call-to-a-member-function-begintransaction-on-null-in-connect\n. ",
    "Haafiz": "Are you using this MongoDB Driver:  http://php.net/manual/en/mongo.setup.php  which use pecl \"mongo\" package? If yes then this is depreciated. Use \"MongoDB\" extension.\n. ",
    "joearcher": "@Haafiz nope. This is using the php-mongobd driver and php7. \n. ",
    "freimanas": "\"jenssegers/mongodb\": \"^2.3\"\n. That worked brilliantly!\nthanks!\n. ",
    "jasonlfunk": "Was this ever resolved? I am having the same problem.\n. I can confirm this, belongsToMany seems to be broken.\nMy example:\nclass User {\n    public function sites() {\n        return $this->belongsToMany(Site::class);\n    }\n}\n```\n\n\n$user->sites()->getQuery()->toSql()\n=> \"select * from \"sites\" where \"user_ids\" = ?\"\n```\n\n\nThis is definitely wrong. It should be something like:\nselect * from \"sites\" where \"_id\" in ?\n. Okay, after digging around a bit, I figured out what's going on. The library automagically creates the inverse method for the relationship. So, in my case, sites was automatically getting a user_ids field. This is why the query is right.\nMy problem was that the object must be saved before you can add relations to it.\n$user = new User();\n$user->save(); // THIS MUST BE FIRST\n$user->sites()->save($site);\nIf you do it in the other way, then site will get a user_ids=[null]. Which is wrong and causes the problem that I was seeing.. ",
    "boparaiamrit": "Thanks\n. May be this could help\nhttp://mongodb.github.io/mongo-php-driver/ods/\n. @jenssegers Please Fix This, Or I will create a pull request.. ",
    "Lloople": "I'm using ^2.2 in composer.json and can't use whereHas on a belongsTo relation. I need to select that users that has a category which has some text in the title, but no idea how to do this without whereHas. Any clue?\nThanks for your work on this plugin\n. @blackakula have you solved this? I need to use whereHas on my application but don't know how.\nThanks\n. Nope, no news. I ended up filtering the collection...\nEl 12 abr. 2016 22:05, \"Clevon Noel\" notifications@github.com escribi\u00f3:\n\nAnyone got this resolved?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/jenssegers/laravel-mongodb/issues/729#issuecomment-209082111\n. \n",
    "blackakula": "@jenssegers\nv2.2.4 in my composer.lock\n. I've tried to update to v2.3.2\nIt still fails with Call to undefined method Jenssegers\\Mongodb\\Query\\Builder::getHasCompareKey() (I see it's already existing #730 issue).\nImplementation of \\Jenssegers\\Mongodb\\Eloquent\\Builder::addHasWhere has call to $relation->getHasCompareKey(), where $relation is instance of \\Jenssegers\\Mongodb\\Relations\\BelongsTo.\nTake into account, that parent implementation of this method (\\Illuminate\\Database\\Eloquent\\Builder::addHasWhere) doesn't have call to getHasCompareKey and that's why works.\nSo, it's still not possible to use static::whereHas like original one.\n. @Lloople Nope. I have no idea how to overcome this. Waiting for #730 to be solved.\n. My little investigation mentioned in #729:\nImplementation of \\Jenssegers\\Mongodb\\Eloquent\\Builder::addHasWhere has call to $relation->getHasCompareKey(), where $relation is instance of \\Jenssegers\\Mongodb\\Relations\\BelongsTo.\nTake into account, that parent implementation of this method (\\Illuminate\\Database\\Eloquent\\Builder::addHasWhere) doesn't have call to getHasCompareKey and that's why works.\nSo, it's still not possible to use static::whereHas like original one.\n. ",
    "clevonnoel": "Anyone got this resolved?\n. ",
    "danielme85": "Still an issue in v3.0.2, I understand it's complicated. \nLike mentioned above filtering collections works as a alternative in my scenario as well. \nPeople getting this as a google result: I would recommend working on the collection directly and use the where method.\nLaravel 5.2 Collections \nOnly issue I've had so far though, great work! :)\n. ",
    "Kahfimaulana": "Call to undefined method Moloquent\\Query\\Builder::getHasCompareKey()\nhaving the same issue, and still not finding the answer.. . Cool. ",
    "Hanson": "and it happen to the MongoDB\\BSON\\ObjectID too\n. ",
    "Thedigit": "Nice temp patch Khoatran. Having same issue currently i have solved it by not caching the _id at all and setting \nprotected $dates = [\n'updated_at',\n'created_at'\n];\nhope they fix this at the monogdb lib level soon.\n. http://laradock.io/ is a better solution for local stacks.\nyou may need to add the mongodb extension to your php and reload php.\n. ",
    "jmikola": "FYI: ext-mongodb 1.2.0alpha1 has been released with the necessary BSON serialization features.\n. @ebisbe: I replied in https://github.com/jrean/laravel-user-verification/issues/94#issuecomment-266818520, but the stable releases supporting serialization of BSON classes are already available. I assume @xparthx is still using 1.1.x.. Note that https://github.com/jenssegers/laravel-mongodb/issues/262#issuecomment-50905352 appears to be a request for a possible GridFS API to be implemented by this library. I don't believe it is a functional example.\nTo cross-reference with my reply in https://github.com/jenssegers/laravel-mongodb/issues/838#issuecomment-228841563:\n\nVersion 3.0 of this library appears to wrap mongodb/mongo-php-library, which does not implement GridFS. Support for GridFS will show up in 1.1.0 (see: PHPLIB-114); however, it's API will differ significantly from the legacy driver's GridFS API.\n\nI assume that anyone using GridFS with this library is actually working with the legacy driver's MongoGridFS class directly.\n. Cross-referencing with https://github.com/jenssegers/laravel-mongodb/issues/838#issuecomment-228841563:\n\nVersion 3.0 of this library appears to wrap mongodb/mongo-php-library, which does not implement GridFS. Support for GridFS will show up in 1.1.0 (see: PHPLIB-114); however, it's API will differ significantly from the legacy driver's GridFS API.\n. Version 3.0 of this library appears to wrap mongodb/mongo-php-library, which does not implement GridFS. Support for GridFS will show up in 1.1.0 (see: PHPLIB-114); however, it's API will differ significantly from the legacy driver's GridFS API.\n. > how to use this package with gridfs, can show an example please\n\nAnswered in https://github.com/jenssegers/laravel-mongodb/issues/1596. Downloading files with readable streams provides examples for obtaining the full contents of a GridFS file from a stream. The approach there is simpler than manually using feof() and fread() as you do above.\nAs for crafting the data URI, Image Data URIs with PHP, this gist, and this Stack Overflow thread may be helpful. This repository is likely not the appropriate forum for asking such a question (vs. Stack Overflow), since it falls outside the scope of the Laravel MongoDB library.. > Do you mind sharing how you resolved this?\n@aconital: I'm not the OP, but https://github.com/jenssegers/laravel-mongodb/issues/826#issuecomment-290362789 may be helpful for you.. I think this was answered by https://github.com/mongodb/mongo-php-library/pull/498#issuecomment-366987657 and can be closed.. This package does not appear to provide special integration with GridFS; however, the mongo-php-library's GridFS API is accessible and can be used directly. See: https://github.com/jenssegers/laravel-mongodb/issues/826#issuecomment-290362789. > how can I do it can help or show, please\nMy last comment linked to https://github.com/jenssegers/laravel-mongodb/issues/826#issuecomment-290362789, which in turn referenced the GridFS tutorial from the mongo-php-library documentation.\n\nbut it gives me such an error: Chunk not found for index \"0\" Can anyone help me please\n\nCross-referencing with https://github.com/mongodb/mongo-php-library/issues/579. Since that appears to be a distinct issue, I'll follow up in that thread.. ",
    "xparthxvorax": "hey guys,\nI'm also getting the same error:\nErrorException in SerializableClosure.php line 117:\nSerialization of closure failed: Serialization of 'MongoDB\\BSON\\UTCDateTime' is not allowed\nBut I'm getting this with another package.\nPlease have a look to this:\nhttps://github.com/jrean/laravel-user-verification/issues/94\nNot sure, what is the exact issue is and with which package?\nAny help would be appreciated.\nThanks,\nParth vora. Thanks all of you for your time and effort. I have updated PHP MongoDB extension from 1.1.9 to 1.2.2 and fixed the bug.. Hello,\nI'm also getting this same error.\n[2016-11-12 20:18:45] local.ERROR: exception 'Symfony\\Component\\Debug\\Exception\\FatalErrorException' with message 'Call to a member function beginTransaction() on null' in C:\\wamp\\www\\blog\\vendor\\laravel\\framework\\src\\Illuminate\\Database\\Connection.php:611\nStack trace:\n0 {main}\nCan anybody please help me?\nThanks,\n. @sachinvrg , Have you configured queue properly as described over here:\nhttps://github.com/jenssegers/laravel-mongodb#queues\nI have found the issue with my project.\nI had not followed the queue configuration of the package.\nJust follow the proper instruction and it works very well.\n. Hey,\nAny update on this? By the way my question has nothing to do with any relationship.\nThanks. @jenssegers \nCan you please give some reply to this issue?. I'm getting the same error. Have you got an solution?\n. @uriel2707 \nEven if its work, I don't think that it is a good idea to edit that file. Lets say after 1 year Laravel 5.4 get released and I update the framework, that change will be gone and lead back to the same problem.\nLooking forward to see some standard solution.\nAnyway thanks.. ",
    "ebisbe": "@xparthx have you read @khoatran message? It's all explained there. You can either wait for the new extension that will suport it, build your alpha extension or make a work arround with the code to convert Bson/OjectID and BSON/UTCDateTime to some plain string and during unserialization convert them again to each of their types. . @jmikola thanks! I didn't know that the new connector was already available.\n. Can you make a Pr to the project and hope gets accepted @nunomazer ? \n. Same for me as @markszymik said.\n. @vgladimir this is fixed but it's in the release v3.4.* so that means that is not included for Laravel 5.5 and only in 5.6... Is this right @jenssegers ??. @vgladimir I've forked the project and updated the composer to let use Laravel 5.5. If you want to use it, change:\n\"jenssegers/mongodb\": \"dev-master\",\nAdd under \"repositories\":\n\"repositories\": [\n        {\n            \"type\": \"vcs\",\n            \"url\":  \"git@github.com:adinton/laravel-mongodb\"\n        }\n]\nAnd then composer update jenssegers/mongodb . This will use our repository. If you update to 5.6. Remove this changes and use v3.4.*. @jenssegers will this be merged?. ",
    "bhawneshdipu": "using php mongo library:https://github.com/mongodb/mongo-php-library\nwe need run : \ncomposer require mongodb/mongodb\n       and then :  \n   ```\n    use MongoDB\\Client;\n\n    $mongoClient=new Client();\n    $mongodata=$mongoClient->mydb->mycol;\n    $mongodata->insertMany($array);\n\n```\n. ",
    "aadityamundhalia": "How can i use updateMany?  any ideas guys. Same error. Any workarounds?. ",
    "sbourdette": "Any merge ?. I confirm that under Heavy load Queue doesn't speed up.\nWith the proposed correction it solve it\nRegards. Any update ?. Same here. Any workaround ?\n@jenssegers . @behnamazimi did you find a solution ?. @jenssegers did you ever seen that ?. ",
    "Joel-James": "I have upgraded the Mongo server and now it is working! Thanks\n. ",
    "Rezouce": "Done.\n. ",
    "Bodom78": "The class I supplied above would be suitable for version 2.\nI have not looked at this library in a while but it looks like it's changed a bit since I used it.\nFor version 3 you would need to write the \"findAndModify\" query using the updated syntax like seen in this comment https://github.com/jenssegers/laravel-mongodb/issues/734#issuecomment-182938779\n. @leakingminds Not too sure about the #738 error as I never came across it. Perhaps because I was using an older build of the library.\n@jenssegers Sure, I'll do my best when time allows as I'm keep to look over the changes of the library since I used it last.\n. @giolvani Thanks for the PR, much appreciated.\n. #786 Fix for version 3.x\n. @jenssegers I'm not too familiar with unit testing but I'll give it a go.\n. @jenssegers I've added some tests that cover necessary methods. \nTesting also showed that the getNextAvailableJobAndReserve method was not returning the updated document so that has been resolved too.\nAll checks now pass.\n. @codeitlikemiley Fix was merged here https://github.com/jenssegers/laravel-mongodb/pull/792\nIf your having a similar issues it might be best to create a new ticket explaining the problem since it might be a new problem due to changes in the library since the old fix which was a couple of years ago now.. I don't understand why StyleCI analysis is failing when it just reports a close brace is to be replaced with a close brace?\n. @pi0 Thanks for that.\n. Thanks @pi0, I have followed your instructions and #792 is now passing all checks.\n. ",
    "behzadsh": "@jenssegers OK I got it, but I think you should update the code below in README:\n$books = $user->books()->where('rating', '>', 5)->orderBy('title')->get();\nAs it has two errors:\n1. the one I mentioned in OP Missing argument 1 for Illuminate\\\\Support\\\\Collection::get() - It'll call Illuminate version of Collection where method\n2. few lines above that code it says To allow a more query-like behavior, a modified version of the Collection class is used, with support for the following **additional** operations and I checked every method you listed and none of them worked properly. it always return all items in collection\n. It was my mistake. ",
    "hieugroup": "Sure, I've just sent PR #751 \n. ",
    "jasonsworld": "same problem\nI can find ext-mongodb in my computer system(osx  /usr/lib/php/extensions/no-debug-non-zts-20121212),   and I and extension=mongo.so to php.ini  . I don't know what's the reason@jenssegers\n. ",
    "GnarfDwarf": "Same here\n. ",
    "logikinc": "@jubairsaidi What ended up being your solution? I'm in the same situation at the moment. Thanks in advance!\n. @jubairsaidi Yeah, not an option for me, I guess will have to wait until it's upgraded to 5.* >.< Thanks for a quick reply.\n. ",
    "jubairsaidi": "For now using postgres since I was using mongo for just one unstructured data component, so migrated over to a Postgres db table with a json field.  So not really a solution to this problem really if you rely heavily on mongo...\n. ",
    "ricardofontanelli": "Hello @Ardakilic, would you know in what tag the PR #1197 was merged on branch 2.0? I'm trying to install these version using composer install but all tags of branch 2.0 doesn't include your changes. . It is a bug when you are using whereBetween, te class Builder doens't check the $where['values'] array to convert DateTime objects to MongoDB\\BSON\\UTCDateTime. I did the changes and opened a PR #953.\n. It was merged at moloquent/moloquent, I don't know why nobody has merged this PR here!. I think the right way is:\n-- config/database.php\n'database' => env('DB_DATABASE', 'test'),\nIt means that if DB_DATABASE doesn't exist in your .env file, Laravel should use 'test'\n. Is your config/queue.php correctly configured?\n. The master branch works with a new PHP mongoDB driver (MongoDB). Now all DateTime objects are converted to an MongoDB\\BSON\\UTCDateTime. You should run php -i | grep -i mongoDB and see something like that:\nMongoDB Support => enabled\nMONGODB-CR => enabled\nMONGODB-X509 => enabled\nIf you have the driver installed, change all MongoDate to DateTim or Carbon objects.\nI opened an #953 to fix the automatic translation from DateTime to MongoDB\\BSON\\UTCDateTime when using whereBetween, you can use the test cases to see how it works!\n. According PHP documentation, the class name is UTCDateTime \n. ",
    "adiyodishreyas": "Hi @Ardakilic dev-2.0 is not working. \nI am using this command:\ncomposer require jenssegers/mongodb:dev-2.0\nI get \"package was not found\" error. Am I missing something?\nIs there any other way to install this change?. @Ardakilic  thanks.\nI changed the minimum stability to dev and used this command:\ncomposer require jenssegers/mongodb:2.0.x-dev. @Ardakilic  I am having issues with _id not getting returned after my insert query\nFor eg:\n$post = array('x' => 1)\nModel::insert($post);\nAfter the insert query was executed the $post array used to get updated with the _id \ni.e array('_id' => BSON, 'x' => 1);\nAm I missing something?\nI am using laravel 4.2.20, jenssegers/mongodb 2.0.x-dev, php 7\nThanks. @Ardakilic even $model->save(); seems to be failing. \nI get the error \"Undefined index _id\"\nThanks.. ",
    "davidchchang": "@nutjaa: you are right, it should be checking for _id instead of id. Pull request (#769) from @giolvani  has been submitted and merged to master.\n. I just noticed that @jenssegers has merged this to 2.3 already. I believe this issue can be closed now.\n. Thanks @giolvani!\n@jenssegers: can this fix be merged to 2.3 and the other branches as well?\n. We ran into the same problem back in Laravel 5.1 and despite patching the laravel-mongodb queue implementation up with the proper _id Mongo identifiers, we found the query builder API doesn't allow for proper atomicity at the database level. We ended up writing our own queue driver that implements document-level locking using the underlying PHP driver library directly. That way we can guarantee each job is only run once if there are multiple workers.\nYou can find versions of our queue driver that work for Laravel 5.1+ here: https://github.com/chefsplate/laravel-mongodb-queue. ",
    "oneso": "You are not checking if the credentials are empty. This resulty in an \"Authentication failed.\" exception.\nTwo options:\n- add empty() check\n  or\n- edit readme:\n  remove 'DB_USERNAME/DB_PASSWORD' from .env if empty and change database.php from:\nenv('DB_USERNAME', '')\nenv('DB_PASSWORD', '')\nto:\nenv('DB_USERNAME')\nenv('DB_PASSWORD')\nOr is it just me?\n. ",
    "masettir": "Hello!!\nI suspected that it was because of the Collection.\nThx ;)\nR\n. Don't worry :)\nFor now I'm using your module for every common operation.\nTo solve my issue I've used MongoClient directly\nphp\n            $mC = new MongoClient('mongodb://user:pass@host:27017/db', array('replicaSet' => true, 'db' => 'admin'));\n            $db = $mC->selectDB('db');\n            $collection = $db->selectCollection('collection');\n            $results = $collection->find(array('division' => strtolower($message['division']), 'release' => $message['version_from']));\n            foreach ($results as $result) {\n                unset($result['_id']);\n                $result['release'] = $message['version_name'];\n                $collection->insert($result);\n            }\nMaybe you can create a custom class that doesn't use iterator but for this specific behavior I can create an helper, easy way\nThx,\nR\n. Haaaaa!! You are right!! Thank you :+1:\n. ",
    "salarmehr": "I had the same problem and came up with using the natvie mongo client. Is there any plan to return an interator when fetching column by query builder class? \n. ",
    "nunomazer": "I believe embedsOne should not save records in another table, if so you should use hasOne\n. Having the same problem here, is there a good option to overwrite beginTransaction and commit() functions returning null? I made the test and it worked, but I don't know if this may have colateral effects\n. See #854 \n. I don't know how to set the tests to work, since none of the failures has something to do with my chenges ... can someone help with it?\n. Seens Queues were implemented, thanks .. closing this\n. ",
    "mix5003": "yes i know. i want to save customer data in order collections. \ni don't know why my code not save relation. but if i change order of code or call addition save(), it save normally.\ni don't know the correct order to save relation. i must randomly swap order of code and try for a correct result\n. ",
    "timgws": "Please do a composer update, this was fixed in master a number of days ago.\n. Have you tried with https://github.com/OpenSkill/Datatable/?\nI use it with a couple of MongoDB tables and it works OK.\n. ",
    "rohitgadia": "Rectified the error, I forgot including the 'mongodb.ini' in \"/etc/php5/mods-available/\". Instead of including the 'mongodb.ini' my mods-available folder included 'mongo.ini' which is not supportive of \"jenssegers/mongodb\" dependency. \n. ",
    "ZaeemR": "@rohitgadia how to include 'mongo.ini' at the said location?. @Denys-Bushulyak  can you please help me resolve my issue. here is the detail.\nInstalled mongo via \"mongodb/mongodb\": \"^1.0.0\" in the composer file.. ",
    "TechyTimo": "This worked for me:\n$ brew tap homebrew/php\n$ brew install php56-mongodb\n\nThen add this line linking to the binary on your php.ini\nextension='/usr/local/opt/php56-mongodb/mongodb.so'\nYou can change the php version to suit you.. Try installing the mongodb extension using homebrew. \nChange this commands to your php version.\n$ brew tap homebrew/php\n$ brew install php56-mongodb\nThen link it to your php.ini\nextension='/usr/local/opt/php56-mongodb/mongodb.so'\n. If the mongo driver doesn't show up there try installing it this way:\n(Suit this to your php version.)\n$ brew tap homebrew/php\n$ brew install php56-mongodb\n\nThen add this to your php.ini\nextension='/usr/local/opt/php56-mongodb/mongodb.so'\n. ",
    "wayne5w": "Figured something out. Looks like there was a change to laravel 5.1.31. Went back to 5.1.30 and the problem disappears.\n. thanks\n. Actually this is not the problem, need to investigate more. Something has changed, not sure what.\n. ",
    "DMarine68": "Not sure if I'm missing something...  Using Laravel v5.1.34 with Jenssegers v2.2.10 and I get this error.  As far as I know, v2.3.x doesn't work with Laravel v5.1.x.  How can I overcome this error on Laravel v5.1.x?\n. If you're running jenssegers 2.2.x there is a quick fix to it.  \nNot sure if the problem came with Laravel or with Jenssegers, but you can modify the vendor file (not a standard practice I like doing): /vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Schema/Blueprint.php on line 210.  Change protected function addColumn($type, $name, array $parameters = []) to public function addColumn($type, $name, array $parameters = []) and you should be good to go.\n. ",
    "pentatonicfunk": "same error, \"laravel/framework\": \"5.2.*\" \"jenssegers/mongodb\" : \"3.0.0\",\n. ",
    "dkstar88": "I just had this same problem, solved it by remove username, password from the config array.\n//            'username' => env('MONGO_USERNAME', ''),\n//            'password' => env('MONGO_PASSWORD', ''),\n. ",
    "phongtnit": "Thanks @dkstar88, it's working now\n. Hi @jenssegers , I guess this is a bug.\nAll created_at and updated_at fields automatically generated wrong value. More issue images \n. ",
    "ooyo": "Thanks @dkstar88 , it's working\n. ",
    "uriel2707": "Its works\nUpgrade mongo driver dependence mongodb/mongodb 1.0.3 to 1.0.4 and update database.php\n``php\n'mongodb' => [\n   'driver' => 'mongodb',\n   'host' => env('DB_HOST', 'localhost'),\n   'port' => env('DB_PORT', 27017),\n   'database' => env('DB_DATABASE'),\n   'username' => env('DB_USERNAME'),\n   'password' => env('DB_PASSWORD'),\n   'options' => [\n        'database' =>  env('DB_DATABASE') // sets the authentication database required by mongo 3\n    ]\n],. @changha8888 change the database option to the current base name'options' => [\n'database' => 'crm_manage' // sets the authentication database required by mongo 3\n]`. @changha8888 You can provide more information about the configuration you specify.\nthe configuration of mongodb that you use, php version, driver version, laravel version, as well as copy of the .env file. @changha8888 \nI recommend trying the configuration in server through a program, studio 3T is an option. Make sure that the user is correctly linked to the database.\nRegistration database in admin\n\nconfigure connection only for that base\n\n\nLeave accesses only in the .env file\n\n. ## For Laravel 5.3 \nCall to a member function getDateFormat() on nul\nIn the file vendor/laravel/framework/src/Illuminate/Foundation/Auth/User.php\nReplace use Illuminate\\Database\\Eloquent\\Model; for this\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Model;\nIts Works. ## For Laravel 5.3\nCall to a member function getDateFormat() on nul\nIn the file vendor/laravel/framework/src/Illuminate/Foundation/Auth/User.php\nReplace use Illuminate\\Database\\Eloquent\\Model; for this\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Model;\nIts Works. ## Its works\nUpgrade mongo driver dependence mongodb/mongodb 1.0.3 to 1.0.4 and update database.php\n```php\n'mongodb' => [\n   'driver' => 'mongodb',\n   'host' => env('DB_HOST', 'localhost'),\n   'port' => env('DB_PORT', 27017),\n   'database' => env('DB_DATABASE'),\n   'username' => env('DB_USERNAME'),\n   'password' => env('DB_PASSWORD'),\n   'options' => [\n        'database' =>  env('DB_DATABASE') // sets the authentication database required by mongo 3\n    ]\n],. ## For Laravel 5.3 Temporary solution\nCall to a member function getDateFormat() on nul\nIn the file vendor/laravel/framework/src/Illuminate/Foundation/Auth/User.php\nReplace use Illuminate\\Database\\Eloquent\\Model; for this\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Model;\nIts Works. ###Error: Class Model Laravel no extens for Class Jenssegers Model\nSearch line use Illuminate\\Database\\Eloquent\\Model; in the plugin passport path /httpdocs/vendor/laravel/passport\nReplace Model line for this\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Model;\nhttpdocs/vendor/laravel/passport/src/AuthCode.php\nhttpdocs/vendor/laravel/passport/src/Client.php\nhttpdocs/vendor/laravel/passport/src/Http/Controllers/AuthorizationController.php\nhttpdocs/vendor/laravel/passport/src/Http/Controllers/ClientController.php\nhttpdocs/vendor/laravel/passport/src/Http/Controllers/RetrievesAuthRequestFromSession.php\nhttpdocs/vendor/laravel/passport/src/PersonalAccessClient.php\nhttpdocs/vendor/laravel/passport/src/Token.php\nhttpdocs/vendor/laravel/passport/src/TokenRepository.php\nRepeat in Contact User Model \nIn the file vendor/laravel/framework/src/Illuminate/Foundation/Auth/User.php\nReplace use Illuminate\\Database\\Eloquent\\Model; for this\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Model;\nGo to console enter\nphp artisan passport:install\n\n@mohammad-69 @armashfankar @SanderSander \n. ## other solution\nCall to a member function getDateFormat() on null\nAfter installation laravel-mongodb run command for composer \nphp artisan clear-compiled and composer dump-autoload => for composer global installation\nIts Works. ## Its works\nUpgrade mongo driver dependence mongodb/mongodb 1.0.3 to 1.0.4 and update database.php\n```php\n'mongodb' => [\n   'driver' => 'mongodb',\n   'host' => env('DB_HOST', 'localhost'),\n   'port' => env('DB_PORT', 27017),\n   'database' => env('DB_DATABASE'),\n   'username' => env('DB_USERNAME'),\n   'password' => env('DB_PASSWORD'),\n   'options' => [\n        'database' =>  env('DB_DATABASE') // sets the authentication database required by mongo 3\n    ]\n],. ## For Laravel 5.3 \nAggregate method return BSONDocument\nUse function bsonSerialize convert to array\nhttps://github.com/mongodb/mongo-php-library/blob/master/src/Model/BSONArray.php\nExample for method Model\n```\n$tags = self::raw(function($collection) use ($query) {\n                    return $collection->aggregate($query);\n                });\n    foreach ($tags as $item) {\n\n        if (isset($item->_id) && gettype($item->_id) == \"object\" && get_class($item->_id) == \"MongoDB\\Model\\BSONArray\") {\n\n            $bsonSerialize = $item->_id->bsonSerialize();\n\n            $item->_id = array_shift($bsonSerialize);\n        }\n    }\n\n```\nIts Works. @prashant-pokhriyal  Other option parse element\n```\nfunction formatTypeBson($item) {\n$response= NULL;\n        if (isset($item) && gettype($item) == \"object\" && (get_class($item) == \"MongoDB\\Model\\BSONArray\" || get_class($item) == \"MongoDB\\Model\\BSONDocument\")) {\n        $bsonSerialize = $item->bsonSerialize();\n\n\n        $response = array_values((array)$bsonSerialize);\n    } else if (isset($item) && gettype($item) == \"object\" && get_class($item) == \"MongoDB\\BSON\\UTCDateTime\") {\n\n        $response = $item->toDateTime();\n    }\n\nreturn $response;\n    }\n```. ## For Laravel 5.3 \nCall to a member function getDateFormat() on nul\nIn the file vendor/laravel/framework/src/Illuminate/Foundation/Auth/User.php\nReplace use Illuminate\\Database\\Eloquent\\Model; for this\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Model;. config/app.php and composer.json ? @rluberda . ## For Laravel 5.3  Temporary solution\nCall to a member function getDateFormat() on null\nIn the file vendor/laravel/framework/src/Illuminate/Foundation/Auth/User.php\nReplace use Illuminate\\Database\\Eloquent\\Model; for this\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Model;\nIts Works. ## other solution - rebuild autoload file\nCall to a member function getDateFormat() on null\nAfter installation laravel-mongodb run command for composer \nphp artisan clear-compiled and composer dump-autoload => for composer global installation\nIts Works. You already tested with??\nuse MongoDB\\BSON\\ObjectID;\n$objectID = new ObjectID();\n'_id' =>  $objectID;\nOR\n'_id' => (string) $objectID;. ",
    "RAJESHINDIN": "I have config like this that didn't work.\n'mongodb' => [\n   'driver' => 'mongodb',\n   'host' => env('DB_HOST', 'localhost'),\n   'port' => env('DB_PORT', 27017),\n   'username' => env('DB_USERNAME'),\n   'password' => env('DB_PASSWORD'),\n   'database' => env('DB_DATABASE'),\n   'options' => [\n        'database' =>  env('DB_DATABASE') // sets the authentication database required by mongo 3\n    ]\n],\nAfter changing it like this\n'mongodb' => [\n   'driver' => 'mongodb',\n   'host' => env('DB_HOST', 'localhost'),\n   'port' => env('DB_PORT', 27017),\n   'database' => env('DB_DATABASE'),\n   'username' => env('DB_USERNAME'),\n   'password' => env('DB_PASSWORD'),\n   'options' => [\n        'database' =>  env('DB_DATABASE') // sets the authentication database required by mongo 3\n    ]\n],\nIt worked. ",
    "changha8888": "i have same issue. But in app/Console/Commands. I can't query to database when set pasword in config/database: 'mongodb' => [\n            'driver'   => 'mongodb',\n            'host'     => env('DB_HOST', 'localhost'),\n            'port'     => env('DB_PORT', 27017),\n            'database' => env('DB_DATABASE','crm_manage'),\n            'username' => env('DB_USERNAME','admin'),\n            'password' => env('DB_PASSWORD','Vmo__2017##'),\n            'options'  => [\n                'database' => 'admin' // sets the authentication database required by mongo 3\n            ]\n        ],\nWhen i run command, In Aggregate.php line 219:\nAuthentication failed.\nHelp me!. @uriel2707 I trying follow you. But still not run. :(. @uriel2707  I use php 7.2.0.  mongodb\": \"^3.2\". Laravel 5.4. \nmy .env: PP_NAME=IncallSystem\nAPP_ENV=local\nAPP_KEY=base64:qR7DYILfoRz0mgUWUGOEcnR9dSmScrtmfXClrEiunhE=\nAPP_DEBUG=true\nAPP_LOG_LEVEL=debug\nAPP_URL=http://localhost\nDB_CONNECTION=mongodb\nDB_HOST=127.0.0.1\nDB_PORT=27017\nBROADCAST_DRIVER=log\nCACHE_DRIVER=file\nSESSION_DRIVER=file\nQUEUE_DRIVER=sync\nREDIS_HOST=127.0.0.1\nREDIS_PASSWORD=null\nREDIS_PORT=6379\nMAIL_DRIVER=smtp\nMAIL_HOST=smtp.mailtrap.io\nMAIL_PORT=2525\nMAIL_USERNAME=null\nMAIL_PASSWORD=null\nMAIL_ENCRYPTION=null\nPUSHER_APP_ID=\nPUSHER_APP_KEY=\nPUSHER_APP_SECRET=\nIf i run project in local, everything's fine. When i deploy to server that use username, password. \nI try debug in app/Console/Commands : \n$test = ScheduleSms::count();\nprint_r($test);die;\nIn local will return true, In serve ( has username, password ) return Authentication failed. \n. ",
    "tehsinkhan12": "hi @jenssegers  i have faced issued plz solve my issue i configure my database like that\n'mongodb' => [\n           'driver'   => 'mongodb',\n    'host'     => env('DB_HOST', 'localhost'),\n    'port'     => env('DB_PORT', 27017),\n    'database' => env('DB_DATABASE','rfg'),\n    'username' => env('DB_USERNAME', 'root'),\n    'password' => env('DB_PASSWORD', 'password'),\n    'options'  => [\n        'database' => 'admin' // sets the authentication database required by mongo 3\n    ]\n],\nand env file are that\nDB_CONNECTION=mongodb\nDB_HOST=mongodb\nDB_PORT=27017\nDB_DATABASE=rfg\nDB_USERNAME=root\nDB_PASSWORD=password\nbut if i try to register the user and store data in mongodb but i show thats error how i can solve that issue plz help me\n[2018-02-14 07:46:19] local.ERROR: Authentication failed. {\"exception\":\"[object] (MongoDB\\Driver\\Exception\\AuthenticationException(code: 11): Authentication failed. at /srv/laravel/vendor/mongodb/mongodb/src/Operation/InsertOne.php:106)\n[stacktrace]. @jenssegers @cjmling plz some1 help me i succesfully register user in my mongodb but if i want to login user it cannot be login show me error\n{\"message\":\"Type error: Argument 1 passed to Tymon\\JWTAuth\\JWT::fromUser() must be an instance of Tymon\\JWTAuth\\Contracts\\JWTSubject, instance of App\\User given, called in \\/srv\\/laravel\\/vendor\\/tymon\\/jwt-auth\\/src\\/JWTAuth.php on line 54\",\"status_code\":500}\nmy login code are here\nnamespace App\\Http\\Controllers;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Requests;\nuse App\\Http\\Controllers\\Controller;\nuse JWTAuth;\nuse App\\User;\nuse JWTAuthException;\nuse DB;\nclass UserController extends Controller\n{\n           private $user;\n    public function __construct(User $user){\n        $this->user = $user;\n    }\npublic function register(Request $request){\n    $user = $this->user->create([\n      'firstname' => $request->get('firstname'),\n      'lastname' => $request->get('lastname'),\n      'email' => $request->get('email'),\n      'password' => bcrypt($request->get('password'))\n    ]);\n    return response()->json(['status'=>true,'message'=>'User created successfully','data'=>$user]);\n}\n\npublic function login(Request $request){\n    $credentials = $request->only('email', 'password');\n    $token = null;\n    try {\n       if (!$token = JWTAuth::attempt($credentials)) {\n        return response()->json(['invalid_email_or_password'], 422);\n       }\n    } catch (JWTAuthException $e) {\n        return response()->json(['failed_to_create_token'], 500);\n    }\n    return response()->json(compact('token'));\n}\npublic function getAuthUser(Request $request){\n    $user = JWTAuth::toUser($request->token);\n    return response()->json(['result' => $user]);\n}\n\n}\nplz some1 con help what ican do. ",
    "derogithub": "'options' => [\n'authSource' => 'admin',\n]. 'options' => [\n'authSource' => 'admin',\n]. ",
    "sapphiresuwat": "thank you @uriel2707 . ",
    "jswh": "I change the config type to fix this problem.The config may like this\n'mongodb' => [\n        'driver'   => 'mongodb',\n        'dsn'      => 'mongodb://127.0.0.1:27017',\n        'username' => 'username',\n        'password' =>  'passwd',\n        'database' => 'db',\n        'options'  => ['connectTimeoutMS' => 50]\n    ],\n@jaffar-citytwig\n. There are several solutions, I will close this issue.\n. ",
    "acedude": "I can confirm that the solution above works. I'm using the same server with package version 2 in another app, and it works just fine.\n. @jswh I found a better solution. Change:\n'options' => [\n                'db' => 'admin' // sets the authentication database required by mongo 3\n            ]\nto\n'options' => [\n                'database' => 'admin' // sets the authentication database required by mongo 3\n            ]\n. Are you sure it's an issue with the package? Don't you have auth disabled on your server?\n. It would be awesome to merge that fix. Broken password resets are a real trouble for me.. ",
    "karthikbhatcd": "@acedude +1\n. ",
    "willypuzzle": "I have this configuration:\n'mongodb' => [\n            'driver'   => 'mongodb',\n            'host'     => '127.0.0.1',\n            'port'     => '27017',\n            'database' => 'chat',\n            'username' => 'chat',\n            'password' => 'dfferdfvd234',\n            'options' => [\n                'database' => 'admin' // sets the authentication database required by mongo 3\n            ]\n        ],\nIt gives me 'auth failed' error. \nIf I comment out username and password fields then it works. \nI have the same username and password setted on Moongose with a nodejs server and it connects normally.\nI tried @jswh solution but it doesn't work for me.\nI have Laravel 5.3 and I'm using \"jenssegers/mongodb\": \"^3.1\" updated to today.\n. ",
    "funyug": "Had the same issue today after running composer update. Commenting out username and password worked.\n. ",
    "sharmahemal": "yes , i have same issue occurs with authentication mongodb username and password \nerror: \"127.0.0.1:27017: not authorized for query on telesanteclik.users\"\nin No SQL manager working fine and connect well. yes i have resolved that issue,\ndo like below example,\n\nuse admin\ndb.createUser(\n  {\n    user: \"admin\",\n    pwd: \"password\",\n    roles: [ { role: \"root\", db: \"admin\" } ]\n  }\n);\n\ndb.createUser(\n  {\n    user: \"user\",\n    pwd: \"password\",\n    roles: [ { role: \"redwriteDb\", db: \"your-db\" } ]\n  }\n);\nand i have resolved that issue\n. ",
    "philicious": "I openend a request at Ubuntu Launchpad to get the new php-mongodb driver also for trusty-universe (Ubuntu14). Its available in xenial but built against PHP7 API. https://bugs.launchpad.net/ubuntu/+source/php-mongodb/+bug/1579815\n. ",
    "exocuted": "First of all, thanks for the help, much appreciated.\nFor anyone figuring out, I solved this by uninstalling the repo version of the PHP extension and then installing via PECL, just like this:\nsudo pecl install mongo\nDon't forget to add it to your php.ini file.\nThanks again for the help and have a good day!\n. ",
    "raselcse10": "sudo pecl install mongo already deprecated. \nYou can use sudo pecl install mongodb\n. ",
    "xindykatalina": "Hello,\nsudo pecl install mongodb and install extension = mongodb.so extension and generates an error\n/opt/lampp/bin/httpd: relocation error: /opt/lampp/lib/php/extensions/no-debug-non-zts-20121212/mongodb.so: symbol SSL_library_init, version OPENSSL_1.0.0 not defined in file libssl.so.1.0.0 with link time reference\nI appreciate your help.\n. ",
    "vhoyer": "I'm with the same problem @xindykatalina, did you managed to work this out? \n. ",
    "JaMilZ": "I'm going to close this, @gieroj's reply here saved the day.  Sorry to bug you!\nhttps://github.com/jenssegers/laravel-mongodb/issues/702\n. ",
    "SerjioH": "Almost the same issue. I'd like to know how to store dates to mongodb. When it comes to create default \"created_at\" and \"updated_at\" mongodb sets 1970 year.\n. ",
    "sarpdoruk": "@jenssegers I'm having the same problem.\nLaravel 5.3\n\"jenssegers/mongodb\": \"^3.0\"\nMongoDB version: 3.4. ",
    "munotsagar": "Facing same issue, I am using Laravel  5.2 with mongodb 3.2,\nI have observed that it was working fine initially but now showing wrong date in db.\nPlease let me know if any buddy have solution for this.  . Added php_mongo.dll in php/ext folder, but still facing same issue,\nCould you please explain in detail steps ?\n. \n. Facing this issue could you please tell me what would be the solution.\n. Yes added \"extension=php_mongo.dll\" in php.ini file.\n. \n. ",
    "Lemondragon": "It seems to work when I override the freshTimestamp() method on the model.\n```\n    /*\n     * @inheritdoc\n     /\n    public function freshTimestamp()\n    {\n        return new UTCDateTime(Carbon::now()->timestamp);\n    }\n```\nSeems like there was a *1000 on the timestamp originally, which seems to result in a wrong date (Somewhere in 1920 in my case).. ",
    "spartangian": "Thanks @Lemondragon , but in my case, I did the same with you but the difference is I didn't use Carbon. Mine is mongo 3.2.4 on Laravel 5.4\n/**\n     * @inheritdoc\n     */\n    public function freshTimestamp()\n    {\n        return new UTCDateTime();\n    }. ",
    "abdulhanananwari": "in youre model \nprotected $guarded =['created_at','updated_at];. ",
    "KeNJiKunG": "I think its may cause by integer overflow bug. \nWhen save the data using new \\MongoDB\\BSON\\UTCDateTime( round(microtime(true) * 1000));, it save value correctly.\nI am running on 32bit version of PHP.. ",
    "joelcuevas": "@Vagabondtq, did you manage to do this with MongoDB?\n. ",
    "SlyRock": "+1. ",
    "dhoffmannbgp": "+1. ",
    "keanass": "+1. why Some checks were not successful  ? please we need this feature asap can you check it +1. ",
    "mohammad-mazraeshahi": "+1. ",
    "lsmoro": "Hi @RANetwork. I'm facing the same issue you reported some months ago. Do you remember how did you fix it?\nThanks, Lorena.. ",
    "davidlares": "I'm facing the same problem, the .env file is perfectly configured and already clear the artisan cache and forcing provision (\u2014provision) flag the Homestead Box. \nThere's other workaround or troubleshoot to fix it?\nUPDATE: I figured out that I was having problems with the FormRequests parameters, especifically the unique attribute. Consider it solved. ",
    "codeitlikemiley": "still no fixed for this?. ",
    "salamex": "@wayne5w i got the same issue with Laravel 5.5. and mongo 3.4.\nadd this code on your \"down\" method:\nSchema::connection(\"mongodb\")->dropIfExists('establishments');. @jpldev  have u changed the down method at ur migration, making the Schema use mongodb connection?. ",
    "EvanRR": "That happen to me, Does anyone know the solution? and the version?\nThe version i use is 3.0.2\n. ",
    "DFurnes": "I was seeing this problem on Laravel 5.2 after upgrading to laravel-mongodb 3.0.2 as well. I had the $incrementing field set to false on the model I was saving, and removing that field (so it returned to the default true value) seemed to fix the issue.\n. @jenssegers Would you mind reviewing this when you have a chance? Thanks!. Yep, removing that hack now that this is fixed in Laravel makes sense to me! \ud83d\udc4d. ",
    "sebastianvirlan": "Any solution to this problem? Is there any trick to get data from mongodb server-side on datatable (https://github.com/yajra/laravel-datatables)?\n. ",
    "swilla": "I'm having the same issue, has anyone made any progress on this? \n. ",
    "marlborock": "``` php\n<?php\nnamespace App;\nuse Closure;\nuse Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany;\nuse Illuminate\\Database\\Eloquent\\Relations\\HasOne;\nuse Illuminate\\Database\\Query\\Builder;\nuse Illuminate\\Support\\Str;\nuse Yajra\\Datatables\\Helper;\nuse Yajra\\Datatables\\Request;\nuse Yajra\\Datatables\\Engines\\QueryBuilderEngine;\nclass MongoQueryBuilderEngine extends QueryBuilderEngine\n{\n    public function __construct($model, Request $request)\n    {\n        parent::__construct($model->getQuery(), $request);\n        $this->query      = $model;\n        $this->query_type = 'eloquent';\n    }\n    public function count()\n    {\n        $myQuery = clone $this->query;\n        return $myQuery->count();\n    }\n    public function paging()\n    {\n        $this->query->skip((int)$this->request['start'])\n                    ->take((int) $this->request['length'] > 0 ? (int)$this->request['length'] : 10);\n    }\n}\n```\nuse it with your query\nphp\nnew MongoQueryBuilderEngine($query, YRRequest::capture())\n...... ->make(true);\n. ",
    "fathur": "hai @marlborock can you explain where is YRRequest come from?\n. Oh, So you mean YRRequest is \\Yajra\\Datatables\\Request. Ok got it.\nWork perfectly...\nHere how I use @marlborock script in my Moloquent Model:\n``` php\n$query = Permission::select('*');\n$datatables = new MongoQueryBuilderEngine($query, \\Yajra\\Datatables\\Request::capture());\nreturn $datatables->make(true);\n```\n. why @jenssegers not resolve this issue?. ",
    "drsaluml": "Fixed QuerySearch\nprotected function compileQuerySearch($query, $column, $keyword, $relation = 'or')\n    { \n        $query->orWhere(''.$column.'','like','%'.$keyword.'%');\n    }. ```\n$query = Permission::select('*');\n$datatables = new MongoQueryBuilderEngine($query, \\Yajra\\Datatables\\Request::capture());\nreturn $datatables->make(true);\n```\n\\Yajra\\Datatables\\Request::capture()\nhttps://github.com/yajra/laravel-datatables cannot support version 7.5 +\n. Fixed support sort order by desc | asc\n$this->query->orderBy($column, $orderable['direction']);. ",
    "guto88aug": "Hi,\nI'm with problems in grid @fathur . When i tried create a grid, return this error:\n(1/1) FatalThrowableError\nCall to undefined method Yajra\\Datatables\\Request::capture()\nDo you can i help?. ",
    "dschreck": "Seems related to https://github.com/jenssegers/laravel-mongodb/pull/751\n. ",
    "Denys-Bushulyak": "Have the same problem but on Ubuntu (Homestead). At searching...\n. composer require jenssegers/mongodb --ignore-platform-reqs \nIt solved my problem.\n. Or another thing - pecl installing mongodb.so (if we talking about *nix OSes) but putting to mongo.ini:\nextension=mongo.so\nbut have to\nextension=mongodb.so\nIf you fix this string at:\n/etc/php5/mods-available/mongo.ini\nall have to be ok.\nPlease, ping me if it fix.\n. Thank you all: @Siphion01 and @supaheckafresh. It's pleasure for me to be helpful.\n. @Criscros, try to look:\n1. php -m to see than extenstsion is installed\n2. php -i | grep mongo will show you where mongodb ini file located\n3. change extension=mongo.so if exists to extension=mongodb.so\n. Sorry, I said wrong way. it 's your host spec. We need MAMP.\n. Sorry, it was mistake. When I put 'db' key instead 'database' key it became workable. But it's because it became to use default 'admin' database.\n. ",
    "Almas-Khan": "I've been banging my head all day and night today over this issue, thank you for the fix @Denys-Bushulyak!\n. ",
    "supaheckafresh": "@Denys-Bushulyak. Thank you, I did try your solution in a test project & it appears to work on Windows! As far as what I was working on before, I ended up installing the mongodb-php driver and jenssegers/mongodb inside of my vagrant machine & this worked great for my earlier project. Getting things set up inside of the vagrant box should have been more obvious to me before, but I'm quite new to Laravel.\n. ",
    "alex-moreno": "@Denys-Bushulyak thanks, I was going through the xhgui install and having issues with mongo deps. That save my day.\n. ",
    "Criscros": "@Denys-Bushulyak  I'm running into MAMP but composer update  no work and show the same error ....  any help me please \n.  i can see where is ini file @Denys-Bushulyak \n\n. thx \n. ",
    "thegregthomp": "I just needed to install the php driver for mongo\nbrew install php56-mongodb\n. ",
    "stea4lth": "This worked for me...\nsudo pecl install mongodb\nsudo nano /etc/php5/mods-available/mongodb.ini  insert in file extension=mongodb.so\nsudo ln -sv /etc/php5/mods-available/mongodb.ini  /etc/php5/apache2/conf.d/20-mongodb.ini\nsudo ln -sv /etc/php5/mods-available/mongodb.ini  /etc/php5/cli/conf.d/20-mongodb.ini\nsudo service apache2 restart\ncomposer require jenssegers/mongodb. ",
    "Plutus038": "Hi,\n     ln: failed to create symbolic link \u2018/etc/php5/cli/conf.d/20-mongodb.ini\u2019: File exists\n     I can't able to create symbolic link. ",
    "miljanbrakocevic": "@Denys-Bushulyak  Thank you :). ",
    "chathurangat": "@Denys-Bushulyak  Thank you very much! it worked fine!. ",
    "sayan0020": "I'm using php 5.6, so it helped me \nsudo apt-get install -y php-pear php5.6-dev\nsudo pecl install mongo\nsudo sh -c \"echo 'extension=mongo.so' > /etc/php/5.6/mods-available/mongo.ini\"\nsudo ln -s /etc/php/5.6/mods-available/mongo.ini /etc/php/5.6/apache2/conf.d/mongo.ini\nsudo service apache2 restart. i've, but it didn't solve my problem. ",
    "jagadeshanh": "I executed following commands in order (ubuntu 16.04) (php 7.2)\nsudo apt-get install php-mongodb\ncomposer require mongodb/mongodb\ncomposer require jenssegers/mongodb. ",
    "lexoyo": "what I did in fedora was sudo dnf install php-mongodb. ",
    "mjniuz": "Make sure mongodb version/type is correct\nI use this\nsudo yum install -y openssl-devel\nsudo yum install pecl\nsudo yum install gcc\nsudo pecl install mongodb. ",
    "pcarrascom": "Hi, every idea will be tested here...\nI tried with \"composer require jenssegers/mongodb --ignore-platform-reqs\" and get this:\n\nIlluminate\\Foundation\\ComposerScripts::postAutoloadDump\n@php artisan package:discover\nPHP Fatal error:  Uncaught Error: Call to a member function connection() on null in C:\\Users\\Proyectae01\\Documents\\GitHub\\app\\vendor\\laravel\\framework\\src\\Illuminate\\Database\\Eloquent\\Model.php:1239\nStack trace:\n\n0 C:\\Users\\Proyectae01\\Documents\\GitHub\\app\\vendor\\laravel\\framework\\src\\Illuminate\\Database\\Eloquent\\Model.php(1205): Illuminate\\Database\\Eloquent\\Model::resolveConnection('mysql')\n1 C:\\Users\\Proyectae01\\Documents\\GitHub\\app\\vendor\\laravel\\framework\\src\\Illuminate\\Database\\Eloquent\\Model.php(1035): Illuminate\\Database\\Eloquent\\Model->getConnection()\n2 C:\\Users\\Proyectae01\\Documents\\GitHub\\app\\vendor\\laravel\\framework\\src\\Illuminate\\Database\\Eloquent\\Model.php(952): Illuminate\\Database\\Eloquent\\Model->newBaseQueryBuilder()\n3 C:\\Users\\Proyectae01\\Documents\\GitHub\\app\\vendor\\laravel\\framework\\src\\Illuminate\\Database\\Eloquent\\Model.php(630): Illuminate\\Database\\Eloquent\\Model->newModelQuery()\n4 C:\\Users\\Proyectae01\\Documents\\GitHub\\app\\vendor\\laravel-admin-ext\\reporter\\src\\Reporter.php(117): Illuminate\\Database\\Eloqu in C:\\Users\\Proyectae01\\Documents\\GitHub\\app\\vendor\\laravel\\framework\\src\\Illuminate\\Database\\Eloquent\\Model.php on line 1239\nPHP Fatal error:  Uncaught Error: Call to a member function connection() on null in C:\\Users\\Proyectae01\\Documents\\GitHub\\app\\vendor\\laravel\\framework\\src\\Illuminate\\Database\\Eloquent\\Model.php:1239\nStack trace:\n0 C:\\Users\\Proyectae01\\Documents\\GitHub\\app\\vendor\\laravel\\framework\\src\\Illuminate\\Database\\Eloquent\\Model.php(1205): Illuminate\\Database\\Eloquent\\Model::resolveConnection('mysql')\n1 C:\\Users\\Proyectae01\\Documents\\GitHub\\app\\vendor\\laravel\\framework\\src\\Illuminate\\Database\\Eloquent\\Model.php(1035): Illuminate\\Database\\Eloquent\\Model->getConnection()\n2 C:\\Users\\Proyectae01\\Documents\\GitHub\\app\\vendor\\laravel\\framework\\src\\Illuminate\\Database\\Eloquent\\Model.php(952): Illuminate\\Database\\Eloquent\\Model->newBaseQueryBuilder()\n3 C:\\Users\\Proyectae01\\Documents\\GitHub\\app\\vendor\\laravel\\framework\\src\\Illuminate\\Database\\Eloquent\\Model.php(630): Illuminate\\Database\\Eloquent\\Model->newModelQuery()\n4 C:\\Users\\Proyectae01\\Documents\\GitHub\\app\\vendor\\laravel-admin-ext\\reporter\\src\\Reporter.php(117): Illuminate\\Database\\Eloqu in C:\\Users\\Proyectae01\\Documents\\GitHub\\app\\vendor\\laravel\\framework\\src\\Illuminate\\Database\\Eloquent\\Model.php on line 1239\nScript @php artisan package:discover handling the post-autoload-dump event returned with error code 255. ",
    "hamiozturk": "this is worked for me\nhttps://github.com/jenssegers/laravel-mongodb/issues/797#issuecomment-218980690. ",
    "anhvta": "Hi,\nSorry i resolved it.\nIn fact  we need to register the provider at the top like:\n$app->register('Jenssegers\\Mongodb\\MongodbServiceProvider');\n$app->withEloquent();\n$app->register(App\\Providers\\AppServiceProvider::class);\nthanks\n. ",
    "purocean": "php\n        DB::connection('mongodb')->createCollection('request_logs', [\n            'capped' => true,\n            'size' => 5242880,\n            'max' => 5000\n        ]);. ",
    "kamranahmedse": "Never mind.\n. Thanks. ",
    "MRKiscaden": "I am running into the same problem where the whereHas with a subquery returns no results. See below:\n$query->whereHas('tags', function ($q) use ($tagFilter) {\n            $q->where('name', $tagFilter);\n        });\nI have a \"tags\" table which is a belongsToMany  relationship to another table called \"Comments\". When I try to get  all the \"Comments\" that have the tag with \"name\", I get no results. \nIs this feature broken?\n. ",
    "jffsx": "+1. ",
    "vesper8": "can confirm this.. using whereHas on a mysql model with a hybrid relation to a mongo model causes the queries on the mongo model to be attempted on the mysql model which of course results in an error\nany chance this can be fixed? it's also causing a problem, for the same reason as above, with one of my favourite eloquent libraries \"tucker-eric/eloquentfilter\". Also interested in knowing if this is implemented. having same issue and pulling my hair out! How to use has() with hybrid relations when parent is mongo and children are mysql?. anyone can help please?. @martingg88 I have been using this branch for almost 2 months now and haven't had any problems at all\n@jenssegers I really wish you would merge this one in or at least take a look at it.. a lot of people have been requesting this addition for a very long time now. @benargo just wondering how come you closed your PR? did you find an alternative fix to the problem or was it resolved through another PR?. have you tried\n$query->whereIn('_id', ['59d2f17b32f9eb1f2c0027c0','59d2f16a32f9eb1f2c0027be','59d2f10232f9eb1f2c0027b2']);. what is ->group() ? is that a custom scope? Or a new feature? or do you mean groupBy?. ",
    "powerangelito": "Have you solved this ??\ni have a same problem. ",
    "hamutaro89": "May be you can try\n$query = $query->where('performances.start', 'like', '%2014-08-19%');. ",
    "dymat": "Whoop, just forgot my setup:\n```\n$ php -v\nPHP 7.0.5 (cli) (built: Apr  2 2016 23:10:23) ( NTS )\nCopyright (c) 1997-2016 The PHP Group\nZend Engine v3.0.0, Copyright (c) 1998-2016 Zend Technologies\n$ php artisan -V\nLaravel Framework version 5.2.29\n$ cat composer.json\n[...]\n\"require\": {\n        \"php\": \">=5.5.9\",\n        \"laravel/framework\": \"5.2.*\",\n        \"jenssegers/mongodb\": \"^3.0\"\n    },\n[...]\n```\n. Solved.\nThe problem was that I wrote in my Models\nuse Jenssegers\\Mongodb\\Eloquent\\Model;\nI changed it to\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Eloquent;\nclass Person extends Eloquent\n[...]\n... and it worked.\n. ",
    "gudboisgn": "I have same issue\n. ",
    "HivenKay": "i have the same problem,someone help?\n. ",
    "eane": "I have the same problem.\n. ",
    "IgorDePaula": "I have the same problem and all required extensions enabled.\n. I read this issue #797  and resolved the problem.\n. Try issue #797\n. ",
    "mmuflih": "I have the same problem\n\nI use mongodb v 2.4.9 and this is my phpinfo\n\n. ",
    "BillKeenan": "pretty sure you want double >\necho \"extension=mongodb.so\" >> /etc/php.d/20-mongo.ini. ",
    "jorgeomarmh": "my solution was \nsudo apt-get install php-mongodb. ",
    "xinnah": "now I have the same problem..\nD:\\xampp\\htdocs\\laravel-mongodb>composer update\nLoading composer repositories with package information\nUpdating dependencies (including require-dev)\nYour requirements could not be resolved to an installable set of packages.\nProblem 1\n    - jenssegers/mongodb v3.2.0 requires mongodb/mongodb ^1.0.0 -> satisfiable by mongodb/mongodb[1.1.2, 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.1.0, 1.1.1].\n    - jenssegers/mongodb v3.2.1 requires mongodb/mongodb ^1.0.0 -> satisfiable by mongodb/mongodb[1.1.2, 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.1.0, 1.1.1].\n    - jenssegers/mongodb v3.2.2 requires mongodb/mongodb ^1.0.0 -> satisfiable by mongodb/mongodb[1.1.2, 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.1.0, 1.1.1].\n    - mongodb/mongodb 1.0.5 requires ext-mongodb ^1.1.0 -> the requested PHP extension mongodb is missing from your system.\n    - mongodb/mongodb 1.0.4 requires ext-mongodb ^1.1.0 -> the requested PHP extension mongodb is missing from your system.\n    - mongodb/mongodb 1.0.3 requires ext-mongodb ^1.1.0 -> the requested PHP extension mongodb is missing from your system.\n    - mongodb/mongodb 1.0.2 requires ext-mongodb ^1.1.0 -> the requested PHP extension mongodb is missing from your system.\n    - mongodb/mongodb 1.0.1 requires ext-mongodb ^1.1.0 -> the requested PHP extension mongodb is missing from your system.\n    - mongodb/mongodb 1.0.0 requires ext-mongodb ^1.1.0 -> the requested PHP extension mongodb is missing from your system.\n    - mongodb/mongodb 1.1.2 requires ext-mongodb ^1.2.0 -> the requested PHP extension mongodb is missing from your system.\n    - mongodb/mongodb 1.1.1 requires ext-mongodb ^1.2.0 -> the requested PHP extension mongodb is missing from your system.\n    - mongodb/mongodb 1.1.0 requires ext-mongodb ^1.2.0 -> the requested PHP extension mongodb is missing from your system.\n    - mongodb/mongodb 1.1.2 requires ext-mongodb ^1.2.0 -> the requested PHP extension mongodb is missing from your system.\n    - Installation request for jenssegers/mongodb ^3.2 -> satisfiable by jenssegers/mongodb[v3.2.0, v3.2.1, v3.2.2].\nTo enable extensions, verify that they are enabled in your .ini files:\n    - D:\\xampp\\php\\php.ini\n  You can also run php --ini inside terminal to see which files are used by PHP in CLI mode.\n. i solve this problem..\nwhen your local server is 32 bit install and you mongodb driver setup 64bit.\nthen create a problem.\nphp_mongodb.zip\nfirstly you download this file and unzip this.\nand paste xampp\\php\\ext\\\nsecondly change your php.ini file.\nextension=php_mongodb.dll paste this code .\nand check phpinfo();\n\nlets enjoy.\n. ",
    "ouahibAbdou": "\nI install the drivers and I add the extention but it's not work\n. ",
    "yespbs": "yes, I am just doing the same but for some time now, with each deploy, forge breaks it :(\nI am using 3.0.0-beta since that works with php-7 and mongo 3.2 on our server\n. will do,\nRegards,\nPriyabrata Sarkar\nWeb Development & Solutions Consultant.\n Proprietor, Sologic Solutions\nCompany : [http://www.sologicsolutions.com]\n Portfolio:  [http://www.yespbs.com]\n LinkedIn: [http://in.linkedin.com/in/yespbs\nhttp://in.linkedin.com/in/yespbs]\npriyabrata.sarkar  [Skype]\n yespbs@gmail.com [GTalk & AIM]\n priyabrata@sologicsolutions.com[Company]\nOn Wed, Oct 5, 2016 at 1:07 PM, Jens Segers notifications@github.com\nwrote:\n\nAny chance you could add a unit test for this?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/jenssegers/laravel-mongodb/pull/982#issuecomment-251603662,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAdMVWRpdoMuDa4bLWVCax2TkS1nbHZvks5qw1O1gaJpZM4KOYgL\n.\n. \n",
    "samirgit": "@george-viaud, believe it or not it happened with me 2, although installed mongo using this script \nhttps://github.com/zakhttp/Mongostead7/blob/master/mongoHomestead7.sh that adds the extension, i don't know why it wasn't added though\n. ",
    "dzanfardino": "Has this been solved yet ?. ",
    "smsugumar5": "Did you find solution?. ",
    "OSDDQD": "Can u add this in master please?\n. ",
    "Eke": "+1\n. Tested this one, at this moment works great for me. @RTLer Thanks !\n. ",
    "demotivationme": "@jenssegers Some news? When this one be released? Cause I don't really want to change ObjectID relations to string. I need a fast workaround about this point.\n. ",
    "hotrush": "@jenssegers why not merged? \n. ",
    "sagargulati": "@jenssegers : why GroupBy only returns one entry?\nWhen using ->groupBy('email')->sum('amount') it doesn't work the way we need.. No luck so far!. Any updates?\n. Why was this closed?. How to auto increment _id in mongoDB?. Any update on the fix @jenssegers ?. Is this fixed?\n. Which Link?. @jenssegers : when should we expect MongoDB package update for Laravel 5.5\n+1. Any PR updates on same @jenssegers . @jenssegers  : any update on this?. So what should we expect to happen? . All checks passed! Can you update the repository? So that we can pull the new drivers and the repo? @jenssegers . So this is good to go now @MCMatters \nYes, I saw that but a minor bug may help ascertain for a final PR @ciruvan . @jenssegers , when should we expect you will accept the PR by @MCMatters ? :). Shouldn't someone update README.md as well? :) \nAlso still getting an error of Hybrid Relations. Check https://github.com/jenssegers/laravel-mongodb/pull/1282 @jenssegers?. It's was on belongsToMany. I am using Alpha now and seems it working fine.. ",
    "steven-xian": "I used wrong mongo driver and download new version from https://s3.amazonaws.com/drivers.mongodb.org/php/index.html, It works fine.\n. ",
    "zhanuzakDev": "how to use this package with gridfs, can show an example please. \nunderstand I need to extract the image from the database and display it on the browser, how can I do it can help or show, please. I have here such code, which I extract the image from the database and try to display on the browser but something I do not so can help please\npublic function show(){\n        $test = DB::connection('mongodb4')->getMongoDB()->selectGridFSBucket(['bucketName' => 'files']);\n        $id = new MongoDB\\BSON\\ObjectID('5b8fb2e5f5b4f23184005551');\n        $stream = $test->openDownloadStream($id);\n        while (!feof($stream)) {\n            $photo = fread($stream, 8192);    \n        }\n }   \n        $type = 'png';\n        $img = 'data:image/' . $type . ';base64,' . base64_encode($photo);\n        return (\"<img src='$img'>\");. \nI have a ready mongodb gridfs database, it was used for ruby \u200b\u200bon rails, and now I want to use laravel in the database, the name chunk_size is synchronized in this way, and in php it is used as chunkSize. How do I do this?. \nunderstand I need to extract the image from the database and display it on the browser, how can I do it can help or show, please. Hello everyone. I have a ready database on mongodb gridfs it was used with ruby \u200b\u200bon rails. In gridfs all the pictures are saved. I'm now connected to php laravel and try to extract all the pictures, but it gives me such an error: Chunk not found for index \"0\" Can anyone help me please\nSorry my bad English . ",
    "wcoebergh": "I would also really like to know how this is done. I have tried looking in the docs and the source, but it is nowhere to be mentioned. The operators field also does not include the lookup key. When making a whereRaw request like this:\n$data = $data->whereRaw(array( '$lookup' => array('as':'field','from':'collection','foreignfield':'somefield','localfield':'somefield') ))\nThe query builder throws the following error:\nMongoCursorException in Builder.php line 310:\nlocalhost:27017: Can't canonicalize query: BadValue unknown top level operator: $lookup\nRegards\n. Ok so I experimented some more with raw queries found here: https://github.com/jenssegers/laravel-mongodb/wiki/Complexe-aggragate-call\nI have tried the following things with mixed results:\n```\n// Returns error combined with previous queries ($or/$and/$nor entries need to be full objects)\n// Looks like the eloquent part is being overwritten which is in line with the documentation\n$data = $data->whereRaw([\n    [\n        '$lookup' => [\n            'as'=>'field',\n            'from'=>'collection',\n            'foreignField'=>'somefield',\n            'localField'=>'somefield'\n        ]\n    ]\n]);\n// Returns an object containing all sorts of query parameters\n$data = $data->aggregate([\n    '$lookup' => [\n        'foreignField' => 'ifcguid',\n        'localField' => 'site.ifcguid',\n        'as' => 'site',\n        'from' => 'ifcobjects'\n    ]\n]);\n// This works, partly. The sad part is that it overwrites any previous eloquent query inputs like \n// projection or where clauses. An example of that would be $data = $data->where('ifcguid', $guid); \n// Which in our case is supposed to return but one result. Now the whole database is returned with\n// the lookup aggregation fullfilled\n$results = $data->raw(function($collection)\n{\n    return $collection->aggregate(\n        [\n            '$lookup'    => [\n                'foreignField' => 'ifcguid',\n                'localField' => 'site.ifcguid',\n                'as' => 'site',\n                'from' => 'ifcobjects'\n            ]\n        ]\n    );\n});\n// This does not seem to do anything\n$data = $data->whereRaw(function($collection)\n{\n    return $collection->aggregate(\n        [\n            '$lookup'    => [\n                'foreignField' => 'ifcguid',\n                'localField' => 'site.ifcguid',\n                'as' => 'something',\n                'from' => 'ifcobjects'\n            ]\n        ]\n    );\n});\n```\nAny feedback would be greatly appreciated\n. ",
    "nbyloff": "Did anyone ever get this solved? I am trying myself, and none of the above solutions work completely for me either.\n. Using the same models, I even tried this to ensure the test was running as expected, but the sections collection is still empty and there is no sections property in the database. \nIs no one else experiencing this in L5.5? \n$r = new Revision(['version' => 1]);\n\n$r->save();\n$s = new Section(['name' => 'Section Name']);\n$s->save();\n$r->sections()->save($s);\n$r->sections->add($s);\n$r->save();. OK, I think I see what's happening. First of all, I read that a collection of IDs won't be stored in the `sections` property in `Revision` model. It will just run another query looking for `Section` models with `revision_id == <SOME ID>`.\n\nSo aside from that note, I started stepping through this package, it appears when I save like this:\n$revision->sections()->save($section);\nIt creates a revision_id property on Section model AS A STRING.\nHowever, when I run this code:\nforeach($revision->sections as $section {\n  dd($section);\n}\nIt's trying to find all Section models with a revision_id as an OBJECT ID. I altered this code as a test:\nhttps://github.com/jenssegers/laravel-mongodb/blob/master/src/Jenssegers/Mongodb/Query/Builder.php#L846-L853\nAnd just had it return $id at the beginning of the code. My test worked and it started returning $section models. \nSo where is the breakdown here? Should this package be storing an ObjectId as the foreign key on the Section model, or does the problem lie elsewhere?\nI have changed my relationship to look like this, and it works now. But I don't see this referenced anywhere in docs, so I know it's wrong (it will work for now)\npublic function sections()\n  {\n    return $this->hasMany(Section::class, 'revision_id', '_id->oid');\n  }\nEDIT Kind of works. Querying now works, but saving...the foreign key is null.. For whatever reason, even though composer.json had \"jenssegers/mongodb\": \"^3.3\" it pulled a very old version. I changed my composer to this \"jenssegers/mongodb\": \">=3.3\", deleted the old package and ran the update. \nIt all works now. That was frustrating. haha.. I created a migration that adjusted the action_events table to allow for strings to be stored (MongoId). I just was about to do an update successfully to an existing model. \nI am having issues opening a create form for models that have relationships, but haven't dug into why yet. (Using Laravel Spark, I cannot open create team form because of a uriKey() error about the team owner)\nSchema::table('action_events', function (Blueprint $table) {\n       $table->string('actionable_id')->change();\n    $table->string('target_id')->change();\n    $table->string('model_id')->change();\n        });\n. ",
    "cherbert": "This still is not working. At least not using the latest jenssegers mongodb with Laravel 5.3 and PHP 7.0. Switching to the PHP driver and my $lookup query works. jenssegers however, using Model::raw:(function($collection) { return $collection->aggregate( etc.... returns no results.. You need to update composer to install \"jenssegers/mongodb\": ^\"3.1\" which is the dev branch compatible with Laravel 5.3\n. My config is configured as per the instructions.\n'connections' => [\n    'database' => [\n        'driver' => 'mongodb',\n        'table'  => 'jobs',\n        'queue'  => 'default',\n        'expire' => 60,\n    ],\n. Is there no update on this?\n. Come on! I need this!!. ",
    "nkumarjain": "Its still not resolved. It is good feature of mongodb. ",
    "anggarasaja": "@pfzwaan it works, thanks.. ",
    "altaraven": "Yes, $lookup feature needed to be able to use it with $match, $sort etc.. Hello @mfauveau. Yes, I saw your PR. I just hope that package author will accept it or write his own. I also didn't get why you used Binary and not simple string. ",
    "lucasprogamer": "how to resolve?. ",
    "iRbouh": "Take a look at this gist : https://gist.github.com/iRbouh/d244ff8ad05dbbce417a0b664d2d89a4\n. ",
    "Gtskk": "See #851 \nI have created a pull request.\n. @RTLer  And a better solution?\n. ",
    "teseo": "any update on this?. ",
    "harrysbaraini": "+1. What you want is HasMany instead of EmbedsMany. HasMany will store only users' ids, then when you call $comittees->members you will get the info you need.. Hi!\nIMO, you described another situation now. Let's see both.\nFirst question\nYou don't need a Member model to act as a pivot, in your Committee model you just have to do:\n```\nclass Committee extends Mode\n{\n    ...\npublic function members(): HasMany\n  {\n    return $this->hasMany(User::class);\n  }\n}\n```\nThe library will automatically add a members_ids in the committee document on MongoDB.\n\n Second question (posted in your reply)\nI would not save comments as embeds. At any given moment your post may have so many comments that you'll have a headache.\nI would have a collection specific for comments, then use a HasMany relation on posts. The Comment model has a belongsTo relation to Users.\n```\nclass User extends Model\n{\n    protected $fillable = [\n        'name',\n        'email',\n    ];\npublic function comments(): HasMany\n{\n    return $this->hasMany(Comment::class);\n}\n\npublic function posts(): HasMany\n{\n    return $this->hasMany(Post::class);\n}\n\n}\n\nclass Comment extends Model\n{\n    protected $fillable = [\n        'content',\n    ];\npublic function user(): BelongsTo\n{\n    return $this->belongsTo(User::class);\n}\n\npublic function post(): BelongsTo\n{\n    return $this->belongsTo(Post::class);\n}\n\n}\n\nclass Post extends Model\n{\n    protected $fillable = [\n        'title',\n        'content',\n        'tags',\n    ];\npublic function author(): BelongsTo\n{\n    return $this->belongsTo(User::class);\n}\n\npublic function comments(): HasMany\n{\n    return $this->hasMany(Comment::class);\n}\n\n}\n```\nLet me know if it's not what you're trying to solve.\n  . Migrations are not really needed when you work with Mongodb. I see usage for them only when you need to set indexes and stuff like that.\nDid you create an user and checked on your Mongo database if the password is present there? When you consume an User's data (e.g. $user->toArray()), you don't see password because it is included in hidden property of your User model.\nAnd another tip:\nYou can replace DB::collection('users')-> with static:: or self::. For example:\nphp\npublic static function usersdelete($params)\n{\n    return static::where('_id', $params['_id'])->delete();\n}\nAnyway, I would rather move this kind of code to an external class, like a Repository or Service. If you want to separate Business logic from Persistance layer, move it out to a service/repository class. Otherwise, yuo could just do User::findOrFail($id)->delete().\n. ",
    "hlogeon": "After I try to figure out what's going on, I found that I can apply exactly THIS code if I don't use any other where clauses and final query doesn't use $and operator. Any ideas why it can happen? Is it MongoDB issue or PHP driver may be?\n. So just use whereRaw() if clash same problem\n. ",
    "sebestenyb": "https://github.com/laravel/framework/commit/e84b2acd4b004fb6b870ed27d35b6436d9b17338\n. ",
    "coolsam726": "Why was the issue closed?. Any update on this @jenssegers ?. ",
    "Acen": "The same happens with latest()->paginate(5)\nOrder spoofs end results from the pagination.\nhttps://github.com/jenssegers/laravel-mongodb/issues/437 still an issue. ",
    "prashant8490": "Paginate with orderBy having same issue.\nMissing some records and some are duplicated.. Yes, got same issue \"Illegal offset type\".. ",
    "puzc1993": "use Illuminate\\Pagination\\Paginator;\nuse Illuminate\\Pagination\\LengthAwarePaginator;\n//......\n$perPage = 15;\n$currentPage = $request->input('page', 1);\n$offset = ($currentPage - 1) * $perPage;\n$total = Member::where('status','A')->count();\n$result = Member::where('status','A')->orderBy('code','desc')->offset($offset)->limit($perPage)->get();\n$members = new LengthAwarePaginator($result,$total,$perPage,$currentPage,[\n'path' => Paginator::resolveCurrentPath(),\n'pageName' => 'page']);. @msankar1991 \nhttps://laravel.com/docs/5.4/pagination#displaying-pagination-results. ",
    "yiannisdesp": "@puzc1993 thanks!. ",
    "ducthang310": "@puzc1993 Thanks!. ",
    "tannd": "@puzc1993 thank you so much. ",
    "Oyelaking": "How do you delete only the index added in the up method, instead of dropping the whole collection?\n. ",
    "wwwroth": "D'oh. Forgot to install the base mongodb library before installing jensseger's ontop.\ncomposer require \"mongodb/mongodb=^1.0.0\"\ncomposer require jenssegers/mongodb\n. ",
    "dyldak": "Wow thanks !\n. ",
    "TheeAndre": "@infernobass7 Do you have sample code from what you mean. Running into the same error. I have a clean install of Laravel 5.2 out of box and have managed to get MongoDB Drivers working but when i add MySQL queries i get this error:\nFatalThrowableError in Builder.php line 1514:\nCall to a member function compileSelect() on null\n@CammoKing I tried your solution but still have the same error coming up. Any other ideas?\n. @CammoKing Thank you so much for this. Will test this out and let you know how it goes. \n. ",
    "c0h1b4": "As I stated on an other issue report, I am stuck at the same PasswordBroker bug.\nJust need to fix the \n'Jenssegers\\Mongodb\\Auth\\MongoDBAuthServiceProvider', \nto\n'Jenssegers\\Mongodb\\Auth\\AuthServiceProvider',\nin the docs\n. I am still getting the \nErrorException in GenericUser.php line 46:\nUndefined index: id\nerror... getting my hairs pulled off and I really can't make the login to work.\nThanks for any help.\nAlso, I think the file MongoDBAuthServiceProvider does not exist in the Jenssegers\\Mongodb\\Auth\\ directory...\n. I finally fixed that using the CammoKing pull. I had to fix some issues with the MongoDBAuthServiceProvider file that was renamed to AuthServiceProvider. And after using the following auth provider:\n        'users' => [\n            'driver' => 'mongodb',\n            'model' =>  Jenssegers\\Mongodb\\Auth\\UserModel::class,\n            'table' => 'users',\n        ]\nThe register works, login and logout works. Now I'm having issues with the reset password.\nUnexpectedValueException in PasswordBroker.php line 238:\nUser must implement CanResetPassword interface.\nGod damn! it is harder than I thought....\n. php artisan cache:clear. Ok, I found the issue.\nOn Laravel 5.4 the date cast now converts the date to a Carbon object. \nIf you would like to preserve the time portion of the date, you should use the datetime cast.\nAt the Mongodb\\Eloquent\\Model in method \"fromDateTime\", on line 155 there is a request to the parent class to convert the date object and it is expecting a date class, but now Laravel is sending a Carbon class.\nI believe that the casting should be done by the method itself and not rely on the partent class anymore.\nI will try to fix it manually and submit a proposal fix there.\nThanks for your help.. ",
    "javeedrahman": "How to change the datatype from string to int in mongodb,\nSchema::collection('user, function ($collection) \n{\n                  // $collection->Int32('size')->change();\n                   $collection->index('size', 'Int32');\n});\n@benargo can you please help me. ",
    "skaka3499": "@sakalauskas @jenssegers  i have more than 70 thousand record if i am using above query it take more than 5min and finally my server will crash. I don't know how to handle this condition or which type of query i have to use to get instant record. Please help me I am totally stuck.\n. ",
    "EdelBlau": "It was solved by installing again the dependencies so I guess that was the problem. Thanks.\n. I want to use text search and that's the only way I have found. \n. ",
    "rainyson": "+1\n@jenssegers . ",
    "joerecra": "@cherbert, how did you do to work with $ positional operator ? when I use it, I get this: \"The positional operator did not find the match needed from the query. Unexpanded update: results.$.test\"\nQuery:\nDB::collection('joboffer_results')->raw(function($collection)\n      {\n          return $collection->updateMany([],['$set'=> ['results.$.test'=>'Joel Recra2']], ['multi'=>'true']);\n      });. Hey @dasjet How did you do to work with \"$\" operator??\nI'm using this query: \nJobOfferResults::raw()->findOneAndUpdate(\n            ['_id' => new \\MongoDB\\BSON\\ObjectID (\"5b7ebde0de1941044a16242d\")],\n            ['$set'=> [\"results.$.test\"=>\"Joel Recra\"]]\n        );\nAnd I got: \"message\": \"The positional operator did not find the match needed from the query. Unexpanded update: results.$.test\",\nI'm using MongoDB 3.6.3. Hey @mikekamornikov, I made all you wrote, but doesn't work.\nI'm getting this error: DateTime::__construct(): Failed to parse time string (1539211570000) at position 11 (0): Unexpected character\nHelp me please!. Raw expression with Eloquent generates conflics, I wrote an issue #1640 . When I use a eloquent raw expression and I make toArray() delete some columns because in dates variable exists a column that is inside result, but if I remove value con array, it works \"well\". . Well, first I think you need to use Builder or query raw, no eloquent, because it's lower than query builder or query raw. Then use chunk to work well with memory.. ",
    "tranghaviet": "Why Jenssegers just close issues like this without any answer? I think this repository no longer maintained. I found the solution by dig into source code. Query builder use $set operator by default. Here is the solution:\n$this->query->where('_id', '=', $id)\n            ->where('locales.language', $language)\n            ->update(['locales.$' => $request->all()]);\nThe model have locales is an Array.\nhttps://github.com/jenssegers/laravel-mongodb/blob/1d2807b49742d6529c81592fbc969a220cb7a366/src/Jenssegers/Mongodb/Query/Builder.php#L582. Schema::table('provinces', function (Blueprint $table) {\n        $table->index(['name' => 'text'], 'name_full_text');\n});. ",
    "elfeffe": "I have changed name 'database' to 'mongodb', because we already have a 'database' connection.\nAnd then QUEUE_DRIVER=mongodb\nIt creates the jobs, but I still can't make them run.\n. You have installed mongo driver, and you need to install mongodb driver.\nThey are different, and I broke my head until I resolved the same problem\n. First to uninstall mongo extension. If you remove it from php.ini is ok, but restart PHP after it.\nThen do:\nsudo apt-get update\nAnd follow this http://mongodb.github.io/mongo-php-driver/\nThat is the PHP extension and this is the MongoDB library\nhttps://github.com/mongodb/mongo-php-library\nYou will need to add the library to the project using composer too\ncomposer require \"mongodb/mongodb=^1.0.0\"\n. Sure, sorry\n. @Barryt06 I have more experience now with Laravel.\nMongoDB works great, but you should use it only for your models. 99.99% of the available package will not work with MongoDB.\nSo I use MySql as default DB, and Mongo with my models.\nI hope Laravel support officially Mongo some day, probably in 4.0 as they included transactions.. Sorry, My mistake\n$user [\"_id\"] is the solution for id and $user [\"name\"] for name\n. I\u2019m having some problems in some specific cases that I still can exactly discover.\nMy Algolia index is not being updated every time I update a document in Mongo. Here is my issue https://github.com/jenssegers/laravel-mongodb/issues/1316\nI clean my index in Algolia, I clean my collection in Mongo. I add 10000 documents and only 3000 gets indexed in Algolia.\nThen I use ->searchable() to try to add all my documents, and it updates the 10000, not only the new 7000.\nI don\u2019t know if it\u2019s normal or is related to Mongo. Hi @Surt \nI had to extend the update method in Algolia Engine, and first I get actual document in Algolia and compare with mine, and I update in case it's needed.\nThe hard part is to compare a recursive Array.\nYou also have to ignore some fields when you compare.\n_id doesn't exist in Algolia, so if you compare the documents, _id will be a difference.\nAlgolia charges for indexation, not for search. So in Update you first search, then compare, and update if needed.\nThat's how I fixed it. I made a simple solution\nhttps://gist.github.com/elfeffe/54d4125447f0b7d65620a79a0efe165e. I have added this code just below my real class\n```\nclass temp {\n    public function version()\n        {\n            return '5.4';\n        }\n}\nfunction app()\n{\n    return new temp();\n};\n```\nAnd works good. I think it will also work if we use Database 5.3 instead of 5.4\n\n\"illuminate/database\": \"^5.3\",. This is my solution for the issue, I use it and works good.\nhttps://gist.github.com/elfeffe/54d4125447f0b7d65620a79a0efe165e. Silly mistake, it should be\n$product->supplierCost()->save($supplierCost);. I think there is nothing in common between MongoDB ad Couchbase, it will not work. > Laravel Nova is great admin UI tool. It will be good if Mongo DB can be used with Nova.\n\nIt can\u2019t?\nLaravel Nova uses Eloquent, and Eloquent is well supported with this package. Did somebody try if Nova works with Mongo?. ",
    "ItsRD": "Nevermind.. I was so stupid to change my session driver and didn't noticed it was the wrong file... :/\n. ",
    "tuytoosh": "how to install mogodb driver??? @elfeffe \n. ",
    "whenjonny": "how to resolve this\uff1f\n. ",
    "Barryt06": "@elfeffe Did you ever get this working? I am looking to set up the same but I am having issues trying to install this plugin with LESK, where I have been able to install it with a vanilla install of Laravel.. @elfeffe Hi, thanks for getting back to me, I only spotted the reply now. \nI managed to get MongoDB working, and it is great! I have similar setup using mysql for the framework and Mongo just for my own models. \nThanks \nBarry. ",
    "krzystof": "You might want to use \"laravel/framework\": \"^5.1\" in your required packages. Upgrading your app from 5.0 to 5.1 should be quite easy -> upgrade link\nOtherwise you need to get jenssegers/mongodb:^2.1\n. ",
    "Gelembjuk": "Thanks.\nThis helped. With Laravel 5.1 installation was success.\nNow will try to connect to a DB ...\n. ",
    "kevinem": "Wrapping the aggregation in an array should work.\n```\n$statements = $this->db->statements->aggregate([\n        [\n            '$match' => $match\n        ],\n        [\n            '$project' => [\n                'year'  => ['$year' => '$timestamp'],\n                'month' => ['$month' => '$timestamp'],\n                'day'   => ['$dayOfMonth' => '$timestamp'],\n                'actor' => '$statement.actor'\n            ]\n        ],\n        [\n            '$group' => [\n                '_id'    => [\n                    'year'  => '$year',\n                    'month' => '$month',\n                    'day'   => '$day'\n                ],\n                'count'  => ['$sum' => 1],\n                'actors' => ['$addToSet' => '$actor']\n        ]\n    ],\n    [\n        '$sort' => ['_id' => 1]\n    ],\n    [\n        '$project' => [\n            'a' => '$count',\n            'b' => ['$size' => '$actors'],\n            'y' => [\n                '$concat' => [\n                    ['$substr' => ['$_id.year', 0, 4]],\n                    '-',\n                    [\n                        '$cond' => [\n                            ['$lte' => ['$_id.month', 9]],\n                            [\n                                '$concat' => [\n                                    '0',\n                                    ['$substr' => ['$_id.month', 0, 2]],\n                                ]\n                            ],\n                            ['$substr' => ['$_id.month', 0, 2]]\n                        ]\n                    ],\n                    '-',\n                    [\n                        '$cond' => [\n                            ['$lte' => ['$_id.day', 9]],\n                            [\n                                '$concat' => [\n                                    '0',\n                                    ['$substr' => ['$_id.day', 0, 2]],\n                                ]\n                            ],\n                            ['$substr' => ['$_id.day', 0, 2]]\n                        ]\n                    ]\n                ]\n            ],\n        ]\n    ]\n]\n\n);\n```\n. ",
    "manjunath-compassites": "thanks @kevinem, now this working....\n. ",
    "mlanin": "@pi0 Thanks!\n. ",
    "lephleg": "Any solution on this for L4 (which uses 2.x)?\nWhat should I change?. ",
    "iNDicat0r": "DB::connection('mongodb')->getPdo() Returns null because getPdo() returns the mysql PDO instance, and since you are not using mysql and you are using mongodb this method is useless!\n. ",
    "theminer3746": "Oh, I see. thanks\n. ",
    "ricardo": "You could solve that by creating an embedded model breakUps with\nprotected $dates = [ 'expiry' ];\n. @zuljin \nI solved it by using UTCDateTime instead of Carbon dates.\nIt works in subdocuments as well. Like this:\nphp\n'expiry' => new UTCDateTime(strtotime(\"now\") * 1000)\n. ",
    "zuljin": "Same problem here. Its seems that in nested array its doesnt work, just in main level\nprotected $dates = [ 'expiry' ];\nneither something like this\nprotected $dates = [ 'breakUps.expiry' ];\nMaybe a custom function that emulate \"$dates\" when you create/fill the record.\n. ",
    "Tecaa": "Is this still unfixed?\n. ",
    "llioor": "$created_at = Carbon::now()->toDateTimeString();\n$date = new \\MongoDB\\BSON\\UTCDateTime(new \\DateTime($created_at));\nNow you can insert $date to mongo. @c0h1b4 hi... how did u solve it?. ",
    "gp187": "Are you sure you are extending the correct Model ?\nTry this in your TestCollection model\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Moloquent;\n. As a workaround to use mongodb in laravel 5.3 you can use this \nModel\n```\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Moloquent;\nclass AdminUser extends Moloquent\n{\n    protected $connection=\"mongodb\";\n    protected $collection=\"admin_important_users\";\n}\n```\nController\n```\nclass AdminUserController extends Controller\n{\n    public $model;\npublic function __construct(AdminUser $user) {\n    $this->model = $user;\n}\n\n```\n$col = $this->model->getConnection()->table('admin_important_users');\n$col->get();\nThat's how you get collection object. I'll try some fixes but for now this works. \n. Ok @lukepolo . Let's see it done.\nMerge please @jenssegers \n. Here it is\njson\n{\n    \"name\": \"laravel/laravel\",\n    \"description\": \"The Laravel Framework.\",\n    \"keywords\": [\"framework\", \"laravel\"],\n    \"license\": \"MIT\",\n    \"type\": \"project\",\n    \"require\": {\n        \"php\": \">=5.6.4\",\n        \"laravel/framework\": \"5.3.*\",\n        \"jenssegers/mongodb\": \"^3.0\",\n        \"guzzlehttp/guzzle\": \"^6.2\",\n        \"predis/predis\": \"^1.1\",\n        \"symfony/finder\": \"^3.1\",\n        \"symfony/event-dispatcher\": \"2.8.9\",\n        \"rocket-code/shopify\": \"^2.0\"\n    },\n    \"require-dev\": {\n        \"fzaninotto/faker\": \"~1.4\",\n        \"mockery/mockery\": \"0.9.*\",\n        \"phpunit/phpunit\": \"~5.0\",\n        \"symfony/css-selector\": \"3.1.*\",\n        \"symfony/dom-crawler\": \"3.1.*\",\n        \"laravel/homestead\": \"^3.0\",\n        \"squizlabs/php_codesniffer\": \"^2.6\"\n    },\n    \"autoload\": {\n        \"classmap\": [\n            \"database\"\n        ],\n        \"psr-4\": {\n            \"App\\\\\": \"app/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"classmap\": [\n            \"tests/TestCase.php\"\n        ]\n    },\n    \"scripts\": {\n        \"post-root-package-install\": [\n            \"php -r \\\"file_exists('.env') || copy('.env.example', '.env');\\\"\"\n        ],\n        \"post-create-project-cmd\": [\n            \"php artisan key:generate\"\n        ],\n        \"post-install-cmd\": [\n            \"Illuminate\\\\Foundation\\\\ComposerScripts::postInstall\",\n            \"php artisan optimize\"\n        ],\n        \"post-update-cmd\": [\n            \"Illuminate\\\\Foundation\\\\ComposerScripts::postUpdate\",\n            \"php artisan optimize\"\n        ]\n    },\n    \"config\": {\n        \"preferred-install\": \"dist\"\n    }\n}\n. Thanks @pi0 . Works now. I just thought the ^3 would pick up on latest. \n. ",
    "kschethan": "Any update on this? Relations not working for me. Laravel 5.3\nFatalErrorException in Builder.php line 613:\nCall to a member function all() on array\nMySql relations are working fine.\n. I can confirm that the error is not there in version 3.1.0-alpha. You may close this issue.\n. @pi0 \nVersion Code\n\"name\": \"jenssegers/mongodb\",\n \"version\": \"v3.0.2\",\nAlso, here is the code snippet of the User and Store models,\n```\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Jenssegers\\Mongodb\\Eloquent\\HybridRelations;\nclass User extends Model\n{\n   use HybridRelations;\n   protected $connection = 'mysql';\npublic function store()\n    {\n        return $this->hasOne('App\\Models\\Store');\n    }\n...\n\n}\n```\n```\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Moloquent;\nclass Store extends Moloquent\n{\n    protected $connection = 'mongodb';\n    protected $collection = 'stores';\npublic function user(){\n        return $this->belongsTo('App\\Models\\User');\n    }\n}\n```\n. @pi0 not an issue. I was working on other things. Thanks for letting me know. It's working now!\n. ",
    "nitinsurana": "Same error\nCall to a member function all() on array\n. Insight - \nApp\\Video::take(10)\n=> Jenssegers\\Mongodb\\Eloquent\\Builder {#714}\nDB::collection('video')->take(10)\n=> Jenssegers\\Mongodb\\Query\\Builder {#709\nNotice both are returning different objects.\n. @pi0 works, thanks. \n. ",
    "alexjose": "I am still getting the same error in 3.1.0-alpha.\n. Any update on this issue?. Please reopen this issue the workaround by making it an accessor will not help eager loading. \nwithCount should be the proper way to do this. . This is a required feature. Having the foreign id array in both collections is unnecessary. And the biggest issue is if the mapping from a small set to a huge set, the array size of foreign id in the small collection will be huge and might cause performance issue as well as may hit the 16 MB max document size. Say for example in case of role to user mapping, if I have 10 roles and around 100 million users, then the role document may have the user_ids array having an average number of 10 million user ids. Will this be a good practice? . Ref: http://learnmongodbthehardway.com/schema/schemabasics/\n\nEstablish Relationship Balance\n\nEstablish the maximum size of N and the size of M. For example if N is a maximum of 3 categories for a book and M is a maximum of 500000 books in a category you should pick One Way Embedding. If N is a maximum of 3 and M is a maximum of 5 then Two Way Embedding might work well.. As of now, it won't work. Listing and Searching works fine. But create/modification won't work as the Nova tries to run queries as the transaction.. ",
    "Vittalks": "[Symfony\\Component\\Debug\\Exception\\FatalErrorException]\n  Call to a member function compileSelect() on null    \nsame issue getting in 3.2 also. call any api its throw an error\nFatalErrorException in Builder.php line 1581:\nCall to a member function compileSelect() on null. thanks you @kodekrash \nAdd below lines in model file for setting all attribute as per type casts\npublic function setAttribute($key, $value) {\n    $this->attributes[$key] = $value;\n}. @azhard4int \nI am using MongoDB version is 3.2.10 but still i am getting error\n2016-11-12T11:22:36.143+0530 I CONTROL  [initandlisten] MongoDB starting : pid=1257 port=27017 dbpath=/data/db 64-bit host=Mac.local\n2016-11-12T11:22:36.144+0530 I CONTROL  [initandlisten] db version v3.2.10\n. +1. @nahueJ \nSorry for late replay\nin migration file i am using this use Illuminate\\Database\\Schema\\Blueprint;\nwhen i run php artisan migrate command its executed successfully, only problem while executing test cases facing issue this . ",
    "shafikhaan": "Same issue here, but its fun !. ",
    "kticka": "It is not very good idea to modify files in vendor folder. Instead you should fork package or just copy that class somewhere in your app directory, modify it for your needs and extend your user model by this copied class. . ",
    "rodrigorrch": "not work for me. ",
    "AnonymousArthur": "I have this issue as well.. @D3nnisH Any plan to fix?. @D3nnisH Ok, good to know. But can you highlight this significant breaking change on the main description page? So people can see it straight away. . Intended breaking change, no need for fix.. ",
    "judhizputra": "Hi @Umair1512, do you already solved this problem?\nWhat is the better way to solve this rather than do loop in model/controller to get the user_member data?\nThanks.. +1. +1, this issue still accouring till now. I also encountered this issue.\n@jenssegers why isn't this pull request merged?. ",
    "AliBahaari": "Thanks ...\n. Thanks @lukepolo & @gp187 ..., I didn't get what should I exactly ?\n. ",
    "jaimeescano": "Hi lipengyihao,\nI had the same issue, at the end ... I found that the issue was coming from the database.php file.\nI suppose, you are using a MySQL server as default connection, so most likely, you have your .env file pointing to the mysql settings.\nAs you can see from the database.php, it will try to load the following settings for the mongodb connection:\n'mongodb' => [\n        'driver'   => 'mongodb',\n        'host'     => env('DB_HOST', 'localhost'),\n        'port'     => env('DB_PORT', 27017),\nSo, it will try to check if there is a DB_PORT defined at the .env file (so ... laravel will find the port 3306) and load it from there, that's way you are getting the MySQL port. \nSo you can modify your database.php and set it as:\n'mongodb' => [\n        'driver'   => 'mongodb',\n        'host'     => env('DB_HOST', 'localhost'),\n        'port'     => 27017,\nOr define a new parameter at the .env file like:\n      DB_PORT_MONGO=27017\nAnd then modify the database.php to load that parameter from your .env file.\nHope that helps.\nRegards,\nJaime\n. Hi oaigudmundsson,\nTry defining the port as integer value. Don't use double quotes. Probably mongo require a number and no a string.\nRegards\nJaime. You mean, that you used as INTEGER? I suggested the opposite, to use INTEGER\n.env file\nMONGO_HOST=\"ds121212.mlab.com/abc\"\nMONGO_PORT=21212\nMONGO_DATABASE=abc\nMONGO_USERNAME=abc_user\nMONGO_PASSWORD=secret\nor for testing purposes, you could directly do the following:\ndatabase.php\n'mongodb' => [\n'driver' => 'mongodb',\n'host' => env('MONGO_HOST'),\n'port' => 21212,\n'database' => env('MONGO_DATABASE'),\n'username' => env('MONGO_USERNAME'),\n'password' => env('MONGO_PASSWORD'),\n],\n. Have you tried to specify the port at the host parameter??\nMONGO_HOST=\"ds121212.mlab.com:21212/abc\"\nNot sure, but if that works .. then the \"abc\" will need to be defined as replica set attribute. So ... if the second one is working, your configuration to use the port should be:\ndatabase.php\n'mongodb' => [\n    'driver'   => 'mongodb',\n    'host'     => env('MONGO_HOST'),\n    'port'     => env('MONGO_PORT', 27017),\n    'database' => env('MONGO_DATABASE'),\n    'username' => env('MONGO_USERNAME'),\n    'password' => env('MONGO_PASSWORD'),\n]\n.env file\nMONGO_HOST=\"ds121212.mlab.com\"\nMONGO_PORT=21212\nMONGO_DATABASE=abc\nMONGO_USERNAME=abc_user\nMONGO_PASSWORD=secret\n. ",
    "neroze": "Worked for me. \nThank you @jaimeescano \nCheers. ",
    "ayelen117": "Thanks @jaimeescano.\n. ",
    "yoedusvany": "Perfect, is that correct!!!!. ",
    "oaigudmundsson": "Hello\nNot sure why but the solution above is not working.\ndatabase.php\n'mongodb' => [\n            'driver'   => 'mongodb',\n            'host'     => env('MONGO_HOST'),\n            'port'     => env('MONGO_PORT'),\n            'database' => env('MONGO_DATABASE'),\n            'username' => env('MONGO_USERNAME'),\n            'password' => env('MONGO_PASSWORD'),\n        ],\n.env file\nMONGO_HOST=\"ds121212.mlab.com/abc\" \nMONGO_PORT=\"21212\"\nMONGO_DATABASE=abc\nMONGO_USERNAME=abc_user\nMONGO_PASSWORD=secret\nHere is the error msg:\nNo suitable servers found (serverselectiontryonce set): [Failed connecting to 'ds121212.mlab.com:27017': Connection refused]\nThe port doesn't parse right as you can see. I can however make it connect by change the adding the port to HOST:\nds121212.mlab.com/abc  =>  ds121212.mlab.com:21212/abc\nSo, why did it ignore the port?\nCheers\n. Hello\nI did use as string and stil\u00f6 same issue.\nDen 12 juni 2017 17:33 skrev \"jaimeescano\" notifications@github.com:\n\nHi oaigudmundsson,\nTry defining the port as integer value. Don't use double quotes. Probably\nmongo require a number and no a string.\nRegards\nJaime\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/jenssegers/laravel-mongodb/issues/911#issuecomment-307826470,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAmzt9nunUkW2YK6yue7lU53gk6FNMZaks5sDVpIgaJpZM4JejBZ\n.\n. Sorry, i meant as int ans str. I did test both cases and it still didn't\nconnect. Let me send some screenshot tomorrow. And yes, i did even type\ndirect to database.php. Weird!\n\nDen 12 juni 2017 22:05 skrev \"jaimeescano\" notifications@github.com:\n\nYou mean, that you used as INTEGER? I suggested the opposite, to use\nINTEGER\n.env file\nMONGO_HOST=\"ds121212.mlab.com/abc\"\nMONGO_PORT=21212\nMONGO_DATABASE=abc\nMONGO_USERNAME=abc_user\nMONGO_PASSWORD=secret\nor for testing purposes, you could directly do the following:\ndatabase.php\n'mongodb' => [\n'driver' => 'mongodb',\n'host' => env('MONGO_HOST'),\n'port' => 21212,\n'database' => env('MONGO_DATABASE'),\n'username' => env('MONGO_USERNAME'),\n'password' => env('MONGO_PASSWORD'),\n],\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/jenssegers/laravel-mongodb/issues/911#issuecomment-307893822,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAmzt_2QAqAF0sUTMcAfI0wsHy5R_g51ks5sDZCtgaJpZM4JejBZ\n.\n. yes, i did write on my first comment, that i got it work by ADDING the port\non host string.\n\nMongolabs host free sandbox and they don't have replica.\nCheers\nDen 13 juni 2017 02:50 skrev \"jaimeescano\" notifications@github.com:\nHave you tried to specify the port at the host parameter??\nMONGO_HOST=\"ds121212.mlab.com:21212/abc\"\nNot sure, but if that works .. then the \"abc\" will need to be defined as\nreplica set attribute\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/jenssegers/laravel-mongodb/issues/911#issuecomment-307952682,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAmzt_nHzFJEUh4sR6RHmcFH5TIO0aQtks5sDbyKgaJpZM4JejBZ\n.\n. Not working\nMONGO_HOST=\"ds121212.mlab.com/ABC\"\nMONGO_PORT=21212 // this is useless?\n\nError message:\nNo suitable servers found (serverselectiontryonce set): [Failed connecting to 'ds121212.mlab.com:27017': Connection refused]\n\nWorking\nMONGO_HOST=\"ds121212.mlab.com:21212/ABC\"\nMONGO_PORT=21212 // this is useless?\n. I don't see where 27017 is and it must be set default mongodb port i guess?\nNotice: \nMONGO_HOST=\"ds121212.mlab.com:21212/abc\" \nabc must be there, otherwise\n\n(1/1) AuthenticationException\nAuthentication failed.\n\nConnection string must be like this:\nmongodb://:@ds121212.mlab.com:21212/abc\nHere is the files which are working:\nMy database.php \n'mongodb' => [\n            'driver'   => 'mongodb',\n            'host'     => env('MONGO_HOST'),\n            'port'     => env('MONGO_PORT'),\n            'database' => env('MONGO_DATABASE'),\n            'username' => env('MONGO_USERNAME'),\n            'password' => env('MONGO_PASSWORD'),\n        ],\n.env\nMONGO_HOST=\"ds121212.mlab.com:21212/abc\"\nMONGO_PORT=21212\nMONGO_DATABASE=abc\nMONGO_USERNAME=abc_user\nMONGO_PASSWORD=secret\n. ",
    "ianrussel": "This one works for me\n       `DB_CONNECTION=mongodb\n        DB_HOST=ianruhjkssel:riberrmayhjkjhka1@ds115kjhk01.mlab.com:15hjk701/express-tutorial-sandbox\n        DB_DATABASE=express-tutorial-sandbox\n        DB_USERNAME=ianruhjkssel\n        DB_PASSWORD=riberrmayhjkjhka1`.\n",
    "fieteboerner": "I have noticed my pr is in conflict with simple subdocument aggragation functions.\nA update that fixes this issue will coming soon.\n. ok, i've just updated it :)\n. ",
    "nerijunior": "php\n$notifications = Notification::where('sent', '=', false)\n            ->where('created_at', '<=', Carbon::now())\n            ->get();\nIt's doesn't work for me.. ",
    "adrianlaraperez88": "[Symfony\\Component\\Debug\\Exception\\FatalErrorException]\n  Call to a member function getDateFormat() on null\n. ",
    "hadifarnoud": "I want to do the reverse actually. there are issues with JOINs\n. ",
    "tera-g": "@george-viaud this is not a solution. I did change laravel framework version. (v5.2.43 -> v5.2.31)\n. ",
    "iamkallolpratim": "same problem happenning with me also. Unable to get the results when use whereBetween to compare two compare two datetime . ",
    "Endijs": "While this is not fixed, take a look at this pull request: https://github.com/jenssegers/laravel-mongodb/pull/905/files . I made changes for Jenssegers/Mongodb/Query/Builder.php - replaced default return values with the ones that return collection (3 edits in total). And it started to work. \n. I also had the same problem. Updated mongodb driver and problem was fixed. I'm using PHP 7. Those who experience this issue, try updating mongodb driver.. @acidjazz \n$ php -v\nPHP 7.0.13-0ubuntu0.16.04.1 (cli) ( NTS )\nCopyright (c) 1997-2016 The PHP Group\nZend Engine v3.0.0, Copyright (c) 1998-2016 Zend Technologies\n    with Zend OPcache v7.0.13-0ubuntu0.16.04.1, Copyright (c) 1999-2016, by Zend Technologies\n$ php --ri mongodb\nmongodb\nMongoDB support => enabled\nMongoDB extension version => 1.2.5\nMongoDB extension stability => stable\nlibbson bundled version => 1.5.4\nlibmongoc bundled version => 1.5.4\nlibmongoc SSL => enabled\nlibmongoc SSL library => OpenSSL\nlibmongoc crypto => enabled\nlibmongoc crypto library => libcrypto\nlibmongoc crypto system profile => disabled\nlibmongoc SASL => disabled. @acidjazz Well - for me it worked out (just like for @staf ). At least i can't spot any new records with 0 anymore.  However @domagala is also using 1.2.5 and is reporting that issue still persists. Thus it looks like sometimes that fixes the problem, but not always. Maybe something else is at play here. \nBut it's good place to start for those who are having this issue. Try updating mongodb driver and report if that helps or not.. ",
    "alsemany": "Hello , \nI need help with relations \nsome relations like morphedByMany still not working  5.3 \n. Thank you so much @mikekamornikov  this solution working very well \nit just need to add \nuse MongoDB\\BSON\\UTCDateTime;\nalso \nnew \\DateTimeZone \nif someone tried this solution and not worked , you just need to make a new reset request \nexample.com/password/reset \nthen \ntry the new token . ",
    "bytesarelife": "Any idea when this will be merged? I started a project in 5.3 just to find out that this repo is not compatible yet :/\n. ",
    "xxnoobmanxx": "I found a possible fix to the problem in Jenssegers\\Mongodb\\Query\\Builder class :\nIn get method, substitute\nreturn $this->getFresh($columns);\nfor\n$data = $this->getFresh($columns);\nreturn new \\Illuminate\\Support\\Collection($data);\nBut, unfortunately, I dont know if this will fit all the cases.\n. Good! Thank you! @pi0 \n. ",
    "n1ks2n": "Just found out it was a type converting error in query. Issue can be closed, sorry.\n. Met the same issue after updating from 5.2 to 5.4. ",
    "Parziphal": "I get this error with \"empty\" models (no relations or anything). Using version 2.3.5.\n. @pi0 Excuse me for the question, but will version 2 receive support to work on Laravel 5.3? Or has version 2 reached its EOL?\n. Yes I'd love to, but first we have to migrate to PHP 7, and that will happen soon, although not soon enough.\n. ",
    "ovaiskhan11": "@pi0 @Parziphal  Can you please answer the question posted in the stack overflow http://stackoverflow.com/questions/41462510/hasmany-relation\u200c\u200bship-issue-in-larave\u200c\u200bl-5-3-mongodb-librar\u200c\u200by-jenssegers-laravel. ",
    "Surt": "Hi all,\nany news about compatibility with Laravel Scout? Does it works?\n. Thanks @elfeffe \nI've actually succeed using https://github.com/jenssegers/laravel-mongodb with the elastic driver for scout https://github.com/babenkoivan/scout-elasticsearch-driver\nI just needed to change the _id property so _id is converted to id\nNow, it works like a charm. inserts, updates, deletes, etc... \nThank you very much @jenssegers for this awesome library.\n```\n    /\n     * Get the indexable data array for the model.\n     \n     * @return array\n     /\n    public function toSearchableArray()\n    {\n        $array = $this->toArray();\n        $array['id'] = $array['_id'];\n        unset($array['_id']);\n        return $array;\n    }\n```. I'm having the same issue, triying to \"migrate\" the data that I already have it gives me:\n```\nphp artisan elastic:migrate App\\Models\\Content content\nThe index content was updated.\nThe content mapping was updated.\nThe content_write alias for the content index was deleted.\nThe content_write alias for the content index was created.\nIn Connection.php line 615:\n{\"error\":{\"root_cause\":[{\"type\":\"mapper_parsing_exception\",\"reason\":\"Field [_id] is a metadata field and cannot be added inside a document. Use the index API request parameters.\"}],\"type\":\"mapper_parsing_exception\",\"reason\":\n  \"Field [_id] is a metadata field and cannot be added inside a document. Use the index API request parameters.\"},\"status\":400}\n```\nThe difference is that I'm using the https://github.com/babenkoivan/scout-elasticsearch-driver. I've updated to dev-master and composer does alert about \n Access level to Jenssegers\\Mongodb\\Eloquent\\Model::getDateFormat() must be public (as in class Illuminate\\Database\\Eloquent\\Model)\nduring the > @php artisan package:discover\nEdited: I see, it's not merged yet.\n. did you \"reloaded\" the $user instance?\n$user->fresh(); //  $user = User::find(['_id'=> $object_id])->first();\ndd($user);. ",
    "ctf0": "mongo already have a full-text search engine is there any chance to integrate scout with the mongo built in search instead of adding an extra layer es ?. ",
    "ptitkiller": "same error here\n. ",
    "siteclub": "same here. ",
    "davorminchorov": "I get this error too. The weird part is that at times it shows up 5 times in a row and the 6th time it works fine like nothing happened before.. ",
    "NickBefore": "@prashant-pokhriyal it solved to me.. ",
    "jetsynthesys": "@acidjazz @jenssegers when using this outside laravel framework, the version compare of laravel framework is not required so it's best to put inside a condition \nphp\nif (class_exists('\\\\Illuminate\\\\Foundation\\\\Application')) {\n    $this->useCollections = version_compare(\\Illuminate\\Foundation\\Application::VERSION, '5.3', '>=');\n} else {\n    $this->useCollections = true;\n}\n. ",
    "GreenLamantin": "For Lumen you can add to your bootstrap next rows as temporary solution:\nphp\nif (!class_exists('\\Illuminate\\Foundation\\Application')) {\n    class_alias(\\App\\Application::class, '\\Illuminate\\Foundation\\Application');\n}\nCreate Application class in app directory or specify another class instead \\App\\Application and add:\nphp\nconst VERSION = \"5.3\";\n. Why UTCDateTime instead UTCDatetime? \n. ",
    "giaule": "@GreenLamantin i had try used your idea, this good\nThanks.\n. ",
    "staf": "I guess you are using laravel 5.3? \nIf that is the case you need to use v3.1.0-alpha of this library to be compatible with the latest release of Laravel. \nRun composer require jenssegers/mongodb:v3.1.0-alpha to use that version, or edit your composer.json file to specify \"v3.1.0-alpha\" as the version and then run composer update.\n. Can confirm this is happening for us as well in several of our projects after upgrading to 3.2.1\nedit: \nI updated to the 1.2 version of the mongodb extension which solved the issue on my local machine. Using the 1.1 version gives incorrect timestamps.\nAlso on Laravel 5.3 (for now). I'm running 7. A coworker on 5.6 had the same issue. But a driver upgrade from 1.1 to 1.2 solved it in either case.  . I was looking into that briefly a while ago and didn't find a quick solution without having to extend or rewrite the library (and large parts of it when you're dealing with many-to-many relations). The issue is that the foreign key assignment goes through the normal accessors and converts ObjectId's to strings. \nIn addition to that Eloquent uses the id as an array index at some point while managing the relations which doesn't work if the foreign keys aren't strings or integers.\nMight look into it again in the future but might not be able to find a solution. The main issue for us was not being able to use lookups during aggregation since MongoDB can't automatically convert between string and object ids.\nIt would probable require a major change to the functionality of the library basically making it incompatible with data of the current version and thus not be developed. Just speculating though.. That only works on one-to-many relations, not many-to-many and also means you have to manually store the foreign key. \nIf a customer can have many users and a user can belong to many customers it stores the ids on both models as an array of strings. And it will crash when loading the relations if you try to manually store them as ObjectIds instead. At least with this kind of relation it is not possible to use the relation functionality of the ORM at all if you need the foreign keys to be stored as objects.. Yes, and haven't encountered any issues so far.\nNot running in production yet, but working fine in our staging/test environment.. To make Telescope work with this \"all\" you need is an adapter for the storage driver. Telescope registers the its database driver as part of the service provider, which is where you can replace the bindings to a driver that uses this package instead of eloquent to store the records.\nNot sure if anyone have written this yet though, but implementing those interfaces should be somewhat straightforward. . ",
    "joelpiccoli": "Thanks a lot @linusstaf! \nI thought might be something like this. Now everything is running like should... xD\n. ",
    "driesvints": "Try the 3.1 alpha tag for now: https://github.com/jenssegers/laravel-mongodb/releases/tag/v3.1.0-alpha\n. ",
    "gousta": "@nguyenvuvn Are you still having this issue?\n. Ah the Mongo Server is a \"Compose MongoDB\" running v2.6.9\n. Upgraded MongoDB to v3.0.11 and the only thing that changed is:\nauth failed => Authentication failed.\n. Okay I fixed it by commenting out the 'database' => 'admin' key within options. So it's like this:\n'mongodb' => [\n    'driver'   => 'mongodb',\n    'dsn'      => env('MONGOHQ_URL'),\n    'host'     => env('DB_HOST', 'localhost'),\n    'port'     => env('DB_PORT', 27017),\n    'database' => env('DB_DATABASE', 'sales'),\n    'username' => env('DB_USERNAME'),\n    'password' => env('DB_PASSWORD'),\n    'options' => [\n        // 'database' => 'admin' // sets the authentication database required by mongo 3\n    ]\n],\n. ",
    "jpellissari": "The problem is that the \"Client\" model used by Laravel Passport extends Illuminate\\Database\\Eloquent\\Model when it should extend  Jenssegers\\Mongodb\\Eloquent\\Model. I think we'll need to change every model used by Laravel Passport. Maybe that is the only way, not sure though.\n. I was not able to test all the new features of Laravel 5.3 yet, but I can tell you that the laravel passport  isn't a issue with this repo itself. This would be easily solved if laravel passport had treated client and token models as the user model, for example. Then we could easily be able to change the extended Model. I have a working laravel passport installation with this repo. The changes I had to make to achieve this was the changes above and the implementation of findForPassport() method on user model, because Laravel passport expects email by default when generating tokens. Btw, I've used password grant type. \n. ",
    "reo4": "thanks jpellissari for the response , i think this repo will take much time to be integrated with all new laravel 5.3 components\n. ",
    "armashfankar": "I tried above solution but it didn't work for me.\nPlease help me if there is any other solution.\n\n. Hello,\ni am also getting same error and i tried above solution but its not working out for me.\nAny other solution?\n\n. @mohammad-69 have you solved this? please let me know the solution.. ",
    "pablofmorales": "The problem is because of you are trying to use a class in the vendor folder that is tight to normal Eloquent Model. \nWhat I suggest to do is taking ownership of that class in your project. \nYou can copy the Passport class that has the problem in your project and change the Model \nJenssegers\\Mongodb\\Eloquent\\Model as Model;\nI have the same for the Authentication as is working more than find. \n```\n<?php\nnamespace App;\nuse Illuminate\\Notifications\\Notifiable;\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Model;\nuse Illuminate\\Auth\\Authenticatable;\nuse Illuminate\\Auth\\Passwords\\CanResetPassword;\nuse Illuminate\\Foundation\\Auth\\Access\\Authorizable;\nuse Illuminate\\Contracts\\Auth\\Authenticatable as AuthenticatableContract;\nuse Illuminate\\Contracts\\Auth\\Access\\Authorizable as AuthorizableContract;\nuse Illuminate\\Contracts\\Auth\\CanResetPassword as CanResetPasswordContract;\nclass User extends Model implements AuthenticatableContract, AuthorizableContract,CanResetPasswordContract\n{\n    use Authenticatable, Authorizable, CanResetPassword, Notifiable;\n/**\n * The attributes that are mass assignable.\n *\n * @var array\n */\nprotected $fillable = [\n    'name', 'email', 'password',\n];\n\n/**\n * The attributes that should be hidden for arrays.\n *\n * @var array\n */\nprotected $hidden = [\n    'password', 'remember_token',\n];\n\n}\n```\n. toArray() function is going to create an array in memory with all the elements in the results. \nDon't use toArray() or limit the results . ",
    "StevePorter92": "This is fixed with https://github.com/jenssegers/laravel-mongodb/pull/1333. This is fixed with https://github.com/jenssegers/laravel-mongodb/pull/1333. Can you not change the implementation of the package that is trying to use the result of $user = DB::table('users')->first(); and in your own implementation cast the result as an object?. Have you registered the Password reset service provider?\n'Jenssegers\\Mongodb\\Auth\\PasswordResetServiceProvider',. Looks like the Travis test is failing because the mongo php extension is already installed. Glad it worked for you \ud83d\ude04 .. Hey @jenssegers. Would you mind reviewing this when you have a change? Thanks!. @LeonAlvarez good idea. I've moved this code to its own package. This way we can leave it up to the discretion of users as to whether they want to implement Laravel passport support\nhttps://github.com/StevePorter92/laravel-mongodb-passport\nClosing this issue. Thanks @ivivivn, I've added an issue to fix Lumen support. @jim5359 the fix in #1392 should solve your problem :). Does the example here https://github.com/jenssegers/laravel-mongodb#embedsmany-relations help you with your question?. We use this project across a lot of our production applications. We have explored other Laravel MongoDB implementations and have found that they seem to also become a little inactive after a period of time. This project does have a great community and is generally quite active.\nAs @NoelDeMartin said, if there is anyway that we as part of the community can help, we'd be keen to do what we can.. Hey @majuansari. Please see the implementation in this pull request https://github.com/jenssegers/laravel-mongodb/pull/1333. You could use the fork at https://github.com/DMNSteve/laravel-mongodb.\nOr you could fork the repository yourself and patch that pull request. :). I didn't have any issues myself. What version of Passport are you using? I'd like to investigate a little further.. Just waiting for it to be reviewed by one of the maintainers. Hopefully, it should be merged soon.. @LeonAlvarez, sorry for the delay. Hope you had a Merry Christmas and Happy new year!\nI just had a go at this from a fresh Laravel installation and I wasn't able to reproduce the issue\nhttps://github.com/DMNSteve/1390\nThe only difference is that I'm using my fork at version 3.3.3 https://github.com/DMNSteve/1390/blob/master/composer.json\nMight be worth having comparing some of your files with this fresh installation to see if there is anything glaringly obvious.\nThe user class might be a file of interest https://github.com/DMNSteve/1390/blob/master/app/User.php.\nLet me know if you come across anything or would like me to have another go at reproducing. @majuansari I've closed the initial pull request and moved it to its own package available here https://github.com/StevePorter92/laravel-mongodb-passport. Can you just confirm what version of the library you are using, please.\nCan you also paste the full error response as well? Thanks. Looks like the driver is expecting a url encoded dsn string.\nDo you have any luck with using mongodb://sqpon%3A123123%40%2Fdatas%2Frun%2Fmongodb%2Fmongodb-27017.sock%3A0?. Worth having a look at these issues here:\nhttps://github.com/jenssegers/laravel-mongodb/issues/1358\nhttps://github.com/jenssegers/laravel-mongodb/issues/761\nhttps://github.com/jenssegers/laravel-mongodb/issues/1163\nhttps://github.com/jenssegers/laravel-mongodb/issues/1093\nDo you have the mongo php drivers installed?\nhttps://docs.mongodb.com/ecosystem/drivers/php/. Please feel free to use https://github.com/designmynight/laravel-mongodb-passport for passport support with https://github.com/jenssegers/laravel-mongodb. What version of the php-mongodb extension do you have installed? \nThere is a legacy mongo and modern mongodb extension and php library. It looks like you may have the legacy one. You can find more information here https://docs.mongodb.com/ecosystem/drivers/php/#drivers. ",
    "morrislaptop": "@acidjazz @pi0 i've switched to your repo, i'll take one less namespace anyday!\n. ",
    "Opsse": "This issue isn't fixed yet ?. ",
    "D3nnisH": "already fixed by #1328 . you do not need to copy the complete original code, simply insert the missing method argument\nprotected function createTokenRepository(array $config)\n{\n    return new DatabaseTokenRepository(\n        $this->app['db']->connection(),\n        $this->app['hash'],\n        $config['table'],\n        $this->app['config']['app.key'],\n        $config['expire']\n    );\n}\nthis removed the Argument 2 ... must implement interface Illuminate\\Contracts\\Hashing\\Hasher, string given error for me, however I didn't test yet whether the tokens are valid then. why was it changed here https://github.com/jenssegers/laravel-mongodb/commit/3df57e297538251692948df634f36b6f71744213 ?. indeed: https://github.com/jenssegers/laravel-mongodb/pull/1300/files#diff-b5d0ee8c97c7abd7e3fa29b9a27d1780R17. This cannot be \"fixed\" in code, the only 2 possible fixes are:\n- upgrading to Laravel 5.5\n- staying at jenssegers/mongodb v3.2.3 or below. someone already had this idea :smirk:  https://github.com/jenssegers/laravel-mongodb/pull/1364/files. oh, I see it's a duplicate of https://github.com/jenssegers/laravel-mongodb/pull/953/files , but that one has merge conflicts. #1328 contains the exact same diff and has been merged. class User extends Model { \n    ...\n    public function books() {\n        return $this->hasMany(Book::class);\n    }\n}\nUser::where('email', $email)->with('books')->firstOrFail()->books. I think the exported Data should look like this to be found by Laravel:\n{\"_id\":ObjectId(\"513d66b6ce5858205100001f\"),\"uid\":\"4374\",\"gid\":0, ...}. ",
    "haridarshan": "Hi, \nStill getting this error after updating \n\nilluminate database from v5.2.43 to v5.3.16\njenssegers/mongodb from v3.0.0 to v3.1.3\nFatal error: Uncaught Error: Call to a member function all() on array in /var/www/app/vendor/illuminate/database/Eloquent/Builder.php:613 Stack trace: #0 /var/www/app/vendor/illuminate/database/Eloquent/Builder.php(318): Illuminate\\Database\\Eloquent\\Builder->getModels(Array) #1 /var/www/app/vendor/illuminate/database/Eloquent/Model.php(632): Illuminate\\Database\\Eloquent\\Builder->get(Array) #2 /var/www/app/config.php(138): Illuminate\\Database\\Eloquent\\Model::all() #3 /var/www/app/handler.do(3): require('/var/www/app...') #4 {main} thrown in /var/www/app/vendor/illuminate/database/Eloquent/Builder.php on line 613\n. Yes, only when am using latest release version of illuminate database. @wedgwood\nThanks\n\nSince am using different components from different frameworks in our project so is it possible to have that fix inside shouldUseCollections method. That will be great when anyone using laravel-mongodb outside laravel framework.. ",
    "felipebastosweb": "Do You tryed ...\n public function groups()\n    {\n        return $this->belongsToMany('Group', null, 'user_ids', 'group_ids');\n    }\nAnd failed?\n. Or watched and pinned are condictions, example:\nTask\npinned bool\nwatched bool\n???\n. ",
    "dmitov": "@felipebastosweb Thank you, I will try your first example and will let you know.\nThe second example is not appropriate as pinned and watched are user-related.\n. @jenssegers Is this going to be released anytime soon? I see it's merged to master, but we don't have an official version with this included.. @majuansari @jenssegers A PR, with slightly different approach is added:\nhttps://github.com/jenssegers/laravel-mongodb/pull/1451. I am using the solution and it works. The models are indeed instantiated using new but their base model is in the use case, therefore the IoC container will take over the class resolving. \nMaybe we could use some tests here? . ",
    "luzhuqun": "in config/database.php\n'database' => env('test'),\nI changed this to \n'database' => 'test',\nThen it's okay. Why?\n. ",
    "JuCarr": "See here: https://github.com/jenssegers/laravel-mongodb/issues/854.\nIt works with laravel version < 5.2.32. \n. It was not enough to fix it for me. Here is what I did:\nJenssegers\\Mongodb\\Auth\\PasswordBrokerManager:\nprotected function createTokenRepository(array $config)\n{\n    return new DatabaseTokenRepository(\n        $this->app['db']->connection(),\n        $this->app['hash'],\n        $config['table'],\n        $this->app['config']['app.key'],\n        $config['expire']\n    );\n}\n\nJenssegers\\Mongodb\\Auth\\DatabaseTokenRepository:\nprotected function getPayload($email, $token)\n{\n   // Hash token\n    return ['email' => $email, 'token' => $this->hasher->make($token), 'created_at' => new UTCDateTime(time() * 1000)];\n}\n\nprotected function tokenExpired($token)\n{\n    // Added this first if\n    if($token instanceof UTCDateTime) {\n\n        $date = $token->toDateTime();\n        $date->setTimezone(new DateTimeZone(date_default_timezone_get()));\n\n        $createdAt = $date->format('Y-m-d H:i:s');\n\n        return parent::tokenExpired($createdAt);\n    }\n\n    // Convert UTCDateTime to a date string.\n    elseif ($token['created_at'] instanceof UTCDateTime) {\n\n        $date = $token['created_at']->toDateTime();\n        $date->setTimezone(new DateTimeZone(date_default_timezone_get()));\n        $token['created_at'] = $date->format('Y-m-d H:i:s');\n\n    } elseif (is_array($token['created_at']) and isset($token['created_at']['date'])) {\n\n        $date = new DateTime($token['created_at']['date'], new DateTimeZone(isset($token['created_at']['timezone']) ? $token['created_at']['timezone'] : 'UTC'));\n        $date->setTimezone(new DateTimeZone(date_default_timezone_get()));\n        $token['created_at'] = $date->format('Y-m-d H:i:s');\n    }\n\n\n    return parent::tokenExpired($token);\n}\n\n. Same problem here with Laravel 5.4. How did you fix it?. To make this issue clear, here a very simple example to reproduce it.\nFirst, let's make a basic job which only echoes something:\n```\n<?php\nnamespace App\\Jobs;\nuse App\\Jobs\\Job;\nuse Illuminate\\Queue\\SerializesModels;\nuse Illuminate\\Queue\\InteractsWithQueue;\nuse Illuminate\\Contracts\\Queue\\ShouldQueue;\nclass EchoJob extends Job implements ShouldQueue\n{\n    use InteractsWithQueue, SerializesModels;\nprotected $id;\n\n/**\n * Create a new job instance.\n *\n * @return void\n */\npublic function __construct($id)\n{\n    $this->id = $id;\n}\n\n/**\n * Execute the job.\n *\n * @return void\n */\npublic function handle()\n{\n    echo 'Handling job: ' . $this->id . PHP_EOL;\n}\n\n}\n```\nThen, let's make a command to queue a few jobs\n```\n<?php\nnamespace App\\Console\\Commands;\nuse Illuminate\\Console\\Command;\nuse App\\Jobs\\EchoJob;\nclass CreateEchoJobs extends Command\n{\n    /\n     * The name and signature of the console command.\n     \n     * @var string\n     /\n    protected $signature = 'create:echo:jobs';\n/**\n * The console command description.\n *\n * @var string\n */\nprotected $description = 'Queue echo jobs';\n\n/**\n * Create a new command instance.\n *\n * @return void\n */\npublic function __construct()\n{\n    parent::__construct();\n}\n\n/**\n * Execute the console command.\n *\n * @return mixed\n */\npublic function handle()\n{\n    for($i = 0; $i < 200; $i++) {\n\n        // let's add some load here\n        $job = new EchoJob($i);\n        $job->delay(rand(10, 30));\n\n        dispatch($job);\n    }\n}\n\n}\n```\nThen execute the command and run the queue worker:\nphp artisan queue:work --tries=3\nOn my laptop (i7, 16GB Ram), I get this kind of result:\n\n[2017-09-11 15:53:06] Failed:     App\\Jobs\\EchoJob\n[2017-09-11 15:53:06] Processing: App\\Jobs\\EchoJob\n[2017-09-11 15:53:06] Failed:     App\\Jobs\\EchoJob\n[2017-09-11 15:53:06] Processing: App\\Jobs\\EchoJob\n[2017-09-11 15:53:06] Failed:     App\\Jobs\\EchoJob\n[2017-09-11 15:53:06] Processing: App\\Jobs\\EchoJob\n[2017-09-11 15:53:06] Failed:     App\\Jobs\\EchoJob\n[2017-09-11 15:53:06] Processing: App\\Jobs\\EchoJob\n[2017-09-11 15:53:06] Failed:     App\\Jobs\\EchoJob\n[2017-09-11 15:53:09] Processing: App\\Jobs\\EchoJob\nHandling job: 19\n[2017-09-11 15:53:09] Processed:  App\\Jobs\\EchoJob\n[2017-09-11 15:53:09] Processing: App\\Jobs\\EchoJob\nHandling job: 50\n[2017-09-11 15:53:09] Processed:  App\\Jobs\\EchoJob\n[2017-09-11 15:53:09] Processing: App\\Jobs\\EchoJob\nHandling job: 52\n[2017-09-11 15:53:09] Processed:  App\\Jobs\\EchoJob\n[2017-09-11 15:53:09] Processing: App\\Jobs\\EchoJob\n[2017-09-11 15:53:09] Failed:     App\\Jobs\\EchoJob\n[2017-09-11 15:53:09] Processing: App\\Jobs\\EchoJob\n[2017-09-11 15:53:09] Failed:     App\\Jobs\\EchoJob\n[2017-09-11 15:53:09] Processing: App\\Jobs\\EchoJob\n[2017-09-11 15:53:09] Failed:     App\\Jobs\\EchoJob\n[2017-09-11 15:53:09] Processing: App\\Jobs\\EchoJob\n[2017-09-11 15:53:09] Failed:     App\\Jobs\\EchoJob\n[2017-09-11 15:53:09] Processing: App\\Jobs\\EchoJob\n\nMost of the jobs fail. With my correction, none of the jobs fail. \n\n[2017-09-11 16:03:57] Processed:  App\\Jobs\\EchoJob\n[2017-09-11 16:03:57] Processing: App\\Jobs\\EchoJob\nHandling job: 70\n[2017-09-11 16:03:57] Processed:  App\\Jobs\\EchoJob\n[2017-09-11 16:03:57] Processing: App\\Jobs\\EchoJob\nHandling job: 94\n[2017-09-11 16:03:57] Processed:  App\\Jobs\\EchoJob\n[2017-09-11 16:03:57] Processing: App\\Jobs\\EchoJob\nHandling job: 96\n[2017-09-11 16:03:57] Processed:  App\\Jobs\\EchoJob\n[2017-09-11 16:03:57] Processing: App\\Jobs\\EchoJob\nHandling job: 136\n[2017-09-11 16:03:57] Processed:  App\\Jobs\\EchoJob\n[2017-09-11 16:03:57] Processing: App\\Jobs\\EchoJob\nHandling job: 159\n[2017-09-11 16:03:57] Processed:  App\\Jobs\\EchoJob\n[2017-09-11 16:03:57] Processing: App\\Jobs\\EchoJob\nHandling job: 171\n[2017-09-11 16:03:57] Processed:  App\\Jobs\\EchoJob\n[2017-09-11 16:03:57] Processing: App\\Jobs\\EchoJob\nHandling job: 181\n//...\n\nBut my correction breaks the attempt counter. A job will only be tried once, no matter what you put in the --tries option. So, it's not really satisfactory... Anyone has a better idea on this...?\n. ",
    "lukergz": "is there any workaround for this? I'm also having this problem in v5.4.19. ",
    "kleytonroan": "To solve the \"Field [_id] is a metadata field and cannot be added inside a document. [...]\" error, i had to override toSearchableArray() method, put an $array['id'] = $array['_id'] and unset($array['_id']), this solved the isue. When you use embed Documents, you must do it too.\nSomeone could help me?\ni have something like this:\n{\n  \"idFromCarModelOnMongo\": \"1\",\n  \"make\" : \"Subaru\",\n  \"model\": \"Imprezza\"\n  \"products\" : [\n    {\n      \"make\" : \"John\",\n      \"code\" : \"foo\"\n    },\n    {\n      \"make\" : \"Jane\",\n      \"code\" : \"bar\"\n    }\n  ]\n}\nI need to store in ES two documents, one insert with Subaru and foo document, and another with Subaru and bar document, because i'll search something like \"Imprezza foo\", and I need to get only the data about that specifc product, some one have any ideia? I'm using embedMany on MongoDB. ",
    "kheengz": "i actually replaced the database in options array to db\nmongodb' => [\n            'driver'   => 'mongodb',\n            'host'     => env('DB_HOST', 'localhost'),\n            'port'     => env('DB_PORT', 27017),\n            'database' => env('DB_DATABASE'),\n            'username' => env('DB_USERNAME'),\n            'password' => env('DB_PASSWORD'),\n            'options' => [\n                'db' => 'admin' // replace \"database\" to \"db\"\n            ]\n        ],\n. It works...thanks a lot @uriel2707. @ssallah why are you using mongodb2 as the key? also use_mongo_id is not necessary. ",
    "ssallah": "i want to connect to remote server from my local machine but i am having Authentication failed error .\ni am able to connect to my local machine correctly but i cant connect to the remote server\nfrom my local machine i can connect to the remote host via ssh  and specify the user and the pwd .\nany idea on how to connect to a remote sever please thanks in advance\n'mongodb2' => [\n    'driver'   => 'mongodb',\n    'host'     => env('DB2_HOST', 'xx.xxx.xx.xx'),\n    'port'     => env('DB2_PORT', 27017),\n    'database' => env('DB2_DATABASE','admin'),\n    'username' => env('DB2_USERNAME',''),\n    'password' => env('DB2_PASSWORD',''),\n    'use_mongo_id' => false,\n    'options' => [\n        'database' => 'admin',\n    ]\n]. ",
    "mohamedhafezqo": "\nuse admin\ndb.createUser({user: \"admin\", pwd: \"123456\", roles:[\"root\"]})\n. \n",
    "janhartigan": "The specific issue that it's complaining about is that it's trying to get the PDO on a database connection that doesn't have it.\nhttps://github.com/laravel/framework/blob/d1a4f3fc7951c04ff91855511ed8c73b1a98e533/src/Illuminate/Database/Connection.php#L612\nThe getPdo() method returns null in the case of the mongodb driver connection. You may have to avoid using the database queue driver if you use this package, or you can overload the beginTransaction method to simply do nothing.. ",
    "ahkui": "override this in authcontroller protected function incrementLoginAttempts(Request $request){}. ",
    "trevsewell": "I'm having the same issue with:\n\"laravel/framework\": \"5.3.*\",\n\"jenssegers/mongodb\": \"^3.1.1\",\n. thanks pi0, worked a treat\n. ",
    "DimasL": "Thanks !\n. ",
    "ebychu": "\\DB::connection('mongodb')->getMongoDB()->command()\n. @WenXuanYuan  Thanks,  but I use the ORM query in the collection is not dis fields, I want to use the ORM query to get the distance,, \n\\MongodbUser::WhereRaw( \n [ 'coordinates' =>\n [ '$near' =>\n [ 'type' => 'Point', 'coordinates' => [116, 24.491] ],\n '$spherical' => true, '$maxDistance' => 100 ],\n ])->get()\n. ",
    "zhang-wenchao": "sorry\n. @pi0  I can not do that\uff0c_id am the restful api user key.\n. ",
    "kiwina": "maybe $this->makeVisible\nPS: you'll have to copy it from the normal laravel model as its not yet implemented\n. ",
    "jversmis": "It seems I can't get this to work.\nWhen using dev-master branch, I get the error: Call to a member function all() on array\nThe error is thrown in Illuminate\\Database\\Eloquent\\Builder->getModels()\nThis function is called by\nphp \nreturn $query->get()->toArray();\nwhere $query is an instance of JensSegers\\Mongodb\\Eloquent\\Builder.\nAt the moment of writing, the getModels function looks like this:\nphp\npublic function getModels($columns = ['*'])\n{\n    return $this->model->hydrate(\n        $this->query->get($columns)->all(),\n        $this->model->getConnectionName()\n    )->all();\n}\nSince $this->query->get($columns) return an array, $this->query->get($columns)->all() throws the error Call to a member function all() on array\nRemoving the ->all() from $this->query->get($columns)->all() fixes the issue.\nWhen using a stable version (3.1.3 at the moment of writing), I run into the non-public operators issue.\nAny ideas on how to solve this?. Back from holidays :-)\nSome extra info, I'm using this package standalone.\nThe class Jenssegers\\Mongodb\\Query\\Builder check in the constructor if it should use collections or not.\n/**\n     * Returns true if Laravel or Lumen >= 5.3\n     *\n     * @return bool\n     */\n    protected function shouldUseCollections()\n    {\n        if (function_exists('app')) {\n            $version = app()->version();\n            $version = filter_var(explode(')', $version)[0], FILTER_SANITIZE_NUMBER_FLOAT, FILTER_FLAG_ALLOW_FRACTION); // lumen\n            return version_compare($version, '5.3', '>=');\n        }\n    }\nSince the app function doesn't exist, shouldUseCollections returns null and arrays are used. For testing, I've added return true; as the first line in the above function and running unit tests gives all green results again.\nI don't have a solution yet. I suppose a dirty solution could be to create an app function in my project and have app()->version(); return true. Not the prettiest solution but it would work for now.\nUpdate\nTested with this little function added to my code and everything seems to work fine now. Again, not the prettiest solution but it's acceptable for my situation at the moment.\n```\nfunction app()\n{\n    return new class {\n        public function version()\n        {\n            return '5.4';\n        }\n    };\n```. @mohitbhatia1994 \nYou can add the function anywhere in your project. Don't add it in the plugin code since any update of the plugin will erase the code again.\nIf you use any kind of framework, maybe you can add it in the bootstrap file. I've added it in a utils folder in the root of the project and load it through the autoload > file option in my composer.json. @mohitbhatia1994 anonymous classes are a PHP 7 feature.\nYou can just use a named class, instantiate it and it should work.\nFor more info: http://php.net/manual/en/language.oop5.anonymous.php. @mohitbhatia1994 in that case, just use a named class instead of an anonymous class. @mohitbhatia1994 \nHaven't tested it myself but that seems correct to me. Does it work?. ",
    "mohitbhatia1994": "Same problem as @jversmis @pi0  . @jversmis thanks for your input. would you mind telling me the right position to input the app() function. I am getting an syntax error when I included app function about shouldUseCollections.. @jversmis understood. Still this line return new class { giving a syntax error.. @jversmis I am using php 5.6. @jversmis Is this right way to convert that code in php5.6?\n```\nclass temp {\n    public function version()\n        {\n            return '5.4';\n        }\n}\nfunction app()\n{\n    return new temp();\n};\n```\n. ",
    "dyfire": "@mohitbhatia1994 u can do like this,\ncomposer.json add \n\"files\": [\n      \"app/helpers.php\"\n    ]\nthen add file app/helpers.php ,code like this,\nif (!function_exists('app')) {\n    function app()\n    {\n        $normal = new Normal();\n        return $normal;\n    }\nclass Normal\n{\n    public function version()\n    {\n        return '5.4';\n    }\n}\n\n}\ncomoser update, then u find that it works.. ",
    "Idnan": "@pi0 yep i know about this one. But i have a different scenario. I have both migrations for mysql and mongodb. \nNow i want a model MysqlMigration and MongoMigration or something like this. \nSo if the migration is extended from MysqlMigration then the migration history should save in mysql.\nAnd if the migration is extended from MongoMigration then the migration history should save in mongodb.\n. I got it resolved by using the --database & --path on the artisan migrate command.\n. @ysb yes but the library has a method truncate which should logically truncate the data than dropping the collection. Also here's the commit that fixed it, but I don't know why they reverted the change.. ",
    "tperrelli": "I already use the startOfDate() function to ensure that my date will consider \"00:00:00\".\nYour suggestions would be nice to creation date or timestamp stuff. I'm working with date flight in a cached form fields. When another user do exactly the same query, I need to fetch the same result. So that 's why i really need more precision. :(\n. Using redis will not solve the problem. Another insertion example:\nIf i insert something like: \"2016-10-10 09:10:55\" (Notice that this time i passed a date time), the time is being completely ignored by UTCDateTime and it sets the current time by default.\nIn other words 09:10:55 is not being inserted in the database, only current time. \n. Did you get that?\n. OK. Thanks buddy.\n. ",
    "mostafamaklad": "Try this\n$campaign->countriesDetail()->detach();\nforeach($campaign->countriesDetail() as $countryDetail){\n  $countryDetail->campaign()->detach($campaign)\n}. Please Reopen the issue as there is no commit resolve it yet\n. ",
    "mvtcode": "I solve my problem. final code:\n\nreturn mycollection::raw(function($collection) {\n            return $collection->aggregate([\n               ['$match' => ['name' => $input_param]],\n               ['$group' => [\n                    '_id' => '$name',\n                    'total_time' => ['$sum' => '$total_online'],\n                    'total_home' => ['$sum' => '$home'],\n                    'total_inventory' => ['$sum' => '$inventory'],\n                    'total_shop' => ['$sum' => '$shop'],\n                    'total_spin' => ['$sum' => '$spin'],\n                    'total_lobby_quick' => ['$sum' => '$lobby_quick'],\n                    'total_lobby_normal' => ['$sum' => '$lobby_normal'],\n                    'total_game' => ['$sum' => '$game'],\n               ]]\n            ]);\n        });\n. \n",
    "jalbee": "I would like to know the answer to this as well if anybody cares to respond....\n. ",
    "inklingsofreality": "It's been several months on this. I would like to get results from several different collections that are not related. How might I do that? union should be the solution, but it's not working apparently.. It turns out that union was not what I needed anyways. To combine the two queries I ended up using merge, such as the following:\n$cards = Card::all();\n$stores = Retail::all();\n$result = $cards->merge($stores);\nreturn $result;\nThat chains the two together. I believe union would be if I needed to reference one from the other.. ",
    "SanderSander": "https://github.com/jenssegers/laravel-mongodb/issues/947 ;)\n. ",
    "rajkuttie": "Check your code for Correct Order\n```\n<?php\nnamespace App;\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Eloquent;\n```\n. ",
    "w33ladalah": "I have working solution based on @uriel2707 answers but without editing ignored files inside vendors directory.\nI have modified /app/User.php file.\n```<?php \nnamespace App;\nuse Illuminate\\Notifications\\Notifiable;\nuse Illuminate\\Auth\\Authenticatable;\nuse Illuminate\\Auth\\Passwords\\CanResetPassword;\nuse Illuminate\\Foundation\\Auth\\Access\\Authorizable;\nuse Illuminate\\Contracts\\Auth\\Authenticatable as AuthenticatableContract;\nuse Illuminate\\Contracts\\Auth\\Access\\Authorizable as AuthorizableContract;\nuse Illuminate\\Contracts\\Auth\\CanResetPassword as CanResetPasswordContract;\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Model;\nclass UserAuthenticatable extends Model implements\n    AuthenticatableContract,\n    AuthorizableContract,\n    CanResetPasswordContract\n{\n    use Authenticatable, Authorizable, CanResetPassword;\n}\nclass User extends UserAuthenticatable\n{\n    use Notifiable;\n/**\n * The attributes that are mass assignable.\n *\n * @var array\n */\nprotected $fillable = [\n    'name', 'email', 'password',\n];\n\n/**\n * The attributes that should be hidden for arrays.\n *\n * @var array\n */\nprotected $hidden = [\n    'password', 'remember_token',\n];\n\n}\n```\nHope this will help :). ",
    "baobazbarley": "hello\ni've the same problem and this is working for me.\non app/User.php\nchange this\nuse Illuminate\\Foundation\\Auth\\User as Authenticatable;\nto\nuse Jenssegers\\Mongodb\\Auth\\User as Authenticatable;. ",
    "CihanAksoy": "Solution is \nSchema::connection('mongodb')->create('collectionTest', function(Blueprint $collection)\n        {\n            $collection->expire('createdAt', 60);\n        });\n. ```\nuse Illuminate\\Database\\Eloquent\\Model;\nclass TickTack_Email extends Model\n{\n    protected $connection = 'mongodb';\n    protected $table = 'ticktack_Email';\n    protected $fillable = ['email'];\npublic $timestamps = false;\n\n}\n```\n. Edited :)\n. storage/logs/ is empty\n. Solved. \nChange\nuse Illuminate\\Database\\Eloquent\\Model;\nto\nuse Jenssegers\\Mongodb\\Eloquent\\Model;\n. ",
    "kodekrash": "I can confirm this situation.\nI have a Model with a \"sources\" attribute which is cast as an array. I can fill and manipulate the Model, all the while, \"sources\" is treated as an array.\nHowever, when saving the Model, it is actually stored as \"sources\" : \"[\\\"abcd124\\\"]\",. It should be stored as \"sources\" : [\"abcd1234\"].\nYes, when retrieving the data from the datastore, the Model converts the \"[\\\"abcd1234\\\"]\" string value into an array for the Model instance, but it is stored in a non-conforming manner and is thus not accessible to other tools/etc which expect that document attribute to be an array.\nWhat is the proper method to use to force it to store native structures?. After digging into Eloquent's code a bit more, found this little helpful tidbit in Eloquent/Concerns/HasAttributes.php:\n\n// Next we will handle any casts that have been setup for this model and cast\n// the values to their appropriate type. If the attribute has a mutator we\n// will not perform the cast on those attributes to avoid any confusion.\n\nThus, adding a \"do nothing\" mutator solved the storage format issue in this case:\npublic function setSourcesAttribute($value) {\n   $this->attributes['sources'] = $value;\n}\nIn the end, we have \"sources\" : [ \"test1234\" ] in the datastore as expected.. I believe your issue here is that 'owner' isn't the foreign key for both relationships, and thus, should not be the 2nd parameter in both instances. For MessageSender, it is the local side of the key, and '_id' is the foreign side (Client).. ",
    "srabouin": "Looks like this is a mongo issue, see https://jira.mongodb.org/browse/SERVER-90\n. Had this issue as well, had to leave pagination to left/right only otherwise it would time out on collection with lots of documents... ",
    "hendra1": "I have same problem too..\nthe orderBy doesnt work well with created_at column\n. ",
    "azhard4int": "@hendra1  @ashiqmc , try using the created_at.date instead of the direct created_at column.\nHad the same problem in past, but using the created_at.date as DESC worked.\n. @Vittalks,\nAre you getting the exception for the method ::all(), if so try using the mongodb alpha version 3.1.0.\n. @jenssegers downgrading to v3.2.0 fixed the datetime issue, I am using laravel 5.3.. @staf are you running php 7 or php 5?. @deividaspetraitis @Aragami23  you can use this version of repository if you are using laravel 5.3 with v1.0 branch https://github.com/azhard4int/passport/tree/1.0/src\n. @deividaspetraitis thanks for the update, quite hard to migrate from 5.3 to 5.4 as most of our project dependencies/libraries are not supported for laravel 5.4. ",
    "VirendraArekar": "OrderBy not working for me please help me.\nHotelReview::orderBy('created_at','desc')->get(). ",
    "rasmusdencker": "+1. Rolled back to Laravel v5.3.18, which works. \n. ",
    "kofi1995": "@ahmadazimi Below is the fix to your issue:\nGo to Connection.php which can be found in the Mongodb folder of this package and add these changes:\n1) Add use Jenssegers\\Mongodb\\Schema\\Grammar; right below the use MongoDB\\Client;.\n2) Inside the public function __construct(array $config) function, add $this->schemaGrammar = new Grammar();. It can come before any other code in the function.\nNow head over to the Schema folder and create a new file called Grammar.php. The file should contain this:\n```\n<?php\nnamespace Jenssegers\\Mongodb\\Schema;\nuse Illuminate\\Database\\Schema\\Grammars\\Grammar as BaseGrammar;\n/\n * Class Grammar\n \n * @package Moloquent\\Schema\n /\nclass Grammar extends BaseGrammar\n{\n}\n```\nI found this fix in the moloquent fork of this package (https://github.com/moloquent/moloquent). Hope this helps you.\n. @jenssegers  Looks like it has been fixed in the master branch. Thanks!\n. Looks like you don't have the PHP mongodb extension installed on your system. You need the PHP mongodb driver in order for this package to work. Provide your system environment and I might be able to guide you.\n. ",
    "SkepticalHippo": "This is only required if you're using it with Lumen. There's no need to use $app->withEloquent() in Laravel, nor do you need to register the service provider in your bootstrap file.\nYou only need to add Jenssegers\\Mongodb\\MongodbServiceProvider::class, to your config/app.php. That's it.\n. ",
    "francisrod01": "Haha, now it's fine!\nThanks @SkepticalHippo ! \ud83d\udc4d \n. ",
    "nodekra": "+1\n. ",
    "2128": "+1, please help @jenssegers #adore#. ",
    "candasm": "+1. ",
    "smtaydemir": "+1. ",
    "herzcthu": "@Blizzke Should add to documentation.. Facing same error.. ",
    "Blizzke": "Should add what to the documentation? This just is a bugfix imo, it's not new fuctionality. ",
    "sharkreader": "Follow the instructions at http://php.net/manual/en/mongodb.installation.php for the driver installation, and visit the Laravel Version Compatibility section at https://github.com/jenssegers/Laravel-MongoDB#schema to be sure your version of Laravel is compatible with the version of jenssegers/laravel-mongodb package you installed.\n. ",
    "BlakeGardner": "@pi0 It matters because some software developers work for companies with legal departments that have to do checks on any software component used for compliance reasons. If there is no license attached then adoption of the library would be impossible without clarification in writing.\nTL;DR Legal is a good resource as well.\n. ",
    "raghav-g": "@jenssegers It would be great if you can register with MIT and add a LICENSE.MD to your library.. ",
    "yorci": "i changed my data, move date to root document and add this line on my model file \"protected $dates = ['created_at', 'updated_at', 'datetime']\" and then try to update all document and move date from child doc. to root but its not working when you use eloquent update method, then i delete document and create again with root datetime field. its worked for me. \n. I realized that its about \"orderBy\" method, when i use orderBy its return me slower result and if i try to get after 45th pages, throw that error. . i resolve memory limit exceeded error with creating index to column of sorting, but its still give me slow response.. ",
    "isnoor": "Assumption collection name is Event .\nuse Event->save() not  Event::insert($array) .\nAlso add line \"protected $dates = ['created_at', 'updated_at', 'datetime']\" on model file. ",
    "guney": "Here is the solution I found: I implemented all of the interfaces that Illuminate\\Foundation\\Auth\\User implements and used the same traits it uses. So I finally be able to extend Jenssegers\\Mongodb\\Eloquent\\Model from my User model. I kinda bypassed Auth\\User with this solution. This is the final version of User:\n``` php\n<?php\nnamespace App;\nuse Illuminate\\Auth\\Authenticatable;\nuse Jenssegers\\Mongodb\\Eloquent\\Model;\nuse Illuminate\\Notifications\\Notifiable;\nuse Illuminate\\Auth\\Passwords\\CanResetPassword;\nuse Illuminate\\Foundation\\Auth\\Access\\Authorizable;\nuse Illuminate\\Contracts\\Auth\\Authenticatable as AuthenticatableContract;\nuse Illuminate\\Contracts\\Auth\\Access\\Authorizable as AuthorizableContract;\nuse Illuminate\\Contracts\\Auth\\CanResetPassword as CanResetPasswordContract;\nclass User extends Model implements AuthenticatableContract, AuthorizableContract, CanResetPasswordContract\n{\n    use Notifiable, Authenticatable, Authorizable, CanResetPassword;\n/**\n * The attributes that are mass assignable.\n *\n * @var array\n */\nprotected $fillable = [\n    'name', 'email', 'password',\n];\n\n/**\n * The attributes that should be hidden for arrays.\n *\n * @var array\n */\nprotected $hidden = [\n    'password', 'remember_token',\n];\n\nprotected $casts = [\n    'user_meta' => 'array',\n];\n\npublic function posts()\n{\n    return $this->hasMany(Post::class);\n}\n\n}\n```\n. ",
    "Xplouder": "+1\n. ",
    "pankajadhyapak": "i think you have not extended the User model to use Jenssegers\\Mongodb\\Eloquent\\Model; instead of Eloquent model\n. My DB Config file \n'atlas' => [\n            'driver'   => 'mongodb',\n            'host'     => [\n                            'example-shard-00-00-zhvkn.mongodb.net:27017',\n                            'example-shard-00-01-zhvkn.mongodb.net:27017',\n                            'example-shard-00-02-zhvkn.mongodb.net:27017'\n                          ],\n            'database' => 'exampleDB',\n            'username' => 'example',\n            'password' => 'example',\n            'options'  => [\n                'replicaSet' => 'example-shard-0',\n                'ssl' => 'true',\n                'authSource' => 'admin'\n                ]\n        ],\n. ",
    "emkays2000": "I have the same issue. Any updates on above, anyone?. ",
    "yuchao86": "other solved\uff1a\nadd the\n'database' => 'admin' \nto the options subsets\uff01\uff01\n'mongodb' => [\n    'driver'   => 'mongodb',\n    'host'     => env('DB_HOST', 'localhost'),\n    'port'     => env('DB_PORT', 27017),\n    'database' => env('DB_DATABASE'),\n    'username' => env('DB_USERNAME'),\n    'password' => env('DB_PASSWORD'),\n    'options' => [\n        'database' => 'admin' // sets the authentication database required by mongo 3\n    ]\n],\n. ",
    "lokitold": "I worked that way\n\n'mongodb' => [\n   'driver' => 'mongodb',\n   'host' => env('DB_HOST', 'localhost'),\n   'port' => env('DB_PORT', 27017),\n   'database' => env('DB_DATABASE'),\n   'username' => env('DB_USERNAME'),\n   'password' => env('DB_PASSWORD'),\n   'options' => [\n        'database' =>  env('DB_DATABASE') // sets the authentication database required by mongo 3\n    ]\n],\n\n. ",
    "xuyanjin": "update database.php\nphp\n'mongodb' => [\n            'driver' => 'mongodb',\n            'host' => [env('MONGODB_SERVER01'), env('MONGODB_SERVER02'), env('MONGODB_SERVER03')],\n            'database' => env('MONGODB_DATABASE'),\n            'username' => env('MONGODB_USERNAME'),\n            'password' => env('MONGODB_PASSWORD'),\n            'options' => [\n                'database' => env('MONGODB_DATABASE'),//\u4e0d\u52a0\u5bfc\u81f4auth fail\n                'replicaSet' => env('MONGODB_REPLICASET')//'yunpanrs'\n            ]\n        ],\nbecause in 'jenssegers\\mongodb\\src\\Jenssegers\\Mongodb\\Connection.php' line 176\n```php\nprotected function getDsn(array $config)\n    {\n        // Check if the user passed a complete dsn to the configuration.\n        if (!empty($config['dsn'])) {\n            return $config['dsn'];\n        }\n    // Treat host option as array of hosts\n    $hosts = is_array($config['host']) ? $config['host'] : [$config['host']];\n\n    foreach ($hosts as &$host) {\n        // Check if we need to add a port to the host\n        if (strpos($host, ':') === false && !empty($config['port'])) {\n            $host = $host . ':' . $config['port'];\n        }\n    }\n\n    // Check if we want to authenticate against a specific database.\n    $auth_database = isset($config['options']) && !empty($config['options']['database']) ? $config['options']['database'] : null;\n\n    return 'mongodb://' . implode(',', $hosts) . ($auth_database ? '/' . $auth_database : '');\n}\n\n```. ",
    "ydaniels": "@lokitold  uriel2707  it should be added to the docs.\nInstead of 'database' => admin. ",
    "kurtulik": "I have same problem. PHP 7 Laravel 5.3. Schema migration is ok or get data is failed no error only stop all code.. ",
    "mdd1704": "I have same problem too. HHVM 3.19.2 Laravel 5.4. . ",
    "michaeljdufresne": "+1 Same issue, has() or whereHas() give the same results.. ",
    "ebrahimradi": "+1. ",
    "Dmitry-Kucher": "+1. ",
    "tuwid": "@manojnegii90 can you put more data ? Your full stack, some code snippets , what have you tried and so ?\nPeople here cant read minds yet and fortunetelling wont work either... ",
    "Wu4m4n": "I have the same issue.\nBadMethodCallException in Builder.php line 2450:\nCall to undefined method Jenssegers\\Mongodb\\Query\\Builder::remember()\nthe query \n$query = ModelMongo::where('field',$product)->remember(10)->get();\nif I dont use the remember function work great!\n. I have the same issue! \nrelated issue : #1040. I have the same issue.. I found the Solution for this error.\nYou have to use this  \n$db = \\DB::connection('mongodb')->getMongoClient();\nand mongodb is the name that you use in the config/database.php \n. I have the same issue.\nTo fix this I use\nwhere($dateField,'>=',$begin)->where($dateField,'<=',$end)\nand works great!. ",
    "m-vdv": "@jenssegers Any update on this? Thanks \ud83d\udc4d . ",
    "notflip": "+1. ",
    "banqhsia": "I guess you've already figured out that solutions in these years? (maybe not?)\nI have a same question that ->increment() can't update nested object.\nSince I can update a nested object through the shell, I wrote a raw expression below: \n$result = Article::raw(function($collection) use ($request){\n\n    return $collection->findOneAndUpdate([\n        '_id' => new \\MongoDB\\BSON\\ObjectID ($request->_id),\n    ], [ '$inc' => [ 'stats.likes' => 1 ] ] );\n\n});\n\nNotice that you may have effect with db.articles.update(), but the Mongo\\Collection doesn't have a method named update(), use findOneAndUpdate, or others instead. (UpdateMany, UpdateOne)\nAnd if the where condition contains _id, you have wrap your id variable with \\MongoDB\\BSON\\ObjectID object in the case of raw expression.. How does it not working? \nThough you've use that class, have you extend it correctly? \nclass User extends Authenticatable { }.\n",
    "F1NaL": "As i understand this behavior from https://github.com/jenssegers/laravel-mongodb/issues/97\nMb add flag for disable Protect ?. ",
    "ahren-condos-ca": "i have an index on the orderby column and am still getting this error. Working on a Table that has over 2 Million rows and is several GB's of data. how is this closed if it never got resolved?. I had a similar problem. \nusing the protected $dates = ['entry_date']; only worked for Date fields that where not nested.\nThis is the workaround I found that is now working for me. I created an Observer on \"saving\" of my model that casts any nested date fields using the below function and these then save in the correct format\n/**\n     * Returns the date as required by dates format in MongoDB\n     *\n     * @param   string $date The string to check\n     * @return  string\n     */\n    function get_mongo_date($date)\n    {\n        if ($date instanceof \\MongoDB\\BSON\\UTCDateTime)\n        {\n            return $date;\n        }\n        else if ($date instanceof \\Carbon\\Carbon)\n        {\n            return new \\MongoDB\\BSON\\UTCDateTime(new DateTime($date->toDateTimeString()));\n        }\n        else\n        {\n            return new \\MongoDB\\BSON\\UTCDateTime(new DateTime($date));\n        }\n    }. I had the same problem. \nusing the protected $dates = ['entry_date']; only worked for Date fields that where not nested.\nThis is the workaround I found that is now working for me. I created an Observer on \"saving\" of my model that casts any nested date fields using the below function and these then save in the correct format\n/**\n     * Returns the date as required by dates format in MongoDB\n     *\n     * @param   string $date The string to check\n     * @return  string\n     */\n    function get_mongo_date($date)\n    {\n        if ($date instanceof \\MongoDB\\BSON\\UTCDateTime)\n        {\n            return $date;\n        }\n        else if ($date instanceof \\Carbon\\Carbon)\n        {\n            return new \\MongoDB\\BSON\\UTCDateTime(new DateTime($date->toDateTimeString()));\n        }\n        else\n        {\n            return new \\MongoDB\\BSON\\UTCDateTime(new DateTime($date));\n        }\n    }. ",
    "juanf": "Nevermind, if you add these snippets of code it works.\n```\nuse Illuminate\\Notifications\\Notifiable;\nclass User extends Eloquent implements AuthenticatableContract, CanResetPasswordContract\n{\n    use Notifiable;\n    ...\n```. ",
    "altugyavuz": "I also had the same problem, I was using the latest version of php_mongodb.dll (1.2.1).\nChanged and worked with version 1.1.10.\nupdated : Unfortunately, this solution solves the problem temporarily. I want to install the latest version of php_mongodb.dll when I want to do composer update. With no doubt, I think the problem is that the mongo server and xampp are different versions (x86 - x64). While the Mongo server is x64, xampp is using x86 and naturally php_mongodb.dll is using x86 version. When I installed the x64 version of wamp server and downloaded php_mongodb.dll x64 1.2.1, I did not encounter any problems.. I'm using this way to in my project;\nuse MongoDB\\BSON\\Decimal128;\n....\n....\n$record->yourField = new Decimal128($yourValue);\n....\n$record->save();. ",
    "nolanle": "Thanks men! I'm done! This is work when run in x64 Server. ",
    "anghelalexandra": "I temporarily solved the problem by using an older PECL mongodb version (1.1.9). There was an update to version 1.2.0 on November 29th, which is why the mongo-php-library also got updated.\nI did the following:\npecl uninstall mongodb\npecl install mongodb-1.1.9\nAfter this, 'composer update' worked.. ",
    "orrd": "These issues aren't really related to Laravel MongoDB specifically.  They're just issues with enabling the PHP MongoDB extension in general.  You might find more info at http://php.net/manual/en/mongo.installation.php.. The first error is \"PHP Warning: PHP Startup: Unable to load dynamic library '/usr/lib/php/20160303/mongodb.so'\".  Just running \"php\" by itself will probably generate that warning if that's the case, so that probably is happening long before any Laravel MongoDB even gets touched. This project will work with the latest MongoDB extension (I'm using 1.2.3, which is currently the latest one).\nThe issues mentioned on this page are because of an issue with the installation of the PHP Mongo extension.  I would still try to give you some advice on how to fix that, but I'm not sure if the exact fix.  Basically PHP isn't able to find the mongodb.so in the folder it's looking in.  Either it doesn't exist, or the .ini files aren't set to find it in the right place.. ",
    "peimn": "You are wrong @orrd ,\nLaravel MongoDB should update himself for compatibility with latest PHP's MongoDB ext version  . ",
    "lvqingan": "with millions of records pagination took very long time ....... ",
    "san4io": "Yes, this is issue, with millions of records total aggregation is slow.\n@jenssegers is there any plans to count totals with count instead of aggregation?\nOfcourse, it is possible to write custom paginator, but still I'm wondering do you have this issue in to-do list.. ",
    "renegadeirfan": "mongodb is used for performance mainly, but using aggregate instead of find is killing the purpose.\n+1 . ",
    "josemiguelq": "@limen , @srabouin ,  @jenssegers \nhttps://github.com/jenssegers/laravel-mongodb/pull/1695. You can use the php function iterator_to_array($resultOfQueryRaw)\nthat will return array with MongoDB\\Model\\BSONDocument objects then you do what you need.. Mongo implement Sesion \nin mongo driver 1.4.0 an 1.3.2 was implemented too\nSo thats the code \n```php\n /\n     * Create options for executing the command.\n     \n     * @see http://php.net/manual/en/mongodb-driver-server.executequery.php\n     * @return array\n     /\n    private function createOptions()\n    {\n        $options = [];\n    if (isset($this->options['readPreference'])) {\n        $options['readPreference'] = $this->options['readPreference'];\n    }\n\n    if (isset($this->options['session'])) {\n        $options['session'] = $this->options['session'];\n    }\n\n    return $options;\n}\n\n```\nAs you can see now the we have createOptions() with session.\nSolution\nInstall mongo driver 1.4.0 \nOr\nin composer.json use dependency\njson\n\"require\":{\n\"mongodb/mongodb\": \"1.2.*\",\n}\n. ",
    "wrzhao1987": "I'm facing the same problem just as what leadsoft said. The $connection property will be set to null when data is not found. In my environment the default connection is mysql, so an instance of Illuminate\\Database\\MySqlConnection is given. Hope this bug can be fixed in the future.. ",
    "majuansari": "Any update on this ?. @DMNSteve  Thank you. Seems like this has not been merged to the repo. Is there anyway I could use this or fix issue without editing the passport codebase ? . Any particular reason why your pull request is not merged ? . ",
    "imuneer": "setting 'replicaset' in the option worked for me and solve my issue getting the error message 'no master\". ",
    "jsertx": "I don't understand how to solve the style check, can anyone explain to me?. ",
    "whiterook6": "+1. ",
    "kayrules": "Hi @slakr007, did you managed to fix this? \nI'm facing the same issue now.. ",
    "slakr007": "No, sorry, I ultimately gave up on using MongoDB and went back to PostgreSQL.  MongoDB was not working for my needs anyway.. ",
    "FarmerNeil": "@jenssegers as a follow up to @dmitov's comment, any idea when there will be an official release to support notifications?. ",
    "deviouspk": "@jenssegers could you please release an official version with this merged? Would really appreciate it :). Actually after reviewing it i think it would be better extend the notifiable trait and to remove the hasDatabaseNotifications. The implementation would then look like this:\n```\nuse Foundation\\Models\\MongoDatabaseNotification;\ntrait Notifiable\n{\n    use \\Illuminate\\Notifications\\Notifiable {\n        \\Illuminate\\Notifications\\Notifiable::notifications as baseNotificationsMethod;\n    }\npublic function notifications()\n{\n    if (config('database.default') === 'mongodb') {\n        return $this->morphMany(MongoDatabaseNotification::class, 'notifiable')\n            ->orderBy('created_at', 'desc');\n    }\n    return $this->baseNotificationsMethod();\n}\n\n}\n``\n. I was going to submit a pull request that fixes this aswell. @jenssegers should we check if the primary key is actually set aswell? Or are there usecases for inserting records that do not have a primary key set?.Model::all()->where('Besitzer','$eq','bla bla');`\nthat is pretty bad. It retrieves all possible models from the database first and then filters it based on your where statement. Can you post the error you are getting?. Mongodb does not support schema's like you are defining them. \nCheck the documentation for supported operations:\n\nyour drop statement should work though\n. did you register the observer (for example in a service provider)?\nClnVehicle::observe(ClnVehicleAlertsObserver::class);. you mean log the mongodb queries? or store the telescope logs in mongodb?\nThe first is easy you need to enable the query log:\nDB::connection('mongodb')->enableQueryLog();\nthe second is harder. Its probably more than writing a \"storage adaptor\" since the package might use some raw sql queries :s\nWorst case scenario you might have to fork the package & dive into the code\n. ",
    "vladshoob": "It is still not a part of jenssegers/laravel-mongodb for some strange reason.\nEventually sorted it out for temp solution. Should create custom class and traits as per pull request provided and use this custom Notifiable class in order for Laravel Notifications to work. . ",
    "bstanescu": "Good point (pun intended \ud83d\ude04 ). Done.. For a quicker/cleaner fix, explicitly set the connection name on your related non-mongodb model (MySQL)\nphp\nclass User extends Eloquent {\n    protected $connection = 'mysql';\n}\n\nIn more detail:\nThe issue seems to reside in the newRelatedInstance method in Eloquent\nThe problem starts here:\nJenssegers\\Mongodb\\Eloquent\\HybridRelations@belongsTo, line 141:\nphp\n139        // Check if it is a relation with an original model.\n140        if (! is_subclass_of($related, \\Jenssegers\\Mongodb\\Eloquent\\Model::class)) {\n141            return parent::belongsTo($related, $foreignKey, $otherKey, $relation);\n142        }\nThen it reaches \nIlluminate\\Database\\Eloquent\\Concerns\\HasRelationships@belongsTo\nphp\n106        $instance = $this->newRelatedInstance($related);\nAnd then in the same file, at line 489: \nphp\n485    protected function newRelatedInstance($class)\n486    {\n487        return tap(new $class, function ($instance) {\n488            if (! $instance->getConnectionName()) {\n489                $instance->setConnection($this->connection);\n490            }\n491        });\n492    }\nBut since $instance->getConnectionName() on your mysql related model has no connection set (works on the default connection so $connection is set to null), the newly created mysql model will have the connection improperly set to mongodb, which leads to issues.. If you are using multiple mongo connections (eg: for different models), or use a different name for the mongo connection then the above fix needs a bit of tweaking. Try the following instead (it uses the builder's model's connection, as it should):\n```php\nuse Jenssegers\\Mongodb\\Eloquent\\Builder;\n...\npublic function register() {\n    Builder::macro('getName', function() {\n        return $this->getModel()->getConnectionName();\n    });\n}\n```. ",
    "stonkeep": "Not yet. Worked for me.\nMaybe you need to do the switch before run \"make:auth\". ",
    "gowebvision": "I just did clean installation and getting the same problem here.. \n\nThanks for respond. I implemented changes and still getting error.. ",
    "litofunes": "It worked for me too. ",
    "nicoit": "get() does not return the model , was missing first() or alike. ",
    "manojsb": "@xparthx its already out. ",
    "alasdairmackenzie": "It's happening because $operators in the parent class BaseBuilder was set to public 21 days ago. This happened in the commit \"get rid of ridiculous mutations on query builder\" by @taylorotwell https://github.com/laravel/framework/commit/bd0e8952dc73b11fe9a7d5b019161ac22f93cf78 .\nNot sure why Taylor changed this but I fixed the issue by setting $operators to public in Jenssegers\\Mongodb\\Query\\Builder. I don't want to create a pull request without knowing why @taylorotwell changed it. Can you take a look at this @jenssegers please?. ",
    "hussainweb": "Thanks for the issue. I came to the same conclusion. However, I think we still have to change the access specifier despite the reason. I created a PR for this.. Just an update - I changed this manually in my application and it now works properly.. @jenssegers, no, it won't. Access level can get weaker but not stronger.\nI tested this here: https://3v4l.org/9BVb9. ",
    "artdarek": "Have the same error... \n$this->otherKey has to be renamed to $this->ownerKey in Jenssegers/Mongodb/Relations/BelongsTo.php. Hi, i have created new pull request with just one commit -> #1118. ",
    "vincentri": "yeah, I already solve it by change this. Hope Jenssegers update it soon. Sorry already solved\nThank you\nSent from my iPad\nOn Feb 14, 2017, at 21:15, Jens Segers notifications@github.com<mailto:notifications@github.com> wrote:\nThere seems to be something wrong with your PR?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/jenssegers/laravel-mongodb/pull/1089#issuecomment-279717916, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AQA7gkrKAkekiQCy7IhyqQIUcCL81umIks5rcbcTgaJpZM4LtQC9.\n. ",
    "Suhkha": "Nevermind I just put the mongodb extension in my php.ini and then the installation was successfully,. ",
    "Maxeee09": "Same issue here !. The issue seems to appear when you are using HybridRelations Trait : \npublic function customer()\n    {\n        return new \\Jenssegers\\Mongodb\\Relations\\BelongsTo(Customer::query(), $this, 'customer_id', 'id', 'cutomer');\n    }\nwork but, \npublic function customer()\n    {\n        return $this->belongsTo(Customer::class);\n    }\ndon't work.\nI think Trait usage could be the problem since Laravel Model use Concerns\\HasRelationships Trait.. ",
    "rutcreate": "Is there any work around?. ",
    "danielwaghorn": "I experience this issue when I try and access a belongsTo relation from the MongoDB Model (Invoice) which references a MySQL Model (Customer). The relation works the other way around i.e. MySQL to MongoDB fine:\n```\nApp\\Customer::find(1000)->invoices;\n    => Illuminate\\Database\\Eloquent\\Collection ...\nApp\\Invoice::find('58b4beb78295c4b5f1590292')->customer;\n    PHP error:  Call to a member function compileSelect() on null in .../vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php on line 1650\n``` \nLaravel 5.4 with \"jenssegers/mongodb\": \"^3.2\". ",
    "dannysuryadi": "\npublic function customer()\n    {\n        return new \\Jenssegers\\Mongodb\\Relations\\BelongsTo(Customer::query(), $this, 'customer_id', 'id', 'cutomer');\n    }\n\nThanks for this fix, can confirm it works nicely.. ",
    "markszymik": "@dannysuryadi @Maxeee09 yep, it worked ok!. >  Our goal is to provide higher quality support/bugfixes with fresh and additional features.\nIt's simply not true. And there's lack of support.\nFor example issue with Laravel 5.4 compatibility wasn't resolved by them - they are/were waiting for main repo to be updated.\nI've wasted a lot of time with moloquent/moloquent and went to back to the jenssegers/laravel-mongodb (support it's not great, but community is more engaged).\n. ",
    "ShaneWilton": "\u2764\ufe0f \ud83d\udc9a \ud83d\udc99 \ud83d\udc9b \ud83d\udc9c. ",
    "MarceloBFreitas": "I was with this same error, which I did was as follows, I installed the latest version of the driver with threadsafe for the phpinfo () platform, in my case the 86x, after that the composer worked without problem. ",
    "MightyPork": "Here's a patch I used to temporarily fix this\n```patch\n--- vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Schema/Builder.php.orig    2017-02-03 19:08:43.684919355 +0100\n+++ vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Schema/Builder.php 2017-02-03 19:08:14.395483413 +0100\n@@ -128,6 +128,19 @@\n         return $blueprint->drop();\n     }\n\n/**\n\n\nDrop a collection from the schema, if present.\n\n\n*\n\n\n@param  string  $collection\n\n\n\n\n@return void\n\n\n*/\npublic function dropIfExists($collection)\n{\nif ($this->hasCollection($collection)) {\n$this->drop($collection);\n}\n}\n+\n     /**\nCreate a new Blueprint.\n  *\n```. @migaliza This doesn't belong here, but - here's some ideas:\n\n\nmake sure you have use Jenssegers\\Mongodb\\Schema\\Blueprint; in the migration file\ncheck that you selected mongodb as the DB to use in the config file\n\n\"can't do php artisan migrate\" is really vague, next time please post the actual error you got.. a year and half later, I'm still using my \"temporary\" patch. @jenssegers is this closed because it's fixed, or...?. ",
    "migaliza": "How were you able to connect to the database in the first place. I can't do php artisan migrate. COuld you please help?. Thank you @MightyPork. Here is the exact error I am getting:\n[Symfony\\Component\\Debug\\Exception\\FatalThrowableError]\nParse error: syntax error, unexpected '('. I solved this. I just had to update Jenssegers\\Laravel package. . ",
    "haobird": "@MightyPork  your answer is useful. ",
    "nutto": "I think it is better to replace dropIfExists with drop in your migrations or implement the dropIfExists logic using drop and hasCollection method like @MightyPork in your migrations.. ",
    "lbnlbn1234": "@MightyPork I have the same problem.I replace Schema::dropIfExists() with Schema::drop() , and it works.. try replace Schema::dropIfExists() with Schema::drop(). ",
    "phuocduy1988": "Thank Wu4m4n,\nI found other solution.\nI custom other class to connect direct to mongodb via php driver mongodb/mongodb.. ",
    "estebanprimost": "Hi @jenssegers, of course. My collection Response has an attribute named like words_id, that holds an array of Mongo's ObjectId that represents the _id of a word document. \nCollections as JSON:\n```\n// Response collection document\n{\n  _id: '58a86d72aef73451484710d8',\n  words_id: ['542c2b97bac0595474108b48', '507f191e810c19729de860ea'],\n  ...\n}\n// Word collection document\n{\n   _id: '542c2b97bac0595474108b48'\n   name: 'Blahblah'\n   ...\n}\n```\nIn the Word Model I have a belongsToMany relationship defined as:\npublic function responses() {\n    return $this->belongsToMany('App\\Models\\Response', '_id', 'words_id');\n}\nThose relationship not working with current configuration. So I made a little change in the Builder.php class to allow me work with this schema. Test are not passing, but I think it's because other problem with tests itself. I want to see if this change broke something else.\nThanks and sorry for my English.\n. ",
    "JanisOzolins": "@acidjazz I had several issues I was dealing with while trying to establish the connection between Laravel and my MongoDB. But the two main faults were:\n\nwrong authentication database in your config/database.php file\nincorrectly extended User class\n\nCurrently, this is how my model class looks like:\n```php\n<?php\nnamespace App;\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Eloquent;\nclass User extends Eloquent {\n    protected $collection = \"users\"; // specify the name of your collection within your Mongo database\n}\n```. SOLUTION\nAt the time of writing this comment, this extension does not fully support Laravel 5.4. If you are having similar problems with model class relationships, remember that, as of Laravel 5.4, plain class names will not work anymore. If you reference your class anywhere in your application, you need to specify which namespace it belongs to.\nSo in this embedsMany case, it would be:\nreturn $this->embedsMany('App/Condition');\ninstead of:\nreturn $this->embedsMany('Condition');\n. This mongodb connection array needs to go inside the config/database.php file not config/app.php,  among other connection that can be found there.\nAlso, change protected $connection = 'jobtest'; to protected $connection = 'mongodb';\nHave you set your app to use mongodb in your config/database.php file? It should be like this: 'default' => env('DB_CONNECTION', 'mongodb'),\nAnd turn on your DEBUG mode in the config/app.php file for mode detailed error messages by changing this line: 'debug' => env('APP_DEBUG', true),\n. Same problem here, any fixes for this? @jenssegers . ",
    "dasjet": "Done\n$deleted = Lead::raw()->findOneAndUpdate(\n            ['user_id' => $user_id, 'leads.id' => $list_id,\n            ['$pull' => [\"leads.$.data\" => [ 'id' => [ '$in' => ['589d5012992df10c4c007e78', '589d6155992df10c4c007e7d' ] ] ]]]\n        );. > Same problem here.. Any solution?. Same problem here, any fixes for this? @jenssegers. ",
    "elghobaty": "@jenssegers @macdabby 4 byte integer overflow?!\nmicrotime(true) = 1487826998.2899\nmicrotime(true) * 1000 = 1487826998289.9\nround(microtime(true) * 1000) = 1487826998290\n(int) round(microtime(true) * 1000) = 1768313874\nnew UTCDateTime((int) round(microtime(true) * 1000)) will evaluate to a 1970-ish date.. ",
    "netcode": "Yea , it will be more readable :+1: . ",
    "coreywelch": "I'm seeing this same issue. I'm seeing the fields listed as hidden in the object, but they aren't being removed from the actual data array.. You can find model relationships in Laravel here:\nhttps://laravel.com/docs/5.5/eloquent-relationships\nHere is a good read about using MongoDB relationships:\nhttps://docs.mongodb.com/manual/tutorial/model-embedded-one-to-one-relationships-between-documents/\nMongoDB Data Modeling concepts:\nhttps://docs.mongodb.com/manual/core/data-model-design/. ",
    "Siebov": "@jenssegers still not fixed?. Hey, guys! \nIt's realy good qquestion. \nHow can I run  totally raw query? \nNeed something like \nDB::statement('db.proposals.createIndex( { summary: \"text\", content: \"text\", title: \"text\" } )');\n@jenssegers . @saeedvaziry \nhttps://github.com/jenssegers/laravel-mongodb/wiki/Creating-Full-Text-Index-With-Laravel-Migration-Using-Moloquent\nHere is the answer) . @behnamazimi I don't remember((( \nIt seems it was somthing wrong with relation on my side, try to check it. \nI've searched along my project for whereHas() and found on;y this \nphp\n$contribution = $this->contribution\n                ->with(['proposal'])\n                ->where('_id', $id)\n                ->whereHas('proposal', function ($q) {\n                    $q->where('user_id', Auth::id());\n                })\n                ->firstOrFail();. ",
    "BigKuCha": "same issue,need help~~ \ud83c\udd98 . ",
    "misterion": "Same problem here . ",
    "natanshalva": "Any solution?. works for me :)  thanks . ",
    "Jchang0210": "Same problem here. ",
    "kcleveland": "Same issue here as well. Any fix planned?\n---Updated with Solution---\nI was able to make this work by making some changes to the Moloquent PasswordBrokerManager.php and DatabaseTokenRepository.php files:\nPasswordBrokerManager.php:\n\nnamespace Moloquent\\Auth;\nuse Illuminate\\Auth\\Passwords\\PasswordBrokerManager as BasePasswordBrokerManager;\nclass PasswordBrokerManager extends BasePasswordBrokerManager\n{\nprotected function createTokenRepository(array $config)\n{\n\n    $key = $this->app['config']['app.key'];\n\n    if (\\Illuminate\\Support\\Str::startsWith($key, 'base64:')) {\n        $key = base64_decode(substr($key, 7));\n    }\n\n    $connection = isset($config['connection']) ? $config['connection'] : null;\n\n    return new DatabaseTokenRepository(\n        $this->app['db']->connection(),\n        $this->app['hash'],\n        $config['table'],\n        $this->app['config']['app.key'],\n        $config['expire']\n    );\n}\n\n}\n\nDatabaseTokenRepository.php:\n\nnamespace Moloquent\\Auth;\nuse DateTime;\nuse DateTimeZone;\nuse Illuminate\\Auth\\Passwords\\DatabaseTokenRepository as BaseDatabaseTokenRepository;\nuse MongoDB\\BSON\\UTCDateTime;\nclass DatabaseTokenRepository extends BaseDatabaseTokenRepository\n{\n    /\n     * Build the record payload for the table.\n     \n     * @param string $email\n     * @param string $token\n     \n     * @return array\n     */\n    protected function getPayload($email, $token)\n    {\n        return ['email' => $email, 'token' => $this->hasher->make($token), 'created_at' => new UTCDateTime(time() * 1000)];\n    }\n/**\n * Determine if the token has expired.\n *\n * @param array $token\n *\n * @return bool\n */\nprotected function tokenExpired($createdAt)\n{\n    // Convert UTCDateTime to a date string.\n    if ($createdAt instanceof UTCDateTime) {\n        $date = $createdAt->toDateTime();\n        $date->setTimezone(new DateTimeZone(date_default_timezone_get()));\n        $createdAt = $date->format('Y-m-d H:i:s');\n     } elseif (is_array($createdAt) and isset($createdAt['date'])) {\n        $date = new DateTime($createdAt['date'], new DateTimeZone(isset($createdAt['timezone']) ? $createdAt['timezone'] : 'UTC'));\n        $date->setTimezone(new DateTimeZone(date_default_timezone_get()));\n        $createdAt = $date->format('Y-m-d H:i:s');\n    }\n\n    return parent::tokenExpired($createdAt);\n}\n\n}\n\nSee previous discussion on this issue here.. ",
    "Brutalbeard": "Test the above and working for me. . ",
    "Gil9091e10": "Try this solution but I still get the same error: Can not use object of type MongoDB \\ BSON \\ UTCDateTime as array\nSomeone else found some other solution for this error.. ",
    "mikekamornikov": "My dirty hack for reset issues:\nAdd the following to Auth/ForgotPasswordController and Auth/ResetPasswordController to make it work (requires php 7):\n```php\n/\n * Get the broker to be used during password reset.\n \n * TODO: remove this method once Jenssegers\\Mongodb reset password issues are fixed\n \n * @return \\Illuminate\\Contracts\\Auth\\PasswordBroker\n */\npublic function broker()\n{\n    return new class(app()) extends \\Jenssegers\\Mongodb\\Auth\\PasswordBrokerManager {\n    protected function createTokenRepository(array $config)\n    {\n        $c = $this->app['db']->connection();\n        $h = $this->app['hash'];\n        $t = $config['table'];\n        $k = $this->app['config']['app.key'];\n        $e = $config['expire'];\n\n        return new class($c, $h, $t, $k, $e) extends \\Illuminate\\Auth\\Passwords\\DatabaseTokenRepository {\n\n            protected function getPayload($email, $token)\n            {\n                return ['email' => $email, 'token' => $this->hasher->make($token), 'created_at' => new UTCDateTime(time() * 1000)];\n            }\n\n            protected function tokenExpired($token)\n            {\n                // Convert UTCDateTime to a date string.\n                if ($token instanceof UTCDateTime) {\n                    $date = $token->toDateTime();\n                    $date->setTimezone(new DateTimeZone(date_default_timezone_get()));\n                    $token = $date->format('Y-m-d H:i:s');\n                } elseif (is_array($token) and isset($token['date'])) {\n                    $date = new DateTime($token['date'], new DateTimeZone(isset($token['timezone']) ? $token['timezone'] : 'UTC'));\n                    $date->setTimezone(new DateTimeZone(date_default_timezone_get()));\n                    $token = $date->format('Y-m-d H:i:s');\n                }\n\n                return parent::tokenExpired($token);\n            }\n        };\n    }\n};\n\n}\n```\nAs you see there are 2 issues:\n- token should be stored as a hash ($this->hasher->make($token))\n- tokenExpired gets $token which doesn't require $token['created_at'] anymore. @joerecra I need more context. Where does this error come from (trace)? The code above works for me for quiet some time (LV 5.6, php 7.1). see my fix/hack for laravel 5.4 based project - https://github.com/jenssegers/laravel-mongodb/issues/1124#issuecomment-327965515. @jenssegers no, at least this piece of description is not resolved:\nChange in src/Illuminate/Auth/Passwords/DatabaseTokenRepository.php (introduced in laravel/framework@9d674b0) caused update in second file, because now only date is passed to tokenExpired() instead of full token:\n```php\n$this->tokenExpired($record['created_at'])\n// instead of\n$this->tokenExpired($record)\n```\nso it will be never an array.\nAlso: now tokens kept in DB have to be encrypted by Hasher.\n\nPersonally, i use this the following php7 hack in ResetPasswordController and ForgotPasswordController:\n```php\npublic function broker()\n{\n    return new class(app()) extends \\Jenssegers\\Mongodb\\Auth\\PasswordBrokerManager {\n    protected function createTokenRepository(array $config)\n    {\n        $c = $this->app['db']->connection();\n        $h = $this->app['hash'];\n        $t = $config['table'];\n        $k = $this->app['config']['app.key'];\n        $e = $config['expire'];\n\n        return new class($c, $h, $t, $k, $e) extends \\Illuminate\\Auth\\Passwords\\DatabaseTokenRepository {\n\n            protected function getPayload($email, $token)\n            {\n                return ['email' => $email, 'token' => $this->hasher->make($token), 'created_at' => new UTCDateTime(time() . '000')];\n            }\n\n            protected function tokenExpired($token)\n            {\n                // Convert UTCDateTime to a date string.\n                if ($token instanceof UTCDateTime) {\n                    $date = $token->toDateTime();\n                    $date->setTimezone(new DateTimeZone(date_default_timezone_get()));\n                    $token = $date->format('Y-m-d H:i:s');\n                } elseif (is_array($token) and isset($token['date'])) {\n                    $date = new DateTime($token['date'], new DateTimeZone(isset($token['timezone']) ? $token['timezone'] : 'UTC'));\n                    $date->setTimezone(new DateTimeZone(date_default_timezone_get()));\n                    $token = $date->format('Y-m-d H:i:s');\n                }\n\n                return parent::tokenExpired($token);\n            }\n        };\n    }\n};\n\n}\n```\n. btw, #1105 does a similar thing in the lib core. @jenssegers There are at least 3 issues/prs here with \"reset password\" fix. Could you merge this (or any other) one? . ",
    "bsormagec": "any update ? @jenssegers. Thanks for support @RemiCollin . ",
    "mario-laserna": "Hi, I am having a similar issue, dates (created_at, updated_at) of all models are saving like  ISODate(\"1970-01-01T00:00:00Z\"), always this same date\nI had to downgrade to 3.2.0 and all works fine again, I have this problem only in server (Ubuntu 14 and PHP 7.0) but not in my machine (win10, php7.0). @jenssegers this is happening now with version 3.2.0 on win10 also. ",
    "d0hn": "Managed to revert the changes, I think the laravelcollective must have corrupted my project in someway.. I had a backup of my composer.json file, and decent commit history so I deleted my project and cloned again.\nHowever the issue you are facing is related to a null variable or object somewhere in your code. In my case it was to do with the Authentication, login and user details. Try removing bits of your code and you will find the bit responsible for the error. \nLet me know how you get on and if you require any further assistance.\n. ",
    "rummykhan": "Are you sure you have record in your database ?. ",
    "Aragami23": "Any news about this?\nThanks for the hard work, loving laravel-mongodb so far, but now I want to implement passport without altering passport files :/ . ",
    "saman": "@deividaspetraitis would you tell me how use your fork? base on composer document, I couldn't use it. Thanks.. ",
    "hamid-kholghi": "it need that . ",
    "SamsamBabadi": "is there anybody?. @jenssegers do you want to check this pull request?. ",
    "amgir": "Is there a reason this hasn't been merged yet?. ",
    "mainawycliffe": "@benargo Did you ever solve this without resulting to not using paginate and count. I have also made a similar observation as you have. Thanks. I can't recall exactly what I did but I went back to my code and I seem to have re arranged the order of the code, so that \n$capsule->addConnection($config);\nComes after:\n$capsule->getDatabaseManager()->extend('mongodb', function ($config) {\n    return new Connection($config);\n});\nInstead of before it. The whole code looks like this:\n```\n$capsule = new \\Illuminate\\Database\\Capsule\\Manager;\n$mongodb = new mongodbCredentials($container);\n$config = $mongodb->getCredentials();\n$capsule->getDatabaseManager()->extend('mongodb', function ($config) {\n    return new Connection($config);\n});\n$capsule->addConnection($config);\n$capsule->setAsGlobal();\n$capsule->bootEloquent();\n$container['db'] = function ($container) use ($capsule) {\n    return $capsule;\n};\n```\n. ",
    "basvandorst": "Distance operators like $near and $nearSphere have a different behavior on sorting/skipping. \nIf it's okay for you to find the addresses in a specific area without distance sorting you can also use the geoWithin operator. This operator works fine with pagination functions.\nModel::where('address', 'geoWithin', [\n    '$centerSphere' => [\n        [\n            4.1450383,\n            51.5069158,\n        ],\n        50 / 3963.2 // 50 mile (3963.2 = equatorial radius of the earth)\n    ]\n])->paginate(12);. ",
    "jbxonline": "Also getting the same error.\nDid you find a resolution to this?. ",
    "azhar25git": "Same here. Any solution?. ",
    "mohsensaremi": "+1. ",
    "gallowdd": "I have found that this problem is occurring in the MongoDB PHP driver itself, not laravel. Looking into it from that perspective.. ",
    "socialknowledge": "MongoClient is not available for PHP 7.  What are we supposed to do?\n. ",
    "aconital": "@muhabutt I see you closed this issue. Do you mind sharing how you resolved this?. I'm having the same problem. Any update on this?. Thanks @irajtaghlidi. I'm closing this issue I don't think this problem has anything to do with this library. I had created some rows manually from my mongo admin page and I believe that was causing this problem. ",
    "dees040": "I made a smell check to verify the Laravel version. @jenssegers . ",
    "vaxilicaihouxian": "Why does not  this commit merge to the master branch?. ",
    "adteague": "Do you have the following in your Users model?\n```\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Eloquent;\nuse Illuminate\\Contracts\\Auth\\Authenticatable;\nuse Illuminate\\Auth\\Authenticatable as AuthenticableTrait;\nclass User extends Eloquent implements Authenticatable {\n    use AuthenticableTrait;\n```. ",
    "McMazalf": "I missed use Illuminate\\Auth\\Authenticatable as AuthenticableTrait;\nThank you so much my friend \ud83d\udc4d \nIt works now!. I wildlands send you the screenshot asap.\nIl giorno ven 21 apr 2017 alle 18:07 JuCarr notifications@github.com ha\nscritto:\n\nSame problem here with Laravel 5.4. How did you fix it?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/jenssegers/laravel-mongodb/issues/1164#issuecomment-296233177,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AZdiGERdHk07ZZmfnonWrRdV3XAdNVZHks5ryNRPgaJpZM4MrkiJ\n.\n. Will send*\n\nIl giorno ven 21 apr 2017 alle 18:08 Alessandro Mazzari \nalessandro.mazzari.v.l@gmail.com ha scritto:\n\nI wildlands send you the screenshot asap.\nIl giorno ven 21 apr 2017 alle 18:07 JuCarr notifications@github.com ha\nscritto:\n\nSame problem here with Laravel 5.4. How did you fix it?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/jenssegers/laravel-mongodb/issues/1164#issuecomment-296233177,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AZdiGERdHk07ZZmfnonWrRdV3XAdNVZHks5ryNRPgaJpZM4MrkiJ\n.\n\n\n. Guys i fixed this by adding those classes to the user model. \n\n`<?php\nnamespace App;\nuse Illuminate\\Notifications\\Notifiable;\nuse Illuminate\\Contracts\\Auth\\Authenticatable;\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Eloquent;\nuse Illuminate\\Auth\\Authenticatable as AuthenticableTrait;\nuse App\\Auth\\Traits\\MagicallyAuthenticatable as MagicallyAuthenticatable;\nuse Illuminate\\Auth\\Passwords\\CanResetPassword;\nuse Illuminate\\Contracts\\Auth\\CanResetPassword as CanResetPasswordContract;\nclass User extends Eloquent implements Authenticatable, CanResetPasswordContract\n{\n    use Notifiable, MagicallyAuthenticatable, AuthenticableTrait, CanResetPassword;`\nbtw, i'm pretty sure that : \nuse Illuminate\\Auth\\Passwords\\CanResetPassword;\nuse Illuminate\\Contracts\\Auth\\CanResetPassword as CanResetPasswordContract;\nsolved it and implements it : \nclass User extends Eloquent implements Authenticatable, CanResetPasswordContract\nHope i helped you all. . ",
    "ericadamski": "I am having the same issue but with a much simpler setup, here is the only class that is using the Jenssegers\\Mongodb\\Eloquent\\Model.\n```php\n<?php\nnamespace App\\Models;\nclass Template extends BaseModel\n{\n     protected $fillable = ['title'];\n}\n```\nWhich inherits from\n```php\n<?php\nnamespace App\\Models;\nuse Jenssegers\\Mongodb\\Eloquent\\Model as EloquentModel;\nabstract class BaseModel extends EloquentModel\n{\n    protected $connection = 'mongodb';\n}\n```\nThe migrations and seeds work fine, they write to mongo and everything but when I try and hit one of our routes base_url/templates which should return a list of template models I get the error mentioned above. I have the same setup as well, php71, valet, laravel 5.4. Is there anything else that could cause this error?. @adrianxplay as long as you installed the php driver for mongo then you should be good. I had to just restart my machine and it seemed fine after that. . @charliecen what was the issue here, I am having the same error.. @charliecen I had them both installed, just restarted my machine and it worked perfectly. Thank you for the response!. ",
    "adrianxplay": "Hi @ericadamski, I'm having the same trouble.\nDid you figure out what's wrong?. @ericadamski I have already installed the php driver, restarted many times and still not working. I guess I'll using php 7.0.\nThanks.. ",
    "microwavekonijn": "Have you tried creating a php file with\n<?php\nphpinfo();\nSee if the Mongo driver shows up there.. This one. Read answer from markszymik.\n1192 . Replace\nuse Illuminate\\Foundation\\Auth\\User as Authenticatable;\nwith\nuse Jenssegers\\Mongodb\\Auth\\User as Authenticatable;\nIt should look like this then\n```\nnamespace App;\nuse Illuminate\\Notifications\\Notifiable;\nuse Jenssegers\\Mongodb\\Auth\\User as Authenticatable;\nclass User extends Authenticatable\n{\n    use Notifiable;\nprotected $collection = 'users';\n\n}\n```\nI do not think you can implement a class, only interfaces.\nIf this worked, please close this issue.. For the second problem I think this it a fix:\n```\nprotected function tokenExpired($createdAt)\n    {\n//         Convert UTCDateTime to a date string.\n        if ($createdAt instanceof UTCDateTime) {\n            $date = $createdAt->toDateTime();\n            $date->setTimezone(new DateTimeZone(date_default_timezone_get()));\n            $createdAt = $date->format('Y-m-d H:i:s');\n        } elseif (is_array($createdAt) and isset($createdAt['date'])) {\n            $date = new DateTime($createdAt['date'], new DateTimeZone(isset($createdAt['timezone']) ? $createdAt['timezone'] : 'UTC'));\n            $date->setTimezone(new DateTimeZone(date_default_timezone_get()));\n            $createdAt = $date->format('Y-m-d H:i:s');\n        }\n    return parent::tokenExpired($createdAt);\n}\n\n```. No errors now, but it tells me the that the token is invalid. Any ideas?\n\"This password reset token is invalid.\". For the token invalid I found that you also need to change getPayload method from the DatabaseTokenRepository to\nprotected function getPayload($email, $token)\n    {\n        return ['email' => $email, 'token' => $this->hasher->make($token), 'created_at' => new UTCDateTime(time() * 1000)];\n    }\nYeah, you don't have to, but I it is better to keep to the original code in case you miss something.. I think the error comes, because the method tokenExpired in the DatabaseTokenRepository class still accepts a $token and expects $token['created_at'] to be set. But the parameter passed to the method is actually a date not an array. So the problem has still not been resolved.\nSolution is in my second message in this issue.. There is a way, but it is kind of a hacky way. Create a map called fixes and then add in the composer.json file in the psr-4 array a entry called \"Jenssegers\\\\Mongodb\\\\\": \"fixes/Jenssegers/Mongodb/\". Then take the files you want to replace like the DatabaseTokenRepository.php and add it to fixed/Jenssegers/Mongodb/Auth/DatabaseTokeRepository.php. Then you have to reset composer, by deleting composer.lock and install composer again. And it should work.. The fixes map you create in the same directory as the composer.json file. Fixed should be fixes, just a typo.. The composer.json after a fresh install has a part that looks exactly like this\n...\n\"psr-4\": {\n    \"App\\\\\": \"app/\"\n}\n...\nJust change it to this\n...\n\"psr-4\": {\n    \"App\\\\\": \"app/\",\n    \"Jenssegers\\\\Mongodb\\\\\": \"fixes/Jenssegers/Mongodb/\"\n}\n...\nIn the same directory as composer.json create a new directory called fixes. If you want to change Jenssegers/Mongodb/Auth/DatabaseTokenRepository.php, then create the directories and the file such that you will have fixes/Jenssegers/Mongodb/Auth/DatabaseTokenRepository.php. Then delete the composer.lock file and install composer again.\nThe namespaces will still remain the same. How the autoload will work it will prioritize the fixes over the package files/classes.\nUpdate: Don't re\u00efnstall Composer or delete composer.lock. Instead use the rebuild command, this will only rebuild the autoloader.. ",
    "nickvoegeli": "I started experiencing this issue in the middle of a project using Homestead, with no obvious config changes to explain the sudden problems.  I believe I traced it back to a difference in the required drivers for PHP 7.1 - I think my Homestead box may have updated itself from a version using PHP 7.0 to 7.1, and the apt package php-mongodb wasn't enough anymore.  There's some conjecture here, I may be totally off-base, I stopped digging when I solved it.\nI ended up resolving this by pasting the code provided by ekandreas at http://forgerecipes.com/recipes/135 into my after.sh provisioning script in the project root.\n. I know it's been a month, but I was experiencing this and found the issue.  hasMany() is called as hasMany('Model', 'foreign_key', 'local_key'); and it looks like you've reversed your keys.\nAs a side note, it looks like Eloquent's normal assumptions about foreign keys don't hold true as expected with this library - I have collections called questions and question_types, with a question_type_id field on questions, and the relationship didn't work until I explicitly specified the keys in my hasMany and belongsTo calls on the model.. ",
    "prog-24": "Try restarting your FPM service after installation. I had the same issues and restarting FPM seems to have solved it.. If you can't see the mongo module in phpinfo it must not be installed properly but that is out of scope of this project @msankar1991 . Same here. Duplicate of #1163. ",
    "WindGreen": "After I installed php-mongodb, I restart apache, then woked fine for me.. ",
    "hzburki": "I have installed mongodb 1.3.4 with lumen 5.4 and php 7.1.8. \nRan brew tap homebrew/php -> Ran brew install php71-mongodb\nAdded extension=/usr/local/opt/php71-mongodb/mongodb.so in php.ini for php 7.1.8. \nAlso tried cp /usr/local/Cellar/php71-mongodb/1.3.4/mongodb.so /Applications/MAMP/bin/php/php7.1.8/lib/php/extensions/no-debug-non-zts-20160303/ -> Added extension=mongodb.so\nRestarted Apache -> Restarted Mongo -> Restarted FPM -> Restarted machine. \nBut nothing seems to work. I still get the error mentioned in the question. artisan migrate seems to work fine. Also everything works fine on php 7.0.22, but I need php 7.1 for some other packages which are necessary.  . ",
    "daniel-farina": "If you are using homestead:\nHomestead.yaml\nmongodb: true\nThen re-provision your Homestead box:\nvagrant reload --provision\nhttps://medium.com/@williamvicary/installing-mongodb-on-homestead-3eb750dcc891. ",
    "behnamazimi": "This issue really confused me!!\nMy problem is as same as yours and here is my StackOverflow question, https://stackoverflow.com/q/51078247/3534952.\nMy Os is Debian8 and a DirectAdmin on it. I do every thing step by step as I know or as I find, but the php not recognize the driver extension!!!\nEverything in my local is done, I just want to publish my project!!!\nI really need help!\n. +1. @Sebbba Could you find any solution? Can you share?. ",
    "dinesh94": "\nI'm using windows 10 and wamp server.\nIf using PHP 7.0 also installed latest mongodb driver 1.4.1 also, And added in extension=php_mongodb.dll not getting with extension while seeing phpinfo() also.\nRestarted Wamp server -> Restarted Machine also its not working at all.\nWamp server having both PHP 5.6 & 7.0 versions. While using PHP 5.6 version its working mongodb.\n\nwhat is the resolution ?. ",
    "Benstaar": "According to the documentation, registering the service provider fixed my problem.\nAdded Jenssegers\\Mongodb\\Auth\\PasswordResetServiceProvider::class, in config/app.php . ",
    "NoelDeMartin": "@jenssegers Did you have a chance to read the issue? As I said, I may be able to implement it myself and create a PR but I won't proceed until you tell me if it makes sense.. @arifulhb What vendor files? Vendor files are not in the repository, they are installed on the machine once you run \"composer install\", and git ignores them or any change you make to them, so it wouldn't be possible to change any vendor files from version control.\nIf you say that because these files are in your vendor directory on your laravel app, you can use a fork and reference that fork from composer instead of this repository. That's what I am doing since this pull request and many others seem to be ignored by the maintainer.. A better temporal solution (which doesn't involve modifying vendor files), is loading a macro into the builder.\nThis can be done in a service provider such as app\\Providers\\AppServiceProvider.php:\n```\nuse Jenssegers\\Mongodb\\Eloquent\\Builder;\n...\npublic function register() {\n    Builder::macro('getName', function() {\n        return 'mongodb';\n    });\n}\n```. I came across this scenario and I could solve it by declaring the following in the Embedded model class:\npublic $incrementing = false;\n    protected $primaryKey = null;\nI tried having only the $incrementing attribute set to false but that alone doesn't seem to be enough, it's necessary to set $primaryKey as null as well. I only tried with EmbedsOne, but I guess it's the same for EmbedsMany.. ",
    "kevin1193": "Is there a solution to this error? I experienced this to.. ",
    "ihsanberahim": "I managed to solve this by forcing composer to use my laravel-mongodb version\n\"repositories\": [\n  {\n   \"type\": \"vcs\",\n   \"url\": \"https://github.com/ihsanberahim/mongodb\"\n  }\n ],\n\"require\": {\n  ...\n   \"jenssegers/mongodb\": \"dev-master\",\n  ...\n },. Actually, it works but you need to call toArray\nIt is not working\nApp\\Models\\Notification::first()\nIt is working\nApp\\Models\\Notification::first()->toArray(). ",
    "ivangan-cpl": "Hi @ihsanberahim , did you manage to find the solution to this? I'm facing this issue and could not seems to find the solution anywhere. Thanks!. ",
    "flangofas": "@nwesber Mongo requires dates to be stored as MongoDB\\BSON\\UTCDateTime and the package does this for you ;)\nWhen you have UTCDateTime object in your hand, you can do the following to get a DateTime object\n$datetime = $utcdatetime->toDateTime();\nsee more here. ",
    "nwesber": "thank you so much. ",
    "mikield": "@jenssegers does my PR seems not useful?\nCause the Laravel Eloquent can be used outside Laravel - so checking a Laravel's contract (interface) is a good option :wink: . ",
    "spyndutz": "True, I think this approach needs to be implemented\nBecause MongoDB itself could handle this using $project approach. ",
    "charliecen": "@ericadamski  Need to install the mongo and mongo extension, both are needed\n$ php  -i |grep mongo\n/usr/local/etc/php/5.6/conf.d/ext-mongo.ini,\n/usr/local/etc/php/5.6/conf.d/ext-mongodb.ini,\nmongo\nmongo.allow_empty_keys => 0 => 0\nmongo.chunk_size => 261120 => 261120\nmongo.cmd => $ => $\nmongo.default_host => localhost => localhost\nmongo.default_port => 27017 => 27017\nmongo.is_master_interval => 15 => 15\nmongo.long_as_object => 0 => 0\nmongo.native_long => 1 => 1\nmongo.ping_interval => 5 => 5\nmongodb\nlibmongoc bundled version => 1.5.5\nlibmongoc SSL => enabled\nlibmongoc SSL library => OpenSSL\nlibmongoc crypto => enabled\nlibmongoc crypto library => libcrypto\nlibmongoc crypto system profile => disabled\nlibmongoc SASL => enabled\nmongodb.debug => no value => no value. ",
    "fizerkhan": "+1. ",
    "bishwarupdas": "+1. ",
    "tushkan777": "+1. ",
    "paparyku": "I'm wondering the same thing! I can of course use it in the terminal but it would be nice to see what Laravel is spitting out.. ",
    "MatthewDrouin": "This is a very good question. It seems like the moloquent team is trying to determine how to get changes made in laravel-mongodb into moloquent. The moloquent team seems more responsive and accepts PRs faster so it's really a catch 22 unfortunately.. Upon further review it seems that Laravel itself uses getDirty() to determine isDirty(). The getDirty() logic is based off the current attributes and doesn't take into account the original attributes so it cannot determine if anything was removed.\nI am going to close this issue and reach out to the laravel team to see if there is a reason for this.. ",
    "noel45": "Hi drewlag,\nTry the following :\n```\nuse Illuminate\\Contracts\\Auth\\Authenticatable as AuthenticatableContract;\nclass User extends Eloquent implements AuthenticatableContract,\n```\n. ",
    "NimzyMaina": "use Jenssegers\\Mongodb\\Auth\\User as Authenticatable;\nThis worked for me. Thank you @microwavekonijn . ",
    "dleber": "Thank you @microwavekonijn.\nThis worked for me (using Laravel 5.5).\nI lost way too much time finding this. How could it not be in the docs?!. ",
    "alok932": "This error occurs because you have selected _id field.\nChange it to this.\n$query->select('first_name','last_name', 'email', 'created_at')\n        ->groupby('email')\n        ->where('created_at', '>=', $startDate)\n        ->where('created_at', '<', $endDate);. ",
    "lintaba": "related: \nhttps://github.com/moloquent/moloquent/pull/64\nhttps://github.com/moloquent/moloquent/issues/63. ",
    "parimal16": "public function __construct($name,\n                                UserProvider $provider,\n                                Session $session,\n                                Request $request = null)\ngetting this error. ",
    "mark1282": "I read in another thread that putting the below in config/app fixes the issue. PHP 7.2 laravel 5.7 here \nJenssegers\\Mongodb\\Auth\\PasswordResetServiceProvider::class,. ",
    "trq": "There is such a thing as a database in Mongo. Databases contain collections, and collections contain documents.\nThis particular package can only connect to one at a time though as far as I can tell.\nWhat exactly is the use case for creating databases dynamically though?. ",
    "775397252": "i also hava same question?i want to create a datebase by code. I use PHP  direct connect is ok,but use jenssegers/laravel-mongodb report that error not authorized on SecDR_F118IV to execute command { find: \"TTask_log\", filter: { $and: [ { action: \"\u67e5\u770b\u8be6\u60c5\" }, { user_ip: \"192.168.6.165\" } ] } }. ",
    "hpaknia": "First you need to UTC date object to carbon one: Auth::user()->birth['date']->toDateTime(), then probably you still need to change the timezone: \nAuth::user()->birth['date']->toDateTime()->setTimezone(new DateTimeZone('YOUR_TIME_ZONE')). I ended up extending my own provider from MongodbServiceProvider:\nphp\n    /**\n     * Register the service provider.\n     */\n    public function register() {\n        // Add database driver.\n        $this->app->resolving('db', function ($db) {\n            if (config('database.connections.m')) {\n                $db->extend('m', function ($config, $name) {\n                    $config['name'] = $name;\n                    return new Connection($config);\n                });\n            }\n            if (config('database.connections.mt')) {\n                $db->extend('mt', function ($config, $name) {\n                    $config['name'] = $name;\n                    return new Connection($config);\n                });\n            }\n        });\n    }\nAs you see I add 2 mongo connections and I set my default connection of models like this:\nphp\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Eloquent;\nclass MyCollection extends Eloquent {\n    protected $collection = 'helloConnection';\n    protected $connection = 'm';\n    public $timestamps    = false;\n}\nAnd in order to switch to mt connection:\nphp\n        // writing to mt\n        $model        = new MyCollection;\n        $this->assertEquals('m', $model->getConnection()->getName());\n        // setConnection is not callable statically\n        $model->setConnection('mt');\n        $this->assertEquals('mt', $model->getConnection()->getName());\n        $model->key   = 'key';\n        $model->value = 'mt';\n        $model->save();. Any answers? Have I missed something here?. Suppose there is another column which is of type MongoId, that would be\ngreat if library take care of mongoId conversion of this column  to string. Like the way we interact with primary key column.\nExample: In order to set or get primary key in $model:\n// setting primary key\n$model->_id = 'a_string_as_mongo_id';\n// getting after retrieval\necho $model->_id; // it's a string\nSuppose column book is a mongoID:\n// setting a column which is mongoId\n$model->book = new \\MongoDB\\BSON\\ObjectID('a_string_as_mongo_id');\n// getting after retrieval\necho (string) $model->book; // it's not a string, we need to cast ot to string\nWhile conversion on primary key is happening automatically, I anticipate there should be some options (similar the way we set some columns as date) to let moloquent know that mongoId conversion should happen automatically behind the scenes.. ",
    "iaK": "I'm also getting this error in laravel 5.4.21.\nIt pops up when i'm using factory()->create(). \nA workaround is to use factory()->make() and then save all the models in a loop.\nDosen't work with factory states thought... Quick dirty fix to get your tests to work before a proper solution is in place;\nin Jenssegers\\Mongodb\\Eloquent\\Builder.php\nadd\npublic function getName() {\n        return \"mongodb\";\n    }\n. ",
    "arubacao": "The break happend from Laravel version 5.4.19 => 5.4.20. Unfortunately I couldn't find a quick sophisticated fix.. @benargo thanks for the great contribution . ",
    "petronetto": "In Lumen this problem still happening, I fixed it switching to version v3.3.0-alpha.. @brusin I'm pretty sure that this is not the best approach, but will work.\n```php\n$components = App\\Models\\Component::get();\n$parts = collect([]);\nforeach ($components as $component) {\n    $parts->push($component->parts);\n}\nreturn $parts->flatten();\n```. I don't think that is a bug. If that query makes sense for you, and you will use it in more places in your code, maybe you should use a different data structure. It is almost certainly supposed to be a first-level citizen instead.. ",
    "juanitomint": "Hi have the same problem with Lumen is does anyone knows it is there a PR for this?. have same issue using mongodb and passport\ncan I help?. ",
    "thanhbkhn": "I have fixed this error, this issue appears because i redeclare some public variable for User Model as 'username', 'email', 'password'. Sorry for my mistake, have a nice day :) . ",
    "raphael-thibierge": "I registered the PasswordResetServiceProvider and have the same problem \nconfig : Laravel 5.5.* and jessengers/mongodb ^3.3. I had the same error in the browser in staging but not in local so i reinstall php71-mongodb driver, restart php71-fpm and nginx and the probleme was fixed ! . ",
    "kevindesousa": "The same as @raphael-thibierge ...\nAny solutions ?. Yes, you're right, Thanks !\nDo you have a better solutions to integrate this fix without modify vendor ?\n(How to override the vendor ?). Thank you a lot !!! :). ",
    "Icet00": "@microwavekonijn you solution works for me. Thank you. But for the solution without vendor, where do you create the map called fixes ? And is there a reason why you use fixes for all name and we only name the directory fixed ?. Sorry, I've never modified a composer.json. Should I have something like that ?\n{\n    \"name\": \"laravel/laravel\",\n    ...\n   \"fixes\":\n    {\n        \"psr-4\": {\n             \"Jenssegers\\Mongodb\\\": \"fixes/Jenssegers/Mongodb/\"\n        }\n    }\n}\nAnd my repository \"fixes\" should be in the root folder ? like myproject//Jenssegers/Mongodb/Auth/DatabaseTokeRepository.php\nFor the moment, that doesn't work with this config. Shoud I change which class I use from the user.php ? like use fixes\\Jenssegers\\Mongodb\\Auth\\User as Authenticatable.\nThank you for helping me.. Thank you. It's working :). ",
    "Tucker-Eric": "Tests are passing now but StyleCI hates me. ",
    "TurningTide": "$user->companyId = new MongoDB\\BSON\\ObjectId($companyId);. ",
    "n0n0n0n0": "same problem. ",
    "usamamashkoor": "@pirmax and @n0n0n0n0 did you have any luck with finding solution for this problem...? . Hi @mubbashar did you find any solution for this...?. Thanks for the update.. @skeezus did you have any luck with finding solution for this problem...?. Thanks @skeezus i will try your solution Thanks again for replying in such a short time :)    . ",
    "paulocoliver": "same problem. ",
    "ro-damasceno": "same problem. I found a solution. This error occurs because the connection name -- inside the moloquent database config -- is missing. Actually, laravel puts the connection name automatic, but moloquent doesn't. When the connection name is not found, laravel uses the default connection configured in the file /config/database.php, in most cases it is the mysql. \nYou can solve this by two ways: \n\n\nAdd connection name into mongodb config :\n```\n'mongodb' => [\n'driver'   => 'mongodb',\n'host'     => env('MONGODB_HOST', 'localhost'),\n'port'     => env('MONGODB_PORT', 27017),\n'database' => env('MONGODB_DATABASE'),\n'username' => env('MONGODB_USERNAME'),\n'password' => env('MONGODB_PASSWORD'),\n'name' => 'mongodb'\n\n]\n```\n\n\nOverwrite the moloquent provider to fix it. ( best in my opnion )\n\n\nCreate the file Providers/MongodbServiceProvider.php that extends  Moloquent\\MongodbServiceProvider\n\n\n```\n<?php\nnamespace App\\Providers;\nuse Moloquent\\MongodbServiceProvider as Base;\nuse Moloquent\\Queue\\MongoConnector;\nclass MongodbServiceProvider extends Base{\npublic function register()\n{\n    // Add database driver.\n    $this->app->resolving('db', function ($db) {\n        $db->extend('mongodb', function ($config, $name) {\n            $config['name'] = $name;\n            return new \\Moloquent\\Connection($config);\n        });\n    });\n\n    // Add connector for queue support.\n    $this->app->resolving('queue', function ($queue) {\n        $queue->addConnector('mongodb', function () {\n            return new MongoConnector($this->app['db']);\n        });\n    });\n}\n\n}\n```\n- Uses your provider instead of moloquent provider\n/config/app.php\n//  Moloquent\\MongodbServiceProvider::class,\n        App\\Providers\\MongodbServiceProvider::class,. ",
    "nahueJ": "At the migration file, do you have \"use Jenssegers\\Mongodb\\Schema\\Blueprint;\" ?. I had the same error, i've gave up. I deleted the project, dropped the DB, clone again the repository i was working with, i run a fresh composer install and a fresh php artisan migrate.\nI'm sorry that i can't be more helpful.. ",
    "travisneids": "I was receiving the same error at first but able to move past it with the following in my migration classes:\n```php\n<?php\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Jenssegers\\Mongodb\\Schema\\Blueprint;\nclass CreateUsersTable extends Migration\n{\n    /\n     * Run the migrations.\n     \n     * @return void\n     /\n    public function up()\n    {\n        Schema::table('users', function (Blueprint $collection) {\n            $collection->index('email');\n        });\n    }\n/**\n * Reverse the migrations.\n *\n * @return void\n */\npublic function down()\n{\n    Schema::table('users', function (Blueprint $collection) {\n        $collection->drop();\n    });\n}\n\n}\n``\nFor whatever reason, it seems to completely ignore$collection->dropIfExists();but I've done enough for one day so I'll stick with$collection->drop();` for now.\nThe above results in all greens on the following test (with DatabaseMigrations):\n```php\n<?php\nnamespace Tests\\Unit\\User;\nuse App\\Models\\User;\nuse Illuminate\\Database\\Eloquent\\Collection;\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\DatabaseMigrations;\nclass UserTest extends TestCase\n{\n    use DatabaseMigrations;\npublic function setUp()\n{\n    parent::setUp();\n\n    $this->user = create(User::class);\n}\n\n/** @test */\npublic function a_user_has_players()\n{\n    $this->assertInstanceOf(Collection::class, $this->user->players);\n}\n\n}\n```. I was able to solve this today. Please refer to https://github.com/jenssegers/laravel-mongodb/issues/1201#issuecomment-312107659. ",
    "DevRubenArevalo": "Make sure to remove the other default 'user' and 'password_resets' migrations if you are not using them when testing this. It will conflict with the normal way the migration rollback works i think.\n<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Support\\Facades\\DB;\nuse Jenssegers\\Mongodb\\Schema\\Blueprint;\n\nclass AddSomeVoters extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        // Create the collection voter and make emails unique.\n        Schema::create('voter', function(Blueprint $collection)\n        {\n            $collection->unique('email');\n        });\n\n        $voters =[\n            // Add the stickers in the same document since there are a limited amount and its less database calls.\n            // Had to add the non_dups to keep the emails field unique but still accessible within the same document.\n            ['_id' => 'love',      'path' => '/assets/images/love.png','email' => 'non_dup_1'],\n            ['_id' => 'do_good',   'path' => '/assets/images/doGood.png','email' => 'non_dup_2'],\n            ['_id' => 'unite',     'path' => '/assets/images/unite.png','email' => 'non_dup_3'],\n            ['_id' => 'rise',      'path' => '/assets/images/rise.png','email' => 'non_dup_4'],\n\n            // Creating a few test emails.\n            ['email' => 'qwiuey@gmail.com',       'sticker_id'  =>  'love'],\n            ['email' => 'test@test.com',                'sticker_id'  =>  'do_good'],\n            ['email' => 'asd@asd.com',                  'sticker_id'  =>  'love'],\n            ['email' => 'rise@test.com',                'sticker_id'  =>  'rise']\n        ];\n\n        // Insert them into mongodb database.\n        DB::connection('mongodb')->collection('voter')->insert($voters);\n\n    }\n\n     /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::drop('voter');\n    }\n}\n\nThis worked perfectly for me.\nFIRST TIME MIGRATION.\nphp artisan migrate \nMigration table created successfully.\nMigrating: 2017_07_16_211153_add_some_voters\nMigrated:  2017_07_16_211153_add_some_voters\n\nphp artisan migrate:rollback\nRolling back: 2017_07_16_211153_add_some_voters\nRolled back:  2017_07_16_211153_add_some_voters\n\nDOING THE MIGRATION AGAIN AFTER DOCUMENT WAS CREATED:\nphp artisan migrate\nMigrating: 2017_07_16_211153_add_some_voters\nMigrated:  2017_07_16_211153_add_some_voters\n\nStill working.\n. ",
    "anushanw": "@pankajadhyapak Can you please comment on how you get the issue resolved?. ",
    "monothorn": "Use 'dsn' key in config/database.php as shown below to mention the complete cluster url.\n'mongodb_conn' => [\n            'driver' => 'mongodb',\n            'dsn'=>'mongodb://username:password@hosts/database?ssl=true&replicaSet=replicaSet&authSource=admin',\n            'database' => 'my_data',\n        ]. ",
    "bardiazamanian": "Sorry it seems that it is working exactly with the syntax I have written.. ",
    "ginnerpeace": "u can show ur config file: config/database.php. ",
    "v01061374": "I don`t want mongodb to be my default connection...\n```\n<?php\nreturn [\n/*\n|--------------------------------------------------------------------------\n| PDO Fetch Style\n|--------------------------------------------------------------------------\n|\n| By default, database results will be returned as instances of the PHP\n| stdClass object; however, you may desire to retrieve records in an\n| array format for simplicity. Here you can tweak the fetch style.\n|\n*/\n\n'fetch' => PDO::FETCH_OBJ,\n\n/*\n|--------------------------------------------------------------------------\n| Default Database Connection Name\n|--------------------------------------------------------------------------\n|\n| Here you may specify which of the database connections below you wish\n| to use as your default connection for all database work. Of course\n| you may use many connections at once using the Database library.\n|\n*/\n\n'default' => env('DB_CONNECTION', 'mysql'),\n\n/*\n|--------------------------------------------------------------------------\n| Database Connections\n|--------------------------------------------------------------------------\n|\n| Here are each of the database connections setup for your application.\n| Of course, examples of configuring each database platform that is\n| supported by Laravel is shown below to make development simple.\n|\n|\n| All database work in Laravel is done through the PHP PDO facilities\n| so make sure you have the driver for your particular database of\n| choice installed on your machine before you begin development.\n|\n*/\n\n'connections' => [\n\n    'sqlite' => [\n        'driver' => 'sqlite',\n        'database' => env('DB_DATABASE', database_path('database.sqlite')),\n        'prefix' => '',\n    ],\n\n    'mysql' => [\n        'driver' => 'mysql',\n        'host' => env('DB_HOST', '127.0.0.1'),\n        'port' => env('DB_PORT', '3306'),\n        'database' => env('DB_DATABASE'),\n        'username' => env('DB_USERNAME'),\n        'password' => env('DB_PASSWORD'),\n        'charset' => 'utf8',\n        'collation' => 'utf8_unicode_ci',\n        'prefix' => env('DB_PREFIX'),\n        'strict' => true,\n        'engine' => null,\n    ],\n\n    'pgsql' => [\n        'driver' => 'pgsql',\n        'host' => env('DB_HOST', '127.0.0.1'),\n        'port' => env('DB_PORT', '5432'),\n        'database' => env('DB_DATABASE', 'forge'),\n        'username' => env('DB_USERNAME', 'forge'),\n        'password' => env('DB_PASSWORD', ''),\n        'charset' => 'utf8',\n        'prefix' => '',\n        'schema' => 'public',\n        'sslmode' => 'prefer',\n    ],\n    'mongodb' => [\n        'driver'   => 'mongodb',\n        'host'     => env('MONGODB_HOST', 'localhost'),\n        'port'     => env('MONGODB_PORT', 27017),\n        'database' => env('MONGODB_DATABASE'),\n        'username' => env('MONGODB_USERNAME'),\n        'password' => env('MONGODB_PASSWORD'),\n        'use_mongo_id' => false,\n        'options' => [\n            'db' => 'admin', // Sets the authentication database required by mongo 3\n            //['replicaSet' => 'replicaSetName'], // Connect to multiple servers or replica sets\n        ]\n    ],\n\n],\n\n/*\n|--------------------------------------------------------------------------\n| Migration Repository Table\n|--------------------------------------------------------------------------\n|\n| This table keeps track of all the migrations that have already run for\n| your application. Using this information, we can determine which of\n| the migrations on disk haven't actually been run in the database.\n|\n*/\n\n'migrations' => 'migrations',\n\n/*\n|--------------------------------------------------------------------------\n| Redis Databases\n|--------------------------------------------------------------------------\n|\n| Redis is an open source, fast, and advanced key-value store that also\n| provides a richer set of commands than a typical key-value systems\n| such as APC or Memcached. Laravel makes it easy to dig right in.\n|\n*/\n\n'redis' => [\n\n    'cluster' => false,\n\n    'default' => [\n        'host' => env('REDIS_HOST', '127.0.0.1'),\n        'password' => env('REDIS_PASSWORD', null),\n        'port' => env('REDIS_PORT', 6379),\n        'database' => 0,\n    ],\n\n],\n\n];\n```. Any Results?\n. ",
    "mubbashar": "@usamamashkoor  unfortunately no solution found yet. ",
    "zemo20": "how did you solve this problem ?. ",
    "har256b": "hey did you tried this \n$shops_sorted = Shop::raw(function($collection) use ($latitude, $longitude) { \n        return $collection\n                ->find([ 'status' => 'show', 'loc' => [ '$near' => [ $longitude, $latitude ] ] ], [ 'name' => 1 ] )\n                ->fields(['field1' => true, 'field2' => true])\n })->toArray();\n. in case you need all fields from your collection but not a few then try setting the value to false and that field will be removed from result object\nhttp://php.net/manual/en/mongocursor.fields.php. @skeezus sorry for responding late looks like you are using newer version of MongoDB Driver which actually doesn't support fields yet \nLegacy \nhttp://php.net/manual/en/class.mongocursor.php\nNew \nhttp://php.net/manual/en/class.mongodb-driver-cursor.php. Try something like this is new driver version\n```\n/ Select documents matching given criteria /\n$filter = [\n    'status' => 'show',\n//    ...\n];\n$options = [\n    / Only return following fields from matching documents /\n    'projection' => [\n        'title' => true,\n        'article' => true,\n    ],\n    / Return the documents in specified order /\n    'sort' => [\n        // specify your sort criteria here\n    ],\n];\n$query = new MongoDB\\Driver\\Query($filter, $options);\n$manager = new MongoDB\\Driver\\Manager('mongodb://localhost:27017');\n$cursor = $manager->executeQuery($collection, $query);\nforeach($cursor as $document) {\n    // document here should have only specified fields along with id\n    var_dump($document);\n}\n. with the package probably like this\n$shops_sorted = Shop::raw(function($collection) use ($latitude, $longitude) { \n    return $collection ->find(['status' => 'show', 'loc' => [ '$near' => [ $longitude, $latitude ] ] ], ['field1' => true, 'field2' => true] );\n})->toArray();\n``. also you need to be sure which Driver Version and Package Version you are using, baring this in mindWARNING: The old mongo PHP driver is not supported anymore in versions >= 3.0.\n`\n. ",
    "JennerTien": "Booking::select('invoice_number', 'temp_user_id', 'user', 'checkin_from', 'reserve_to', 'beds', 'dormitory', 'sleeps', 'status', 'payment_status', 'payment_type', 'total_prepayment_amount', 'txid')\n->where('is_delete', 0)\n->where(function ($query) use ($search) {\n        $query->where('invoice_number', 'like', \"%{$search}%\")\n               ->orWhere('beds', 'like', \"%{$search}%\")\n        return $query;\n});\n->skip($start)\n->take($limit)\n->orderBy($order, $dir)\n->get();. ",
    "sarathiscookie": "@JennerTien Thank you. ",
    "vanhoavn": "Hi i already provide example usage in the tests:\nphp\n        $user = new User;\n        ...\n        $user->address = new Address([\n            'name' => 'John Doe',\n            'country' => 'Mar',\n        ]);\n        $user->save();\nand:\n$this->assertEquals('John Doe', $user['address.name']);\n$this->assertEquals('Mar', $user['address.country']);\nBasically this just let the driver send native array to mongo insteadof json-ize for things that are Arrayable.. the CI test failure is wrong.. @jenssegers any problem?. @jenssegers  please merge. ",
    "simonschaufi": "Attaching related objects only works if the mother object is persisted already! So if your adminRole is not yet stored in the database, it doesn't work. I had the same problem.. ",
    "daiduong47": "Yes, I've changed it. I also add more guide for $slide with a range in a Projections.\nThank you.. ",
    "maitrepylos": "Ok we saw our mistake\n```php\n<?php\nnamespace App;\n//use Jenssegers\\Mongodb\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Jenssegers\\Mongodb\\Eloquent\\HybridRelations;\nclass Profil extends Model\n{\nuse HybridRelations;\n\nprotected $connection = 'mysql';\n\npublic function adresses(){\n    return $this->hasMany(\"App\\Adresse\",'profils_id');\n}\n\n}\n. \nHello here is an example that works with us.php\n<?php\nnamespace App;\n//use Jenssegers\\Mongodb\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Jenssegers\\Mongodb\\Eloquent\\HybridRelations;\nclass Profil extends Model\n{\nuse HybridRelations;\n\nprotected $connection = 'mysql';\n\npublic function adresses(){\n    return $this->hasMany(\"App\\Adresse\",'profils_id');\n}\n\n}\n```. ",
    "JulianWels": "I had the same Issue today and remembered the .env file which overrides the config files.\nMaybe this will fix it for you too!. ",
    "peyoh": "So, \n'meta.payload.start_uts' field is 64 bit integer. Passing timestamp as integer instead to call new Date object, \nsolves the issue. \nThe original value is ISO timestamp and I've converted it \n(new DateTime($this->start))->format('U')*1000\n. ",
    "KaylaLamp": "I know this is late, but I am running into this issue as well.\nWhen I run migrate:fresh with my migration organised as the above, the error log says \n\na collection 'example.drivers' already exists\n\nWhen I move Schema::connection('mongodb')->drop('drivers') into the up() function of the migration file, the collection is dropped and all works correctly. The down function is being reached, but it is almost as if the statement inside it is being ignored.. Thanks for the response.\n Unfortunately even following the documentation, the collection does not drop. ",
    "nigandres": "Only to add information at the comment of KaylaLamp the method If exists would be helpful if you do not have something alredy created.\nSchema::connection('mongodb')->dropIfExists('collection');. ",
    "hartono-sulaiman-kaskus": "+1. I also had this problem. ",
    "vaishnavmhetre": "Hi @alexgiuvara, as of my requirement, I can't embed new object (eg. Group object) directly as I need to reference instanciated one, hence utterly need pivot style functionality.\nI thought about a workaround. Just need to know if this will work.\nclass UserGroupAssoc{\n    /* \n        Has the following schema -\n\n        _id (will autogenerate)\n        user_id\n        group_id\n\n    */\n\n    public function user(){\n        return $this->hasOne(User::class);\n    }\n\n    public function group(){\n        return $this->hasOne(Group::class);\n    }\n}\n\nclass Group{\n\n    // ...boilerplate stuff\n\n    public function getUsersAttribute(){\n        return UserGroupAssoc::whereGroupId($this->_id)->get()->map(function($userGroupAssoc){\n            return $userGroupAssoc->user\n        })\n    }\n}\n\nclass User{\n\n    // ...boilerplate stuff\n\n    public function groups(){\n        return $this->embedsMany(UserGroupAssoc::class);\n    }\n\n    public function getGroupsAttribute(){\n        return $this->groups->map(function($userGroupAssoc){\n            return $userGroupAssoc->group\n        })\n    }\n}\n\n. @alexgiuvara, currently the defined logic is okay to function, I just want to ask, that a relation defined as name groups is in User class. Can I still define groups as an explicit attribute only as a getter in the same User class? Its Laravel specific query actually.. Did you try a reverse i.e. hasMany relation instead of belongsToMany on Page. As you've defined pages_ids array on each document, the hasMany (might) go the reverse way scanning every document's pages_id for the array you're searching for.\nThis analogy might work the way you expect. Give it a shot. And in your explanantion about the relation, you've mentioned a Many to Many with a belongsTo and a hasMany structure. Apply the idea same way that having belongsTo on both.. ",
    "shijinmon": "Prashant-pokhriyal, if you get any solution please share. iam stuck with this problem. Thank you.. > @shijinmon, you can use select method to get specific columns. Like below\n\nUser::select('_id')->find($id);\n\nThank you for the reply. User::select('_id')->find($id), this is fine, but if there is any way to getting this format, User::select('_id', 'full_name as name')->find($id);\n. Mongo dB transactions is not working in any version above 5 in laravel. Please solve this issue.. ",
    "msztorc": "You have to enable mongodb extension in your php.ini\nhttp://php.net/manual/en/mongodb.installation.windows.php. ",
    "dark-wind": "so do i.\nwhen i use Carbon:now() for created_at,It will save a array just like:\ncreated_at: [\n       \"date\" => \"2018-01-11 15:49:21.000000\",\n       \"timezone_type\" => 3,\n       \"timezone\" => \"PRC\",\n     ],\nin fact, I want to save a MongoDate to it.. I seem solved this problem.It's very useful to add a data attribute.\nThis is my model file\n```php\n<?php\nnamespace Modules\\Project\\Entities;\nuse Jenssegers\\Mongodb\\Eloquent\\Model;\nuse Jenssegers\\Mongodb\\Eloquent\\SoftDeletes;\n//use Illuminate\\Database\\Eloquent\\Model;\n//use Illuminate\\Database\\Eloquent\\SoftDeletes;\nclass Project extends Model\n{\n    protected $connection = 'mongodb';\nuse SoftDeletes;\n\nprotected $dates = ['start_date_at', 'online_date_at'];\n\n}\n```. ",
    "MattDalm": "Same issue. +1, same for me. You need to install the mongodb driver\nsudo apt-get install php7.x-dev\nInstall Libs you are probably missing\nsudo apt-get install libcurl4-openssl-dev pkg-config libssl-dev libsslcommon2-dev\nInstall PECL\nsudo apt-get install php-pear\nInstall MongoDB driver\nsudo pecl install mongodb\nFinally, add the following line to your php.ini file for php-fpm and cli:\nextension=mongodb.so\nrestart the service php7.x fpm\n. You still need the PHP driver. \nFollow those steps: \nhttp://php.net/manual/en/mongodb.installation.windows.php\n. I was wondering the same so I've stopped doing it and I do not see any impact. So if anyone has background on that I would like to know. as well. . It's not only great, it is also really useful and (almost) mandatory for anyone using lumen/laravel with mongodb. ",
    "nulele": "Any news?\nIt is now clear to me that BelongsTo and BelongsToMany relations look for string Ids... while mongodb $lookup look for ObjectId Ids.\nI'm seriously thinking that currently the only solution is creating both attributes to satisfy both methods.\nFor example:\n\"user_id\" : \"5ba51e861d41c875c578b939\"  for BelongsTo relation\n\"user_object_id\" : ObjectId(\"5ba51e861d41c875c578b939\") for $lookup relation\nMaybe in the Model Observer, every time the document is saved, I can create/update the *_object_id attribute.\nWhat do you think?. Hi Marc,\nthank you for the suggestion. I'll give it a try and will let you know.... ",
    "Ojvar": "Exactly ! I have same problem !\nI guess the authors must be redefine \"belongsToMany\" function with new parameters\nThanks again for your great work!. Hi harry\nI want to save just Foreign Keys in embedded record,\nLet me to describe what I want:\nI have these collections:\n1- Posts collection (store Authors posts)\n2- Users collections (store Users)\n3- Comments collections (store comments of users)\nNow, I want to save Posts comments in a embedded record, and it has such structure:\n{\n   _id,\n  created_at,\n  **user_id,**          // <-------- Must be in relation with **Users** table\n  comment\n}\nI can store data in such case, But I can't Make a relation between Users collection and user_id field.\nHow can I do that?\nTnx ;). ",
    "SimplyCorey": "Fixed on laravel's side.  https://github.com/laravel/framework/pull/20407. @smendozaisf  Laravel ended up reverting the change and making it a backwards breaking change again.  My comment is no longer valid.. See: https://github.com/jenssegers/laravel-mongodb/pull/1280. Laravel support is going to need to be bumped to 5.5 in the composer.json file.  Not sure how you want to handle that.. 3.3 would also have to drop support for php5.6 in the test suite as laravel 5.5 no longer supports php <7.0. Closing in favor of: https://github.com/jenssegers/laravel-mongodb/pull/1300. Awesome work dude, thank you.. ",
    "elanvans": "i getting same issue with laravel 5.5. fix this issue?. @devcircus yes laravel 5.5 is officially released.\nhttps://laravel-news.com/laravel-5-5\nfix this issue ASAP.. @jenssegers \nI get error, when i update laravel-mongodb package\n[ErrorException]\n  Declaration of Jenssegers\\Mongodb\\Eloquent\\HybridRelations::belongsToMany($related, $collection = NULL, $foreign\n  Key = NULL, $otherKey = NULL, $relation = NULL) should be compatible with Illuminate\\Database\\Eloquent\\Model::be\n  longsToMany($related, $table = NULL, $foreignPivotKey = NULL, $relatedPivotKey = NULL, $parentKey = NULL, $relat\n  edKey = NULL, $relation = NULL)\nScript @php artisan package:discover handling the post-autoload-dump event returned with error code 1\nInstallation failed, reverting ./composer.json to its original content.. ",
    "santimendoza": "@SimplyCorey How do we fix it? I read about solved in Laravel Side, but still getting this error with laravel 5.5 installed yesterday and the package added today.. I ended using Laravel 5.4. I don't like to change vendor folder files. When this package make the update, I'll migrate to Laravel 5.5. I hope it will be soon\nThanks :). ",
    "godfreymakori": "@smendozaisf Check out this gist https://github.com/jenssegers/laravel-mongodb/pull/1282/commits/066e2193bc50d2dce1802c00d46ce3b7d252a1c6. Check out this gist https://github.com/jenssegers/laravel-mongodb/pull/1282/commits/066e2193bc50d2dce1802c00d46ce3b7d252a1c6. ",
    "Once88": "i getting  the same issue with laravel 5.5. @ajaybhargav Thanks, it fixed my issue.. ",
    "kideny": "i getting the same issue with laravel 5.5.14. please tell me how to use alpha to composer.json. thank you everyone , i love you ! . ",
    "hainv053": "i getting the same issue with lumen 5.5. ",
    "git4shankars": "i too am getting this error with laravel 5.5!! Is this issue resolved, if not why is it showing as Closed!!. ",
    "yassine-khachlek": "Me too i have the same problem with Laravel 5.5. ",
    "mashurimansur": "Me too i have the same problem with Laravel 5.5, how to resolve this errror. try using {{ $perangkats->render() }}. ",
    "jesseyofferenvan": "This issue still stands \ud83d\udc4e . ",
    "TVolly": "Fixed in v5.4.32 \nhttps://github.com/laravel/framework/pull/20407/files. ",
    "appleinautumn": "It's not fixed on Lumen 5.5. On lumen 5.4, it's working fine.. ",
    "143kk": "$duplicateshash = Picture::raw(function ($collection) {\n                return $collection->aggregate(\n                    [\n                        ['$group' => ['_id' => '$hash',  'count' => [ '$sum'=> 1 ] ] ],\n                        ['$match' => ['count' => ['$gt' => 1 ] ] ]\n                    ]\n                );\n            }\n        );. ",
    "Jafo232": "This was a casting issue.  Consider it solved.. If I recall correctly, my issue was that $parkid was not casted correctly.  . ",
    "emanuelverardi": "I have the same problem.\nif I run the same script using the php artisan tinker command the count is displayed correctly, but not in my logs or debug.\ncount() always return 0\nAny Ideas ?\n. ",
    "albertosantiago": "Upppsss.... It was my fault.... I forgot save the user before attach the roles.... so the roles was saving null in the field... . ",
    "Entrio": "Is there an ETA on this?\nEDIT:\nLaravel 5.5 LTS has been released yesterday, i think this is rather presing now. ",
    "nadeemzai": "fix HybridRelations::belongsToMany not compatible with Model::belongsToMany #1282\nbest ... i solved this issue by using above link :). ",
    "penkoad": "Havin the same issue here, I was expecting to fetch a catalog offer by reference rather than by id. But I'll stick to offer::where('ref', $offer).\n(Please consider my gratitude for your awesome work with this library). ",
    "Christophvh": "I'm Facing the same issue. +1 For merging this fix. I manually did your implementation and it worked fine, not sure why the travis test is failing.. Are you using Lumen ? Otherwise the service providers should be registered in config/app not in your bootstrap/app. Also for laravel 5.5  support use v3.3.0-alpha version. That version has auto-discovery so no need to even register the service provider.\n. Fixed in https://github.com/jenssegers/laravel-mongodb/commit/db9837241464fb6522b526812791ee7eca5847f3. a good start is to read the documentation ;) https://github.com/jenssegers/laravel-mongodb#relations. ",
    "milosilic": "me also\nusing laravel 5.5 and 3.3.0-alpha  version of laravel-mongodb. ",
    "AliN11": "Is this issue solved?\nI have faced this issue too.. ",
    "devcircus": "Now that 5.5 is officially official, I'm sure the package will be updated to handle any breaks.. I'm sure a PR would be much appreciated.. ",
    "nesk": "@elanvans Asking for an issue to be fixed ASAP on a free and open source project while not providing any work by yourself is kinda a dick move.\nLaravel's 5.5 release is just a few days old, give some time to this project to be updated and tested.. ",
    "djzara": "@elanvans\nWhich PR was it you opened? I'm trying to find it.. Are there any real updates on this? I'll be happy to try and submit my own PR, but I recall seeing one already worked on. It's been over 2 months now.. ",
    "kirensiva": "I have the same issue...\nhttps://stackoverflow.com/questions/45983708/laravel-5-5-mongo-db-error. Thank you it is fixed now.. ",
    "akas84bg": "same here... :(. Yes, the alpha seems to be working... ",
    "msdme": "Nevermind, fixed here https://github.com/jenssegers/laravel-mongodb/issues/1092#issuecomment-283955691\nWork if use this:\npublic function pdfUpload(){\n        return new \\Jenssegers\\Mongodb\\Relations\\BelongsTo(\\App\\PdfUpload::query(), $this, 'id_upload', 'id', 'pdf_uploads');\n    }. ",
    "nshelms": "I went through the file and updated all of the functions while keeping the composer.json changes as well. Here's a patch file. Can someone tell me if it fixes this?\npatch--170906.txt\n. ",
    "moiz2050": "@jenssegers i am still having this issue while installing version 3.2.3 with L5.5\n[ErrorException]\n  Declaration of Jenssegers\\Mongodb\\Eloquent\\HybridRelations::belongsToMany($related, $collection = NULL, $foreignKey = NULL, $otherKey = NULL, $relation = NULL) should be compatible with Illuminate\\Database\\Eloquent\\Model::belongsToMany($related, $table = NULL, $foreignPivotKey = NULL, $relatedPivotKey = NULL, $parentKey = NULL, $relatedKey = NULL, $relation = NULL). ",
    "solonik1": "Hi, Try to set 90242 to \u201e90242\u201c as string. ",
    "jpldev": "Hi! I don't use migrations anymore, because Mongo is schemaless. I've realized that I don't need migrations\nDefine your model and it's done.. It has been relesead on 30th August\nhttps://laravel-news.com/category/laravel-5.5. You need to replace red lines with green lines.\n\nFollow this link>\nhttps://github.com/jenssegers/laravel-mongodb/pull/1295/commits/47ce0ff4ff07e7f05e3f4881ed1af64d2067b7dc. Not yet.\nI wrapped the value into simple apostrophe 'value' , but it doesn't work.\nIf I find a solution I'll post it here.. If somebody gets the answer, post it here . Thank you so much @tariqbilal !!! Have a good day... ",
    "dasbit": "+1. https://github.com/jenssegers/laravel-mongodb/pull/1282 what's wrong with this PR?. ",
    "grudge61": "+1. ",
    "matohavo": "+1. ",
    "thiagovictorino": "+1. ",
    "futurityverb": "How are you encountering the error in your code? You may need to change an update() call to updateMany() or updateOne() for the new mongo driver. ",
    "johnboc": "\nYou may need to change an update() call to updateMany() or updateOne() for the new mongo driver\n\nSpot on. Many thanks that did the trick.. ",
    "moazam1": "@futurityverb @johnboc I am using following code but getting an error:\n  $temp = [\n    [ 'id' => 1 ],\n    [\n        'item'       => \"envelopes\",\n        'id'         => 1,\n        'test_field' => rand( 1000, 1000000 )\n    ]\n];\n\n    $userData = DB::table( 'test' )->raw( function ( $collection ) use ( $temp ) {\n\n    return $collection->updateMany( $temp, [ 'upsert' => true ] );\n} );\n\n  InvalidArgumentException\n  First key in $update argument is not an update operator\n\n. ",
    "novice-dev": "Hello guys,\nI had the same issue, for others still working with laravel 5.4, like me\nI could overcome this issue, by checking out to this commit\nyou can reference it from composer with:\n\"jenssegers/mongodb\": \"dev-master#c4a5264be7b9164eb728614f1d6dc15767e5ae60\"\nHope this would temporarily solve your problem.. ",
    "tariqbilal": "I am having the same issue with Laravel 4, it works with tinker but not on the actual api, it returns NULL.\nwere you able to find it working?. I got it working, by type casting the values in where clause. All my collection keys were stored as strings.\nFor example: \nyou can try Model::where('id', '=', (string) $id)->get();\nI believe tinker has a different backend engine then normal engines which work with different OS.\nso there was no issue with the library from start. I hope it helps. :). ",
    "eboye": "The temp workaround for me was to include the master branch and chery-pick these three commits: https://github.com/jenssegers/laravel-mongodb/pull/1282\nIt's working without issues for me.. Do you have MongoDB driver? Try installing it:\nsudo apt-get install php-mongodb\nor\nsudo apt-get install php56-mongodb\ndepending on you PHP setup.\nOr maybe the mongod server is not running?\nsudo service mongodb start. Try this:\nOrder::where('_id', ObjectID('1'))->update($request->all(), [ 'upsert' => true ]);\nYou need to upsert the data. ",
    "BrianBi": "@eboye Thank you very much for your answer\uff01I give it a try\n. @RemiCollin Yes, I have tried to submit several versions, but there are still many problems.. ",
    "zdravko61": "+1. ",
    "leelijin": "same problem. same question. ",
    "MCMatters": "@ciruvan I only removed events from dispatcher because there is a new \"retrieved\" event which cause problems with tests. I didn't work with Mockery, but I saw in @RemiCollin PR how it can be handled. I updated code, thanks to RemiCollin. @sagargulati where exactly do you have an error?. Use v3.3.0-alpha version. ",
    "ConorWright": "Good job! I've just upgraded to 5.5 and all I'm waiting on is this. Looking forward to it!. ",
    "aashari": "Thankyou so much @MCMatters this is the solution for all of us, thankyouu... now we're waiting PR accepted by @jenssegers :). ",
    "ysb": "You can access child documents as an array. If there is another way, i want to learn too.. Yes, i am talking about retrieve the data and use the children.\nDo you want to retrieve children without parent model?. Actually there is no truncate method for MongoDB. There are two options, drop() or remove({}). First drops all documents and indexes but it is fast, the second one removes all documents in collection in a loop, it is slow, it doesn't free up the spaces used for documents and indexes.\nEloquent method truncate() is referring to drop() method on official mongodb/mongodb package.\nIf you want to just remove documents, i think something like  ModelName::delete(); will work.\nRef: https://stackoverflow.com/questions/16493902/truncate-a-collection. Latest stable version of this package does not support L5.5 for now. An alpha release (v3.3.0) is available for L5.5 support. You can try that.\nhttps://github.com/jenssegers/laravel-mongodb/tree/v3.3.0-alpha. Hi,\nDid you try this?\nphp\n$perangkats = perangkatModel::orderBy('tahun')->simplePaginate(10);. php\n$obj->username['user']['nace']. Now it is.. ",
    "jnorvor": "yes but that means you retrieve the data then pick what you want, as opposed to just retrieving the child documents at a specific id. Could I know the query you are talking about @ysb and also how to do what I am asking for if its at all possible. yes. ",
    "ferulisses": "same problem here, downgrade to 3.2.2 works for me.. ",
    "NelinD": "http://joxi.ru/v29JYWWF3bdNDA this code call problem\nReproduced when using trait in a mysql model. ",
    "xarasbir": "Getting the same error. Rolling back to version 3.2.2 solves it.. ",
    "yinsee": "Here's how i managed to fix this in file: \nvendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Helpers/QueriesRelationships.php\n```\n<?php\nnamespace Jenssegers\\Mongodb\\Helpers;\n...\nuse Illuminate\\Database\\Eloquent\\Relations\\Relation;\n...\ntrait QueriesRelationships\n{\n    ...\n    protected function getRelationWithoutConstraints($relation)\n    {\n        return Relation::noConstraints(function () use ($relation) {\n            return $this->getModel()->{$relation}();\n        });\n    }\n...\n\n}\n```. ",
    "JeferWang": "I'm eager to use Laravel5.5, so I want to use the alpha version. \nI soon solved the problem by myself\n. ",
    "ajaybhargav": "for 5.5 use alpha release:\n$ composer require jenssegers/mongodb:^3.3.0-alpha. @NGorco Can you please tell me how to not save the appends field after it is loaded. Everytime I read document from DB and access the appends field and the new field also gets saved along with default document. How can I prevent it?. awesome \ud83d\udc4d \nI added this and it worked perfectly. test is what I appended.\npublic function save(array $options = [])\n{\n    if (isset($this->test))\n        unset($this->test);\n    parent::save($options);\n}. ",
    "rohitsodhia": "I don't really follow the question, @lindelius. I'm not looking to extend the model, I'm trying to use the embedsMany functionality, but trying to do it without creating new _ids, as the subdocuments don't need them. As I said, since we can't cast properties in embedded documents, I figured embedding models is the best option, unless there's another way I'm not thinking of?. That was my first plan of attack @lindelius, and what I've been doing so far. But like I mentioned in my reply, my issue is that we can't cast the types of data in subdocuments, so I was wondering if there was a way to use embed so that I could do things like cast dates in subdocuments rather than have to write a mutator for each subdocument I may create.. ",
    "thilanga": "StyleCI issue has been fixed. Will do it tomorrow \ud83d\udc4d . @jenssegers can we get this PR merge to master?. This fixes failing test mentioned below\n1) QueueTest::testQueueJobExpired\nFailed asserting that 0 matches expected 1.\n/code/tests/QueueTest.php:50\n. PR #1437 fixes this,. ",
    "NGorco": "Was an error in logic. Sended data with $appends fields and then not modified nor cropped data pushed to server. Obviously, $appends would b there. . @ajaybhargav I think you can do before save data truncating. \nhttps://stackoverflow.com/questions/13518674/laravel-model-callbacks-after-save-before-save-etc/16461969#16461969\nOn corresponding event get appended fields keys and strip them from payload.. ",
    "sempixel": "Hey mate,\nDid you see this? https://github.com/jenssegers/laravel-mongodb#relations\n```\nRelations\nSupported relations are:\nhasOne\nhasMany\nbelongsTo\nbelongsToMany\nembedsOne\nembedsMany\n\n```. OK found. #234 \n'email' => 'required|string|email|max:255|unique:users,email,' . $user->id . ',_id',\nPeace \ud83d\udc50 . I guess it's linked to MorphMany missing functionality.\nedit: Found this https://stackoverflow.com/a/42107515. ",
    "brentkozjak": "Is there an elegant way to perform \"hasManyThrough\" functionality?. ",
    "vgladimir": "When this fill be fixed?. ",
    "lpj145": "lol #978 . #1322 if anybody have someone counter, please say me.. I don't think it alters anything with the friends of the laravel.. @jenssegers you can review this ?. This package have some errors, yesterday illuminate/database upgrade to 5.5.3 and crash Model, the package needed usage with laravel, if not, you need add app function with anonymous class with function #978.. To fine works:\n\"illuminate/console\": \"^5.2.2\",\n\"illuminate/filesystem\": \"^5.2.2\",\n\"jenssegers/mongodb\": \"dev-master\",\n\"illuminate/database\": \"5.5.2\",\n\"illuminate/container\": \"5.5.2\",\n\"illuminate/pagination\": \"^5.2.2\",. ",
    "jim5359": "What ever happened to this fix?  I'm having the same problem and the suggested fix works.  It would be nice to get this into the mainline code.. Awesome, thanks Ben!. I'm having the same issue and can't seem to find a solution.. Actually, I tried hacking that file and got rid of the error, but now it's just ignoring the $primaryKey setting.  So looks like this capability is broken in the latest version.. Awesome @DMNSteve !. Closing - this only seems to be an issue in my specific scenario.. ",
    "pimlie": "@jenssegers Sorry for the failed test, I have fixed the CI and now it passes. I would be obliged if you could merge this :). Not sure what you mean, but I added the HybridRelations trait for the User model as using that trait immediately gives an error without this fix. In the first commit I used 2 use statements which I replaced to be 1 statement, therefor this line shows as deleted.\nI dont think the Eloquent model class (either mongodb's or laravel's) implements one of these traits already. Ah ok. Thanks for merging.. ",
    "fabpin": "me too. ",
    "AndreasElia": "@kideny @fabpin \n\"jenssegers/mongodb\": \"dev-master\",. ",
    "nhanledev": "I personally use Carbon::now()->timestamp to save current time to Unix timestamp format.. ",
    "robin520": "@nhanle92 It wil still use mongotime to save the updated_at When I updated the document.. ",
    "dsalcedo": "Why not use \n```\nuse MongoDB\\BSON\\UTCDateTime;\nnew UTCDateTime('your date');\n$modelResult = [\n    'date'=> $obj['date']->toDateTime()\n]\n```. ",
    "josegustavo": "It works, thanks!. ",
    "LeonAlvarez": "@DMNSteve  Im having issue with Password Grant Tokens, the tokens user_id is always the first use on my DB, no matter wich credentials I use. Maybe could be better move this to its own package, so that we can choose when to add it or not. Could do same for other official Laravel ecosystem package that need MongoDB tuning, like Cashier.\nSo we could have MongoDB adaptors package unders laravel-mongodb ecosystem.\n@DMNSteve @jenssegers \n  . Any idea how to get the distance ?. @DMNSteve Im using your provider + classes adapted to extend MongoDB eloquent model, from your PR\nbut when I use the password credential type the  tokens user_id is always the first use on my DB, no matter wich credentials I use on the Auth process.\nphp\npublic function createNewApiToken($name , $client_id , $scopes = [])\n{\n    $token = $this->createToken($name, $scopes);\n    $token_model = Token::find($token->token->id);\n    $token_model->client_id = $client_id;\n    $token_model->save();\n    $token->token = $token_model;\n    return $token;\n}\nCurrently added that method and accesing it to auth, as a dirty fix \u00bfdid you have any Issue with password grant auth type ?. @DMNSteve if anything I can help let me know\n\"jenssegers/mongodb\": \"3.3.1\",\n\"laravel/framework\": \"5.5.*\",\n\"laravel/passport\": \"^4.0\",. Happy new year! @DMNSteve I fixed it not sure where was the issue I removed depencies isntaled again and added your files and its working fine now. \n  . ",
    "igorhaf": "I did this solution while this changes is not approved\nhttps://gist.github.com/igorhaf/8450f6868b15a4ae195fc60e6a2a8118. ",
    "ivivivn": "Thanks, this help me a lot. \nBut acutally, I am using Lumen which do not support AliasLoader so instead of using AliasLoader I have to use class_alias like this\nclass_alias(<Rewrited Class>, 'Laravel\\Passport\\AuthCode');\nIn case of someone face it like me.. ",
    "abd-mhainy": "thanks @StevePorter92 that's worked for me also i have been facing the same issue. ",
    "seredenko": "Mongodb not support transactions.\nIt has another logic for this. Check https://docs.mongodb.com/manual/tutorial/perform-two-phase-commits/. ",
    "fntneves": "MongoDB 4.0 now supports multi-document transactions.\n@jenssegers Any chance to have transactions working here?\nLet me know if you need help.. ",
    "eleazarbr": "This would be another excellent feature of the package!. ",
    "deyikong": "Any update on this @jenssegers ?. ",
    "ycgambo": "use DB::connection('mongodb')->getMongoClient() to access original MongoDB\\Driver and use DB::connection('mongodb')->getMongoClient()->startSession() to create a session and then start a transaction.. mongo transaction is a little different from mysql. you need to create a session first, and pass this session as a option when you do update. . ",
    "leong918": "DB::connection('mongodb')->getMongoClient()->startSession() does not work, even i use getDatabase method. but dont have this function.\ngot any idea two collection if got error, rollback the data.. @ycgambo How to create a session and pass the session as option by using laravel-mongodb ?. ",
    "doubtlymistaken": "@mashurimansur hey im already done with my paging. now my problem is how can i do my pagination with sorting. im trying this code\n$perangkats = perangkatModel::simplePaginate(10)->sortBy('tahun');\nbut i get error\nMethod links does not exist. (View: C:\\xampp\\htdocs\\kominfo\\resources\\views\\durab\\durability.blade.php)\nin\u00a0Macroable.php\u00a0(line 74)\n. ",
    "surajde16": "I found the solution by my self.\nI need to use like operator without pattern matching (%) symbol.\nModelName::where('tag','like','abc');\nThis will return both documents ( id1,id2).\nPlease let me know if there is any better solution exists for this query.. Hello All,\nThe issue is solved. I had to downgrade the Mongo DB version from 3.6 to 3.4. @JoyG42 probably you should update jenssegers/mongodb version but again for that you need to update laravel framework version.. ",
    "bramnauta": "I'm having the exact same issue. I'm using Laravel 5.5 and laravel-mongodb 3.3.0-alpha.\nIn my case, the error occurs in vendor/laravel/framework/src/Illuminate/Database/Connection.php on line 452; it seems $this->getPdo() returns null. The error occurs in the code below.\npublic function statement($query, $bindings = [])\n{\nreturn $this->run($query, $bindings, function ($query, $bindings) {\n    if ($this->pretending()) {\n        return true;\n    }\n\n    $statement = $this->getPdo()->prepare($query);  // Error occurs in this line\n\n    $this->bindValues($statement, $this->prepareBindings($bindings));\n\n    $this->recordsHaveBeenModified();\n\n    return $statement->execute();\n});\n\n}. I seem to have found a fix. The default User model is extending Illuminate\\Database\\Eloquent\\Model, where it has to extend Jenssegers\\Mongodb\\Eloquent\\Model to work with MongoDB. By changing the User model in app/User.php, this can be resolved. Replace app/User.php with the code from the following gist:\nhttps://gist.github.com/bramnauta/513ca76f4ff7811583fe91372ce6ddab. @Rudy-vgs That does the same thing; I didn't know there was a Jenssegers\\Mongodb\\Auth\\User class :). That's a lot cleaner!. ",
    "Rudy-vgs": "Same as @bramnauta here :(. Just found this and it's works for me https://github.com/jenssegers/laravel-mongodb/issues/1181. ",
    "glowens": "this did not work for me.  Any other suggestions?. ",
    "rachelies": "same issue here, encounterd while trying to \"belongsTo\" a mysql relation. ",
    "dunice": "@rachelies I was facing the same issue and figured out how to fix.\nI have the following entities:\nSearchRequestLog (mongodb connection)\nMarketplace (mysql connection)\nBut for some reason some properties from Marketplace were being overridden and one of them was $connection. So I had to force and set it manually with the following result:\nclass Marketplace extends \\Illuminate\\Database\\Eloquent\\Model\n{\n    protected $connection = 'mysql';\n}. ",
    "rakmaster": "Tables are created but on trying to create users it fails > Laravel 5.7, latest laravel-mongodb, using the Jenssegers\\Mongodb\\Auth\\User as Authenticatable method. It's clear that Laravel is looking for a pdo instance and not finding it because the Jenssegers Connection bypasses the Laravel Connection constructor, so pdo is never set. I understand why pdo isn't used, but it's blowing up any attempt at preparing a statement. \n```php artisan passport:install\nSymfony\\Component\\Debug\\Exception\\FatalThrowableError  : Call to a member function prepare() on null\nat ... /vendor/laravel/framework/src/Illuminate/Database/Connection.php:452\n    448|             if ($this->pretending()) {\n    449|                 return true;\n    450|             }\n    451| \n\n452|             $statement = $this->getPdo()->prepare($query);\n    453| \n    454|             $this->bindValues($statement, $this->prepareBindings($bindings));\n    455| \n    456|             $this->recordsHaveBeenModified();\n\nException trace:\n1   Illuminate\\Database\\Connection::Illuminate\\Database{closure}(\"insert into \"oauth_clients\" (\"user_id\", \"name\", \"secret\", \"redirect\", \"personal_access_client\", \"password_client\", \"revoked\", \"updated_at\", \"created_at\") values (?, ?, ?, ?, ?, ?, ?, ?, ?)\")\n     ... /vendor/laravel/framework/src/Illuminate/Database/Connection.php:657\n2   Illuminate\\Database\\Connection::runQueryCallback(\"insert into \"oauth_clients\" (\"user_id\", \"name\", \"secret\", \"redirect\", \"personal_access_client\", \"password_client\", \"revoked\", \"updated_at\", \"created_at\") values (?, ?, ?, ?, ?, ?, ?, ?, ?)\", Object(Closure))\n      /Users/logan/Documents/Projects/maglev-domain/vendor/laravel/framework/src/Illuminate/Database/Connection.php:624\nPlease use the argument -v to see more details.```\n. Same problem. \nIn Connection.php line 452: Call to a member function prepare() on null\nSeems like when you try to install passport using mongodb passport doesn't know what to do.. ",
    "blueneel05": "@rakmaster I also have exact same issue. did you solve it ?. Many people had this issue some solved it by implementing jessenger auth in user.php. but issue still exist for some users.\nany body found some solution ? I have the same issue... This solved my problem https://github.com/sadnub/laravel-mongodb-passport-fix. TRY THIS : https://github.com/sadnub/laravel-mongodb-passport-fix WORKED FOR ME. ",
    "ludo1960": "same problem here, any ideas?. @marcnewton  Thanks for the info, reverted back as you posted get it working. gimme a clue guys????. All sorted now, Thanks Jens!. what have you tried?. install the latest php mongodb driver first, forget the other ones. ",
    "gstarle92": "Just replace the Illuminate\\Database\\Eloquent\\Model;  with  Jenssegers\\Mongodb\\Eloquent\\Model \nin below files\n..\\vendor\\laravel\\passport\\src\\Token.php\n..\\vendor\\laravel\\passport\\src\\AuthCode.php\n ..\\vendor\\laravel\\passport\\src\\Client.php\n..\\vendor\\laravel\\passport\\src\\PersonalAccessClient.php\nand  protected $table= \"Table_name\" variable with  protected $collection=\"Table_name\"\nAs we passport by default takes the mysql PDO connection but at backed we have MongoDB. \n. ",
    "alexweissman": "In UF 4.1, you should be able to just override the default db service, and replace the foreach loop that adds the connections with something like:\nforeach ($config['db'] as $name => $dbConfig) {\n    if ($dbConfig['driver'] == 'mongodb') {\n        $capsule->getDatabaseManager()->extend($name, function ($dbConfig) {\n            return new Jenssegers\\Mongodb\\Connection($dbConfig);\n        });\n    } else {\n        $capsule->addConnection($dbConfig, $name);\n    }\n}\n. Well, my impression of this library is that it should be generating Mongo queries, not SQL.  So, my guess is there is still something wrong in the way you're setting up your db service in UF.  \nAt any rate, we shouldn't clutter this project's issue tracker with usage questions - let's continue debugging your setup in chat.. ",
    "marcustan138": "Tried that but it will report SQL error.  From the flow, it seems that jenssengers mongodb was not invoked at all.  Mongodb underlying query syntax apparently not the same as SQL.  . ",
    "robbytaylor": "Thanks \ud83d\udc4d . @gzanthony You may want to edit your last reply to remove the password.\nCan you share a screenshot of the error you're getting?. ",
    "pedrosalpr": "I found the solution, the problem was the environment variable with the mongo settings database.php.. ",
    "Zaknfn": "+1. Thanks \ud83d\udc4f. ",
    "gazben": "https://github.com/jenssegers/laravel-mongodb/releases/tag/v3.3.0-alpha\nWe should test it out. Related to #397.\nIf you want to serialize an embedded collection the second parameter will be null, not an empty collection. We need to allow this.. Don't merge. The embeds serialization is broken. Help needed. ",
    "iMont4": "```\n$category = \\App\\Models\\Product\\Category::first();\n$product = new \\App\\Models\\Product\\Product();\n$product->title = \"title\";\n$product->save();\n$product->categories()->attach($category);\n```. ",
    "jgcl": "this bug causes MaxAttemptsExceededException to all jobs. I solved my problem using Beanstalk Queues. fix MaxAttemptsExceededException inserted on all jobs. merge this pull request, please!!!!!!. ",
    "iowaz": "Actually what he means is:\nWhen running a job, if the job fails, the entire jobs collection is affected, all the entries \"attempts\" are incremented, and when you try to run the next job, if you failed the previous with more than you --tries parameter, it fails throwing a MaxAttempsExceededExcepetion.. ",
    "mts88": "@jenssegers the fix is released in any version? For microservice based only on Mongo is a seriously problem this bug.\nThanks in advance.. How did you editColumn or added new one?. > How did you editColumn or added new one?\nSolved by myself after saw the exetended class. Thanks, solution works! . ",
    "arthurkirkosa": "@jenssegers this does solve the reset password problem because of laravel latest changes.. @RemiCollin which tag version from your fork includes this patch?. ",
    "arunmisra2273": "I get error Parse error: syntax error, unexpected 'if' (T_IF) when I use this fix. works. Thank you! @nolanle . ",
    "koAndy": "@jenssegers Tested and worked! Please merge this!. You are completely right. Debuging it for a few hours, just now I realized that  the connection must be remade!\nThanks a lot!. ",
    "lzao": "Sorry my mistake, I do not use lumens.\nBut there was a new problem.\nOn line 83 of file .../vendor/mongodb/mongodb/src/Client.php,  Class 'MongoDB\\Driver\\Manager' not found FatalThrowableError appeared.\nI did the Mongo Model the way I did it.\n```\n<? php\nnamespace App\\Models\\Mongo;\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Eloquent;\nclass Keywords extends Eloquent\n{\n\u00a0\u00a0\u00a0\u00a0 protected $connection = 'mongodb';\n\u00a0\u00a0\u00a0\u00a0 protected $collection = 'keywords';\n}\nAnd I just didKeywords::all()```on the Controller.\nI think I was wrong here. But I do not know what went wrong.\nI would appreciate it if you answered my question.. ",
    "Juli55": "For me the same problem, but in migration and seeding it works but not in the website. ",
    "doliskani": "iI have the same problem, please help me one. Yes I did.\nI use Laravel 5.7 and my php version is 7.2.4 and also  mongodb extension is Thread Safe (TS) x64 version 1.5.3. \nC:\\wamp64\\bin\\php>php -m\n[PHP Modules]\nbcmath\nbz2\ncalendar\nCore\nctype\ncurl\ndate\ndom\nexif\nfileinfo\nfilter\ngd\ngettext\ngmp\nhash\niconv\nimap\nintl\njson\nldap\nlibxml\nmbstring\nmysqli\nmysqlnd\nopenssl\npcre\nPDO\npdo_mysql\npdo_sqlite\nPhar\nreadline\nReflection\nsession\nSimpleXML\nsoap\nsockets\nSPL\nstandard\ntokenizer\nwddx\nxml\nxmlreader\nxmlrpc\nxmlwriter\nxsl\nzip\nzlib\n[Zend Modules]\nI don't understand why it does't display Mongo at here but it is shown in the output of the phpinfo()\n\n. None of the above links resolved my issue\nI installed jenssegers  as follows :\ncomposer require jenssegers/mongodb --ignore-platform-reqs\nCan it help to solve?\n. I can store the information using the command line, but I can't in Laravel, where is the problem?\nand i added \nJenssegers\\Mongodb\\MongodbServiceProvider::class,\nin service provider. \nThanks. I'm really helpless, why this error does not fix. ",
    "aanimation": "hi all, i was trial and error how to find solutions Class 'MongoDB\\Driver\\Manager' not found\ni just flow the machine (macbook air with mojave), MAMP + php7.1.19, another php installed 7.2.7, but in MAMP i used 7.1.19 as default.\nFirst problem : i cant do composer install/update, since use jenssegers/mongodb,\nmachine said, i need an extension for mongodb support,\nFirst solved : research how to install this extension to my default php installed.\nsolved by (http://php.net/manual/en/mongodb.installation.manual.php)\n`Manually Installing the MongoDB PHP Driver\n$ git clone https://github.com/mongodb/mongo-php-driver.git\n$ cd mongo-php-driver\n$ git submodule update --init\n$ phpize\n$ ./configure\n$ make all\n$ sudo make install`\nIf you have problem with configure, just do :\n$ brew install autoconf\nthen i check file mongodb.so in php/php7.1.19/lib/php/extensions/no-debug-non-zts-20160303 has already created.\ni check php.ini too (php/pph7.1.19/conf), make sure that extension. But I remember I was wrote this line before (another research) : \u2028extension=mongodb.so in ; Extensions groups.\n\u2028I just double check.\nSecond problem,\nI check phpinfo in browser, I\u2019m not find word as mongo, I\u2019m little frustate. Huuftt.\nOk, I check php -m in terminal, no mongo found too.\nIm going to try run mongod in terminal. Then recheck last action : phpinfo + php -m. Result shown  me more frustation.\nThe research (mac) :\nI found in folder php/pph7.1.19/conf there are files :\n- php.ini\n- Php.ini.temp\n- Pear.conf\nWhat is temp file, when temp file created ? (May someone can explain it). I just check it the contents and look like php.ini contents.\nOK..I wrote a line extension for mongo too, like before.\nThen restart server (in MAMP) & check phpinfo :\nmongodb show detailed. I think I was success then happy,\nBack to terminal and check php -m, no mongo again. Huuuft\ni research by delete temp file (backup before) then do some last step, but not working, so i restore file and recheck\nFinal\nWait\u2026I check php \u2014ini result:\u2028Configuration File (php.ini) Path: /Applications/MAMP/bin/php/php7.1.19/conf\nLoaded Configuration File:         /Library/Application Support/appsolute/MAMP PRO/conf/php7.1.19.ini\nLoaded conf different with conf file.\nso\u2026I get this file, to add line extension=mongodb.so, I hope this make sense.\nResult\nRestart server and re-check like before, hahahahaha\u2026 mongo is running.\nPhpinfo and php module should be show mongo\u2028\u2028NOTE : mongod still running on other tab in terminal. You can check in browser as http://127.0.0.1:27017/\nTo make sure mongodb already in machine what I expected for my app (Laravel 5.6 + postgre + mongodb for logging).\nphp artisan migrate:fresh \u2014seed get successfull.\nbtw..thanks for all, for comments.\nIm a amateur for this case, im newbie for Mac, this first half-year using Mac-OS.\nI hope some friends can explain in advanced. \ud83d\udc6f\u200d\u2642\ufe0f \nsorry late, composer update successfull while mongo client was running,\nhttp://127.0.0.1:27017/ shown \nIt looks like you are trying to access MongoDB over HTTP on the native driver port.. ",
    "zhong-shizeng": "me too. ",
    "MrVidon": "@zhong-shizeng how to fix it?. ",
    "ProgrammerM3": "Ok!\nIf i remove /.* from beginning and .*/g at the end. It works.. ",
    "kamihouse": "Hi @mo7ammadrashidi11, see this: https://github.com/mongodb/mongo-php-library/issues/412#issuecomment-346107357. ",
    "slouma2000": "It's possible de use whereRaw\n$alerts = Alert::whereRaw([\n                'loc' => [\n                    '$not' => [\n                        '$geoWithin' => [\n                            '$centerSphere' => [\n                                [$lng,$lat], \n                                $this->kmsToRadian(1) \n                            ]\n                        ]\n                    ]\n                ]\n            ])->get();. ",
    "willtj": "We GitHub amateurs have been inadvertently pushing into this PR - closing this one and I'll open another for its intended purpose.. Sorry, wrong repo... ",
    "zissmo": "+1. ",
    "nutjaa": "I just quick fix by changing to custom validation. ",
    "tolgatasci": "\"user_id\" : ObjectId(\"5ad2612e1c76fb0c28000922\"),\nobjectID not result\n{\n    \"_id\" : ObjectId(\"5ad261321c76fb0c2800303f\"),\n    \"slug\" : \"5ad26132ad114\",\n    \"title\" : \"Title\",\n    \"content\" : \"Content\",\n    \"tags\" : [ \n        \"Tag1\", \n        \"Tag2\"\n    ],\n    \"user_id\" : \"5ad2612e1c76fb0c28000922\",\n}\nchecking successed\ni want search object id hasmany. I have tried such a solution. I don't know how good the performance is. thank you so much. I moved on with your suggestion.\n```\n<?php\nnamespace App;\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Eloquent;\nclass Album extends Eloquent\n{\n    protected $connection = 'mongodb';\n    protected $collection = 'tt_albums';\n    protected $fillable = [\n        'name','image','description','musics','artist'\n    ];\n    public function __destruct()\n    {\n    var_dump(\\DB::getQueryLog());\n\n}\n\npublic function import($model,$foreign_key){\n    $datas = (array)$this->{$foreign_key};\n    $ids = array();\n    foreach($datas as $data):\n        $data = (array) $data;\n\n        $ids[] = $data['oid'];\n    endforeach;\n\n    $foreign = $model::whereIn('_id',$ids)->get();\n\n    $this->{$foreign_key} = $foreign;\n    $this->attributes[$foreign_key] = $foreign;\n    return $this;\n}\n\n}\n```\ncalling \n$album = Album::find(request()->query('id'))->import('\\App\\Music','musics');\n    dd($album);. ",
    "carusogabriel": "@jenssegers By Travis error log, should we skip the installation in PHP 7.2?. ",
    "MickaelAmar": "I realized this can only be done through a ManyToMany relationship. Check this link.\nhasMany method doesn't allow mongodb documents to be used with an array of id. Therefore, the related collection should contain 1 document per related id if you want to use the relationship properly.\n. ",
    "hosseinjafari24": "jenssegers/laravel-mongodb not supported mongodb connection \nto use passport in laravel with mongodb , you install this package :\nhttps://github.com/designmynight/laravel-mongodb-passport. install this version on your project :\n\"jenssegers/mongodb\": \"3.3.1\". 1- open composer.json file \n2- add \"jenssegers/mongodb\": \"^3.3.1\" into require\n3-open terminal in project directory and composer update. ",
    "danjohnson95": "\ud83c\udf89. ",
    "Wachsmann": "Having the same problem here. But the embedsOne works fine. . ",
    "naonak": "Same for me. Someone can help ? Thanks !. ",
    "bzbislawski": "I have the same problem with latests version of this library and laravel 5.8. ",
    "gzanthony": "thanks for you help, but it not work.. laravel database config i have try this\n    'mongodb' => [\n        'driver' => 'mongodb',\n        'dsn' => 'mongodb://' . rawurlencode('sqpon:f1041Jn6gS4@/datas/run/mongodb/mongodb-27017.sock:0'),\n        'database' => env('MONGODB_DATABASE', 'sqpon'),\n    ],\n\nit's not work too, any idea where is error ??. thanks for you remine, the password not important.\nhere is my demo site.\nhttp://demo.sqpon.bokmanli.com/test\ndemo site mongodb config is my last post.\n  . ",
    "dzhiryakov": "Confirm a problem\nphp\nprotected $dates = ['export.system.uploaded_at'];\nInput data:\njson\n{\n    \"export\" : {\n        \"system\" : {\n            \"uploaded_at\" : \"2018-01-01 12:00:00\"\n        }\n    }\n}\nSaved in collection:\njson\n{\n    \"export\" : {\n        \"system\" : {\n            \"uploaded_at\" : \"2018-01-01 12:00:00\"\n        }\n    }\n}\nHow it must be:\njson\n{\n    \"export\" : {\n        \"system\" : {\n            \"uploaded_at\" : ISODate(\"2018-01-10T12:00:00.000Z\")\n        }\n    }\n}\nProblem only for nested fields. ",
    "LucasLeandro1204": "Did u solved this issue? @jetamooz \nI'm having trouble when I use $query->project with paginate. Did you fixed it? @theminer3746 . @lscarneiro I created a trait that resets the db\n```php\nphp\n\n<pnamespace Tests;\nuse DB;\nuse Jenssegers\\Mongodb\\Schema\\Blueprint;\ntrait RefreshDatabase\n{\n    /*\n     * Set up function.\n     /\n    public function setUp(): void\n    {\n        parent::setUp();\n    if ($this->hasDependencies()) {\n        return;\n    }\n\n    $this->dropAllCollections();\n}\n\n/**\n * Drop all collections.\n */\nprotected function dropAllCollections(): void\n{\n    $mongo = DB::connection('mongodb');\n\n    foreach ($mongo->listCollections() as $collection) {\n        if (starts_with($name = (string) $collection->getName(), 'system')) {\n            continue;\n        }\n\n        (new Blueprint($mongo, $name))->drop();\n    }\n}\n\n}\n```. I do have the same problem =/. ",
    "xemose": "I'm having the same issue, did you find a solution?. That doesn't seem to work for me hm. The solution I found is this\n```\nuse Illuminate\\Database\\Capsule\\Manager as Capsule;\nCapsule::connection('mongodb')->collection('default')->where('_id', '=', $ID)->get();\n```. ",
    "syaifulsz": "It is fixed on dev-master branch but it was not push as an official release tag yet. composer require jenssegers/mongodb:dev-master or add \"jenssegers/mongodb\": \"dev-master\" to composer.json file and do composer update or composer install.\nWorks for me for non-laravel usage.. ",
    "innobrig": "Confirmed that dev-master works in standalone mode.. I found https://github.com/jenssegers/laravel-mongodb/issues/1402 and pulling dev-master fixes the issue.. Thank you for your reply. I understand what you're saying, but I'd like to avoid the entire scenario of rounding, decimal precision, etc. \nI found this: https://docs.mongodb.com/manual/tutorial/model-monetary-data/\nand I'd like to use the NumberDecimal type for a particular column but it's not clear to me how to achieve this using this API.\n. Works like a charm, thank you!. ",
    "BurpyDelivers": "Can you please fix this.. ",
    "tuandm": "Laravel dropped query caching since 5.1:\nEloquent Caching\nEloquent no longer provides the remember method for caching queries. You now are responsible for caching your queries manually using the Cache::remember function.\nhttps://laravel.com/docs/5.1/upgrade#upgrade-5.0\nI think we should follow this update of Laravel framework. Manual caching is more suitable for DB queries as it's manageable and easy to clear individual cache by key. I don't know how did you store company, but I could query reference with something like this:\nArticle::where('author.$id', $user['_id']);\nI'm not the big fan of document reference.. ",
    "marlongichie": "+1 Also experiencing this issue. Were you able to figure this out @matthewerskine ?. ",
    "pkpk520": "Try use setAttribute( $key, $value ) like this :\n$journalA->setAttribute( \"users\", [ $userA->toArray(), $userB->toArray() ]);\n. ",
    "JoyG42": "Is there any way to solve it with keep using MongoDB 3.6??. same issue here \nIs there anyone who can solve?\nLaravel 5.1\nPhp 5.6.36\nMongoDB 3.6. ",
    "amittrigma": "any solution so far?. ",
    "milanspv": "@jenssegers any updates on this?. @jenssegers This should be at least available on v3.3.x and Laravel 5.5 (LTS).. @jenssegers Could you please review the PR and provide any kind of feedback? The review should be prioritized since it contains a fix for the core functionality that is not working properly in the current implementation.. @jenssegers what version of the package will this be available on? Ref: https://github.com/jenssegers/laravel-mongodb/pull/1423#issuecomment-368486582. @jenssegers v3.4.1 requires Laravel 5.6. Any chance to make this available to those of us who work with Laravel 5.5 LTS (v3.3.x release)? . ",
    "nickalcala": "I used tymon/jwt-auth with jenssegers/laravel-mongodb and I solved it by updating identifier key in config/jwt.php from id to _id.. ",
    "SakyaVarro": "i have the same problem. . ",
    "mthler": "Hi alexjose,\ndid you try:\nSector::where('trades._id', '5a79b1ecc062ce77aa6bf612')\n            ->project([\n            'trades' => [\n                '$elemMatch' => [\n                    '_id' => '5a79b1ecc062ce77aa6bf612'\n                ]\n            ]]);\nthis should give you \n{\n_id: 5a799303c062ce77ab0145a3\ntrades: {\n            \"name\" : \"Sample Trade 1 for Sector 1\",\n            \"updated_at\" : ISODate(\"2018-02-06T19:17:24.000+05:30\"),\n            \"created_at\" : ISODate(\"2018-02-06T19:17:24.000+05:30\"),\n            \"_id\" : ObjectId(\"5a79b1ecc062ce77aa6bf612\")\n        }\n}. ",
    "pierrocknroll": "Please merge :). Go go go !. ",
    "kskrlin": "When will this support be available?. ",
    "solofeed": "Still waiting for merge)\nThank you for PR). @IgnitedCoder why did you hurry up to update?\nWhat is so important in 5.6?). I just updated signature in vendor and beginning test application on new version)\nAnd I am still waiting for update deployer for support Symfony 4. +1, the same behavior. ",
    "avirdz": "Waiting for this . ",
    "Oliver-Meyer": "Also waiting - please merge :o). ",
    "lalawunderland": "Would be nice if someone could merge it ^.^\u00b0. ",
    "IgnitedCoder": "@jenssegers  Any chance of an update on this PR. We just moved to 5.6 and on a tight deadline. Sorry for the nudge. . @solofeed Better API handling and limiting. More Blade features we need for our project. Better variable casting in models ['field' => 'boolean'] so its better for MySQL inserting/updating, UUID is built in & bootstrap 4.  . @bojcheski The client determines what I need to do... and this is a new project so I could not tell them what to do, they already had 5.6 installed. :) . Just for clarity, does dev-master include the 5.6 fixes?. Yep, not merged... @jenssegers when this merge will happen, please let us know. Sorry to be pushy. :) . ",
    "bojcheski": "@IgnitedCoder \nNever start a project unless all resources are available.\nhttps://s-media-cache-ak0.pinimg.com/originals/17/bc/49/17bc49b0aa3193b7281f000c5edd3602.jpg\nI also did update, but only my dev env, and this is the last step before pushing things live.. ",
    "SelimSalihovic": ":shipit: . @jenssegers Is this going out in a new release soon? We desperately need it. I assume others do as well.. @jenssegers Quick Draw Jens. Thanks man \ud83c\udf7b . ",
    "drewhammond": "Shameless bump for merge. ",
    "Sohit18595": "I am also getting same issue with Jenssegers\\Mongodb package.... ",
    "jwrunge": "I'm having the same problem, but installed and used with no problem a few days ago. I'm noticing the MongoDB PHP driver was updated on 2/9. Perhaps that has something to do with it?\nEDIT: Never mind. Just now noticing that 'laravel new' command is installing Laravel 5.6, and that doesn't seem to be supported yet. Pays to read more carefully.... ",
    "vad-naitik": "I am also getting the same issue with Jenssegers\\Mongodb package...\nany idea about that?\nhow can I solve and how can I use a passport in Laravel with MongoDB. ",
    "davidcamhi": "I was able to fix this. It was my mistake, I realized my member instance didn't have an _id so mongodb wasn't being able to modify it even though I could access it through its user instance. Thanks for the reply, anyways!. ",
    "equero": "Nice php unit results. ",
    "nicholasmaddren": "Having exactly the same problem, anybody else managed to fix this?. ",
    "gopeshjangid2": "hi,\ni am using mongo 4 with php 5.6....i facing the cursor option is required error...\nif i use cursor then , i face \"wrong numbers of parameteres\"...\nwhat is the solution ?\n. ",
    "rupendradhiman-kiwi": "I have the same issue on QA environment.\nI am running a project using Docker. Docker configuration are same on all environments.\nBut the issue is only on QA.\nlaravel.ERROR: Unrecognized expression '$toString'. ",
    "lqtian": "php 7.1.8, mongoDB 3.6.10 have the same issue, but I'm not using laravel. ",
    "Xuan-Goldenf": "You have to use \"intval\" in both function of take && skip\n$trans = DB::collection(\"collection_name\")\n         ->take( intval($limit) )\n         ->skip( intval($skip) )->get();. ",
    "brad13x": "The fix is to update mongodb/mongodb and update mongo.\nsudo pecl install mongodb\nsudo systemctl restart php7.1-fpm\nsudo systemctl restart nginx. ",
    "webmaster-uni": "Following. Same problem with Laravel 5.6. ",
    "rbochenski": "+1, same for me in laravel 5.6. ",
    "olimarferraz": "I had the same problem. Solved updating to release v3.4.0.. Works for me @kwame101 , thanks!. ",
    "maneeshms": "Hi Thank you for your response.... I am using windows machine.... I followed the same.....\n\n\n. ",
    "sambatlim": "follow the step in the link below, It works for me.\nhttps://stackoverflow.com/questions/48421836/how-to-install-mongodb-driver-in-php. ",
    "MordiSacks": "Had the same problem, I think something with the dsn parsing is broken\nthis worked for me\n'mongodb' => [\n            'driver'   => 'mongodb',\n            'host'     => [\n                'xxx-00-00-mfddc.mongodb.net',\n                'xxx-00-01-mfddc.mongodb.net',\n                'xxx-00-02-mfddc.mongodb.net',\n            ],\n            'port'     => 27017,\n            'database' => env('MONGODB_DATABASE'),\n            'username' => env('MONGODB_USERNAME'),\n            'password' => env('MONGODB_PASSWORD'),\n            'options'  => [\n                'ssl'        => true,\n                'replicaSet' => 'replicaSetName',\n            ],\n        ], . ",
    "Bowens20832": "@MordiSacks lol I literally took your approach a couple hours ago which fixed the issue. Thank you for your suggestion. . Just call group twice?\n. @jenssegers please close!. Can you give an example of a query in Laravel and also the raw query in the Mongo shell if you can?\nYour issue does not explain the context very well. . Use an ISODate instead. \n$users = User::where('custom_date', '=', ISODate(\"2017-09-01T00:00:00.000Z\"))->get();. ",
    "scx7": "Hello, I had the same problem, just add the Notifiable class on User model\n`<?php\nnamespace App\\Models;\nuse DateTimeZone;\nuse Illuminate\\Notifications\\Notifiable;\nuse Illuminate\\Auth\\Authenticatable;\nuse Jenssegers\\Mongodb\\Eloquent\\Model as Eloquent;\nuse Illuminate\\Auth\\Passwords\\CanResetPassword;\nuse Illuminate\\Contracts\\Auth\\Authenticatable as AuthenticatableContract;\nuse Illuminate\\Contracts\\Auth\\CanResetPassword as CanResetPasswordContract;\nclass User extends Eloquent implements AuthenticatableContract,  CanResetPasswordContract {\nuse Authenticatable, CanResetPassword, Notifiable;\n\n}`\n. ",
    "sadnub": "I just created a console command to fix the passport vendor files. Just run php artisan fix:passport.\nIt is available here: https://github.com/sadnub/laravel-mongodb-passport-fix\n. ",
    "BenjaminOwlient": "Yes I mean groupBy, thank you I edited.. ",
    "faghihi": "MyModel->groupBy('color')->orderBy('date', 'asc')->get(['color', 'date']);\nmaybe this works. ",
    "muzafarali": "@jenssegers  is that possible... to use both ?. ",
    "halaei": "1397 is the braking pull request.\nIn Connection class $this->getDsn() returns the invalid dsn \"mongodb://localhost%3A27017\"\nping @StevePorter92  . This is a great package. It is sad that the issues and pull requests are not handled as fast as they could be. Probably the owner, @jenssegers, needs some maintenance help?. Hi. In case you are still interested, please check #1664 which uses fromPHP() function for getDirty().. I think the related PR in laravel/framework fixes this as well. Just a need to delete a couple of lines after laravel 5.7 release.. This PR includes PR #1664 and is backward incompatible as well. . It also covers #1468.. ",
    "pendexgabo": "I would like to offer my help in any way in order to push this live. #1397 broke many things at once. ",
    "dorinmusteata": "https://github.com/tejomayonline/laravel-jwt-auth-mongodb\nDo not install this package , that broke the JWTAuth class, i've made a fresh laravel install and everything works now. . Query your db with DB class and set a dynamic database name.. DB::disconnect('mongodb'); // Connection name\nConfig::set('database.connections.mongodb.database', $dbName); // New database name\nOr , if you have small amount of users , you can define your connections array in database.php \nOr , you can make a connection manager which will affect certain models connections. ",
    "emrecanozkok": "@dorinmusteata im using mysql for my all of customer information and login system im using mongo for only timeseries data and some customer have multiple location.i need to change db name and collection dynamically i dont understand how i will make.i can change codes of this library but i dont want to do it.. @dorinmusteata Sorry for my problem.mongo is not my primary db connections.my default connection is mysql.\nAnd how i can run this command i dont know\nim new switched codeigniter to laravel\n$client = DB::getMongoClient();\n$db = DB::getMongoDB();\nwhat is the DB instance or what i need to import top of my controller file.or where its usable controller or model i dont know. if its works for me i can change db and collection whatever i need.\n. im removed this lib and starting to use native mongo lib with laravel, and im writing database interface now.\nThanx for all.. ",
    "hassanzohdy": "For anyone coming from google\nHere is the available way to list all collections in the database.\nphp\nforeach (\\DB::connection()->getMongoDB()->listCollections() as $collection) {\n    echo $collection->getName() ;\n}\n. ",
    "shivamgupta94": "Same issue. Thanks for the quick fix @MattDalm \n. ",
    "csgt": "This only works when the name of the key ends with _id.  This is not the case for every database.  The correct solution would be to parse de $casts value, and convert each value there to string.\nFor example, in the model, adding\n$casts = [\n    'remoteKey' => 'string'\n]\npublic function brand()\n{\n    return $this->belongsTo(Brand::class, 'remoteKey', '_id');\n}\nShould convert the remoteKey ObjectID to string in the where statement.. This is also a little extreme, since it goes through every single column, but it should work, since the function $this->convertKeys checks if the value is an ObjectID:\n  // Convert id's.\n        if (isset($where['column'])) {\n            // Multiple values.\n            if (isset($where['values'])) {\n                foreach ($where['values'] as &$value) {\n                    $value = $this->convertKey($value);\n                }\n            } // Single value.\n            elseif (isset($where['value'])) {\n                $where['value'] = $this->convertKey($where['value']);\n            }\n        }.\n",
    "zacroker": "This fixed it for me @MattDalm . ",
    "libasoles": "Did you solve this? I'm in the same stage.. Ok, for me, the solution was removing the user/pass:\n'username' => 'example',\n  'password' => 'example',\nIt seems there's no need for it. \n. ",
    "vitorhugoro1": "I have a same problem, but it's only happen in Laravel 5.6, in 5.5 and lower, it's don't happen. I use the second setting and don't work, I tried downgrade the mongodb composer lib, but only downgrade the Laravel and laravel-mongodb lib work to me.\nI dump the laravel-mongodb lib to get who sended to mongodb lib and was correct.. ",
    "ajitdas123": "@libasoles Hi can you please share your complete settings :))\nI hope that is ok. I still could not find the solution . ",
    "devfrey": "You only need migrations to create indexes. Because MongoDB is NoSQL, there's no need to define a database schema.. ",
    "sololance": "@jenssegers maybe now it's right time finally to manage this repo?\nIf you don't have any time let community manage it for all of us who are using this library in their project.\nThanks.. @ollieread well, if @jenssegers working on a new version why not announce it on main page or make it pinned? I'm sure a lot of people are ready to help but it's impossible to track his personal github profile neither tracking his decisions which lost somewhere?. ",
    "taha": "Hi, is this fix going to be released soon? :). ",
    "xkovacikm": "Yeah, that would be awesome. I can't use this pacakge outside of Laravel now. (I actually can, but with very ugly workaround only). ",
    "lscarneiro": "Would love to know if some of you achieved a solution.... Thanks @LucasLeandro1204.\nI wanted a more \"generic\" approach, so what I did was create a Trait in app\\Traits (new folder in my case) with:\n```\n<?php\nnamespace App\\Traits;\nuse Illuminate\\Contracts\\Console\\Kernel;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabaseState;\ntrait RefreshDatabaseTransactionLess\n{\n    /\n     * Refresh a conventional test database.\n     \n     * @return void\n     /\n    public function refreshTestDatabase()\n    {\n        if (!RefreshDatabaseState::$migrated) {\n            $this->artisan('migrate:fresh', $this->shouldDropViews() ? [\n                '--drop-views' => true,\n            ] : []);\n        $this->app[Kernel::class]->setArtisan(null);\n\n        RefreshDatabaseState::$migrated = true;\n    }\n\n}\n\n}\n```\nAnd in my test class I use both RefreshDatabase and RefreshDatabaseTransactionLess this way:\nuse RefreshDatabase, RefreshDatabaseTransactionless {\n        RefreshDatabaseTransactionless::refreshTestDatabase insteadof RefreshDatabase;\n    }\nThat tip I got from this StackOverflow post\nI consider it a Hack, because it does not solve the original problem, which is execute transactions with this MongoDB Laravel driver.\nThe code from refreshTestDatabase() inside RefreshDatabaseTransactionLess didn't come out of thin air, it's actually the same code from the original trait, but skipping the call to $this->beginDatabaseTransaction();. Just thinking a little further.\nAn even cleaner approach is to instead of overriding refreshTestDatabase(), to actually override beginDatabaseTransaction().\nJust tested here and it works like a charm!\nin RefreshDatabaseTransactionLess trait\n```\n<?php\nnamespace App\\Traits;\nuse Illuminate\\Contracts\\Console\\Kernel;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabaseState;\ntrait RefreshDatabaseTransactionLess\n{\n    /\n     * Begin a database transaction on the testing database.\n     \n     * @return void\n     /\n    public function beginDatabaseTransaction()\n    {\n        // Nothing! This is on purpose! just skip me!\n    }\n}\n```\nAnd on the test class:\nuse RefreshDatabase, RefreshDatabaseTransactionless {\n    RefreshDatabaseTransactionless::beginDatabaseTransaction insteadof RefreshDatabase;\n}\nThat way we're achieving the exact \"hack\" that we want, skip the transaction part (that breaks the test).\nI created this Gist containing an example of implementation of the Hack. Just discovered that in my case, using use DatabaseMigrations; trait, solves my actual problem (reset database after each test) with just one line.. @prashant-pokhriyal sorry for the delay.\nIf you're talking about the specific $connection->beginTransaction(); on RefreshDatabase trait, I would say that this is not the easiest approach because it is a method from a yet another class.\nWhich behavior are you targetting specifically?. I don't think I have a solution for your case, maybe you could try some help with the library issues page, here in my case I didn't change laravel-mongodb code itself, but rather the code that \"depends\" on transactions per se. . ",
    "ruslanstarikov": "I have messed up the formatting with my tabbage. I'll close and re-create the pull request. Thank you.. ",
    "mnich0ls": "@jenssegers any objections to merging this as well? Thanks. . Thank you, sir! Feel free to mention me in any issues you need a hand with. Happy to help with this project. . ",
    "MauroB45": "https://github.com/laravel/framework/issues/22681. ",
    "arju88nair": "Found any solution for this?. @george-viaud That was the time shown in epoch format. Actually I am doing the diffForHumans() in an Accessor. Once I am passing the collection to a Blade template, I am getting the above error. Thanks. ",
    "GameO7er": "\nFound any solution for this?\n\nUnfortunately no.. ",
    "xxCryptoxx": "$randomUser = User::all()->inRandomOrder()->first();\nthis might work if not\n$randomUser = DB::table('users') ->inRandomOrder() ->first();. ",
    "thureos": "Thanks @xxCryptoxx , but non of this worked.\nI got this with both eloquent or query builder.\n[MongoDB\\Driver\\Exception\\ServerException] bad sort specification. ",
    "Didstriker": "Got the same problem and just found out that MongoDB has no built-in way to return random documents.\nThere is something similar though, from version 3.2 (https://docs.mongodb.com/manual/reference/operator/aggregation/sample/) but as the docs say, it might return more than once the same record on a request. \nUsed it on my code like; \n$result = myModel::raw(function($collection){\nreturn $collection->aggregate([\n                ['$sample' => ['size' => 3]]\n            ]);\n}). ",
    "Jaffer2x": "\nGot the same problem and just found out that MongoDB has no built-in way to return random documents.\nThere is something similar though, from version 3.2 (https://docs.mongodb.com/manual/reference/operator/aggregation/sample/) but as the docs say, it might return more than once the same record on a request.\nUsed it on my code like;\n$result = myModel::raw(function($collection){ return $collection->aggregate([ ['$sample' => ['size' => 3]] ]); })\n\nThank u!! worked like a charm. \nadding a condition:\nraw(function($collection){ return $collection->aggregate([ ['$sample' => ['size' => 5]] ]); })->where('Active','=',true);. ",
    "Litiano": "solve #1173. ",
    "felipsmartins": "I would like to know that also well.. ",
    "jafar-albadarneh": "Have you solved this issue ? am running into the same problem !\n. ",
    "aysenli": "@sharmahemal \nam running into the same problem  too!\nyour mongodb service did not open the certification ???   --auth. https://pecl.php.net/package-changelog.php?package=mongodb\n [PHPC-895] - Require 16-byte data length for Binary UUID subtypes 0x03 and 0x04\n [PHPC-914] - php mongodb connect 'SCRAM Failure: invalid salt length of 0 in sasl step2' exception\nBy looking at the changelog for mongodb, trying to change the length of the account password, the problem has been solved.. ",
    "Stackout": "If any one wants a quick work around or are having issues, here was my temporary resolve:\n```\n'email' => [\n                'required',\n                'email',\n                function($attribute, $value, $fail) {\n                if($attribute == 'email'){\n                    $customer = Customer::where($attribute, 'like', $value)->first();\n                    if($customer !== null)\n                        if($this->id != $customer->id)\n                            return $fail(ucfirst($attribute).' already exists.');\n                }\n\n            },\n        ],\n\n```. ",
    "Tolerant": "Me help this:\n'issue_id' => [\n    'required',\n    'exists:mongodb.issues,_id'\n ],\nJust add the  mongodb name your db connection before collection.. ",
    "Charlie-Lucas": "It seems to be a weird bug from Laravel, i'll investigate. ",
    "edbizarro": "I have a similar use case recently and resolve with a middleware that change the sessions connection per request\nHere the main function\n```\n public function prepareClientConnect($clientId, $jobId, $stage = 'lake'): void\n    {\n        // Erase the tenant connection, thus making Laravel get the default values all over again.\n        DB::purge('staging'); // mongo connection name in database.php\n    // Make sure to use the database name we want to establish a connection.\n    Config::set('database.connections.staging.database', 'c_'.$clientId);\n\n    // Rearrange the connection data\n    DB::reconnect('staging');\n\n    Schema::connection('staging')->getConnection()->reconnect();\n\n    self::setCollection('j_'.$jobId.'_'.$stage);\n}\n\n```\n. ",
    "stardesign77": "composer require jenssegers/mongodb 3.3.1. I have to install using this command - composer require jenssegers/mongodb 3.3.1 ?. \n(1/1)\u00a0ErrorExceptionTrying to get property 'headers' of non-object\n--\nin\u00a0VerifyCsrfToken.php\u00a0line 158\nat\u00a0HandleExceptions->handleError(8, 'Trying to get property \\'headers\\' of non-object',\n. (1/1) ErrorExceptionTrying to get property 'headers' of non-object\nin VerifyCsrfToken.php line 158\nat HandleExceptions->handleError(8, 'Trying to get property 'headers' of non-object',\n@hosseinjafari, is it for the above?. (1/1) ErrorExceptionTrying to get property 'headers' of non-object\nin VerifyCsrfToken.php line 158\nat HandleExceptions->handleError(8, 'Trying to get property 'headers' of\nnon-object',\n@hosseinjafari https://github.com/hosseinjafari, is it for the above?\nOn Thu, May 10, 2018 at 8:19 PM, Hossein jafari notifications@github.com\nwrote:\n\n1- open composer.json file\n2- add \"jenssegers/mongodb\": \"^3.3.1\" into require\n3-open terminal in project directory and composer update\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/jenssegers/laravel-mongodb/issues/1514#issuecomment-388076622,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AVL6GSg4g8zbHcZ1-1eRqxZZIgXcfwQZks5txFNogaJpZM4T0kxX\n.\n.  return redirect()->route('')  in which file path, i have to change this?\n\nOn Mon, May 14, 2018 at 7:16 AM, Sacha QUESTEL notifications@github.com\nwrote:\n\nI just got this error because in my middleware I was returning a route\ninstead of 'return redirect()->route('')';\nThat resolved my case.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/jenssegers/laravel-mongodb/issues/1516#issuecomment-388674587,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AVL6GYqiF_Vqf7WAQRjbb075Cbgj5oDYks5tyOIDgaJpZM4T5j1E\n.\n. I am creating connection with mongodb, do you have any suggestions for this?\n\nOn Tue, May 15, 2018 at 2:13 AM, Sacha QUESTEL notifications@github.com\nwrote:\n\nDepends on what you did in your application just before that happened. For\nme, I had just created custom middleware :\npublic function handle($request, Closure $next)\n    {\n        if (!Auth::user()->admin) {\n            return redirect(route('forum'));\n        }\n        return $next($request);\n    }\nBut I was actually returning it like this :\npublic function handle($request, Closure $next)\n    {\n        if (!Auth::user()->admin) {\n            return route('forum');\n        }\n        return $next($request);\n    }\nWhich was my problem that got me the same error. The custom middleware\nfile is located in app/Http/Middleware\nI think you might be returning directly a route or a view instead of\nredirecting...\nHope that will help you !\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/jenssegers/laravel-mongodb/issues/1516#issuecomment-388956215,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AVL6GVF-mcaeP-Z3t2gmV3lsiJi5PqdFks5tyexzgaJpZM4T5j1E\n.\n. Do you have example for crud operations and login/register with mongodb?\n\nOn Tue, May 15, 2018 at 12:26 PM, Sagar Jain stardesign041@gmail.com\nwrote:\n\nI am creating connection with mongodb, do you have any suggestions for\nthis?\nOn Tue, May 15, 2018 at 2:13 AM, Sacha QUESTEL notifications@github.com\nwrote:\n\nDepends on what you did in your application just before that happened.\nFor me, I had just created custom middleware :\npublic function handle($request, Closure $next)\n    {\n        if (!Auth::user()->admin) {\n            return redirect(route('forum'));\n        }\n        return $next($request);\n    }\nBut I was actually returning it like this :\npublic function handle($request, Closure $next)\n    {\n        if (!Auth::user()->admin) {\n            return route('forum');\n        }\n        return $next($request);\n    }\nWhich was my problem that got me the same error. The custom middleware\nfile is located in app/Http/Middleware\nI think you might be returning directly a route or a view instead of\nredirecting...\nHope that will help you !\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/jenssegers/laravel-mongodb/issues/1516#issuecomment-388956215,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AVL6GVF-mcaeP-Z3t2gmV3lsiJi5PqdFks5tyexzgaJpZM4T5j1E\n.\n\n\n.    1. $statement = $this->prepared($this->getPdoForSelect($useReadPdo)\n   2. ->prepare($query));\n\nvendor\\laravel\\framework\\src\\Illuminate\\Database\\Connection.php\nSymfony \\ Component \\ Debug \\ Exception \\FatalThrowableError (E_ERROR)\nCall to a member function prepare() on null\nOn Tue, May 15, 2018 at 3:15 PM, Sagar Jain stardesign041@gmail.com wrote:\n\nDo you have example for crud operations and login/register with mongodb?\nOn Tue, May 15, 2018 at 12:26 PM, Sagar Jain stardesign041@gmail.com\nwrote:\n\nI am creating connection with mongodb, do you have any suggestions for\nthis?\nOn Tue, May 15, 2018 at 2:13 AM, Sacha QUESTEL notifications@github.com\nwrote:\n\nDepends on what you did in your application just before that happened.\nFor me, I had just created custom middleware :\npublic function handle($request, Closure $next)\n    {\n        if (!Auth::user()->admin) {\n            return redirect(route('forum'));\n        }\n        return $next($request);\n    }\nBut I was actually returning it like this :\npublic function handle($request, Closure $next)\n    {\n        if (!Auth::user()->admin) {\n            return route('forum');\n        }\n        return $next($request);\n    }\nWhich was my problem that got me the same error. The custom middleware\nfile is located in app/Http/Middleware\nI think you might be returning directly a route or a view instead of\nredirecting...\nHope that will help you !\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/jenssegers/laravel-mongodb/issues/1516#issuecomment-388956215,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AVL6GVF-mcaeP-Z3t2gmV3lsiJi5PqdFks5tyexzgaJpZM4T5j1E\n.\n\n\n\n.  For your second error, check this : what i have to check?\n\nOn Tue, May 15, 2018 at 8:11 PM, Sacha QUESTEL notifications@github.com\nwrote:\n\nFor your second error, check this :\nhttps://stackoverflow.com/questions/28592400/fatal-error-call-to-a-member-function-prepare-on-null?utm_medium=organic&utm_source=google_rich_qa&utm_campaign=google_rich_qa\nHave you done the configuration correctly according to this ?\nhttps://github.com/jenssegers/laravel-mongodb#configuration\nHonestly I haven't used mongodb with Laravel so I can't tell you more\nabout it.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/jenssegers/laravel-mongodb/issues/1516#issuecomment-389192160,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AVL6GWgELEYPUpEo9jNQK7YdrqdoPyT0ks5tyukxgaJpZM4T5j1E\n.\n. \n",
    "idris11": "I have the problem same too. do you found the solution?. ",
    "Giacomo92": "Hi @cheems77 I am stuck too with this. I tried with filter function. But everytime I filter on the embed document I lose the main collection's fields. I think now I will try with a Raw Expressions. . ",
    "netcraft-devops": "@stardesign77 you must lock the package to this version\n\"jenssegers/mongodb\": \"^3.2\",. Set $connection = 'mysql' in your Property class. ",
    "wiselyku": "BTW, I use version 3.3. hi, @ypavlov  i did not solve the problem, so i used mysql instead. ",
    "ypavlov": "hi @wiselyku, did you solve your problem?\nI have the same issue. \nI use mongodb for queues. I could add the jobs to the queue successfully, but php artisan queue:work mongodb not working. ",
    "naspy971": "I just got this error because in my middleware I was returning a route instead of 'return redirect()->route('')';\nThat resolved my case.. Depends on what you did in your application just before that happened. For me, I had just created custom middleware : \npublic function handle($request, Closure $next)\n    {\n        if (!Auth::user()->admin) {\n            return redirect(route('forum'));\n        }\n        return $next($request);\n    }\nBut I was actually returning it like this : \npublic function handle($request, Closure $next)\n    {\n        if (!Auth::user()->admin) {\n            **return route('forum');**\n        }\n        return $next($request);\n    }\nWhich was my problem that got me the same error. The custom middleware file is located in app/Http/Middleware\nI think you might be somewhere returning directly a route or a view instead of redirecting...\nCheck what's triggered in your application when you try to go the the page that gives you this error, I mean the controller behind your route, or a middleware associated to the route.\nHope that will help you !. For your second error, check this : \nhttps://stackoverflow.com/questions/28592400/fatal-error-call-to-a-member-function-prepare-on-null?utm_medium=organic&utm_source=google_rich_qa&utm_campaign=google_rich_qa \nHave you done the configuration correctly according to this ? \nhttps://github.com/jenssegers/laravel-mongodb#configuration\nHonestly I haven't used mongodb with Laravel so I can't tell you more about it.. Hum don't you see the link below what I said ??\n\nhttps://stackoverflow.com/questions/28592400/fatal-error-call-to-a-member-function-prepare-on-null?utm_medium=organic&utm_source=google_rich_qa&utm_campaign=google_rich_qa\nhttps://github.com/jenssegers/laravel-mongodb#configuration. \n",
    "Eyewash01": "FYI, I had this exact issue, and it was because of the following:\n1/ I was using multiple auth guards (e.g. admin and front end user)\n2/ I had overridden the unauthenticated method on the exception handler, and had logic to perform different actions for different guards\n3/ I hadn't specified an action for the guard in question, and therefore this method was returning null\n. ",
    "baymabruno": "Don't use!! \nUser->SoftDeletes()\nYou only needs to use:\n$data = User::get();\n$data = User::find(1)->delete();\nReference\nhttps://itsolutionstuff.com/post/how-to-use-soft-delete-in-laravel-5example.html. ",
    "michaeljennings": "I'm having this same issue when trying to use the belongsTo relationship from a MongoDB model to a MySQL model.\nThe issue seems to be caused by the belongs to relationship trying to use the MongoDB connection. If I specify the connection property on the MySQL model to mysql then it works. This isn't a solution for me as in tests I use sqlite and in production I use mysql so I need it to use the default connection.\nI'm using PHP 7.2, laravel v5.6.23, and laravel-mongodb v3.4.2\nMy mongodb model\n```php\nuse Jenssegers\\Mongodb\\Eloquent\\Model;\nclass Notification extends Model\n{\n    protected $connection = 'mongodb';\nprotected $collection = 'notifications';\n\npublic function tenant()\n{\n    return $this->belongsTo('Tenant');\n}\n\n}\n```\nMy MySQL model\n```php\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Jenssegers\\Mongodb\\Eloquent\\HybridRelations;\nclass Tenant extends Model\n{\n    use HybridRelations;\nprotected $table = 'tenants';\n\n}\n```\nStack trace of the error.\n```\n1) NotificationModelTest::it_belongs_to_a_tenant\nError: Call to a member function prepare() on null\n/vendor/laravel/framework/src/Illuminate/Database/Connection.php:330\n/vendor/laravel/framework/src/Illuminate/Database/Connection.php:661\n/vendor/laravel/framework/src/Illuminate/Database/Connection.php:628\n/vendor/laravel/framework/src/Illuminate/Database/Connection.php:337\n/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php:1909\n/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php:1894\n/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Builder.php:481\n/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Builder.php:465\n/vendor/laravel/framework/src/Illuminate/Database/Concerns/BuildsQueries.php:77\n/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Relations/BelongsTo.php:81\n/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Concerns/HasAttributes.php:419\n/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Concerns/HasAttributes.php:397\n/vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Eloquent/Model.php:145\n/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Model.php:1414\n```. I've done some more digging and when you hit the mysql relation from the mongodb model it tries to use the mongodb connection.\nI've made a basic test using the models above. I'm just trying to hit the relation without any data which I would expect to return null.\n```php\n$notification = new Notification();\n$notification->tenant;\n```\nBut that is throwing the following error.\n```\n1) NotificationModelTest::it_belongs_to_a_tenant\nError: Call to a member function prepare() on null\n/vendor/laravel/framework/src/Illuminate/Database/Connection.php:330\n/vendor/laravel/framework/src/Illuminate/Database/Connection.php:661\n/vendor/laravel/framework/src/Illuminate/Database/Connection.php:628\n/vendor/laravel/framework/src/Illuminate/Database/Connection.php:337\n/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php:1909\n/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php:1894\n/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Builder.php:481\n/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Builder.php:465\n/vendor/laravel/framework/src/Illuminate/Database/Concerns/BuildsQueries.php:77\n/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Relations/BelongsTo.php:81\n/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Concerns/HasAttributes.php:419\n/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Concerns/HasAttributes.php:397\n/vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Eloquent/Model.php:145\n/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Model.php:1414\n```\nWhen I run the test if I dd in the getConnectionName() method in Illuminate\\Database\\Eloquent\\Model it returns 'mongodb', but it should return the default driver.\nIf I override that method in the Tenant model to return the default connection that fixes the issue.\n```php\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Jenssegers\\Mongodb\\Eloquent\\HybridRelations;\nclass Tenant extends Model\n{\n    use HybridRelations;\nprotected $table = 'tenants';\n\npublic function getConnectionName()\n{\n    return config('database.default');\n}\n\n}\n```. ",
    "kwame101": "Have a look at mongodb aggregate function here\nYou can implement what you want in php like \nAppPost::raw(function ($collection){\n     return $collection->aggregate([\n         [ '$project' => [\n                'post_title' => 1,\n                'post_name' => 1\n             ]\n         ],\n         //since distinct dont work in aggregate u can use group \n         ['$group' =>\n            '_id' => [ \n                   'id' => '$_id',\n                   'post_title' => '$post_title',\n                   'post_name' => '$post_name' \n              ]\n         ]\n   ]);\n});\nI think something like this is similar to your sql statement above\n. I'm not sure about your error maybe you can show the error log to see whats wrong with it but as I can see you are using auth interface so ;\nUse this use Jenssegers\\Mongodb\\Auth\\User as Authenticatable instead of  use Illuminate\\Foundation\\Auth\\User as Authenticatable. ",
    "matteo030": "Thanks, this is very useful. ",
    "Djuki": "@jenssegers @Flambe  What are the obstacles for this PR to be merged? Is there something we can do to help testing or additional work?\n. ",
    "Flambe": "\n@jenssegers @Flambe What are the obstacles for this PR to be merged? Is there something we can do to help testing or additional work?\n\n@Djuki  I'm pretty sure there are a few edge cases with the casting that I've missed. If you find any, I'll try and get them fixed, or you could make a PR on the repo for this PR. Otherwise I'm not sure what needs to be done.. ",
    "123dipesh": "I got the same error while working with laravel cashier braintree and mongodb as database.\nI solved it by editing in vendor\n- go in vendor/laravel/cashier-braintree/src/subcription.php\n- change  \"use Illuminate\\Database\\Eloquent\\Model\"  line with  \"use  Jenssegers\\Mongodb\\Eloquent\\Model\"\n-Done. ",
    "am05mhz": "if you make your own ORM, make sure you replace the base model like so\n```\n<?php\nnamespace App\\Models;\nuse Jenssegers\\Mongodb\\Eloquent\\Model;\nclass Product extends Model\n{\n    protected $collection = 'products';\n}\n```\n. ",
    "gatisdukurs": "@jenssegers please, take a look at my pull request, tested with laravel 5.6 and supervisor with multiple workers. Currently queue is broken in master and Docker file is broken for builds. \nThanks. ",
    "NewOldMax": "solved by using dummy data. ",
    "slava-pleshkov": "The problem was solved.. Model User\npublic function role()\n    {\n        return $this->belongsTo('App\\Role');\n    }\nModel Role\npublic function users()\n    {\n        return $this->hasMany('App\\User');\n    }\nControllers User\npublic function index()\n    {\n        $main = User::all();\n        return view('admin.users.index', compact('main'));\n    }\nView\n{{ $item->role->name }}. ",
    "LynX39": "\nThe problem was solved.\n\nPlease post your solutions. Thanks.. ",
    "Dylan-DutchAndBold": "Could really use this @jenssegers . ",
    "ownercoder": "I found problem, in version 3.2.3 for laravel 5.4 toCollection method in EmbedsOneOrMany use hard new instance Illuminate\\Database\\Eloquent\\Collection. ",
    "ZAZmaster": "Version of mongodb php extesions is mismatch. Upgrade be helpful!. ",
    "lesvere": "root@751fff4a2f1e:~# php -v\nPHP 7.1.11 (cli) (built: Nov  4 2017 10:24:56) ( NTS )\nCopyright (c) 1997-2017 The PHP Group\nZend Engine v3.1.0, Copyright (c) 1998-2017 Zend Technologies\n    with Xdebug v2.5.5, Copyright (c) 2002-2017, by Derick Rethans\nroot@751fff4a2f1e:~# pecl list\nInstalled packages, channel pecl.php.net:\n=========================================\nPackage Version State\nmongodb 1.5.2   stable\nredis   3.1.4   stable\nxdebug  2.5.5   stable\nSame content as ZAZmaster.\nresponse: \nArgument 3 passed to MongoDB\\Driver\\Server::executeBulkWrite() must be an instance of MongoDB\\Driver\\WriteConcern or null, array given\n. ",
    "victoratsuta": "@lesvere did you solve this issue?. ",
    "Smolevich": "@jenssegers, can you review,  please?. @jenssegers, can you review changes?. field _id auto casts into ObjectId. Use $user = User::where('_id', '\ufeff5b474381b577fa0d811937fe')->first();\nSee source code. For example, i run this code \nDB::collection('message_template_db')->insert(\n                [\n                    'status' => 1,\n                    'data' => [\n                        [\n                            'template_name' => 'my emojis',\n                            'template_description' => 'Social media emojis template',\n                        ]\n                    ]\n                ]\n            );\n            $result = DB::collection('message_template_db')->get();\n            dd($result);\nReponse seems like \narray:1 [\n  0 => array:3 [\n    \"_id\" => MongoDB\\BSON\\ObjectId {#796\n      +\"oid\": \"5b517c6aafd5765f530f5342\"\n    }\n    \"status\" => 1\n    \"data\" => array:1 [\n      0 => array:2 [\n        \"template_name\" => \"my emojis\"\n        \"template_description\" => \"Social media emojis template\"\n      ]\n    ]\n  ]\n]. Can you show code insert in mongo storage? For fetch one field you write code such as DB::collection('message_template_db')->get(['_id']);. dd is function helper in Laravel. Mongo create index _id by default, because option autoIndexId:true is useless. Do you get document run this code $result = DB::collection('message_template_db')->get(); ?. In future better ask questions in new issue. Maybe create base common model and in all anothers models extends base common model?. Hello!\nCreate eloquent model \n```\nclass TestCollection extends Jenssegers\\Mongodb\\Eloquent\\Model{\npublic $collection = 'test_collection';\nprotected $dates = [\n    'created_at',\n    'updated_at',\n];\n\nprotected $fillable = [\n    'status',\n];\n\npublic static function customAggregate() {\n    $result = self::query()->raw(function ($collection)  {\n        return $collection->aggregate([\n            [\n                '$group' => [\n                    '_id' => '$id',\n                    'pending' => [\n                        '$sum' => [\n                            '$cond' => [\n                                [\n                                    '$eq' => ['$status', 'pending']\n                                ],\n                                1,\n                                0\n                            ]\n                        ]\n                    ],\n                    'completed' => [\n                        '$sum' => [\n                            '$cond' => [\n                                [\n                                    '$eq' => ['$status', 'completed']\n                                ],\n                                1,\n                                0\n                            ]\n                        ]\n                    ],\n                ],\n            ],\n        ]);\n    });\n\n    return $result;\n}\n\n}\n```\nInsert into collection docs and get result of aggregate\n```\nforeach (range(1,10) as $item) {\n    $model = new TestCollection();\n    if ($item%2 === 0) {\n        $status = 'pending';\n    } else {\n        $status = 'completed';\n    }\n$model->fill(\n    [\n        'status' => $status\n    ]\n);\n$model->save();\n\n}\ndd(TestCollection::customAggregate());\n```\n. Yes, it described in Docs. You can see on example in tests https://github.com/jenssegers/laravel-mongodb/blob/master/tests/QueryBuilderTest.php#L523. field data.usage exists Object in MongoDb, because use $ for arrays it is not correct.\nVaild query: \nCouponUsage::query()\n  ->where('customer_id', $customer->customer_id)\n  ->whereNotIn('data.usage.state', ['Consumed', 'Expired'])\n  ->where('data.usage.time', '<', $yesterdaySameTime)\n  ->update([\n    'data.usage.state' => 'Expired'\n  ]);. I check that this code worked\n$yesterdaySameTime = Carbon::now()->subHours(24)->format('Y-m-d\\TH:i:s');\n        $yesterdaySameTime = new UTCDateTime((new\n            \\DateTime($yesterdaySameTime))->getTimestamp() * 1000);\n$query = CouponUsage::query()\n            ->where('customer_id', '=', 53)\n            ->whereNotIn('data.usage.state', ['Consumed', 'Expired'])\n            ->where('data.usage.time', '<', $yesterdaySameTime);\n        $res = $query\n            ->update(\n                [\n                    'data.usage.state' => 'Expired'\n                ]\n            );. Do you want update states for object in \n\nHello,\nIt is not working for me, it is worked for you when data.usage have array of values?\n```\n{\n    \"_id\" : ObjectId(\"5ba0f8155cb8512fee57d538\"),\n    \"customer_id\" : 53,\n    \"code\" : \"PYDY15\",\n    \"data\" : {\n        \"assign_total\" : 1,\n        \"usage_total\" : 0,\n        \"usage\" : [ \n            {\n                \"order_id\" : \"1234\",\n                \"state\" : \"Consumed\",\n                \"time\" : ISODate(\"2018-09-18T13:05:25.058Z\")\n            },\n            {\n                \"order_id\" : null,\n                \"state\" : \"Active\",\n                \"time\" : ISODate(\"2018-09-18T13:05:25.058Z\")\n            },\n            {\n                \"order_id\" : null,\n                \"state\" : \"Active\",\n                \"time\" : ISODate(\"2018-09-18T13:05:25.058Z\")\n            },\n            {\n                \"order_id\" : null,\n                \"state\" : \"Active\",\n                \"time\" : ISODate(\"2018-09-18T13:05:25.058Z\")\n            }\n    ]\n},\n\"updated_at\" : ISODate(\"2018-09-18T15:37:51.000Z\"),\n\"created_at\" : ISODate(\"2018-09-18T13:05:25.000Z\")\n\n}\n```\n\nDo you want update states for this object?. Use chunk or paginate mechanism. Try \nCouponUsage::query()\n            ->where('customer_id', $customer->customer_id)\n            ->where('code', $coupon->code)\n            ->where('data.usage.state', 'Active')\n            ->update(\n              [\n              'data.usage.$.order_id' => $order->order_id\n              ],\n              [\n                  '$inc' => [\n                    'data.usage_total' => 1\n                  ]\n             ]\n            );. You can see dumping original query . For this use such as \n\\DB::connection()->enableQueryLog();\n$queries =DB::connection()->getQueryLog();. I try and this worked\n```\n$query = CouponUsagel::query()\n            ->where('customer_id', '=', 53)\n            ->where('code', '=', 'PYDY15')\n            ->where('data.usage.state', '=', 'Active');\n    $res = $query\n        ->update(\n            [\n                'data.usage.order_id' => 12\n            ]\n        );\n    $res2 = $query\n        ->increment('data.usage_total', 1);\n\n. Try use `$elemMatch` in projection\n$z = Cricket::where('details'.'.'.$type, 'elemMatch', ['age'=> ['$gt' => 20]])->get(['details'.''.$type =>['$elemMatch' => ['age' =>['$gt' => 20]] ]])->toArray();\n``. @jenssegers, can you review please?. Yes, you can use for laravel 5.7. @altaraven, https://github.com/jenssegers/laravel-mongodb-core/issues/1. Descibe this moment, please.\n1. What command do you run?\n2. Docker and Docker-compose?. 1. Ping in containerapphostmongo2. Value ofDB_HOSTmust bemongo` if ping was successful. It fixed in https://github.com/jenssegers/laravel-mongodb/pull/1724. @jenssegers , can you review please? It important for using library. > Any chance we can separate the Travis changes and the fixes? Or are the Travis changed required?\nIt is possible, but better change all in this PR. @jenssegers, i can remove fix tests from this PR and move in another PR for understanding. Can you review this changes tomorrow?. @jenssegers, for this PR i delete changes for travis ci and docker-compose and move in another PR. Please see both PR tomorrow. It was fixed here. It linked with cnanges in laravel framework. @rennokki, this changes has here plus fixes this problem job on your PR. @jenssegers, can you review please?. @jenssegers, I can create new PR with last changes in one commit. Main idea of this PR - use travis ci without docker compose. Dockerfile and docker compose.yml can be reverted and used for local development. @jenssegers, i created new PR with this changes . @jenssegers, i move changes from this PR . @jenssegers, can you review please?. @jenssegers, can you review please?. Yes, i can set default value, but env variable PHP_VERSION set in travis script build. Also in Docker file i popose operation installing composer to replace on this construction\n```\nFROM composer as composer-build #official docker image with composer (https://github.com/composer/docker/blob/master/1.6/Dockerfile)\nCOPY --from=composer-build /usr/bin/composer /usr/local/bin/composer\n``. mongodb-1.5.3 latest stable version in https://pecl.php.net/package/mongodb. In original Dockerfile used https://github.com/jenssegers/laravel-mongodb/blob/master/Dockerfile#L10pecl install mongodb && docker-php-ext-enable mongodb`. @jenssegers, I reverted this changes. ",
    "lab08tonci": "Any update on this one?\n@balintant, did you manage to get to a solution?\nAnother approach could be to set Write Concern to acknowledge when the write operation is done on the replicasets, but that could have a huge performance impact.. ",
    "balintant": "@lab08tonci unfortunately I left the project soon after I submitted this issue, and I didn't work with the package since that.. ",
    "jra89": "Having this same issue.\nWill try to attach as much details as possible.\nphp-mongodb version is 1.5.1\ncomposer.json \"jenssegers/mongodb\": \"^3.4\"\nFrom composer.lock mongodb/mongodb 1.4.2\nMongoDB server version is 4.0.0\n\nphp artisan queue:failed\nA cell must be a TableCell, a scalar or an object implementing __toString, array given.\nphp artisan queue:retry all\nUnable to find failed job with ID [].\nUnable to find failed job with ID [].\nUnable to find failed job with ID [].\n\nI can provide exceptions as well if needed.\nAnother interesting thing to note is that I'm using RabbitMQ for my queue (Only use MongoDB for failed jobs). And in my bootstrap/app.php (I should mention that I use Lumen as well), I have the following:\n\n$app->register(Jenssegers\\Mongodb\\MongodbServiceProvider::class);\n$app->register(Jenssegers\\Mongodb\\MongodbQueueServiceProvider::class);\n$app->register(VladimirYuldashev\\LaravelQueueRabbitMQ\\LaravelQueueRabbitMQServiceProvider::class);\n$app->withEloquent();\n\nIf I put the RabbitMQ ServiceProvider before the other two, then RabbitMQ stops working in Lumen. Not sure if I need the MongodbQueueServiceProvider to make the failed jobs work though. Currently it can add failed jobs, but not process them.\nSince I have to release soon, I will go back to MySQL temporarily, but would very much appreciate help with this issue. I'll provide help if necessary to fix this bug.. ",
    "williansebastiao": "@tuandm Hello!\nThat way I did not get the expected result.\nI'll give you an example of my result, okay?\nWhen I run the query: db.pushCollection.findOne({\"parent\" : DBRef(\"companys\", ObjectId(\"52c7077a958e2070178b4567\"))})\none of the nodes is: \"company\" : DBRef(\"companys\", ObjectId(\"52c7077a958e2070178b4567\")),\nMy question is: how to write this in my lumen application to get the same result.. ol\u00e1, consegui resolver. Irei deixar um exemplo caso algu\u00e9m passse por isso.\n```\n$company = Companys::where('apiKey', $apiKey)->first(['apiKey', 'cnpj']);\n$companyId = $company->_id;\n$projections = ['projection' => ['data' => false, 'document' => false]];\n$filter = ['company' => ['$ref' => 'companys', '$id' => new ObjectID($companyId)]];\n$push = PushCollection::raw(function ($collection) use($filter, $projections){\n        return $collection->find($filter, $projections);\n});\n```\nRemember to instantiate the ObjectID. ",
    "MNSolderstar": "In your user model add protected $appends = ['id']; then find($id) or findOrFail($id) will work as expected. You can pass the ID as a plain string as you tried to use.\nyou can use protected $hidden = ['_id'] to clean up JSON etc responses so you don't have two id's.. This might help... I always use Eloquent models.\n```php\n<?php\nnamespace App\\Models;\nuse Jenssegers\\Mongodb\\Eloquent\\Model;\nclass SocialTemplate extends Model\n{\n  protected $connection = 'mongodb';\nprotected $collection = 'social_template_db';\nprotected $appends = ['id'];\nprotected $hidden = ['_id'];\nprotected $dates = ['created_at','updated_at','deleted_at'];\npublic $timestamps = true;\n}\n```\nBy appending ID, built in method to cast _id to id will make native functions like find and findOrFail work from the Eloquent builder as well as native Laravel Relations and Polymorphic Relations.\n$hidden  on _id only hides it from the JSON response, simply de-junks the response since you now have a copy on the key of id.\nAjax request handled by controller or in this example directly by a route. (web.php or api.php)\nphp\n  // Returns JSON object, don't need to use response()->json()\n  Route::get('/social/template/{$id}', function($id = null) {\n    return \\App\\Models\\SocialTemplate::findOrFail($id);\n  });\nYou have to put $appends and $hidden in every model you create, they don't work from inside the extended base model, Would be nice to have id appended automatically.. Wasn't an question was an alternate answer to original posters question and that was what I was pointing out is that you can't use a base model that is extended on to set those attributes.\nI tried it already so saving them the hassle of trying it and finding it does not work by making the point that it does not work but great if it did, its an issue for Laravel it's self not this project.. ",
    "sranjithk": "for dd() its working but its not working for return response()->json(array(\"status\"=>1,\"data\"=>$result));         \ncan you told me what is the issues with this ? \n. \"_id\" => MongoDB\\BSON\\ObjectId {#796\n      +\"oid\": \"5b517c6aafd5765f530f5342\"\n    }\nHow to fetch this one ? .  Insert query \nDB::collection('message_template_db','autoIndexId:true')->insert(['template_name' => \"emoji\",'template_description' => \"My emoji\",'message_template_log'=>\"null\",'created_at'=>date('Y-m-d H:i:s'),\"created_by\"=>\"sagar\",\"status\"=>1])\nits working fine \nFetching from mongo db;\ndb.social_template_db.findOne();\n{\n    \"_id\" : ObjectId(\"5b45ce62f631fc2566550011\"),\n    \"template_name\" : \"my emoji\",\n    \"template_description\" : \"My social media emoji\",\n    \"message_template_log\" : \"null\",\n    \"created_at\" : \"2018-07-11 09:31:14\",\n    \"created_by\" : \"sagar\",\n    \"status\" : 1\n}\nwhen i exporting to \nresponse()->json(array);\nid is not populating \n. ",
    "fclarat": "Same Issue!. ",
    "nlattessi": "Same issue here... Any updates regarding this?. ",
    "arielleguizamon": "+1. ",
    "xxcynicxx": "Helfen mir!. ",
    "francodanussi": "I'm dealing with this problem too. ",
    "imperioame": "Same here. ",
    "msbir": "Thanks! . ",
    "yupangestu": "help?. ",
    "alexdeoliveira": "@ssinuco I have the same problem. Can you solve it?. ",
    "syamardy00": "I have a same problem too,\nHopefully to find a solution soon..\nHaturnuhun sadayana.. ",
    "RomM1": "@Nurjaman @syamardy00 \nHello! The raw method returns the Laravel collection, so the paginate method is not available in it. You can go around and by yourself recreate the standard pagination.\n```\n$page = \\Illuminate\\Pagination\\Paginator::resolveCurrentPage();\n$perPage = 20;\n$total = Dapil_Kotakab::count();\n$collection = Dapil_Kotakab::raw(function ($collection) use ($page, $perPage) {\n    return $collection->aggregate([\n        [\n            '$lookup' => [\n                'as' => 'KecDetails',\n                'from' => 'src_kecamatan',\n                'foreignField' => 'id',\n                'localField' => 'idKecamatan'\n            ]\n        ],\n        [\n            '$lookup' => [\n                'as' => 'KotDetails',\n                'from' => 'src_kota_kabupaten',\n                'foreignField' => 'code',\n                'localField' => 'idKota'\n            ]\n        ],\n        [\n            '$lookup' => [\n                'as' => 'ProvDetails',\n                'from' => 'src_provinsi',\n                'foreignField' => 'idProv',\n                'localField' => 'idProvinsi'\n            ]\n        ],\n        ['$skip' => ($page - 1) * $perPage],\n        ['$limit' => $perPage],\n    ]);\n});\nreturn new \\Illuminate\\Pagination\\LengthAwarePaginator($collection, $total, $perPage, $page, [\n    'path' => \\Illuminate\\Pagination\\Paginator::resolveCurrentPath(),\n]);\n```. ",
    "Nurjaman": "\n@RomM1\n\nHi, Thank you very much, this is very helpful .. :). ",
    "FG-Developer": "@RomM1 Are you a hero? I don't solved since 2 days. But you become a hero to my problem. Thank you.. ",
    "dbakiu": "You can definitely use this extension with PHP7. I am using PHP 7.2.7 and it's working fine. \nBut you need to make sure that the mongodb extension is installed. Further instructions can be found here.. ",
    "iluozhiqiang": "class Base extends Model\n{\n    /\n     * \u8bbe\u7f6e\u65f6\u5904\u7406\u6570\u636e\u7c7b\u578b\n     \n     * @param string $key\n     * @param string $value\n     * @return void\n     /\n    public function setAttribute($key, $value)\n    {\n        if ($this->hasCast($key)) {\n            $value = $this->castAttribute($key, $value);\n        }\n        return parent::setAttribute($key, $value);\n    }\n}. ",
    "alexanderkraemer": "@jenssegers How do you think about that feature?\nI currently use it together with the mongodb setup, and it works flawlessly!. ",
    "BlueAmbition": "you can use like     BaiKe::whereRaw(['$text' => ['$search' => $key]])->count();\nor UcInfo::whereIn('user_id', $userIdArr)->select('user_id', 'name')->get();\n. @HassanIbrahim If i want order by other filed?. ",
    "KyawNaingTun": "Hi @rushabhsamcom \nYou need to update your mongo library(https://github.com/mongodb/mongo-php-library). I think, this package was updated for php7. I didn't find MongoClient.\n\n. ",
    "cincauhangus": "you probably have the file named in the wrong case. linux is case sensitive and windows is not. first of all, your error states MySql and this is a mongoDB plugin. second of all, posting the error and a bunch of code without any context won't get you far.. ",
    "NathanRomero": "You need a SSH tunnel, you need the next command in the terminal where you application running:\nssh -fN -L 27017:127.0.0.1:27017 {{user}}@{{ip}}\naffer of this you, can connect like you connect in localhost\n. ",
    "chintanbanugaria": "+1. ",
    "muhtarh": "@jenssegers please review. ",
    "raylucker": "Have you tried to update your php? It seems like laravel 5.4 needs minimum 5.6.4 version of PHP.\nOpt 2: Try to use alias, add an alias for the model class by adding this code\n'Moloquent'       => Jenssegers\\Mongodb\\Eloquent\\Model::class,\nto your config/app.php and use the alias to extends your model.\nIf none of it works, I suggest you to try to call your database by using query builder.. ",
    "mojo2405": "none of those helped :(. ",
    "MuhamadOmr": "not related to the lib , the cause of the problem that i was using a nested factory seed , and i'm investigating more. after more investigation i found that the error happened because i set a class variable from the nested factory seed. ",
    "Ostap34JS": "is laravel 5.7 official released?. ",
    "xJoeyv": "@Ostap34JS Yea else I would ask if L5.7 will be supported. But because google seems hard these days I help you out a bit https://laravel.com/docs/5.7 <3 ;)\nEDIT\n5.7 | September 4th, 2018 | March 4th, 2019 | September 4th, 2019\n. I tested it on L5.7, seems to work fine and perfect, official statement can be made by Developer. Issue can be closed.. Solved: After searching around I found this out\n$this->getAttributeValue($key). ",
    "Nazar0102": "How to install jenssegers/laravel-mongodb??? Any ides?. ",
    "kaseywright": "I have a situation in which I need to do this also. Has anyone found a resolution?. ",
    "indigoswann": "+1\nI'm looking to do the exact same thing, storing the _id hash of MongoDB with a MySQL model and relating the two.  Any luck?. ",
    "akkastechgithub": "Any Progress on this issue??. ",
    "xiaozhuai": "Hey, bro. @Marcuss57 \nDid you solved this problem?\nI also face the same thing.. ",
    "mfauveau": "Hi @altaraven,\nI made some modifications to be able to do just that. See this PR https://github.com/jenssegers/laravel-mongodb/pull/1611.. ",
    "johannesschobel": "can you implement the 3 missing methods that are mentioned in the exception you got?. yeah, of course you need to add your own business logic here.. . of course you need to create a mongodb connection.. . ",
    "blks": "As the User.php implemente the MustVerifyEmail Interface it should implement all the declared methodes in it .\nWe have  3  methods in  Illuminate\\Contracts\\Auth\\MustVerifyEmail.php and therfor you should implement them in your User.php model. \nNow for the content of thouse 3 methodes I don't know if we should implement our own code or not !?\n```\n   /\n     * Determine if the user has verified their email address.\n     \n     * @return bool\n     /\n    public function hasVerifiedEmail(){}\n/**\n * Mark the given user's email as verified.\n *\n * @return bool\n */\npublic function markEmailAsVerified(){}\n\n/**\n * Send the email verification notification.\n *\n * @return void\n */\npublic function sendEmailVerificationNotification(){}\n\n```. ",
    "drmmyx": "i fail to make it even without implement MustVerifyEmail\nSymfony \\ Component \\ Debug \\ Exception \\ FatalThrowableError (E_RECOVERABLE_ERROR)\nArgument 1 passed to Jenssegers\\Mongodb\\Query\\Builder::__construct() must be an instance of Jenssegers\\Mongodb\\Connection, instance of Illuminate\\Database\\MySqlConnection given\nthus i was like not sure if i need to change the db connection to my mongoDB some where ?\n. ",
    "NHuebner1983": "@drmmyx Did you manage to get this working? I am having the same trouble here: https://github.com/jenssegers/laravel-mongodb/issues/1678. I'm also having trouble with auth()->user().  I think maybe I'm missing some configuration or class to override auth to use laravel-mongodb ?. After a successful middleware through our API, the $request->user() is null as well, which was previously filled with the user model.\nAny idea what I'm missing?. ",
    "azhar255": "Below Its Work For me\nPlease use this in User.php  \nuse Illuminate\\Contracts\\Auth\\MustVerifyEmail;\nuse Illuminate\\Notifications\\Notifiable;\nuse Illuminate\\Foundation\\Auth\\User as Authenticatable;\nuse Illuminate\\Contracts\\Auth\\MustVerifyEmail as MustVerifyEmailContract;\nclass User extends Authenticatable implements MustVerifyEmail\n{\n    use MustVerifyEmail, Notifiable;. ",
    "rennokki": "I think that sharding your data might be the solution on processing large data.\nEdit: Also, if you have access to Docker, try exporting the BSON, create a Mongo container and import it. Try to run the same query and see how much memory & cpu does the Mongo container use.. Maybe tagging a new release?. Can confirm, this happens to me too.. This is the stacktrace (the right order is from bottom to top; error occurs on Update.php:179)\nvendor/mongodb/mongodb/src/Operation/Update.php:179\nvendor/mongodb/mongodb/src/Operation/UpdateMany.php:105\nvendor/mongodb/mongodb/src/Collection.php:1008\nvendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Collection.php:45\nvendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Query/Builder.php:834\nvendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Query/Builder.php:591\nvendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Eloquent/Builder.php:47\nvendor/laravel/framework/src/Illuminate/Database/Eloquent/Model.php:741\nvendor/laravel/framework/src/Illuminate/Database/Eloquent/Model.php:656\nvendor/laravel/framework/src/Illuminate/Database/Eloquent/Model.php:603\napp/Jobs/Soccer/ParsePlayerProfileSchema.php:77\nIn my job, @ line 77 i have:\nphp\n$storedPlayer->update($data);\nThis job also does an API call. The fact is that $data contains the existing Player model as well as some modifications that come from the API call in order to update my stored player with the freshest data, while keeping the other details intact.\nBriefly, this line does the same thing as explained before:\n```php\n$model = MyCollectionModel::first();\n$model->update($model->toArray());\n``` . Lovely. Then I'll close this PR :D. ",
    "mistre83": "I had to launch again composer update. . ",
    "vahidalvandi": "but it not detect automatilcay laravel vertion and instaall 3.3. ",
    "yuvraj993": "I am using mongodb with jenssegers/mongodb package.\nexception: \"Symfony\\Component\\Debug\\Exception\\FatalThrowableError\"\nfile: \"/var/www/html/broc/vendor/laravel/framework/src/Illuminate/Database/Connection.php\"\nline: 326\nmessage: \"Call to a member function prepare() on null\". ",
    "aszaffranietz": "I have the same problem, but that update doesn't fix it for me. :( any suggestions?\nThis seems to break it again:\nhttps://github.com/laravel/framework/pull/26622\nBut setting public $incrementing = false; in src/Jenssegers/Mongodb/Eloquent/Model.php doesn't help me as well. I try to eager load the relations from a normal Laravel Eloquent Model in a MySql to a MongoDB Model. . ",
    "savendra92": "try this\n\\DB::table('collectionname')->raw()->find(['$text' => ['$search' => \"abc\"]]);. ",
    "iPhonePKAndroid": "ok,i find it \ud83d\udc4d \n\nI'm not sure about your error maybe you can show the error log to see whats wrong with it but as I can see you are using auth interface so ;\nUse this use Jenssegers\\Mongodb\\Auth\\User as Authenticatable instead of use Illuminate\\Foundation\\Auth\\User as Authenticatable. \n",
    "faisaltkr": "i have the same problem Call to undefined method Jenssegers\\Mongodb\\Query\\Builder::compileWhereDate()\"\nany solutions ? . ",
    "aftabnaveed": "@ReDev1L the checks were not successful, any ETA on fixing it? \nThanks. ",
    "ReDev1L": "\n@ReDev1L the checks were not successful, any ETA on fixing it?\nThanks\n\n@aftabnaveed something with CI, i dunno why jobs were canceled. ",
    "Zuken": "In my environment this breaks saving on hasMany relations. @marcnewton Please check this solution for #1659. ",
    "iocaste": "@jenssegers Can you accept this please ?. ",
    "EnzoTools": "lumen version 5.2\njenssegers/laravel-mongodb version 3.2.x. ",
    "MoraesGil": "Currently I work with PHP 7.1.12 and Laravel 5.5\nI Tried \nLaravel 5.5 current project  and current jenssegers/laravel-mongodb\nI've got message required mongo 3.0 and I've tried sue old versions \nand new projects with Laravel\n5.0, 5.2 ,5.3 (also with PHP 5.6)\nwith jenssegers/laravel-mongodb\n2.1, 2.2, 2.3\nand somes PHP Drivers.\nphp_mongodb-1.2.9-5.6-ts-vc11-x64\nphp_mongodb-1.2.9-5.6-ts-vc11-x86\nphp_mongodb-1.3.4-5.6-ts-vc11-x86\nphp_mongodb-1.3.4-7.1-ts-vc14-x86\nphp_mongodb-1.4.0-5.6-ts-vc11-x86\nphp_mongodb-1.4.0-7.1-ts-vc14-x64\nphp_mongodb-1.4.0-7.1-ts-vc14-x86\nphp_mongodb-1.5.3-7.1-ts-vc14-x86\nbut no success =/. > install the latest php mongodb driver first, forget the other ones\n@ludo1960 but last php driver not support MongoDB 2.4 I guess, right?\nwell I installed php_mongodb-1.5.3-7.1-ts-vc14-x86\n with my Laravel 5.5 and Php 7.1.12\nand this package\n\"jenssegers/mongodb\":\"3.3.*\"\n\nphp --ri mongodb | grep version\nMongoDB extension version => 1.5.3\nlibbson bundled version => 1.13.0\nlibmongoc bundled version => 1.13.0`\n\nbut\n\nServer at sever.local:27117 reports wire version 0, but this version of libmongoc requires at least 3 (MongoDB 3.0)\n. \n",
    "irajtaghlidi": "Hi Hirad,\nMy first suggestion is explore your MongoDB with MongoDB Compass and check real type of document _id stored in Collection.\nas your example ids you can check with these filters:\n{_id: ObjectId('5bc68aa8c5d851000161a575')}\n{_id: '5bb02547e710b95b3654cdf3'}\n\nif there are in different types, so you should check your create/save methods. \nwhat is your document creating methods?\nCreate Model or use fillable or etc? \nand how about _id creating? are you create it before save document or bring them to MongoDB? or do you use Bulk operation or just in use creating with Eloquent?\n. Hello @mauri870,\nyes\nI solved the problem just with adding use HybridRelations; to first relational Model too (in my case DeviceOrder class).\nAnother suggestion is to add Connection name in both mysql and MongoDB Model classes when they have relations together even when on of them have default Connection name, This will cause problem if you do not in some situations.. ",
    "tanmuhittin": "I am also having the same problem while saving subdocuments using methods:\nhttps://github.com/jenssegers/laravel-mongodb#embedsmany-relations\nhttps://github.com/jenssegers/laravel-mongodb#embedsone-relations\nI found a solution. While saving subdocuments set _id field as new \\MongoDB\\BSON\\ObjectId(\"_idhere\") . Then they will all be saved as Object ids. This is an important issue because it breaks the consistency of real objects with the embedded ones. On save or update document method, we should look for all _id fields and replace them with new \\MongoDB\\BSON\\ObjectId(\"_idhere\").\nOr maybe we should fix the behavior of saving embedded documents \nhttps://github.com/jenssegers/laravel-mongodb#embedsmany-relations\nhttps://github.com/jenssegers/laravel-mongodb#embedsone-relations\n. ",
    "mauri870": "Hello @irajtaghlidi we are facing the same issue, did you manage to solve the problem? If so, can you share the solution with us? Thanks. ",
    "ChristianBundgaard": "\nJust ran 'php test' in the example, but same error comes when trying to run 'php artisan migrate' ex.\nDocker-compose below.\n\nversion: '2'\n  services:\n  app:\n    build:\n      context: ./docker/app\n      dockerfile: Dockerfile\n    image: vessel/app\n    ports:\n     - \"${APP_PORT}:80\"\n    environment:\n      CONTAINER_ENV: \"${APP_ENV}\"\n      XDEBUG_HOST: \"${XDEBUG_HOST}\"\n      WWWUSER: \"${WWWUSER}\"\n    volumes:\n     - .:/var/www/html\n    networks:\n     - vessel\n  node:\n    build:\n      context: ./docker/node\n      dockerfile: Dockerfile\n      args:\n        uid: \"${WWWUSER}\"\n    image: vessel/node\n    user: node\n    volumes:\n     - .:/var/www/html\n    networks:\n     - vessel\n  mongo:\n    image: mongo\n    restart: always\n    environment:\n      MONGO_INITDB_ROOT_USERNAME: \"${DB_USERNAME}\"\n      MONGO_INITDB_ROOT_PASSWORD: \"${DB_PASSWORD}\"\n    ports:\n     - 27017:27017\n    networks:\n     - vessel\n  redis:\n    image: redis:alpine\n    volumes:\n     - vesselredis:/data\n    networks:\n     - vessel\nnetworks:\n  vessel:\n    driver: \"bridge\"\nvolumes:\n  vesselredis:\n    driver: \"local\". ",
    "dineshsuthar92": "\nI am using laravel 5.7 and mongo db(v1.5.3 stable). I am trying to test connection from laravel to db but everytime I am getting successfull connection even I am providing wrong credentials.\nI have tried by the following ways:\nJessengers\n```\n$arrMongo = [];\n    if(true == DB::connection('mongodb')) {\n        $arrMongo = array(\n            'status'=>true,\n            'message' => 'Mongo connection OK'\n        );\n    }else{\n        $arrMongo = array(\n            'status'=>false,\n            'message' => 'Mongo connection failed'\n        );\n    }\n\n```\nNormal PHP way\n$server = \"mongodb://google.com:27017/university\";\n        $c = new \\MongoDB\\Client( $server );\n        if($c->connected)\n            echo \"Connected successfully\";\n        else\n            echo \"Connection failed\";\nI am never getting as connection failed while testing with wrong credentials.\nPlease help me to resolve this problem.\n\nFinally I got the solution:\n```\n$arrMongo = [];\n        $connection = DB::connection('mongodb');\n        try{\n            $dbs = $connection->getMongoClient()->listDatabases();\n    } catch (\\MongoDB\\Driver\\Exception\\ConnectionTimeoutException $mongoException) {\n        //\n    }\n    if(isset($mongoException)) {\n        $arrMongo = array(\n            'status'=>false,\n            'message' => 'Mongo connection failed'\n        );\n    }else{\n        $arrMongo = array(\n            'status'=>true,\n            'message' => 'Mongo connection OK'\n        );\n    }\n\n```. ",
    "pristavu": "solved after changing the default connection to mongodb. ",
    "skasidej": "We're definitely running into the same issue now. I temporarily create a mutator function and use whereIn() by accepting ids as parameter, in this case your musics' id.\nI'd love to know how to properly use relationships, so if anyone happen to stumble upon this and got a way out, please do share.. ",
    "mafecito": "Same problem here.. ",
    "toocool": "you need to install php7.2 mongo extension depending on your OS the installation depends, but I am sure you can find on google how to install php mongo extension for your OS (be aware to install it for the right php version) and add mongo.so to php.ini. ",
    "filipac": "https://github.com/laravel/framework/pull/26391. @leduonggithub  It does not seem like it does :) I use my fork now in 5.8 until this will be usable in 5.8 and everything works.. @leduonggithub when he has time. In the meantime you can use my fork to make it work with 5.8, maybe you find other errors to be fixed.\nAdd this to your composer.json:\njson\n\"repositories\": [\n    {\n      \"type\": \"vcs\",\n      \"url\": \"https://github.com/graphicms/laravel-mongodb\"\n    }\n  ]. @jenssegers yes, it should be a new version that is backward incompatible.. This will be fixed when this PR will be merged https://github.com/jenssegers/laravel-mongodb/pull/1712. Duplicate of https://github.com/jenssegers/laravel-mongodb/pull/1712. ",
    "leduonggithub": "@filipac  @jenssegers \nWhen i update Laravel to 5.8, i got the error that require \"...protected to public\", seems like your problem.\nChange it according to your way, does it affect other parts?\n. @filipac \nThank you for your information.\n My problem is same this https://github.com/jenssegers/laravel-mongodb/issues/1713. \nHope Jenssegers consider this issue soon.. Thank @filipac I will try it.. ",
    "khakanali": "+1 facing same error. ",
    "gotys": "Use sessions, they take couple of bytes. Aaah, ok you would probably need to override laravel's check method to pull only the fields you want. What you did with Redis is good. ",
    "linzi007": "use this code, it work\n$convertDate = [\n    '$add' => [\n        new UTCDateTime(0), '$created_date'\n    ],\n];. ",
    "msacar": "Okey,  i fixed    with \nprotected $connection      = \"mysql\";. ",
    "aditya-cherukuri": "Isn't the if conditional check redundant? You are already checking if the value is an instance of DateTime before calling the dateTimeConversion function. . ",
    "alicompu": "/. miss the slash.. "
}