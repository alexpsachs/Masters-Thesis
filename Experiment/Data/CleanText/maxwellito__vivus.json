{
    "maxwellito": "Hi,\nSorry about that, I should mention the troubles with Firefox. Their SVG implementation got some issues which aren't under my control. \nBut can you send me a copy of your SVG with script. A JSfiddle would be brilliant.\nMany thanks\n. Actually, from what I can see, the problem is due to Firefox, which is not able to calculate the length of the path tag (index 15). This mess up the rest of the treatment.\nI had this case and I didn't know what to do with it. I can ignore this path item and make the animation without it. Or stop here and throw an error.\nAs a user, what would you prefer? I could also do the second option by default (or the first) and add an option in the constructor to choose.\n. Yep, that's right.\nThanks for your JSfiddle, that was helping.\nLet me update the code to debug this problem (my next commits will be about Firefox issues).\nI let the ticket open until I fix this. But as a user, what would you prefer in this case?\n1. The defective path is ignored and a console.warn is called\n2. Everything stop there and an error is thrown\n3. Other idea?\nThanks,\n. Brilliant!\nThanks for your feedback!\nI'm currently updating the code. I'm gonna try this Nightly build later and see how it looks.\n. You're right about Firefox Nightly. I've downloaded the latest version, and your SVG animation run smoothly.\nThe NaN issue is fixed, but I realised it's not enough. If you check the node elements 27 and 31 (from your screenshot), their path length is a crazy number, and it mess up the animation. I would like to detect them and prevent the developer, but how? I could stop any path with a length > 1000000, but this silly because we could have a valid path with this value.\nFor the moment I'll push my current changes, and add 'Troubleshoot' section in the README.md to explain the different issues in Firefox (before v.36).\n. This is because you init the script before the dom (your svg) is created. Put the script tags at the end of your body and it should work. I'll have a look once I'm at home.\n\nLe 11 Nov 2014 \u00e0 17:59, flyingfisch notifications@github.com a \u00e9crit :\nIt might just be a problem on my side, but here is my code:\n\n\n\nTest\n\n\n            var monitor = new Vivus('svg2', {type: 'oneByOne', duration: 200, start: 'inViewport'});\n        \n\n\n Created with Inkscape (http://www.inkscape.org/) \n\n\n\n    rdf:RDF\n      \n        dc:formatimage/svg+xml/dc:format\n        \n        dc:title/dc:title\n      /cc:Work\n    /rdf:RDF\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAnd I get this error in the console:\nError: Vivus [contructor]: \"element\" parameter is not related to an existing ID\n\u2014\nReply to this email directly or view it on GitHub.\n. Yes, that was the problem.\n\nMove these tags to the end of your body\nhtml\n<script src=\"vivus.min.js\"></script>\n<script type=\"text/javascript\" charset=\"utf-8\">\n  var monitor = new Vivus('svg2', {type: 'oneByOne', duration: 200, start: 'inViewport'});\n</script>\nThen you should be able to play() it. Just be careful about the inViewport, because it could not work if you cannot scroll. Which make me think about something to improve.\n. Good example!\nThe onload event works as well.\n. Unfortunately no.\nVia this way, the script cannot access the content of the SVG. It's like an iframe, from the parent document you cannot access to the child content.\nThe only solution I see would be to implement a snippet which download the file and insert the content as  a proper SVG tag.\n. Simple question, are you testing in Firefox?\n. I had some issues with it, but I have to investigate this. Tomorrow I will have a look, and I'll keep this thread up to date.\nAt the moment, the only thing I could recommend you is to play the animation as autostart if your SVG is above the fold. But I guess it's not the case.\n. Hehe!\nI'll try that, if it run great on Firefox I will use it as model to implement it in pure JavaScript.\nThanks for helping ;-)\n. The repo has been updated.\nI made some changes in the Vivus.prototype.isInViewport method. It's now using getBoundingClientRect on SVG tag, which works across browsers, especially Firefox. \nOn the top of it, I also call the scroll listener at the start, in case the SVG is in the viewport.\nTell me if you encounter the same issue.\nPS: You can use bower install vivus ;-)\n. Good news!\nAbout your question, it's not possible. Technically, it's doable, but at the moment the library doesn't implement this feature.\nI keep it in mind for new features ;-)\n. Ok, I will register the library to Bower.\nBut before, I want improve the library to make it more stable on Firefox.\nThanks for the suggestion.\n. Good point!\nWell, this should be done by the end of the day. :)\n. You can now enjoy bower install vivus\nI'll update the documentation later.\n. Oww.. I thought git tag v.0.1.1 was enough.\nThanks for your help.\n. Thanks for your help, but I was already sorting out the bower.json ;-)\nIt's now registered on bower.\n. I admit it, I have never tried Vivus on Internet Explorer (I've been so traumatised by this browser). At the start, this project was just for fun, outside of work, with my own rules. So, the IE compatibility was out of my mind. Now it's getting popular, I guess I have to review this.\nI have a VirtualBox with IE9, let's start the debug.\nI keep you updated.\n. After fews days of research, I found a workaround for IE. I'm not proud of it but it was the only way. The solution consist to replace updated path elements by a clone. Of course, this solution require more resources but give a smooth animation, as good as the other browsers. This 'fallback' is only applied on Internet Explorer (all versions), and can be disabled via the option forceRender.\nThe reason I used this silly workaround is because I couldn't find any tricks who could do the job. I tried to update the stroke property via path attribute, review the pathformer about how it transform shapes, check if a CSS property could mess up the animation (like float), see if a method could force the rendering, review the requestAnimationFrame, change SVG version.. but the dirty glitches didn't left.\nReplacing each updated path by a clone was the only way to force IE to re-render the SVG. On some SVG, this trick is not necessary, but it depends on the IE mood. If you're careful about performances, I recommend you to check if your SVG works correctly by disabling the forceRender option. If it works well on IE, then keep it like this.\nBy default, forceRender is true on Internet Explorer only.\nAll these changes are available on the dev branch.\nTell me what you think.\n. Thank you so much!\nYou have no idea, but this is where I struggle the most. My english is so c**p. I was even surprised that people understood my page. If you're motivated, you can have a look to readme.md.\n. I didn't even though about this case. Unfortunately, it won't work. Let me explain.\nTo use the animation, the SVG must only contain path elements. But we cannot use percentages in path elements. The only workaround is to use viewBox.\nYour SVG would look like this:\nhtml\n<svg id=\"square\" x=\"0px\" y=\"0px\" width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\">\n  <line fill=\"#FFFFFF\" stroke=\"#000000\" stroke-width=\"20\" x1=\"0\" y1=\"0\" x2=\"100\" y2=\"0\"/>\n  <line fill=\"#FFFFFF\" stroke=\"#000000\" stroke-width=\"20\" x1=\"100\" y1=\"0\" x2=\"100\" y2=\"100\"/>\n  <line fill=\"#FFFFFF\" stroke=\"#000000\" stroke-width=\"20\" x1=\"100\" y1=\"100\" x2=\"0\" y2=\"100\"/>\n  <line fill=\"#FFFFFF\" stroke=\"#000000\" stroke-width=\"20\" x1=\"0\" y1=\"100\" x2=\"0\" y2=\"0\"/>\n</svg>\n. If you read the demo page, you will see how Vivus works. To make this drawing animation, the script is using stroke-dasharray and stroke-dashoffset style properties. So, it will override your settings. Using these properties and Vivus aren't compatible.\nThe only way to use this library in your situation is to transform your dashed rectangle to a group of small lines.\n. Thank you!\nI should stop to learning computer languages, and focus on English language :)\n. Thanks to @flyingfisch to take the relay while I sleep :)\n. As I said in the previous pull requests: I'm good at writing JavaScript, but I'm s**te at writing English.\nThanks for the pull request ;-)\n. Hi @waldoj \nThanks for the corrections, but can you do me a favour and make your pull request to the dev branch please?\nI'm currently making big changes and a British friend of mine is reviewing the doc and demo (due to my terrible English).\nMany thanks :-)\n. I guess you'e asking something like the easing option from Walkway\nAt the moment the library cannot make this kind of effect, but this is something which can be implemented. I'll try to find a way to add this feature without make the code heavier.\n. Here we are!\nI've added two new properties on the option object: animTimingFunction and pathTimingFunction. Both are taking a function as value, one is for the global (timeline) animation, the other is for the path (each line) animation.\nThe function will define the animation, it must accept a number as parameter (between 0 and 1) and return a number (between 0 and 1).\nTo help, I've set 2 homemade functions Vivus.TIMING_EASE_IN and Vivus.TIMING_EASE_OUT. The effect is not perfect, but does the job. They can be directly used in the option object.\njs\nnew Vivus('my-svg-id', {\n  type: 'delayed',\n  duration: 200,\n  animTimingFunction: Vivus.TIMING_EASE_OUT\n});\nThe code is available on the dev branch. Can you please try it and tell me what you think?\nThanks\n. I understand, but I thought EASE_OUT would be too 'blurry'. By using the term 'timing', it refer to timing function used in CSS transitions. And about using easing as option property sounds false to me because the animation could be linear, step-start.. or custom. I have to investigate, but I'm happy you mention it, I wasn't happy with the naming.\nWe have to be careful about that point because it's not something we can change later.\n. This feature is now implemented in the last release.\n. Sorry about that, but you're right.\nThere's no callback when the animation is rewinded, only when it's drawn. I thought the callback would be useful only for when the SVG is drawn. But your point make sense.\nI'll try to implement it for the next version, but I want to add a property on the object to check if the SVG is drawn or not (to help the callback). I'm also hesitating to add the callback as property in the option object.\nSomething like\njs\nnew Vivus('logo', {}, function (myVivus) {\n  myVivus.play(myVivus.isDrawn ? -1 : 1);\n})\n. Now the callback function is called at the end of each animation. And to know if the instance is at the start or end, just check the property currentFrame (Equal to 0: start, else: end).\n. I cannot test it right now, but it might be due to Firefox. As explained in the readme.md, the animation need to know the length of each path element via the method getLengthProperty. But Firefox struggle with it sometimes, and return a crazy value or not even a number.\nhttps://github.com/maxwellito/vivus#firefox\n. As I said before, Firefox SVG implementation got some troubles. You can find many tickets on Bugzilla relating these issues. But this problem has been mentioned at the first issue : #1 \nAs long as getLengthProperty cannot return the correct value, the library cannot work correctly.\n@Skalkaz I tried on Firefox 34 on Windows 7, and I don't mention any issue. Reset works perfectly, there is no glitch or artifacts.\n. I just tried again on the demo page, the callback is triggered at the end of the animation.\nCan you provide me more details or an example (on JSfiddle or other platform)?\n. Don't worry, you just did a little mistake.\nIn JavaScript, when you give a callback function as parameter, only the function name is necessary. In your case you're executing the callback when you create the Vivus instance. Get rid of the parenthesis, and it will run perfectly.\njs\nnew Vivus('svg2', {\n    type: 'oneByOne',\n    duration: 250\n}, doDone);\n. Thanks :-)\nCan you tell me more about what kind of animation you would like to see on fill attribute? I never thought about it because it wasn't the goal of this library but I'm open to suggestions :-)\n. @Sanderha Don't worry, it's not my native language too, and my english is terrible. Just have a look on the pull requests on this repo, it's all about my bad grammar.\nI will keep fill animation outside of the library before it goes too big. I'm already scared to implement other features which could make the library slower just for few advanced usages.\nBut about what you ask, I can give you this solution:\n``` css\n/ Style /\nmySVG * {\nfill-opacity: 0;\n  transition: fill-opacity 1s;\n}\nmySVG.finished * {\nfill-opacity: 1;\n}\n```\njs\n/* JavaScript */\nnew Vivus('mySVG', {}, function (obj) {\n  obj.el.classList.add('finished');\n});\nThis idea is to use the callback to pass the fill-opacity from 0 to 1. Combine it with a CSS transition and it will be smooth.\nI haven't tested it yet, but it should work ;-)\n. Quick demo: http://jsfiddle.net/z7x4ovn7/\n. I think it's part of the standard SVG implementation, and shouldn't be worst than strokeDashoffset (what Vivus is based on).\n. Thanks for these kind words :)\nI never really paid attention to textelements :-S It's true my library doesn't take them in change.\nTo work, Vivus need to transform all object from the SVG (:circle, rect, line..) into pathelements. For text, it looks crazy to build. From what I found, RaphaelJS seems able to do it, but including a 90Kb library to this repo is too much.\nThanks for the codepen. I checked how this example works, because it keep the textelements, but I cannot implement it anyway. It doesn't seems possible to control independently each letter, and impossible to get the total length of the element.\nSo the only solution I can see is to transform your text elements to pathdirectly from your SVG editor, or try to implement RaphaelJS. I'm sorry about that.\nAnyway, I have to update the documentation to mention this.\n. :-)\nWell I tried to play with text element containing a simple letter. Same problem, it's impossible to use, I cannot get the line length. It doesn't work either with percentage values. RaphaelJS (actually I have to try it) or compatible elements only. it's sad.\nBut I definitely have to update the doc to mention it. Thanks for this issue.\n. Nice SVG :-)\nI had a look, and I guess it's because you're using the default option values when you instantiate your Vivus object.\njs\n// Your code\nnew Vivus('floralpattern', {type: 'delayed', duration: 25});\nSo start value is inViewport (default behavior). If you want is to load automatically once the page is loaded, set the value to autostart.\njs\n// What you should try\nnew Vivus('floralpattern', {\n    start: 'autostart',\n    type: 'delayed',\n    duration: 25\n});\n. Hi,\nThanks for these kind words.\nThis error happen when the element attribute passed into the constructor is incorrect. Can you show me your code please? Just paste it here\n. Owww.. Ouch!\nWhich platform? Mac OS?\nI have to fix that point. Thanks for spotting it\n. I've made some tests today. On Max OS, no issues. But Ubuntu, exactly this. I don't know why the engine behave differently on the Linux version.\nTo make it simple, when an Vivus instance is created, the code check the node element is a SVGSVGElement object. But on Opera linux, the same node element is a SVGElement object.\nNo idea why, but I'll update the checking process to fix this. Thanks for spotting it :-) \n. @jolic This issue is not related to the original one from @jordif. Your error is due to the usage of object tag instead of svg. In the README.md I mention that the library only works with inline SVG tags.\nOn the other side I'm curious about what you try to achieve. Did you really managed to make Vivus working with an object tag? Because it's not possible, this tag will sandbox the content of the SVG (like ShadowDOM or iframe). So JavaScript cannot access the content and modify it. I'm probably missing something.\n. @fantic Sorry about that, but you're not even part of this issue. You should unwatch this repo and review your notification settings.\n. To create a page on GitHub use the gh-pages branch as http server. This will automatically update the github.io page.\nAbout your trick, now I understand how it works. I was quite curious about the possibility to update a DOM of an object element. Tbh, I'm not really fan to oblige devs to update their SVGs to make it work dynamically (especilly to include scripts into it). But some people might be interested and it doesn't involve massive changes on the code. I'll have a closer look this weekend, it looks interesting :-) \n. This bug is now fixed in the last release.\n. Not sure to see the problem. Can you show me a page where I can see your code? Or a jsFiddle? Thanks :)\n. Thanks @jolic I didn't had time to look at it :-)\n. Yes, I launched it, and I've put two console, one in the first condition, one in the second. It always show the first, never the second.\nTry it\njs\nvar _checkElm = function(elm){\n    if (elm.constructor === SVGSVGElement) {\n        console.warn('_checkElm passed on SVGSVGElement');\n        return true;\n    }\n    if ( typeof elm === 'object' && typeof elm.nodeName !== 'undefined' && elm.nodeName.toLowerCase() === 'svg') {\n        console.warn('_checkElm passed on ObjectElement');\n        return true;\n    }\n    return false;\n};\n. I've made a copy of your code to show you. I'm probably wrong but I wanted to be sure because I'm missing something :-)\nhttp://maxwellito.github.io/drafts/vivus-embedded/\n. I'm really sorry but I can't see the difference between the example from your _PATCH folder and the one on your GitHub page.\nI set a console in vivus-patched.js and it never goes in the object case.\nhttp://maxwellito.github.io/drafts/vivus-embedded-2/\nAre you sure to use a C example in your GitHub page?\n. Thank you so much for this example. \nThis is CRAZY!!\nSorry it took me so long to get it, the example was necessary. Thanks for your patience.\nI just love it! It's seamless for the user, no change to do in his SVG file, nothing to change in the way to use Vivus, it's brilliant!\nA shame you didn't use Gulp to generate the patched file, but don't worry I will take care of that. \nI just have a simple question, how could we manage to make it working if the object is already loaded when the Vivus instance is created?\n. Actually I was wondering how to access the document when the content is already loaded, simply via contentDocument on the element. Gosh Sunday doesn't help on my brain.\nThe loaded thing is not really a problem, we can implement a onReady callback and a state variable like isReady. Personally, I love promises. Unfortunately, I think it's not accessible enough. The thing I like about Vivus is it doesn't require a big JavaScript knowledge to use it. Plus it would make the library heavier, I would love to avoid it.\nI have to admit this is quite tricky, because until here I didn't have to manage any asynchronous logic. I quite like the onReady solution: simple, accessible and won't make Vivus quite heavy. Maybe later, in the future, when ES6 will be mostly available, it will be time for an update :)\nThe only thing, we have to specify this tricks only works when the SVG is on the same domain. But that shouldn't be a problem.\n. @jolic I like all your efforts on this topic :-) Everytime you write a big response with code examples, that's appreciable. I will implement the feature on the dev branch tonight, I would be happy if you could review it. I'll mention you.\n@timelyportfolio Thanks :-) I was thinking to turn it into a WebComponent (or Polymer). Even if at the moment I'm more into React. I would be happy to see nice components. Now I focus on the next release which should be soon (v0.2 : animation function, npm, object tag compatible). But feel free to open a ticket and start the conversation. The most important to me is to make it accessible and interoperable, like WebComponents. \n. I pushed my code on dev. I like the way you want to improve the library but I think you're overthinking. The object tag creation is too much. It's adding too much code for less freedom. For example if the user want to add a class to the element, it will be 'hacky'. This must remain the dev personal problem.\nBut for this kind of case I would love a WebComponent.\nAt the moment I just quickly implemented the original object feature. I have to update the tests.\n. I understand your point of view, I'm just scared about how it will end. For now it looks great until people want to implement an option to add a class name, then one to set the object content (for fallback)...\nLet me try that tomorrow night.\n. Hey @jolic \nSorry I never closed this issue even if now Vivus accepts dynamically loaded SVGs. I wanted to give you a big and massive thanks because without you this would have never happen (I didn't know that was possible). \nHowever, there's two cases I haven't mentioned in the documentation which are the point E and F of your previous comment. Because these use-cases are rares and are more a 'hacky' way of doing things. But it remain very interesting. This is why I created the hacks.md page, a place to list the different hacks for the library.\nI would like if you could make a pull request to add your hacks. If you don't no worries :)\nAnyway, thanks again for your contribution, you're star!\n. Yes definitely!\nI started to have a look to all the issues and there's a lot of people. But I think you remain the most important one :)\n. No problem :)\nJust make the PR to dev branch\nFor now https://github.com/maxwellito/vivus/tree/dev#special-thanks\n. Oh finally!!! Hooray! \nI'll commit that\n. Ok, I'll have a look to do it. I was planning to release the version 0.2 (check the dev branch), maybe I can integrate this as part of the plan.\nCan I ask you something? I always used Bower to manage my frontend dependencies, how do you use npm for that? I mean, Vivus is not really node package, I find confusing to put frontend libraries/frameworks and node packages at the same place. I feel old school :-)\n. Oh OK, make sense in my head now. That's pretty clever, thanks for this lesson. \nDo you know if my package.json is valid? I think I did something stupid when I set it up long time ago, which is to use the default value for the property main: index.js. I guess I have to replace it with dist/vivus.min.js, right?\n. Thanks for your help!\nI should go to bed too, I'm on the same timezone :)\n. Good, thanks @mg for this explanation. I just need to add a simple Gulp task and create a layout to wrap Vivus.\n@gching, to make it compatible CommonJS and AMD I have to use this pattern, right?\nPlease, I hope nobody else will come and ask me to make it compatible with another format. :-)\n. @afc163 made a PR which looks good to me. Just wondering if it's wise to have the same file for frontend and npm, but it shouldn't break anything, the fallback look right.\nI would appreciate if NPM + Browserify users could give thein point of view :)\n. Ok, apparently nobody seems to be able to help (I can't blame, I'm in the same position).\nSo let's ask my JavaScript sensei : @yrezgui\nYacine, what do you think of this pull request? Especially the way to package the library (file src/_build.js). \nThanks :)\n. Thanks @mg, I merged the PR. I'll try it tonight, then once my unit test finished (about other features) I release the v0.2\n. Try again :)\nSorry, I thought the update was automatic after a release.\n. @mg Is it working?\n. Yay! Well spotted Russell :-)\n. Thanks for the PR!\nI didn't know I had to update that bit. I thought it wasn't supposed to change and show when the license started.\n. Thanks!\nYes, I've seen a comment today on hacker news about my weird naming and I've been thinking of it all day. To be honest I never had a look to the proper definition of the words. The only reason I called it async is due to the AJAX principle. The requests are asynchronous, this is why we can perform them without blocking the script execution, they run in parallel.\nI wouldn't be surprised to be wrong.\nThe problem is, I want the API to have a correct naming, but if I do it now it means that it won't be compatible with the previous versions. Except if I jump to the next major version, and that would be too big to jump directly on v1.0.0 (it's not mature enough). But if I do it, I think I would change all the names, and review the way to use scenario types.\n. Thanks for your pull request, but your PR doesn't respect the development process. If I do a gulp distrib your change will disappear. There's an open issue about the NPM format to adopt, I would appreciate if you could join the conversation. And I would be more than happy if you could introduce your changes to the topic and explain your choices.\nThe NPM push was planned for the next release.\nAlso, I'm a bit sad you posted it on NPM before the repo was ready for it, and under your account. I'm the maintainer of the repo, I would prefer to have the ownership on NPM and add contributors to not be the only one to keep it up to date. Is it ok for you to give me the ownership on NPM?\nThanks,\n. No worries :-) It remind me I should create a CONTRIBUTE.md.\nI'll mention your PR on the issue, even if I also would like your point of view about the choice you did: why UMD? With what is it compatible? Will it be ok with future standards? I think people would be interested :)\nAnd special thanks to the PR on the dev branch.\nThanks for the ownership, can I ask you how did you managed to change the README on NPM? I can't find how :-/\n. Hi,\nI have to be honest, it's the first time I hear about WebJars. We already are on Bower and JSdelivr, and soon on NPM. I'm not against the idea of having a library manager, but I have to admit I got scared when I saw your big XML file.\nCan I ask you the advantage of WebJars compared to NPM, Bower or a simple CDN?\n. I'm ok to have the pom.xml file in this repo, except if you think it would be easier for you to manage it from your fork (Do you have to update it manually or it will be automatic a every release?).\nIn which case this file should be updated? At every new version?\nThe only thing is, if we decide to put it in this repo, can you allow me to make you responsible for it? Just if we have an issue or question about it, just having the right to mention you to join the conversation :)\n. Oh! Brilliant! :-)\nIs there anything I should mention you in the future? If I move the dist files or something? Or a new release?\n. Excellent!\nI take note and will contact you if the released files changes. Thanks for your work :)\n. Ewwww... I thought I fixed it, and I actually did, but I should make it better :-S \nI put it in my list.\nFor now, what you can do add the attribute selfDestroy with the value true.\nSo your code would look like \njs\nnew Vivus('Layer_2', {\n  type: 'async',\n  duration: 50,\n  selfDestroy: true\n}, function () {\n  console.log('animation done');\n});\nThe reason is, by using selfDestroy it remove all stroke-dasharray and stroke-dashoffset attribute from all path elements in the SVG.\nHope it helps :)\n. JSfiddle please\n. Ok, I found out why. I need to fix a little problem for SVG with 1 path. For now just use this options object:\njs\n{\n    type: 'oneByOne',  // << that's the fix\n    duration: 200,\n    pathTimingFunction: Vivus.EASE_OUT,\n    //animTimingFunction: Vivus.EASE_OUT,\n    start: 'manual',\n    selfDestroy: true\n}\nBut personal advice, avoid using pathTimingFunction and animTimingFunction on such a single path SVG. You just double the ease.\n. The end will never look smooth.\n. It should animate the polyline, because the Vivus job is to animate elements with stroke.\nThe problem here, is the Pathformer class which is supposed to transform all your SVG elements into path. It fail to convert your polyline and polygon. I didn't know polygon and polyline can define their points without using commas. I raise this as a bug and try to fix it for the next version.\nSorry about that, but thanks for reporting the bug :)\n. For example, Vivus would accept this SVG\nhtml\n<svg class=\"peity\" height=\"16\" width=\"32\">\n    <polygon fill=\"#c6d9fd\" points=\"0,15.5 0,7.166666666666666 3.5555555555555554,10.5 7.111111111111111,0.5 10.666666666666666,5.5 14.222222222222221,7.166666666666666 17.77777777777778,0.5 21.333333333333332,3.833333333333334 24.888888888888886,10.5 28.444444444444443,7.166666666666666 32,12.166666666666668 32,15.5\"></polygon>\n    <polyline fill=\"transparent\" points=\"0,7.166666666666666 3.5555555555555554,10.5 7.111111111111111,0.5 10.666666666666666,5.5 14.222222222222221,7.166666666666666 17.77777777777778,0.5 21.333333333333332,3.833333333333334 24.888888888888886,10.5 28.444444444444443,7.166666666666666 32,12.166666666666668\" stroke=\"#4d89f9\" stroke-width=\"1\" stroke-linecap=\"square\"></polyline>\n</svg>\nOnly because of the commas\n. Nope, it's not due to missing commas. But thanks for checking the other issues before post one :-)\nYour DOM element got an invalid syntax, it should be:\nhtml\n<path stroke=\"#000000\" stroke-width=\"1\" stroke-linecap=\"butt\" d=\"m 57.6 24.2 2.2 2 c 2.6 -2.8 6.2 -4.4 10 -4.4 3.8 0 7.5 1.6 10 4.4 l 2.2 -2 c -3.1 -3.5 -7.6 -5.4 -12.2 -5.4 -4.7 0 -9.1 2 -12.2 5.4 z\" fill=\"none\"></path>\nThe properties are the same, I just added fill=\"none\" because the default behavior is to fill all path in black. But maybe you got a CSS rule which override that.\n. There's no issue with that. I just remind you Vivus is made to animate stroke on SVGs, not fill. Some icons from flaticon.com might look weird without fill.\nI can help you with two things:\n1. If you have a lot of SVG to clean, I recommend you svgo: SVG Optimizer is a Nodejs-based tool for optimizing SVG vector graphics files. \n   But if you don't want to use node and just optimise few SVGs, use svgomg, it's a UI for the module I just mentionned.\n2. If you insert your SVGs inline in your HTML, you can use CSS to override the rules.\ncss\nsvg path {\n  stroke: \"#FFFFFF\";\n  fill: none;\n}\nI recommend you to use a class and not svg directly :-)\n. Hi,\nI completely understand that designer shouldn't care about the order of their layers. But using the layer order was the most natural default behavior to implement.\nIn your case you want some control over the drawing scenario, this is why I recommend you check the type scenario.\nIt give you the possibility to define the start and duration of each path element. In this case, the layer order doesn't matter. But it might take you some time to script your SVG.\nCheck the readme.md file and come back to me if you have any questions.\n. At the moment I don't plan to implement this kind of features. But I found a way to hook this feature.\n``` js\nnew Vivus('yourSvgId', { \n    type: 'oneByOne',\n    onReady: function (obj) {\n      var i, \n        counter = 0,\n        newMap = obj.map.sort(function(a,b) {\n          return b.duration - a.duration\n        });\n  for (i = 0; i < newMap.length; i++) {\n    newMap[i].startAt = counter;\n    counter += newMap[i].duration;\n  }\n\n  obj.map = newMap;\n}\n\n});\n```\nThis trick wait the SVG to be ready to reformat the map in the order of path length. All other parameters are the same. Feel free to put this callback into an independent function to use it many times. You will need the v0.2.0 to make it work.\n. For IE, I'm not proud of the trick I used to make it working which is to recreate the DOM at every update to force the rendering. It's a huuuuge waste of performances but the only way to make the animation working. Otherwise it's pure glitch, yark!\nAbout Firefox, my bad, I admit I haven't tried this new feature (which has been released last week) on Firefox, let me try that.\nI tag the issue as a bug, thanks for the spot. I come back to you once I have more details.\n. The Firefox bug should be fixed now :)\nv0.2.1 released!\n. From what I can see, the values of your polyline element are not correct. It's not even related to Vivus. I can't display an SVG with this values. \nFrom what I know, the L right after the M shouldn't be there. I tried and I displayed the SVG.\nCan you post the code of your SVG to have a quick look please? :-)\n. I'm afraid not :(\nSorry but this feature is not implemented. I tried to find a quick solution but I don't see any. If want this feature you will have to fork the code and implement it yourself. It's not ideal, but if you accept the challenge I will help you :) \n. Mmm... Might be related to the previous issue. Can you create a jsFiddle to have look? Thanks\n\nLe 22 Mar 2015 \u00e0 17:07, Tom\u00e1s Pollak notifications@github.com a \u00e9crit :\nI'm getting this error on Firefox 36.0.1 on OSX. Why might this be happening?\n\u2014\nReply to this email directly or view it on GitHub.\n. Ouch.. it looks like a bug from Vivus. I have to make a patch. It seems\nrelated to the previous issue.\n\nSorry about that, but thanks for the ticket :-)\n2015-03-23 16:35 GMT+00:00 Tom\u00e1s Pollak notifications@github.com:\n\nActually I just created a fiddle and I'm getting the same error on Chrome.\nhttp://jsfiddle.net/jrk184nm/2/\nLocally I'm just pointing to a file in the same host, so it's not due to\nCORS.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/46#issuecomment-85083392.\n. Hey @tomas \n\nSorry for the delay. I made a local patch to see if I could fix the problem, and yes, now it works on Firefox (this patch is not deployed yet). But I mention your SVG does not have any shape with stroke values. And Vivus work on this, this is what the library animate.\nI set up an example to show you http://maxwellito.github.io/drafts/vivus-issue-46/\nYou can have a look at the code from https://github.com/maxwellito/drafts/tree/gh-pages/vivus-issue-46\nThe first animation is from your code, the second one is a copy of it but with an SVG with stroke properties on shapes.\n. :-)\n. Hi,\nThanks for these kinds words :)\nI have been thinking to a way to ignore some paths but there would be so much rules that I forgot the idea. Because stroke='none' could be the marker to ignore a path, but in this case I should also think about path which aren't visible (display: none, opacity: 0, parent elment not visible too..).\nSo I was thinking to use a simple attribute to set in the path element to ignore. Something like data-vivus-ignore. I'm open to suggestions for this one :)\nI put your ticket as improvement. I can't promess to implement it soon, I have proper bugs to fix first :-S\n. To be honest I'm really confused about what to do in this case. There's no reliable way to know if a shape  is visible or not (parent visible or not, and class styling). But I think we should focus on the most common usecases. Usually there no class styling for an SVG, they usually come freshly out from Illustrator or Inkscape. So I would try your code @morgangiraud (which simple and clean, brilliant) but with a little change:\nFor example, a SVG exported from Illustrator might look like this:\nhtml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generator: Adobe Illustrator 15.0.2, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" id=\"Calque_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n   width=\"40px\" height=\"40px\" viewBox=\"0 0 40 40\" enable-background=\"new 0 0 40 40\" xml:space=\"preserve\">\n  <circle fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" cx=\"16.26392\" cy=\"15.48047\" r=\"11.72144\"/>\n  <g display=\"none\">\n    <circle display=\"inline\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" cx=\"24.3811\" cy=\"22.89746\" r=\"11.09155\"/>\n    <circle display=\"inline\" fill=\"none\" stroke=\"#000000\" stroke-miterlimit=\"10\" cx=\"24.10132\" cy=\"15.33984\" r=\"8.15259\"/>\n  </g>\n</svg>\nSo usually we choose to not display a complete group. With this recursive trick, we can check the parents. It's not optimal in term of performances but it's only done when the SVG is ready and not between each frame.\njs\nVivus.prototype.isInvisible = function (el) {\n  if attr data-vivus-ignore exists and is set to true \n    return true\n  if attr stroke is set to none \n    return true\n  if inline style containts display:none || visibility:hidden || opacity:0 \n    return true\n  if (this.el !== el)\n    return this.isInvisible(el.parentNode);\n  else\n    return false;\n}\n. I think I found something to help :\njs\nfunction isHidden(el) {\n    return (el.offsetParent === null)\n}\n\nhttp://stackoverflow.com/questions/19669786/check-if-element-is-visible-in-dom\n\nI need some more tests but it should help to check if an element is visible. It works if the parent element is not visible. But you perfectly fit in @morgangiraud comment.\nI'll push some updates here tonight, based on @morgangiraud PR #48 \n. For now the method I have look like this: (fork from #48)\n``` js\nVivus.prototype.isInvisible = function (el) {\n  var ignoreAttr = el.getAttribute('data-vivus-ignore');\n  if (ignoreAttr !== null) {\n    return ignoreAttr !== 'false';\n  }\nreturn (this.ignoreInvisible && el.offsetParent === null);\n};\n```\nthis.ignoreInvisible would be a new option (boolean, default true) to let developer choose if they want to enable the option to ignore invisible paths. \n\nBut where are the checks about opacity and stroke?\n\nWell, not that I don't want them, they are really relevant but won't work in all cases. If the style is applied via a CSS rule we won't be able to detect it. We can only check the attribute or inline style on the element. It's a shame. But if we have a good way to check if the element is visible, which is a big improvement.\n. Thanks for the PR! :)\nBut I have many points to correct. \n1. Can make the PR to the dev branch please. I'm sorry I should have a CONTRIBUTING.md to define rules.\n2. Well done for updating the tests (usually people don't even think about it), but just updating the SVG to include hidden elements is not a correct test. It deserve it's own it test. I can help about that :)\n3. I thought you would wait the end of the conversation on the #47 to purpose a PR. There's few points we need to clarify.\nBut I want to say thank you because usually people just come and shoot about a feature they want but don't take even a second to implement it, like a customer service. So thanks a lot for contributing :)\n. I'm closing your PR for now. I implemented a basic function to do the job in the last release (v0.2.3).\nBut this feature is on beta for now, you have to enable it manually to test it. Yes, I'm not really confident about the implementation.\nThe discussion can continue on the #47 \nThanks again for your PR :)\n. Hi,\nYou menton the failure about animation icons with Vivus. Most of them are fill based, not stroke based. I tried to make an animation with the icon you posted, but it just kill it https://jsfiddle.net/41L4nej5/\nAbout finding good stroke SVG icons, I would recommend you to check the Collective from Codrops. It's an amazing resources of links, and there's always some links to icons packs. By checking the first pages I found these:\nhttps://dribbble.com/shots/2015061-Nucleo-Free-Test-Pack\nhttp://matt-cooper.com/minimalistic-icons/\nUnfortunately I don't know an icon library completely dedicated to stroke icons. Or even one which purpose this option as filter.\n. @kartikluke I'm afraid I don't know any automatic way to transform a fill based SVG to a stroke one. The only way is to redraw them.\n. I use Illustrator. Just keep your origin icon under a locked layer, draw the new version on top one. Then once finished you can delete the original one: it's ready to use.\n. Can you give an example (JSfiddle or other)?\nThe demo page works perfectly on Firefox\n. Hi!\nThanks for these kind words :)\nAbout the SVG flash before the animation you can do the following. The trick consist to set a CSS rule to make the SVG transparent until Vivus has initialised the SVG. If you use Vivus for more than one SVG, I recommend you to store the callback in a separate function and have a more generic CSS rule across your SVGs.\n``` css\nyourSvgId {\nopacity: 0;\n}\n```\njs\nnew Vivus('yourSvgId', { \n    // your options\n    onReady: function (obj) {\n      obj.el.style.opacity = 1;\n    }\n  });\n. Sorry for the delay :-/\nBut yeah, your PR make sense. I should update the GitHub page too. I think a good update is required. \nThanks for the PR\n. Interesting, to be honest I've never tried.\nCan you provide me a copy of your DOM to have a general overview? Or a\nJSfiddle :-)\nTo be honest, I would be happily surprised if Vivus accepts SVG sprites.\n2015-05-22 17:02 GMT+01:00 Daniel Sieradski notifications@github.com:\n\nHi,\nI'm using an SVG sprite (using this method\nhttps://css-tricks.com/svg-sprites-use-better-icon-fonts/), which I'm\nembedding inline. I've included the JS in my header and added this code in\nmy footer:\nnew Vivus('heading-also-like', {type: 'delayed', duration: 200, start: 'inViewport'});\nnew Vivus('heading-trending', {type: 'delayed', duration: 200, start: 'inViewport'});\n  new Vivus('heading-latest', {type: 'delayed', duration: 200, start: 'inViewport'});\nUnfortunately, it's not working, and I'm getting the following error:\nError: Vivus [constructor]: \"element\" parameter is not valid (or miss the \"file\" attribute)\nAm I doing something wrong or does Vivus not support SVG sprites? If not,\ncould you add support?\nThanks!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/53.\n. Hi Daniel,\nThanks for the example, it's a very interesting use case.\nAs I said I never tried to use SVG sprites, so it was the good opportunity.\n\nFrom what I see, the tag use is a simple mirror to the original symbol tag. If a change is done to the symbol, this will affect all the use tag referencing it. But the use tag don't own a copy they can change. I tried many different ways without success, I'll have to look at the documentation.\nSo your idea to give the symbol ID to Vivus was right. Unfortunately, there's some checking in the Vivus constructor to only accept SVG elements as input. \nI created a fork of it, quickly patched to allow symbol tags, and it works : http://maxwellito.github.io/drafts/vivus-issue-53/\nHowever, I mention some little problems:\n- By using inViewport, Vivus will check when the SVG element is in the viewport to start the animation. But in our case, it's not doable because the symbol tag is hidden. So there's not way to know if it's the viewport. And even if it was visible, it must be at the same place as where you display the SVG.\n- The SVG you try to use, is not appropriate for Vivus. This library is made to animate stroke paths. In your case, there's no stroke paths but only filled paths. Unfortunately, Vivus won't animate them.\n. You're welcome :-)\nNow I'm wondering if it would be useful to implement it into Vivus. The\nusage restriction is a bit discouraging. Any ideas about it?\n2015-05-27 22:49 GMT+01:00 Daniel Sieradski notifications@github.com:\n\nThanks, that's quite helpful.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/53#issuecomment-106088500.\n. Yes, but not only. The goal of using a sprite is to reuse the same graphics at many different places on your page. Unfortunately it's not possible to control every instance but only the original one. Making the animation sync between instances. That's really uncool.\n. Mmm.. I'm afraid not. I would suggest you to use 'oneByOne', but you're\nlooking to reproduce the same timing as your drawing, so it won't work.\nSorry about that.\nOn 11 Jun 2015 00:43, \"ulisesguerrero\" notifications@github.com wrote:\nHello,\nDo you know of any software that will record the stroke delays as they are\ndrawn in real time? Instead of having to tweak the DOM to scenarize.\nThanks\nUlises\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/54.\n. Thanks!\nWell spotted! I didn't know the user agent has changed for IE11+\n\nBut just a simple question. How look the animations on IE11 &12 (with and\nwithout your patch)? Because if they are smooth and fine I'll have to\nchange the property name and not the value.\nThanks again\nOn 26 Jun 2015 00:28, \"Brennan Vargas\" notifications@github.com wrote:\n\nIE detection was not working for IE 11 & 12\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/maxwellito/vivus/pull/55\nCommit Summary\n- Updated to detect IE 11 & 12\nFile Changes\n- M dist/vivus.js\n  https://github.com/maxwellito/vivus/pull/55/files#diff-0 (2)\nPatch Links:\n- https://github.com/maxwellito/vivus/pull/55.patch\n- https://github.com/maxwellito/vivus/pull/55.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/maxwellito/vivus/pull/55.\n. Brilliant!\nAwesome job, and great demo :-)\nA bit sad Microsoft didn't improve their SVG rendering...\n\nBut big thanks!\n. Oupss.. Pardon my french!\nWell spotted, thanks for the pull request! \n. Hi there,\nThanks for providing an issue with details. Unfortunately I don't know how to use Adobe Muse plugins, I've never used it. From your snippet it look very straight forward to understand. There is a syntax error in your snippet, a comma is missing after Vivus.EASE_OUT.\njs\nnew Vivus('svg1', {\n  type: 'delayed',\n  duration: 200,\n  start: 'inViewport',\n  animTimingFunction: Vivus.EASE_OUT,\n  file: '{param_img1}'\n});\nTry to fix this first.\nOtherwise, do you have any error in the JavaScript console? Are you sure Adobe Muse set your variable correctly?\n. Any updates?\n. Do you have any JavaScript error in the console? Do you have a page where I can test it?\n. Ok, when you execute your script, Vivus is not defined.\n\nSimply because you use Vivus before to define it.\n\nLine 65, you create an instance of Vivus\nLine 74, you 'load' the Vivus library.\nJust reverse the order and everything should work.\n. Well, if you cannot change the order of these two script tags by\nyourself, you must refer to the creator of the widget. I have no control on\nthis. Sorry.\nOn 2 Aug 2015 8:36 pm, \"termoplus\" notifications@github.com wrote:\n\nI knew that I did something wrong. but how I can understand what should I\ndo now? I am not a programmer :(( can you help please?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/58#issuecomment-127059940.\n. Sorry, I was AFK.\nOn your index.html you must place the <script> tag (with his content) [lines 73-75] before the <script> tag of the line 64.\n\nAnd I don't really understand the chuck of code you added. It will never be executed, because zero will never be superior to zero.\n. Well this time, the code is correct. Only your SVG doesn't respect the rules, it must be fill=\"none\" and the color must be for the stroke. \nIn your SVG:\nhtml\n...\n  <path fill=\"none\" stroke=\"#000\" ...\n...\n. You must do the changes in /assets/heckert_gnu_white.svg file.\nVivus animate the the border of shapes in a SVG, not the fill color. In your SVG you're not using the border (:stroke) but only fill. This is why you cannot see the animation. \n. Create an SVG file with this content:\nhtml\n<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"535\" height=\"523\">\n<path fill=\"none\" stroke=\"#000\" d=\"M112.993,304.372c-3.634,0.247-8.365,1.875-11.539,7.564 c-2.591,4.646-8.661,5.387-11.495,4.451c-4.721-1.56-10.755-2.642-16.6,1.523c-5.845,4.164-12.157,1.015-11.05-6.576 c1.107-7.59,3.849-14.351,11.127-18.538c15.895-9.144,4.848-15.508,13.572-24.685c8.741-9.195,6.81-12.009,6.52-24.497 c-29.543-4.438-46.287-12.953-64.984-36.313c-18.697-23.361-25.945-42.59-27.883-71.878c-1.938-29.288-0.258-48.269,12.396-72.58 s25.977-36.014,49.065-48.153C85.21,2.553,107.832-0.354,128.742,0c20.91,0.353,34.843,1.885,46.658,8.626 c11.814,6.741,22.622,15.224,29.512,15.285c6.891,0.061,11.582-1.744,14.931-4.31c0.894,22.703-19.539,24.675-37.819,25.155 c-18.281,0.479-29.514-7.083-46.351-4.27S91.269,50.961,77.84,74.336s-13.887,31.638-12.771,51.24 c1.116,19.603,17.988,34.228,27.512,34.387c9.523,0.159,11.649-2.599,19.985-8.036c8.337-5.438,50.896-58.122,65.418-69.956 c14.523-11.834,28.854-15.488,44.328-15.678c15.474-0.19,19.428,0.335,31.908,5.45c12.48,5.114,20.149,14.533,30.211,20.291 c5.143-3.027,8.338-7.547,13.057-10.996c16.877-12.335,25.646-15.659,45.705-13.707c11.529,1.122,26.066,7.708,34.74,15.25 c15.445,13.429,28.205,32.125,38.516,46.328c8.029,11.061,17.477,24.295,30.965,28.432c14.727,4.515,25.809-14.559,27.436-25.139 c0.922-5.995,2.125-11.249,2.135-17.847c0.01-6.599-0.664-14.607-2.566-21.484s-5.16-13.72-8.688-19.394 c-5.742-9.235-15.137-18.899-24.912-23.871c-5.486-2.79-18.393-7.863-26.529-8.041c-9.969-0.216-17.564,3.133-26.781,3.761 c-11.156,0.761-31.084,3.269-39.83-5.35c-5.566-5.485-6.266-9.144-7.217-16.296c2.459,2.026,5.898,3.358,8.959,3.617 c6.986,0.59,13.527-5.114,19.166-8.419c4.645-2.723,11.223-7.589,17.324-10.048c15.676-6.32,34.932-6.138,51.48-4.445 c13.264,1.356,30.461,7.257,42.094,13.84c11.688,6.612,22.951,17.761,31.201,28.271c10.379,13.224,16.053,24.57,19.812,41.063 c4.805,21.062,6.137,52.702,0.328,73.469c-4.578,16.365-19.779,41.504-32.719,53.827c-12.762,12.155-27.498,18.022-44.256,21.231 c0.656,3.382,0.764,6.536,1.631,9.309c1.232,3.936,3.588,8.324,8.428,6.936c1.93-0.553,2.963-1.032,5.508,1.194 c2.543,2.226,1.219,10.825-5.938,14.684c-3.629,1.957-7.459,2.382-13.271,2.498s-14.883,0.141-21.193-0.964 c-6.309-1.104-10.078-6.111-17.066-6.895c-10.799-1.208-19.068-9.01-27.727-14.59c-3.613-2.329-4.832-2.353-6.914-3.53 c1.125,3.444,2.625,7.021,3.373,10.332c0.75,3.311,0.43,6.378,0.828,9.028c0.396,2.648,1.131,4.707,1.559,6.855 c1.73,1.547,2.283,3.9,5.189,4.64c2.908,0.739,7.461-0.412,10.436-0.812s4.969-2.021,7.303-1.577 c2.336,0.443,4.549,2.115,6.506,3.682s3.639,1.796,5.223,5.706s3.037,11.917,3.254,17.269s-0.383,10.183-1.969,14.43 s-2.98,6.13-7.275,10.336c-4.295,4.207-11.289,10.38-18.268,14.68c1.285,1.903,1.855,3.645,3.859,5.71 c2.004,2.066,6.182,4.381,8.041,6.56c1.857,2.179,2.799,3.742,2.826,6.186c0.029,2.443-0.09,5.619-2.074,8.283 c-4.941,6.633-10.785,7.821-17.891,10.941c1.195,7.462,2.17,12.793,0.443,20.244c-0.705,3.036-2.271,9.92-6.016,11.686 c-3.746,1.766-10.969,0.911-15.541,1.637c-4.572,0.727-7.131,1.417-10.695,2.125c-2.166,3.131-5.391,6.586-6.496,9.392 c-1.107,2.807-0.773,3.813,0.156,6.679s4.092,7.039,4.988,10.395s1.07,6.969,0.234,10.334c-0.838,3.365-2.271,5.807-5.139,8.795 c-2.867,2.989-8.508,5.336-11.318,7.758c-2.812,2.423-5.611,2.714-4.844,6.723c1.055,5.506,9.1,14.436,14.92,16.562 c3.488,1.275,8.17,0.873,12.406-0.915c-0.287,4.703-4.357,7.873-7.016,10.996c7.201-2.059,14.184-6.001,19.014-11.226 c-1.498,4.538-6.652,11.823-14.361,18.22c-7.709,6.397-7.662,5.088-11.494,7.633c6.992,1.405,13.494,1.025,18.91,0.052 c-2.969,1.637-7.836,3.939-14.283,4.616c-6.447,0.676-10.422,0.198-16.232-1.213c-5.811-1.412-11.115-6.694-18.156-10.335 c0.686,2.612,1.174,5.753,4.135,8.439c2.961,2.686,7.441,4.052,12.203,6.375c-6.062-0.688-12.432-0.896-18.389-2.209 c-4.41-0.973-7.373-2.005-10.6-3.603c-3.225-1.598-5.715-3.929-8.572-5.893c1.369,2.615,1.775,5.691,4.105,7.847 s6.117,2.959,9.18,4.44c-3.195-0.07-6.268,0.623-9.58-0.21c-3.314-0.833-6.422-2.142-9.867-4.68s-6.998-5.663-9.938-8.858 c-2.938-3.195-6.566-7.337-7.664-10.283c-1.1-2.947,0.66-5.008,0.99-7.509c-2.029,1.333-4.525,2.067-6.084,4.002 s-2.941,3.702-2.251,7.075c0.691,3.373,3.804,7.496,6.005,11.248c-6.568-5.371-10.236-7.439-11.799-13.918 c-1.463-6.066,2.322-11.572,5.199-16.159c1.429-2.278,3.567-4.398,4.903-6.597c-2.967-2.903-6.358-5.398-8.901-8.709 c-2.542-3.31-3.61-7.79-6.205-10.957c-2.596-3.168-6.088-5.173-9.129-7.756c2.673,5.742,7.066,12.785,8.02,17.229 c0.953,4.444-1.069,7.164-2.646,9.563c-1.578,2.399-4.124,2.934-6.539,4.408c-2.415,1.475-6.171,0.312-7.61,2.501 c-1.438,2.188-1.824,5.48-0.449,7.648l5.64,8.902c-2.078-1.049-5.658-4.1-7.272-6.264s-4.09-4.163-4.429-7.089 c-0.339-2.925-0.504-5.464,1.391-8.07c1.896-2.605,7.086-3.477,9.409-5.48c2.323-2.003,3.626-3.307,3.493-5.896 c-0.132-2.589-2.661-4.441-4.835-6.073c-6.637-4.978-15.151-9.565-20.787-15.565c-3.184-3.39-4.712-6.127-5.352-8.466 c-0.639-2.338,0.037-4.162,1.619-7.038c1.582-2.877,7.007-6.718,7.667-9.843c0.659-3.124-2.081-3.795-4.554-4.897 s-7.17,0.565-9.464-1.352c-2.293-1.917,0.674-5.945-1.911-8.154c-2.584-2.209-8.499-0.976-11.552-3.352 c-3.053-2.377-4.315-5.327-5.367-8.775s-1.171-7.225-0.458-9.722s2.855-2.934,4.147-4.228s2.413-2.367,0.691-4.297 c-1.722-1.929-7.365,0.108-10.609-2.369c-3.244-2.477-1.258-8.41-3.552-10.911c-2.293-2.501-6.409-1.522-8.581-2.321 c-2.171-0.799-3.023,2.02-4.355-2.438c-1.332-4.459-1.368-17.75-3.16-22.71s-5.311-0.335-6.945-5.265 c-1.634-4.929-0.085-12.812-0.821-20.257l-3.335-20.257c-11.634,7.815-19.314,10.269-31.813,12.477 c-1.043,30.582-3.916,48.591,6.464,82.52c10.38,33.928,31.387,53.924,59.726,82.649c-37.395-28.016-55.248-50.792-66.422-79.97 C109.723,356.876,111.869,332.472,112.993,304.372z M311.701,292.08c2.877,0.129,6.373,0.859,8.393,2.171 c2.021,1.312,4.166,2.384,6,4.251c4.576,4.66,8.008,10.28,9.525,16.738c0.967,4.117,1.111,9.397,1.463,14.231 c-1.385-4.468-2.316-9.127-4.289-13.13c-3.111-6.312-8.396-12.473-14.959-15.31c-2.166-0.938-3.611-0.764-4.803-0.598 c0.533,0.895,1.426,1.645,1.465,2.956s-0.254,3.876-2.477,4.954c-3.584,1.739-7.568,0.516-10.336-1.931 c-2.791-2.466-3.742-6.638-2.281-10.223C301.143,291.917,307.777,291.906,311.701,292.08z M275.629,286 c0.361-7.345,3.012-13.539,9.594-17.141c3.404-1.862,8.648-4.27,13.467-4.836c4.629-0.543,15.889-0.146,22.662,2.945 c5.201,2.374,8.744,6.07,13.311,8.771c4.566,2.702,7.814,4.513,12.162,7.543c6.674,4.651,10.586,9.772,15.213,12.842 c2.225,1.475,5.355,1.256,8.309,2.158c-2.297,0.682-5.299,1.434-7.777,0.642c-3.09-0.988-7.41-3.813-9.807-5.838 c-4.236-3.578-6.432-5.324-11.055-8.023c-2.76-1.608-7.305-3.503-10.338-5.481c-3.035-1.978-8.303-6.318-11.219-7.787 c-3.707-1.866-10.381-2.904-14.508-2.783c-5.686,0.166-13.916,1.104-18.316,5.096c-4.371,3.968-6.031,7.459-5.045,12.612 c1.646-1.896,2.742-4.278,4.391-5.688c3.416-2.918,7.336-3.059,11.588-2.506c4.777,0.622,7.182,3.381,8.76,7.916 c-1.062-0.78-3.014-2.493-4.555-3.024c-3.617-1.248-6.352-0.864-9.74,0.953c-4,2.146-2.912,5.322-3.488,8.854 c-0.264,1.629-0.879,2.941-1.318,4.412c-1.504-0.398-2.895-1.024-4.033-2.152c0.047,1.65-0.193,3.093,0.145,4.949 c0.336,1.855,1.24,4.059,1.859,6.088c-2.785-2.786-5.635-5.38-7.434-8.977C276.656,293.946,275.436,289.952,275.629,286z  M280.449,232.54c2.053-3.047,2.654-7.721,3.92-11.521c-0.506,4.813,0.467,10.106-1.883,13.592 c-2.35,3.486-6.477,2.875-9.896,3.889C275.25,236.472,278.395,235.587,280.449,232.54z M231.298,303.908 c2.636-2.134,9.75-0.428,15.071-0.047c-3.824,0.979-7.648,1.959-11.472,2.938c-0.356,1.301-0.195,2.792-1.068,3.901 c-0.874,1.11-2.534,1.521-3.8,2.28C230.154,309.562,228.662,306.041,231.298,303.908z M268.789,155.688 c3.176,1.71,7.207,3.971,10.012,4.041s3.539-1.834,5.189-2.933c2.596,8.465,5.576,17.766,9.996,25.447 c1.852,3.218,3.033,1.722,4.441,4.956c1.406,3.233,2.031,9.812,3.365,13.943c1.336,4.131,3.078,7.171,4.617,10.756 c-3.908-5.537-8.957-12.597-11.135-17.205c-2.176-4.607-0.783-5.008-2.545-9.396s-5.324-11.228-7.986-16.842 c-1.906,0.253-4.266,0.6-5.715,0.153c-1.449-0.447-1.16-1.988-2.469-2.984c-1.311-0.996-3.514-0.61-5.35-2.2 C269.373,161.835,268.955,158.574,268.789,155.688z M251.688,197.457c2.989-0.262,6.701,0.539,9.5,0.38s4.797-0.885,7.196-1.328 c-0.445-4.216-0.023-11.962-3.915-14.777c-2.514-1.818-12.839-0.449-15.597,0.146c-6.206,1.338-13.433,5.042-19.435,7.358 c5.752-4.018,10.721-7.742,17.62-9.816c4.147-1.247,13.825-2.868,18.105-1.712c1.954,0.527,2.349,1.336,3.534,2.992 c4.074,5.688,4.062,10.604,5.119,17.23c1.039,1.619,2.146,2.699,2.988,4.369c0.84,1.67,1.316,4.298,1.551,6.446 c-1.066-1.546-0.414-3.485-3.367-4.636c-2.955-1.151-7.479-0.076-11.46,0.34c2.902,2.094,4.344,4.111,4.455,8.538 c0.13,5.198-4.271,8.939-8.866,9.295c-6.379,0.495-9.668-0.906-12.248-6.358c-1.13-2.388-0.311-5.261-0.405-7.589 c-7.665,0.533-7.54,0.283-13.142,4.954c3.045,4.461,4.963,7.026,9.995,9.695c2.822,1.498,6.017,2.954,9.514,3.549 c3.498,0.595,9.235,1.17,12.909,0.606c3.675-0.564,5.757-1.613,8.481-4.132c2.725-2.52,2.975-6.128,4.039-8.98 c-0.242,2.745-0.557,6.241-1.576,8.232c-3.1,6.053-8.461,7.847-14.862,7.867c-6.144,0.02-13.744-1.397-19.46-3.767 c-4.57-1.894-12.146-7.258-13.944-11.918c-1.229-3.184-0.256-7.091-0.385-10.637c6.328-4.208,7.894-3.173,15.381-4.405 C246.545,198.883,248.699,197.72,251.688,197.457z M214.827,168.956c0.178-2.521,0.457-2.467,0.686-3.701 c-5.765-1.542-8.077,2.198-11.457,9.144c-1.265,2.599-0.013,4.146-1.37,5.857c-1.355,1.711-3.539,1.471-5.74,3.114 c-2.201,1.642-4.382,4.787-6.44,6.488c-4.223,3.491-9.931,5.622-14.829,7.971c3.345-2.468,9.836-6.211,11.936-9.797 c1.114-1.901,0.949-5.486,2.683-7.195c1.733-1.71,2.34-2.893,4.578-3.329c2.238-0.436,1.338-3.03,2.06-5.092 c0.722-2.062,2.16-3.526,3.69-5.586s3.46-5.153,6.481-6.276c3.021-1.124,7.732,0.091,10.019-0.556 c2.286-0.647,0.973-2.309,2.634-3.307c1.663-0.998,4.896-0.558,7.117-1.625c3.937-1.893,5.82-5.053,8.188-8.436 c0.344,7.282,0.26,12.525-2.357,19.376c-2.947,7.711-5.934,12.253-14.298,16.995c-2.882,1.633-5.75,2.2-8.139,3.057 c1.393-1.9,3.387-2.725,4.18-5.7C215.24,177.381,214.649,171.478,214.827,168.956z M349.865,204.463 c-3.977,0.259-4.92-0.264-8.102,1.98c1.725,2.684,3.449,5.368,5.172,8.052C346.783,209.197,347.299,208.135,349.865,204.463z  M339.445,200.613c5.508-2.346,10.307-4.244,16.299-4.619c2.402-0.151,6.131,0.221,8.557,0.331 c2.066-3.042,4.699-5.441,5.664-8.913c0.639-2.303,0.324-12.992-0.807-15.767c-3.295-8.076-6.498-8.417-11.033-13.043 c-3.291-3.355-3.422-8.464-4.406-14.189c-0.361-2.103-1.393-4.764-1.877-6.934c-5.928-0.999-12.303-1.328-19.123-0.987 c3.307-3.172,6.504-6.07,7.453-10.832c0.947-4.762,0.176-10.617-2.531-14.887c-2.707-4.27-7.031-7.99-11-11.469 c-3.971-3.479-9.662-6.351-13.424-9.197c4.893-1.752,9.889-4.326,14.682-5.255c12.486-2.422,23.244,1.282,35.287,8.563 c7.002,4.235,12.793,8.258,20.113,15.921c7.318,7.662,16.395,21.717,23.48,30.052s12.805,14.927,18.986,19.898 c6.182,4.972,11.777,6.388,17.664,9.581l9.176,9.744l7.426-9.189l11.949,1.351l2.469-13.412l10.967-3.005l-1.789-18.08 l7.885-5.596l-5.926-11.249l6.021-12.292l-7.85-14.051l3.027-13.529l-9.088-7.745l-1.186-14.377l-12.678-4.836l-5.086-12.508 l-14.254-0.16l-6.992-9.285l-9.596,0.672l-10.697-1.165l-6.049-4.466l-8.779,5.828l-10.623-5.539l-21.117,8.017l13.766-11.972 l14.262-2.278l10.926-2.785l14.756,4.846l12.988-3.29l12.523,7.403l13.252-0.733l6.51,11.681l13.195,1.523l7.139,12.987 l8.299,4.531l2.203,16.637l7.391,7.01l-3.25,14.557l8.707,11.024l-8.164,11.812l8.73,7.383l-11.16,9.891l11.303,11.771 l-13.65,4.402l8.891,12.625l-11.15,1.924l7.312,13.882l-12.566-0.167l6.33,10.398l-13.783-1.659l3.297,14.959l-10.416-9.163 l-3.568,18.13l-7.188-13.018l-3.893,16.237l-8.873-11.973L455,219.596l-9.807-15.309c2.068,8.686,1.654,18.197,7.359,26.386 c17.676-2.392,29.229-6.846,42.771-19.877c12.334-11.868,27.076-36.613,31.068-52.308c4.555-17.91,4.695-50.85,0.209-69.084 c-4.318-17.556-9.93-25.942-19.957-40.268c-9.584-10.179-19.01-20.932-31.174-28.191C457.613,10.29,434.717,7.417,414.367,7.694 c-11.268,0.154-18.816,2.318-25.553,4.768c-11.781,4.284-21.203,13.629-33.18,18.247c-3.906,1.505-7.037,1.552-10.113-0.091 c3.012,6.026,6.289,8.729,13.801,10.922c5.434,1.586,18.4,0.583,27.326-0.241c9.582-0.885,14.58-3.734,27.621-3.555 c12.736,0.175,22.828,5.013,28.346,8.168c11.385,6.51,19.549,13.732,26.643,25.172c3.896,6.282,6.625,13.37,8.547,20.603 c1.922,7.233,2.764,15.334,2.887,22.415c0.123,7.081-0.418,13.402-2.15,19.774c-4.051,14.918-12.988,30.098-31.346,27.753 c-11.234-1.436-28.17-22.522-33.842-30.258c-11.445-15.613-23.221-32.89-37.602-45.892c-8.768-7.925-20.773-13.379-32.562-14.458 c-22.117-2.024-28.676,2.177-45.324,15.899c3.387,1.08,6.693,1.676,10.164,3.24c7.703,3.471,14.748,7.957,20.893,13.711 c6.439,6.031,9.328,9.848,9.557,18.484c0.152,5.735-4.566,10.333-8.891,14.469c-2.646,2.533-6.148,4.852-8.291,6.818 c-2.84,2.609-6.357,5.463-2.789,9.619c1.342,1.562,3.672,2.74,5.637,4.199c3.119,2.315,1.691,10.919-2.418,13.201 c-5.258,2.917-11.541,2.591-15.877-1.314c5.473-0.819,8.949-1.545,8.807-6.022c-0.082-2.595-3.381-4.751-6.619-6.227 c-7.809-3.56-13.707-3.035-21.479-8.627c-7.85-5.651-8.023-8.745-10.145-17.617c-3.785,0.396-7.27,0.483-12.331,2.159 c-5.061,1.675-10.654,5.663-15.249,6.65c-11.572,2.49-13.878,1.752-20.211,0.113c-11.15-2.886-25.668,2.055-40.09,6.668 c-2.398,0.767-12.097,0.026-18.626,2.317c-10.084,3.538-24.233,12.106-32.405,18.988c-12.382,10.429-28.654,41.64-37.848,77.464 c-0.966,10.89,2.131,18.227-4.729,23.546c-6.86,5.319-6.67,18.946-8.996,22.768c-2.326,3.821-5.019,2.132-10.026,7.499 c-5.007,5.367-7.556,4.47-7.43,14.618c4.315-2.837,10.606-6.135,16.13-6.334c4.892-0.177,4.944,6.264,17.5-6.149 c6.715-6.641,19.616-6.844,28.567-9.773c8.952-2.929,25.083-8.965,41.239-27.027c16.156-18.062,23.887-37.077,27.02-64.567 c0.499,4.874,1.365,10.371-0.722,23.816s-6.585,28.546,2.891,46.634l5.904,11.269c-3.515-4.797-10.381-12.622-12.448-18.198 l-4.768-12.863c-10.667,16.748-13.119,19.744-27.937,31.743c-0.59,7.444-0.735,15.208,1.698,22.331 c2.433,7.122-1.445,15.332,0.406,20.023s6.132,2.021,7.53,6.77s-0.73,14.138,1.438,18.767c2.168,4.629,7.487,1.82,10.065,3.315 c2.578,1.496,3.421,3.546,4.8,5.513c1.378,1.966-0.539,6.614,2.265,8.123c2.803,1.51,7.176,0.231,10.093,1.68 c2.917,1.449,3.36,4.932,2.661,8.053c-0.7,3.121-3.817,4.553-5.186,7.726c-1.368,3.174-1.215,5.383,0.429,8.297 c1.644,2.915,5.284,4.52,8.912,5.991c3.628,1.471,8.726,0.645,12.47,2.679c3.744,2.034,7.109,6.087,9.086,9.033 c1.977,2.945,2.526,5.023,2.425,8.12c-0.102,3.096-1.358,6.663-3.011,9.654s-5.3,6.631,0.394,12.343 c5.694,5.711,5.484,3.249,8.746,6.954c-0.355-6.409-3.003-11.63-1.067-16.455c1.937-4.825,7.752-5.664,10.817-7.834 c3.065-2.171,4.83-5.153,7.246-7.729c-0.035,3.315,0.32,6.879-0.057,9.375c-0.768,5.075-2.266,9.58,5.297,10.394 c3.407,0.366,6.642-1.843,10.227-3.169c-1.878,3.363-5.144,6.067-5.635,10.092c-0.491,4.023,0.099,8.443,2.885,12.436 c2.787,3.991,7.599,6.955,11.125,9.301c3.525,2.347,5.414,2.535,8.123,3.804c0.133,3.956-0.646,8.143-0.195,11.869 s1.625,7.024,3.779,10.104c2.156,3.081,5.613,4.848,8.869,7.126c-1.785-4.157-5.406-8.101-5.357-12.471 c0.049-4.369,1.359-7.466,5.621-11.343c4.262-3.878,14.24-7.241,18.945-11.011c4.705-3.771,6.223-6.081,7.912-9.742 s1.219-9.559,1.531-12.85c1.549,4.61,1.77,6.043,2.273,10.866c0.506,4.824-2.811,11.59-4.215,15.161 c5.82-2.811,9.514-7.304,11.379-11.695c1.248,0.74,0.619,2.769,1.078,6.679c2.074-2.064,4.432-3.652,6.52-5.6 c2.09-1.946,4.379-3.658,5.416-6.375c1.035-2.717,0.611-5.606-0.16-8.763s-4.299-6.818-6.199-10.271 c-1.898-3.452,0.336-6.841,0.207-11.001c-3.801-0.653-7.029-2.589-11.398-1.96c-4.371,0.628-9.377,5.533-13.844,5.59 s-6.975-4.128-10.637-5.278s-7.367-1.024-11.049-1.536c4.664-4.468,22.766-6.596,35.148-8.615 c10.895-1.777,21.707-2.804,32.746-2.959c4.93-0.07,11.266,1.558,14.689,0.574c3.426-0.982,2.695-3.315,3.711-5.858 c2.842-7.108,1.441-13.438-0.105-20.596c-9.91-1.162-20.236-2.584-30.221-1.817c-9.762,0.75-21.322,5.391-31.391,5.705 c-8.754,0.272-21.717-1.677-29.234-6.259c-9.186-5.599-16.293-17.624-18.816-21.485c-4.109-6.289-9.292-18.627-12.446-24.268 c-3.152-5.641-3.847-7.219-6.47-9.574c-2.623-2.354-6.216-2.536-9.323-3.805c3.582,0.366,7.493-0.768,10.747,1.098 c4.889,2.805,10.361,14.431,13.403,19.49c3.223-10.804,2.471-15.052,11.797-21.144c-7.516,8.424-7.703,14.805-9.535,24.723 c6.25,10.258,14.939,26.598,26.309,31.132c4.107,1.639,11.16,2.667,15.6,3.216c13.818,1.711,27.146-2.668,40.717-6.019 c9.92-2.45,19.986-1.463,32.051-0.754c4.096,0.24,13.754-2.224,15.754-6.367c1.08-2.235,1-4.921-0.551-7.303 c-1.553-2.382-5.689-3.534-7.906-5.678s-3.492-4.689-5.238-7.034c-9.215,1.768-16.795,2.447-23.635,2.633 c4.906-2.021,9.613-3.174,14.719-5.171s10.904-5.275,15.025-7.995c4.121-2.721,6.752-4.299,9.734-7.465 c2.98-3.168,6.803-6.431,9-10.303c2.199-3.872,2.539-8.203,2.662-12.995c0.123-4.791-0.084-11.514-1.932-15.374 c-1.846-3.859-5.406-5.03-8.266-5.943c-2.861-0.913-4.82,1.396-7.795,1.708c-2.977,0.312-5.758,2.188-10.062,0.164 s-9.406-6.144-13.758-12.259c-4.35-6.116-7.461-16.112-11.896-23.802c-7.645-13.256-17.172-25.639-26.283-37.922 c-0.75-3.029-1.877-7.215-2.252-11.324c-0.654-7.16-0.777-14.598,1.445-21.578c1.703-5.347,4.18-10.995,9.779-13.188 c2.24-0.878,5.074-1.226,7.076-0.484c2.004,0.741,3.969,3.002,3.182,5.614c-0.865,2.872-2.855,2.95-4.207,4.4 c-2.295,2.46-3.213,4.265-4.08,7.332c2.48-0.04,5.832-0.229,7.869,0.307c2.658,0.7,5.133,2.462,6.482,6.228 c-3.172-2.813-4.748-4.104-8.707-4.204c-1.814-0.045-4.018,0.604-6.025,0.906c-0.75,2.44-1.191,5.432-2.25,7.32 s-3.121,1.435-3.895,3.641C339.1,194.132,339.055,197.718,339.445,200.613z M367.16,197.306c1.215,0.479,1.678,0.584,3.217,1.755 s3.662,2.34,4.881,5.138c1.221,2.799,1.164,7.127,0.904,8.89c-1.07-0.314-2.529-0.102-3.639-1.051 c-1.107-0.949-1.768-3.098-3.188-4.018c-1.422-0.919-2.607-0.718-4.178-0.917c0.807,2.296,1.199,4.593,0.824,6.675 c-0.814,4.545-3.486,6.847-7.812,7.391c-1.889,0.237-4.889-0.385-6.533-0.684c0.762,1.702,2.053,3.193,2.816,4.895 c3.658-0.529,6.369-0.454,8.336-1.374s4.076-2.981,6.6-3.854c2.525-0.873,4.777-0.859,7.539-1.29 c-2.176,1.875-3.604,3.751-5.777,5.626c1.594,4.633,3.188,9.265,4.781,13.897c3.379,2.114,6.549,3.228,10.807,5.838 c4.26,2.611,9.367,7.281,14.914,9.828s8.85,3.933,14.646,5.026c5.795,1.093,10.406,5.787,16.109,6.55s16.355,0.917,20.75,0.488 c4.99-0.487,11.473-3.062,12.055-8.533c-4.184,1.032-10.574,0.106-13.801-7.767c-1.432-3.496-0.73-9.925-2.922-14.059 c-2.191-4.135-5.246-5.462-8.896-10.556s-9.621-13.129-12.973-19.954c-3.35-6.824-4.139-14.554-6.973-20.669 c-2.834-6.114-7.109-11.053-10.422-15.766c-7.234-10.3-13.068-17.339-24.986-22.535c-5.732-2.499-12.258-3.165-18.387-4.748 c-2.494,1.117-5.914,2.351-6.521,5.268c-0.607,2.917,0.559,7.225,2.676,9.415c3.543,3.661,8.793,7.618,10.857,13.437 c1.326,3.734,1.711,16.252,0.562,19.649C372.234,192.824,369.463,194.957,367.16,197.306z M368.314,226.935 c-1.107,0.955-1.951,1.936-3.732,2.729c-1.779,0.793-4.209,0.998-6.57,1.588c3.311,5.154,6.789,10.362,9.961,15.781 c3.174,5.418,5.924,11.351,8.953,17.025c-0.143-3.252,0.049-6.719-0.424-9.758c-0.473-3.038-1.85-5.697-3.215-10.258 C371.924,239.481,370.246,233.276,368.314,226.935z M279.229,113.611c-0.467,5.07,0.391,12.996,1.441,17.96 c1.258,5.942,2.469,9.023,7.291,12.603c8.83,6.555,14.467,5.45,21.26,9.251c3.232,1.809,7.328,4.841,8.523,8.046 c1.195,3.205-0.789,6.685-3.24,8.053c4.287,0.638,9.094-4.195,7.088-9.157c-0.988-2.442-5.691-3.53-7.133-5.994 c-1.439-2.463-1.436-4.999-0.758-7.501c1.225-4.51,10.148-8.608,13.301-12.173c4.852-5.486,6.715-10.075,3.967-17.14 c-3.859-9.925-18.768-17.889-27.691-21.784c-4.086-1.783-6.377-1.91-9.564-2.865c6.525,3.824,13.404,6.87,16.705,15.418 c2.756,7.139,0.369,9.829,0.461,16.045c0.043,2.882,3.838,4.323,5.523,6.144c1.467,1.583,1.348,2.758,0.176,4.943 c-0.129-1.971-0.971-3.442-2.484-4.513c-2.498-1.771-5.189-1.39-6.52-5.021c-2.02-5.52,1.986-10.748-2.518-16.946 c-3.369-4.637-7.85-9.827-13.895-9.963c-2.861-0.065-5.012,0.367-8.068,1.271l-4.074-4.903l-0.094-0.064 c-8.287-7.563-13.957-13.796-25.582-18.994c-11.625-5.197-17.354-5.984-30.683-5.688c-13.329,0.295-26.557,1.41-41.995,14.723 c-15.437,13.313-55.224,64.292-64.873,70.744c-9.648,6.452-11.785,8.638-23.841,8.641c-12.056,0.003-30.872-17.05-31.609-38.362 c-0.738-21.313-1.034-28.888,13.781-54.563C88.94,46.146,115.78,38.262,135.694,35.6c19.915-2.662,31.882,4.352,46.613,4.385 c14.73,0.034,29.288-2.509,33.581-14.224c-2.101,1.251-4.916,2.661-12.832,2.246c-7.916-0.415-18.892-9.58-31.239-15.721 c-12.347-6.14-26.087-6.859-43.71-7.192S88.494,6.108,66.708,17.869s-36.657,24.24-49.293,47.258 C4.779,88.146,2.891,106.94,4.928,134.811c2.037,27.871,10.633,48.599,27.184,68.998s33.092,30.38,62.918,34.091l6.279-27.696 l-11.209,16.086l0.277-17.891l-10.139,12.581l-4.447-17.062l-8.214,13.679l-4.08-19.05l-11.903,9.627l3.768-15.719l-15.75,1.743 l7.235-10.926l-14.361,0.175l8.356-14.587L28.1,166.837l10.16-13.267l-15.6-4.625l12.916-12.368l-12.753-10.393l9.975-7.758 l-9.328-12.412l9.95-11.583l-3.714-15.296l8.449-7.365l2.515-17.481l9.482-4.762l8.158-13.646l15.079-1.601l7.44-12.274 l15.145,0.771l14.312-7.779l14.843,3.457l16.86-5.092l12.487,2.926l16.296,2.395l15.733,12.58l-24.133-8.424l-12.14,5.821 l-10.035-6.125l-6.909,4.693l-12.225,1.224L110.1,27.745l-7.992,9.756l-16.291,0.168l-5.811,13.143L65.52,55.894l-1.355,15.107 l-10.388,8.138l3.461,14.216l-8.971,14.765l6.882,12.915l-6.773,11.82l9.011,5.88l-2.044,18.998l12.532,3.158l2.823,14.093 l13.656-1.419l8.484,9.656l10.486-10.239c19.116-9.532,26.988-14.864,41.886-30.977c16.959-18.343,26.679-35.302,49.269-47.861 c16.202-9.008,29.417-12.25,47.617-9.105c17.088,2.952,22.81,13.202,35.395,24c1.334-2.415,1.605-3.055,3.803-4.833 C280.604,107.342,279.508,110.595,279.229,113.611z\"/>\n</svg>\nAnd use it for your Vivus animation.\n. Thanks :)\nOne issue solved.\n. That's strange.. Do you have an example I could try? Can you reproduce the\nerror on another machine?\nThanks\nOn 1 Aug 2015 11:50 am, \"Sergey Melentyev\" notifications@github.com wrote:\n\nI am using alvarotrigo/fullPage.js with HTML5 video background (as a\ncover). I will continue developing this issue.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/59#issuecomment-126897692.\n. Any updates?\n. This sound serious :-S\nYes please @inergy if you could provide me steps to reproduce this, that would be perfect.\nThe inViewport is only based on ViewBox. But if you're using the version 0.2.1, there's a little bug with inViewport and dynamically loaded SVGs (from the attribute file). It's fixed on the latest version, maybe it's this?\n. @inergy thanks :)\n. I see your problem. Your SVGs are very big, and the way Vivus estimate if a SVG is visible is too rigid. Let me explain. Vivus consider an SVG in viewport when this one fits completely in the viewport. Not when it start to be visible. Also, the library only listen on scroll events to reevaluate if the element is in the viewport, not on DOM changes or window resize.\n\nThe thing is, in your case you know when to trigger the animation start. I would recommend you to use the option start: 'autostart', and the animation should be fine.\n. @sergeyMelentyev do you think your issue is related to a too large SVG or a lack of scroll event?\n. Hey @tomas \nSorry for the delay, but I don't think we should start to provide options for the size. When Vivus is init with an external SVG, this one should fit the container provided. That's the role of the container tag. \nSo, we should set these properties in all cases:\njs\nobjElm.setAttribute('width', '100%');\nobjElm.setAttribute('height', '100%');\nOtherwise, I'm scared we start to mess up the CSS of our users. The container follow rules from CSS, the SVG fit the container.\nWhat do you think?\n. I think it's a bad practice for few reasons (sorry for the Grumpy Cat ticket):\n- More this project grows, more the list of options grows and start to get confusing. Many of them are used for a specific case or depending on the value of another option. In this case, width and height are usefull only if the SVG is loqded dynamically. This is why I try to avoid the easy solution of \"let's add a new option to solve a problem\".\n- Set a size value, even in percentage, is not a good pratice and/or flexible enough for responsive design.\n. This is why I said we should add this for all cases:\njs\nobjElm.setAttribute('width', '100%');\nobjElm.setAttribute('height', '100%');\nBecause for now, the SVG is set at the original size.\n. Actually, I realised it cause some issues depending on the SVG. I need to investigate a bit.\n. Grumpy Cat mode again\nI'll implement this in the next version:\njs\nobjElm.setAttribute('width', '100%');\nobjElm.setAttribute('height', '100%');\nI'm just scared this will create some issue for people who have already implemented the 0.2.x\nBut I'll put a note in the changelog.\nAnd why I won't implement the attr option is simple. For now we only see the attributes, ok. Then at some point other devs will ask to apply style rules on the element, then to add listeners....\nSo, in the next version I explain how to access the element in the onReady callback and apply any change on it.\n. I'm sorry I don't really get what you want to do. You want to fill path tags with the color of their border? If so, this should be doable in the Vivus callback.\n. Any updates?\n. Hi there,\nAbout the first point, Vivus cannot manipulate <font> elements. The text must be transformed into <path> elements in Illustrator.\nAnd about the second point, the error must be due to the use of the protocol file://. This is a normal security check from Chrome, otherwise it could allow any local script to load and read any local content. This is why the file option can only be used behind a HTTP server. If you're using a Mac, open the terminal, move to your project folder (where you have the HTML and JS files), then run python -m SimpleHTTPServer. This command will create a simple http server on http://localhost:8000/\nSo if you work on the file hello.html, you just need to go to http://localhost:8000/hello.html\nTell me how it goes if you need more help.\nOtherwise, it would be helpful to have your code on here (or JSfiddle, CodePen...)\n. Hi there,\nYes, you just need to provide the attribute file with the file link as value. Be careful, there's some restrictions, the file must be on the same domain as the page and cannot be used on a local file (: protocol file:///). It's not my lazyness, it's due to security reasons from browsers.\nYour HTML\nhtml\n<div id=\"my-container\"></div>\nYour script\njs\nnew Vivus('my-container', {\n  type: 'delayed',\n  duration: 200,\n  animTimingFunction: Vivus.EASE,\n  file: '/link/to/my.svg'\n});\n. Oh sorry, my bad.\nIt's possible but not from the constructor. You must use a listener for that.\n``` js\nvar myAnimation = new Vivus('my-container', {\n  type: 'delayed',\n  duration: 200,\n  animTimingFunction: Vivus.EASE,\n  file: '/link/to/my.svg'\n});\nmyAnimation.el.addEventListener('click', function () {\n    document.location = '//github.com';\n});\n```\nIt's not really cool because we loose a bit of accessibility but it works. \nOtherwise I would recommend you to wrap the SVG container into a <a> tag.\nhtml\n<a href=\"//github.com\">\n    <div id=\"my-container\"></div>\n</a>\n. You made a mistake on the option 1. You set the listener on myAnimation object instead of svg1 which is your Vivus instance.\n. Any luck?\n. Oh.. I realised my mistake. You will need to do it when the SVG is loaded:\n``` js\nvar svg1 = new Vivus('svg1', {\n  type: 'delayed',\n  delay: 100,\n  duration: 200,\n  start: 'inViewport',\n  animTimingFunction: Vivus.LINEAR,\n  file: '/assets/enter.svg',\n  onReady: function (mySvg) {\n    mySvg.el.addEventListener('click', function () {\n      document.location = '//github.com';\n    });\n  }\n});\n```\n. It's a syntax error. You forgot a comma after the filename.\nOn 28 Aug 2015 3:11 am, \"termoplus\" notifications@github.com wrote:\n\nit is not working any more :)\nhttp://020018.businesscatalyst.com/index.html\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/63#issuecomment-135605192.\n. In the onReady callback, just add this line:\n\njs\nmySvg.el.style.cursor = 'pointer';\nthen your code should look like this:\njs\nvar svg1 = new Vivus('svg1', {\n  type: 'delayed',\n  delay: 100,\n  duration: 200,\n  start: 'inViewport',\n  animTimingFunction: Vivus.LINEAR,\n  file: '/assets/enter.svg',\n  onReady: function (mySvg) {\n    mySvg.el.style.cursor = 'pointer';\n    mySvg.el.addEventListener('click', function () {\n      document.location = '//github.com';\n    });\n  }\n});\nWhen I mention loosing accessibility, I'm talking about respecting HTML standards instead of mimic the natural behavior in JavaScript. For example, a user cannot make a right click on your SVG, then choose Open link in a new page. But you don't really have the choice. Don't worry about it.\n. Any updates?\n. By default, the animations start while they are completely in the viewport. I presume your are at the top of your page. Set the option start: 'manual' then trigger play when you want.\nCan you show me an example please?\n. About the callback:\n\n``` js\n// Inline SVG\nnew Vivus('my-svg-id', {type: 'delayed', duration: 200}, myCallback);\n// Dynamic load\nnew Vivus('my-div-id', {type: 'delayed', duration: 200, file: 'link/to/my.svg'}, myCallback);\n```\nThe Vivus constructor asks for 3 parameters:\n- ID (or object) of DOM element to interact with.It can be an inline SVG or a wrapper element to append an object tag from the option file\n- Option object (described in the following)\n- _Callback to call at the end of the animation (optional)_\n\nfrom the readme.md file\nAbout the method play:\n\n\nplay(speed) Plays the animation with the speed given in parameter. This value can be negative to go backward, between 0 and 1 to go slowly, or superior to 1 to go fast. By default the value is 1.\n\n\nfrom the readme.md file\nBtw, at no point Vivus use time for duration, but frames. Because browser can render at different speed depending on the heaviness of the page and performances of the machine. So to ensure a smooth animation Vivus use keyframes.\n. The callback is always triggered at the end of the animation. There's no\ncallback for when the animation start.\nOn 28 Aug 2015 8:03 am, \"Szymon Dziewo\u0144ski\" notifications@github.com\nwrote:\n\nyeah but callback is working only with first animation it does not work\nwhen trigger play. Callback starts with staring animation than thats why I\nasked, I saw this in docs and it doesnt work with trigger .play()\nOk thanks for explenation of play(speed).\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/65#issuecomment-135657264.\n. I'm sorry but on my machine, the callback is triggered at the end of the animation.\n\n\n\n\n. The behavior is normal. You just trigger play on point1 when the previous section begin to appear. So the animation start before you can see it, and the callback is executed before you can see your point.\n\n\n. no worries :-)\n. Hi there,\nFirst, thanks for these kind words :) It's sweet to start an issue with this message.\nAbout your problem. I kept thinking about a hack since this morning and there's no magic solution. I have different ones:\n1. Find a way on your SVG editor to ask him to export the path points in the reverse order. Like <path d=\"4-3-2-1\"/> to <path d=\"1-2-3-4\"/>. But I have no idea how to do that, even manually :-/ (I tried but I gave up).\n2. Have a custom version of Vivus which allow you to go use negative values in animation timing function.\nIn vivus.js line 635. Change\njs\nprogress = this.pathTimingFunction(Math.max(0, Math.min(1, progress)));\nto \nprogress = this.pathTimingFunction(progress);\nThen you will be able to use function (x) {return -x} as animTimingFunction.\nCheck the result on http://maxwellito.github.io/drafts/vivus-issue-66/ (and the code)\nBottom note\nI find it curious that your SVG editor exported your path with the points defined in the opposite order of your drawing. Which software do you use?\n. Seems legit :)\nThanks for these two PR, that's pretty cool to have contributors who come and fix the problem than complaining about it.\nI was just scared about the support for .trim(), but it seems as good as SVG 1.1.\nWell played sir!\n. Thanks!\nI'm ashamed, this is really bad.\nThanks for mentioning it and make a PR :+1: \nThe tests might fail but I'll update them today.\nWell done for your job!\n. Hi there,\nI'm sorry, for now I don't have a solution to your issue. This has been mentioned in a previous issue.\nI think I will implement a tag to disable animation on path elements with the tag vivus-ignore.\nIf you want to implement it to your version, just change this.el.querySelectorAll('path'); (line 504 in the unminified version) to this.el.querySelectorAll('path:not([vivus-ignore])');.\nThen you will be able to disable the paths you want.\n. Hi Monkeehub,\nThanks for these kind words and pull request.\nThe patch for the IE11 is going to be reapplied for the next version (this weekend, it's on dev branch for now). Because it has been done before, but badly (my bad :-S).\nAbout your pull request, I have to admit, I don't really how you did this. I looks like you pushed a patch, I don't even know this is possible. The change is not even linked to a file.\nBut no worries, I understood what you're trying to do and I want thank you coming and make a pull request to contribute. That's really cool :)\nIf it's your first contribution on GitHub let me give you some explanations:\n1. Fork the repo, via the button fork.\n2. Clone your fork on your machine.\n3. On your clone, create a new branch from master with the name of your choice (like IE11-fix) and switch to it.\n4. Do your changes. \n5. Commit your changes. Try to respect the conventions for your commit message.\n6. Push on your fork under the same branch.\n7. Come back on GitHub.com and on your fork you must see a banner explaining asking you to make a pull request from your new branch.\nHere the code for the current situation\n``` bash\nClone your fork\ngit clone git@github.com:monkeehub/vivus.git\nGo into the repository\ncd vivus\nCreate a new branch and switch to it\ngit checkout -b IE11-fix\nDo your changes with your favorite editor\nCommit your changes\ngit commit -am \"Fix IE detection for version 11\"\nPush the changes to your fork\ngit push origin IE11-fix\nNow you can go on https://github.com/monkeehub/vivus/tree/IE11-fix\n```\nI recommend you to read ProGit, it's free and awesome.\nFor now I just want to thank you again, it's great to see somebody who contribute even if he's not sure about how to do it, well done! Usually, people just open an issue and complain :)\nIf you want some help or have questions, please contact me on Gitter\n. Hi,\nIf you're using inline SVG (:where the entire SVG is defined in your HTML) you can use the trick mentioned in the hacks.md\n. Well, except here.\nIn this case you can keep the fill property in your SVG. The little hacks consist to make it transparent from the start, then make it appear once the animation over.\n. Any luck?\nIf you want some help, just create a jsfiddle and post the link :)\n. Ok, if you need any help join the conversation on Gitter :)\n. Hi there,\nI'm sorry this won't be possible because Vivus is using requestAnimationFrame which allow smooth animation and avoid frame drop. So depending on the client machine it can be very fast of very slow. There's not way to calculate it. You can keep in mind an average score of 30 frames per second and adapt your instance with it.\nSorry about that.\n. Hi there,\nI'm really sorry for the late reply. I've been AFK for few days.\nFirst, thank you for your PR, I really appreciate.\nUnfortunately, I have to ask you some help, because I don't really get what your code is supposed to do. Could you provide me an example please? Thanks :)\n. Sorry for the delay, I'm really busy recently and I also was on holidays. Away from keyboards.\nWhich is a shame when I have such nice contributors having amazing ideas.\nThanks a lot for the demo. And everything make sense now. But in the end I'm even wondering why putting this as an option? Because I don't think you break any of the current code (I'll do some tests) and this is the behavior people wants. This should be the default behavior, don't you think?\nI'll give a closer look to this. This is amazing.\nThanks a lot :)\n. Hey @Nerdissimo \nI'm still playing to add this feature but it break with some old cases. It's a bit silly because it's rare cases that aren't mentioned in the doc: use Vivus constructor with an object element. So I might refactor and remove some of these.\nBut your trick is so amazing. I didn't know it was possible, I thought it was impossible to move content between the main document and shadow DOM. But what I really love it's to can use the CSS to apply style on SVGs, it was like xmas to me\n\nSo, I'm working on the dev branch. When I have something I'll post it here :)\nThanks again!\n. Hi David,\nCan you tell more about this preference for object on old browsers? I always stopped at IE9 because caniuse.com mention 8 and under as incompatible with SVG 1.1. I also rejected an issue yesterday because it was concerning IE8 :-$ I try to not go deep into compatibility for old browsers. Especially now Microsoft stopped supporting them. It's funny, every time I talk about old browsers, I only think about Internet Explorer. Maybe you had other ones in mind?\nMaybe I should try properly my new code on old browser. It would fallback automatically by displaying the SVG without animation it because it cannot access the SVG methods to get path lengths. That's the best it can happen, I think.\nSorry, I realised over the commits that the list of options keeps growing. So if I can avoid adding one for supporting old browser force to use new technologies, I try to.\nI hope I don't look like a grumpy cat who say no to every requests ;)\n. Hallo!\nTo make it short, it should be merged to master soon. I'm finishing a manual test page for visual glitches and behavior. Should be pushed soon. It was not that complex, but I had to keep a retro compatibility. Maybe by tonight I'll post it on dev and ask for quick feedback before I merge and push to NPM.\nThanks again :)\nMax\n. But here is the v0.3.0 ready to be released. It's on the dev branch. I added a manual test page to check the retro-compatibility in the future. I don't know if somebody would like to test it quickly, but feedback is always welcome. Otherwise it should be published in the next days. :)\n. Ok, I'm sad to not merge your code, but your contribution made (to me) an important improvement in the library. You already mention your name in the Thanks section. I thinks it's important to mention the devs who made an important contribution. I feel like a twat to not have done that earlier. \nv0.3.0 is alive. I hope I don't break anything :-S\nThanks again for your PR. Don't hesitate to come with new improvements!\n. Hi there,\nYes, the method .play() doesn't accept a second parameter as callback. What you can do, is before to play, you can set the property .callback on your Vivus object.\njs\nlines.callback = function () {...}\nlines.play(1);\nPost your code on JSfiddle (or other) if you need some help.\n. Nope, there's no way to force default options. The only thing you can do is to define your default options at the start in an object, then merge it. Example with jQuery.\n``` js\nvar defaultOptions = {\n  duration: 200,\n  type: 'oneByOne'\n};\nnew Vivus(\n  'myTag', \n  $.extend({}, defaultOptions, {type: 'delayed'})\n);\n```\nIt's not very handy, I admit it. It's something I could think of for the future versions.\n. The speed should be the same. Create a JSfiddle to let me check this please.\nFor this problem you can use the method getStatus which I forgot to document :-S\nThis method return : start, progress or end\njs\nvar myVivus = new Vivus('myTag', {}, function (myVivus) {\n  if (myVivus.getStatus() === 'start')\n    myVivus.play(1);\n});\nmyVivus.finish().play(-1);\n. Hi there,\nSo, on the demo page, the trick I use to inherit the same color as the color test is due to the variable currentColor (see CSS Tricks for more info).\nIn CSS, if you use the value currentColor (for background-color or border-color) it will use the text color of the current context. That's what I'm using for the stroke property on my SVG (in the demo page the SVG are inline, so I can CSS to style them).\nFor example:\nhtml\n<div class=\"head\">\n  <svg>\n    <path d=\"....\"/>\n  </svg>\n</div>\ncss\n.head {\n  color: red;\n}\npath {\n  stroke: currentColor;\n}\nIn this example, all path element will get the color of their context. So the only path element would be red.\n. Hi there,\nSorry for the delay. It took me a bit of time to remember what this piece of code what doing :-D\nThe Pathformer class is here to transform shape tags (like circle, rect, line...) to path tags. These shape tags got attributes to define their points (like x1, x2, c....). But if these attributes are using percentage instead of pixel values, it's impossible to transform the the shape tag to a path tag (SVG problem).\n\n\"But it's like that, and that's the way it is!\"\n\nRUN DMC\nSo when the Pathformer transform a shape tag, it will clone all attributes which have no link with points (these can be custom attributes) and for the others it will check they doesn't contain percentage values (or will trigger an error).\nExample\nPathformer would transform this shape tag \nhtml\n<line x1=\"68\" y1=\"68\" x2=\"131\" y2=\"131\" id=\"myLine\"></line>\ninto \nhtml\n<path d=\"M68,68L131,131\" id=\"myLine\"></path>\n. Hi Chris,\nFor now, Vivus can only accept element. So you have to call the constructor\nfor each SVG you want to manipulate. The reason is because a Vivus instance\nallow you to control one animation on one SVG.\nSo you will have to use a forEach after your getElementsByClassName.\nOn 18 Dec 2015 5:21 am, \"Chris\" notifications@github.com wrote:\n\nAny examples of this? I read that you can target an ID or object but don't\nquite understand how to do that\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/78.\n. Back on my computer, I can write a snippet :)\n\n``` js\njQuery(function () {\n  // Define your callback\n  var myCallback = function () {};\n// Get your HTMLCollection of SVG to animate\n  var myElements = document.getElementsByClassName(\"icon-vivus\");\n// Go across them to create a Vivus instance\n  // with each of them\n  for (var i = myElement.length - 1; i >= 0; i--) {\n    new Vivus(myElements[i], {duration: 50, type: 'async' }, myCallback);\n  }\n});\n```\n. Oupsiee.. Yep, sorry for the typo.\nAnd thanks for your kind words :)\n. Sorry for the delay, xmas and stuff...\nWell played for finding a solution yourself. I'm just scared about optimization if a second click is triggered. Because it will recreate objects and reload SVG... it's consuming a lot. What I recommend you is to create objects first, then play it when needed.\n``` js\njQuery(document).ready(function() {\n  var i,\n    myVivusItems = [],\n    myElementsVivusClick = document.getElementsByClassName(\"icon-vivus-click\");\n// Go across them to create a Vivus instance\n  // with each of them\n  for (i = myElementsVivusClick.length - 1; i >= 0; i--) {\n    myVivusItems.push(new Vivus(myElementsVivusClick[i], {duration: 50, type: 'async', start: 'manual'}));\n  }\n// vivus svg animations on click\n  document.getElementById(\"icon-collapse\").addEventListener('click', function () {\n    for (i = myVivusItems.length - 1; i >= 0; i--) {\n      myVivusItems[i].reset().play();\n    }\n  });\n});\n```\nI hope it's clear, I'm bad to explain things sometimes. :)\n. It's not a bad thing at all, you're right :)\nMaybe the only thing you could do is to save document.getElementById(\"icon-collapse\") result for check and use. The method getElementById might be quicker than jQuery.\n``` js\n// vivus svg animations for icons on certain clicks\njQuery(document).ready(function() {\n  var iconCollapseDom = document.getElementById(\"icon-collapse\");\n// check if there is icon-collapse ID\n  if (iconCollapseDom) {\n    var i,\n      myVivusItems = [],\n      myElementsVivusClick = document.getElementsByClassName(\"icon-vivus-click\");\n// Go across them to create a Vivus instance\n// with each of them\nfor (i = myElementsVivusClick.length - 1; i >= 0; i--) {\n  myVivusItems.push(new Vivus(myElementsVivusClick[i], {duration: 50, type: 'async', start: 'manual'}));\n}\n\n// vivus svg animations on click\niconCollapseDom.addEventListener('click', function () {\n  for (i = myVivusItems.length - 1; i >= 0; i--) {\n    myVivusItems[i].reset().play();\n  }\n});\n\n}\n});\n``\n. Thanks about the warning. I guess Chrome has changed some parts of SVG treatment, which give me headaches aboutdashOffset. This is why thedashGapis for in the Vivus options. I guess I'll have to find out which correct value to use. I keep you posted :)\nThanks\n. Ok, I changed the values Vivus set onstrokeDashoffsetandstrokeDasharray` to add some gap before and after. \nDemo case available on http://maxwellito.github.io/drafts/vivus-issue-79/\nChrome, Firefox and Safari seems to display it without glitches. I'll try on other browsers during the week (previous Chrome and lovelay Internet Explorers).\nHere is a diff for interested people.\n``` diff\n@@ -446,7 +446,7 @@ Vivus.prototype.setOptions = function (options) {\n   this.isIE        = (window.navigator.userAgent.indexOf('MSIE') !== -1 || window.navigator.userAgent.indexOf('Trident/') !== -1 || window.navigator.userAgent.indexOf('Edge/') !== -1 );\n   this.duration    = parsePositiveInt(options.duration, 120);\n   this.delay       = parsePositiveInt(options.delay, null);\n-  this.dashGap     = parsePositiveInt(options.dashGap, 2);\n+  this.dashGap     = parsePositiveInt(options.dashGap, 1);\n   this.forceRender = options.hasOwnProperty('forceRender') ? !!options.forceRender : this.isIE;\n   this.selfDestroy = !!options.selfDestroy;\n   this.onReady     = options.onReady;\n@@ -525,13 +525,10 @@ Vivus.prototype.mapping = function () {\n     }\n     totalLength += pathObj.length;\n     this.map.push(pathObj);\n-    path.style.strokeDasharray  = pathObj.length + ' ' + (pathObj.length + this.dashGap);\n-    path.style.strokeDashoffset = pathObj.length;\n+    path.style.strokeDasharray  = pathObj.length + ' ' + (pathObj.length + this.dashGap * 2);\n+    path.style.strokeDashoffset = pathObj.length + this.dashGap;\n+    pathObj.length += this.dashGap;\n\n// Fix IE glitch\nif (this.isIE) {\npathObj.length += this.dashGap;\n}\n     this.renderPath(i);\n   }\n\n@@ -640,7 +637,7 @@ Vivus.prototype.trace = function () {\n     progress = this.pathTimingFunction(Math.max(0, Math.min(1, progress)));\n     if (path.progress !== progress) {\n       path.progress = progress;\n-      path.el.style.strokeDashoffset = Math.floor(path.length * (1 - progress));\n+      path.el.style.strokeDashoffset = path.length * (1 - progress);\n``\n. Hi @PeterWooster \nThanks for the feedback and nice catch!\nI realised the issue was coming from a little mistake in the algorithm. I was calculating the total length of all path but without thedashGap`. My draft page still works, and your demo is now working :)\nHere is the diff https://github.com/maxwellito/drafts/commit/49435e6997f26aff354f14851297d2b575d751ee\n. Sorry for the long delay :-S\nBut here is the v0.3.0 ready to be released. It's on the dev branch. I added a manual test page to check this kind of glitches in the future. I don't know if somebody would like to test it quickly, but feedback is always welcome. Otherwise it should be published in the next days.\n. Hi,\nFirst thanks for these kind words :)\nAbout the problem you're mentioning, I think I encounter this problem in the path on a weird SVG, but not sure. Can you provide me an example please? I think it would be more helpful :)\nThanks\n. Hi Don,\nThanks for this detailed response. It's rich and documented :)\nAbout three_lines.html & propeller.html:\nI was talking about this problem, I had the same. Thanks for your example because I finally understood it. On my use case the SVG was too complex so I didn't dive into it. So from a simple path, you can have more than one line delimited by M. Make sense. I can get the list of each path segment from the property pathSegList. Unfortunately, I cannot get their length. But even if I could get it, Vivus couldn't animate them independently. This is due to the SVG implementation, try to play with the strokeDasharray and strokeDashoffset and you will see.\nBut there is a card to play :) Part of the Pathbuilder would be to parse path tags to split the path segments into independent path tags. But it will cause issues if the tag got an ID or use 'scenario' attributes, because it will duplicate it. It's tricky.\nFor now, you better construct all path dependently. Sorry :(\nBtw, can I ask you which vector graphics editor you're using? I never managed to get many lines in the same path tag with Illustrator.\n. Hi Don,\nSorry to cannot help you more. But if you want to go for hacking the Pathformer I'll be happy to help :)\nThanks for sharing the jxnblk's tutorial, that's very interesting.\nAbout Sketch, you're not the first to tell me the benefits of it, I really need to give a try. But Illustrator is my third hand.\nMax\n. Hi there,\nWell, I never considered to work on IE8 because SVG is not supported and this browser is no longer supported by Microsoft. Plus, I don't think I can use required methods like getTotalLength() on path elements. So I prefer to focus on bugs and new features.\nSorry\n. Hallo,\nI'm sorry, I don't know any :-$ Not really a massive user of React and I haven't check what the community has built from Vivus with React.\nWhat kind of usage you expect? Maybe I can help\n. Hallo :)\nWell, if by infinite you mean: draw, undraw, draw, undraw, draw.... yeah it is.\nIn the callback of animation end, just check for the status use play() with a good value.\njs\nnew Vivus('hi-there', {}, function (myVivus) {\n  myVivus.play(myVivus.getStatus() === 'end' ? -1 : 1);\n})\nYou can run this code on the demo page.\nIs it what you're looking for?\n. Hi @sqrtroot \nThanks for these kind words. \nUnfortunately, it's not possible. I've been thinking about it when I started the project, but never did it. It could be very useful for scenario and scenario-sync. I'll try to implement in in the next versions.\nSorry about that.\nMax\n. Hallo!!\nThanks for these kind words, even if I don't understand this general keen interest into this little library.\nAnyway.\nI'm sorry to tell that Vivus cannot do this for now. And it make me feel sad to that this library cannot do what people would like to. So I tried to find out a hacky way which could be easy to use and it was pretty easy actually :)\nSo here is the trick.\nFor now, the more appropriate options are using type oneByOne and start manual. Which is what you will have to use to create your Vivus object.\njs\nvar myVivus = new Vivus('yourSvgId', {\n  type: 'oneByOne',\n  start: 'manual'\n});\nThen you gonna add this little extension for Vivus. Do it only once! I mean there will be no issues or conflicts, but only a useless duplication of code.\n``` js\nVivus.prototype.next = function () {\n  if (this.currentStep === undefined) {\n    this.currentStep = 0;\n  }\n  else if (this.currentStep + 1 === this.map.length) {\n    this.currentStep = -1;\n    this.play(-1);\n    return;\n  }\n  else {\n    this.currentStep += 1;\n  }\nvar currentPath = this.map[this.currentStep];\n  this.frameLength = currentPath.startAt + currentPath.duration;\n  this.play();\n}\n```\nThen now, you can directly call the method next() on your object. This will draw the next path.\nI made it in a way that at the end it rewind the animation to start, then the method can be called again.\njs\n$.get('/something.json', function (data) {\n  myVivus.next();\n});\nI hope this trick will work for you. \nAsk if you need! :)\n. Dammit! The 'previous' method will ask a bigger refactor. It won't be as\neasy as 'next'. You will have to override some core methods. I should have\nsome free time this weekend to think about it :)\nOn 4 Feb 2016 10:20 am, \"albaluca87\" notifications@github.com wrote:\n\nNice trick, It's just what i needed :)\nWhat about two methods, next() and previous()?\nnext() to draw forward and previous() to rewind the last path.\nI'm trying to achieve the previous() call myself but without success, any\ntips?\nThanks\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/85#issuecomment-179752030.\n. Ok it was a massive rewrite, and it cannot be done via only method override (because it use functions from the scope where Vivus is created).\nCheck at http://maxwellito.github.io/drafts/vivus-issue-85/\n\n``` js\nVivus.prototype.next = function () {\n  if (this.currentStep === undefined) {\n    this.currentStep = 0;\n  }\n  if (this.currentStep === this.map.length) {\n    return;\n  }\n  this.currentStep += 1;\n  this.setMilestoneAndGo();\n};\nVivus.prototype.previous = function () {\n  if (!this.currentStep) {\n    return;\n  }\nthis.currentStep -= 1;\n  this.setMilestoneAndGo();\n};\nVivus.prototype.setMilestoneAndGo = function () {\n  if (this.currentStep) {\n    var currentPath = this.map[this.currentStep - 1];\n    this.milestone = currentPath.startAt + currentPath.duration;  \n  }\n  else {\n    this.milestone = 0;\n  }\nthis.play((this.milestone - this.currentFrame > 0) ? 1 : -1);\n};\nVivus.prototype.drawer = function () {\n  var self = this;\nif (Math.abs(this.milestone - this.currentFrame) <= Math.abs(this.speed)) {\n    this.currentFrame = this.milestone;\n    this.handle = null;\n    if (this.currentFrame >= this.frameLength) {\n      this.callback(this);\n    }\n  }\n  else {\n    this.currentFrame += this.speed;\n    this.handle = requestAnimFrame(function () {\n      self.drawer();\n    });\n  }\n  this.trace();\n};\n``\n. Hi there,\nSorry for the delay, but thanks for your PR!\nI tried to evaluate to pro and cons about adding reverse animation functions. I can understand for some use-cases but it's really rare. Plus it makes the code less DRY. To be honest, I would prefer a section in thehacks.mdand show how to do it with basic methods andfunction (x) {return 1 - Vivus.EASE(x);}` callback.\nIf you fancy adding it, I can help you with it :)\nI'm sorry to close your PR, but thanks for your work (you also thought about updating the tests).\n. Hallo!\nYou mark a good point about the callback.\nYou're not the first one to mention it and it makes completely sense in terms of what developers needs. However, I was thinking to adapt the works of the #85 to the core library then add the callback functionality. Which would might make the current callback deprecated. But this would be part of a big rewriting of the API. Do you want to be involved? :)\nBut your PR looks good. Let me think about if the new API I plan to implement would affect your work, but this should work :)\n. The idea is very interesting, however I would like to find a way to integrate it without disrupting the API. I start to have a lot of different points/features to integrate, but it will be for the v1.x. Otherwise all of these will be breaking changes...  I need to put my head back into the project :-/\n. Ok, after @yellow1912 message, I gave a second look to this PR. Your implementation of the callback works like a charm and respect the current API, which is super cool. Plus you wrote tests \ud83d\udc4d \nHowever I have a silly case \n``` js\n// Play the animation with a callback\nmyVivus.play(myCallback);\n// Then later but before the end of the animation\nmyVivus.play(-1);\n```\nThis will execute myCallback (at the end of -1 play) even if the first animation didn't hit the end. I'm not sure this the expected behavior. If so, you should set this.instance_callback = null; straight at the start of the play method.\nBtw, can you remove the dist/ files from the PR to avoid merge conflicts? I will compile on my machine and push to NPM.\nSorry for the delay and thanks for your PR :)\n. Hi there,\nThanks for your PR. You made me doubt for a minute, but no. The current code is correct, some explanations are missing tho.\nTo try the manual tests I included an NPM command to run a simple server npm run serve. Then go to http://localhost:8844/test/manual/.\n. Hi there,\nI'm sorry I keep trying to reproduce your bug but without success. The SVG behave the same in Chrome and Firefox. I'm probably missing something.\nCan you please provide me examples (from jsFiddle, or any other platform)? Thanks :)\n. Hello again,\nI'm really sorry but I still don't see the difference between Chrome and Firefox rendering. And also the link with Vivus.\n\nFirefox v44.0.2 on Mac OS X Yosemite\n\nChrome v48.0.2564.116 (64-bit) on Mac OS X Yosemite\n. Ok, I guessed the problem you're talking about. There's always a gap at the end of animations, which looks like a glitch because the stroke is never complete. The only solution is to add the option selfDestroy: true which remove every useless SVG attributes when the animation is over. But make the Vivus instance dead, because you can no longer rewind, play, reset...\nPlease check https://github.com/maxwellito/vivus#option-list\n. You're welcome. I guess you also spent a lot of time to write me your answers :)\n. Hallo,\n1. I think your .reset() is triggering an error because you;re calling it when the SVG in loaded and mapped by Vivus. You have to wait the call of onReady callback to start performing actions to your Vivus instance.\n2. I'm afraid there's no trick about the viewport. Maybe the offset can work but I haven't tested. What I would recommend you is to set the start on manual then make your own listener to trigger the call to play().\njs\nvar tick1 = new Vivus('tick1', {\n  file: 'img/tick.svg',\n  start: 'manual',\n  onReady: function (vivusObj) {\n    var listener = function () {\n      // test if vivusObj.el is in your viewport conditions\n      // ...if so vivusObj.play();\n      // ...and remove the listener window.removeEventListener('scroll', listener);\n    };\n    window.addEventListener('scroll', listener);\n  }\n});\nI hope this help\n. Here is your problem : vivusObj.play(40);\nYou set the speed at 40, while the normal one is 1.\nJust call play without parameters : vivusObj.play();\nShould work :)\n. Brilliant! :)\n. Hello,\nSorry for the late reply.\nI'm afraid, the current version of Vivus cannot give you this freedom. However, I recommend you to have a look to the issue 85. By using this code, you will be able to manipulate the property milestone of your Vivus instance. This property represent the frame to reach and stop at.\n``` js\nvar newVivusAnim = new Vivus('someDiv', {\n    duration: 200,\n    type: 'manual'\n});\nnewVivusAnim.milestone = 100;\nnewVivusAnim.play();\n// This 'should' play your animation to the half (because 200/100 = .5).\n``\n. Hello,\nSimply use the method.getTotalLength()` on your Path element. It should return the length.\njs\n// Like that\nvar length = document.getElementById('the-id-of-your-path').getTotalLength();\n. Hello,\nSorry for the delay.\nI just had a look to your PR. I'm a bit skeptical about this CDN. \n- I currently cannot access the website (which is a bit dangerous for dev using your CDN for production). I hope it's on my end.\n- Not sure your link is the link to the script itself, but the vivus page on CDNJS\nDoes your CDN get the latest version automatically?\nThanks,\nMax\n. Ok, sorry last it was down. I couldn't access the page (and homepage).\nWell, it works for me, as long as I don't need to update it :)\n. Nice catch! Thanks for the ticket, I'm removing it now.\n. Hello!\nWell if you could make a jsfiddle of your code, or giving more info that\ncould help :)\nEven posting your SVG just to have a look.\nDo you have an error in your browser console (:dev tools)?\nThanks\n2016-04-04 4:52 GMT+01:00 Ionic\u0103 Biz\u0103u notifications@github.com:\n\nThis is a great library! [image: :sparkles:]\nHowever, I have trouble animating an SVG image exported by InkScape. It is\nloaded successfully on the page, but there is no animation. I'm not sure\nwhat I'm doing wrong.\nIt does work using the demo SVG, tho... Where to start debugging this?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/96\n. Your SVG path were filled, and not based on strokes. Which is on what Vivus\nanimate SVGs.\nI made a CodePen with the updated code, and added a hacks to fill the paths\nat the end (from hacks.md).\nhttp://codepen.io/maxwellito/pen/eZeYgw\n\n2016-04-04 10:21 GMT+01:00 Ionic\u0103 Biz\u0103u notifications@github.com:\n\n@maxwellito https://github.com/maxwellito I created a test svg file and\ntried it here http://jsfiddle.net/dybaaqf8/. You can see that the\nanimation is not there... I have no idea why.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/96#issuecomment-205208379\n. Hi there,\nI'm afraid this is not possible except if you hack the library. I think\nthis issue has already been posted.\n. Hallo,\n\nI'm not sure to get what you mean. Do you want a different\npathTimingFunction for every path?\n. I'm afraid this is not possible without hacking the library. I can help you\nwith it but only in a week. I'm currently away from any computers, and\ncoding on a phone is a joke.\n. If using attribute like pathTimingFunction=\"ease-in\" is not a problem for you, it sounds doable. Do you want to restrict this to Vivus animation function, or custom ones too?\n. Ok, sorry for the delay but here the hack. The diff is based on src/vivus.js (you will have to compile again after)\n``` diff\n263c263\n<   var i, paths, path, pAttrs, pathObj, totalLength, lengthMeter, timePoint;\n\n\nvar i, animFn, paths, path, pAttrs, pathObj, totalLength, lengthMeter, timePoint;\n271a272,273\n    animFn = path.getAttribute('timing-function');\n    animFn = Vivus[animFn] || this.pathTimingFunction;\n274c276,277\n<       length: Math.ceil(path.getTotalLength())\n\n\n\n  length: Math.ceil(path.getTotalLength()),\n  timingFunction: animFn\n\n394c397\n<     progress = this.pathTimingFunction(Math.max(0, Math.min(1, progress)));\n\n\n\nprogress = path.timingFunction(Math.max(0, Math.min(1, progress)));\n\n```\n\nAnd here is the SVG code:\nhtml\n<svg ...>\n  <path timing-function=\"EASE_IN\" d=\"...\"/>\n  <path timing-function=\"EASE_OUT\" d=\"...\"/>\n  <path d=\"...\"/>\n  <path timing-function=\"EASE_OUT_BOUNCE\" d=\"...\"/>\n</svg>\nI stay here is you need help.\n. Thanks :) it's merged!\n. Ohhhhh I see!\nThanks for the PR and the issue. In my head the requirements were the\nanimation is finished when the method is called. You made a very good point.\nI'm sorry I can't merge it for now but will in a week. Once I get back to\nnormal and connected life. (I just want to test it first ;)\nKudos++\n. How infinite? Rewind then play again? Reset and play?\nThis question has already been asked. Please check the other issues. If you\ncan't find it I'll help you :)\n. Hallo,\nSorry for the delay, it's a tricky one because there's no way to do it without hacking the library. I would say, in src/vivus.js in the mapping method.\n``` js\n  ...\n  totalLength = totalLength === 0 ? 1 : totalLength;\n  this.duration = totalLength / this.duration; // << Add this line\n  this.delay = this.delay === null ? this.duration / 3 : this.delay;\n  this.delayUnit = this.delay / (paths.length > 1 ? paths.length - 1 : 1);\nfor (i = 0; i < this.map.length; i++) {\n  ...\n```\nThen use the duration as speed:\njs\nvar fastAnim = new Vivus('hi-there', {duration: 10});\nvar slowAnim = new Vivus('hi-there', {duration: 1});\nNot sure if it's clear, but don't hesitate to disturb :)\n. Hallo,\nSorry about the delay. \nI didn't know docklets.io which looks pretty nice and usefull.\nI had a look to the generated documentation you made and I'm a bit skeptical. The documentation cover all the methods, however a lot of them are restricted to the core and have no reasons to be in a public documentation. Or I'm missing something :) \n. In that case, it might be useful. I like this because it respect a standard. But the jsDoc of Vivus needs to be updated. Do you want me to help you to do it, or shall I make it?\n. Thanks :)\nTechnically, only the Controls section and animation functions in Vivus should be in the documentation. About the README and HACKS should also be included (as you did :). But a general review of the jsdoc would be cool too. Some comments must be awful and attributes are missing.\n. I'm sorry I'm not really sure to understand your question. \nDo you mean that the method stop is only pausing the animation than pausing and reset the animation?\n. Hey, got any errors in your browser debugger? (In Chrome, open devlopper\ntools, then go to the 'console' tab)\n. Have you tried without your builder? Can you make a jsfiddle? Check that\nyour SVG is visible and displayed\n. Because it load it and build the DOM, then Vivus pick the SVG tag and move\nit to your page (and delete the object tag). No need of an external library\nto load the file.\n. Any help?\n. Hallo,\nThanks for these kind words and this nice and well detailled issue.\nFor the first part Ill have a look once at my desk.\nFor the second part, I'm not sure to follow. Long time ago somebody asked\nme about the use of use tags. After few test I realised that these\nelements are just a replication of the original dom, but aren't\nindependant. You can't define a specific stroke-dasharray to a use tag.\nSo, in your example, why don't you remove the data-ignore and let the\nanimation play?\nSorry if Im completely wrong :-S its what I understood. Otherwise, provide\nme a jsFiddle. Examples you can hack makes things easier to understand ;)\nThanks\n. Hallo,\nApologies for the delay. It's a shame to make a contributor wait so long when he got good points and take time to explain them.\n1. I checked Vivus code, then understood what you mentioned. That was my face when I got it:\n   \nSo, one thing: Well spotted! Thank you!! I need to patch this\n1. le <use> tag\n   Thanks for the examples. I guess you became as skeptical as I am about this tag. The implementation vary across platform which makes it too clunky to be used on this library. I mean, on Firefox it works like a charm, but on Chrome it's absolutely awful to watch. However, maybe we can make a section in the hacks.md.\nBtw, the path calculation is done by the browser with .getTotalLength() on the path object.\n. Hi there,\nYes I tried your jsFiddle in Chrome and Firefox. I made some tests on the <use> tag long time ago and I concluded that the tag was implemented correctly but each use tag is a duplicate from the original node and they have no freedom. If the original node got a stroke-dasharray property, it will be replicated on the use nodes. But the use node cannot have his own stroke-dasharray property. \nHowever, after what you show me I think I was incorrect (or things have changed). \nAbout SnapSVG I didn't know. I should have a look to this.\nI'll come back to you once I got results :)\nBut thanks again for this, your analysis is quite helpful!\n. You probably have some invisible paths which are drawn. Be sure your SVG\ndoesn't contain any \"display:none\" tags.\n. The error is triggered when the rewind is over. Because the at the end of it it, the callback is called, which will try to rewind the Vivus instance which is already re-winded. So it will call your onComplete on loop.\nIf you want to draw and rewind in loop, I recommend you to look at this issue #83\n. The animation starts when the SVG is visible in the viewport. Just scroll and it will start.\n. Hey,\nSorry about the delay. Vivus consider an SVG to be in the viewport when this one fit entirely in the current viewport. \nIf you want to change this behavior, you will have to hack the library ;) Just look at src/vivus.js at the line 470 (or dist/vivus.js line 722 if you don't want to go through the recompiling system). The trigger to start the animation check isInViewport function. The second parameter is the percentage of the SVG which must be visible to consider it as 'inViewport`. Just play with it.\n. Hallo,\nThanks for these sweets words, even if Vivus is that good due to a all the\ncontributors and not only one person :)\nUnfortunately, I'm sorry to tell you that it's not possible to animate\ndashed path with Vivus. This is a rare usecase that I never though about\nimplementing it. Also because the core of the animation is based on this\nproperty. However, if it's really important for you, it must be possible to\nhack the library to do it.\nBtw, I think you're the first to ask ;)\n. Nice catch!\nThanks :)\n. Hello,\nI have to admit I have never used this property. Can you provide me an example about this problem? Also, can you tell me more about your browser (and version) and the version of Vivus you're using?\nThanks\n. Ok, I finally had time to play with it and... oh boy the behavior is f***ed up. Even after a mapping on the Vivus instance after resizing, it doesn't help. It's because whatever the size of the SVG, the browser will return the initial (non scaled) length of the path. So, there's no real way for the script to know the correct value while using this property.\nI'm afraid I have no solution :(\n. Hello,\nI'm sorry I don;t really what you mean by choppy. From the GIF you're providing the animation looks correct. Except if the timing is identical, in that case, yes, it looks weird. \nCan you set this up into a JSfiddle or send me the link of your page please?\nAlso which version of IE is that?\nThanks\nBtw, you duplicated the animTimingFunction attribute in your option object.\n. Well I will need more details :) can you provide me a jsFiddle or link to\nyour demo? Which versions of IE are laggy? Other browsers are fine?\n. Ok, it took me a while to get my hands on a windows machine. But baeldung\nanimation are smooth on my machine.\nDon't forget that mobile devices got limited resources, and SVG animations\nare quite demanding. Also be sure your code don't trigger animations which\naren't visible.\n. The only thing I have in mind is the trick used for IE/Edge. Maybe now Edge\nmanage SVG in a better way (I have no way to test unfortunately). Is it\npossible to try with the option forceRender: false and see the result in\nEdge (do not try on other browsers)?\n. There's something very interesting in your video. You can mention the end\nof it is displayed at a normal speed. Can you test a blank page with this\nanimation only? I'm afraid other animations are running simultaneously (or\nheavy scripts) and are slowing down the rendering.\n. Hi @dbdev \nSorry for the delay I needed a machine with Edge to test your issue. Unfortunately, even by changing the User Agent the animation doesn't display correctly. Some styling issues. However, I think it's a browser/optimization issue. I recorded a profile of your page and it looks like your page is bloated by too much JavaScript to digest, which impact the framerate of the animation rendering.\nHere is yours:\n\nWe can see the CPU going mad, probably due to other frameworks to load. This impact the animations. Chrome seems to manage it correctly, but Edge is not as optimised and handle it badly.\nHere is the difference with the Vivus demo page:\n\nThis is also why now I explicitly ask to sandbox the buggy code into a JSfiddle (or other platform) to analyze it and debug it.\nI'm sorry to tell you to think about optimising the loading of your page to avoid overload. This should affect the smoothness of your animations.\n. Are you sure to use the same domain and protocol? Using 'file:///' might\nnot be recommendable.\n. Hallo,\nVivus is acting as normal. Your SVG is just not based on stroke but fill. I set the fox with a red stroke:\n\nYou must make your SVG with strokes only to animate it with Vivus.\n. Vivus doesn't support this. \nBut you can try that.\nPS: I haven't tested it.\njs\nnew Vivus('mySVG', {}, function (myVivus) {\n  if (myVivus.getStatus() === 'end') {\n    obj.el.classList.add('finished');\n    setTimeout(function(){\n      myVivus.play(-1);\n      obj.el.classList.add('finished');\n    }, 3000);\n  }\n  else {\n    myVivus.play(1);\n  }\n})\n``` css\n/ Style /\nmySVG * {\nfill-opacity: 0;\n}\nmySVG.finished * {\nanimation: fade 3s ease;\n  -webkit-animation: fade 3s ease;\n}\n@keyframes fade\n{\n    0% { fill-opacity: 0; }\n    30% { fill-opacity: 1; }\n    80% { fill-opacity: 1; }\n    100% { fill-opacity: 0; }\n}\n@-webkit-keyframes fade\n{\n    0% { fill-opacity: 0; }\n    30% { fill-opacity: 1; }\n    80% { fill-opacity: 1; }\n    100% { fill-opacity: 0; }\n}\n``\n. Hello,\nI'm afraid but usingscenarizeis the only way, so touching the SVG code.\nHowever, you can modify the.mapproperty of your Vivus instance before you run the animation. Doing it on theonreadycallback should be good.\n. Nice catch. Even if I would say that an SVG which doesn't have anything to\ndisplay is invalid, but it should trigger an error once the SVG is loaded\nwhen this condition can be checked.\nOtherwise, some methods (especially about status) will not return a logic\nvalue.\n. Actually it doesn't call thedrawer` for no reason and avoid triggering an error. Your solution is quite nice :)\nI'm mergin' it and I will write a test for it.\nThanks for your help (and sorry for the delay)\n. Hi,\nThanks for these kind words :)\nHowever, I no longer accept issues without a JSfiddle to check the problem. It's a requirement. If you have a question about how to use Vivus, you better join the conversation on Gitter :)\n. Hi,\nThis depends on the way you've been creating the illustration in your editor.\nFor example, in Illustrator, the brush create paths, the pen create lines.\nThe only way I would transform your SVG example into simple lines would be to delete points on path to make each shape a simple line. But you will need to edit it yourself. I don't think there's a magic program to help you with, but if you find one please post it here :)\n. Hehe :) You're welcome. I should put a tutorial about how to create an optimised SVG for Vivus. (I take note)\n. Hi there,\nI'm sorry issues are reserved for bugs, making your ticket invalid.\nIf you have any questions about how to use the library, please join the conversation on Gitter.\nHowever, for your problem you better check the Hack page\n. Yes, stop() and destroy(). Then create a new object. The old one can be garbage collected.\n. I just does the necessary to to make the object garbage collected\ncorrectly. Its your job to remove/edit your DOM.\n2016-08-17 10:21 GMT+01:00 Gopalakrishna Palem notifications@github.com:\n\nDoes destroy() cleanup the DOM? Looks like it is not. What is the right\nmethod to cleanup the DOM so that next SVG can be placed in the same\nlocation?\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/123#issuecomment-240359262,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABC-EFnY_rlCXIOTc3Hqca7oZ6NaN2Xqks5qgtKXgaJpZM4JmIft\n.\n. Your SVG is the issue. The path elements for the 'cove' seems too complex for Safari (which could be simplified, I don't know why there's so many points to define them). When it call the method getTotalLength() on these paths, my Safari crashes, litterally. \n\nI made a copy of your jsbin without the coves, and it run as it should be.\nhttps://jsbin.com/wafehupaja/1/edit?html,js,output\nTry to redraw these path with your graphic editor, or simplify these paths with SVGOMG\n. Ok then..\n. Mmmm.. I'm not sure to understand what you want to achieve. Can you draw something, or make a schema please?\nAlso, because this is not a bug, let's continue on Gitter.\n. Hi @Pixelous,\nWell if you find a way to provide an SVG to the Google API you can try to use Vivus. However I'm afraid they use an img tag to display the SVG, so Vivus will be useless. Because, if I get it right, the only thing you can provide is a path (:url: 'images/beachflag.png').\nBut if it's the case, you might have a last card to play. It;s to create an SVG which contain a <style> tag to animate your picture (like this logo, check the rendering and the code). \n. EDIT: I just realised this solution is not perfect. The SVG doesn't render on Firefox, but does en Chrome. It's maybe due to the base64 encoding.\n. Hallo,\nThanks for your issue (and respecting the guidelines :)\nI found out why your SVG is crashing. With this library I learn everyday\nabout SVG, it's amazing. Your first line is a not valid from my Pathformer\nrequirements, because the x1 attribute is missing. But by convention,\nbrowsers seems to replace missing position attributes by 0. I'll patch\nthis. For now, please add x1=\"0\" to your line then it should run smoothly\n;-)\n. Thanks Denys ;-)\n. Hi,\nI see.. you're right, I never thought about this problem. But it means that the code should check that all parent nodes are in the viewport to trigger the animation...\nHowever you can still stop the isInViewport check by using the option start: 'manual' or start: 'autostart' (but I'm not sure that's the behavior you expect)\n. Hallo,\nDon't worry, you're not the first and not the last :) However I could\nchange the name without being destructive (so the 'async' would continue to\nwork).\nBut the question is : what new name shall I give to this type?\nAre the other names ok?\n. Dammit! I wanted to discretely pass the nsync in the types list. But you\ngot the idea before... let's put it anyway :)\nAbout the naming, I saw something on Reddit I quite like : parallel. It's\nsimple and really describe my vision of it.\nDo you find it alright? I just want to stay away from 'sync'.\nI wanted to keep 'delayed', and maybe rename the 'oneByOne' to something\nlike 'queue'.\n. Thanks to @Harryandrew and @AshleyGrant for your comments. I would like to have other people points of views about it.\nHowever I would like to say to @StoneCypher that I don't tolerate your behavior (here and on Gitter). True, I made a mistake by badly naming this animation type, ok. And I don't wanted to change the API until I move to the next major version to avoid breaking changes. But laughing at me, writing FILING THE MOST PASSIVE AGGRESSIVE BUG, and imposing your views without talking by finishing your message by No question.. Oh boy....\n. @StoneCypher : let's continue in PM on Gitter.\nEverybody else, sorry about the interlude.\n. Thanks for your help :)\n. Ok, Im downloading a VM and I'll test it. I guess the problem is about the\n4 icons, right? (Advanced grid/digital branding/top performance/responsive\ndesign)\n. Ok it will take me more time than I thought. My personal machine even struggle to display the page correctly. Half of the content is missing. I will be back when I will put my hand on a more powerful machine.\n. Ermm... That could be helpful :)\nProbably tonight (quite late) I should have a spare moment to look at it\n2016-11-14 16:32 GMT-05:00 dbdev notifications@github.com:\n\nIf you want I can give access to my account of browserstack to debug it.\nLet me know.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/134#issuecomment-260469179,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABC-EOes9cEEJclHoje8Y7VMcKrVencUks5q-NNTgaJpZM4KuqSQ\n.\n. Ticket been discussed offline. Hi there,\nCan you please provide me an example? I tried the demo page with the latest Firefox (49) and Chrome (54), and I don't see any starting points :-S\nThanks\n. Hi there,\n\nI see your problem and this is one of the use case that is incompatible\nwith Vivus. This library use the dashstroke to fake the drawing\nanimation. So it cannot be applied on a path which already have a specific\ndashstroke property.\nI'm sorry about the bad news :(\n. Unfortunately no :(\nExcept cutting your SVGs in your editor to create real lines.\nI did this to your jsfiddle :) https://jsfiddle.net/1yp1ktwf/2/\n. You're welcome! ;-)\n. Hiya!\nThanks for the kind words :)\nFor inline SVGs a glitch can happen because the SVG is displayed between\nthe page rendering and the code execution that hide it. So the only way is\nto hide it by default, then ask Vivus to make it visible once ready. You\ncan use 'onReady' (cf jsFiddle fork below) or set the visibility to the\nelement just after creating the Vivus instance.\nhttps://jsfiddle.net/7971fakx/2/\nYou're not missing anything, you got it right :)\n. Hi there,\nSure! Just set the option 'start:\"manual\"' then use the method \".play()\" on\nyour instance when you're ready to start.\n// Create the instance\nvar myVivus = new Vivus('mySVGid', {start:'manual' /* plus your other\noptions */});\n// ...then later, on your click event\nmyVivus.play()\n. Hi there,\nIm sorry but Im not sure to understand the problem. Are you trying to use\nVivus with requireJS?\n. Hi Arthur,\nUnfortunately your SVG is not compatible with Vivus. It's fill based\ninstead stroke based.\nI see only two options:\n- You must redraw your SVG with strokes in your graphic editor.\n- Or use this hack\nhttps://github.com/maxwellito/vivus/blob/master/hacks.md#animate-fill-with-css\nto perform an animation on the outline (you will have to set a stroke value\non your paths)\nI know it's not ideal. Unfortunately, most of icons available online are\nnever stroke based. Even if they look like it, their creators generate path\nfrom the outline (which doesn't make sense in most of the case) turning\nsomething stroke based into fill based. And there's no magic to go the way\nback :(\nAlso, you don't need to include pathformer.js, it's already included in\nvivus.js :)\n. Sorry about the delay, Im away from my computer. But I'll try to prepare\nthat tomorrow :)\n. Hallo again,\nHere is the result of what I was talking about: http://maxwellito.github.io/drafts/vivus-issue-140/\nYou can see the code here https://github.com/maxwellito/drafts/tree/gh-pages/vivus-issue-140\nI left some comments in index.html. @dfcreative This is why I recommend, in this issue, to use Vivus.js + a hack. The default Vivus behavior won't animate this SVG. Which means vivus-instant won't either. \nBecause this SVG (like probably most of flaticon.com) is not compatible with Vivus. It's fill based instead stroke based.. Take a look at these ones: https://github.com/maxwellito/vivus/tree/master/test/manual. Hi there,\nI try to think about another way of doing what you would like to do, but unfortunately you will have to use one SVG per letter. However, you could hide them all and display the correct one when needed and reset/start the animation, instead of cloning SVGs on the go. \nIf you would like some help to debug, it would be nice to put your code on a JSfiddle. It makes it easier to hack and test.\nBut from what I can see right now, I think the issue might come from the start option. By default it's inViewport, while in your case autostart would be more appropriate.\njs\nnew Vivus('current', {\n  duration: 200,\n  start: 'autostart'\n}, function() {\n  // ...\n});. Hi @TIIGRUS \nGood catch! IE doesn't support classList on SVGs (: canIuse.com). \nIn that case I would suggest a obj.el.className += ' finished'; instead. But I don't have an IE with me right now for a quick test.\njs\nnew Vivus('my-svg', {\n  type: 'delayed',\n  duration: 200,\n  start: 'autostart'\n},function (obj) {\n  obj.el.className += ' finished';\n});\nI should update HACKS.md.\nThanks for the issue.. Damn IE!\nCan you try something like this: \njs\nobj.el.setAttribute('class', obj.el.className + ' finished');. I'm bad at retro-compatibility with deprecated browsers.\nThat one should make it\njs\nobj.el.setAttribute('class', obj.el.getAttribute('class') + ' finished');. You're welcome :). I'm afraid it must be related to another script in your page. I checked the\nVivus codebase, there is no variable (or property) called 'animation'.\n. Is it possible to check your page? It won't be easy to debug like that :)\n. LGTM \ud83d\ude04 \ud83d\udc4d . Hi Dennis,\nYou're quite close :)\nBy default, the SVG behaviour is to set the fill property to #000 if not set. Also, you will have to provide a stroke property which define the color of your border, otherwise the border is not rendered.\nSo I recommend you to add fill=\"none\" stroke=\"#000\" to your path tag.\nYou can play with the thickness of the border with stroke-width.. Hi there,\nDon't worry, there's no silly questions :)\nAnd you actually fount the answer by yourself. Vivus cannot manipulate independently the content of each use tag. You could manipulate the definition which will update all the use tags. That's how it works.. Sorry for my explanation.\nNo, from my old experience with use and Vivus. You can animate the parent (:definition tag) and all the use tag will be updated.\n```html\n\n\n\n\n\n\n\n\n\n\n\n\n```\nIf you trigger new Vivus('definitions'), the definition will get the animation and the use will be both updated at the same time together. You won't be able to manipulate them independently.\nHowever I don't really recommend it, because Vivus will struggle to know when to trigger the animation, because it refer to the position of the definition in the page and not the position of your use tags. \nPlus, and I didn't mentioned before, Vivus won't be able to get it from an external file (:sprite.svg#icon-of-choice)\nIll try to post a jsfiddle during the day. Here is the JSfiddle, I put some comments in it.\nDon't hesitate to hack it.\nhttps://jsfiddle.net/svhf9jwz/\n. You're welcome sir!! :). Hi there,\nBy loading it dynamically, the SVG should take the full space provided by the parent container. Can you please provide me the link to your dev page, I'll have a look. :). Hi there,\nOk so I mentioned two things here. \n- Your SVG tag doesn't have a viewBox property which is very important. It define the area of your SVG, the browser will use it to resize and display correctly the SVG. For example, on yours I would recommend to set viewBox=\"0 0 720 720\", it should fit. => <svg viewBox=\"0 0 720 720\" .... You can read the MDN documentation for more info \n- You seems to have used vivus-instant for this SVG and also have the Vivus JS library on your page. I hope you're using only one or the other but not both, otherwise that might ruin performances and have weird behavior :). Hi there,\nCan you please provide me your SVG, I would like to have a look to have a better understanding. Thanks :). ~~You're welcome! :-)~~\n~~That was an easy one ;-)~~\n. Sorry I thought you were saying you were using the wrong file in your code. My bad :-S\nI'm looking at it, I'll be back soon. I didn't realise you don't wait for the SVG to be loaded to start to play it. When the dynamic load is used (via the property file), the callback onReady must be used.\n```js\nvivusLogo = new Vivus('logo', {\n    start: 'manual',\n    type: 'scenario',\n    file: 'logo-wordmark3.svg?'+Math.random(),\n    onReady: function () {\n        // Now I'm ready :) Let's play!\n        vivusLogo.play(0.5, function(){ console.log('logo completed') })\n    }\n})\n// Do not trigger it here, the SVG is not ready\n// vivusLogo.play(0.5, function(){ console.log('logo completed') })\n```\nhttp://maxwellito.github.io/drafts/vivus-issue-148/. Yup :)\nDepends what would be for you the trigger of the animation?. ```js\nvar autostart = false,\n    vivusLogo = new Vivus('logo', {\n      start: 'manual',\n      type: 'scenario',\n      file: 'logo-wordmark3.svg?'+Math.random(),\n      onReady: function () {\n        // Now I'm ready :) Let's play!\n        if (autostart) startAnimation()\n      }\n    })\nfunction startAnimation () {\n  if (vivusLogo.isReady) {\n    vivusLogo.play(0.5, function(){ console.log('logo completed') })\n  }\n  else {\n    autostart = true;\n  }\n}\n```\nThen call startAnimation() when you need.. Hehe :)\nSorry for not leaving more details, here is the story.\n\nThe vivus object is set up. This one start to load the SVG\n\n1st scenario:\n\nThe SVG is loaded, then vivus trigger the onReady callback. But because autostart variable is not true.. nothing happens.\n[At some point] your code trigger startAnimation(), this one will check if the vivus instance is ready (which is the case) so it starts playing it.\n\n2nd scenario:\n\nYour code trigger startAnimation(), this one will check if the vivus instance is ready (which is NOT the case) so it only switch the autostart variable to true (as a marker).\nThe SVG is loaded, then vivus trigger the onReady callback. This time, the autostart variable is true, so it trigger startAnimation(). And this time, the vivus instance is ready so it play the animation.\n\nThe reason I use the same function (on the onReady and manually) is because it will avoid redefining the setting of the play. It's at only one place.\nI hope this explanation helps :-). Uhmmm... onReady and play are separate. It's only in our case that we manage to call play in the onReady if we need to.. Hi there,\nFirst, thanks for the kind words :)\nAbout your issues, I'm not entirely sure to get it but here is a solution.\n\nHide the SVG with CSS : visibility: hidden;\nOn the options of your Vivus instance, use a callback on the property\nonReady which will show the SVG. Something like the following:\n\njs\nnew Vivus('your-svg', {\n  ...\n  onReady: function (vivusInstance) {\n    vivusInstance.el.style.visibility = 'visible';\n  },\n  ...\n})\nI hope this helps\n. That's strange.. Can you send me a link to check this please?\n. Because 'myCallback' function is not defined in your case. Remove 'myCallback'\nas last parameter of your Vivus call. This callback is optional.\n. I'm afraid not, because your SVG is using percentages so Pathformer cannot convert these lines into paths. I recommend to use pixel values and set a viewBox.\nPathformer [parseAttr]: a SVG shape got values in percentage. This cannot be transformed into 'path' tags. Please use 'viewBox'. Hi there,\nThe first parameter of the constructor must be the SVG ID if you provide a\nstring, not a CSS selector.\nTo select the SVG I recommend to use\ndocument.getElementById('mySvg').children[0] (or\ndocument.querySelector('#mySvg svg') if you can play with something\nmodern) to select your tag.\nSo it would look like this: new Vivus(document.querySelector('#mySvg svg'),\n{duration: 200});\nHowever, I'm afraid to tell you that your SVG is not stroke based, so Vivus\nwon't be able to animate it.\nStroke based is an SVG made of lines and not painted areas.\nMaybe these link will give you a better understanding:\nhttps://medium.com/bitmatica-lab/svg-line-animation-for-the-uninitiated-5a65d91c6044#.v9f3ayksf\nhttp://valhead.com/2017/03/03/three-illustrator-tricks-for-better-svg-stroke-animations/\nI hope this helps :)\n2017-03-15 10:17 GMT+00:00 Mustapha notifications@github.com:\n\nHello,\nThank you so much for this plugin.\nI am using Angular Material Design UI Component in my site and to add\nan SVG icon I use the md-icon\nhttps://material.angularjs.org/latest/api/directive/mdIcon directive:\n\nThis directive creates the SVG tag inside md-icon:\n   \nI'm not able to add the id to the SVG tag, so I tried to select the svg in\nthis way:\nnew Vivus('mySvg svg', {duration: 200});\nbut I get this error:\nError: Vivus [constructor]: \"element\" parameter is not related to an\nexisting ID\nHow can I select the children element?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/151, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABC-EF8s-E6XM7Ba9BlB6Ax-SOMXiX75ks5rl7q5gaJpZM4MdvXs\n.\n. You're welcome! :)\n\n2017-03-15 11:28 GMT+00:00 Mustapha notifications@github.com:\n\nThank you so much Max!\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/151#issuecomment-286714781,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABC-EPdDsbGdtSduAkJKXb_YxIc3xuD9ks5rl8tRgaJpZM4MdvXs\n.\n. Hi Guillermo,\n\nThanks for passing by, that wasn't expected :)\nSo, I understand this issue, and since I put this package to NPM I always felt bad/uncertain about if I was doing this right. And to be fair, you seems like the person of the situation for it.\nI know the bundling I have is alright if Vivus is used for Browserify: to end in a browser. But I'm completely confused when it come to serverside rendering for many reasons:\n\nI don't know how this library could be used on serverside except to render a SVG at a different step of the animation (:like render a SVG at 75% of the animation).\nThis library depends a lot on the SVG Element API. The Pathformer class transform graphical elements to path elements, Vivus need to get the length of every path that via the .getTotalLength() method.\n\nThis is why if I make the window object optional Vivus might become useless. Is serverside rendering able to provide me the same API as a browser? Like SVGElement, getTotalLength()..\nI'm really sorry my points are absolutely silly. I admit I have a bad knowledge of this area.\nThanks again for your issue \ud83d\udc4d . Oh ok :)\nSo, the solution would be to remove the parameters window and document from self executed function. \n_build.js:\n```js\n'use strict';\n(function () {\n// bundling logic\n}());\n```\nAm I right?. Ok, tests are good. If this PR is good for you, I'll ship it. :). Thanks @rauchg for your update. \nIts not merged and publish. \nCan you confirm it's now working? Thanks :). Should I execute these assignations in the constructor? Or the problem will remain the same?. Sorry about the delay. I think I figured out the problem you mentioned. All use of window is now waiting initialization. None during the original execution.. Thanks @rauchg . Hi there,\nI just tried your script and it seems working fine for me. I mean the animations where here and smooth.\nThe only thing I could find problematic is the trigger. By default, Vivus starts the animation when the SVG is in the viewport. But in your case, you might want to start them automatically. If so I would recommend you to set the option start: 'autostart'.\njs\n// Exemple\nnew Vivus ('blue', {\n  type: 'async', \n  duration: 80,\n  start: 'autostart'\n}, myCallback);\nYou can see the list of options. You're welcome :)\n. Hi there, I think you forgot to mention your problem ;-)\n. Can you please provide me a snippet of your code? I'm afraid to not understand correctly what you're trying to do.. Thanks for your snippet.\nUnfortunately I couldn't find any weird behavior. I think the delay you\nmention is due to the 'scenario-start=29' on the first path. When the Vivus\ninstance starts to play from the start it will display nothing until the\nframe 29.\n. I see :) the frame rate depends on the browser. At best, it will reach 60fps on Chrome, but if your page is requesting a lot of animations/updates/repaint the frame rate will decrease.\nHowever you can hack the library easily. At the end of src/vivus.js there's the fallback code to use requestAnimationFrame and cancelAnimationFrame. This snippet try to get the original browser function method regarding of the platform or use setTimeout if not available.\nsrc/vivus.js : 720\n``js\n/**\n * Alias forrequestAnimationFrameor\n *setTimeout` function for deprecated browsers.\n \n/\nrequestAnimFrame = (function () {\n  return (\n    window.requestAnimationFrame       ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame    ||\n    window.oRequestAnimationFrame      ||\n    window.msRequestAnimationFrame     ||\n    function(/ function / callback){\n      return window.setTimeout(callback, 1000 / 60);\n    }\n  );\n})();\n/\n * Alias for cancelAnimationFrame or\n * cancelTimeout function for deprecated browsers.\n \n/\ncancelAnimFrame = (function () {\n  return (\n    window.cancelAnimationFrame       ||\n    window.webkitCancelAnimationFrame ||\n    window.mozCancelAnimationFrame    ||\n    window.oCancelAnimationFrame      ||\n    window.msCancelAnimationFrame     ||\n    function(id){\n      return window.clearTimeout(id);\n    }\n  );\n})();\n```\nYou can update this to :\n``js\n/**\n * Alias forrequestAnimationFrameor\n *setTimeout` function for deprecated browsers.\n \n/\nrequestAnimFrame = function(/ function / callback) {\n    return window.setTimeout(callback, 1000 / 30); // Set your fps desired here\n};\n/\n * Alias for cancelAnimationFrame or\n * cancelTimeout function for deprecated browsers.\n \n/\ncancelAnimFrame = function(id){\n    return window.clearTimeout(id);\n};\n```\nAnyway, to help you I built a quick hacked version using Vivus.FPS property to set the FPS desired. This will apply across Vivus instances.\nJust set your frame rate then go\njs\nVivus.FPS = 30;\nnew Vivus('mySVG', {})\nnew Vivus('mySecondSVG')\n...\nI hope this will help you :). Any luck?. No problem :). Hi there,\nSorry about the delay, I was away from physical keyboards.\nI just checked your page and I don't mention any wrong behavior. The animation starts on scroll. Maybe you fixed the problem since? If you wanted to start the animation on page load without any user interaction I would recommend you to use the option start: 'autostart'.. Hi there,\nCan you please provide a jsFeddle of your problem? From the error it doesn't look like this error is triggered from Vivus but from one of your jQuery plugins. At no point this library use a cssText property.. Thanks for the detailed update \ud83d\udc4d \nNice job :). Thanks for the PR! :) \ud83d\udc4d . Hi there,\nIm afraid there's no way to use seconds on Vivus. The library use\n'requestAnimationFrame' to guaranty a smooth animation, and the frame\nduration will depends on your page performance and user machine.\nI can recommend you to use Vivus-instant. It will transform your SVG into\nan animated one powered by CSS animation. With this you should have the\nduration in seconds (or ms). But Im not sure it will fit your needs.\n. Hi there,\nI recommend you to read this issue:\nhttps://github.com/maxwellito/vivus/issues/146\nVivus cannot manipulate use tags.\n. Hi there,\nEverything should run smoothly. Can you please provide my a jsFiddle with\nyour code to analyse it? :)\nThanks\n. Thanks for the jsFiddle, it's much easier to debug now :)\nLittle trick, to debug animation I recommend to display the map from the\nVivus object with console.table(myVivusInstance.map). It will provide you\nthe start and duration of each path.\nIf you try it you will see that your 'leaves' path starts at 200 for a\nduration of 600. However this path is longer than it seems, it looks ended\nbefore it actually is. I tried to simplify it with SVGOMG but without\nsuccess. But that explain the delay at the end of the animation before the\ncallback is triggered.\nI made a fork of your jsFiddle to show you the difference. I reorder the\nanimation. https://jsfiddle.net/8qvknhjm/1/\nI don't know how to simplify the 'leaves' path, but I can have a look when\nIll have access to illustrator.\n. Hi there,\nYour SVG is fill based instead of stroke based. Vivus make animation\nstrokes, not fill areas.\nI recommend you this thread https://github.com/maxwellito/vivus/issues/140\n, and Vivus instant (: https://maxwellito.github.io/vivus-instant/ ) to\ncheck the compatibility of your SVG.\nI'm sorry about that :-/\n. Hi there,\nThis behavior is normal. Even one animation on a complex SVG can be quite\ndemanding in terms of resources. The reason is, at every frame the browser\nwill rerender the whole SVG. So 20 simultaneous... Im even surprise your\nbrowser is still responding :-D\nAlso, the reason they don't start all at the same time is due to loading\ntimes. When you create a Vivus instance with lazy load (by using \"file:\n'my.svg'\"), the animation starts when the SVG is loaded. So it's unlikely\nthat all your SVG get loaded all at the same time.\nThe only way to control this is to create instances with \"start: 'manual'\"\nand use the callback \"onReady\" to collect all the ready states. Once\neverything is loaded, you can run \"play()\" on all of your instances.\n. Hi Thomas,\nIm afraid Vivus animation is based on frames so there's no way to garantee\nthe timing. However, if you just want to display the animation maybe Vivus\ninstant might be the solution for you. It will create a duplicate of your\nSVG with CSS animation included to obtain the same result as Vivus but CSS\npowered. In this case you will be able to set the timing.\nhttps://maxwellito.github.io/vivus-instant/\nI hope this will help :-S\nThanks\n. It's now updated :). Hi Andy,\nBefore all, thank you very much for taking the time to fill an issue correctly. I really like the way you introduced your approach with the different alternatives. It's so useful and pleasant, and I wish everybody was like you. \ud83d\udc4d \nI played with your codepen and managed to make work. Vivus constructor only takes the ID of a DOM element or the DOM element itself. Not the parent of the SVG.\nAs you mentioned the this.$el is <div><svg></svg></div> which is not valid for Vivus. But you can pass the first child and the magic will happen : this.$el.childNodes[0].\nnew Vivus(this.$el.childNodes[0], { duration: 60 })\nI hope this will be helpful\nMax\nPS: You found a nice workaround to bypass CORS ;-). :-)\nIts pretty cool you sent this issue at this moment because Im rebuilding\ntriangulart in vue.js, just to discover it. It would be interesting to see\nif the framework provide an option to avoid DOM checking on this component\nto improve performances.\nI will properly consider doing an AJAX request to load the SVG but I will\nhave security concerns to check. But I would love to implement it only with\n'fetch' and not all these old APIs (actually it shouldn't be a problem).\nThanks again for your issue. You have no idea how pleasant it was :-) Do\nnot hesitate to ask for help!\n. Hi there,\nSorry about the delay. Im afraid the issue comes from a CORS issue as the\nerror message mention. But I don't know where to help you with the config,\nIm a bit pointless on that part. Does your SVG receive the correct headers\nduring the request?\nI will also check on my side if an attribute on the object tag would help.\nHovever, if you check the previous issue (#167), the hack of fetching\nmanually the SVG and setting it in the DOM seems to work and byassing these\nrules. So I'll try to implement this soon.\n. Hi there,\nThanks for your detailed demo. It's pretty promising and there's a lot of potential. I wasn't aware of pattern to be part of the original SVG specs. I try to find a way to integrate it to make a seamless as possible. However I hit a little problem when it comes to get the color of the element to animate. The fill color can be set via a CSS class and that make it more difficult to get. But I'll try to investigate to find a solution.\nHaving that kind of fill animation would be a nice plus :). Hi @Lauwisme \nSorry I didn't provided any update there. When the issue was created I played a lot with it but couldn't find a way to implement it correctly that work with most use cases :(. Do you have an example?\nThe following should work.\nhtml\n<svg id=\"mySVG\">\n  <line class=\"arc_1\"/>\n  <line class=\"arc_2\"/>\n  <line class=\"arc_3\"/>\n</svg>\n```css\n.arc_1 {stroke: #555;}\n.arc_2 {stroke: #666;}\n.arc_3 {stroke: #777;}\n.rainbow * {transition: stroke 1s;}\n.rainbow .arc_1 {stroke: red;}\n.rainbow .arc_2 {stroke: green;}\n.rainbow .arc_3 {stroke: blue;}\n```\njs\nnew Vivus('mySVG', {}, function (obj) {\n  obj.el.classList.add('rainbow');\n});. For example, here is a jsFiddle (from another issue) I modified to explain https://jsfiddle.net/pu0n5097/6/. I get your point. Using object tags sandbox the content, make it it impossible to modify it. But if you let Vivus load your SVG it should run smoothly : http://maxwellito.github.io/drafts/vivus-issue-170/\nCode : https://github.com/maxwellito/drafts/blob/gh-pages/vivus-issue-170/index.html. Sure! :). Awesome! Thanks for the update. I wasn't aware of the URL change.. I can't really know from what you posted.\nFirst, try if your SVG is compatible by testing it with vivus-instant. Your SVG must be stroke based. If no animation is happening. your SVG is not stroke based.\nSecond point, what's happening in your case? Do you get en error? The SVG is displayed but no animation is triggered?. I'm afraid your SVG doesn't seems compatible with Vivus. This library can only animate stroke based SVGs, it's a requirement, all the animation is based on it.. Hi there,\nThanks for providing examples, that's helpful! However when I read you had\n38 svg to animate I was pretty sceptical because that's too many elements\nto animate. But their content is pretty simple so it's ok.\nI have a smooth experience on Chrome, but in Firefox too (v55, 64bit, Mac).\nIm afraid the problem is more about the browser engine than anything else.\nIll try to find a Windows 10 to test. Did you notice any errors in the\nconsole?\n. I installed a Windows 10 VM to play around but I couldn't extract any\ninteresting information. The animation wasn't smooth. Same on other\nbrowsers.  The VM couldn't provide a fluid experience.\nCan you tell me the size of the repaints you're getting? If it match the\nsize of elements that need repaints, well the browser is poorly performing\non the rendering. There's nothing I can do to help.\n. Sorry about the delay, I was afk and without a real Windows machine. I\ntried again on my VM and got this.  The painting time is interesting, it's\npretty short.\nBut still wondering about the reason of the animation smoothness. Im afraid\nit's a problem due to the browser and platform, otherwise the experience\nshould be consistent across platforms.\n[image: Images int\u00e9gr\u00e9es 1]\n. Sorry I couldn't upload my screenshot (Corporate networks are awesooooome!!)\nIt was to show the performance tab : my paint was taking ~6.99 ms.\n. I'll try to find a real Windows 10 machine and torture it a bit to make sure, and will also try with their new engine Quantum. Firefox and SVG got a love-hate relationship.\nI'll keep you posted :). That's pretty cool! That means that firefox was probably rendering the whole page at every frame. Nice catch!. Hi there,\nSorry to hear about your problem. Can you please provide me a JSFiddle or your full SVG? That would be easier for me.\nI tried to use your snippet in a SVG but I couldn't display anything :-S. Yes, the SVG exported from inkscape was just a massive path full of sub shapes. Browsers don't like it and the only way to fix it is to split it into path element for letter. Like here. \nHowever I don't know InkScape at all. The rare time I had to use it, it gave me a headache in 20 seconds. There might be a way split your text into text elements of one character then turn them into paths.. :)\nMy SVG editor is Adobe Illustrator. I grew up with it, it's like my third\nhand but I don't want to recommend it because it's a bit expensive for a\ncasual use.\nI should really give another try to Inkscape. Because it's open source and\nIm pretty aure it got the power to export SVG the way I want. Plus if it\nworks I will be able to provide mini tutos to build SVG with an open source\nand free solution: win-win!\nThe problem with inkscape is the SVG format contain all the data to be\nmanipulated. Unlike Illustrator that use .ai files for project then you can\nexport as .svg with pretty advanced options.\nIll install inkscape today to see how to turn text to path. If that works,\nthe output can always be put in SVGOMG to make it clean.\nI keep you posted ;)\n. Ok I tried Inkscape:\n\nCreate your document\nWrite your text\nSelect your text element\nObject > Object to Path\nObject > Fill and Stroke (to select your color and remove the fill if\nyou want to)\nSave as > pick 'Optimised SVG' as format\nSet the 'Number to significant digit' to 3\nTab SVG output: Tick 'Remove metadata' and 'Remove Comment'\n\nReady to use for Vivus\nHere is what I've done: https://jsfiddle.net/9swg0cw5/\nPS: The X11 plus the weird interface made go mad a bit... but happily\nsurprised of the result :-D\n. Hi there,\nThanks for providing details. So the problem is simple, Safari is not friendly with use tags. When a symbol is updated, the render is not applied to the duplicates. \nTo bypass this I recommend you to use the option forceRender. When set to true it rebuild the nodes at every changes to make sure the browser do the rendering. If you set a value that affect IE/Edge and Safari, it should be good :)\njs\nnew Vivus('SVGitem', {\n    duration: 200,\n    forceRender: /^((?!chrome|android).)*(msie|edge|trident|safari)/i.test(window.navigator.userAgent)\n});. Sorry Im doing this from holidays, from my phone.\nI recommend you the following: create the 3 instances to load the SVG, then\nstart the breaker when in the viewport. When finiahed it will start the\nchip, then the server. I hope it works.\n// Create your instances\nvar beaker = new Vivus('beaker', {\n  duration: 100,\n  type: 'oneByOne',\n  start: 'inViewport'\n}, function(){\n  // When Breaker finish, start the chip\n  chip.play();\n});\nvar chip = new Vivus('chip', {\n  duration: 100,\n  type: 'oneByOne',\n  start: 'manual' // Start manually from the previous callback\n}, function(){\n  // When chip is finished, start server\n  server.play();\n});\nvar server = new Vivus('server', {\n  duration: 100,\n  type: 'oneByOne',\n  start: 'manual' // Start manually from the previous callback\n}, function(){});\n. \ud83d\udc4d \nI think I was wondering the same thing but forgot about it. This is pretty important! Thanks for providing help and details. I'll try to implement and release it this weekend.\nMany many thanks!. Hi there,\nSo I'm not a pro at Webpack (but I'm improving). Are you sure you need to ask the property Vivus of the object returned? Because the module export the class directly, not an object wrapping the class.\nCan you try WEBPACK_IMPORTED_MODULE_1_vivus instead of WEBPACK_IMPORTED_MODULE_1_vivus.Vivus?\nMaybe I'm saying something silly :-S. Im afraid you will have to use the inline SVG. Repass your SVG on Vivus\nInstant and set the setting for manual start. Play with CSS to make it look\nas background. Then when you need to play it, add the trigger class to your\nSVG.\n. Thanks for providing the jsFiddle, it makes it all clear now :) but Im\nafraid there's no options to ask vivus to draw a path backward. You will\nhave to redraw your SVG, sorry about that.\n. Hi there,\nThanks for these kind words :)\nI think the problem is the following: Providing an invalid ID to the Vivus\nconstructor will throw an error and might stop your script (depending how\nit's build). There's no option to disable it. I would recomend you to wrap\nthis in a try-catch, or make sure the IDs are available before creating\nyour Vivus objects.\nI hope this will help you.\n. I must admit, I really don't understand what you're trying to do with your\n\"if\". Is it because of an error message you get in your web console?\n. Sorry about the delay. \nDid you managed to fix the issue with the try ... catch ...?\nIf not, post your code where I can see it. I'll try to help you :). As I said before, if the ID doesn't exist, it will trigger an error.\nSo for each of your instances I would suggest you to test is the ID is available before running the code.\njs\nif (document.getElementById('mysvg1')) {\n  new Vivus('mysvg1', {duration: 200}, myCallback);\n}\nif (document.getElementById('mysvg2')) {\n  new Vivus('mysvg2', {duration: 200}, myCallback);\n}\nAlso, make sure that myCallback exists if you plan to use it.. All g\u00fc\u00fcd then :). Hi Daniel,\nThanks for the examples, it helped a lot.\nThe reason it fails is because the the second path got a stroke-dasharray and/or stroke-dashoffset style property. Which cannot be overritten by a class, so no animation is happening. However Vivus.js override the style class, so it shouldn't be a problem. Only in vivus-instant, which I will try to fix quickly :)\nTo test again, here is your SVG:\nsvg\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<svg\n   xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n   xmlns:cc=\"http://creativecommons.org/ns#\"\n   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n   xmlns:svg=\"http://www.w3.org/2000/svg\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   viewBox=\"0 0 520.99927 179.35226\"\n   height=\"179.35226\"\n   width=\"520.99927\"\n   id=\"svg869\"\n   version=\"1.1\">\n  <metadata\n     id=\"metadata875\">\n    <rdf:RDF>\n      <cc:Work\n         rdf:about=\"\">\n        <dc:format>image/svg+xml</dc:format>\n        <dc:type\n           rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\n        <dc:title></dc:title>\n      </cc:Work>\n    </rdf:RDF>\n  </metadata>\n  <defs\n     id=\"defs873\" />\n  <g\n     transform=\"translate(29.554829,-393.93752)\"\n     id=\"g4606\">\n    <path\n       id=\"path4568\"\n       d=\"m 85.897669,404.81397 c 0,0 -10.548829,14.31628 -39.934879,17.33023 -29.38605,3.01395 -41.4418602,-6.02791 -41.4418602,-6.02791 0,0 -5.27441796,-5.27442 3.76744,-10.54883 9.0418602,-5.27442 33.9069802,-9.04187 51.9907002,-3.76745 18.083719,5.27442 94.18605,33.90698 106.99535,42.19535 12.8093,8.28837 95.69302,54.25116 116.7907,63.29303 21.09767,9.04186 70.8279,27.87907 100.96744,30.13953 30.13953,2.26047 76.85581,0 92.67907,-11.30233 15.82325,-11.30232 12.05582,-29.90005 9.04186,-40.68837 -4.05481,-14.51401 -18.90653,-24.97451 -36.92093,-31.64651 -20.34419,-7.53488 -76.10232,-22.60465 -118.29768,-3.76744 -26.7186,11.92794 -87.00091,43.30177 -111.51628,57.26512 -28.3981,16.17486 -100.21395,44.45581 -122.065114,55.00465 -18.83721,6.78139 -42.195346,12.8093 -69.320926,6.0279 -27.1255805,-6.78139 -40.688374,-12.05581 -41.441862,-36.16743 -0.753489,-24.11163 11.3023265,-29.38606 24.865114,-36.92094 15.069773,-6.7814 45.96279,9.04186 58.7721,17.33023\"\n       fill=\"none\" stroke=\"#000000\" stroke-width=\"4\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path\n       id=\"path4568-0\"\n       d=\"m 398.95632,401.49568 c 0,0 10.54882,14.31628 39.93487,17.33023 29.38605,3.01395 41.44186,-6.02791 41.44186,-6.02791 0,0 5.27442,-5.27442 -3.76744,-10.54883 -9.04186,-5.27442 -33.90698,-9.04187 -51.9907,-3.76745 -18.08372,5.27442 -78.16411,21.37352 -116.03721,39.18139 -44.90215,21.11292 -109.25581,55.75814 -130.35349,64.80001 -21.09767,9.04186 -49.83544,21.66193 -78.362794,31.64651 -30.139533,10.54884 -85.897673,14.31628 -101.7209334,3.01395 -15.8232506,-11.30232 -26.3720996,-19.35121 -25.6186116,-38.4279 0.59476,-15.05803 16.64607,-38.53731 34.6604722,-45.2093 20.3441898,-7.53488 70.8279098,-18.83721 125.0790868,0 27.64134,9.59769 98.30323,46.31572 122.8186,60.27907 28.3981,16.17486 85.14418,36.16744 85.14418,36.16744 0,0 43.96314,17.92356 71.5814,13.56279 28.63256,-4.52093 42.94884,-12.05582 48.97675,-37.67442 5.52521,-23.48213 -21.09768,-36.16744 -34.66047,-38.42791 -13.56279,-3.01395 -53.49767,4.52093 -66.30698,12.8093\"\n       style=\"fill:none;fill-rule:evenodd;stroke:#000000;stroke-width:4;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;\n       stroke-opacity:1\" />\n  </g>\n</svg>. I'm closing this issue because it's related to vivus-instant and not vivus.js. :). Hi Youri,\nNo worries, you did nothing wrong. Even better you converted your text into outlines, which is a good point. The problem was due to the output formatting of Inkscape and missing checks in my code. I discovered this problem yesterday by an issue created by @kdhooper.\nTo make it short, Inkscape output SVG with strokeDasharray and strokeDashoffset style properties set even when it's not necessary. Vivus-instant use CSS classes to animate paths, but CSS classes are a lower priority to inline CSS. So vivus-instant was powerless. \nThis problem is now fixed and deployed. I just tested with your SVG and it works like a charm.\nPS: Welcome to GitHub and the open source world!. Hi there,\nThanks for providing a jsFiddle, that helps a lot! I find strange your animation is slow on mobile, it doesn't look complex. I ran it on my mobile and also on desktop with reduced performances without glitches. However if you want to not run the animation on mobile, you need to detect mobile devices and not create the Vivus instance in that case.\nI found a basic example to detect mobile devices in JavaScript on StackOverflow.\nThen updated your jsFiddle to let you have a look.\nI hope this helps.\nMax. The \"force rendering\" is something extremely heavy in terms of resources.\nSo if your SVG is complex it will have an important impact on your\nperformances.\nhttps://github.com/maxwellito/vivus/blob/master/readme.md#internet-explorer\n. Hi there,\nYou've been looking at the right thing : scenario mode. But it looks like it doesn't solve your problem. If you plan to draw back (or fade) a path before the end of the animation, Vivus got nothing built in to help you. You will have to hack Vivus. \nIf you provide a jsFiddle I can try to help you.. Hey Stefan,\nThanks for your PR! \nHowever I have a question. Why using const over let in this context? I thought const would be for storing primary types that should stay in stone. But my vision of constants is maybe outdated due to years of trauma doing C++ at uni :-D. You're completely right, and it's not the first time I see it. It's just me. I'm still not used to the idea of having an object in a const and call methods to it that will modify the object. To me, const is beyond locking the pointer, it's also about locking all the child values contained in that object. But I guess I'm an old grumpy cat that needs to evolve.. I'm afraid Vivus doesn't provide any events related to the progress of paths. \nHowever I took the challenge and tried to hack a little bit without touching the library. Here is what you can do.\n```js\n// Create your Vivus object\nnew anim = new Vivus('mySVG', ...);\n// Go through the mapping of the Vivus instance\n// and hook the progress property of every path\n// object. When the value 1 will be set (: progress complete)\n// it will call a function to let you do your magic.\n// This snippet must be right after the instance creation\nanim.map.forEach(function (pathObj) {\n  var progress = 0;\nObject.defineProperty(pathObj, 'progress', {\n    get: function () {\n      return progress\n    },\n    set: function (v) {\n      if (v === 1) callbackMagic(this)\n      progress = v\n    }\n  })\n})\n// Here is the function that will be called when a path is complete.\n// Feel free to hack it and do your stuff ;-)\nfunction callbackMagic (pathObj) {\n  // Do your magic here\n  // \n  // pathObj is an object containing few info\n  // pathObj.el : Path DOM element\n  // pathObj.length : line length\n  // pathObj.duration : animation duration in frames\n  // pathObj.startAt : animation start point\n  console.log(pathObj)\n}\n``. The Vivus constructor accepts a SVG DOM element. WhilequerySelectorAll` return a NodeList object. \nThe following should do the trick.\n```js\nvar myCallback = function () {};\n// Get your HTMLCollection of SVG to animate\nvar mySVGs = document.querySelectorAll(\".portfolio-svg svg\");\n// Go across them to create a Vivus instance\n// with each of them\nfor (var i = mySVGs.length - 1; i >= 0; i--) {\n  new Vivus(mySVGs[i], {duration: 3000, }, myCallback);\n}\n```. Hi there :)\nDo you get any errors from the console? I suspect the problem to be due to\ncross-origin issues.\n. Here it is. I think the file you try to load is invalid. You can can check\nyour SVG from the network tab. Make sure everything is right\n. Hi Will,\nYou are completely right. Unfortunately, Vivus doesn't accept a percentage of visibility to trigger the animation, it waits to be completely visible. However I have 2 options for you.\n\nTrigger the animation when you feel it's right by using .play()\nProxying Vivus.prototype.isInViewport to define when the animation is good to start. By default it's 1, but you can try with the following :\n\njs\nVivus.prototype.isInViewportProxy = Vivus.prototype.isInViewport;\nVivus.prototype.isInViewport = function (el) {\n  return this.isInViewportProxy(el, .5) // Please try with different values than .5\n}\nI should definitely make more tests about that and offer it as an option for Vivus constructor.\nI hope this helps.. Can you please provide a jsFiddle? And also some comments in your code.\nThanks\n. I'm afraid to not understand what you're trying to achieve. I get the following, is it not what you expect?\n\n. I think it's a restriction due to https or cross-domain policy. If you try locally with the SVG hosted on the same domain it should be all good.. It took me a while, but I got it. Add the property duration in your options with a crazy value, something like duration: 10000000. \njs\nvar vivus = new Vivus(this, {\n  start: 'manual',\n  duration: 1000000,\n  onReady: function (vivus) {\n    vivus.reset();\n  }\n});\nLet me explain, by default Vivus will set a duration of 200 frames. So when you update the progress, it will find the closest frame on this value. 200 is not enough, 1000000 should give you enough granularity. \nIt's now smoooooth :). Yes I do now, I think my mistake was to use your SVG inline instead of loading it dynamically. If you think this problem is identical to #198, is it ok to close yours and continue in the other issue? Thanks :). I'm afraid the library is fully working on the latest Chrome. I just tried on my machine with the exact version and the behavior is as expected.\n\nGo on the demo page\nOpen the console\nStop the intro animation : hi.stop()\nSet a frame progress : hi.setFrameProgress(.3)\n. Hi @pixedelic \nThanks for reporting, that look major. I think that's what @mittererr what talking about in the previous issue. I'm having a look right now. Thanks for setting up the demo page.. Ok, strange things are happening. I dunno why but Chrome doesn't update correctly elements contained in an Object tag. So, I did an update I wanted to do for a while but it can have some negative effects, it's to get rid of the object tag. In this version I load the SVG via XMLHttpRequest and put it in the DOM. It looks like it works like a charm. But I have the feeling that some other SVGs won't like it.\n\nhttp://maxwellito.github.io/drafts/vivus-198/index.html. Hehe thanks :)\nI'm thinking of SVGs with a fixed size or with embedded styling. Ill have\nto update the doc to explain the new behavior. But I guess Im too anxious\nto ship breaking changes.\nIf all works well Ill ship a new version tonight.\n. It's been 2 hours I try to provide a basic example for Chromium bug report, without Vivus, and everything works. Step after step I add stuff to mimic Vivus behavior and everything works. I'm going mad, but I'll find the problem.\nThe truth is out there.. I sorted it out! The problem was when the SVG is extracted from an Object tag. Chrome doesn't manipulate it correctly. I created a demo to reproduce the bug and created a ticket on Chromium.\nSo in the the end I forgot that the SVG wasn't sandboxed but part of the main DOM. The behavior is actually the same as with my fix. So I pushed to v0.4.4, it's live :). Thank you guys!\nBut special thanks @pixedelic and @mittererr for reporting the bug!\nThe Chromium team seems to be on it. I was surprised by their reactivity. Here is the bug ticket if you're curious.\nSo far, I think I can close this ticket. I'll reopen it if a problem come up.. Hello,\nYes, I think as part of a Vivus callback you are loading this\n'hqdefault.jpg' picture. Please make sure the URL is using https. Then your\ncontent won't be mixed anymore.\n. In /test/assets/js/embed/embed.js line 31. Change the URL protocol to\nhttps and the problem should be solved.\nOn Thu, 5 Jul 2018, 13:02 Mofizul Islam, notifications@github.com wrote:\n\nHi,\nIt was okay before adding SSL. After adding the SSL we're viewing it.\nYou're saying that \"Please make sure the URL is using https. Then your\ncontent won't be mixed anymore.\" Since we're viewing error after adding\nSSL/https, then how to we can solve it?\nHave another way? Where from we can edit the image URL?\nBR,\nMofizul\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/200#issuecomment-402699806,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABC-EDKTq7wXTMWEiGeJ7hnA7xQ93fx9ks5uDgBXgaJpZM4VDJhc\n.\n. Any updates?\n\nJust to make sure, 'embed.js' is a file in your website. Its not related to Vivus.\n. Hallo!\nSorry about the delay, got pretty busy recently. Thanks for your PR, it's pretty cool to get some help \ud83d\ude03 \nI'm aware of some paths not  being completely closed, it's unfortunately a browser behavior problem. To pass this problem, the option selfDestroy is available. This will remove the strokeDashoffset and strokeDasharray property to put the SVG back to start.\nHowever this PR changes aren't compatible with all the behaviors of Vivus. This will work only in the case of animating the SVG once and stop it there. However the library offer more and let users rewind, set the progress to specific percentage and other controls. For these cases, if strokeDasharray is resetted the controls will have no effects. \nIt's the reason why I can't merge your code to the repository as it is. But you can improve the existing one. If you check the destroy method used by the selfDestroy option, it's used only once the animation is complete, unlike yours is when a path animation is complete. Leaving no time to display the glitch, that is cool! So you might just need to check the if the selfDestroy option is on in the condition you added that remove the stroke dash properties ;-) And we should be good to go.\nI can help you on it if you want :)\nHowever thanks again for your PR!. Hi there,\nPlease follow the override of Vivus from this comment and add them in your vivus.js. They will override some methods of the Vivus prototype. You can notice them at the bottom of the custom vivus in the example you provided. \nThere are 2 conditions to make it work. The animation must be start: 'manual' and type: 'oneByOne'.\nIf you're using Webpack or Browserify, I would recommend you to create a separate file called vivus-custom.\n```js\n// Import Vivus\nimport Vivus from \"vivus\"\n// Apply the overrides\nVivus.prototype.next = function () {\n  if (this.currentStep === undefined) {\n    this.currentStep = 0;\n  }\n  if (this.currentStep === this.map.length) {\n    return;\n  }\n  this.currentStep += 1;\n  this.setMilestoneAndGo();\n};\nVivus.prototype.previous = function () {\n  if (!this.currentStep) {\n    return;\n  }\nthis.currentStep -= 1;\n  this.setMilestoneAndGo();\n};\nVivus.prototype.setMilestoneAndGo = function () {\n  if (this.currentStep) {\n    var currentPath = this.map[this.currentStep - 1];\n    this.milestone = currentPath.startAt + currentPath.duration;  \n  }\n  else {\n    this.milestone = 0;\n  }\nthis.play((this.milestone - this.currentFrame > 0) ? 1 : -1);\n};\nVivus.prototype.drawer = function () {\n  var self = this;\nif (Math.abs(this.milestone - this.currentFrame) <= Math.abs(this.speed)) {\n    this.currentFrame = this.milestone;\n    this.handle = null;\n    if (this.currentFrame >= this.frameLength) {\n      this.callback(this);\n    }\n  }\n  else {\n    this.currentFrame += this.speed;\n    this.handle = window.requestAnimationFrame(function () {  // I made a little change here\n      self.drawer();\n    });\n  }\n  this.trace();\n};\n// Then export your custom version\n// Ready to be used anywhere else\nexport default Vivus\n```\nThen follow this example to use it:\n```html\n Your placeholder for the SVG \n\n Your controls \nNext\nPrevious\n Le scripts \n\n\n  var obt = new Vivus('obturateur', {\n    file: 'obturateur.html',\n    type: 'oneByOne',\n    duration: 150,\n    start: 'manual'\n  });\n\n```\nI hope this will help you. Hi there,\nThanks for your PR, however I'm afraid I won't merge it. I know there a lot of package manager out there, and I don't feel like maintaining another one. This is why I focus only on NPM and make sure it's available on some CDNs. Some groups are watching the repo to republish it on other CDN, some even did their own repo to publish it on gem.\nAnd least but not the last, you changed the license to proprietary, I won't allow this :-D\n. Oupssiiieee... :-D\nGood spotting and thanks about the PR!. Please provide an example. JSfiddle or any other platform. Thanks.\n. Thanks for providing a URL to test. However, I'm afraid I couldn't reproduce it as intended. Over the first visits, IE triggered no errors and the animation was smooth. However after playing many times with your scrolling system I managed to get the same error. I think it's related to something else, too much magic happening. My guess is your scroll panel system looks like it create and delete content along the scroll. And at some point it tries to trigger the animation on a deleted SVG. The error appear only on IE because by default the forceRender is on this browser. Forcing to recreate each path element on something that no longer exists in the DOM.\nI retested the interactions from the manual tests on IE11 and didn't noticed any problem.. I'm afraid I can't help you more. The code of your page is minified and it's pretty hard to debug. This is also why I don't usually accept personal websites, but only sandboxed pages (from jsfiddle or custom gh-pages). Here is the example I provided to the Chromium team when I reported a bug.\nSo far the manuals tests are working on IE11, and I also managed to see the animation working on your page. So I can't consider it a bug.. Hi there,\nThanks for reporting a bug with all the information. However it's not a bug (or a feature ;-) it's just how the library works. Vivus make the animations on the border of shapes (aka strokes) and not on the fill color. This is also why I mention 'stroke based SVG' on the intro.\nI used the SVG you provided, changed the line 5 from <g>  to <g fill=\"none\" stroke=\"black\" >. You will see the visual aspect of the design is different. But this one Vivus can animate it.\nI hope this was helpful :). Hey @ricmann I might need more details. I didn't detected any issues recently, except the big issue on Chrome recently but it got fixed since.. Hey there,\nDon't worry about being a beginner :)\nThe third argument of the Vivus constructor is the callback for when the\nanimation is finished. This where you can show/hide your elements.\nnew Vivus('your-div', {/ your-options /}, function () {\n  // Everything here will be called when\n  // the animation finishes\n  document.getElementById('hello').style.display = 'none'\n});\nThis should do the trick :)\n. Hi there,\nI'm afraid Vivus is built for SVG drawing animation only. No methods will\nhelp with one of the listed effect. You might try and use a different\nlibrary for that. Maybe anime.js will help you in your quest :)\n. Hi Connor,\nThanks for asking and offering. PRs about grammar and typos are always\nwelcome. English is not my mother tongue :) I guess you wanted to review\nthe comments before method definitions, right?\n. Hi there,\nThanks for reporting a bug and providing a JSfiddle. However the result\nlooks the same in Chrome, Firefox and Safari. But I have error messages,\nfirst because Vivus wasn't included in the fiddle, aecond because the\nlinked SVG file is not existant.\nI realised Plunkr is more appropriate for Vivus because it allow us to have\ncustom files: try it here\nhttp://plnkr.co/edit/LgBin9Heuet2TSFM38TY?p=preview\n. Its because the SVG must be downloaded from a webserver, not file system.\nIts a browser security, otherwise any script could load and access content\nof any file on your hard drive, pretty dangerous right? :)\nCheck the URL protocol in your browser when you open your downloaded plunk.\nIt might be \"file://\" instead of \"http://\". So you need to serve your\ndowloaded plunk through a webserver. You can start one with python (python\n-m SimpleHTTPServer).\n. Hey there,\nSorry but I got a pretty busy weekend. I think I found a temporary solution\nto your problem. I'll come back with some details later tomorrow\nhttps://jsfiddle.net/r9wyxofv/\nLe sam. 8 d\u00e9c. 2018 \u00e0 13:07, rotellanomala notifications@github.com a\n\u00e9crit :\n\nDear Maxwellito,\nfirst of all, thanks for your script and sorry for my bad English,\nI'm an Italian graphic designer, not a developer, so I ask you sorry also\nfor what I will to submit.\nI'm working with your library for a webpage, playing some svgs, in\ndifferent ways, timings and delays.\nAfter playing successfully the first ones, I would like to draw an svg\nduring scrolling.\nThe issue is that works locally only with Safari,\nnothing happens with Firefox and Chrome,\nwhile it does not work on the network with any browser,\nI'm quite sure the problem is my script, I'm not a developer\nand I would like to ask you an help.\nHere's the link to a simplified part of my project.\nhttps://jsfiddle.net/rotella/Lfqrzpod/\nThanks in advance for your help,\nalberto.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/211, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABC-EOE6mrsr1fmPFN1HyE-2NnoYTaJJks5u27mZgaJpZM4ZJoTP\n.\n. Brilliant then :) You were pretty close, you were listening on the wrong\nevent. The event 'scroll' is triggered when the target is scrolled, but the\nbody of your page is not big enough for scrolling. But the event 'wheel' is\nused when the user use the wheel on the target.\nEnjoy then :)\n\nIf you have more questions, don't hesitate\n. The CSS change I did was something I forgot to remove. It's not even valid. You can get rid of it. Only the event type is important :)\nSo, all good now?. ",
    "mdibaiee": "Okay, I made some test cases:\nI noted that the NaN problem only exists in oneByOne and all the numbers are calculated normally in default type, but the animation doesn't run anyway.\ndefault type: http://jsfiddle.net/mdibaiee/tmrahwtc/1/\noneByOne type: http://jsfiddle.net/mdibaiee/tmrahwtc/2/\n. I asked Mozilla IRC channel to confirm this bug, they said it's been fixed in the latest Nightly (mine is a little old, haven't updated in a while), I'll try to update and test it as soon as I get time to and get back to you.\nAbout your question, not really sure, but 1 is the best by far.\nThanks\n. ",
    "flyingfisch": "Would doing it onload also fix it?\n. OK, just tried putting this in the head section and it works.\n<script src=\"js/vivus.min.js\"></script>\n        <script type=\"text/javascript\" charset=\"utf-8\">\n            function init() {\n                var monitor = new Vivus('svg2', {type: 'oneByOne', duration: 200, start: 'autostart'});\n            }\n            window.onload = init;\n        </script>\nJust in case that helps anyone. ;)\n. Ah, I see.\n. Yes I am, is it an Fx issue?\n. I see.\nWell, in case it helps, I developed a workaround from this answer on StackOverflow (just add it to the head section of your HTML):\n```\n\n\n    function isScrolledIntoView(elem) {\n        var docViewTop = $(window).scrollTop();\n        var docViewBottom = docViewTop + $(window).height();\n        var elemTop = $(elem).offset().top;\n        var elemBottom = elemTop + $(elem).height();\n        return ((elemBottom &lt;= docViewBottom) &amp;&amp; (elemTop &gt;= docViewTop));\n    }</p>\n<pre><code>function init() {\n    var monitor = new Vivus('monitor', {type: 'oneByOne', duration: 200, start: 'manual'});\n    var followText = new Vivus('follow-text', {type: 'async', duration: 100, start: 'manual'});\n\n    $(window).on('scroll', function() {\n        if (isScrolledIntoView($('#monitor'))) {\n            monitor.play();\n        }\n    });\n}\nwindow.onload = init;\n</code></pre>\n<p>\n```\nIt does use jQuery, so you'll need to include that too.\n. No problem, it works great for me in Fx 33.0\n. Seems to be working well now :)\nJust a quick question before you close the issue... would it be possible to make the SVGs reset when the SVG leaves the viewport so that every time they come back into view they are redrawn?\n. Understood. I had tried doing it manually but couldn't get it to work the way I wanted it to so I just gave up. If I try again and get it to work I'll post my code. ;)\n. No problem.\nI was actually afraid that I had worded my pull request in a way that would insult you, but I just want to help the project.\nI plan to work on readme.md sometime later today or tomorrow.\n. You have to embed the SVG into your HTML. Either open the SVG with a text editor and copy/paste it, or make your file PHP and use an include like so:\n<?php include('image.svg') ?>\nIf you do the latter, remember to either strip off the <?xml ... line in the SVG, or disable short tags in your php.ini.\n. Yeah, I know, I wanted to keep my HTML clean too, but you can't mess with the SVG with JS unless it is inline.\nThe PHP include keeps the source code clean though. ;)\n. SVGInjector looks interesting, I'll have to try it out sometime.\n. what is your code?\n. Well, I guess we could start with that. Do you have any dotted lines in your svg, and are all the objects paths (no rects, circles, etc)? \n. Tested in Fx 34.0 on Ubuntu 14.04, seems to be working fine. What Fx version and OS are you using?\n. Just for the record, opacity has better cross-browser compatability than inline SVG does. ;)\n. Hmm, that site doesn't seem to be loading for me... I get my default ISP not found page instead.\n. Yep, seems to be down according to this too: http://www.downforeveryoneorjustme.com/www.moniquemaloney.com\n. ",
    "wallies": "Can confirm it works in Fx 33.0 and Fx 35.0a2 developer edition.\n. ",
    "lipis": "That's why there are releases :) I could already include it in my project as a dependency and when it's done it will come automagically!!\n. Awesome! Thanks.. :dancer: \n. :dancers: :dancer: :dancers: \n. You should also make a release: https://github.com/maxwellito/vivus/releases 0.1.0 is a good start :)\n. ",
    "shivajivarma": ":+1: \n. ",
    "B3rn475": "Great. Thank you.\n. Great. Thank you.\n. ",
    "stewsmith": "Thanks for the super fast response! I was trying to keep my html clean, but putting the SVG inline is an option too.\n. ",
    "MattiSG": "Thanks for this answer. I think this should be documented in the main page / README, as there are many different ways to display SVG, and inline is probably the less often used for it's a bit dirty.\n. This could perhaps be loaded dynamically with https://github.com/iconic/SVGInjector\n. > Can you please try it and tell me what you think?\nWithout having looked at the code, I can say that the naming is not very clear. What about easing: Vivus.EASE_OUT rather than animTimingFunction: Vivus.TIMING_EASE_OUT?\n. Either we want to look like CSS and should use animationTimingFunction, or we want to be more specific and use ease.\nFor the value itself, being akin to CSS would mean naming it EASE_OUT.\nI think I'd prefer ease: Vivus.ease.OUT, since the rest of the API does not mimick CSS.\n. I'm being nicely told by @Flightan that's because I didn't read well enough and had a fill property.\nSwitching to fill=\"none\" stroke=\"#000\" indeed does the trick.\nSorry for the annoyance  ;)\n. ",
    "timelyportfolio": "for reference, I found this also http://benhowdle.im/deSVG/ and its Github repo https://github.com/benhowdle89/deSVG\n. this is really nice.  I've been planning to build a R htmlwidget wrapping Vivus, and this would be a killer feature.  I wondered what would be the timeline for including this?  Thanks so much for all of your work on Vivus.  I love it.\n. ",
    "muminoff": "Haven't look at your other pull requests yet. I just stopped at Readme.md. Welcome !\n. ",
    "Davidmarcell": "Cheers!\nOn 25/11/2014, at 11:09 pm, maxwellito notifications@github.com wrote:\n\nI guess you'e asking something like the easing option from Walkway\nAt the moment the library cannot make this kind of effect, but this is something which can be implemented. I'll try to find a way to add this feature without make the code heavier.\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "Spica2": "put after line 282 the callback this.callback(this);\nthen the callback is also fired at the end of rewind\n. This would give you more controll. But depends on where you wanto go with vivus and how complex it should get.\nBtw.: An option for rewinding from start to end instead from end to start could also be nice. \nline 322\njavascript\npath.el.style.strokeDashoffset = Math.floor(path.length * (0 - progress));\nvs \njavascript\npath.el.style.strokeDashoffset = Math.floor(path.length * (1 - progress));\n. you mean the svg?\n. 2 circles\na lot of paths\nhttp://goo.gl/lQ88H8\n. FF 31 and 34 OSX. Same problem. Any idea, what FF is doing differently? Would cleaning the paths points help? Closed paths? About 20% of the paths get a length. But I have no idea, how they differ to the ones without length recognition.\n. So, I managed to improve the ff animation by rearanging the beziers. But still have some issuis. And can not tell, what exactly makes ff break on certain paths codes.\n. guess you mean something like this: http://codepen.io/GreenSock/pen/jEEoyw\nwould be nice, to have this integrated.\n. ",
    "Skalkaz": "There is a massive problem with ff 34 (win7). The reset() method does not delete the svg properly, instead leaves lots of dots on the area. This unpleasant behaviour is in the main demo of vivus (http://maxwellito.github.io/vivus/) there are two dots around the letter t in \"Hi there\".\nAs a workaround what if you set all strokeWidth to zero in reset method?\n. ",
    "kostya2c": "Most likely I am missing something... \nhttp://jsfiddle.net/77xozy2j/\nThank you.\n. I knew too much copy-paste will set me up one day. :)\nThank you.\n. ",
    "dokmeh": "tnks.i have the same problem :)\n. ",
    "sanderha": "Well for example if I wanted to animate a svg version of Githubs logo. I wouldnt want to convert it to strokes, i want to use the logo as it normally looks, with a fill color. \nMaybe it fill attributes could just fade in. At the moment im having a hard time seeing how the fill attribute could be animated though..\nSorry for my bad english, it isnt my native language :)\n. Yeah some like that indeed, could be cool\n. Very cool! Not sure about how browser compatible fill-opacity is though.\n. ",
    "enricobacis": "Wonderful!\n. ",
    "asaeed": "Hey thanks for the quick reply.  I ended up converting text to paths in Inkscape and that worked great with vivus.  I see what you mean about not being able to control each letter independently to achieve delayed or one-by-one effect, but maybe you could support text if people put each letter in a separate text field?  just an idea for when you are thinking of extending new features.  in any case, awesome fun lib - thanks!\n. ",
    "charliewilco": "try again?\nOn Wed, Jan 28, 2015 at 10:00 PM, Mark Fischer, Jr.\nnotifications@github.com wrote:\n\nYep, seems to be down according to this too: http://www.downforeveryoneorjustme.com/www.moniquemaloney.com\nReply to this email directly or view it on GitHub:\nhttps://github.com/maxwellito/vivus/issues/23#issuecomment-71961043\n. that totally worked thanks so much.\n. \n",
    "jordif": "Hi,\nthanks for the quick reply.\nActually the error happens on your demo page as well (only when using Opera browser).\nHave you tested the demo in Opera?\nthanks again!\nJordi\n. Linux. \nHope you find a fix :)\n. Awesome! Glad you could sort it out!\n. ",
    "jolic": "My tests shows some problems too with Safari on Mac. I haven't tested this in other browsers but here's my solution:\nI load a svg via  from an exernal file like:\nYour browser does not support SVG\nVivus can't work in this as the element is (onLoad) an SVGSVGElementConstructor.\nSo change vivu.js on line 43 + 332 from:\nif (element.constructor === SVGSVGElement) {\nto\nif ( _checkElm(element) ) {\nand on the top of your js file directly after \n'use strict';\n(function () {\nput this function:\nvar _checkElm = function(elm){\n    if (elm.constructor === SVGSVGElement) {\n        return true;\n    }\n    if ( typeof elm === 'object' && typeof elm.nodeName !== 'undefined' && elm.nodeName.toLowerCase() === 'svg') {\n        return true;\n    }\n    return false;\n};\nSo with this little patch you could directly address an svg by dom.\nHTH somebody\n. <object type=\"image/svg+xml\" data=\"./lens.svg\" >Your browser does not support SVG</object>\n^^this is the source (didn't show up in the comment above)\n. @maxwellito \nYes, with my patch vivus works with an <object>tag!\nThe benefit is that you can keep the svg file as an external reference and the svg can have javascript code inside the svg file which is executed onload. So we have one point where you can have the markup for the graphic and the animation logic.\nI'm preparing a fork to show some examples.\n. hi, i've made a patch:\nhttps://github.com/jolic/vivus/tree/master/_PATCH\nbtw... how can i create a page on github to show the html file directly?\n. Good. ;)\nIn my opinion all logic to control a graphic should reside inside the graphic as we can do this with SVG. See the SVG graphic as a class. The SVG provides some methods to control whatever you want to do with it. Like a Flash SWF where you can define methods which are available from outside.\nSo, if the SVG needs the Vivus js file or whatever it should import it, not the referencing page which uses the SVG. And the SVG should deliver methods to control the graphic.\nHave a look at a simple watch as SVG. With SVG you can animate the second, minute and hour with SVG or JS inside the SVG. What if you want to display a custom timezone? The better way is to put the logic to position the elements within the SVG. So, with this example you could do something like this (in pseudo code):\n```\nmy.html:\n\n-import svg\n-js: \nsvg=get the svg onload;\nsvg.getElm().setTime({ datetime:'2015-02-19 09:05:02', title:'Paris' }).start();\nsvg.getElm().stop()...setTheme('xyz')...orwhatever()...\nclock.svg:\n-import all needed js stuff or write your own inside\n-all logic to animate/manipulate\n```\nWith this you have one point of code for the manipulation which is loaded within the SVG and the graphic works alone (as long as it's placed as <object>).\nThanks\n. just added another example with Vivus.prototype.setStrokeColor\nhttps://github.com/jolic/vivus/tree/master/_PATCH\n. I made a github page http://jolic.github.io\nI will not spam you here anymore. ;)\nIf you need help in node/JS contact me....\n. It's not a vivus issue!\nChange your line to:\n...\n$('#p').css({opacity:1});\n...\n. without this vivus won't work on an <object>.\nsee\nhttp://jolic.github.io/#vivus\n. The first condition is for a svg element which is placed directly in the html.\nThe second for an object where the svg is loaded and the onload event is fired...\n. Ah, now I unterstand where the problem is.... ;)\nOk, the patch is for everybody who is loading vivus in the html file! To clarify:\nIf vivus is loaded inside the svg you don't need the patch.\nBut, if you load vivus in the html and you want to show the svg within an <object>vivus won't work without the patch. This is because you wrote vivus to look for an id of the DOM and then vivus checks if this is a SVG element. Your checking function returns false as the id or element is an <object>!\nWith my patch you can do:\nA) Load vivus inside the html and add a graphic with <svg>\nB) Load vivus inside the SVG and show it inside the html with <svg>\nC) Load vivus inside the html and add a graphic with an external SVG with a placed <object>\nC won't work without the patch.\nIf you look at the example I wrote at http://jolic.github.io you'll see that I used example C.\nSee the source of \nhttp://jolic.github.io/assets/svg/lens-with-external-vivus.svg\nMy intention was that I wanted vivus to work with a SVG which is loaded as external source.\nThis works with an <object>and the great benefit of this is that I can put the logic to control the graphic inside the SVG.\nThe JS source of the vivus example which you can see @ http://jolic.github.io is an example how you can call methods or control vivus which is loaded from the SVG inside the calling html from outside.\nHTH\n. BTW I've added some methods inside the patch. For example\nVivus.prototype.setType\nWith this method you can do for exmaple\nsvgDOM.Vivus.setType('oneByOne').play(-2)\nmeans: when the animation is finished I can change the type of the animation.\nVivus.prototype.setStrokeColoris an example. \nMaybe this is helpful too...\nsvgDOM.Vivus.setStrokeColor('#fa0')\n. Ok.\nI've made a lot of changes to the vivus js class especially on the constructor that the svg is working with an <object> element as external graphic.\nThe SVG https://github.com/jolic/vivus/blob/master/_PATCH/svg/hi-there.svg is the original SVG from your source as a external file.\nSo, now it's possible to call the vivus as you want:\n<html>\n<svg id=\"mySVG\">...</svg>\n...\na = new Vivus(\"mySVG\",...);\n...\n</html>\nor\n<html>\n<object id=\"mySVG\" data=\"pathToMySVGFile\">...</object>\n...\na = new Vivus(\"mySVG\",...);\n...\n</html>\nsee\nhttps://github.com/jolic/vivus/blob/master/_PATCH/js/vivus-patched2.js\nand the example\nhttps://github.com/jolic/vivus/blob/master/_PATCH/patch-test2.html\nTo include the vivus file inside the SVG file is working as i described in the previous example.\nHope that explains it...\n;)\n. Oh, btw... it would be better to do:\nthis.el = this.setElement(element);\n...use this.el\nthan\nthis.setElement(element);\n...use this.el\n. If you use a external svg file you must set\ndata-async=\"\"\nand not\ndata-async\nThe browser throws an error if an empty attribute is omitted.\nSee svg specs.\nFyi.\n. Thank you. ;)\nAccording to http://en.wikipedia.org/wiki/DOM_events the load event\"...fires when the target element and all of its content has finished loading\".\nThe only problem i see in the current state of the concstructor is that in case of var a = new Vivus(...) a could be undefined (or anything else, depends on how ais defined) when the SVG isn't loaded yet when you call `a``. (could be when the internet connection is slow, the html and js was processed but the SVG not).\nMaybe it would be better to add a queue like mechanism in the public methods to call the methods when Vivus is ready to use them. Consider following example:\nhtml\n<html>\n<object id=\"mySVG\" data=\"pathToMySVGFile\">...</object>\n...\na = new Vivus(\"mySVG\",...);\na.play();\n...\n</html>\na.play() could fail because the SVG isn't loaded yet (maybe).\nHowever, I would recommend to implement the object stuff so that everybody could use it.\nBTW: The patch i wrote was a fast example, here is a better one:\n``` js\nvar isReady = false;\nfunction Vivus (element, options, callback) {\n    var self = this;\n    this.setElement(element);\n    var _init = function(){\n        // Setup\n        self.setOptions(options);\n        self.setCallback(callback);\n        // Set object variables\n        self.frameLength = 0;\n        self.currentFrame = 0;\n        self.map = [];\n        new Pathformer(element);\n        self.mapping();\n        self.starter();\n        isReady = true;\n        if ( typeof options.onReady !== 'undefined' && typeof options.onReady === 'function'){\n            options.onReady(this);\n        }\n    };\n    if ( this.el ) {\n        switch ( this.el.nodeName.toLowerCase() ){\n            case 'object':\n                this.el.addEventListener('load', function(e){\n                    element = e.target.contentDocument;\n                    var svgElements = element.getElementsByTagName('svg');\n                    if ( 0 === svgElements.length ) {\n                          throw new Error('Vivus: there is no  element in this .');\n                    }\n                    else {\n                        element = self.el = svgElements[0];\n                        _init();\n                    }\n                });\n                break;\n            case 'svg':\n                _init();\n                break;\n            default: // no supported element\n                throw new Error('Vivus can\\'t work on this type of element.');\n        }\n    }\n}\nVivus.prototype.isReady = function(){\n    return isReady;\n}\n```\nSo, if somebody want to use an <object>and want to be sure his function is called when the SVG is loaded he could do:\njs\nvar myCallbackOnReady = function(_vivus){\n    // use _vivus or a and do some stuff\n};\nvar a = new Vivus( ...,{ onReady: myCallbackOnReady },... );\nA better callback and/or queue management system inside Vivus would be great, for example:\nvar onVivusReady = function(_vivus){\n    _vivus\n        .start()\n        .catch(function(err) {\n            alert('Uhh oh.. Vivus error: '+err.message);\n        })\n        .then(function(){\n            //_vivus.rewind()...\n        })\n        .then(function(){\n            //do other stuff\n        });\n};\nvar a = new Vivus(...., { onReady: onVivusReady } ,....);\nHere is a nice article about the technique:\nhttp://www.html5rocks.com/en/tutorials/es6/promises/\nThe promise stuff is a neat thing but not necessary as this would blow up Vivus and is not in focus for the functionality.\nHope this helps\n. Oh...one thing:\nYou could write \njs\n...\n        if ( typeof options.onReady !== 'undefined' && typeof options.onReady === 'function'){\n            options.onReady.call(this);\n        }\n...\nin the html js code thisrefers to the Vivus instance:\njs\nvar myCallbackOnReady = function(){\n    // \"this\" is the Vivus instance!\n   this.play(); // for example\n};\nvar a = new Vivus( ...,{ onReady: myCallbackOnReady },... );\nMaybe this is better...\n. Oh there was an error:\njs\noptions.onReady.call(this);\nhave to be\njs\noptions.onReady.call(self);\nnow \"this\" refers in the callback function to the Vivus instance.\n\nAnd I've added another feature. ;)\nNow you can refer to an element where no <object> or <svg> is placed inside the html.\nWith this we can use Vivus as we want - we have 3 possibilities to use Vivus:\nA) a placed <svg> inside the html\nB) a placed <object> inside the html\nC) any DOM element with an id\nhere is an example how we can call Vivus in case of C):\n``` js\n...\n    \n...\nvar myCallbackOnReady = function(){\n    console.log('**** myCallbackOnReady on created <object> ****');\n    this.play(); // \"this\" is the Vivus instance\n};\nexternSVGviaJS = new Vivus(\n    'showMySVGInsideThisElement'\n    ,{\n         type   :'delayed'\n        ,start  :'manual'\n        ,duration: 200\n        ,file   :'svg/hi-there.svg'\n        ,onReady: myCallbackOnReady\n    }\n    ,myCallback3\n);\n\n```\nIn this case Vivus checks if options.file is set and if so Vivus creates an <object> and adds this to the element with the DOM id.\nPlease have a look at the source (especially the constructor):\nhttps://github.com/jolic/vivus/blob/master/_PATCH/js/vivus-patched3.js\nand the example\nhttps://github.com/jolic/vivus/blob/master/_PATCH/patch-test3.html\n;)\n@timelyportfolio\nhtmlwidgets for R looks great. Do you have any links with some tutorials on this?\n. @maxwellito \nDon't worry about the same domain policy. Everbody who wants to use this have to know about it. \nMy intention to include the logic to support <object> is that i can use javascript inside the <svg>.\nThat's all.\nAnd on the other side I don't like to blow the html with graphics like <svg>....</svg>. \nBetter is to refer to an external graphic. If I need to change the graphic I don't need to touch the html.\nSimple as that.\n;)\nHTH\n. Thank you. ;)\nNow here is my last patch [ for today? ;) ]:\nI've added a 4th possibility to use Vivus:\nUse Vivus on an element that is created via js directly:\n``` js\n...\n    var myElement = document.createElement('span');\nvar appendMyElementToThisElm = document.getElementById('showMySVGInsideThisElement2');\n\nappendMyElementToThisElm.appendChild( myElement );\n\n/ myElement is a created DOM element with js /\nexternSVGviaJS2 = new Vivus(\n    myElement\n    ,{\n         type   :'delayed'\n        ,start  :'manual'\n        ,duration: 200\n        ,file   :'svg/hi-there.svg'\n        ,onReady: myCallbackOnReady2\n    }\n    ,myCallback4\n);\n\n...\n```\nWith this you could use Vivus without any DOM element inside the html.\nsee\nhttps://github.com/jolic/vivus/blob/master/_PATCH/js/vivus-patched4.js\nand example D at\nhttps://github.com/jolic/vivus/blob/master/_PATCH/patch-test4.html\nI've just changed the _checkElm function and added.\njs\n...\n    if ( elm instanceof HTMLElement ) {\nconsole.warn('_checkElm passed on HTMLElement');\n        return true;\n    }\n...\nI've created the _checkElm function because Vivus and Pathformer are looking for a valid element.\nI've also added a reference to the Pathformer instance:\n``` js\n...\n... in constructor:\n        self._PathformerInstance = new Pathformer(element);\n...\nVivus.prototype._PathformerInstance = null;\n...\n```\nPlease let me know when you've merged the code that i can see it.\nIn fact you need to take my test page https://github.com/jolic/vivus/blob/master/_PATCH/patch-test4.html and import your Vivus js file.\nThere are all current available possibilities shown to use Vivus.\n. and please use https://github.com/jolic/vivus/blob/master/_PATCH/svg/hi-there.svg as I've replaced\nhtml\ndata-async\nwith\nhtml\ndata-async=\"\"\n. here's the current code of the constructor, fyi:\n``` js\n...\nvar isReady = false;\nfunction Vivus (element, options, callback) {\n    var self = this;\n    this.setElement(element);\n    var _init = function(){\n        // Setup\n        self.setOptions(options);\n        self.setCallback(callback);\n        // Set object variables\n        self.frameLength = 0;\n        self.currentFrame = 0;\n        self.map = [];\n        self._PathformerInstance = new Pathformer(element);\n        self.mapping();\n        self.starter();\n        isReady = true;\n        if ( typeof options.onReady !== 'undefined' && typeof options.onReady === 'function'){\n            options.onReady.call(self);\n        }\n    };\n    var addLoadEventOnElement = function(){\n        self.el.addEventListener('load', function(e){\n            element = e.target.contentDocument;\n            var svgElements = element.getElementsByTagName('svg');\n            if ( 0 === svgElements.length ) {\n                  throw new Error('Vivus: there is no  element in this .');\n            }\n            else {\n                element = self.el = svgElements[0];\n                _init();\n            }\n        });\n    };\n    if ( this.el ) {\n        switch ( this.el.nodeName.toLowerCase() ){\n            case 'object':\n                addLoadEventOnElement();\n                break;\n            case 'svg':\n                _init();\n                break;\n            default: // no supported element or create one\n                if ( typeof options.file !== 'undefined' ) {\n                    var objElm = document.createElement('object');\n                    objElm.setAttribute('type', 'image/svg+xml');\n                    objElm.setAttribute('data', options.file);\n                    this.el.appendChild(objElm);\n                    this.el = objElm;\n                    addLoadEventOnElement();\n                } \n                else {\n                    throw new Error('Vivus can\\'t work on this type of element.');\n                }\n        }\n    }\n};\nVivus.prototype.isReady = function(){\n    return isReady;\n};\nVivus.prototype._PathformerInstance = null;\n...\n```\nand the _checkElm function:\njs\n...\nvar _checkElm = function(elm){\n    if (elm.constructor === SVGSVGElement) {\n        return true;\n    }\n    if ( typeof elm === 'object' && typeof elm.nodeName !== 'undefined' && elm.nodeName.toLowerCase() === 'svg') {\n        return true;\n    }\n    if ( elm instanceof HTMLElement ) {\n        return true;\n    }\n    return false;\n};\n...\n. So, now we are able to call Vivus in the following ways:\nA)    placed svg inside the html (with <svg id=\"mysvg\">...</svg>):\njs\n        new Vivus( 'mysvg', ...);\nB)    placed extern svg as <object id=\"externsvg\" type=\"image/svg+xml\" data=\"svg/hi-there.svg\"></object>:\njs\n        new Vivus( 'externsvg', ...);\nC)    placed extern svg as created <object> inside an html element (with for example: <span id=\"putSVGhere\"></span>):\njs\n        new Vivus( 'putSVGhere', {...file:'svg/hi-there.svg'...});\nD)    placed extern svg as created <object> inside an with js created html element:\njs\n        var myElement = document.createElement('span');\n        /// append myElement to any element in DOM\n        new Vivus( myElement, {...file:'svg/hi-there.svg'...});\nE)    import Vivus directly inside the svg and use it there\n``` js\n        (inside SVG file, for example):\n        \n\n\n                ...\n            \n\n            &lt;![CDATA[\n                var myVivus = null;\n                var onLoad=function(evt) {\n                    myVivus = new Vivus('group',...);\n                };\n            ]]&gt;\n            \n    </svg>\n\n```\nF)    import Vivus directly inside the svg and set a reference to the created Vivus instance for the parent object (document):\n``` js\n        (inside SVG file, for example):\n        // same code as E) but with following addition\n        document._SVG={\n             getElement     : function(){ return evt.target; }\n            ,Vivus          : myVivus\n            ...\n        };\n    ---\n    (inside the html):\n    <object id=\"svg_C\" type=\"image/svg+xml\" data=\"svg/hi-there.svg\"></object>\n    ...\n    document.getElementById('svg_C').addEventListener('load', function(e){\n        var doc = e.target.contentDocument;\n        // do stuff with doc._SVG.Vivus (<- instance of Vivus which is created inside the SVG)\n    }, false);\n    ...\n\n```\nFor every usage of Vivus I would recommend to use the onReady option as this is called definitly when Vivus is ready to be used in any circumstances.\nIn example E) and F) the Vivus js file is loaded from the SVG file.\n. Why not?\njs\n...\n<span id=\"putSVGhere\"></span>\n...\nnew Vivus( 'putSVGhere', {...file:'svg/hi-there.svg'...});\n...\nThe code to handle this is a snap and if you need to style the object that's easy:\n``` css\nputSVGhere object{\nbackground:red;\n\n}\n```\nIf you patched the file with the listener for the <object> then there's only the dom creation left:\njs\n         var objElm = document.createElement('object');\n         objElm.setAttribute('type', 'image/svg+xml');\n         objElm.setAttribute('data', options.file);\n         this.el.appendChild(objElm);\n         this.el = objElm;\n         addLoadEventOnElement();\nAnd you'll give the developers the freedom to decide how they want to use Vivus...\nMy 2 cents.\n. Nothing to be afraid of. ;)\nI wouldn't go into this so deep. \nMeans: If you implement the above and the possibility to start Vivus with an created DOM elm (see example D @ https://github.com/jolic/vivus/blob/master/_PATCH/patch-test4.html and the js @ https://github.com/jolic/vivus/blob/master/_PATCH/js/vivus-patched4.js) we have all options to change everything we want. It's simple: just add in _checkElm\njs\n    if ( elm instanceof HTMLElement ) {\n        return true;\n    }\nThats all.\nWith this we could do\n``` js\n    var myElement = document.createElement('div');\n    // ...code to append myElement anywhere you like\nvar v = new Vivus( myElement ,{ file:'svg/hi-there.svg' } );\n// \"<object>\" is appended to myElement which loads the svg\n\n```\nAnd now every developer could add and do whatever he likes.\n. All I'm writing about the code is for the view to be as flexible as we can without to blow up the code.\nI mean the patch i wrote has a big benefit that Vivus works on the <object> element too.\nThe adiitions I wrote gives all of us the flexibility to use Vivus in any circumstances.\nA Webdesigner would prefer to add the graphic as a <svg>...</svg> directly into the html and call Vivus with a simple line in js.\nAnother would prefer to use an <object> as Javascript inside the SVG is processed by the browser. Have a look at some projects which are creating icons in SVG and the icons resizes automatically and look different. (In my opinion: this technique will be the future as we don't have to create 5000 different SIZE versions of the graphics).\nA pure fontend and/or backend developer who is creating a dashboard would like that the logic of his code has the control to add SVG element but he likes to use Vivus without \"getElementById\".\nThese examples are only a couple of possible usage scenarios.\nBut all this is possible without to write spaghetti code or a workaround to use Vivus in their environment. \n. And for the fallback thing, there are simple solutions for this:\nA) add a {...content:'<img src=\"imageToShowIfNotSupported.jpg\"/>'} and set objElm.innerHTML = options.content;\nor\nB) don't add A) and do in css\ncss\ndiv.insideThisVivusAddsAnObject {\n    background: url( path/to/imageToShowIfNotSupported.jpg );\n}\n...\nthat's all\n. I've made a patch on 0.2.0 that everything is working with the features of above:\nExample:\nhttps://github.com/jolic/vivus/blob/master/_PATCH/patch-test-DEV-0.2.0.html\njs files:\nhttps://github.com/jolic/vivus/tree/master/_PATCH/js/dev\npatched version 0.2.0:\nhttps://github.com/jolic/vivus/blob/master/_PATCH/js/dev/vivus-0.2.0_PATCH.js\ndiff:\nhttps://github.com/jolic/vivus/blob/master/_PATCH/js/dev/diff.txt\nHope, that's ok... please have a look...\n. Better view of the diff:\nhttps://github.com/jolic/vivus/commit/278b41e23dcaf18c247f66c7685a684757b2bb3c#diff-cfc0807b305cf24b09d85b957362847f\n. Thanks! ;)\nWill look at the hacks to show a way where we could use a js created DOM elm to append a SVG when I have some time.\n...would be nice to mention all the guys who helped to get Vivus better on https://github.com/maxwellito/vivus under a section \"Thanks\" at the bottom. ;)\n. ;)\nI would like to add a patch where we can use Vivus also without getElementById().\nTherefore D is nice to be as flexible as we can without to blow the code...\nWill make it when I have some time...\ncu\n. Very nice. Thanks!\n. On the main page @ section \"Debug\" you write \"...If you're using Google Chrome, I recommend you use console.table...\".\nI would write \"...If you're using a modern browser, I...\" as on Safari and Firefox console.table is available too.\n. Maybe better:\n``` js\nVivus.prototype.mapping = function () {\n  var i, paths, path, pAttrs, pathObj, totalLength, lengthMeter, timePoint;\n  timePoint = totalLength = lengthMeter = 0;\n  paths = this.el.querySelectorAll('path');\nfor (i = 0; i < paths.length; i++) {\n// added\n    if ( \"none\" === paths[i].getAttribute(\"stroke\") ) continue;\n// /added\n    path = paths[i];\n    pathObj = {\n      el: path,\n      length: Math.ceil(path.getTotalLength())\n    };\n    // Test if the path length is correct\n....\n```\n. That's definitly better.\n. about the children stuff we could check inside the isInvisible method if the current element is not visible and if so, mark all children with data-vivus-ignore=\"true\", example:\n``` js\nVivus.prototype.mapping = function () {\n  var i, paths, path, pAttrs, pathObj, totalLength, lengthMeter, timePoint;\n  timePoint = totalLength = lengthMeter = 0;\n  paths = this.el.querySelectorAll('path');\nfor (i = 0; i < paths.length; i++) {\n// added\n    if ( this.isInvisible(paths[i])) {\n      var childNodes = paths[i].childNodes;\n      if ( childNodes.length > 0 ) { // mark all children of current element as to be ignored\n          for ( var j = 0; j < childNodes.length; j++ ){\n               j.setAttribute(\"data-vivus-ignore\", true)\n          }\n      }\n      continue;\n    }\n// /added\n    path = paths[i];\n    pathObj = {\n      el: path,\n      length: Math.ceil(path.getTotalLength())\n    };\n```\n. ups, typo mismatch.... should be:\njs\n...\n          childNodes[j].setAttribute(\"data-vivus-ignore\", true);\n...\n. js\nnew Vivus('animation', {\n  file: '/image.svg',\n  type: 'async',\n  attr:{\n      width: '100%'\n  }\n});\nany key in attr is added to the svg element which is added to the DOM.\nI don't see a problem to add this as there are a lot of attributes for a SVG:\nhttps://developer.mozilla.org/de/docs/Web/SVG/Attribute\n. ",
    "fantic": "Pls stop spam me\nDne \u00fater\u00fd 17. \u00fanora 2015 jolic notifications@github.com napsal(a):\n\n@maxwellito https://github.com/maxwellito\nYes, with my patch vivus works with an tag!\nThe benefit is that you can keep the svg file as an external reference and\nthe svg can have javascript code inside the svg file which is executed\nonload. So we have one point where you can have the markup for the graphic\nand the animation logic.\nI'm preparing a fork to show some examples.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/24#issuecomment-74668066.\n. \n",
    "Techno-Tut": "here is the link :https://www.mediafire.com/?dv1ypot2ybtt58z\nthere are two files doing same thing they fade in the text after animation. but the JavaScript make it seems correct but jquery does nothing. \n. Thanks it works and sorry for  this.\n. ",
    "mg": "Happy to.\nI've completely moved to Webpack (http://webpack.github.io/) for client code. So in my starting js file for the browsers I require a package (or use ES6's import) that requires more packages etc. Webpack (this applies to browserify (http://browserify.org/) as well) parses the starting js file and from there builds all the required/imported files into one javascript file (usually called bundle.js). \nThe index.html then simply includes this js file the old way (using script tag). \nThe insane thing about Webpack is that you are not restricted to including just js files. It handles css files, less files, sass files, svg, json, text files, almost everything (even images encoded on the fly as Base64) and bundles it all into one js file that you include in your html. \nSo if you want to use something from the npm world in your client code (presuming that the npm package doesn't depend on something that isn't available in the browser environment, like a MySQL database) you just install it with npm and then require it in the js file you are using it and Webpack will take care of the rest.\n. Not sure, don't have that much experience with publishing packages to npm. But I'll have a better look at it tomorrow, going to sleep now (GMT+0)\n. Ok so first thing you need to do is build a CommonJS version of your code and put it into e.g. dist/vivius.node.js or something like that. Don't bother building a minified version for node, we just let our build tools take care of that.\nSecond, you need to loose the IIFE for this file, the CommonJS standard takes care of putting everything into its own namespace. \nBasicly take this:\n```\n'use strict';\n(function () {\n  'use strict';\n... your code...\nwindow.Vivus = Vivus;\n}());\n```\nand replace it with this:\n'use strict';\n... your  code...\nmodule.exports= Vivus;\nNow point the main entry in package.json to this file and you should be good to go.\n. It looks good to me. Im not very familiar with AMD but Ive seen patterns like this before, e.g.:\nhttps://github.com/gionkunz/chartist-js/blob/develop/dist/chartist.js\n. Did try it just now, got version 0.1.2:\nnpm http GET https://registry.npmjs.org/vivus\nnpm http 200 https://registry.npmjs.org/vivus\nnpm http GET https://registry.npmjs.org/vivus/-/vivus-0.1.2.tgz\nnpm http 200 https://registry.npmjs.org/vivus/-/vivus-0.1.2.tgz\nvivus@0.1.2 node_modules/vivus\nThe dist/vivus.js file contains the AMD/CommonJS code at the bottom though\n. Yup\nnpm http GET https://registry.npmjs.org/vivus\nnpm http 200 https://registry.npmjs.org/vivus\nnpm http GET https://registry.npmjs.org/vivus/-/vivus-0.2.0.tgz\nnpm http 200 https://registry.npmjs.org/vivus/-/vivus-0.2.0.tgz\nvivus@0.2.0 node_modules/vivus\nGood job, thanks for this.\n. ",
    "gching": "https://github.com/umdjs/umd\nShouldn't just stick with CommonJS standard, lets make it AMD compatible as well :).\n. I believe so, but to be honest, I am new to the scene for this module stuff and the different patterns so perhaps if @mg or anyone else knows if this is the correct one, do let us all know!\nSorry for my lack of knowledge :<!\n. ",
    "fay-jai": "No worries! :)\n. ",
    "afc163": "Publishing a new version will update README.\n. ",
    "csgruenebe": "NPM and Bower are mainly used by UX guys for frontend only applications. \nWe build a Java Application (backend) with gradle (or maven) and have a frontend component in AngularJS.\nAnd we want only one buildfile in gradle. With webjars you can define a JavaScript Library as dependency the same way you would define a Java Library like Spring Boot. Here is an example of the gradle build file:\ndependencies {\n        // Java Dependency\n        compile 'org.springframework.boot:spring-boot-starter-web'\n        // JS Dependency\n        runtime 'org.webjars:angularjs:1.3.13'\n        runtime 'org.webjars:angular-material:0.7.1'\nSo we don't need bower/npm to download the javascript libs. It happens together with the java libs.\nIn the app we can just reference the libs in the view like this:\n<script src=\"webjars/angularjs/1.3.13/angular.js\"></script>\n<script src=\"webjars/angularjs/1.3.13/angular-resource.js\"></script>\nIt is just another approach similar to npm and bower but just from another point of view. \nI prefer this approach to bower/npm because I have only one buildfile now.\nAnd this big pom.xml is just the way of telling webjars.org where all your files are so that it can build a webjar for vivus. Normally the webjar org people should maintain it. So if you don't mind I would create a github project and ask the webjar guys to fork it, so that it will be included in webjars.org for the future. So you should have no future work. You just release versions on GitHub and the webjar guys will then make a release as webjar depending on that version.\nI already did this initial setup for hello.js in consultation with the guys from hello.js. \nYou can see it here: https://github.com/comsysto/hello.js.webjar\n. If you put it in your repo, all your other stuff will be forked to a webjars.org repo and then you have zombie files there.\nI will start it of with my repo which will be forked, and as I unterstand it then the guys from webjars.org will take it from there and release updates when new versions are available. So there should be nothing to do from there on out.\nBut just in case you need help in the future you can mention me :)\nI raised the issue on webjars org here: https://github.com/webjars/webjars/issues/888\nNow we have to wait for the guys at webjars org to integrate it.\n. I just need to know if you add extra files to the release or the filenames of the released files change.\nIf all stays the same the guys from webjars should be fine. Normally when a new version comes out people will click on the \"request new version\" on the webjars page and the guys from webjars should do it. So it should be fine as long as you don't change the released files in any way :)\n. ",
    "erquhart": "\nNPM and Bower are mainly used by UX guys for frontend only applications.\n\nlol\n. ",
    "radius": "Thanks! That worked for me. \nI still don't understand why the final values of stroke-dasharray don't work as expected, but I guess since this whole technique is a clever workaround we can't expect too much :)\n. ",
    "Pixelous": "Hi @maxwellito ,\nyour solution does not help when using:\ntype: 'delayed',\nduration: 200,\npathTimingFunction: Vivus.EASE_OUT,\nanimTimingFunction: Vivus.EASE_OUT,\nCan you give another fix please?\n. Please take a look at it by following this link http://demo.themeuniverse.net/pear/demo-8/ See animated triangle at the bottom of the page above\n\nWould you like to order a project?\n\ntext.\n. I tested\nselfDestroy: true\nand removed it as it does not help. It helps to to join the triangles lines but it looks not smooth, lines join immediately without animation.\n. Animation still looks not smooth for me. Is it possible to fix it without using\nselfDestroy: true\n?\n. ",
    "jordan-wright": "Thanks for the quick response! I'll give that a shot.\nTo show you what I'm doing - I'm currently trying to animate svgs from flaticon.com by importing them in inkscape, ungrouping everything, and changing the objects to paths. Then, I remove all the inkscape fluff that isn't needed.\nDo you see any issues with doing things this way? I mean, I should just end up with paths. Maybe the issue is the lack of the fill attribute. I will let you know if that fixes it.\nThanks again for your help!\n. ",
    "raphaelbastide": "Thank you, I am aware about the type scenario I actually think about an automated order able to treat images with a lot of paths.\n. ",
    "streiten": "sure! it's exported from Illustrator and also running it through svgo doesn't seem to help...\nplease find the code below or get the file here: http://wartegarten.de/test_ai.svg\nedit: pasting svg here didn't seem to work really. please refer to the file.\n. just figured out that setting the svg profile to SVG 1.0 (defaults to 1.1) on export seems to do the trick... \n. ",
    "tomas": "Actually I just created a fiddle and I'm getting the same error on Chrome. \nhttp://jsfiddle.net/jrk184nm/2/\nLocally I'm just pointing to a file in the same host, so it's not due to CORS.\n. Nice, thanks for the quick action. Vivus rocks!\n. Ok, found out something. If I set the new object's width to '100%' I get the expected behaviour (SVG proportion is scaled according to parent's size). Around line 117:\njs\n    var objElm = document.createElement('object');\n    objElm.setAttribute('type', 'image/svg+xml');\n    objElm.setAttribute('width', '100%'); // the trick\n    objElm.setAttribute('data', options.file);\n    element.appendChild(objElm);\nI'm not sure if this works in all browsers but it sure does pull the trick for what I need. Feel free to close this issue @maxwellito if you're not interested in this.\n. Maybe not by force, but I don't see the problem in having it as an option -- i.e. to pass a width and height option when initializing Vivus, and have those values inserted via objElm.setAttribute.\n. > Set a size value, even in percentage, is not a good pratice and/or flexible enough for responsive design.\nI'm not sure about that. Setting the width at 100% actually solved my problems regarding responsiveness in smaller screens. Without it, the SVG would render at its original size and neither setting width nor max-width on the parent container would fix it.\n. Sounds great @maxwellito. Thanks!\n. ",
    "morgangiraud": "If we can find a good way to implement it, i don't mind making a PR with the implementation.\nWhat about:\n``` javascript\nVivus.prototype.mapping = function () {\n  var i, paths, path, pAttrs, pathObj, totalLength, lengthMeter, timePoint;\n  timePoint = totalLength = lengthMeter = 0;\n  paths = this.el.querySelectorAll('path');\nfor (i = 0; i < paths.length; i++) {\n// added\n    if ( this.isInvisible(paths[i])) continue;\n// /added\n    path = paths[i];\n    pathObj = {\n      el: path,\n      length: Math.ceil(path.getTotalLength())\n    };\n```\nWith:\njavascript\nVivus.prototype.isInvisible = function () {\n// if attr data-vivus-ignore exists and is set to true \n//     return true\n// If attr data-vivus-ignore exists and is set to false  <- gives more control to the user\n//     return false\n// if attr stroke is set to none \n//     return true\n// if inline style containts display:none || visibility:hidden || || opacity:0 \n//     return true\n// return false\n}\nIt's clearly not perfect but it's already an on the current state, don't you think ?\nIf we want to handle parent visibility i guess we will need to have a recursive mapping function on the svg childNodes tree.\n. You're right about tests, i was lazy and i liked it that way, after all the path count test of the mapping functions seemed good  to me. I can implement a dedicated test when we are ready.\nAbout the PR, i'll wait for more information on the points you want to clarify. I can't change the target branch on Github so i will have to create a new one and close this one. I'll do it when we agree on the spec.\nNo problem for the PR, seems fair to me to implement what i want ;)\n. ",
    "mushopea": "Hi there, thanks for the recommendations. Actually, I did download about 20 icon packs, but all of them were filled. I just downloaded the ones you linked, and they are also filled.\nThe icon you animated in the jsfiddle has a 'double stroke' effect. Actually, I don't think it looks that bad. :) I compromised by finding icons that would look nice with that icon effect and went ahead to animate them.\nStill, the best case scenario would be to make our own stroke icons! Hopefully someone can release a stroke icon pack soon :) Thanks a lot for this cool library!\n. ",
    "krazyjakee": "For anyone in the same position, I \"converted\" the fill svgs to stroke by simply adding these properties to the svg stroke=\"black\" stroke-width=\"5\" fill=\"none\". Most icons are fill icons and this solved it for 100% of the ones I tried.\n. ",
    "felixdorner": "Vivus is great but only usable with \"real\" stroke icons. Most icons are fill-based - even the ones which \"appear\" stroke-based.\nThe only solution which comes to my mind is to re-draw your favorite icons with strokes only.\n. ",
    "BoylesWhite": "We had an issue drawing a filled SVG but we used the pathformer.js to create the strokes then we used the js callback to \"fill\" the SVG once drawn. You can see the effect Here\nThe stop of the SVG is getting \"cut off\" though because I too added stroke-width=\"5\" which \"pushes\" it out of the container size.... Yet to sort this out. Can post code if required.\n. ",
    "kartikluke": "I'm having trouble finding SVGs that work @maxwellito All of them are fill based and hence the double line effect appears because to make a straight line the method used is to make a rectangle and fill it. Whereas it should just be a straight path with stroke. Could you tell me how I could make these as all software like Illustrator seem to put out paths with fills.\n. Alright. May I know which tool you use to redraw them. I tried on Sketch\nbut I ended up with filled in paths again.\n. Alright. I'll do that. Thanks.\n. ",
    "johndatserakis": "@krazyjakee your answer is perfect for my .svg that didn't animate at all - it would be nice for these little secrets to be easier to find! Only took about 2 hours of searching!. ",
    "ghost": "that's perfect! Thank you\n. +1 AshleyGrant!\nI was banging my head for a moment looking at Async - otherwise great job\n.sync() seems to make sense\n. [Sorry, clicked on close issue by mistake there hehe!]\nYeah I tried Firefox on mac and it is relatively speaking better than the performance you get on the windows version. Here is a performance log captured from firefox for windows 10:\n\nSeems to be paint calls is the killer here? \nNo errors related to vivus, though looking again I do have a bunch of css declaration dropped errors. I'm not that familiar with web development in general but surely that shouldn't kill performance?\n\nI actually managed to have 70 svg elements on the site I'm building work smoothly with vivus as they're all pretty simple :). Firefox in general is just awful for animation right now as when using GSAP for translating elements I have stuttering issues just with that browser >:(. \nAnother Edit: Here is my call tree:\n\n. If I'm understanding you, do you mean this?\n\nThe size varies from 70ms all the way up to 100ms. Think I recall something about each paint needing to take less than 16ms to look smooth\nI take it then this is just a firefox specifc issue and no optimisations can be done on on the users end to workaround it (other than just not animating it)? If it helps, this is what the repaint job is doing visually in 10fps gif quality:\n \n. Sorry to bump this, but don't suppose you had a chance to take a look at my previous post for this?. No worries: yeah I'll see if I can figure something out then i.e. pretend Firefox doesn't exist or just disable features specifically on that browser. I've done a simple animation test using css animations and even then Firefox causes stuttering... \nFeel free to close this topic up and thanks for the help! \ud83d\udc4d . Hey, delayed response on my end, but thought I'd share a solution. If you put translate3D on the svg/container it mitigates for the frame drops (I'm only dipping to 45fps at worst). Why it's only firefox that needs that I don't know but either way it works now :).. I can give my 2 cents on this from using the library: \nI checked your site and tried applying translate3d to the svg (rather than the container above it in the dom as it doesn't seem to work when on the container itself). It made a small improvement but I think the bigger problem is how many paths you have; I had nowhere near that many when building mine. \nThe other thing with svg I've noticed is that the smaller the size, the smaller the paint area = better fps. Try shrinking your browser and you'll see an improvement in Firefox with the animation. The library creator might know if this is definitely worth it, but you could try splitting apart your animations into multiple svgs to see if that helps - I noticed it was all just one giant one. Another option is oneByOne  for scenario sync, that can help spread the drops out. Other than that I dunno if the library could pull off what you're looking for. \nHope that helps!\n. ",
    "selfagency": "You can see my dev project at http://v2.nylon.com/.\nI have the Vivus js commented out currently.\n. Thanks, that's quite helpful.\n. You mean in terms of the inViewport not being able to function with a sprite? I bet you can figure out a way around that with jQuery.\n. ",
    "brennan-v": "\nThe first tab is what it looks like without the change. The top animation works fine but the ones below it get stuck. \nThe second tab is how they function after the change.\nSame before & after behavior on Win 10 (IE 12/Edge 0.11).\n. ",
    "museforyou": "Here's the example:\nhttp://museforyoushop.com/example/\n. Thanks for the help maxwellito! I actually don't think that termoplus was using my widget as I have the code in the correct order. It seemed like he was adding the code himself :).\n. ",
    "termoplus": "sorry for the late response. I was out of town.\nI tried comma but it didn't work :( I spend so many times on that already :( only you can help.\nI do something wrong and I don't know what exactly I do wrong.\nOn the video you can see how it easy to upload the image and after in the browser the animation starts.\nI add the VIVUS js code to the document then I add this in script tag:\nnew Vivus('svg1', {\n  type: 'delayed',\n  duration: 200,\n  start: 'inViewport',\n  animTimingFunction: Vivus.EASE_OUT,\n  file: '{param_img1}'\n});\nin body what should I add to connect with the code?\nIf I am not mistaken, the path (M289.1,395.6c0-55.2,98-100,219-100s219,44.8,219,1) will be converted automaticaly.\nwhen I render the page in the browser i see blank page :(\nmay I ask you to see the sourse page please http://museforyoushop.com/svg-draw-widget.html\nwhen I see the sourse of demo files I see new JS which is not described in the documentation. I made lots of Adobe Muse widget and I stuck on this almost a month already :((((\nplease help\n. I publish the page with the widget online http://020018.businesscatalyst.com/index.html\nIf you need I can provide an original XML file\nI use Dreamveaver and I dont see any error\n. I knew that I did something wrong. but how I can understand what should I do now? I am not a programmer :(( can you help please?\n. I change the order as you advised I compared with that version which is working on Muse it's the same but still it doesn't work.\ncan you see the link again please http://020018.businesscatalyst.com/index.html \nalso i added this code http://prntscr.com/8020sl\nTHANKS\n. now the code is the same that on that example but still it doens't want to work :(((\n. Can I bother you one more time?  Please.\nIf I don't understand your advise, I wont bother you again. Thanks in advance\n. Thank you! I am closer now :)\nI did what you advise and now I see the image http://020018.businesscatalyst.com/index.html\nstill no animation :(\n. Where do I need to add this?\n...\n  <path fill=\"none\" stroke=\"#000\" ...\n...\nThis is how images added in Muse from widget http://prntscr.com/80378g\nI tried this one too now http://prntscr.com/803crp it didn't help either.\nI am at the finish line already, please please please help to come to the end. \n. you are the best! I didn't even expected so much help from you.\nI am happy you try to help me even if I can't finish this task. thanks a lot.\nI hope we can managed with this together :)\n. What did I tell you? :)\nYOU ARE THE BEST !!!!!!!!!!!!!!!!!!\n. Thank you for your help.\nYou didn't understand me correctly.\nI use  file: '/link/to/my.svg' to add an SVG image.\nI wand to add URL link that people can click on SVG to open a page or  a website.\nis that possible?\nthanks\n. I will try both options and get back. I tried the second option but it didn't work for me.\nthanks\n. it's not working for me.\nhere is a video for option 1: http://quick.as/PkzBFBbkX\nhere is a video for option 2: http://quick.as/n8PdCVOR3\nhere is a live demo for option 2 http://020018.businesscatalyst.com/index.html\nI hope you can help\nthanks\n. Sorry, I was out of town. \nI tried. no luck :(\nhere is a link http://020018.businesscatalyst.com/index.html\n. it is not working any more :)\nhttp://020018.businesscatalyst.com/index.html\n. great!!! \nis it possible to change cursor to hand if SVG has a link?\nthanks\n. it this method not really cool because we loose a bit of accessibility but it works or that's why now?\n. Great!\nI meant is it possible to be a hand cursor only if there is a link in the SVG.\nNow it's all the time :(\nThank you for your help. I appreciate it.\n. ",
    "sergeyMelentyev": "I am using alvarotrigo/fullPage.js with HTML5 video background (as a cover). I will continue developing this issue.\n. I am sorry for a long reply. I will send more details in a day or so.\n. ",
    "inergy": "I'm seeing this issue too ... it won't do the tracing on some of my svg's unless i shrink the width of the window.  I'll play around with this as well and try to provide some steps/code.  Is there anything that prevents the drawing based on the viewbox or could any other svg attributes affect this?\n. @maxwellito i'm using 0.2.2 and my svg's are directly in the html... i'll check as soon as I can get time today\n. @maxwellito\nThis is using greensock to control the timeline, but basically there's 2 tracing animations on SVG's that happen... one with the 'ping' logo and another with the 'callaway' logo.  The ping logo will trace just fine, so long as the width of the browser is under 1565px (roughly).  The callaway logo however, must be under about 1150px (again, rough estimate).  I haven't spent much time messing with the viewbox or sizing of the svg's, but that seems like it shouldn't matter as much?\nIn my timeline, I'm calling 2 functions which use vivus (coffeescript):\n```\npingTrace = ->\n  console.log 'tracing ping logo'\n  ($ '#ping').css 'visibility', 'initial'\n  new Vivus 'ping',\n    type:     'delayed'\n    duration: 100\ncallawayTrace = ->\n  console.log 'tracing callaway logo'\n  ($ '#callaway').css 'visibility', 'initial'\n  new Vivus 'callaway',\n    type:     'delayed'\n    duration: 100\n```\n. @maxwellito ahhh ... i didn't even think of that.  That did the trick, and now they are tracing just fine.  Thanks for the clarification!\n. ",
    "zfrenchee": "I ended up using the font to write the words I wanted in Illustrator, then exported as SVG and messed with that to satisfaction. Just to echo some of the other issues, it would be sweet if fills could be animated as well, not only strokes. Thanks!\n. Thanks! I ended up fixing the svg ;)\n. ",
    "Szymon-dziewonski": "Im building big website and I cant show you it now, but your solution is working so I appreciate that a lot \nPath is pretty simple few points and settings like above, but your setting work like a charm ! Thank you very much :) \n. yeah but callback is working only with first animation it does not work when trigger play. Callback starts with staring animation than thats why I asked, I saw this in docs and it doesnt work with trigger .play()\nOk thanks for explenation of play(speed).\n. Yeah but it works on start Im gonna show you, recreate problem \nhttp://esthechoc.vrs.ovh/index.html\nkraften section and first dot on left bottom \nOn console in dev tools it triggers when animations starts not end \nmain.settings.js line 71 settings for this callback, line 64 function set \n. yeah on first animation - you are right. BUt then when u click another bullet and go back to first again you get callback on start animation. I checked it so many times..\n. Ok now I think I get it,seems you were right all along, sorry for wasting\nyour time.\nI did few tests on single objects, and now I see even with play(-speed) it\ntriggers too but at start as animation is backward\nThank you anyway for patience :)\n2015-08-29 17:04 GMT+02:00 maxwellito notifications@github.com:\n\nThe behavior is normal. You just trigger play on point1 when the previous\nsection begin to appear. So the animation start before you can see it, and\nthe callback is executed before you can see your point.\n[image: screen shot 2015-08-29 at 16 01 53]\nhttps://cloud.githubusercontent.com/assets/1097232/9562584/8e7e3800-4e67-11e5-80fa-5fd9ab7bfef9.png\n[image: screen shot 2015-08-29 at 16 02 06]\nhttps://cloud.githubusercontent.com/assets/1097232/9562585/91c3423a-4e67-11e5-87fb-9b5a0c5a5fdf.png\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/65#issuecomment-135996424.\n\n\n\nPozdrawiam,\nSzymon Dziewo\u0144ski\nwww.szymondziewonski.com\nhttp://www.szymondziewonski.com\n. ",
    "stepladder": "Great, thanks!\n. ",
    "monkeehub": "Hey Maxwellito,\nHooray for new Vivus version! I\u2019ll look out for that. Are there any other upgrades/features in the next update?\nI have no idea how I did the pull request either, but thank you very much for your explanation and offer to help. I\u2019ll definitely look into how to \u2018git\u2019 properly.\nI\u2019m an animator/front-end creative person myself so this dark and dangerous world of programming is new and scary for me. \nHowever, I have always liked to understand HOW things work - it makes me a better designer.\nThe reason I started looking into Vivus was because I wanted to see the potential for SVG animation, and especially the \u2018drawing-in\u2019 effect that you have create so well with Vivus. \nI\u2019ve had a lot of fun playing around with vivus, and also GSAP and Velocity.js.\nThanks again for your message, good luck with the vivus update.\nBest,\nFrom: maxwellito [mailto:notifications@github.com] \nSent: 18 September 2015 20:03\nTo: maxwellito/vivus\nCc: Monkeehub\nSubject: Re: [vivus] Create vivus forceRender for IE11+ (#70)\nHi Monkeehub,\nThanks for these kind words and pull request.\nThe patch for the IE11 is going to be reapplied for the next version (this weekend, it's on dev branch for now). Because it has been done before, but badly (my bad :-S).\nAbout your pull request, I have to admit, I don't really how you did this. I looks like you pushed a patch, I don't even know this is possible. The change is not even linked to a file.\nBut no worries, I understood what you're trying to do and I want thank you coming and make a pull request to contribute. That's really cool :)\nIf it's your first contribution on GitHub let me give you some explanations:\n1.  Fork the repo, via the button fork.\n2.  Clone your fork on your machine.\n3.  On your clone, create a new branch from master with the name of your choice (like IE11-fix) and switch to it.\n4.  Do your changes. \n5.  Commit your changes. Try to respect the conventions for your commit message.\n6.  Push on your fork under the same branch.\n7.  Come back on GitHub.com and on your fork you must see a banner explaining asking you to make a pull request from your new branch.\nHere the code for the current situation\nClone your fork\ngit clone git@github.com:monkeehub/vivus.git\nGo into the repository\ncd vivus\nCreate a new branch and switch to it\ngit checkout -b IE11-fix\nDo your changes with your favorite editor\nCommit your changes\ngit commit -am \"Fix IE detection for version 11\"\nPush the changes to your fork\ngit push origin IE11-fix\nNow you can go on https://github.com/monkeehub/vivus/tree/IE11-fix\nI recommend you to read ProGit, it's free and awesome.\nFor now I just want to thank you again, it's great to see somebody who contribute even if he's not sure about how to do it, well done! Usually, people just open an issue and complain :)\nIf you want some help or have questions, please contact me on Gitter http://gitter.im \n\u2014\nReply to this email directly or view it on GitHub https://github.com/maxwellito/vivus/pull/70#issuecomment-141536756 .Image removed by sender.\n\nThis email has been checked for viruses by Avast antivirus software.\nhttps://www.avast.com/antivirus\n. ",
    "beaver-creation": "Thank for reply Maxwellito.\nYes but in the description of Vivus.js it is written : \n     \u2022 All elements must have a stroke property and cannot be filled. This is because the animation only looks to progressively draw strokes and will not check for filled colours. For example: fill: \"none\"; stroke: \"#FFF\";\nSo where can i set the color of my path ?\n. Thanks Maxwellito, it's work fine :) But finally i've use an other jQuery plugin. But i think i use this one for my personal projects :)\n. ",
    "Nerdissimo": "Hi!\nFirst of all, I really like vivus!\nI'm trying to use it for some wow-effect :D\nI tried to explain what I want to do at this URL http://www.nerdissimo.it/vivus-example/.\nYou could find there an explanation of what I supposed to do and an example code.\nI hope I didn't do a mess :p\nIn case, please explain me where I was wrong and close the pull request.\nIf you have some other way to do that, please tell and I will try to fix my code.\nThank you very much in advance!\n. Don't worry, I can understand you :)\nI'm busy too, recently...\nI'm glad you like my current pull request :)\nIf you think this shouldn't be an option, I could send you another pull request with this code that works as default behavior. Let me know how I can be useful.\nThank you very much for the time you invest in vivus and in my pull request :)\n. Hi @maxwellito!\nI'm really sorry! Sorry if I reply you just now, but I was really busy after my holiday (afw) :(\nI saw you found a work around for an issue (I was scouting on the same problem before my holiday) so, thanks again for your time :p\nYou also committed something on dev branch (and my name is now in the special thanks :D) so I suppose you did it! Was it an hard task? There's anything else I can do about it? Do you think it will be merged with the branch \"master\"? LMK\nAgain, I'm sorry about my delayed reply and I really thank you to spend your time on this cool project :)\nBye!\nSergio\n. Hey!\nDon't worry about the merge! Vivus was improved anyway, so it's ok :p\nI'm sorry I wasn't able to test vivus before the 0.3.0 release, but I was busy (as usual\u2026). I hope I will test it as soon as possible.\nThank you very much!\nI hope we could work together on vivus or any other project in the future :)\nBye!\nSergio\n. Hey!\nDon't worry about the merge! Vivus was improved anyway, so it's ok :p\nI'm sorry I wasn't able to test vivus before the 0.3.0 release, but I was\nbusy (as usual\u2026). I hope I will test it as soon as possible.\nThank you very much!\nI hope we could work together on vivus or any other project in the future :)\nBye!\nSergio\nSergio\n2016-01-21 1:58 GMT+01:00 maxwellito notifications@github.com:\n\nOk, I'm sad to not merge your code, but your contribution made (to me) an\nimportant improvement in the library. You already mention your name in the\nThanks section. I thinks it's important to mention the devs who made an\nimportant contribution. I feel like a twat to not have done that earlier.\nv0.3.0 is alive. I hope I don't break anything :-S\nThanks again for your PR. Don't hesitate to come with new improvements!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/maxwellito/vivus/pull/73#issuecomment-173416714.\n. \n",
    "davmillar": "If I recall correctly, object is favored over inline SVG mostly to support older browsers. Because of that, maybe instead of useAsSVG as an option and defaulting to object, call the option legacySupport and have it default to inline SVG?\n. No worries, and I might be thinking of something else, but I seem to recall\nsome old version of a browser supporting SVG as an object but not inclined\nSVG. Maybe Firefox 2? Oh well. I agree \u2014 probably best to get with the\nfuture instead of worrying about legacy support.\nOn Wed, Jan 13, 2016 at 5:16 PM maxwellito notifications@github.com wrote:\n\nHi David,\nCan you tell more about this preference for object on old browsers? I\nalways stopped at IE9 because caniuse.com http://caniuse.com/#feat=svg\nmention 8 and under as incompatible with SVG 1.1. I also rejected an issue\nyesterday because it was concerning IE8 :-$ I try to not go deep into\ncompatibility for old browsers. Especially now Microsoft stopped supporting\nthem. It's funny, every time I talk about old browsers, I only think\nabout Internet Explorer. Maybe you had other ones in mind?\nMaybe I should try properly my new code on old browser. It would fallback\nautomatically by displaying the SVG without animation it because it cannot\naccess the SVG methods to get path lengths. That's the best it can happen,\nI think.\nSorry, I realised over the commits that the list of options keeps growing.\nSo if I can avoid adding one for supporting old browser force to use new\ntechnologies, I try to.\nI hope I don't look like a grumpy cat who say no to every requests ;)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/maxwellito/vivus/pull/73#issuecomment-171468423.\n. \n",
    "katerlouis": "Nice, man! That's simple- thx very much.\nGuess with more knowledge in plugin structure I could have figured it out myself- but now it's public! :DMaybe you update your Docs and get a lil bit more specific in some points like this one.\nIs there a more convenient way to set default options than writing: var vivusOptions = { ... };?\nI know it's off the topic, but I don't know if it's worth to make a new issue for this one, either.\nThanks!\n. ",
    "crispouille": "Thanks mate ! Sounds wonderful, I'm going to look at it !\n. ",
    "joannesalfa": "It didnt help me because I need to use selector at svg path to add a class in following this markup:\n\nI don't know about #document, is that another iframe?\n. Sorry I didnt notice a new reply from email until now since I got no new notifications one month ago, actually I resolved the issue for creating a DOM with different method, may I ask your design? I think there a bad practice for creating iframe that prevents modifying colors, I was using dynamic load. I may explain it more if you want. \n. Here is the reproduction of issue, it uses dynamic load from cdn, excuse me don't try to run in this JSfiddle since it forces you to download a svg file, I would use local server... maybe you could copy and paste this, then download a svg to link in local file.\nhttps://jsfiddle.net/pu0n5097/8/. Good, I've used another method of dynamic load using js instead of  it solved the issue of styles. Would you mind to add a warning message usage of  in your readme page?\nHave a nice day.. ",
    "gautamz07": "@maxwellito Thank you Sir and sorry for the delayed response ! Thanks a lot for taking the time to explain that to me . \nCheers. \n. ",
    "christ0ph3r": "Wow thank you so much!  Very helpful.  I had to change 1 thing.  \ndiff\n- for (var i = myElement.length - 1; i >= 0; i--) {\n+ for (var i = myElements.length - 1; i >= 0; i--) {\nFinal is:\n```\n      jQuery(function () {\n        // Define your callback\n        var myCallback = function () {};\n    // Get your HTMLCollection of SVG to animate\n    var myElements = document.getElementsByClassName(\"icon-vivus\");\n\n    // Go across them to create a Vivus instance\n    // with each of them\n    for (var i = myElements.length - 1; i >= 0; i--) {\n      new Vivus(myElements[i], {duration: 50, type: 'async' }, myCallback);\n    }\n  });\n\n```\nFeel free to close.  Thank you once again.  I appreciate the help and awesome script!  \nIt may be helpful for others to add this somewhere.\n:+1: \n. Hey @maxwellito Im sorry to bug.  I have gotten really stuck.  Everything is working great except I have few last icons that are in a toggle that I am struggling to work with.  The icons are not shown until a button is clicked however the animations happen before the button is clicked.  A person may not click the button for a few seconds and then the animation has already ended by then.  \nI noticed your demo had a lot of animations that would play on button clicks so I attempted to do same thing.   However it only works for the first icon and not the 3 after it for some reason.\n``` js\n// vivus svg animations\njQuery(document).ready(function() {\n  // Define callback\n  var myCallbackVivus = function () {};\n// Get HTMLCollection of SVG to animate\n  var myElementsVivus = document.getElementsByClassName(\"icon-vivus\");\n// Go across them to create a Vivus instance\n  // with each of them\n  for (var i = myElementsVivus.length - 1; i >= 0; i--) {\n    obt1 = new Vivus(myElementsVivus[i], {duration: 50, type: 'async' }, myCallbackVivus);\n  }\n});\n```\nhtml\n  <a href=\"#collapseHowWorks\">\n    <button onclick=\"obt1.reset().play();\" type=\"button\" class=\"btn-lg\" data-toggle=\"collapse\" href=\"#collapseHowWorks\" aria-expanded=\"false\" aria-controls=\"collapseHowWorks\">How It Works</button>\n  </a>\nDo you see what I am doing wrong and why it would just do the first svg?  Is there maybe a more simple way to achieve this?  I don't nesscarily need to reset every click just looking to get svgs to load when the button is clicked.\n. Ended up figuring out a way :+1: \n``` js\njQuery(document).ready(function() {\n  // vivus svg animations on click\n  document.getElementById(\"icon-collapse\").addEventListener('click', function () {\n    // Define callback\n    var myCallbackVivusClick = function () {};\n// Get HTMLCollection of SVG to animate\nvar myElementsVivusClick = document.getElementsByClassName(\"icon-vivus-click\");\n\n// Go across them to create a Vivus instance\n// with each of them\nfor (var i = myElementsVivusClick.length - 1; i >= 0; i--) {\n  new Vivus(myElementsVivusClick[i], {duration: 50, type: 'async' }, myCallbackVivusClick);\n}\n\n});\n});\n```\nhtml\n  <a href=\"#collapseHowWorks\">\n    <button id=\"icon-collapse\" type=\"button\" class=\"btn-lg\" data-toggle=\"collapse\" href=\"#collapseHowWorks\" aria-expanded=\"false\" aria-controls=\"collapseHowWorks\">How It Works</button>\n  </a>\n. Wowowow thanks so much!  I hope you had good holidays.  I had a feeling it wasn't the best as I am still getting my feet wet with javascript.  Thanks for the improvement.  That makes sense and thanks for explanation.\nI see 2 parameters in the vivus constructor now.  If I understand correctly there is no callback and I didn't ever need one?  Looks like I had a callback doing nothing. :smile: \nI noticed that pages that didn't have the toggle button returned document.getElementById() NULL in console.  I added an if statement to check if ID's length is greater than 0.   Is that a bad way to check this?\n``` js\n// vivus svg animations for icons on certain clicks\njQuery(document).ready(function() {\n  // check if there is icon-collapse ID\n  if (jQuery('#icon-collapse').length > 0) {\n    var i,\n      myVivusItems = [],\n      myElementsVivusClick = document.getElementsByClassName(\"icon-vivus-click\");\n// Go across them to create a Vivus instance\n// with each of them\nfor (i = myElementsVivusClick.length - 1; i >= 0; i--) {\n  myVivusItems.push(new Vivus(myElementsVivusClick[i], {duration: 50, type: 'async', start: 'manual'}));\n}\n\n// vivus svg animations on click\ndocument.getElementById(\"icon-collapse\").addEventListener('click', function () {\n  for (i = myVivusItems.length - 1; i >= 0; i--) {\n    myVivusItems[i].reset().play();\n  }\n});\n\n}\n});\n```\n. Thank you so much.  I have now changed it and works great.  I love this script!\n. ",
    "PeterWooster": "I just tested this on an older version, Chrome Version 46.0.2490.86 and the dots don't appear. Updating to the latest version brought them back. These tests were done on Mac OS 10.11\n. Hi,\nThanks for the update.  It\u2019s works, no more dots, but the last line in this image doesn\u2019t draw properly:  http://silvermapleweb.com/jstest/ http://silvermapleweb.com/jstest/, it ends up about half the length shown when you refresh.  The code is set up to draw on click.\n/peter\n\nOn Dec 27, 2015, at 8:01 AM, maxwellito notifications@github.com wrote:\nOk, I changed the values Vivus set on strokeDashoffset and strokeDasharray to add some gap before and after. \nDemo case available on http://maxwellito.github.io/drafts/vivus-issue-79/ http://maxwellito.github.io/drafts/vivus-issue-79/\nChrome, Firefox and Safari seems to display it without glitches. I'll try on other browsers during the week (previous Chrome and lovelay Internet Explorers).\nHere is a diff for interested people.\n@@ -446,7 +446,7 @@ Vivus.prototype.setOptions = function (options) {\n   this.isIE        = (window.navigator.userAgent.indexOf('MSIE') !== -1 || window.navigator.userAgent.indexOf('Trident/') !== -1 || window.navigator.userAgent.indexOf('Edge/') !== -1 );\n   this.duration    = parsePositiveInt(options.duration, 120);\n   this.delay       = parsePositiveInt(options.delay, null);\n-  this.dashGap     = parsePositiveInt(options.dashGap, 2);\n-  this.dashGap     = parsePositiveInt(options.dashGap, 1);\n  this.forceRender = options.hasOwnProperty('forceRender') ? !!options.forceRender : this.isIE;\n  this.selfDestroy = !!options.selfDestroy;\n  this.onReady     = options.onReady;\n  @@ -525,13 +525,10 @@ Vivus.prototype.mapping = function () {\n   }\n   totalLength += pathObj.length;\n   this.map.push(pathObj);\n-    path.style.strokeDasharray  = pathObj.length + ' ' + (pathObj.length + this.dashGap);\n-    path.style.strokeDashoffset = pathObj.length;\n-    path.style.strokeDasharray  = pathObj.length + ' ' + (pathObj.length + this.dashGap * 2);\n-    path.style.strokeDashoffset = pathObj.length + this.dashGap;\n-    pathObj.length += this.dashGap;\n-    // Fix IE glitch\n-    if (this.isIE) {\n-      pathObj.length += this.dashGap;\n-    }\n   this.renderPath(i);\n  }\n@@ -640,7 +637,7 @@ Vivus.prototype.trace = function () {\n     progress = this.pathTimingFunction(Math.max(0, Math.min(1, progress)));\n     if (path.progress !== progress) {\n       path.progress = progress;\n-      path.el.style.strokeDashoffset = Math.floor(path.length * (1 - progress));\n-      path.el.style.strokeDashoffset = path.length * (1 - progress);\n  \u2014\n  Reply to this email directly or view it on GitHub https://github.com/maxwellito/vivus/issues/79#issuecomment-167406338.\n. Thanks,  \n\nI\u2019ll give it a try on our system tomorrow.\n/peter\nOn Dec 29, 2015, at 6:13 PM, maxwellito notifications@github.com wrote:\n\nHi @PeterWooster \nThanks for the feedback and nice catch!\nI realised the issue was coming from a little mistake in the algorithm. I was calculating the total length of all path but without the dashGap. My draft page still works, and your demo is now working :)\nHere is the diff maxwellito/drafts@49435e6\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "old9": "Same here Chrome 47.0.2526.106 on Windows\n. ",
    "j2p2f2": "Hey @maxwellito! Your fix worked perfectly. Thank you for posting it.\n. ",
    "bahamadon": "Sure!  Unfortunately, I'm away from my computer for several hours, but I'll send you a file as soon as I get back. \nDon\nSent from my iPhone\n\nOn Dec 28, 2015, at 1:37 PM, maxwellito notifications@github.com wrote:\nHi,\nFirst thanks for these kind words :)\nAbout the problem you're mentioning, I think I encounter this problem in the path on a weird SVG, but not sure. Can you provide me an example please? I think it would be more helpful :)\nThanks\n\u2014\nReply to this email directly or view it on GitHub.\n. Hello.\n\nIn the hope that this will be helpful, I\u2019m sending you two files.  \nOne (propeller.html) is a complex svg that illustrates the issue.  The svg contains two animated paths (id=\u201cblades\u201d and id=\u201cjackets\u201d), a circle (id=\u201chub\u201d) and an ignored path (id=\u201cinitials\u201d).  Paths \u201cblades\u201d and \u201cjackets\u201d contain three subpaths of connected Bezier curves.  Path \u201cblades\u201d displays three propeller blades, while path \u201cjackets\u201d shows the outline of each blade\u2019s  heating jacket.  The svg is animated as async, with a callback using the display hack from the vivus website.\nSince \u201cblades\u201d and \u201cjackets\u201d are single paths, I expected the first blade to be drawn, followed by the second, and then the third.  Path \u201cjackets\u201d would start drawing at the same time and, similarly, would be drawn with each jacket in sequence.  \u201cHub\u201d would start at the same time and all three elements would finish at the same time, at which point the initials \u201cCT\u201d would appear.\nNote, though, that what happens is that all three blades are drawn in parallel, not in sequence.  The same happens for the three jacket outlines.  Also, the hub seems to be drawn very slowly, and completes well after the blades and jackets paths.\nThe second file (three_lines.html) is much simpler and easier to follow.  It contains one path, with three disconnected lines.  The completion callback is a simple alert dialog.  \nSince this is a single path, my expectation was that first one segment would be drawn, then the next, and finally the last.  Instead, all three are drawn at the same time.  And notice how long it takes for the completion callback to be triggered.\nAs I mentioned in my issue report, I think what is happening is that the dasharray starts at the beginning of each subpath, so that it appears as if three animations are going on.  In reality, though, the algorithm is acting as if one long animation is in progress.  So, at the time all three lines appear to be fully drawn, the algorithm still has two-thirds of its steps to complete.  Hence the delay in the completion callback.\nIf this hypothesis is correct, then the problem isn\u2019t caused by vivus; it\u2019s really a consequence of the svg specification and the way a browser would implement it in the case of a path containing subpaths.  From some of the discussion I read in response to the thread I referenced, it seems like the svg specification hasn\u2019t addressed this fully.\nRegardless, I think an adequate workaround in vivus is to construct all paths without subpaths.  A limitation, to be sure, but not an onerous one.\nI hope all this is understandable.  I haven\u2019t been coding Javascript for very long, so I could be seriously misreading things.  Regardless, I hope this is helpful.\n\nOn Dec 28, 2015, at 1:37 PM, maxwellito notifications@github.com wrote:\nHi,\nFirst thanks for these kind words :)\nAbout the problem you're mentioning, I think I encounter this problem in the path on a weird SVG, but not sure. Can you provide me an example please? I think it would be more helpful :)\nThanks\n\u2014\nReply to this email directly or view it on GitHub https://github.com/maxwellito/vivus/issues/80#issuecomment-167662446.\n. The two files referenced in the above reply were sent by email as attachments.  For reference, I'm also including them here.\n\npropeller.html.gz\nthree_lines.html.gz\n. It sounds like we've come to the same conclusion:  The issue arises from the way SVG implementations handle strokeDasharray and strokeDashoffset rather than anything vivus is doing.  To provide a visually attractive dash pattern, the SVG implementations start each path segment with the beginning of the dasharray.  It looks like this is just the cost of being able to use the dasharray as a way to animate path drawing.\nI hadn't thought of using Pathbuilder as a way around this.  It's a clever solution, although, as you say, it probably would cause issues further down the pike.  For now, I think a workflow that avoids subpaths is fine.  I can certainly live with it.\nSince you asked, I use Sketch as my SVG authoring tool.  It's lighter than Illustrator and seems well designed for the kind of vector art used in webpages. But I have a bit of a confession to make about the examples I sent you.  I created propeller.html using the techniques described in jxnblk's tutorial on how to build svg icons using react.  I wanted the mathematical precision that a scripting environment provides.  I cobbled together three_lines.html using a text editor.  But Sketch was great for checking the work...\nThanks for your attention to this.  It's probably a really narrow use case, but I appreciate your taking the time to work it through for me.\nDon\n. Thanks, Max.  Really appreciate your looking into it.\nDon\n. ",
    "AlbanMinassian": "i would luke add svg animation in spectacle sides https://github.com/FormidableLabs/spectacle\n. ",
    "juhamust": "Same approach works also for lopping in one direction:\njs\nnew Vivus('hi-there', {}, myVivus => {\n  if (myVivus.getStatus() === 'end') {\n    myVivus.reset().play();\n  }\n});. ",
    "xhostar": "Hi:\nand... it's possible to make a short pause before playing again?\nI've tried this:\nnew Vivus('hi-there', {}, function (myVivus) {\n  setTimeout(function() {\n    myVivus.play(myVivus.getStatus() === 'end' ? -1 : 1);\n  }, 500);\n})\nbut it does not work correctly because sometime the animation breaks.... ",
    "albaluca87": "Nice trick, It's just what i needed :)\nWhat about two methods, next() and previous()?\nnext() to draw forward and previous() to rewind the last path.\nI'm trying to achieve the previous() call myself but without success, any tips?\nThanks\n. @maxwellito  Ok I'll wait your solution! :) thanks\n. Thanks a lot works great! :+1: \n. ",
    "trippo": "How to do this with the last version?. thanks a lot. ",
    "jsimnz": "Well they way I see it right now is that there could be 3 different types of callbacks.\n- The global callback for the vivus object\n- The callback to which I implemented, for an individual play call\n- The callback described in #85 which is a per path callback (Not sure if that should be defined globablly on the constructor, or on a individual play method call.\nAll three of which I see having they're place, however figuring out the API for the instance callbacks certainly needs to be figured so they easy and simple to both use if necessary.\nI'm happy to contribute bits and pieces. To be honest though, we only use vivus for one section of our website, however I like in general contributing to OS projects I use so I am indeed interesting in helping out.\n. Yeah, didn't 100% think through some of the edge cases on concurrent calls to play().\nNice cleanup/fixes on the PR too. Glad this was merged in. Hopefully this will add sufficient value to people.\nCheers,\n. ",
    "yellow1912": "Is there any plan to make it possible?\n. ",
    "VermillionOne": "Ah, I see my error. Thank you for reviewing this PR.\n. ",
    "SmartArtsStudio": "Hello,\nHave a look at the following jsfiddle, in chrome look carefully at the the three center triangles, each has a rounded line cap at its Z vertex instead of a miter join? (current workaround for chrome: appended (overlapped) first and second vertices where a closing Z should work )\nhttps://jsfiddle.net/qajtL81z/3/\nThank you.\n. Wow you are right both of your screen shots do render the same, which surprises me even more because the BOTH render the same BUG not just chrome. Because they are identical the failing \"linejoin=mitre\" is probably not as obvious you as it is to me (jsfiddle renders it much smaller than directly in the browser -  so zoom the jsFiddle render in and it will be much clearer.)\nIf you focus on the three center triangles, ignore the outside strokes of the 'A'...\nOn the white internal triangle only the top vertex (which is the start and close vertex) is rounded not 'miter'ed (sharp point) like its other two which are sharp points.You can see the black background showing through at this vertex between the white and red sharply pointed vertex, their should be no black background showing at this vertex just like its other two sharp pointed vertices which are white flush up against the red.\nThen on the red triangle it is the bottom left vertex (start & close) that is rounded, black background showing through before the grey sharply pointed vertex. And on the grey triangle it is the bottom left vertex  (start & close) which is rounded not a sharp point the other two are sharp points showing through between there what should be a white point\nWhat is causing them to be rounded instead of a sharply pointed 'miter' join. Is despite the drawing command notation specifying close path via 'z' which SVG/browser should read as a join... what the SVG is reading is a separate line start, and a separate line end, which just happen to overlap at the same coordinates. \nBecause they are just line ends SVG/browse is applying the 'stroke-linecap' values set to 'round' at each end of a line, because because they happen to overlap each other it looks like a nicely rounded vertex.\nWhen SVG/browser reads it as a path close 'z' all three vertices are considered joins and the path has no line start or line finish, to add caps to.\nThe Bodymovin.js library I tried animating this with originally had a very SIMILAR (but different) problem. But that was because his internal parser was missing the code which appended the the 'z' to the path string. Based on your screen shots initially I would have assumed vivus was missing the same thing internally, but for the fact on my Windows 7 OS ...Firefox and IE render the jsFiddle as they should all sharp pointed vertices. \nI initially I thought possibly because Pathformer.prototype.polygonToPath is the only method that explicitly appends a newElement.d += 'Z'; Because I manually converted my < polygon >'s to < paths > perhaps paths were not fed through this method and somewhere else in the code it was accidentally having its 'z' left off. But if that were the case all three browsers would render the same rounded bug.\nBodymovin.js renders the closed joins property in firefox and chrome (set to ''svg' and 'html' properly. 'canvas' doesnt render any miter joins, but I think that is to do with Canvase seemingly incomplete implementation of SVG and is why am focusing on HTML< svg >. Bodymovin.js's render engine code  is also much larger, also its render source code (custom json format not svg) adds way more overhead than needed for simple path animations). \nSo I know chrome can render 'z' closed path joins... The fact your screenshots showed me firefox on Mac does not, while firefox on windows does IS a head scratcher?? Because I though despite the different operating systems I though the browser render engines themselves were identical on all platforms... but I am far from an expert on browser implementations. \nBut I am pretty sure because firefox and chrome on Mac CAN clearly render SOME miter joins, they must know how to do the 'z' closed path joins as well. \nLike I mentioned I can work around it by over lapping the path on itself extended one more vertex beyond the actual close path vertex. But the bug is there, now you can see it in the screenshots on mac as well. \nSorry to be so long winded I was just hoping the extra info may be of some help finding it :)\nThanks for your time looking into this.\nDaniel\n. OH Drop the javascript code altogether and render the same 'A' SVG static HTML straight, and you will see the source  renders all the rounded vertices properly as sharp points... so it is being modified by vivus internally.\n. Read the previous two emails on github, I had some SVG tags in the response which git hub stripped out, I edit updated them so they remained in the response and it actually makes some sense :)\n. OK I have updated the jsFiddle to include SVG animated by vivus, AND the SVG static HTML... zoom in, all will be be revealed, probably should have lead with this :) https://jsfiddle.net/qajtL81z/8/\n. OK I have updated the jsFiddle to include SVG animated by vivus, AND the SVG static HTML... zoom in, all will be be revealed, probably should have lead with this :) https://jsfiddle.net/qajtL81z/8/\n. Aaaaaah... ofcoarse!!! Thankyou... so the 'bug' was actually in my assumption!!! Thanks for finding it! :) \n...I was really stumped by it, because I was pretty sure I understood all the vivus code and it looked just fine. I don't know what is going on in firefox  and IE on windows 7... it seems chrome is actually the only one rendering as vivus untended! Perhaps the others are falling back onto the original SVG after the animation completes for some reason, or looping.\nSorry to send you on a wild goose chase, I do really appreciate your help though, thank you very much again.\nDaniel.\n. ",
    "jeffceriello": "I have tried that by resetting the animation and playing when in viewport with offset 50% using the plugin jquery waypoint\nI add the svg like this\nvar tick1 = new Vivus('tick1', {file: 'img/tick.svg'});\nbut then when I reset it with tick1.reset(); I get an error TypeError: this.map is null\nThen I wanted to start the animation like this\nvar waypoint = new Waypoint({\n        element: document.getElementById('tick1'),\n        handler: function(direction) {\n            tick1.play(40);\n        },\n        offset: '5%' \n    })\nHow can I fix the reset() error?\nWould that work?\nThank you\n. Hi,\nThank you for your help on this! \nThe offset works fine with your snippet. Unfortunately the vivusObj.play(); doesn't draw the object but instead it just makes it appear instantly. Is there a solution to this or should I just forget about this approach? Here is my entire code:\nvar tick1 = new Vivus('tick1', {\n      file: 'img/tick.svg',\n      start: 'manual',\n      onReady: function (vivusObj) {\n        var waypoint = new Waypoint({\n            element: document.getElementById('tick1'),\n            handler: function(direction) {\n                vivusObj.play(40);\n            },\n            offset: '50%' \n        })\n      }\n    });\n. Oh ok, that worked! I thought I could pass the speed in the function.\nIt works fine now, thank you so much :)\n. ",
    "lepoi": "200/100 = 2. ",
    "summerGreenTea": "thank you for the nice answer\n. ",
    "PeterDaveHello": "Hi @maxwellito \nThanks for your reply, the page looks by my side, if you still have the problem, I would like to know more details if you don't mind, the link is to the vivus page on CDNJS, not the script itself, we automatically update the libraries, but we do not support the latest syntax in the url because it has potential issues with cache, so that I just link to the page.\nBest,\nPeter\n. :+1: \n. ",
    "IonicaBizau": "@maxwellito I created a test svg file and tried it here. You can see that the animation is not there... I have no idea why.\n. @maxwellito Ah, got it! Thanks a lot! :cake: \n. ",
    "jzlosman": "Is this what you were looking to do? \nfiddle\nI originally set it up to be an endless loop for loading, like this.\nfiddle\n. ",
    "charliecduong": "How do you rewind the stroke and fill?\n. ",
    "justgeek": "@jzlosman what about the callback function, have you removed it ? Great Job btw, Thank You.. ",
    "Artusamak": "Yes, that's the idea.\n. No rush there. :)\nI guess that having a new attribute to add to the path such as pathTimingFunction=\"ease-in\" would be how you specify the path animation style.\n. I guess that Vivus animations is a good start. I didn't dive into the custom animation functions to be honest.\n. ",
    "netlarico": "Ohhh, you're right, i found the solution here:\nhttps://github.com/maxwellito/vivus/issues/97#issuecomment-210867653  \nThankssss \n. ",
    "hailie-rei": "@maxwellito Thank you for your comment! For now I just left my solution from my first comment, but I'll keep in mind your advice :)\n. ",
    "lipp": "@maxwellito sorry for my delay too :) \nYou can \"hide \" items by adding @private or @ignore tags to the respective comment block.\n. @maxwellito If you point me the direction, I'm glad to help... \nYou have great docs in place... I'll dive into it and start making non-public stuff @private.\n. ",
    "amitrahav": "Nope. No errors specifically about vivus.\nOn Fri, 13 May 2016 at 11:45 maxwellito notifications@github.com wrote:\n\nHey, got any errors in your browser debugger? (In Chrome, open devlopper\ntools, then go to the 'console' tab)\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/105#issuecomment-218985627\n. ok, i'm getting \nUncaught SecurityError: Failed to read the 'contentDocument' property from 'HTMLObjectElement': Blocked a frame with origin \"null\" from accessing a frame with origin \"null\". Protocols, domains, and ports must match.\n\nafter a lot of reading i found out its a chrome problem with same-origin frame.\nmy question is why there;s need to wrap svg with object tag on build?\n. ya, it helped.\nthe issue was the the cross-origin loading iframe.\nits fine on proddaction : http://monita.appsecure.co/\n2016-05-15 1:11 GMT+03:00 maxwellito notifications@github.com:\n\nClosed #105 https://github.com/maxwellito/vivus/issues/105.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/105#event-660829581\n. \n",
    "jimshell": "Hello,\nThanks for your quick reply :) And you're welcome, all deserved.\nFor the first part, it was not obvious that there was something strange, it only showed up when I began to use several 'data-ignore' paths with regular paths, and noticed that some paths were not apparently doing anything, then I checked the map and realized that there were \"gaps\".\nFor the second part: I'm not sure about how browsers consider <use> tags, actually. And you are right to say that they're not indepedent, as they refer to a unique def path. I did test first a simple animation, of 'async' type: it just work whether 'data-ignore' is set or not on the def path (but it does compute the animation for this 'invisible' path too, which is overkill, isn't it?), what is sure is that, in Webkit browsers, you definitely can define specific stroke-dasharray to <use> tags, and it works really well (tested in Chrome for Windows and Android, and in iOS 6 Safari - yeah, quite old, but used for testing purposes ^^)\nMy secondary tests involved the 'scenario' type, and then it just didn't work as expected: indeed, it did seem that the def path \"state\" was somewhat interfering with the <use> tags if no 'data-ignore' was set on the def path. I've put together the following jsfiddle for you to have a look at what's happening in both cases (important note: i've included my modified version, minified. It was simplified to work with Webkit browsers only, so this fiddle will not work with FF or IE or anything but a Webkit browser) => https://jsfiddle.net/wzmaxv4e/1/\nAs you'll see, the first animation doesn't play well: as path are drawn, you'll notice that start/end don't fit the actual path length. It's maybe just due to the way path calculation is implemented in Vivus, but I think it's not worth it to 'break', possibly, something that works well overall for just a very specific use case, as it is just enough to set 'data-ignore' on the def path to have <use> tags behave properly.\nPlease let me know your thoughts on this :)\n. Hi !\nOh no worries, there is no hurry at all ^^\n^^ i know that feeling, it happens to me (much too) frequently ^^. But honestly it was not obvious, I really had to play with a very specific combination ('scenario' + 'data-ignore') to notice the gaps and then have a proper read to the code to spot it. Glad I could help on this :-)\nYes, absolutely: skeptical is the right term ^^\nI haven't tested in Firefox, but I'm surprised about your tests/results in Chrome actually: here (latest Chrome / Windows 10, Android Lollipop latest Chrome / latest android webview, and even iOS Safari - from iOS 6 to to iOS 9), results are beautiful, really O_o Performance on my iOS 6 test device (an old iPhone 4) has even been improved - primarily because of the same path not being repeated several times in the SVG markup, according to me.\nBut to be sure that I understand : did you compare FF and Chrome <use> tag usage on a test of your own, or with the jsfiddle I provided?\nAh yes sorry, turned my sentence a strange way, having in mind that in Snap Svg for instance, they do the maths not to rely on the getTotalLength() implementations in browsers. I studied my fiddle's behaviour a bit more, at a slower speed, and it appears it has nothing to do with path lengths: the def path being applyed styles does interfere with the <use> tags' own styles. It sort of overrides them: their stroke-dashoffset start value equals the def path's stroke-dashoffset value at the time the <use> tags start being animated (very clear if your play my jsfiddle at a slower pace) 'data-ignore' does solve this as the def path is no longer being animated at all (no styles, no overriding)\nPlease let me know about your clunky results in Chrome - Chrome / webkit are my absolute targets for my current project, any clue on a possible flaw will always be much appreciated :-)\nJimshell\n. Hi there :)\nSorry for replying late.\nYou are totally right: <use> tags do inherit the def path style, thus do inherit the stroke-dasharray property, and this is why, as I could check, a data-ignore property on the def node does the trick => that way, each <use> tag style is independent from the original node because it just has no style at all ;) This is what can be seen in the jsfiddle that I put together.\nYou are most probably right saying that things have changed => it's likely to be correct that the orignal behaviour was entirely dependent on the original node, and browsers implementations must have been improved so that the <use> tags are not that dependent on their reference (DOM-wise, it wouldn't be 'spec compliant' to have nodes you can't operate on granularily just because they refer to some other node)\nSnap SVG is definitely not as lightweight as Vivus ; but this lib does work well, and I found their code pretty neat and efficient.\nPlease do, when you have a chance :) I'll let you know if I ever notice anything new that could help in anyway :)\nYou're welcome, and thanks again for Vivus which is really excellent and what I need right now ^^\nCheers,\nJimshell\n. ",
    "RUIFERNANDE5": "It did not contain any \"display:none\" tags. My svg had only a unique compounded path though, I did export the svg again as multiple paths and it did work. \nThank you!\n. ",
    "JasonStorey": "Ah, I see. Makes perfect sense, thank you.\n. I see, thanks! I hadn't realised that it waits for the SVG to be within the viewport by default. I see the start option now.\nWhat counts as 'viewable'? The animation doesn't appear to trigger when 90% of the SVG is on screen.\n. That's great, thanks.\n. ",
    "stevesunderland": "\ud83d\udc4d \n. ",
    "dalisoft": "+1 maybe i second. ",
    "Phebonacci": "And I may be third. I also need this feature. Was anyone able to implement this? Great library, BTW.. ",
    "skill83": "+1. ",
    "mardulas": "+1. ",
    "m4n1ok": "Hello, \nThis property comes with svg tiny (1.2) and enables stroke to keep his aspect (stroke-width) when you resize SVG. \nNormally, vector-effect is supporting by recent browser. I have realized some test on last version of chrome and firefox. When you use vector-effect without Vivus, it's works. SVG strokes keep their aspect on resize. \nBut when i want to couple with Vivus (last version), path are animated with space and draw is realized not fully like if the calcul of path length will be wrong. \nThanks \n. ",
    "mateitudor": "Hey, sorry for the delay, I wasn't in town.\nSo I took the duplicated animTimingFunction attribute, in fact I took both of them out and simplified everything. Took the dashGap thing out too.\nThe animation still looks really, really slow on IE compared to any other browser. Any idea why? I appreciate your effort and the fact you answered.\n. Whoa, thank you for the superfast response. This is a quality testing build of the menu where I am using your awesome library: http://qa.baeldung.com (hover over the main menu items to activate the dropdown).\nI am using IE Edge through a VM (Windows 10), on a 2015 iMac. The thing is, short of buying a Windows machine there is no way to understand if the animation is laggy due to the VM or the svg support.\nI looked in your closed issues and found someone with a similar problem, that is why I asked.\nAgain, thank you for taking the time out of your day to answer me.\n. ",
    "garethmorgans": "Hi there,\nFirstly, awesome library. Cheers for all your hard work :)\nI am also having this same issue on a Windows Phone - Nokia Lumia 920. However, It works fine in a Microsoft Edge browser on desktop and other mobile and desktop browsers are fine too.\nAnimations are very, very slow - taking around 4-5 mins to draw in.\nAny help would be really appreciated.\n. Thanks for the reply,\nUnderstand your point but it works so well on all other devices/browsers (even a low spec Android)  so I don't think it's down to hardware resources.\nAny other suggestions?\n. Thanks for the response - I've given it a try but no luck :(\nI thought it might help if you saw it. So, please find a video attached. The SVG is the logo slowly drawing in at the top of the page.\nAny help is really appreciated.\nIMG_7492.MOV.mov.zip\n. I've noticed that as well. No problem - I'll test it with just that animation on the page. I'll send another video when finished.\n. I think you were right - it's much better on a blank page. I will investigate further and post back on here.\nedit\nYou were correct. It was running another animation in the background. I've used some server side device detection to detect mobile devices and then it doesn't load in the other SVG at all (which was previously being removed in JS).\nThe only other minor issue I'm getting is that on Windows Mobile it doesn't hook into the animation finishing and add my \"finished\" class.\nThanks very much for your help.\n. ",
    "dbdev": "Hi,\nI've noticed that more than choppy animations on Windows 10 with Microsoft Edge the Vivus SVG animation is causing the SCRIPT70 error blocking completely the javascript runtime.\nHere http://www.undsgn.com/uncode/homepages/classic-consultants/ I was forced to add an exception for Vivus for Microsoft Edge otherwise the whole site would stop working.\nDoes anyone has the same problem?\n. Have some of you guys tested to use the SVG as file instead for inline code with Microsoft Edge? Please let me know, I'm struggling with this. \n. Hi maxwellito,\ndid you have by any chance tested my issue? Or should I open another thread?\n. Yes exactly\n. If you want I can give access to my account of browserstack to debug it.\nLet me know.\n. Hi,\ndid you had the chance to check it?\nLet me know if you need access to browserstack, send me an email to damiano@undsgn.com\n. ",
    "sakul-budhathoki": "Thank you it works on xampp. I used it without a server.\n. ",
    "Snofinity": "Alright, I'll look into that. Thanks!\nOn Sun, Jul 3, 2016 at 2:10 PM, maxwellito notifications@github.com wrote:\n\nHello,\nI'm afraid but using scenarize is the only way, so touching the SVG code.\nHowever, you can modify the .map property of your Vivus instance before\nyou run the animation. Doing it on the onready callback should be good.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/117#issuecomment-230175589,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/AQ9_oansoFP4D6w039P57LWf_9AMJKdIks5qSCVYgaJpZM4JD6-v\n.\n. \n",
    "Pigrecolab": "Sorry, solved, my mistake\n. ",
    "dey-dey": "Thanks for the reply! I wasn't wanting a magic program :) But perhaps more reading on optimizing exports for your library.\n. haha Well actually, that brush vs pen advice is extremely helpful at the moment :)\n. ",
    "KrishnaPG": "Does destroy() cleanup the DOM? Looks like it is not. What is the right method to cleanup the DOM so that next SVG can be placed in the same location?\n. It is not working - freezing the browser.\nBelow is the code, that tries to replace existing loaded SVG with another one:\n```\n        function cleanSVGDOM(svgContainerID, svgObj)\n        {\n            svgObj.stop();\n            svgObj.destroy();\n            svgObj = null;\n            var svgContainerNode = document.getElementById(svgContainerID);\n            while (svgContainerNode.firstChild)\n             svgContainerNode.removeChild(svgContainerNode.firstChild);       \n        }\n    if(self.schematicSVG)\n         cleanSVGDOM('floor-schematic-svg', self.schematicSVG);\n\n    self.schematicSVG = new Vivus('floor-schematic-svg', { file: self.floorData.plan });\n\n```\nIn the debugging, it appears that no need to call stop and then destroy, since the destroy code is already calling the stop as below:\nVivus.prototype.destroy = function () {\n  this.stop();\n  var i, path;\n  for (i = 0; i < this.map.length; i++) {\n    path = this.map[i];\n    path.el.style.strokeDashoffset = null;\n    path.el.style.strokeDasharray = null;\n    this.renderPath(i);\n  }\n};\nFor that matter I do not see the reason to call destroy at all, given that for a dynamically loaded SVG (from file), to replace it with another svg, we have to clean the whole the SVG tree.\nAfter cleaning the SVG DOM and loading a fresh one from file as show in my above code, the browser is just freezing. \n. ",
    "tiborsaas": "Thanks for the quick response. \nI'll try it out shortly and report back. It was exported directly from the latest Illustrator CC.\n. ",
    "AshleyGrant": "I'll list some options. Hopefully some other people will get in here and throw a ruckus about how bad my suggestions are.\n- sync\n- synchronized\n- atTheSameTime\n- allTogether\n- justinTimberlake (get it, b/c everything is drawn \"n'Sync\")\nOk, so that last one is a joke, and the other ones all have flaws. But if we've got OneByOne then AtTheSameTime might work. \nAs far as the other names, I think they're fine, but that's just, like, my opinion, man.\n. I'm cool with parallel.\n. ",
    "StoneCypher": "I just came here to file this.\nParallel seems incorrect.  It implies that multiple distinct jobs are being done, which will terminate with distinct gathered results and may not take the same amount of time.\nThis is .sync(). No question.\n. > However I would like to say to @StoneCypher that I don't tolerate your behavior (here and on Gitter)\nYeah, I didn't actually do the things you're angry about\n\nTrue, I made a mistake by badly naming this animation type, ok.\n\nI never said you did anything bad.  People commenting on other peoples' mistakes is normal in open source.\n\nAnd I don't wanted to change the API until I move to the next major version to avoid breaking changes. \n\nOkay.  I didn't say anything about this\n\nBut laughing at me\n\nI never laughed at you\n\nwriting FILING THE MOST PASSIVE AGGRESSIVE BUG\n\nThis is me criticizing myself, not you.  Why are you angry about my saying \"hey, I'm filing a bug over a minor detail?\"\n\nand imposing your views without talking by finishing your message by No question.\n\nYeah, if being politely told that there's actually a right and wrong to technical terminology is offensive to you, then good luck in open source\nI have absolutely no idea what you're angry about, to be frank.\nLet me know if you want any of the bugfix PRs I made last night.  I'm betting \"no.\"\n. Seems like it'd probably be a lot easier to just fix the SVG using javascript.  Wrote this off the top of my head and haven't tried it; it's probably buggy, but it should be roughly what you need.\n``` html\n<!doctype html>\n\n\nfunction FixThePics(broken, fixContainer) {\n\n  var allElem = broken.getElementsByTagName(\"*\"),\n      total   = allElem.length;\n\n  for (var i = 0; i < allElem.length; i++) {\n    fixContainer.appendChild(allElem[total-i].cloneNode);\n  }\n\n}\n\nwindow.onload = () => {\n    FixThePics(document.getElementById('original'), document.getElementById('repaired'));\n    debugger; // now inspect repaired, get the .outerHTML, and save it to disk\n}\n\n\n\n\n\n\n\n```\n. ",
    "cup-of": "Aww ok, thanks for responding so quick! Do you have any suggestions for alternatives?\n. YES!!! thank you so much sir! :D\n. ",
    "Artimal": "I don't udnerstand that \"hack\". It isonly about opacity... not aabout turning my fill based into stroke. I have Adobe Illustrator do you know how can I render svg in right options for vivus? I even made for you and others a little graphic with all options of svg. You can write me or check graphicly which options set.\nGreatings maxwellito :). ",
    "dy": "@maxwellito I drag and drop your svg into vivus instant and it does not animate. Nor any of my cases. Is there any special svg config required to make it animate droped svg?\nThanks.. @maxwellito that is what I mean, it does not animate even svgs with only stroked paths. Even the svg from the vivus-instant example with <style> removed!\n\nIs it correct way? I mean can you show example svgs which vivus-instant animates? I tried 5 different examples from different sources and lost hope none worked.\n. ",
    "halofreek45": "Ok thank you for the help. As I said I am really new to coding and I would love to learn wherever I can. I have a semi-working version. I made the svg's much smaller and I can type out multiple letters and they will animate but there has too be a delay in the typing or else if a letter is still animating the next letter will appear fully and the letter currently being drawn will restart it's drawing. I am still working on it though so any functionality within Vivus that would be useful to my program would be wonderful :) Thanks again! (Edit) If you could point me in the right way on how to hide them and still be able to clone them that would be awesome. And I will put the code in a JSFiddle as soon as I am at my main computer, as I am away from home. . ",
    "TIIGRUS": "thank you very much, but the class is not added.\nhttp://joxi.ru/MAj0jMBF4Yd6Zm. No errors, but the class is not added.. Nice, work in the IE)), but delete my class name, and paste \"[object SVGAnimatedString]\".))\nhttp://joxi.ru/krDpw9RsEdGQer. I do not know very well javascript, thank you for your help). Wow, it works! Brilliant!Thank you very much for your help. And for your time.\n. I include svg by object.\nMy code example: \nobject data=\"img/home_svg/3.svg\" id=\"svg_home_card\" class=\"svg_home svg_home_card\" type=\"image/svg+xml\". Scripts in the my page:\n\n\n\n\nThis is all scripts.  . Thank you! Its is my error in the insprector. Extensions in the Chrome make this error. I disabled all extensions and my error missing. This Issue can close) . ",
    "desko27": "Hi, thanks for your reply!\n\nYou could manipulate the definition which will update all the use tags.\n\nWhat do you mean? Could I use Vivus with my existing markup? I can only think of replacing each use definition by JavaScript when DOM is ready, in order to make it valid for Vivus. Would that be a solution?\nI really appreciate any advice :). Oh, now I get it! Thank you so much for your clear explanation and the examples, the JSfiddle has been of a tremendous help \ud83d\ude03\nNow that I understand how it works I managed to get it working by using svg4everybody with polyfill: true to embed each definition from sprite.svg directly into every use tag which actually transforms them into independent inline SVGs. This way Vivus can manipulate them separately.\nVivus is awesome, huge thanks for your time!. ",
    "peterennis": "It is running as a PWA here: adaept.com\nThe attachment shows a snip of the animation.It does not appear to have a direct link.\nLet me know what else you need if that is not sufficient.\nThanks,\nPeter\nOn Sunday, March 5, 2017 12:40 AM, maxwellito <notifications@github.com> wrote:\n\nHi there,\nBy loading it dynamically, the SVG should take the full space provided by the parent container. Can you please provide me the link to your dev page, I'll have a look. :)\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.  \n. Updated to use latest Inkscape and it added the viewbox.\nI used the Vivus library and a non instant SVG.\nIt works well.\nThanks for the help.. ",
    "sbastias": "Sure, it's attached\nOn Mar 5, 2017 3:41 AM, \"maxwellito\" notifications@github.com wrote:\n\nHi there,\nCan you please provide me your SVG, I would like to have a look to have a\nbetter understanding. Thanks :)\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/148#issuecomment-284214060,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA9ei6YWGaxkmBPeoarp8jbNGRbNQ4Olks5rinVUgaJpZM4MTSJs\n.\n. I just realized that's the original SVG without the timing options.\n\nYou can find the edited SVG here:\nhttp://remed.io/remedio/logo-wordmark3.svg\nTHANK YOU!\nOn Mar 5, 2017 1:41 PM, \"Sergio Bastias\" sergio@dishproductions.com wrote:\nSure, it's attached\nOn Mar 5, 2017 3:41 AM, \"maxwellito\" notifications@github.com wrote:\n\nHi there,\nCan you please provide me your SVG, I would like to have a look to have a\nbetter understanding. Thanks :)\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/148#issuecomment-284214060,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA9ei6YWGaxkmBPeoarp8jbNGRbNQ4Olks5rinVUgaJpZM4MTSJs\n.\n. Sorry - what was the solution?\n\nOn Mar 5, 2017 2:16 PM, \"maxwellito\" notifications@github.com wrote:\nYou're welcome! :-)\nThat was an easy one ;-)\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/148#issuecomment-284252654,\nor mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AA9eiwMGJpUPvUkTXa5LWe54mhJuYliuks5riwnsgaJpZM4MTSJs\n.\n. Sweet. I'll try that now and confirm....\nOn Mar 5, 2017 2:34 PM, \"maxwellito\" notifications@github.com wrote:\n\nI didn't realise you don't wait for the SVG to be loaded to start to play\nit. When the dynamic load is used (via the property file), the callback\nonReady must be used.\nvivusLogo = new Vivus('logo', {\n  start: 'manual',\n  type: 'scenario',\n  file: 'logo-wordmark3.svg?'+Math.random(),\n  onReady: function () {\n      // Now I'm ready :) Let's play!\n      vivusLogo.play(0.5, function(){ console.log('logo completed') })\n  }\n})\n// Do not trigger it here, the SVG is not ready// vivusLogo.play(0.5, function(){ console.log('logo completed') })\nhttp://maxwellito.github.io/drafts/vivus-issue-148/\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/148#issuecomment-284254309,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA9ei09PGg50az7RB5lxd7UmzjxFoHySks5riw4pgaJpZM4MTSJs\n.\n. Ok, it seems to work.... but how can I start 'manual-'ly outside of the\nonReady function? If I .play() in the onReady, its essentially like\nautostart....\n\nOn Sun, Mar 5, 2017 at 2:35 PM, Sergio Bastias sergio@dishproductions.com\nwrote:\n\nSweet. I'll try that now and confirm....\nOn Mar 5, 2017 2:34 PM, \"maxwellito\" notifications@github.com wrote:\n\nI didn't realise you don't wait for the SVG to be loaded to start to play\nit. When the dynamic load is used (via the property file), the callback\nonReady must be used.\nvivusLogo = new Vivus('logo', {\n start: 'manual',\n type: 'scenario',\n file: 'logo-wordmark3.svg?'+Math.random(),\n onReady: function () {\n     // Now I'm ready :) Let's play!\n     vivusLogo.play(0.5, function(){ console.log('logo completed') })\n }\n})\n// Do not trigger it here, the SVG is not ready// vivusLogo.play(0.5, function(){ console.log('logo completed') })\nhttp://maxwellito.github.io/drafts/vivus-issue-148/\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/148#issuecomment-284254309,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA9ei09PGg50az7RB5lxd7UmzjxFoHySks5riw4pgaJpZM4MTSJs\n.\n\n\n. Ok, here's my use case.\n\nOn loading my SPA, I call:\nwindow.vivusLogo = new Vivus('logo', {start: 'manual', type: 'scenario', file: 'logo-wordmark3.svg?'+Math.random(), onReady: function(){\n        vivusLogo.reset().stop()\n      }})\n...and then later in my application logic:\nwindow.vivusLogo.play(function(){ console.log('logo completed') })\nBut when i call .play(), the callback runs immediately and animation doesn't start. (Same problem when i don't include the .reset().stop()). Perfect! It's working.\nI'm not sure I understand the logic? When I call startAnimation, autostart is set to TRUE... how does the onReady function get called again? Just out of curiousity.. I think so. I didn't know that the SVG triggered onReady as well as the\n.play() function.\nAmazing, thanks!\nOn Sun, Mar 5, 2017 at 3:07 PM, maxwellito notifications@github.com wrote:\n\nHehe :)\nSorry for not leaving more details, here is the story.\n\nThe vivus object is set up. This one start to load the SVG\n\n1st scenario:\n\nThe SVG is loaded, then vivus trigger the onReady callback. But\n   because autostart variable is not true.. nothing happens.\n[At some point] your code trigger startAnimation(), this one will\n   check if the vivus instance is ready (which is the case) so it starts\n   playing it.\n\n2nd scenario:\n\nYour code trigger startAnimation(), this one will check if the\n   vivus instance is ready (which is NOT the case) so it only switch the\n   autostart variable to true (as a marker).\nThe SVG is loaded, then vivus trigger the onReady callback. This\n   time, the autostart variable is true, so it trigger startAnimation().\n   And this time, the vivus instance is ready so it play the animation.\n\nThe reason I use the same function (on the onReady and manually) is\nbecause it will avoid redefining the setting of the play. It's at only\none place.\nI hope this explanation helps :-)\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/148#issuecomment-284258203,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA9ei7Glc-sBOxpTxlYAygocfdCR7Xreks5rixYGgaJpZM4MTSJs\n.\n. \n",
    "torosushi": "Thank you. I tried, but element visibility remain hidden.\ncode below:\n```\n\njQuery( document ).ready(function() {\n    var logobg_line_id = document.querySelector('#logobg_line');\n    new Vivus('logobg_line', {\n    type: 'delayed',\n    duration: 100,\n    animTimingFunction: Vivus.EASE,\n    onReady: function(logobg_line_id){ logobg_line_id.el.style.visibility = 'visible';\n        refit(); \n    }\n}, f_logobg);\n});\n```. ",
    "solid-pixel": "@torosushi I haven't tried that snippet but mine works well with jQuery:\nCSS:\nCSS\n.animate-svg {\nvisibility:hidden;\n}\nJS:\nJavascript \n        new Vivus(myElements[i], {\n          duration: 100,\n          type: 'delayed',\n          animTimingFunction: Vivus.EASE_IN,\n          onReady: function () {\n                 $('.animate-svg svg').css('visibility', 'visible');\n           },\n        }, myCallback). ",
    "JekaPolihovic": "Why say !\nUncaught ReferenceError: myCallback is not defined\n. ",
    "stakkit": "Thank you so much Max!. ",
    "rauchg": "Even though it doesn't do anything meaningful on the server, I think it'd still be cool if it also didn't cause an error. I say this strictly from the perspective of complying with existing packaging tools, not that it'd necessarily be \"the right way\". So, I've used a workaround for now (by loading the lib lazily), but it'd make creating one bundle much easier if it didn't cause an error when window is absent.. Correct. I think many libraries do this already, because we're able to bundle them fine even though they're browser-only. For example, a recent one I used in this way is unfetch: https://github.com/developit/unfetch. LGTM!. Although:\n/**\n * Alias for document element\n *\n * @type {DOMelement}\n */\nVivus.prototype.docElem = window.document.documentElement;\nThis will also fail on the server. Same with:\nrequestAnimFrame = (function () {\n  return (\n    window.requestAnimationFrame       ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame    ||\n    window.oRequestAnimationFrame      ||\n    window.msRequestAnimationFrame     ||\n    function(/* function */ callback){\n      return window.setTimeout(callback, 1000 / 60);\n    }\n  );\n})();. LGTM. ",
    "cmanimani": "Thank you that solved the problem! :). ",
    "alimhabib": "Ho @maxwellito \nI already mentioned using the play method I see delay while with Setframeprogress no delay at all :) . The time in the paths of SVG calculated using 25 frames/sec \nhttps://drive.google.com/file/d/0B9eq-nTDQri4XzBZRndsR2tSMXM/view?usp=sharing  this a link to sample code . Hello Maxwellito,\nThanks for your response again!\nThe issue here is that I want to playback/animate mySVG at 25 fps and it seems that either the browser or the vivus.js library has a default playback/animation fps setting of 60 fps. As a result, the SVG set to 25 fps relevant duration is played back at 60 fps making it play much faster than the audio file!\nI was wondering if there was any way to modify the code and playback at any desired fps?. All works fine now thanks a lot , and sorry for late reply . ",
    "Billybobbonnet": "Hello Max,\nIt works in most cases. I assumed it was cache related but while testing several times, it happens only like 1/5 times.\nI'll give a try with the autostart. Maybe add a little delay (I wrapped in in a document ready event tho) and see if it keeps occurring.\nI have to work again on this anyway since I realized that my stylish and beloved clipPath doesn't work with ie/edge (I should have known ^^ ).\nThank you for your answer. If I discover a replicable cause and if it's related to vivus, I'll report that. I will close the issue for now, if it's ok for you.. ",
    "qmanning": "Sorry for the delay. So, happy to include both a CodePen & a JSFiddle, however, both don't seem to like playing well with the \"object\" or with having Vivus load the object dynamically to the div. \nFor that purpose, I've also included a link to a private server, just so you can see the issue in Chrome. Apologies for having to go against the grain on that one:\nCodePen - OBJECT doesn't seem to load for some reason\nhttps://codepen.io/qmanning/pen/dWwdeo\nJSFiddle - OBJECT doesn't seem to load for some reason\nhttps://jsfiddle.net/qmanning/e2Lnq7w5/1/\nSite Example - Where you can see the issue\nhttp://deadlastgame.com/svg_test.html\n. ",
    "breidbart": "Hey, thanks for the quick reply! Here is an example using \"scenario-sync\"\nthat includes a delay after it is done animating. You will see if you\nchange the type to \"async\" or \"delayed\" the callback will trigger\nimmediately when finished.\nhttps://jsfiddle.net/0e7jxv43/\nOn Wed, Jun 28, 2017 at 3:33 AM, maxwellito notifications@github.com\nwrote:\n\nHi there,\nEverything should run smoothly. Can you please provide my a jsFiddle with\nyour code to analyse it? :)\nThanks\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/162#issuecomment-311580795,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AKshahK7lxrgn4h7CchksAB_Zrvug2aSks5sIgGygaJpZM4OHHW4\n.\n. Thanks for looking into this. That makes a lot of sense. I believe if I\ncreate a new SVG where each leaf is a separate path that will allow me to\nhave more flexibility in the way it animates. Thanks for identifying what\nthe problem area was, greatly appreciated.\n\nOn Wed, Jun 28, 2017 at 1:08 PM, maxwellito notifications@github.com\nwrote:\n\nThanks for the jsFiddle, it's much easier to debug now :)\nLittle trick, to debug animation I recommend to display the map from the\nVivus object with console.table(myVivusInstance.map). It will provide\nyou\nthe start and duration of each path.\nIf you try it you will see that your 'leaves' path starts at 200 for a\nduration of 600. However this path is longer than it seems, it looks ended\nbefore it actually is. I tried to simplify it with SVGOMG but without\nsuccess. But that explain the delay at the end of the animation before the\ncallback is triggered.\nI made a fork of your jsFiddle to show you the difference. I reorder the\nanimation. https://jsfiddle.net/8qvknhjm/1/\nI don't know how to simplify the 'leaves' path, but I can have a look when\nIll have access to illustrator.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/162#issuecomment-311725218,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AKshanjg-FutC7zcrA8OB2VJHVIRwrBpks5sIoh4gaJpZM4OHHW4\n.\n. \n",
    "yamaks": "I will have to remake svg. But vivus is gorgeous!. ",
    "docmars": "@maxwellito \nThanks for the swift reply. I'm glad I could make dissecting this a little easier for you!\nI thought for sure I tried a similar approach in Vue, but I must have missed grabbing the child element. (DOM operations are discouraged in Vue wherever possible, but in this case it's unavoidable).\nThanks for the simple fix. I'll give that shot in my larger project next week and see how it goes.\nI appreciate your help!\nOn CORS: Yeah, it's weird. CodePen allows CORS for including assets in your project, so I was surprised the file option didn't take, though that's just passing the URL to an <object>'s data attribute I'm assuming, so that's probably why.\nIt would be kind of nice to see Vivus support making an AJAX request for instances where using an object element isn't ideal. But fetch and other libs make it painless anyway, so \u00af_(\u30c4)_/\u00af. ",
    "rfabes21": "We fixed the issue, we had to actually serve the svg files from our webserver, extrapolated from all the other static assets served from S3. Too much of a CORS/Header nightmare otherwise. Outside that we also used a django plugin called django-inline-svg to embed the svg tag into the page rather than dynamically load it. . ",
    "davea0511": "Note of course this only works for flat colors ... no gradients or patterns of course ... but again tweaking the pattern routine might be able to do this.  Above my head.. ",
    "Lauwisme": "Hi @maxwellito, did you ever get around to implement something based on this? I would be very interested if you did!. ",
    "mamboer": "After looking into the https://github.com/maxwellito/vivus#principles, i figured it out myself.. ",
    "dagenius007": "Using the vivius-instant ,my svg does not animate.\nSecondly I get no error. ",
    "kaspar-allenbach": "So. ehm what's the sollution to this? I have a svg where the animation is massivley delaied on FF compared to chrome: https://meteotest.meteotest-test.ch/ (the svg happens on the inital big blue surface). Thank's for the answer. I admit it might be a bit overkill :D and needs some refinement on my side. But always good to know where the limitations are.. ",
    "sdgandhi": "oops figured it out:\nnew Vivus('graph', {duration: 200, file: Graph}, null). ",
    "ch0wner": "@maxwellito Hi!\nOkay let me be a bit clearer.. I did some more readings and \nthe problem i encounter is similar to this issue where the leaves are animating too fast:\nhttps://github.com/maxwellito/vivus/issues/162\nhere is an svg demonstrating my problem (Sorry Im not familiar with jsfiddle but you can just put it inside vivus instant and hit update and see that the Words are animated too fast)\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<svg xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n    xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n    xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\" version=\"1.1\" id=\"logosvg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 476.04448 469.76616\"\n    xml:space=\"preserve\" width=\"476.04446\" height=\"469.76614\" sodipodi:docname=\"asd.svg\" inkscape:version=\"0.92.2 (5c3e80d, 2017-08-06)\"\n    style=\"fill-opacity: 0;\">\n    <sodipodi:namedview pagecolor=\"#ffffff\" bordercolor=\"#666666\" borderopacity=\"1\" objecttolerance=\"10\" gridtolerance=\"10\" guidetolerance=\"10\"\n        inkscape:pageopacity=\"0\" inkscape:pageshadow=\"2\" inkscape:window-width=\"1920\" inkscape:window-height=\"1001\" id=\"namedview3797\"\n        showgrid=\"false\" inkscape:zoom=\"1.7200048\" inkscape:cx=\"238.02223\" inkscape:cy=\"48.837074\" inkscape:window-x=\"-9\" inkscape:window-y=\"-9\"\n        inkscape:window-maximized=\"1\" inkscape:current-layer=\"logosvg\" onload=\"initLogoAnimation()\" inkscape:pagecheckerboard=\"true\"\n    />\n    <metadata id=\"metadata95\">\n        <rdf:RDF>\n            <cc:Work rdf:about=\"\">\n                <dc:format>image/svg+xml</dc:format>\n                <dc:type rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\n                <dc:title />\n            </cc:Work>\n        </rdf:RDF>\n    </metadata>\n    <defs id=\"defs93\" />\n    <path style=\"opacity:1;fill:#3a556a;stroke:#000000;stroke-width:0.69099998;stroke-miterlimit:4\" d=\"m 395.81349,66.503488 h -37.86393 l -1.66408,16.643441 H 385.8277 V 254.57466 H 340.47442 134.92643 89.573138 V 83.146929 H 119.11537 L 117.45129,66.503488 H 79.586653 c -4.577051,0 -8.321722,3.328825 -8.321722,7.490029 V 282.4535 c 0,4.16122 3.744671,7.48935 8.321722,7.48935 H 396.23003 c 4.57704,0 8.32172,-3.32883 8.32172,-7.48935 V 73.993517 c -0.41654,-3.745362 -4.16121,-7.490029 -8.73826,-7.490029 z\"\n        id=\"path2\" inkscape:connector-curvature=\"0\" />\n    <path id=\"polygon4\" d=\"m 340.47372,254.57565 h 45.35397 V 83.146924 h -29.12637 z\" style=\"opacity:1;fill:#ebf0f3;stroke:#000000;stroke-width:0.69100004;stroke-miterlimit:4\"\n        inkscape:connector-curvature=\"0\" />\n    <path id=\"polygon6\" d=\"m 118.69882,83.146924 h 238.0025 l 1.66476,-16.643445 H 117.03475 Z\" style=\"opacity:1;fill:#2f4859;stroke:#000000;stroke-width:0.69100004;stroke-miterlimit:4\"\n        inkscape:connector-curvature=\"0\" />\n    <path id=\"polygon8\" d=\"m 118.69882,83.146924 16.2276,171.428726 h 205.5473 l 16.2276,-171.428726 z\" style=\"opacity:1;fill:#e1e6e9;stroke:#000000;stroke-width:0.69100004;stroke-miterlimit:4\"\n        inkscape:connector-curvature=\"0\" />\n    <g id=\"g14\" transform=\"matrix(0.69077134,0,0,0.69077134,71.264931,0.13762262)\" style=\"opacity:1;stroke:#000000;stroke-width:1.00033104;stroke-miterlimit:4\">\n        <path id=\"polygon12\" d=\"M 68.668,120.169 H 26.504 v 248.17 H 92.16 Z\" style=\"fill:#ebf0f3;stroke:#000000;stroke-width:1.00033104;stroke-miterlimit:4\"\n            inkscape:connector-curvature=\"0\" />\n    </g>\n    <g id=\"g76\" transform=\"matrix(0.69077134,0,0,0.69077134,71.264931,0.13762262)\" style=\"opacity:1;stroke:#000000;stroke-width:1.00033104;stroke-miterlimit:4\">\n        <path id=\"ellipse72\" d=\"m 259.61399,393.035 a 18.673,16.865999 0 0 1 -18.673,16.866 18.673,16.865999 0 0 1 -18.673,-16.866 18.673,16.865999 0 0 1 18.673,-16.866 18.673,16.865999 0 0 1 18.673,16.866 z\"\n            style=\"fill:#2f4859;stroke:#000000;stroke-width:1.00033104;stroke-miterlimit:4\" inkscape:connector-curvature=\"0\"\n        />\n        <path id=\"rect74\" d=\"m 148.179,420.14099 h 184.922 v 35.539 H 148.179 Z\" style=\"fill:#2f4859;stroke:#000000;stroke-width:1.00033104;stroke-miterlimit:4\"\n            inkscape:connector-curvature=\"0\" />\n    </g>\n    <path style=\"opacity:1;fill:#3a556a;stroke:#000000;stroke-width:0.69099998;stroke-miterlimit:4\" d=\"M 327.57495,314.49218 H 147.8252 c -3.32883,0 -6.24111,2.49645 -6.24111,5.82528 v 12.89877 H 334.2326 v -12.89877 c 0,-3.32883 -2.91228,-5.82528 -6.65765,-5.82528 z\"\n        id=\"path80\" inkscape:connector-curvature=\"0\" />\n    <g transform=\"matrix(1.5622334,0,0,1.5452361,1.2491052,361.77887)\" id=\"g88\" style=\"fill:#ffffff;stroke:#000000;stroke-width:0.5740391;stroke-miterlimit:4\">\n        <path d=\"m 0.19531,13.867375 h 3.2031 v 1.6797 H 2.92966 l 1.7676,6.4551 2.4219,-8.1348 h 1.5234 l 2.3145,8.1152 1.8457,-6.4355 h -0.58594 v -1.6797 h 3.2031 v 1.6797 h -0.86914 l -2.7734,8.5938 h -1.6797 l -2.2949,-8.0762 -2.2852,8.0762 h -1.6992 l -2.7539,-8.5938 H 0.19534 v -1.6797 z m 30.527334,5.2928 q 0,0.429687 0.06348,0.786133 0.06348,0.356445 0.18066,0.67871 0.361328,0.976562 1.157227,1.469726 0.795898,0.493164 1.8018,0.49316 0.791016,0 1.538086,-0.219726 0.74707,-0.219727 1.5674,-0.68848 l 0.73242,1.2402 q -0.996094,0.683594 -2.001953,1.015625 -1.00586,0.332031 -2.0898,0.33203 -1.025391,0 -1.899414,-0.341797 -0.874024,-0.341797 -1.5039,-1.0156 -0.629877,-0.673803 -0.98633,-1.6797 -0.356454,-1.005897 -0.35645,-2.3438 0,-1.083984 0.302734,-2.045898 0.302734,-0.961915 0.90332,-1.6797 0.600586,-0.717786 1.4893,-1.1377 0.888714,-0.419915 2.0703,-0.41992 1.142578,0 1.90918,0.346679 0.766601,0.34668 1.25,0.91797 0.483398,0.571291 0.73242,1.3037 0.249021,0.73241 0.34668,1.4941 0.04883,0.371094 0.06348,0.751953 0.01465,0.38086 0.01465,0.74219 h -7.2852 z m 2.8418,-4.0332 q -0.634766,0 -1.108399,0.180664 -0.473633,0.180664 -0.80566,0.51758 -0.332027,0.336916 -0.53223,0.8252 -0.200203,0.488284 -0.29785,1.0938 h 5.2441 q -0.03906,-0.566406 -0.180664,-1.044922 -0.141601,-0.478515 -0.43457,-0.83008 -0.292968,-0.351564 -0.75195,-0.54688 -0.458981,-0.195315 -1.1328,-0.19531 z m 18.505868,-6.3376 h 3.2813 v 5.918 q 0.644531,-0.498047 1.40625,-0.791016 0.761719,-0.292968 1.5723,-0.29297 0.996094,0 1.826172,0.371094 0.830078,0.371094 1.4307,1.0449 0.600622,0.673806 0.93262,1.6162 0.331998,0.942394 0.33203,2.085 0,1.220703 -0.371094,2.211914 -0.371094,0.991211 -1.0303,1.7041 -0.659206,0.712889 -1.5674,1.0986 -0.908194,0.385711 -1.9922,0.38574 -0.751953,0 -1.411133,-0.219726 -0.65918,-0.219727 -1.1279,-0.57129 v 0.63477 h -1.8164 v -13.516 h -1.4648 V 8.7889906 Z m 5.78126,6.4352 q -0.712891,0 -1.367188,0.292969 -0.654297,0.292969 -1.1328,0.79102 v 5.4395 q 0.3125,0.322265 0.917969,0.571289 0.605469,0.249023 1.5234,0.24902 0.625,0 1.201172,-0.234375 0.576172,-0.234375 1.0156,-0.70801 0.439428,-0.473635 0.70313,-1.1768 0.263702,-0.703165 0.26367,-1.6406 0,-0.859375 -0.249023,-1.523438 -0.249024,-0.664062 -0.67383,-1.123 -0.424807,-0.458937 -0.99121,-0.69824 -0.566404,-0.239302 -1.2109,-0.23926 z m 17.910147,8.7598 z m 23.330118,-15.195 h 3.193403 v 13.516 h 1.4844 v 1.6797 h -3.3008 v -0.83008 q -0.488284,0.498047 -1.132815,0.776367 -0.644531,0.27832 -1.4648,0.27832 -1.025391,0 -1.90918,-0.356445 -0.883789,-0.356445 -1.5332,-1.0449 -0.649411,-0.688455 -1.0156,-1.6895 -0.366189,-1.001045 -0.36621,-2.29 0,-1.171875 0.351563,-2.133789 0.351562,-0.961914 0.99609,-1.6406 0.644527,-0.678686 1.5527,-1.0547 0.908172,-0.376014 2.0215,-0.37598 0.732422,0 1.33789,0.161133 0.605469,0.161132 1.162102,0.56152 v -3.877 H 99.091878 V 8.7897206 Z m -0.9864,13.8376 q 0.810547,0 1.357422,-0.239258 0.546871,-0.239258 1.005901,-0.71777 v -5.6641 q -0.488282,-0.410156 -1.123048,-0.595703 -0.634765,-0.185547 -1.2988,-0.18555 -0.644531,0 -1.210937,0.239258 -0.566406,0.239258 -0.99121,0.69824 -0.424804,0.458982 -0.66895,1.123 -0.244146,0.664018 -0.24414,1.5234 0,0.9375 0.234375,1.65039 0.234375,0.712891 0.6543,1.1963 0.419925,0.48341 1.0059,0.72754 0.585975,0.244131 1.2793,0.244141 z m 21.132833,-3.4668 q 0,0.429687 0.0635,0.786133 0.0635,0.356445 0.18066,0.67871 0.36132,0.976562 1.15722,1.469726 0.7959,0.493164 1.8018,0.49316 0.79102,0 1.53809,-0.219726 0.74707,-0.219727 1.5674,-0.68848 l 0.73242,1.2402 q -0.9961,0.683594 -2.00196,1.015625 -1.00585,0.332031 -2.0898,0.33203 -1.02539,0 -1.89941,-0.341797 -0.87402,-0.341797 -1.5039,-1.0156 -0.62988,-0.673803 -0.98633,-1.6797 -0.35645,-1.005897 -0.35645,-2.3438 0,-1.083984 0.30274,-2.045898 0.30273,-0.961915 0.90332,-1.6797 0.60058,-0.717786 1.4893,-1.1377 0.88871,-0.419915 2.0703,-0.41992 1.14257,0 1.90917,0.346679 0.76661,0.34668 1.25,0.91797 0.4834,0.571291 0.73242,1.3037 0.24903,0.73241 0.34668,1.4941 0.0488,0.371094 0.0635,0.751953 0.0147,0.38086 0.0147,0.74219 h -7.2852 z m 2.8418,-4.0332 q -0.63477,0 -1.1084,0.180664 -0.47363,0.180664 -0.80566,0.51758 -0.33203,0.336916 -0.53223,0.8252 -0.2002,0.488284 -0.29785,1.0938 h 5.2441 q -0.0391,-0.566406 -0.18066,-1.044922 -0.14161,-0.478515 -0.43457,-0.83008 -0.29297,-0.351564 -0.75195,-0.54688 -0.45899,-0.195315 -1.1328,-0.19531 z m 18.14454,-1.2596 h 3.4961 v 1.6797 h -0.94727 l 2.5,6.9727 2.4414,-6.9727 h -0.61523 v -1.6797 h 3.2031 v 1.6797 h -0.86914 l -3.3105,8.5938 h -1.7969 l -3.3008,-8.5938 h -0.80078 v -1.6797 z m 23.45703,-5.078 h 3.2813 v 13.516 h 1.5234 v 1.6797 h -4.8047 v -1.6797 h 1.4648 v -11.836 h -1.4648 v -1.6797 z m 20.31249,10.3708 q 0,0.429687 0.0635,0.786133 0.0635,0.356445 0.18066,0.67871 0.36133,0.976562 1.15723,1.469726 0.7959,0.493164 1.8018,0.49316 0.79102,0 1.53809,-0.219726 0.74707,-0.219727 1.5674,-0.68848 l 0.73242,1.2402 q -0.9961,0.683594 -2.00196,1.015625 -1.00586,0.332031 -2.0898,0.33203 -1.02539,0 -1.89941,-0.341797 -0.87402,-0.341797 -1.5039,-1.0156 -0.62988,-0.673803 -0.98633,-1.6797 -0.35645,-1.005897 -0.35645,-2.3438 0,-1.083984 0.30273,-2.045898 0.30274,-0.961915 0.90332,-1.6797 0.60059,-0.717786 1.4893,-1.1377 0.88872,-0.419915 2.0703,-0.41992 1.14258,0 1.90918,0.346679 0.76661,0.34668 1.25,0.91797 0.4834,0.571291 0.73242,1.3037 0.24903,0.73241 0.34668,1.4941 0.0488,0.371094 0.0635,0.751953 0.0147,0.38086 0.0147,0.74219 h -7.2852 z m 2.8418,-4.0332 q -0.63477,0 -1.1084,0.180664 -0.47363,0.180664 -0.80566,0.51758 -0.33203,0.336916 -0.53223,0.8252 -0.2002,0.488284 -0.29785,1.0938 h 5.2441 q -0.0391,-0.566406 -0.18066,-1.044922 -0.14161,-0.478515 -0.43457,-0.83008 -0.29297,-0.351564 -0.75195,-0.54688 -0.45899,-0.195315 -1.1328,-0.19531 z m 18.84767,-6.3376 h 3.2813 v 13.516 h 1.5234 v 1.6797 h -4.8047 v -1.6797 h 1.4648 v -11.836 h -1.4648 v -1.6797 z m 18.45702,10.1364 q 0.01,-1.201172 0.38574,-2.1875 0.37598,-0.986328 1.0498,-1.6943 0.67383,-0.707972 1.6016,-1.0889 0.92778,-0.380928 2.041,-0.38086 1.12305,0 2.05567,0.380859 0.93261,0.38086 1.5967,1.0791 0.66408,0.698241 1.0352,1.6846 0.37111,0.98636 0.37109,2.1875 0,1.181641 -0.3711,2.172852 -0.37109,0.991211 -1.0352,1.7041 -0.6641,0.712889 -1.5967,1.1084 -0.93259,0.395511 -2.0557,0.39551 -1.14257,0 -2.07031,-0.390625 -0.92773,-0.390625 -1.5918,-1.0986 -0.66406,-0.707975 -1.0352,-1.6943 -0.37113,-0.986325 -0.38086,-2.1777 z m 1.92386,0 q 0,0.869141 0.24902,1.572266 0.24903,0.703125 0.68359,1.1963 0.43457,0.493175 1.0059,0.76172 0.57134,0.268545 1.2158,0.26855 0.67383,0 1.25489,-0.263672 0.58105,-0.263672 1.0107,-0.75684 0.42964,-0.493168 0.67383,-1.1963 0.24418,-0.703132 0.24414,-1.582 0,-0.917969 -0.24414,-1.63086 -0.24414,-0.71289 -0.66895,-1.1914 -0.42481,-0.478509 -1.0107,-0.72266 -0.58589,-0.24415 -1.2598,-0.24414 -0.64453,0 -1.21582,0.244141 -0.57129,0.244141 -1.0059,0.72266 -0.43461,0.478519 -0.68359,1.1914 -0.24898,0.712881 -0.24902,1.6309 z m 21.78708,-5.0584 h 3.2227 v 0.83984 q 0.64453,-0.498047 1.40625,-0.791016 0.76172,-0.292968 1.5723,-0.29297 0.99609,0 1.82617,0.371094 0.83008,0.371094 1.4307,1.0449 0.60062,0.673806 0.93262,1.6162 0.332,0.942394 0.33203,2.085 0,1.220703 -0.37109,2.226563 -0.3711,1.005859 -1.0303,1.7236 -0.65921,0.71774 -1.5674,1.1182 -0.9082,0.400459 -1.9922,0.40039 -0.77149,0 -1.37207,-0.161133 -0.60059,-0.161133 -1.1475,-0.41504 v 3.2715 h 1.582 v 1.6797 h -4.8047 v -1.6797 h 1.3867 v -11.357 h -1.4063 v -1.6797 z m 5.72263,1.3572 q -0.70312,0 -1.35254,0.283203 -0.64941,0.283203 -1.1279,0.78125 v 5.4785 q 0.32227,0.332031 0.92285,0.595703 0.60059,0.263672 1.499,0.26367 0.625,0 1.20117,-0.24414 0.57618,-0.244141 1.0156,-0.72754 0.43943,-0.4834 0.70313,-1.1963 0.26371,-0.712901 0.26367,-1.6504 0,-0.859375 -0.24902,-1.523438 -0.24902,-0.664062 -0.67383,-1.123 -0.42481,-0.458937 -0.99121,-0.69824 -0.5664,-0.239302 -1.2109,-0.23926 z m 20.60548,3.9356 q 0,0.429687 0.0635,0.786133 0.0635,0.356445 0.18066,0.67871 0.36133,0.976562 1.15723,1.469726 0.7959,0.493164 1.8018,0.49316 0.79101,0 1.53808,-0.219726 0.74707,-0.219727 1.5674,-0.68848 l 0.73242,1.2402 q -0.99609,0.683594 -2.00195,1.015625 -1.00586,0.332031 -2.0898,0.33203 -1.02539,0 -1.89941,-0.341797 -0.87403,-0.341797 -1.5039,-1.0156 -0.62988,-0.673803 -0.98633,-1.6797 -0.35646,-1.005897 -0.35645,-2.3438 0,-1.083984 0.30273,-2.045898 0.30274,-0.961915 0.90332,-1.6797 0.60059,-0.717786 1.4893,-1.1377 0.88872,-0.419915 2.0703,-0.41992 1.14258,0 1.90918,0.346679 0.7666,0.34668 1.25,0.91797 0.4834,0.571291 0.73242,1.3037 0.24902,0.73241 0.34668,1.4941 0.0488,0.371094 0.0635,0.751953 0.0147,0.38086 0.0147,0.74219 h -7.2852 z m 2.8418,-4.0332 q -0.63476,0 -1.10839,0.180664 -0.47364,0.180664 -0.80566,0.51758 -0.33203,0.336916 -0.53223,0.8252 -0.20021,0.488284 -0.29785,1.0938 h 5.2441 q -0.0391,-0.566406 -0.18067,-1.044922 -0.1416,-0.478515 -0.43457,-0.83008 -0.29297,-0.351564 -0.75195,-0.54688 -0.45898,-0.195315 -1.1328,-0.19531 z m 26.20123,0.8789 h -1.8555 v -0.625 q -0.32226,0 -0.65918,0.12207 -0.33691,0.122071 -0.62988,0.37109 -0.29296,0.24902 -0.5127,0.63477 -0.21973,0.385751 -0.31738,0.91309 v 4.8828 h 1.7188 v 1.6797 h -5.0195 v -1.6797 h 1.3965 l 0.01,-6.7578 h -1.4063 v -1.6797 h 3.2324 v 1.3965 q 0.17578,-0.3125 0.39551,-0.581054 0.21972,-0.268555 0.48828,-0.46875 0.26855,-0.200196 0.5957,-0.3125 0.32714,-0.112305 0.70801,-0.1123 h 0.95703 q 0,0 0.89844,0.01953 v 2.1973 z\"\n            id=\"path86\" style=\"fill:#ffffff;stroke:#000000;stroke-width:0.5740391;stroke-miterlimit:4\" inkscape:connector-curvature=\"0\"\n        />\n    </g>\n</svg>\nafter attempting  to fix it by giving the text path data-duration=\"1000\" (1000 frames) I ran into another problem which is a late callback, similar to this issue:\nhttps://github.com/maxwellito/vivus/issues/107\nmy solution was to set a timeout when the animation is visually ended.. but it will not work all the time because vivus animation is based on frames to make sure it runs smoothly and so time differs between each machine and hardware\nSo eventually I looked back on the first guy's jsfiddle example with the leaves..\nand noticed his letters are animated properly.. \nhttps://jsfiddle.net/0e7jxv43/\nYou can see he broke apart each one of the letters into it's on path instead of one consecutive path of the letters...\nNow my question is how do I create a word where each letter is it's own path?\nto create my logo I used inkspace and it's built in tool to turn object to path. @maxwellito  Hi thanks for your response,\nFirst I would like to ask what svg editing program would you recommend using (it's okay if its not free) to create and edit svgs? \nSecond, I eventually ended up animating the text I wanted with simple css.. starting the animation with the callback function of when vivus animation has ended.. seems to be the best solution for my case (since I used special styling which vivus doesn't support) \nThanks, \n-Roy. ",
    "Showcase-Joz": "Last I used vivus there was a delay attribute. Alternatively you could have a js callback run when first event finishes ;) . ... Furthermore I think the vivus examples run in succession. So you could use Dev tools to check how that's happening. . ",
    "dlewand691": "Thanks, maxwellito. That worked perfectly! Very much appreciated.. ",
    "codebymikey": "Made some progress on this, roughly based off this inkscape code:\n```javascript\nPathformer.prototype.rectToPath = function (element) {\n  var newElement = {},\n      x      = parseFloat(element.x)      || 0,\n      y      = parseFloat(element.y)      || 0,\n      width  = parseFloat(element.width)  || 0,\n      height = parseFloat(element.height) || 0;\nvar rx = parseFloat(element.rx) || 0,\n      ry = parseFloat(element.ry) || 0;\nif(rx !== 0 || ry !== 0) {\n      // Try and render the border radius\n      newElement.d = 'M ' + (x + rx) + ',' + y + ' ';\n      newElement.d += 'L ' + (x + width - rx) + ',' + y + ' ';\n      newElement.d += 'A ' + rx + ',' + ry + ',0,0,1,' + (x + width) + ',' + (y + ry) + ' ';\n      newElement.d += 'L ' + (x + width) + ',' + (y + height - ry) + ' ';\n      newElement.d += 'A ' + rx + ',' + ry + ',0,0,1,' + (x + width - rx) + ',' + (y + height) + ' ';\n      newElement.d += 'L ' + (x + rx) + ',' + (y + height) + ' ';\n      newElement.d += 'A ' + rx + ',' + ry + ',0,0,1,' + x + ',' + (y + height - ry) + ' ';\n      newElement.d += 'L ' + x + ',' + (y + ry) + ' ';\n      newElement.d += 'A ' + rx + ',' + ry + ',0,0,1,' + (x + rx) + ',' + y;\n  } else {\n      // Keep existing behaviour\n      newElement.d  = 'M' + x + ' ' + y + ' ';\n      newElement.d += 'L' + (x + width) + ' ' + y + ' ';\n      newElement.d += 'L' + (x + width) + ' ' + (y + height) + ' ';\n      newElement.d += 'L' + x + ' ' + (y + height) + ' Z';\n  }\n  return newElement;\n};\n```\nThe code seems to work for this simple shape, but doesn't work properly on one of my svgs. It's possibly just a bad svg in the first place, I'll do some more digging.\nSo if you do want to implement it, it should probably be optional so it doesn't break anything.\nedit: never mind, it's working now, must've been a css scaling issue.. Thanks for putting in the fix!. ",
    "rafaelmagalhaes": "Hi thanks for replying  i managed to do with CSS\nAll I had to do was to use CSS to flip the SVG path :) \npath {\n  -moz-transform: scaleX(-1);\n  -o-transform: scaleX(-1);\n  -webkit-transform: scaleX(-1);\n  transform: scaleX(-1);\n  filter: FlipH;\n  -ms-filter: \"FlipH\";\n  transform-origin: 50% 50%;\n}\nhere's the updated fiddle hope it can help someone else \nhttps://jsfiddle.net/41L4nej5/36/\n. ",
    "lionnez": "Thank you for your answer. I tried wrapping it with something like this\nif (typeof Pathformer == 'function') { \n  Pathformer(); \n}\nbut I don't really know what I'm doing. And since I'm using global JavaScript and a lot of sites, some of them with vivus elements and some of them without, I can't use vivus until I'm better at js. Because it needs to work regardless of how many ID's are in the current document.\nThank you anyway and I hope to be more capable soon.. sorry, I don't know how else to explain it.\nwhen I get this error:\n[Error] Error: Vivus [constructor]: \"element\" parameter is not related to an existing ID\n    setElement (script.min.js:451:151)\n    h (script.min.js:445)\n    Global Code (script.min.js:466:151)\nall my other javascript in my global script.min.js does not work.\nI only get this error when one, or more, or all ID(s) is missing. I dont use all ID's on all sites.\nwhat I tried to do is tell the vivus.js to work, when any ID is available, no matter how many are missing.. No worries! I did try \"try and catch\" but it didn't work and it also wasn't clean enough. I ended up deactivating vivus for now. I don't have code other than your original library and a separate JS with the instances. as I said, I'm not good enough with JS. all I try to do is not getting an error when an ID is missing.\nmaybe this works, I will try it\ndocument.getElementById('example')!=null\nor\nif(document.getElementById('example')!=undefined) hide('example');\nthanks for your help.\nedit: didn't work. I try the try ... catch ... again. I have to wrap your whole code?. it works!!!! thank you so much! I really need to step up my js game! thank you! now I can use vivus again :). ",
    "youriwims": "*Note: I am not receiving an error message, the animation just isn't happening. . Thanks so much!. ",
    "nrbacch": "Hi Max,\nThanks so much for the quick response!\nI will review it tomorrow morning when I\u2019m in my office and reply on the\nforum.\n\nNatasha\n\nOn Mon, Mar 12, 2018 at 5:24 PM maxwellito notifications@github.com wrote:\n\nHi there,\nThanks for providing a jsFiddle, that helps a lot! I find strange your\nanimation is slow on mobile, it doesn't look complex. I ran it on my mobile\nand also on desktop with reduced performances without glitches. However if\nyou want to not run the animation on mobile, you need to detect mobile\ndevices and not create the Vivus instance in that case.\nI found a basic example to detect mobile devices in JavaScript on\nStackOverflow\nhttps://stackoverflow.com/questions/11381673/detecting-a-mobile-browser.\nThen updated your jsFiddle https://jsfiddle.net/kunrh097/13/ to let you\nhave a look.\nI hope this helps.\nMax\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/188#issuecomment-372467541,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AhTGlf1QhH5mWme1FnWl3ueUYutNeoepks5tdueEgaJpZM4SnB2D\n.\n-- \nwww.designnrb.com\n. \n",
    "fejes713": "When we use const to declare something, it can not be reassigned again later on. In this case, nobody would want to reassign Vivus after being initially set. Consts are much more error proof in this case. Also Vivus object could be modified as objects declared with const are mutable. Makes sense or I might be a bit dumb? . ",
    "jasonday": "ah! thanks. Works perfect. . ",
    "FabianEllenberger": "@maxwellito \nHi :)\nYes that's my error from the console:\nUncaught Error: Vivus [constructor]: object loaded does not contain any SVG at HTMLObjectElement.onLoad (vivus.js:415). @maxwellito \nThanks, I'll check it out! \nBut, the thing is if Itake the same file and load it locally from a normal folder it works just fine, so I think the file should be valid :-/ (also works in the nice Vivus Instant when I drop it there). ",
    "patternuser": "You need to use an object in your markup, not a div for the ID vivus uses.. ",
    "mittererr": "See JSFiddle.\nThe line should be animated from left to right and other way around while scrolling up or down the page.. That's exactly what I'm trying to achive but I can't see the animation in JSFiddle? There is only a static line without animtion (tested with Mac/FF, Mac/Chrome)?. Yes, locally it is working but it \"jumps\". The line does not animate smooth, it jumps in maybe 15px pieces. Is your animation smooth?. That's it - Thank you! Really smooooooth!. One more question: Does the source posted above work in your Chrome ver 67? At my site, the animation is always at 100% in Chrome browser.. ",
    "pixedelic": "Thank you @maxwellito for the incredible prompt reaction. I'm testing your changes at this very moment, and they actually seem to work like a charm. What kind of SVGs do you thing won't like this update? I could do some \"stress tests\" maybe.\nThank you again, great piece of work BTW. Well... maybe this is one of that things to report here https://bugs.chromium.org/p/chromium/issues/list ?. Thank you so much!. ",
    "jcopus": "Fix worked for me as well, thanks for resolving this so quickly!. ",
    "mofizul21": "Hi,\nIt was okay before adding SSL. After adding the SSL we're viewing it.\nYou're saying that \"Please make sure the URL is using https. Then your\ncontent won't be mixed anymore.\" Since we're viewing error after adding SSL/https, then how to we can solve it?\nHave another way? Where from we can edit the image URL?\nBR,\nMofizul. Hi MaxWell,\nThanks for your awesome support. You solved my problem.\nThanks again.\nCheers,\nMofizul I.\nProfessional Web Developer\nhttp://themepack.net http://themepack.net\nhttp://spoilcoconut.com http://spoilcoconut.com\nOn Fri, Jul 6, 2018 at 3:00 PM, maxwellito notifications@github.com wrote:\n\nAny updates?\n\nJust to make sure, 'embed.js' is a file in your website. Its not related\nto Vivus.\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/maxwellito/vivus/issues/200#issuecomment-402974042,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AKF8W6mW_FvgW5P7yB6qe5ifvLZ15uJpks5uDydLgaJpZM4VDJhc\n.\n. \n",
    "danyj": "https://vibrant.creatus.io/\nscroll up/down and when the animation comes in it will display the error \nhttp://prntscr.com/kr6o8w\nJSFiddle does not even want to open on IE11 for me so cant make special demo \nhttp://prntscr.com/kr6pak. hm , is not removing anything but hiding so by your explanation and the triggered error seems like it cant find the element due to its visibility: hidden  class/rule being applied.. This is the class and the rules that element gets when out of the view \n.thz-animate {\n    opacity: 0;\n    animation-duration: 0.7s;\n    -webkit-animation-duration: 0.7s;\n    -moz-animation-duration: 0.7s;\n    -o-animation-duration: 0.7s;\n    animation-timing-function: ease-in-out;\n    -webkit-animation-timing-function: ease-in-out;\n    -moz-animation-timing-function: ease-in-out;\n    -o-animation-timing-function: ease-in-out;\n    -webkit-perspective: 1000;\n    -webkit-backface-visibility: hidden;\n    backface-visibility: hidden;\n    will-change: transform,opacity;\n}. Here , this is all it happens to the element, class added/removed http://take.ms/kCJpn. OK , thnx for checking. I would have made a sample but like advised JSFiddle does not even want to open on IE11. ",
    "ricmann": "Thanks for replying to Tpikas :)\nI have also been having serious problems during the last few weeks as well using Vivus with both with Firefox and Chrome. However when I use Opera all my problems disappear. What do you think that's about?\nVery best wishes :). Hi again :)\nI can't get to the bottom of it. When I create a Vivus animation on my PC, which is my workhorse, it fails. When I produce one on my Surface Book it works perfectly!!\nDoesn't dint my enthusiasm for Vivus however :). ",
    "connor-wilson-dev": "I haven't forgotten about this, I just haven't had any time to be able to go over all the comments in this. Mainly in src/vivus.js I noticed some spelling/grammar mistakes, but I figure while I'm in there I may as well check out everything else. I've already got my own fork going, but I hope this saturday I will have some time to take another look at everything. ",
    "WojtekWZ": "Hi,\nThanks for your response.\nPlunk with the example: https://plnkr.co/edit/28wWBhjYikuZOx93mEJ2?p=preview\nIt's weird - in plunk it animates ok but when I download the plunk and open it in chome it doesn't animate.. ",
    "rotellanomala": "Dear Maxwellito,\nthanks a lot for your fast reply and \"temporary\" solution,\nfor me works just great!\nI've also tried with progress,\nsomething like this\n```\nvar drawLogo = new Vivus ('logoLettering', {type: 'sync', start:'manual'});\n            function resetta(){\n                drawLogo.reset();\n            }\n\n    window.addEventListener('scroll', scrolling);\n\n            function scrolling(){\n\n                if (document.body.scrollTop > 0 || document.documentElement.scrollTop > 0){\n\n                    progress = window.scrollY/100;\n                    console.log(progress);\n                    drawLogo.setFrameProgress(progress);\n                    drawLogo.stop();\n\n                }\n\n            }\n\n```\nbut having same type of issues.\nSo your solution is perfect!\nDon't worry and take your time, I'm not in a hurry.\nThanks again and have a nice weekend.\nalberto. Dear Maxwellito, I had the opportunity to test your script, implementing it in my project,\nat first, having the same tipe of issues, then I saw your changes to Css position property and event,\nI think I can deduce that, in addition to the questionable form of my scripts, the problem is related to the event and the \"absolute\" position of the div inside which is my svg.\nThanks a lot for your precious, fast help.\nBest regards :),\nalberto.. Hi there,\nsorry for my delay,\nregarding the CSS changes, I've noticed that\nwith the #testLogo #logo position property (of the jsFiddle sample) set to \"absolute\", doesn't work,\nwhile with the \"relative\" position works great,\nso I thought that, besides the event type, was also important the positioning.\nAnyway, as I said, I'm not a developer, so I would not say nonsense,\nnow I'm working with your solution and it's ok!\nThanks a lot for your valuable help!!!\nThanks for your awesome work!!!\nHave a nice day,\nmy best regards,\nalberto.. Dear Maxwellito,\nsorry if I write a new comment,\nI would only like to thank you once again\nand let you know that your solution with deltay wheel event works great!\nI've just finished redoing my page, implementing your precious code,\nat first, it was fine for Firefox and Chrome but not in Safari :confounded:,\nthe opposite status of my original issue,\neven more clear then that it was my code full of bugs!\nI've found that, within my page, deltay wheel event wasn't work properly on Safari due to my html/css \"confusion\", by adding a simply overflow:hidden property to the body all works great!\nSo, thanks for your great work and precious help!\nHappy holidays,\nalberto.. "
}