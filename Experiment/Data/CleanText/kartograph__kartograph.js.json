{
    "mmathys": "For everyone with the same problem: add pointer-events: none to the html overlay.\n. ",
    "Anice17": "Google akun gmail . Google akun gmail . ",
    "mfirry": "+1\n. ",
    "nobleskine": "Hi, your online maps don't show up in IE, any idea why?\n. ",
    "gka": "Kartograph will look for references of \"path\", \"circle\", \"rect\", \"ellipse\" and \"text\" references and classes. \nIt will process the style in order of appearance in the CSS, so it may not reflect the way, browsers parse CSS. \n. You really should give CoffeeScript a try. In my opinion it simplifies the development of cross-browser object oriented js libraries a lot and makes the code far more easy to read than it would be in plain js. You should not forget that there's also a large community of coders coming from \"more advanced\" languages like Ruby or Python who really hate javascript especially if supposed to run across different browsers. For those, the more comprehensive syntax of CoffeeScript even lowers the entry barrier.\nBtw, I use watchr to auto-build the project every time a coffeescript source has changed.\n. closely related to #28\n. wontfix\n. thx, I simply forgot to implement this one :)\n. Btw, you can also play around with the standard parallel (lat1) in the cylindrical equal area projection to see the difference between Gall-Peters (lat1 = 45), Balthasart (lat1 = 50), Hobo-Dyer (lat1 = 37.7) and Behrmann (lat1 = 30).\n. actually it is supported already, but there are more bugs to fix. the choropleth example, for instance, is working in IE7 and IE8. I did not have the chance to test in IE9 yet, but it would be very interesting to know, since IE9 includes SVG support.\nRegarding the long-term plans there is also the idea of adding a flash fallback for browsers with no or poor svg support (#13). Currently the maps are displayed in IE7, but animations are horribly slow. Also the rendering sometimes looks not as good as in Firefox/Chrome.\n. Yep, nice idea. Will add the following API:\njs\nmap.setMap(svgString, opts);\n. fixed via 33da52ccff9f756bac76d4edf3bde782eb1954c3\n. fixed in 9752ac61d5 \n. Thx for reporting. Fixed in 0.1.9 and should work on kartograph.org now.\n. sorry, will try to add a better demo soon. In the meantime you can have a look at the showcases used on kartograph.org\n. Nope, tooltip support moved to a module now, and ah, I forgot to add the file.\n. fixed\n. yes, that's a nice start. however, panning and zooming in kartograph should be implemented using RaphaelJS to ensure that it is working in non-svg browsers too. Also we need to make sure that the line-widths are not scaled.\n. Won't use Proj4js. d3.geo looks much more promising.\n. I usually use the projection showcase on the Kartograph website to find nice projection configs. And a lot try & error :)\n. Kartograph expects a certain structure in SVG documents, see https://gist.github.com/3434004#file-usa-svg, for example.\n. Makes sense! Thanks.\n. can you please provide more details for this bug, e.g. how to reproduce it?\n. thanks\n. merged your fix into kartograph.js\n. thx will you open a pull request?\n. Your code looks as if you're trying to load a map from a local folder. This is not possible due to browsers security restrictions. Please use the local web server (Apache) that is already installed with OSX. Please both the HTML/JavaScript and the SVG in the same folder inside the web root and access the map via http://localhost.\n. This is possible, I have used the same technique for the real-time visitor map in Piwik (which used Kartograph.js).\n``` javascript\n// initally generate the symbol group\nsymbolgroup = map.addSymbols(...)\nfunction newDataArrived(data) {\n   // remove symbols that are gone using .remove(filterFunc)\n   symbolgroup.remove(function(symbolData) {\n       // eg. remove after one second\n       return now - symbolData.created_at > 1000;\n   });\n// update existing symbols\n   symbolgroup.update({\n       radius: function(s) { ... } \n   });\n// add new symbols\n   $.each(data, function(i, row) {\n      symbolgroup.add(row);\n   });\n}\n```\nYou can see this code in action here.\n. Reverse projection is not supported right now. Sorry.\n. It seems like the tooltips are not working with recent versions of jquery. When I pulled this code together I was using jQuery 1.6.4. Changing it to 1.9 or 1.10 the tooltips fail.\nhttp://jsfiddle.net/vis4/hPFAW/\n. It works if you're using the most recent version of jquery.qtip with jquery 1.10:\nhttp://jsfiddle.net/vis4/hPFAW/1/\n. no, reverse projection is not supported by now.\n. ",
    "krisbulman": "i found them\nhttp://kartograph.org/showcase/italia/\n. ",
    "mpetrovich": "As nice as CoffeeScript might be, you'll get more contributors if it's in a more common language.\n. ",
    "joeldouglass": "Hi, I can't seem to get any of the examples to work in IE7 or IE8. Are these browsers still supported in the latest version? \nAwesome work! Thanks!\n. ",
    "zzolo": "I think the best overall approach is to support direct string input.  This allows users to get their SVG from a different domain however they want.\n. Awesome!  Thanks.\n. ",
    "benoitbar": "Thank you. It works perfectly. https://apps.facebook.com/plus-belle-la-meteo/\n. ",
    "aubergene": "Some basic working examples would be great\n. ",
    "ChrisLCoray": "Agreed, I've spent over an hour working on trying to get the basic demo to work. I keep getting errors. I've updated the code in the demo with what is in the API, and I can't even get a one-line Instantiating call to work without errors being generated.\n. ",
    "cmanon": "I made some other changes that I don't think you're interested, will try to create a pull request with the only two relevant changes.\n. ",
    "pirhoo": "Hi Gregor,\nI found this jQuery plugin allowing pan and zoom on SVG, through it could interest you:\nhttps://github.com/talos/jquery-svgpan\n. It works now: I just added a projection and bounds to the svg using karthograph.py:\njson\n{\n    \"proj\": {\n        \"id\": \"mercator\",\n        \"lon0\": 0,\n        \"lat0\": 0\n    },\n    \"bounds\": {\n        \"mode\": \"bbox\",\n        \"data\": [-190,-90,190,90]\n    }\n}\n. ",
    "bmoore27": "I used https://github.com/escobar5/raphael-pan-zoom\nvar panZoom = map.paper.panzoom({ initialZoom: 6, initialPosition: { x: 120, y: 70} });\npanZoom.enable();\n. wrong forum\n. ",
    "muuki88": "This applies to simple svg created with Illustrator, too.\n. Okay. I figured out that only absolute coordinates are allowed. Why is that?\n. ",
    "ArthurPBressan": "@gka ,\nWhat software should I use to generate svg files that are compatible with Kartograph?\nEDIT: By the way, the example you linked didn't work.\n. ",
    "desmarais": "@gka,\nI try to use Kartograph extensively. Is there a concise description of the required structure of SVG documents ? As you outline,  https://gist.github.com/3434004#file-usa-svg works fine. \nBut, e.g. the map referenced in http://commons.wikimedia.org/wiki/File:Blank_map_of_Europe.svg does not show up.\n. ",
    "pawelpotoniec": "@gka \nPlease provide some details how to export maps from Illustrator/Inkscape to work well with Kartograph.js?\nAll files are exported using W3C SVG 1.1 version, but does not contain any metadata required by your lib.\n. ",
    "babsmiles": "Hi, \nSorry to bother you with newby questions. I just kind of hit a wall and don't know where to go from here. I keep getting this error in my chrome console - Uncaught TypeError: Cannot call method 'fromXML' of undefined \nI thought maybe it was because I wasn't running locally like you mentioned above so I setup an apache server and moved all my files to a sites directory and am now running the kartograph through a local host. \nHere is the html I have - \n```\n<!DOCTYPE html>\n\n\n\n\n\n",
    "ggercek": "Hi,\nThanks for the tip.\nI have a question about this issue. I manage to show/update symbols real-time but when I use noverlap to cluster symbols then the new symbol does not show up and there is no error.\nIs it possible to use noverlap with realtime updates?\nThanks\nHere is the code that I used.\nclustering: 'noverlap',\n        aggregate: function (data) {\n                var nc = { };\n                nc[key] = 0;\n                nc.country = '';\n                nc.country_codes = [];\n                $.each(data, function(i, d) {\n                    nc[key] += d[key];\n                    nc.country_codes = __arrayUnique(nc.country_codes.concat(d.country_codes ? d.country_codes : [d.country]));\n                });\n                nc.country = nc.country_codes[0];\n                return nc;\n            },\n. I managed to add new symbols to map while using noverlap;\n// add new symbols\n$.each(data, function(i, row) {\n    var s = symbolgroup.add(row);\n    var xy = map.lonlat2xy(s.location);\n    s.x = xy[0]\n    s.y = xy[1]\n    s.render();\n});\nI used following code for non-clustering maps to add new symbols but when I use clustering new symbols does not show up. Moreover last line cause to duplicate the clustered symbols.\n// add new symbols\n$.each(data, function(i, row) {\n    var s = symbolgroup.add(row);\n});\nsymbolgroup.layout().render();\nIs there an easy way to do it right? Or my first approach is just fine?\nThanks,\nGurcan\n. ",
    "h2ero": "@gka  is it supported? xy2lonlat\n. ",
    "ghost": "I'd be interested in getting an answer to this too. Is there any way to do it as of 0.6.1?\n. ",
    "stereoscott": "+1 from us on this. The patch just required changing Function::bind = (scope) -> to Function::bind ?= (scope) ->\n. ",
    "DavidValin": "Quick answer: Yes\n. Just apply width: 100% and height: 100% to the svg element\n. I was able to render the correct positions for symbols using this config file:\n{\n  \"proj\": {\n    \"id\": \"lonlat\",\n    \"lon0\": 0\n  },\n    \"layers\": [\n      {\n        \"id\": \"world\",\n        \"src\": \"/Users/me/Desktop/worldmap/map_converter/maps/natural-earth-vector/50m_cultural/ne_50m_admin_0_countries.shp\",\n        \"simplify\": 3\n    }],\n    \"bounds\": {\n      \"padding\": 0\n    }\n}\n. ",
    "scooterlord": "A more thorough answer?\n. thanks! will try later today.\n. ",
    "webbird": "Seems to be a Firefox issue. Got this working now. (Error message stays the same, but the map works.) Only problem is that Browcap gives 2-char ISO names while the world.svg uses 3-char names. Not a Kartograph problem. ;)\n. ",
    "steve-goodwin": "any updates on this? Great product, but no support!\n. ",
    "marktamis": "It's a hack, but I found it crashes when Kartograph adds a bind metod which takes the scope as an argument, and just commented it out...\nLook for => Function.prototype.bind (line 1990). "
}