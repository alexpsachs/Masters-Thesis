{
    "andersao": "@jartaud Oops , is actually wrong . I will fix ;)\n. Fixed :+1: \n. Thanks @jartaud \n. @iamfreee Thanks ;)\n. @teepluss Thanks ;)\n. @Fuhrmann Thanks :+1: \n. @michael-hopkins Fixed ;)\n. @jartaud This way does not work?\nphp\n$category = $this->repository->find(1);\n$category->categoryLocalization()\n         ->save(new CategoryLocalization( [\n            'name' => 'My Category in english',\n            'lang'=>'en'\n        ]));\n. @jartaud I will work to try to implement something better, I am currently out of time :( But soon will implement something\n. I've been very busy in recent months with my work projects, which eventually pulling away of my personal projects, so it could not provide the necessary support to you, I am more relaxed now and I'm checking all the issues in order to work on fixes and new implementations, apologize to everyone.\n. You suggested that validation is within the repository in this way?\n``` php\nuse Prettus\\Repository\\Eloquent\\BaseRepository;\nuse Prettus\\Repository\\Criteria\\RequestCriteria;\nuse Prettus\\Validator\\Contracts\\ValidatorInterface;\nclass PostRepository extends BaseRepository {\n/**\n * Specify Validator Rules\n * @var array\n */\n protected $rules = [\n    ValidatorInterface::RULE_CREATE => [\n        'title' => 'required',\n        'text'  => 'min:3',\n        'author'=> 'required'\n    ],\n    ValidatorInterface::RULE_UPDATE => [\n        'title' => 'required'\n    ]\n\n];\n/**\n * Specify Model class name\n *\n * @return mixed\n */\nfunction model(){\n   return \"App\\\\Post\";\n}\n\n}\n``\n. I implemented the validation own repository based on their need , added more flexibility. All right, you do not need anything else, just add validation rules and ready . If the validation fails will be released an exception from mistakes. I hope they can help you .\n. @iamfreee Released :)\n. This is not implemented , and today I even had this need. I will implement now .\n. @michael-hopkins Released version 2.0.4 and added the methodfindWhere( array $where , $columns = array('*'))` . This helps you?\nYou can use like this\nphp\n$this->repository->findWhere(['name'=>'Lorem','age'=>18]);\n. @michael-hopkins Oops , my fault , had not implemented it. Released a version that supports this.\nphp\n$this->repo->findWhere([ ['columnName','>','10'], 'anotherField'=>'equals' ]);\n. ;) :+1: \n. @michael-hopkins The findWhere method did not help you?\n. @michael-hopkins Added in version 2.0.4 ;)\nHiding attributes of the model\nphp\n$post = $this->repository->hidden(['country_id'])->find($id);\nShowing only specific attributes of the model\nphp\n$post = $this->repository->visible(['id', 'state_id'])->find($id);\n. @michael-hopkins First excuse me for the delay in responding. I am very busy these days\nI'll do some tests and give you some solution soon;)\n. I've been very busy in recent months with my work projects, which eventually pulling away of my personal projects, so it could not provide the necessary support to you, I am more relaxed now and I'm checking all the issues in order to work on fixes and new implementations, apologize to everyone.\n. Hi @dixitchopra,\nWhen you use the Filter, the Model will only return the columns requested in the case, id and title. In PostTransformer if you are prepared to make the Model with all its attributes, and when the filter is activated, the other columns are not returned and so it comes as null.\nI think that a solution would be to perform a check on your PostTransformer, and only display columns that are defined, or another solution would be to use the method toArray () of the Model.\nEx:\n``` php\nuse App\\Post;\nuse League\\Fractal\\TransformerAbstract;\nclass PostTransformer extends TransformerAbstract\n{\n    public function transform(Post $post)\n    {\n        $data = [];\n    if( isset($post->id) )\n        $data['id'] = (int) $post->id;\n\n    if( isset($post->title) )\n        $data['title'] = $post->title;\n\n    if( isset($post->text) )\n        $data['text'] = $post->text;\n\n    return $data;\n}\n\n}\n```\nEx 2:\n``` php\nuse App\\Post;\nuse League\\Fractal\\TransformerAbstract;\nclass PostTransformer extends TransformerAbstract\n{\n    public function transform(Post $post)\n    {\n        $avaliable = ['id','title','text'];\n        $data      = array_only($post->toArray(), $avaliable);\n    return $data;\n}\n\n}\n```\nI hope I help!\n. @dixitchopra I'll get a solution for you :)\n. @dixitchopra Are you still having problems?\n. @eduavila \nI will release a new version, it you will be able to search as follows:\n?search=VALUE_SEARCHED\n?search=FIELD:VALUE_SEARCHED\n?search=FIELD:VALUE_SEARCHED;ANOTHER_FIELD:VALUE_SEARCHED\n?search=FIELD:VALUE_SEARCHED;VALUE_SEARCHED_IN_ANOTHER_FIELDS\n?search=VALUE_SEARCHED;searchFields:FIELD:CONDITION\nIn your case, you can configure the fields that are searchable in your repository so\n``` php\nuse Prettus\\Repository\\Eloquent\\BaseRepository;\nuse Prettus\\Repository\\Criteria\\RequestCriteria;\nclass MyRepository extends BaseRepository {\n/**\n * @var array\n */\nprotected $fieldSearchable = [\n    'description'=>'like',\n    'cod'\n];\n\npublic function boot(){\n    $this->pushCriteria(app('Prettus\\Repository\\Criteria\\RequestCriteria'));\n    ...\n}\n\nfunction model(){\n   return \"App\\\\MyModel\";\n}\n\n}\n```\nIf you perform the following request\n?search=VALUE\nThere will be equivalent\nsql\nselect * from `your_table` where `description` like '%VALUE%' or `cod` = 'VALUE';\n?search=VALUE&searchFields=cod or ?search=cod:VALUE\nThere will be equivalent\nsql\nselect * from `your_table` where `cod` = 'VALUE';\nsql\n?search=description:VALUE;cod:VALUE\nThere will be equivalent\nsql\nselect * from `your_table` where `cod` = 'VALUE';\nWell, hope this helps\n. Released version 2.0.6 :+1: \n. Merged\n. @devmark  Hello, there are other ways to achieve, I like and use as well\nhttps://gist.github.com/andersao/7b92fa026fd4ffe74fbb\n. @henninghorn Thanks man, will update the documentation\n. Thanks man!\n. @dimsav Hello, sorry for the delay in responding. I will correct the problem;)  Thanks for the tip, I will implement the tests.\n. @dimsav @devmark Fixed. I apologize for the delay. Release version 2.0.12\n. @vluzrmos Yes, he was inspired in my project, and even wrote a great article about the Repository pattern. https://bosnadev.com/2015/03/07/using-repository-pattern-in-laravel-5/\nI commented on the post stating that he had been inspired by my project, he confirmed and said he would put the credits, but did :(\n. @mirzap Thanks man!\n. @syflipper\nWell, the repository will you return a instantiates your model , then you could use this method without problems. If you are using a presenter , simply ignore the presenter using the skipPresenter () method.\nTry this:\n//GamesController.php\n``` php\npublic function __construct(GameRepository $repository){\n    $this->repository = $repository;\n}\npublic function show($id)\n{\n    try\n    {\n        $game = $this->repository->skipPresenter(true)->find($id);\n        $game->verifyOwnership(Auth::user());\n    //more logic\n} catch (Exception $e) {\n    throw $e;\n}\n\n}\n```\n. @syflipper\nYou can do this by creating a customized presentation. Thus it will extract your model information to be displayed in their API , at that time you can treat the information that is displayed . See the example below :\nhttps://github.com/prettus/l5-repository#create-a-presenter\n//GameTransformer.php\n``` php\nuse App\\Post;\nuse League\\Fractal\\TransformerAbstract;\nclass GameTransformer extends TransformerAbstract\n{\n    public function transform(Game $game)\n    {\n        $data = [];\n        $data = [\n            'id'=>$game->id,\n            'title'=>$game->title\n        ];\n    if( $game->verifyOwnership(Auth::user()) )\n    {\n        $data = array_merge($data,[\n            'dataOnlyIfOwnership'=>$game->privateData,\n            ....\n        ]);\n    }\n\n    return $data;\n}\n\n}\n```\n//GamePresenter.php\n``` php\nuse Prettus\\Repository\\Presenter\\FractalPresenter;\nclass GamePresenter extends FractalPresenter {\n/**\n * Prepare data to present\n *\n * @return \\League\\Fractal\\TransformerAbstract\n */\npublic function getTransformer()\n{\n    return new GameTransformer();\n}\n\n}\n```\n//GameRepository.php\n``` php\nuse Prettus\\Repository\\Eloquent\\BaseRepository;\nclass GameRepository extends BaseRepository {\n...\n\npublic function presenter()\n{\n    return \"YOUR_NAMESPACE\\\\GamePresenter\";\n}\n\n}\n```\nI hope this works for you\n. Hello @irazasyed,\nI 'm working on it right now, I'm also the same need . Soon I will publish this feature . :)\n. @irazasyed Cacheable Featura released today, feel free to suggest any improvement. ;)\nhttps://github.com/prettus/l5-repository#cache\n. @hiddeco Fixed ! Thank you for reporting this error! ;)\n. Soon, I'll just do some testing ;)\n. @lucasmichot  version 2.0.13 released\n. @yazfield Thanks for the feedback , I have done the fix :)\n. Hello @Jeroen-G , unfortunately today I did not complete the tests. In early versions I had implemented the tests for some features, but with time I stopped creates them . But I intend to invest the time to stop creating tests for the project.\n. I've been very busy in recent months with my work projects, which eventually pulling away of my personal projects, so it could not provide the necessary support to you, I am more relaxed now and I'm checking all the issues in order to work on fixes and new implementations, apologize to everyone.\n. Hello @Jeroen-G You're right, my fault when he was developing the next release will pose as the optional prettus/validator and correct the dependencies . Thanks for the feedback .\n. @Jeroen-G Released version 2.1.0 \n. Thanks. @Jeroen-G \n. Hello,\nToday I also use something similar . At times I use presenters to bring some relationship information .\nI added a new feature in RequestCriteria .\nYou can upload your relationships dynamically through the parameter with\nhttp://api.local/tag?with=latest_news\nIt is possible to spend a relationship using the delimiter ;. ?with=latest_news;articles;images;...\nIt replaces the use of $tags->with(['latest_news'])->find(1234) in your controller .\nYou can change the parameter name to any other in the configuration file\n. I've been very busy in recent months with my work projects, which eventually pulling away of my personal projects, so it could not provide the necessary support to you, I am more relaxed now and I'm checking all the issues in order to work on fixes and new implementations, apologize to everyone.\n. Hello @LordHamwich ,\nThanks for reporting . Already realized the correction and will be published next release.\n. Hello @LordHamwich\nFixed. Released in version 2.1.* \n. Hello@syflipper ,\nToday released a new version of the package with some improvements , including something that can solve your problem ;)\nhttps://github.com/prettus/l5-repository#using-the-presenter-after-from-the-model\n. Hi @catalinux \nFixed, I added a specific Service Provider for Lumen . It is available in version 2.1 . *\n$app->register(Prettus\\Repository\\Providers\\LumenRepositoryServiceProvider::class);\n. Hello guys @ionut-tanasa @Jeroen-G @hiddeco ,\nI liked the suggestion and I think it will be great to add new commands . What about the branch , the @hiddeco  is right. Rather than new features being sent to branch Develop or create other specific branch .\nThe contribution of you will be very well accepted ;)\n. And I 'm loving the contribution of you. \n. I've been very busy in recent months with my work projects, which eventually pulling away of my personal projects, so it could not provide the necessary support to you, I am more relaxed now and I'm checking all the issues in order to work on fixes and new implementations, apologize to everyone.\n. I've been very busy in recent months with my work projects, which eventually pulling away of my personal projects, so it could not provide the necessary support to you, I am more relaxed now and I'm checking all the issues in order to work on fixes and new implementations, apologize to everyone.\n. I've been very busy in recent months with my work projects, which eventually pulling away of my personal projects, so it could not provide the necessary support to you, I am more relaxed now and I'm checking all the issues in order to work on fixes and new implementations, apologize to everyone.\n. I've been very busy in recent months with my work projects, which eventually pulling away of my personal projects, so it could not provide the necessary support to you, I am more relaxed now and I'm checking all the issues in order to work on fixes and new implementations, apologize to everyone.\n. I've been very busy in recent months with my work projects, which eventually pulling away of my personal projects, so it could not provide the necessary support to you, I am more relaxed now and I'm checking all the issues in order to work on fixes and new implementations, apologize to everyone.\n. I've been very busy in recent months with my work projects, which eventually pulling away of my personal projects, so it could not provide the necessary support to you, I am more relaxed now and I'm checking all the issues in order to work on fixes and new implementations, apologize to everyone.\n. I've been very busy in recent months with my work projects, which eventually pulling away of my personal projects, so it could not provide the necessary support to you, I am more relaxed now and I'm checking all the issues in order to work on fixes and new implementations, apologize to everyone.\n. I've been very busy in recent months with my work projects, which eventually pulling away of my personal projects, so it could not provide the necessary support to you, I am more relaxed now and I'm checking all the issues in order to work on fixes and new implementations, apologize to everyone.\n. Hi @DarKDinDoN. That's good, I put in the next release\n. I've been very busy in recent months with my work projects, which eventually pulling away of my personal projects, so it could not provide the necessary support to you, I am more relaxed now and I'm checking all the issues in order to work on fixes and new implementations, apologize to everyone.\n. I've been very busy in recent months with my work projects, which eventually pulling away of my personal projects, so it could not provide the necessary support to you, I am more relaxed now and I'm checking all the issues in order to work on fixes and new implementations, apologize to everyone.\n. I've been very busy in recent months with my work projects, which eventually pulling away of my personal projects, so it could not provide the necessary support to you, I am more relaxed now and I'm checking all the issues in order to work on fixes and new implementations, apologize to everyone.\n. I've been very busy in recent months with my work projects, which eventually pulling away of my personal projects, so it could not provide the necessary support to you, I am more relaxed now and I'm checking all the issues in order to work on fixes and new implementations, apologize to everyone.\n. Maybe your are using Presenters, try this $this->language->getByCriteria( new HasTranslation() )->lists( 'lang' )->skipPresenter()->all();\n. I've been very busy in recent months with my work projects, which eventually pulling away of my personal projects, so it could not provide the necessary support to you, I am more relaxed now and I'm checking all the issues in order to work on fixes and new implementations, apologize to everyone.\n. Hi @Rtransat.\nI will test it.\n. I've been very busy in recent months with my work projects, which eventually pulling away of my personal projects, so it could not provide the necessary support to you, I am more relaxed now and I'm checking all the issues in order to work on fixes and new implementations, apologize to everyone.\n. I've been very busy in recent months with my work projects, which eventually pulling away of my personal projects, so it could not provide the necessary support to you, I am more relaxed now and I'm checking all the issues in order to work on fixes and new implementations, apologize to everyone.\n. I've been very busy in recent months with my work projects, which eventually pulling away of my personal projects, so it could not provide the necessary support to you, I am more relaxed now and I'm checking all the issues in order to work on fixes and new implementations, apologize to everyone.\n. I've been very busy in recent months with my work projects, which eventually pulling away of my personal projects, so it could not provide the necessary support to you, I am more relaxed now and I'm checking all the issues in order to work on fixes and new implementations, apologize to everyone.\n. I've been very busy in recent months with my work projects, which eventually pulling away of my personal projects, so it could not provide the necessary support to you, I am more relaxed now and I'm checking all the issues in order to work on fixes and new implementations, apologize to everyone.\n. I've been very busy in recent months with my work projects, which eventually pulling away of my personal projects, so it could not provide the necessary support to you, I am more relaxed now and I'm checking all the issues in order to work on fixes and new implementations, apologize to everyone.\n. I've been very busy in recent months with my work projects, which eventually pulling away of my personal projects, so it could not provide the necessary support to you, I am more relaxed now and I'm checking all the issues in order to work on fixes and new implementations, apologize to everyone.\n. I've been very busy in recent months with my work projects, which eventually pulling away of my personal projects, so it could not provide the necessary support to you, I am more relaxed now and I'm checking all the issues in order to work on fixes and new implementations, apologize to everyone.\n. I've been very busy in recent months with my work projects, which eventually pulling away of my personal projects, so it could not provide the necessary support to you, I am more relaxed now and I'm checking all the issues in order to work on fixes and new implementations, apologize to everyone.\n. Hi @isaackearl, I will fix this.\n. I've been very busy in recent months with my work projects, which eventually pulling away of my personal projects, so it could not provide the necessary support to you, I am more relaxed now and I'm checking all the issues in order to work on fixes and new implementations, apologize to everyone.\n. I've been very busy in recent months with my work projects, which eventually pulling away of my personal projects, so it could not provide the necessary support to you, I am more relaxed now and I'm checking all the issues in order to work on fixes and new implementations, apologize to everyone.\n. I've been very busy in recent months with my work projects, which eventually pulling away of my personal projects, so it could not provide the necessary support to you, I am more relaxed now and I'm checking all the issues in order to work on fixes and new implementations, apologize to everyone.\n. Hello guys, the package was not abandoned, just been busy in recent months, so I ended it away from me and not given the necessary support to you, I'm checking each issue and responding.\n. Hi @digitlimit \nI will check this\n. Hi @MarlonEtiene \nThe package does not support this natively, but you can easily create a new method in your repository to perform this operation. Simply create your own method, as massUpdate () and apply their logic.\n. Hi @devfelipereis \nYes, if you need new methods, you can simply add the methods in its interface, if using, and then implement the method in your repository. That way you get better organize your project.\n. Hi, @mhndev \nIn previous versions the package was recorded in composer.json, but not necessarily as you need to use the Presenters, I decided to remove the package from dependencies and put as a suggestion, so if you decide to use the package, just add as a composer.json the \"league/fractal\":\"~0.12.0\"\n. Hi @ajeeshcitrus \nI will check this. I suggest that you open a ticket on another package also\nhttps://github.com/andersao/laravel-validator/issues\n. Merged!\n. @torosegon Thanks man!\n. Hi @computerfr33k, sorry for my late answer. But this problem happens because maybe you forget to define $fillable property in your model like this:\n```php\nclass Post extends Eloquent { // or Ardent, Or any other Model Class\nprotected $fillable = [\n    'title',\n    'author',\n    ...\n ];\n\n ...\n\n}\n```\nhttps://github.com/andersao/l5-repository#create-a-model\nhttps://laravel.com/docs/5.5/eloquent#mass-assignment. In this case you are already carrying out the search of the User within the Route Bind, so the result is already an instance of User, so you could not have access to any method repository, but the Model itself.\nphp\nRoute::get('users/{user}', function (User $user) {\n     $user->update(['name' => 'another name']);\n});\n. The package is compatible with Laravel 5.3\n. Currently this is the only syntax for research. I will add this question to a possible future improvement.\n. try this :\n$this->userRepository->skipCriteria()->findByField('visitor_id', $visitorId)->first();\n. Duplicate of #73. You can use the default command Laravel php artisan cache:clear\n. Good morning, I'm sorry for the lack of attention to the project, I've been very busy and I can not give enough attention.\n@eullercristian , are you willing to help me with the maintenance of the project?. Hello everyone, at the beginning of the project, when it was still a personal project, the cache layer was implementing only the cache layer of API requests, so that each context (obtained from the querystring) was cached.\nIn fact this is not a good approach to other uses.\nI will implement an alternative that I can use in many contexts.\nThanks for the remarks.. I will see this bug guys!. Hi guys! The problem was fixed and I will release a new version soon.. Thanks! I will test your implementation and after i'll release it.. I released a new version with the fix.. @acodercat Did your question solved?. @ronlobo Thanks for show me that. I'll fix it.. Solved in Pull Request #487. @JvitorA What version are you using? Can you give a snapshot of your code?. Hi @heshiweij, are you using the league/fractal package? \nWhat version of l5-repositoy you are using?. @heshiweij, this is issue of Fractal. You can resolve or manipulate that using a Custom Serializer of Fractal like this.\n```php\n<?php\nnamespace App\\Serializer;\nuse League\\Fractal\\Pagination\\PaginatorInterface;\nuse League\\Fractal\\Serializer\\ArraySerializer;\nclass CustomDataApiSerializer extends ArraySerializer {\npublic function paginator(PaginatorInterface $paginator)\n{\n    $meta = parent::paginator($paginator);\n\n    // here your would manipulate the pagination data\n    if( empty($meta[\"pagination\"][\"links\"]) ){\n        $meta[\"pagination\"][\"links\"] = [\n            \"next\" => null\n        ];\n    }\n\n    return $meta;\n}\n\n}\n```\nthen in your config\\repository.php, set your new serialize in \nphp\n'fractal'    => [\n        ...\n        'serializer' => \\App\\Serializer\\CustomDataApiSerializer::class\n    ],\nI hope that I was help you.. Thanks for your contribution @westphalen. Can you create an merge request for the branch develop?. Please correct the method signature, it is missing a comma.\nphp\nfindByField($field, $value = null, $comparator = '=',  $columns = array('*'))\n. ",
    "jartaud": "Thanks!\n. @andersao Yep! actually I'm doing it this way, but for some reasons I feel bad for using the CategoryLocalization model in the Category repo.\nSaddly the following is violating the integrity constraint:\n``` php\nprotected function saveCatLoc($catLoc, $category)\n    { \n        foreach ($catLoc['cat_name'] as $key => $value) {\n        $catLocRepository = $this->app->make('NAMESPACE\\Repositories\\CategoryLocRepository');\n\n        $catLocRepository->create(['name'=>$value, 'lang'=>$key, 'category_id'=>$category->id]);\n    }\n}\n\n```\n. I think this is the way to go. The only difference here is that you're not referencing directly the Role model.\nBut is not $this->role->with(['users']) equal to $this->role->users()?? \n. Thanks!\n. ",
    "michaeljhopkins": "well, wasn't that a stupid simple fix. thanks man!\n. Something like that yeah. I recognize (and agree with to be honest) the separation of the two and having Validation on its own. For this particular project (and deadline), and to push the least amount of large changes on the team combining them would be ideal I think.\nIn doing what you've outlined above (and here which I am hoping wasn't there 24 hours ago) does anything need to be added to the controller or are things business as usual?\n. ah yeah. good call\n. oh neat. cool thanks!\n. looks awesome. thanks man!\n. Looking at the code, you should be able to do the following, correct?\n$this->repo->findWhere(['columnName','>','10']);\n. neat. seems simple enough :-)\n. @andersao I was going to make the PR, but when I went into the look at the code, I was a little unsure where to put this (in addition to the docblock typehinting). But on the findWhere, if(count($result) == 1) should append a ->first() onto the end\n. ah nevermind. all good :-)\n. man, talk about customer service.\n. ",
    "ghost": "``` php\n$data = [ 'name' => 'My Category in english',  'lang'=>'en' ]\n$localization = $this->categoryLocalizaionRepository->skipPresenter(true)->create($data);\n$category = $this->categoryRepository->skipPresenter(true)->find(1)->categoryLocalization()->create($localization);\n```\nThis way should work.\n. $FatalErrorException = $this->order->findOrFail($id);\nThere is no findOrFail method on the BaseRepository. There's find() though. Which internally calls findOrFail()\nUsing your Trait but calling $this->order->find($id);instead of $this->order->findOrFail($id); should work.\n. Thanks for your answer @andersao. The problem is that I have to present the data after it gets verified again (API output). Any tips on doing that? \n. @andersao \ud83d\udc4d\n. @maxberg1c and @biblicalph currently RequestCriteria does not support relation filtering.\nI have something planned but it will take some time to implement it. It's kinda tricky.\nWill do in future releases.\n. Yea sure, the command for validator should go into the validator package.\n. @hiddeco please do.\nI just started the command for the transformer. Maybe you can do the other one/ones?\n. Check #55.\nI gave you push access to the repo.\nNow it's basic stuff. Maybe we could specify with which properties the return array from the transformer will be filled. Like the --fillable argument for the Model\n. @andersao I love that you are merging so quick my PRs\nI'll make the basic presenter command and pr it. then you could improve it and more features to it\n. Just a quick question. I'm trying to understand how to pass variables to the stubs.\nIn the presenter, obviously, I need to use the transformer class. How do I get the root namespace and pass it to the stub in order to write the exact namespace of the transformer?\nI am assuming that the Presenter will use a Transformer with the same name.\nSo when I run make:presenter MODEL, I assume that you already have a MODELTRansformer created.\nMaybe I can check that, if the transformer does not exist I can create it for the user.\nSo how do I pass the root namespace, i.e. App so on top of the class I can use App\\Transformers\\MODELTransformer ?\n. Maybe I didn't explain myself very well :smile: \nI know how to get the app namespace from Laravel. My question was: How do I pass the namespace as $APPNAMESPACE$ to the stub file?\n. thank you @hiddeco \n@andersao PR done #57\n. Done. Closing\n. +1\n. @elliottmb Could you make a pull request, or create a gist with modified code ?\nThanks.\n. @elliottmb news on this one?\n. You have to catch the exception and return your error response.\n. I think you could achieve your result with a Criteria. \nOr even create a custom method on your Product repository that uses the underlying model instance to replicate that query. \n. @digitlimit because it's cached. You have to skip cache too.\n$repository->skipCache()->skipPresenter()->all()\n. Thanks for your contribution, but all future pull requests should go against the develop branch.\nClosing for now.\nIf you want you could re-open the PR against develop.\n. Closed by #150.\nThank you for contributing.\n. I've tried it against the develop branch and it seems that it has been fixed.\nThanks for your contribution.\nNext PRs should go agains develop\n. @ptcong  would you be kind enough to re-open the PR against develop? \nThanks for your contribution, but all future pull requests should go against the develop branch.\nClosed by 3c5283e\n. Closed by d5da0d4.\n136\n. We'll consider this in future major release since it breaks backwards compatibility\nThanks for your contribution, but all future pull requests should go against the develop branch.\nClosing for now.\nIf you want you could re-open the PR against develop.\n. Thank you for your contribution, but updateOrCreate has already been added.\nFuture PRs should go on the develop branch from now on.\nClosing.\n. Actually it's used because we use it in RequestCriteria. \nAlso you can set which fields are searchable per repository overriding fieldSearchable property.\n. This way would be a bit confusing. I think it should remain the same, for now.\nThanks for your contribution, but all future pull requests should go against the develop branch.\n. Skip the presenter. \n$this->repository->skipPresenter()->all()\nOr remove the whole presentation layer by disabling it in the repository. \n```\n. This one should go on the validator package but anyway merge it asap :D\n. Needs some testing, but could you re-open this PR on develop branch?\nClosing for now.\nThanks for your contribution, but all future pull requests should go against the develop branch.\n. Thank you.\nFuture PRs should go against develop branch.\nClosed by 4a95e7d\n. @andersao ping\n. @andersao ping\n. @andersao ping\n. I'd like to decouple fractal in some way.\nAnd use, dunno, another presenter package? \nWhat do you guys think would be the better way to achieve it?\n. Definetly not removing Fractal :)\nJust adding a new one to make it easier and avoid cases like this one. \n. Can you try adding a getModel method and return the current model instance, to test it?\n. @andersao  ping\n. Cool.\nWould you be kind enough the rebase your develop branch and submit the PR again please?\n. Hi,\nI usually do this:\nCreate a new Provider calling it RepositoryProvider\n```\n<?php\nnamespace App\\Providers;\nuse Illuminate\\Support\\ServiceProvider;\nclass RepositoryProvider extends ServiceProvider\n{\nprivate $bindings = [\n    // interface => implementation\n   {YOUR_NAMESPACE}Repositories\\PostRepository => {YOUR_NAMESPACE}Repositories\\PostRepositoryEloquent\n];\n\n\n/**\n * Register the application services.\n *\n * @return void\n */\npublic function register()\n{\n    foreach ($this->bindings as $interface => $implementation) {\n        $this->app->register($interface, $implementation);\n    }\n}\n\n}\n```\nAdd it in app.php in the providers array : App\\Providers\\RepositoryProvider::class\nSo when I create new repositories I just add them to the $bindings array\n. $this->repo->with(['relation']) return a Illuminate\\Database\\Query\\Builder instance.\nsetVisible is a method of Eloquent Model.\nCurrently you can call visible without including relations.\nWe'll improve it in future releases.\n. You could pass it to the criteria's constructor. \n. thank you!\n. @GiovanniValen it's not yet released. \n. Ok for updateByFields\nCan you rebase your develop branch and submit the PR again,please?\n. Thanks for your PR. \nBut I have to ask you to open it against develop branch.\nAlso when opening a pull request you should update readme.md also if your changes impact existing functionality or it adds new ones.\nClosing.\n. Thank you!\n. Actually this is my fault. \nWill release a new version ASAP. Removing the commands from the service provider. \nBut we definetly should add generators for lumen too. \n. Closing 45d61fa\n. The is actually ok. \n502 error maybe it's a server config error.\nCan you provide the stack trace ? \n. So it's a web server issue.\nCheck NGINX / APACHE error logs\n. Thank you!\n. I think I got why you get this error.\nYou are joining with the same column names.\nIf in the result set you get two equal names it will throw that error. \nyou should give aliases to your joins / columns to make them unique.\n. @munza @mvpasarel merged and released\n. Thanks ! \n. Thank you\n. Thank you, @eidng8 \nCan you submit this PR against develop branch, please?\n. Thank you, @dj1020 \nCan you submit it against the develop branch, please ?\n. Thank you!\n. thanks for your contributions, but you should submit the PRs against develop branch please\n. Yup. Only Eloquent\n. It works with @quynhbkit fix, but where is problem ? Maybe there is a bug ?\n. Same issue, in laravel 5.4 \nhow fix it?. if (!is_null($this->validator)) {\n    $attributes = $this->model->newInstance()->forceFill($attributes)->toArray();    <=== In this step, the hidden fields are not set\n    $this->validator->with($attributes)->passesOrFail(Validator::RULE_CREATE);\n}. remove this line \n\"$attributes = $this->model->newInstance()->forceFill($attributes)->toArray();\"\nfrom create and update function in base repository then fix it. ",
    "wdog": "In my case I have a foreign key and when I use\nphp\n$localization = $this->categoryLocalizaionRepository->skipPresenter(true)->create($data);\nI obtain a Integrity constraint violation\n. ",
    "carlosflorencio": "Thanks!\n. ",
    "DesmondPang": "Hidden and visible functions are not working. I am using \"prettus/l5-repository\": \"^2.1\",\n. ",
    "dixitchopra": "Thanks for your reply. I am using second option in my code. There are two issues here. \n1. How can I change the column name title to Name?\n2. This won't work with 'With'. return $this->postRepository->with(['user'])->all(); I\n am getting only Post model columns and not User columns. Earlier it was working.\n. ",
    "golinmarq": "@andersao did you find a solution to him? I'm interested to apply this \n. @mhetreramesh you should check this https://github.com/andersao/laravel-validator/issues/7\n. What are your related attributes? As I can see you are not defining it on searchable fields\n. Can we close this issue?\n. Sure, you can do that I'll be working on this and make the PR when I have time\n. @eullercristian yes, but I desist to work with this anymore. This should be added\n. @pcastrotigre what's your getByUuid function? I had the same issue as you but I handle this totally different. Are you using some other package to handle uuids?\n. ",
    "hoseinz3": "@andersao i'm still having problems.. @tad3j thank you, but i need both presenter and filter.. ",
    "jonagoldman": "Hey @devmark I am trying to do a similar thing. I basically want to decide when to transform relationships. Would appreciate if you can give me a hint.\nPlease take a loot at the issue I opened here: #101\nThanks.\n. Hey @ruchiaz I am trying to get this to work and will appreciate if you can tell me how you fixed it.\nPlease take a loot at the issue I opened here: https://github.com/andersao/l5-repository/issues/101\nI basically want to decide when to transform relationships.\nThanks.\n. My current solution:\n_Step 1:_ Create new class that extends FractalPresenter and override the parseIncludes() method to allow $includes parameter:\n``` php\nuse Prettus\\Repository\\Presenter\\FractalPresenter;\nabstract class FractalRelationshipsPresenter extends FractalPresenter\n{\npublic function parseIncludes($includes = array())\n{\n\n    $request        = app('Illuminate\\Http\\Request');\n    $paramIncludes  = config('repository.fractal.params.include','include');\n\n    if ( $request->has( $paramIncludes ) ) {\n        $includes = array_merge($includes, explode(',', $paramIncludes));\n    }\n\n    $this->fractal->parseIncludes($includes);\n\n    return $this;\n}\n\n}\n```\n_Step 2:_ Create new class that extends BaseRepository and create present() method to allow to add relationships to the presenter:\n``` php\nuse Prettus\\Repository\\Eloquent\\BaseRepository;\nabstract class PresentableRepository extends BaseRepository\n{\n    public function present($relations)\n    {\n        $this->presenter->parseIncludes($relations);\n        return $this;\n    }\n}\n```\n_Step 3:_ Update your Presenters and Repositories to extend the new classes in previous steps (I'm assuming a Transformer was already created with all desired relationships):\nphp\nclass MyPresenter extends FractalRelationshipsPresenter\n{\n    public function getTransformer()\n    {\n        return new MyTransformer();\n    }\n}\n``` php\nclass MyRepositoryEloquent extends PresentableRepository implements MyRepository\n{\n    public function model()\n    {\n        return MyModel::class;\n    }\npublic function presenter()\n{\n    return MyPresenter::class;\n}\n\n}\n```\n_Usage:_ Call the present() method to include presenter relationships:\n``` php\nclass MyController extends Controller\n{\nprotected $repository;\n\npublic function __construct(MyRepository $repository){\n    $this->repository = $repository;\n}\n\npublic function index()\n{\n    $collection = $this->repository->present(['myrelationship'])->all();\n}\n\n}\n```\n. Just to let you know, this package seems a little dead. At least I have not seen any issue responses for a few months now.\n. I did not found any alternative, but anyways I am using it in my projects. At the end its just implementing different programming patterns into one repository. You could also dig into the code and see how its built and modify it to fit your needs. I have done it and learned a lot in the process.\n. @drmmr763 I see you are building an API and I think is better for you to use Dingo API (https://github.com/dingo/api) for Laravel.\nIt handles Response Transformers and Formatters (using Fractal) and also Authentication, API Versioning, Rate Limiting and more.\nI was also using the this L5-Repository package but end up switching to Dingo API and only copying the Repository patter from here and doing some modifications.\nGood look.\n. You need to change the serializer. Look here: http://fractal.thephpleague.com/serializers/\n. You can set a different serializer in the repository.php config file. Just read the Fractal docs because its not possible to completely remove the 'data' key unless you write your own serializer.\n. ",
    "henninghorn": "So I did some research, and the documentation seems to be wrong.\nInstead of using $query within the apply method of your criteria, you should use $model.\n. Btw, glad to see that url request params overrides any criteria pushed within a controller or repository.\n. I would probably add a new method to your user repository.\n. @walterdis \nYou could add criterias on your category relation on the model itself.\nOr you could drop the with() method and create another criteria and do something like this:\nphp\nfunction apply($model) {\n    $model->with(['category' => function($query) {\n      $query->where();\n    }]);\n  }\nSee (Eager Load Constraints) : http://laravel.com/docs/5.0/eloquent#eager-loading\n. @quinhone \nTake a look at criterias: https://github.com/andersao/l5-repository#create-a-criteria\n. ",
    "devmark": "+1\n. thanks :) \n. ",
    "vluzrmos": "@Bosnadev please...\n. ",
    "MarlonEtiene": "@Bosnadev give the credits to @andersao please!\n. ",
    "mirzap": "@andersao I'm sorry I was pretty busy, I haven't update my blog in a month :) I've added credits in a readme ;)\n. Article it self is updated ;)\nhttp://bosnadev.com/2015/03/07/using-repository-pattern-in-laravel-5/#Credits\nI had in plan part 3 of repository series. I've made quite change in your \"request criteria queries\", but currently I'm very busy to write about it :).\n. ",
    "irazasyed": "Hi @andersao,\nAwesome, Sounds good. Thanks :+1: \n. @andersao Thanks for the awesome work and time you've put on this! Looks quite easy to implement. Will give a try soon and let you know if i have any suggestions. Appreciate it :) :+1: \n. So it turns out, Lumen has the event service provider at:\nLaravel\\Lumen\\Providers\\EventServiceProvider\nSo if i extend this in Lumen, it works fine. You need to modify to support Lumen and Laravel.\n. Sent a PR with a Fix for this - #118 \n. @andersao any news ? \n. Still waiting for @andersao to merge this PR :)\n. ",
    "hiddeco": "@andersao \ud83d\udc4d\n. +1.\n@ionut-tanasa @Jeroen-G \nFrom what I know. PR quick fixes and small additions to master, completely new functions to develop.\nSo master would be more suitable for this.\n. @ionut-tanasa, are you gonna make a PR? Otherwise I will make one this week.\u00a0\n. That is actually a great idea, you just want to copy the column names from the database to the transformer then? Because most transformers contain different names than the database columns do (at least mine do).\n. Laravel has a trait for this: Illuminate\\Console\\AppNamespaceDetectorTrait\nThen you could use $this->getAppNamespace()\n. If you take a quick look at the Generator.php you can find the getReplacement() function. This loads the replacements for the stub file. You can extend the function in your own generator.\nUntested example\nphp\n    /**\n     * Get array replacements.\n     *\n     * @return array\n     */\n    public function getReplacements()\n    {\n        return array_merge(parent::getReplacements(), [\n            'appnamespace' => $this->getAppNamespace()\n        ]);\n    }\n. ",
    "lucasmichot": ":+1: looking forward to get this package in stable version\n. Thanks @andersao !\n. ",
    "ruchiaz": "Sorry my bad. Its seems we don't need bind model for \"With\" attributes. It comes along with the transform model.\n. ",
    "Jeroen-G": "Great! Keep up the good work!\n. You're welcome!\n. I see the value in this as well, although the make:validator should go in the validator package. I could contribute too.\n. I think you should just place a PR. Although I don't know if @andersao prefers it on the master or develop branch.\n. If you've created a PR-repo you can give others push access to it, so it can be one PR.\n. See #42\n. See #42 \n. The other stubs do not contain such a docblock. I do like uniformity. :smile: \n. ",
    "tucq88": "How about now @andersao? (Don't mean to rush, just asking :D) \nMaybe you can just add some sample tests & rules to follow, so we could implement tests ourself - without messing around this great package. \n. @ptcong Hey mate, this PR seems critical, please re-open PR to develop branch\n. Same here. Would love to see an example doing Repositories testing <3 \n. This should not be closed when it's not merged to master yet :( \n. @ionut-tanasa We should merge this to master. I'm facing this problem with Laravel 5.3\n. I don't see any problem with Laravel 5.3.6 \n. Have you tried to parse data with Transformer instead of using Mutator ? \n. oh... no worry mate, It's me need to thank you for your reply. That's pretty critical to me. I just started using this package but it seems like it's not under active development and contains many unresolved issues.\nBut I'm confused with your idea about using original Query Builder. Because the idea of using Repository is to abstract the database layer so if I need to change the DB like from MySQL to Postgres or MongoDB I just need to change my base repository methods. Could you share me more about your ideas ? Would love to talk more about that. \n. @ricardovigatti Thanks mate. Actually I'm not quite familiar with Query Builder & Doctrine 2 so I was kind of nervous, but your answer encourage me to check them out. Cheers. \n. This repo seems dead. I'm looking for another solution :( \n. ",
    "maxberg1c": "Hi,\nis it possible to combine relationships and custom queries?\nFor example:\njob?with=skills&search=PHP&searchFields=skills:like\nIn my Controller I have this:\n$this->jobRepository->pushCriteria(app('Prettus\\Repository\\Criteria\\RequestCriteria'));\n        $jobs = $this->jobRepository->with([\n            'skills',\n            'tasks',\n            'company'\n        ])->all();\n. ",
    "biblicalph": "Hi, \nI have a similar question as maxberg1c. Suppose I have the relations listed below. \nclass Country extends Model implements Transformable {\n   protected $fillable = ['name', 'call_code', 'citizen'];\n}\n```\nclass State extends Model implements Transformable {\n   protected $fillable = ['name', 'country_id'];\npublic function country() {\n       return $this->belongsTo('App\\Country', 'country_id');\n   }\n}\n```\n```\nclass Office extends Model implements Transformable {\n   protected $fillable = ['state_id', 'longitude', 'latitude', 'name', 'address'];\npublic function state() {\n       return $this->bleongsTo('App\\Office', 'state_id');\n   }\n}\n```\nI retrieve the list of offices with the state and country relations in my controller using a repository like so.\n$this->repo->with('state')->with('state.country')->all();\nHow can I add a search criteria that limits the results to offices in a specific country? \nMany thanks for your help\n. ",
    "LordHamwich": "Thank you, we really appreciate your quick response; this is essential package in our project. Kudos!\n. ",
    "catalinux": "Good. No errors anymore. I managed to work with it without any $app->register (i am not sure what I have missed)\n. ",
    "CylonSK": "What about something like this\n$categories = $this->repository->with(['subcategories' => function($query){\nreturn $query->orderBy('cat_name','asc');\n}])->scopeQuery(function($query){\nreturn $query->orderBy('cat_name','asc');\n})->all();\nI am not sure if it will works, because I never sucessfuly use this package, but this one should be working.\n. ",
    "yazfield": "@CylonSK your answer is correct.\n. ",
    "c-veep": "Created a pull request for this.\nhttps://github.com/prettus/l5-repository/pull/69\n. ",
    "mrgrain": "I don't think this should be a default functionality. In an automated API environment I am typically sending through all data anyway.\nEven if not, this is more likely a problem how your validator is setup. You can easily tell your validator to only validate entries if they exits by adding sometimes as the first rule. Or even more complex stuff with the sometimes() method on Laraval's Validator objects.\n. You could just overwrite the update method for your special post repository or add a new updateBySlug() / updateByModel.\nI agree that update and create should use scopes/criteria as well.\n. Returning an array is a core functionality of Fractal, which is the default presenter of this package. You will have to implement your own Presenter to achieve this functionality. However, depending on what you try to achieve there might be easier ways to do this (e.g. collect($posts)->each(function($post) { return (object) $post); });\n. Untested, but you should be able to add a custom scope\nphp\n$posts = $this->repository->scopeQuery(function($query){\n    return $query->withTrashed();\n})->all();\nAlternatively you may add a Criteria for this purpose, especially if you would like to do something like GET /posts?withTrashed or GET /posts?onlyTrashed\nMight be nice to have it included into the package though.\n. You don't. The basic idea of a Presenter is, that you don't touch the data after it got presented. Except to \"format\" the presented data into the representation of your choice on a very abstract level.\nFor example JSON can be formatted with a single command: json_encode($presented_data). \nFor XML it takes a bit more, but it would still work for any kind of data.\n$xml = new SimpleXMLElement('<root/>');\narray_walk_recursive($presented_data, array ($xml, 'addChild'));\n. The default presenter uses Fractal\nReading your question again, I might have misinterpreted your request. (Nevertheless, by statement is still correct.) Depending on what exactly you want to do, I would be happy to help you finding a solution.\nDo you want to transform a posts created_at date into a certain format for output? \n. Hmm, not sure. It's already pretty decoupled thanks to the PresenterInterface. Anyone can simply implement their own presenter.\nIf you plan to add an other presenter as additional choice: Go ahead!\nIf you want to remove the FractalPresenter implementation from the package: This would be a great loss, since Fractal is IMO the de-facto standard for presenters/transformers/whatever-you-call-them.\n. Cool :)\nI am still not really sure about the use case, but I guess the obvious choice would be a view presenter which will pass the model/collection on to a Blade template and return a ViewResponse.\n. Love it. \nHowever, you should add the meta data within the present() method (around line 128 in your PR). That way you avoid a lot of code duplication.\n. I think this is a very common problem, but I am not sure if it is one that can (and should) be solved generally. The main issue I've got with your createWithMany() method is the skipping of validation for the relations. That pushes responsibility for validation back to the controller, which is exactly the opposite of what a Repository is for.\nWe've a similar setup and what we do is that we simple overwrite the create() method within our AccountRepository. Tags will be pushed through the AccountValidator first. This works very well and is straight forward code in the controller. (The downside for you would be that you'll have to inject the tags into to attributes array, since they're apparently not user input.)\nController:\nphp\n$accountRepository->create($account->toArray() + ['tags' => $this->tags]);\nRepository:\n``` php\n   public function create(array $attributes)\n    {\n        $tags = array_get($attributes, 'tags', []);\n    // Have to skip presenter to get a model not some data \n    $temporarySkipPresenter = $this->skipPresenter;\n    $this->skipPresenter(true);\n    $model = parent::create($attributes);\n    $this->skipPresenter($temporarySkipPresenter);\n\n    // attach tags\n    foreach ($tags as $key => $values) {\n        $model->tags()->attach($values);\n    }\n    $model->save();\n\n    return $this->parserResult($model);\n}\n\n```\n. @mauro-gallo  Puh, it has been a while, but I'll give it a shot. \ud83d\ude06 \nThe create method of a repository (or any method for that matter), should still return a model. So I'd expect you can do something like this:\nreturn $repository->create($data)->with('tags')->toJson();\nAlternatively you might have change your repository method to include the relation:\nreturn $this->parserResult($model->with('tags'));\nThe main issue is that create and co are resetting the model so any initial with you put on will be lost.. I love the idea.\nBut I am not sure if overloading the current method is the best way to do it. E.g. find() takes only the id, but if you want to get models by any other condition, you would use findByField().\nSo what about something like updateByField()?\nAlso, there is a updateOrCreate(). I realize there's a slight difference but it still might serve your purpose...\n. ",
    "yajra": "+1. Faced the same problem and what I did as a workaround is to create an Interface to be implemented by the model. On the listener, I then check if the model is an instance of an interface then perform the necessary tasks. I'm also interested to know a better approach? Thanks!\n. ",
    "macagoraga": "@andersao any update regarding this issue?. @yajra did you found a better approach?\nI see that I can get the class name without creating interface like:\n```php\npublic function handle(RepositoryEntityCreated $event)\n{\n    Log::info('action: ' . $event->getAction() . ' - model: ' . get_class($event->getModel()));\n}\n\n```\n. I am ask myself the same question. can someone explain please?\n@nejtr0n  I can also see events. Strange that this is not already in the package...\nI think that would be good also to pass where conditions, something like:\n```php\npublic function count(array $where = [], $columns = '*')\n{\n    $this->applyCriteria();\n    $this->applyScope();\n\n    if($where) {\n        $this->applyConditions($where);\n    }\n\n    $result = $this->model->count($columns);\n\n    $this->resetModel();\n    $this->resetScope();\n\n    return $result;\n}\n\n```. There are different way. Below are one example.\n\nI want to use RequestCriteria for searching data but I don't know how to format URL http://prettus.local/users?search=John&searchFields=name:like \n\nFor add searchFields you could for example add a hidden input like:\n<input type=hidden name=searchFields value=\"name:like\"/>\nOr add a select with different option value that users can select like:\n<select name=searchFields>\n<option value=\"\u01f9ame:like\">Search by name</option>\n</select>\n\nhttp://prettus.local/users?search=name:John;email:john@gmail.com&searchFields=name:like;email:=\n\nFor searchFields do similar like previous example.\nFor add on search \"name:John\" etc..\nYou could attach for example:\n$request->merge([ 'search' => 'email:'.$request->search ]);. By extending UserRepositoryEloquent and changing fieldSearchable worked fine.\nI am just not sure if there are other way.\n```php\n/\n * Class UserFrontendRepositoryEloquent.\n \n * @package namespace App\\Repositories;\n /\nclass UserFrontendRepositoryEloquent extends UserRepositoryEloquent\n{\n    /\n     * The attributes that are searchable, disable email\n     \n     * @var array\n     /\n    protected $fieldSearchable = [\n        'name' => 'like',\n        'first_name' => 'like',\n        'last_name' => 'like',\n        //'email' => 'like',\n    ];\n}\n```. in repository config you can change search params to something else , line 213. ",
    "ecmattos": "Hi ! Is ready the new functionality ?\n. ",
    "eullercdr": "@andersao Are you working in this question?. @hongymagic  The problem persist in last version?. @m33ch There aren\u00b4t. But its a great suggestion. . @andersao Is there this option?. @mitjarobic  The problem persist? Can you paste your code?. This error has been fixed :). Very good @lourenci , i will try and give a feedback for you, thanks a lot!. Please @BafS , resolve conflits or send-me a new PR.. @xiatian Could get me more details about your need?. @TiagoSilvaPereira  Why you dont use a layer Service and call a two repositories ? I dont see the reason for use a repository inside of another repository. . @zepaduajr Can you paste your code, and explain where the error ocurred?. @fhefh2015 The error persist? Tell me, please.. @pulselife This package is live! Just need more people to collaborate. @nikolaynesov  I will check your suggestion.. Please, @penance316 send PR for us. It will be useful for all of us. I will wait for PR. We need more collaborators here. Unfortunately I have hard work on other projects, but our community is able to help us improve the package.. @edmandiesamonte  this error ocurred in wich version?. @ddctd143 Can you send a PR? It's a great suggestion.. @Maras0830 Can you send-me a new PR for this problem please. I had a problem, and i losed your commit.. Thanks @Maras0830 , merged. You are the guy! . Which errors is showed for you?. Dear @Maras0830 , did you try this PR in others versions of Laravel? Actually this project is unique for all laravel\u00b4s versions. Case you didnt try, i will create a new tag for 5.5. Thanks a lot.. @Maras0830 You PR was merge, check that!. @devingray Do you have time to collaborate with the repository? All members here was very busy. If you want, send me a e-mail eullercdr@gmail.com. @dmason30  I will try this case and give to you a feedback. Thanks.. @devingray which version you are using? How are your version of Laravel?. @devingray Try again please. @devingray  I tested now version 2.6.25 error dont occurred. Verify again please. Wich command you are executing? Paste please.. @devingray Really the erro occurred .  Its very strange, because i can to create repositorys, but a time after, i cant, i am check that. You remember in which tag make:entity was working fine?. Fixed in 2.6.25 thanks @Maras0830 . @ionut-tanasa Can you review this PR?. Fixed in 2.6.28. @Maras0830 Thanks so much one more time!. @Maras0830 This PR works in all versions of Laravel, or only 5.5?. @felipefrancioni The error was solve?. Fixed in latest release. Dear @nabeelio There are fewer developers for review these PRs. We need that your PR, be compatible with all versions of PHP and all versions of l5 repository? Did you try that? Thanks. Thanks, @nabeelio . See new release. Please, send again the PR in the branch master.  Fix the code please,  include the signature of method in \nhttps://github.com/andersao/l5-repository/blob/master/src/Prettus/Repository/Contracts/RepositoryInterface.php. Hey guys, I didn't have time to testing this PR. Can you merge? @johannesschobel  Did you try that, its removes falses and 0 values or not? . ",
    "DarKDinDoN": "Also,\nWhen using softDeletes, you can not update a deleted model because the update method use the findOrFail() method without the \"withTrashed()\" parameter.\nAnd it seems impossible to change the way the update method retrieves the model instance.\nEDIT : $this->applyCriteria(); in update() and delete() maybe ?\n. What about the associate method ?\nExample : \nI update or create a random model. I want to associate a random relation to this model.\nBecause there is no before hook, I would do this  :\n``` php\n// Update the model  \n$model = $modelRepository->update(\n    $attributes,\n    $modelId\n);\n// Associate a model\n$model->relation()->associate($relation);\n// And then again save\n$model->save();\n```\nThis will make two queries, when we can make one. (like for issue #75 )\nEDIT :  to be clear, we could associate the model in a beforeUpdate() method and avoid the second query.\n. For the record, I added a getByManyCriteria method that does the exact same thing as the getByCriteria method but accepts an array as parameter.\n. Sorry for the second comment in no time.\nI actually deleted the getByManyCriteria and changed the getCacheKey() method and serialize the criteria along with the other parameters : \n``` php\npublic function getCacheKey($method, $args = null)\n    {\n        $request = app('Illuminate\\Http\\Request');\n        $args    = serialize($args);\n        $criteria = serialize($this->getCriteria()); // Serialize the criteria\n        $key     = sprintf('%s@%s-%s',\n            get_called_class(),\n            $method,\n            md5($args.$criteria.$request->fullUrl()) // Add the criteria to the hash\n        );\n    CacheKeys::putKey(get_called_class(), $key);\n\n    return $key;\n}\n\n```\n. Actually, It won't work if you use a closure in the criteria.\ne.g : WhereHasCriteria with a $q->wereHas(...);\nNo solution yet.\n. ",
    "cdarken": "How about passing also the object in the state before the update to RepositoryEntityUpdated event ?\nLike on the delete event.\nWould help a lot with testing since the native model events are not triggered when running tests.\n. Created pull request #321 for this.. This was a good question. At least an answer before closing would have been nice, @ionut-tanasa \n. Is this the answer?\nIn your repository set $fieldSearchable with the name of the fields to be searchable or a relation to fields.\nIt's a bit hidden in the readme.\n. @mvpasarel how did you override it? it's a local variable in RequestCriteria::apply\n. Yeah, that is not really overriding the variable, you've overridden the entire method. I think the method in the last comment of issue #102  is better\nI see this used a lot of times, I'll try and create a pull request with that solution if @netdotter787 allows me to use his code.\n. @shez1983 did you try to create a criteria for this? you can write your query inside it\n. ",
    "luukholleman": "This is indeed a problem, parameters of criteria aren't included in the cache. UserCriteria(1) will cache records, the next time UserCriteria(2) will return those same records.\nCode of DarKDinDoN seems to fix it\n. ",
    "elliottmb": "I've been running into this issue myself. \nI haven't 100% solved it to my liking, but what I've done is use @DarKDinDoN's tweak. I've paired that with implementing the Serializable Interface in any Criteria that uses a closure. In the serialize method, I use SuperClosure\\Serializer to serialize the closure.\nIt appears to work in most cases, but still run into some failings.\nOne such failing is if you use the RequestCriteria.\n. And in a similar fashion to @DarKDinDoN, I'm now commenting with little to no time having passed between comments. \nI've found a possible work around for this whole mess without doing anything too fancy. By giving up some code reuse, I've modified the standard CacheableRepository trait's all() method, and soon other methods, to simply inject the SQL string and bindings into the $args input of the getCacheKey() method.\n``` php\n    public function all($columns = array('*'))\n    {\n        if (!$this->allowedCache('all') || $this->isSkippedCache()) {\n            return parent::all($columns);\n        }\n    $this->applyCriteria();\n    $this->applyScope();\n\n    $args = func_get_args();\n\n    if ($this->model instanceof \\Illuminate\\Database\\Eloquent\\Builder) {\n        $query = $this->model->getQuery();\n        $args = array_merge(\n            $args,\n            [\n                $query->getBindings(),\n                $query->toSql()\n            ]\n        );\n    }\n\n    $key = $this->getCacheKey('all', $args);\n\n    $minutes = $this->getCacheMinutes();\n    $value = $this->getCacheRepository()->remember($key, $minutes, function () use ($columns) {\n        if ($this->model instanceof \\Illuminate\\Database\\Eloquent\\Builder) {\n            $results = $this->model->get($columns);\n        } else {\n            $results = $this->model->all($columns);\n        }\n\n        return $this->parserResult($results);\n    });\n\n    $this->resetModel();\n\n    return $value;\n}\n\n```\n. That's good to hear, but it's quite alright. Life has a way of making us busy and no apology is needed. \nI've gone about modifying the cache key generation method to take into consideration the underlying query and bindings of a statement. I've improved the way I do it since my comment above, but the general idea is the same. \nEssentially apply the criteria and scope so that the underlying query instance is fully built up, and then serialize the query string and the bindings array before concatenation of them alongside the $args and $request serialization before passing them into the md5 function.\nWould you be interested in a pull request or do you have another idea for solving this issue? I'll admit my solution is eloquent dependent and doesn't take advantage of the inherited parent implementation beyond the first if statement.\n. @quinhone findWhere() returns a Collection generally, which is shown by the error you're receiving. \nIf you're wanting to use the paginate() method on the repository, you will need to either use scopeQuery() or a Criteria. Alternatively you could construct a paginator from the collection result of a findWhere().\n. ",
    "jake142": "I'd also love to see a solution so that the criteria is cached\n. I would also like to see a fix for the EventServiceProvider problem. Thank you for a great package.\n. I have done this and the data is cached in the DB (CACHE_DRIVER=database). The problem is that it also cached in the filesystem. \n. ",
    "rtransat": "I don't use Presenters with this package. I use this one and my Country model doesn't implement any presenter.\n. Yes I know that ;). But why the method in the trait fails in my application ?\n. ",
    "dusterio": "Well, if you look into CacheableRepository, it does definitely try to override a static method all() \nAnd all() is static for a reason... \n. ",
    "geraldarcega": "Hi! I also encounter the same problem. How did you fix it?! The issues is closed but there's no solution posted. TIA!. Hi guys! Is there any fix or work around on this issue?\n. Hi! It seems that this commit has been reverted in the new version. https://github.com/andersao/l5-repository/blob/41fd976226fe5c95ce693a1aeb2d29bbfdea58d3/src/Prettus/Repository/Generators/RepositoryEloquentGenerator.php#L57. I am currently encountering the previous error.\nEDIT: My bad, I didn't see that this feature is committed in develop branch. Hi! Does anyone solve the bug?! I'm using Laravel 5.2 and I've also encounter this bug.. ",
    "uyab": "I think it should $this->findWhere instead of $this->model->findWhere\n. It's look like a namespace problem, can you provide full declaration of UnivRepository and how you call it?\n. According to documentation, repository doesnt have where function. There is findWhere but it is not chainable so you cannot call paginate after it. I think you should utilize Criteria to solve your problem.\n. Thank you :)\n. Hi @quinhone, can you close this if there is no more issue ? \n. Its already fixed by #231. @ionut-tanasa, would you like to tagged new release for this?\n. Hi @Webysther, today I got the same problem, how do you overcome this issue?. ",
    "husnulhamidiah": "Silly of me. You're right.\nIt's all about namespace.\n. ",
    "sangar82": "I\u00b4ve extended BaseRepository to solve my needs\nThanks!\n. ",
    "nateritter": "@sangar82 I'd like to know how you extended the BaseRepository to make chainable methods.\n. I concur. The package has some great intentions, but I'm finding the need to change my code considerably to adopt to the coupling.  Would be great if that wasn't necessary.\n. ",
    "nikolaynesov": "@andersao,\nHi and thank you for this cool package. \nI am experiencing the same issue. I there any temporary quick fix?\n\"prettus/l5-repository\": \"^2.6\"\n. You can extend the Repository and write your own method for multiple rows in one query. . @pulselife why? any alternatives?. ",
    "penance316": "I am receiving the same issue. trying to hide a property doesn't seem to work currently. This would be very helpful to me also, perhaps we need a countWhere function also or just the ability to apply conditions without returning the results straight away so count can be called later.\nalternatively\nMaking applyConditions a public function we would be able to filter results before returning all the data and then calling count function as described above we could return just the count instead of the full models.\nWhat do you think? I can implement and create PR if this is an approach you think would work.. ",
    "spaco": "same issue . \n\"prettus/l5-repository\": \"^2.6\". ",
    "quinhone": "OK! I've got it, is equal in L5 even using -> render ()\n. @apstyx I could not, I ended up using the form of Laravel even in these cases.\nProduct::join()\n. @apstyx Very good! Tks!!!\n. ",
    "apstyx": "@quinhone Did you manage to resolve your issue? I am struggling with a very basic join using L5-repository. If you could please paste a full example as everything I have found seems like partial solutions. Thanks in advance\n. @ionut-tanasa Agreed a Criteria would work perfect in the case where there is a fixed query. I have not been able to figure how to specify a working criteria with a variable as an input. If you know of this dark magic, please share as it would clean up the code base even more :)\n@quinhone I figured this out I think, maybe not perfect but it is working in my case. I have tried to adept it your query. \nPlease let me know if it helps\nMy understanding is that once the repository is accessed one uses the scopeQuery to to attach SQL statements to the basic SELECT * FROM \"repositoryName\". You need to experiment a little bit certain query additions as I figured out that I could not max or min or normal join, however for your case leftJoin should work a charm. I have added a $randomVariable to the example just in case you want to specify a variable input for the scopeQuery, otherwise remove the use ($randomVariableId).\n```\n$this->product = $product; // $product is set through a constructor as ProductInterface $product\n$products = $this->product->scopeQuery(function ($query) use ($randomVariableId) {\n              return $query->leftJoin('products_est', 'products.prod_id', '=', 'products_est.product_id')\n                          ->where('products_est.prod_est_des_home' ,'=', '1')\n                          ->where('products_est.prod_est_show_site', '=', '1')\n                          ->where('products_photos.prod_ft_des', '=', $randomVariableId);\n              })->all();\n```\n. ",
    "eidng8": "Though this may not solve all problems, but does the $touches eloquent property helps in case of propagating/flushing the cache of parent record?\n. ",
    "zdnk": "$touches wont help because if you look how it is all hooked in, the cache is cleared only if you call Repository method create, update and delete.. ",
    "T0miii": "any update on this?\nI imagine for such a behaviour, there needs to be a relation set up btw the related Repositories. My bad!\nOf course the returned data is a collection:\n$this->contract->with('pools')->find($contract)->pools->pluck('prm_partnerpool_id');\nClosing this.. ",
    "leonardollobato": "+1. +1\n. ",
    "Mythos": "I could also need that, 'cause I'm using the crud-generator package.\n. ",
    "k1ng440": "Hi @andersao, by any chance you got it done yet? \ni am planning to integrate this to exisitng project i have been working for past 2 years. \n. +1\n. ",
    "mvpasarel": "@k1ng440 Put your models path in another folder, Entities or something. Create the repository with new model and change either the model path in repository or update new models with code from existing model. You gain more from using the package instead of just waiting for a fix on that issue.\nFeel free to do the change in the package and do a pull-request.\n. @ionut-tanasa I wanted to do it on the validator package in the first place but thought it makes more sense to have it here with all the other generators instead of moving generator logic to a validation package.\n. :+1: \n. What error do you have? Are you using develop branch or master?\nOn Apr 12, 2016 5:32 PM, \"Gio\" notifications@github.com wrote:\n\nHey, I am trying out this method in my laravel project but when doing \"php\nartisan make:entity Cats... \", it is not creating a Controller for Cats. I\nam using laravel 5.2.26\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/andersao/l5-repository/issues/174\n. @humayunghani There is no way to fix this.\n\nHowever, you can always do the repository basic queries in the Event class and send to the Listener some array data so you can \"do any necessary work when a userRegistered\" which can be more complex.\n. @munza I fixed it. Waiting for @ionut-tanasa to accept PR #186 \n. @ionut-tanasa You should merge #217 as well. It a rollback for the package name\n. @mrbarde Feel free to make a pull request and update the documentation as you would like to found it. I agree with you, you must not let others lose their time as you did.\n. @ssheduardo You should not ever modifiy vendor/ files. Just create a new CustomRepository class in your Repositories/ folder and extend it in your repositories instead of BaseRepository.\n. There is no reason in adding that method in all the Eloquent Repositories. Create a new class in your Repositories/ folders\nclass Custom Repository extends BaseRepository {\n    public function deleteMultipleById(array $ids)\n    {\n        return $this->model->destroy($ids);\n    }\n}\nAnd in the generated files you will need to have:\nCompanyTypeRepositoryEloquent extends CustomRepository\nMakes sense?\n. @ssheduardo Your question is about OOP in PHP, not package related. \nAs you can imagine, @andersao and all the other contributors have full-time jobs and everybody did as much as they could. \nFeel free to make pull requests with what you think is missing from the documentation.\n. @malyusha Looks good to me. \n. @tibi00 I have created a new Critera, extended RequestCriteria and overridden the apply method just to make $modelForceAndWhere=true. Try that and it will work.\n. @cdarken You wont guess it :) Check line 41.\nhttps://gist.github.com/mvpasarel/cbb09fef317116d78b202db86be85bed\nAnd I use it in my controllers like this:\n$this->repository->pushCriteria(app('App\\Criteria\\BaseCriteria'));\n. @cdarken That's what I said in my original comment, that I am overriding the apply method. Use any solution you like \n. @felipeminello Check #149\n. @computerfr33k What's your repository and user validator code?\n. At least for your initial code, it will fail as you are sending only name in your array:\n$this->userRepository->create([\n    'name' => 'user1',\n])\nThe validation rule for repository create method is in ValidatorInterface::RULE_CREATE array and it says password:required.\n. @liubusian It's the same as you do it with pure Laravel. Use page input in your request query.\nhttp://localhost/users?page=2\nAnd the magic is done under the hood.\n. ",
    "pat-och": "first thanks @jonagoldman for this nice tip !\nSecond, is possible to implement this in the with() repository function instead making a new present() function ?\nattempt is to have more standart behavior who manage the needed relations in background\n. see detailled answer here #554. Did you succeed? I would also like to use both together.\nAll advice is welcome here.\nI'll keep you posted on my progress here. . This post seems not encounter success lol, yet it's a crucial subject imo\nwhat about something like this anywhere it needs ?\npublic function delete($id)\n{\n    ....\n    $model = $this->model->find($id); // THIS ALLOW TO OVERLOAD FIND AND OTHER METHOD RETURNING  ELOQUENT MODEL TO CONSUMER\n    ....\n}\n\nis this allows to overload find() and other methods returning eloquent models to the consumer ?. I just realized by going deeper into the doc that the presenters are there among other things to satisfy this particular need, isn't it?\nhttps://github.com/andersao/l5-repository/#presenters\nI close but feel free to comment, the repository pattern used with  laravel and eloquent seems to be debating for a long time. duplicated with https://github.com/andersao/l5-repository/issues/107\nSo seems we need to write own serializer to handle this. the right answer is:\nin published config/repository.php\nchange serializer' => league\\Fractal\\Serializer\\DataArraySerializer::class\nby serializer' => league\\Fractal\\Serializer\\ArraySerializer::class\n(so no need to make own serializer for this purpose)\n```\n    /*\n    |--------------------------------------------------------------------------\n    | Fractal Presenter Config\n    |--------------------------------------------------------------------------\n    |\nAvailable serializers:\nArraySerializer\nDataArraySerializer\nJsonApiSerializer\n\n*/\n'fractal'    => [\n    'params'     => [\n        'include' => 'include'\n    ],\n    'serializer' => league\\Fractal\\Serializer\\ArraySerializer::class\n],\n\n``\n**IMPORTANT** don't forget to runphp artisan config:clearorphp artisan config:cache` to access your new config\nEDIT:\nworks for items like $this->fooRepository->find(1);\nbut not for collection $this->fooRepository->all(); still have the data namespace..... define relations in yours entities employee and company then use with() repository method\ne.g. in your employee controller (or whatever else ) $this->employeeRepository->with('company')->all(). ",
    "drmmr763": "PS:\nJust did some more debugging dumping the query:\nvar_dump($query->toSql());\nGives me:\nstring 'select * from `temps` where `state` = ? or `tempType` = ?' (length=57)\nSo clearly this is where the issue is. The question is, how to change that from an \"OR\" to an \"and\". \nI think the relevant code is here where there's a check for modelForceAndWhere:\nhttps://github.com/andersao/l5-repository/blob/master/src/Prettus/Repository/Criteria/RequestCriteria.php#L51-L53\n``` php\n$modelForceAndWhere = false;\n$model = $model->where(function ($query) use($fields, $search, $searchData, $isFirstField, $modelForceAndWhere) {\n// rest of function\n```\nas far as I can tell, there's no place for this value to be set or changed. It's set to false and stays false. Again, help i understanding why this is would be awesome. \n. Following up:\nI didn't see a good way to accomplish what I wanted, and I really wanted to build in some more complex URL query filtering. To do that I created my own custom RequestCriteria. You can see it here:\nhttps://gist.github.com/drmmr763/338c9ab380b533ab2623\nThe URL parsing functions are borrowed from:\nhttps://github.com/marcelgwerder/laravel-api-handler/blob/master/src/Parser.php#L209\nWhich lends its self to wonderfully complex queries: \n```\nSuffixes\nSuffix        | Operator      | Meaning\n------------- | ------------- | -------------\n-lk           | LIKE          | Same as the SQL LIKE operator\n-not-lk       | NOT LIKE      | Same as the SQL NOT LIKE operator\n-in           | IN            | Same as the SQL IN operator\n-not-in       | NOT IN        | Same as the SQL NOT IN operator\n-min          | >=            | Greater than or equal to\n-max          | <=            | Smaller than or equal to\n-st           | <             | Smaller than\n-gt           | >             | Greater than\n-not          | !=            | Not equal to\n```\nA lot of the documentation on filtering and ordering is available here:\nhttps://github.com/marcelgwerder/laravel-api-handler#url-parsing\nIf there's interest I'd be happy to generate a pull request with these updates. If not, feel free to borrow the completed class I created. Please keep the attributes to the original parser author as well! \n. Well that's a bummer. There aren't any better alternatives are there? \n. ",
    "netdotter787": "I found an easy work around.\nJust create a new Criteria and use that in the controllers when need and adding a new search parameter in the config/repository.php \n```\n'params'    =>   [\n            'search'       => 'search',\n            'searchFields' => 'searchFields',\n            'filter'       => 'filter',\n            'orderBy'      => 'orderBy',\n            'sortedBy'     => 'sortedBy',\n            'with'         => 'with',\n            'and'          => 'and'\n        ]\n```\nThen create a new Criteria file, based on the default RequestCriteria.php, with a minor hack\nif($this->request->get(config('repository.criteria.params.and', false), false) == 'pass')\n            {\n                $modelForceAndWhere = true;\n            } else {\n                $modelForceAndWhere = false;\n            }\nso we can use it like \n<site_name>/api/v1/albums?search=artist_id:1;name:Ba&searchFields=name:like;artist_id:=&and=pass\n. ",
    "devfelipereis": "Good to know. Thank you so much!\n. ",
    "nikhileshva": "How can I do that with this package ?\n. ",
    "dj1020": "I've already installed \"prettus/laravel-validation\": \"dev-master\", but the issue still not solved. I think it 's because I didn't regenerate my entity. I found there may be a typo in the catch part from generator:\n```\ncatch (ValidatorException $e) {\n        if ($request->wantsJson()) {\n\n            return response()->json([\n                'error'   => true,\n                'message' => $e->getMessage()  // HERE is THE PROBLEM\n            ]);\n        }\n\n        return redirect()->back()->withErrors($e->getMessageBag())->withInput();\n    }\n\n```\n'message' => $e->getMessage() should be 'message' => $e->getMessageBag(), \nI changed it and it works fine.\n. @ionut-tanasa Sure.\n. ",
    "xeno010": "The method lists is deprecated since version 5.2. Use the \"pluck\" method directly.\nHere's a quote from upgrade notes https://laravel.com/docs/5.2/upgrade:\n\nThe lists method on the Collection, query builder and Eloquent query builder objects has been renamed to pluck.\n. \n",
    "thecodecafe": "So i decided to try $user = $this->model->findWhere([\"id\" => $id]); and it worked perfectly, for what i wanted.\n. ",
    "nosun": "\u54c8\u54c8. ",
    "wangyuanhui": "you should use try catch.\ntry {\n$user = $this->model->find($id);\n} catch (\\Exception $e) {\n ///\n}. ",
    "thiagof": "Yes sure. You need to configure Laravel Cache driver option.\nCheckout https://laravel.com/docs/5.1/cache\n. ",
    "pjmartorell": "@elliottmb In my opinion, using scopes is a bit hacky, even more when actually the repository pattern tries to decouple from the ORM.\n. There is a related issue that may help you #129 \nIt's a pity that only some methods can be chained and on top of that, there's no clear documentation about it.\n. Alternatively you can define a method in your repository like the following:\nclass PostRepository extends BaseRepository {\n    ...\n    def withTrashed() {\n        $this->model = $this->model->withTrashed();\n        return $this;\n     }\n}\nAnd then simply chain it in your controllers:\n$posts = $this->repository->withTrashed()->all();\n. @amin101 the equivalent method that you are looking for is findWhere. Check the documentation of l5-repository for futher details. You don't need to create a where method for this purpose.\n. Well, the problem here is that the repository pattern states that repositories' methods should return Collections but in this package there's a mix of methods that return a Collection object and methods that return a BaseRepository object to allow chaining more methods.\n. ",
    "Mashpy": "2 days ago I had solved this problem this way. Hope this article will help you.\n. @jacobcyl  Can you give me any demo code that I can get the perfect way.. ",
    "rushairer": "When I use scopeQuery() or a Criteria,But the cache key are the same... \n. mark\n. The cache key  does not include the part of scopeQuery\n. ",
    "jacobcyl": "@Mashpy I don't think your way is the best, maybe use pushCriteria is more elegant.. ",
    "nabeeljavaid-vteams": "Hi,\nI checked this package and like overall concept but there are few problem first important issue is that\n\"Chaining method functionality is not working\"\nCode:\n$this->respository->findWhereIn('id', [1,2,3,4,5])->orderBy('created_at', 'desc')->paginate($limit=5);\n. ",
    "gjportegies": "Problem was caused because the column 'attribute_set_id' was not mass assignable. My bad.\n. ",
    "leemason": "+1 for this, the pushCriteria method could check if string or object, if object do what it does already.\nIf its a string run it through app()->make() so the criteria can resolve dependencies within its constructor :-)\n. ",
    "pdata": "Would be helpful to have the option to insert extra data into JSON data produced by Fractal in particular. At the moment pagination data is automatically in the 'meta' key of the output. This PR would allow other stuff such as _links (e.g. I'd like to insert the URI to use to add new records) into the meta key.\n. ",
    "tianyong90": "@ionut-tanasa Got it. Thanks!!\n. @kojilab \n``` php\n$userRepo = app(\\App\\Repositories\\UserRepository::class);\n$user = $userRepo->find(1);\ndump($user);\n```\nYou can use it in this way, it works for me.\n. I'm also suffering from the same issue, I found that someone refactored the paginate and simplePaginate method in BaseRepository on 20 Feb 2016, but the paginate method in CacheableRepository Trait has not adjusted  according to the refactoring.\n\n. ",
    "giolvani": "I am using this package also, but I cannot create or update. Find registers works fine!\n. Well, it works fine to me now!\nIn my case, I was forgetting the $fillable fields.\n. ",
    "rntorm": "Replace the line I pointed to above and you should be able to also create and update @giolvani. Create atleast works, haven't tested the update yet\n. ",
    "Rhincodon": "Why this called a bug?\n. ",
    "crnkovic": "That way I have no presenters. I want to have presenters, but I want it to be in the form of Laravel Collection object, not as an array.\n. ",
    "dmason30": "@andersao @pjmartorell The issue with the solution above is that when caching it doesn't distinguish results withTrashed and without as seperate cache entities so if you run repo->withTrashed()->paginate(15) and later run repo->all() then it will return from cached with the deleted entries.\nThere is a workaround by specifying the deleted_at column:: \nrepo->withTrashed()->paginate(15, ['*', 'deleted_at']);\nHowever, I hope soft deletes support will be added soon.\n. @alirezamirsepassi The findByField should return a collection of results where that field matches.. Please close.. ",
    "w0rd-driven": "Since I'm already invested in a fork for some RequestCriteria enhancements, I added the following inside the apply() method:\n```\n$macro = $this->request->get(config('repository.criteria.params.macro', 'macro'), null);\nif (isset($macro) && !empty($macro)) {\n    switch ($macro) {\n        case \"withTrashed\":\n            $model = $model->withTrashed();\n            break;\n       case \"withoutTrashed\":\n            $model = $model->withoutTrashed();\n            break;\n       case \"onlyTrashed\":\n            $model = $model->onlyTrashed();\n            break;\n        default:\n            break;\n    }\n}\n``\nIn theconfig/repository.phpyou'd also need to add'macro' => 'macro',` in the criteria params section.\nTo apply it to a request you would just add macro=onlyTrashed or one of the other macros. It would likely be better to programmatically read the list of macros and to disregard case sensitivity but I needed something very quick and dirty was the result.. I solved this problem in a very opinionated fork I'm maintaining at my current employer. I preface with that as I can't easily submit a PR to get the change into the core package.\nThe problem is located on this line: https://github.com/andersao/l5-repository/blob/master/src/Prettus/Repository/Criteria/RequestCriteria.php#L180, particularly the parserSearchData method.\nThe fix is changing that line to:\nlist($field, $value) = explode(':', $row, 2);\nNote the 3rd parameter of explode, this is the optional limit parameter. I would expect a call without the limit supplied to be essentially \"unlimited\" but that doesn't seem to be the case.\nI believe this should be in core and it's such a small change it would be perfect for someone who has never contributed to an open source project before.\nEdit: Removed the erroneous statement that it's only parsing the value. It's parsing $field as the first colon and the rest, up to 2 colons, is being pushed into the $value parameter.. To my understanding, Transformable, TransformableTrait, Presentable and PresentableTrait push a lightweight presenter to the model itself. There's a transform() method the model expects and the trait's transform() method just calls $this->toArray(); Presenter methods just set the methods the contract expects and does the work for you in setting it all up.\nOne of my transform methods:\npublic function transform()\n    {\n        return [\n            'id'            => (int) $this->id,\n            'first_name'    => $this->first_name,\n            'last_name'     => $this->last_name,\n            'email_address' => $this->email_address,\n            'created_at'    => $this->created_at ? $this->created_at->format('c') : null,\n            'updated_at'    => $this->updated_at ? $this->updated_at->format('c') : null,\n        ];\n    }\nThe last bit to wire it all up is to set presenter() in your repository classes to return ModelFractalPresenter::class; For my usage I have an AbstractRepository class that all my client-side repositories are based off of so it's set in one place.\nI'm unsure how normal presenters work because well before I started using the package helpers were made to essentially build the array output in much of the same way. The Transformable presenter also changes the data from what I've grown to expect so I'm currently not using this technique, though it would make things a lot simpler to have it all in one place. I personally prefer the presenter/cast/fractal/whatever you want to call this all at the model level than to shard that out, even if that still follows SRP.\nI believe most of this was in the readme but I admit I didn't fully grok everything until I started playing with it completely.. ",
    "Kyslik": "anything new on this?\n. ",
    "gregoryduckworth": "This would be a great addition! At the moment I've just added an extra function but would love to see it as part of the package.\npublic function trashed()\n    {\n        $trashed = $this->model->onlyTrashed();\n        event(new RepositoryEntityDeleted($this, $this->model->getModel()));\n        return $trashed;\n    }. ",
    "vladiamandii": "@arthurvasconcelos try this:\n```\npublic function apply($model, RepositoryInterface $repository)\n{\n    $model = $model->with(['summaries' => function($q){\n        $q->where('is_category', true);\n    }])->whereHas('summaries', function($query) {\n        $query->where('is_category', true);\n    });\nreturn $model;\n\n}\n```\n. @devthiagolino have you tried this? \n$this->repository->with(['client' => function($query){ $query->where(); }])->paginate();\nIt should work.\n. @amin101 try this:\n$this->repository->makeModel()->getTable();\n. ",
    "jesusvpct": "Can be a way to do this on the repository? I mean, a function on the repository that returns the results of the condition?\n. ",
    "amin101": "Thanks @mrgrain .how may i benefit of the presenter which is bounded with this package? \nwould you please provide me a proper link to learn more about that?\n. Oh,seems it was my fault. i was added a trait with a where function. for it to work correctly it should be so:\n``` php\n    public function where($column, $operator = null, $value = null, $boolean = 'and')\n    {\n    $this->model = $this->model->where($column, $operator, $value, $boolean);\n\n    return $this;\n}\n\n```\nBut still i don't know  why there is no where clause defined in baserepository.\n. ",
    "mgralikowski": "Same question here. How can i sort results? Example:\n$this->testRepository->orderBy('column', 'direct')\n            ->whereBetween('date', 'date'2);\nHow make it works? (No \"order by\" is added to query).. ",
    "humayunghani": "I need solution for this as well. In fact, a little more, how would we use joins with where clause?\n. yeah I just realized that since repository doesn't hold any data so why would i want to pass it anyway? The real stuff which we need is the relevant data itself. Thanks for your help, I really appreciate it.\n. How do you make joins with criteria? Can anybody help me on this, any links? I'm stuck right now.\n. ",
    "kojilab": "So do I. :)\n. Thanks a lot!!!!\n. ",
    "garhbod": "I'm the same. To get it to work for me I did something like the following.\n$contacts = $this->repository->scopeQuery(function($query) use ($email) {\n        return $query->join('user', 'user.id', '=', 'contacts.user_id')\n            ->where('user.email', email);\n    })->all();. Another option could be the following. It's not possible to convert this one to a criteria but it might help someone\n```\n        $contacts = $this->repository->with(['user'])->all();\n    $contacts = $contacts->filter(function ($contact, $key) use ($email) {\n        return $contact['user']['email'] == $email;\n    });\n\n```. Okay third time lucky. This I think is the best way to achieve what my last 2 answers set out to do.\n$this->repository->whereHas('user', function ($query) use ($email) {\n        $query->where('email', $email);\n    })->all();. Sorted the issue by setting skipPresenter(false) before calling all()\nFor people having the same issue\n$this->repository->all()->presenter()\nShould be changed to \n$this->repository->skipPresenter(false)->all(). Still an Issue. Wanting to transform a relationship using the presenter doesn't work due to the collection not having the method.. Worked out a solution for on demand Presenter. Example below\n$comments = $post->comments()->get();\n$commentPresenter = new CommentPresenter();\nreturn $commentPresenter->present($comments);. #255 . ",
    "pakcybershagufta": "How we apply on relations with /search. HOw perform opn company.name even.unable to perform ?. same thing get employees with company where company name is 'XYZ'?. Same issue. ",
    "ssheduardo": "Thanks for help me.\nWhy not add in README.?\n. @mvpasarel for default when create a repository with command\nphp artisan make:repository CompanyType\nCreate 2 files:\nRepositories/CompanyTypeRepository.php and\nRepositories/CompanyTypeRepositoryEloquent.php\nSo, add the new method in?\nCompanyTypeRepositoryEloquent.php\npublic function deleteMultipleById(array $ids)\n{\n    return $this->model->destroy($ids);\n}\n. Thanks @mvpasarel  for help me.\nWhy not @andersao add more documentacion and examples over your repository?.\n. @mvpasarel I understand that all contribute to the code in their little free time.\nThis repository is great, thanks a all people.\n. @malyusha good idea.\nThanks...\n. Any idea?\nOr the method getTaxOfAmount,move model to Tax.php?\n. ????\n. ",
    "OaiVo": "I have an issue: Target [App\\Repositories_] is not instantiable while building [App\\Http\\Controllers_].\nPls, add this config in README !!\n. ",
    "younus93": "Yes, Even had the similar issue Target [App\\Repositories_] is not instantiable while building [App\\Http\\Controllers_].\n. ",
    "Mahmoudz": "I really hate constructors for passing data, here's the reason:\nInstead of having this simple clean code:\n``` php\nclass SomeCriteria extends Criteria\n{\n    public function apply($model, RepositoryInterface $repository, $data)\n    {\n        return $model->where('user_id', '=', $data['userId']); // or $model->where('user_id', '=', $userId);\n    }\n}\n```\nI have write all this:\n``` php\nclass SomeCriteria extends Criteria\n{\n    private $userId;\n    private $somethingElse;\n    private ... // for each data\npublic function __construct($userId, $somethingElse, ...) \n{\n    $this->userId = $userId;\n    $this->somethingElse = $somethingElse;\n    $this-> ... // for each data\n}\n\npublic function apply($model, RepositoryInterface $repository)\n{\n    return $model->where('user_id', '=', $this->userId]);\n}\n\n}\n```\nThat's additional 9 lines of code == more complexity == longer coding time == more CPU Instructions == slower performance :P\n. @andersao seems like skipCriteria will solve it. Thanks\n. ",
    "mauro-gallo": "Good Morning, thank you @mrgrain, i I followed your advice and I get the desired result.\nIn the controller I would like to return the model with the tags in json format. Without the package i write:\nreturn $this->model->with('tags')->toJson();\ni want to use the presenter/transformer. Can you help me?\nbest regards. ",
    "GioValentin": "I used composer to install prettus.\n1. When putting the RepositoriesSericeProvider in the Register class in AppServiceProvider. It states that it's not found. Even after using php artisan vendor:publish.\n2. When making a entity it's not making a Controller for the CRUD resource.\nOn Apr 12, 2016, at 10:36 AM, Madalin Pasarel notifications@github.com<mailto:notifications@github.com> wrote:\nWhat error do you have? Are you using develop branch or master?\nOn Apr 12, 2016 5:32 PM, \"Gio\" notifications@github.com<mailto:notifications@github.com> wrote:\n\nHey, I am trying out this method in my laravel project but when doing \"php\nartisan make:entity Cats... \", it is not creating a Controller for Cats. I\nam using laravel 5.2.26\n\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/andersao/l5-repository/issues/174\n\n\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHubhttps://github.com/andersao/l5-repository/issues/174#issuecomment-208936721\nPlease Note: Due to Florida's very broad public records law, most written communications to or from College employees regarding College business are public records, available to the public and media upon request. Therefore, this email communication may be subject to public disclosure. This message is the property of Hillsborough Community College or its affiliates. It may be legally privileged and/or confidential and is intended only for the use of the addressee(s). No addressee should forward, print, copy, or otherwise reproduce this message in any manner that would allow it to be viewed by any individual not originally listed as a recipient. If the reader of this message is not the intended recipient, you are hereby notified that any unauthorized disclosure, dissemination, distribution, copying or the taking of any action in reliance on the information herein is strictly prohibited. If you have received this communication in error, please immediately notify the sender and delete this message. Thank you. Please Note: Due to Florida's very broad public records law, most written communications to or from College employees regarding College business are public records, available to the public and media upon request. Therefore, this email communication may be subject to public disclosure. This message is the property of Hillsborough Community College or its affiliates. It may be legally privileged and/or confidential and is intended only for the use of the addressee(s). No addressee should forward, print, copy, or otherwise reproduce this message in any manner that would allow it to be viewed by any individual not originally listed as a recipient. If the reader of this message is not the intended recipient, you are hereby notified that any unauthorized disclosure, dissemination, distribution, copying or the taking of any action in reliance on the information herein is strictly prohibited. If you have received this communication in error, please immediately notify the sender and delete this message. Thank you.\n. Oh okay\nOn Apr 12, 2016, at 10:46 AM, Ionut Tanasa notifications@github.com<mailto:notifications@github.com> wrote:\n@GiovanniValenhttps://github.com/GiovanniValen it's not yet released.\n\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHubhttps://github.com/andersao/l5-repository/issues/174#issuecomment-208941881\nPlease Note: Due to Florida's very broad public records law, most written communications to or from College employees regarding College business are public records, available to the public and media upon request. Therefore, this email communication may be subject to public disclosure. This message is the property of Hillsborough Community College or its affiliates. It may be legally privileged and/or confidential and is intended only for the use of the addressee(s). No addressee should forward, print, copy, or otherwise reproduce this message in any manner that would allow it to be viewed by any individual not originally listed as a recipient. If the reader of this message is not the intended recipient, you are hereby notified that any unauthorized disclosure, dissemination, distribution, copying or the taking of any action in reliance on the information herein is strictly prohibited. If you have received this communication in error, please immediately notify the sender and delete this message. Thank you. Please Note: Due to Florida's very broad public records law, most written communications to or from College employees regarding College business are public records, available to the public and media upon request. Therefore, this email communication may be subject to public disclosure. This message is the property of Hillsborough Community College or its affiliates. It may be legally privileged and/or confidential and is intended only for the use of the addressee(s). No addressee should forward, print, copy, or otherwise reproduce this message in any manner that would allow it to be viewed by any individual not originally listed as a recipient. If the reader of this message is not the intended recipient, you are hereby notified that any unauthorized disclosure, dissemination, distribution, copying or the taking of any action in reliance on the information herein is strictly prohibited. If you have received this communication in error, please immediately notify the sender and delete this message. Thank you.\n. ",
    "giordanolima": "updateByFields i think it's a good idea\n. ",
    "kylescousin": "@ionut-tanasa The error shows only 502 bad gateway without a stack trace.\nAnd also laravel.log is empty...\nWhere can I find the details of the error?\n. This is what it says:\n2016/04/18 13:52:08 [error] 2309#2309: *123 recv() failed (104: Connection reset by peer) while reading response header from upstream, client: 192.168.10.1, server: vw.local, request: \"GET /play HTTP/1.1\", upstream: \"fastcgi://unix:/var/run/php/php7.0-fpm.sock:\", host: \"vw.local\"\n. ",
    "motamonteiro": "I\u00b4m having the same problem, \nHow to use the paginate method on Lumen?\nFatal error: Call to undefined function Prettus\\Repository\\Eloquent\\request() in D:\\web\\www\\test\\api\\vendor\\prettus\\l5-repository\\src\\Prettus\\Repository\\Eloquent\\BaseRepository.php on line 325\n. ",
    "edmundluong": "Hey @ionut-tanasa,\nI see your fix for this in  https://github.com/andersao/l5-repository/commit/e67ad08cd79976c10463ec24d21d6b3587e5aa4b but it looks like you missed another dependency on the request() method here https://github.com/andersao/l5-repository/commit/e67ad08cd79976c10463ec24d21d6b3587e5aa4b#diff-b8ab2527e21391a4920b7bbedf00e099R329 (line 329).\nThis is still failing for me on v2.6.2, I'll see if I can find a workaround\n. ",
    "msamec": "Do you have to relation setup for the model you are trying to search?\n. ",
    "fndmiranda": "Actually the problem is that when I do a search ambiguous error in the query because of the join criteria\n. ",
    "munza": "@mvpasarel thanks :)\n. ",
    "richardvanbergen": "Perhaps bundle a pagination criteria with the library as suggested in #129? I'm going to give it a try.\n. ",
    "rbruhn": "I've been running into this problem a lot. Not only with paginate but other methods as well. I simply started created Criteria for what I needed instead of fighting with it. I agree with @pjmartorell there should be default Criteria included with the package to move these methods out of the BaseRepository. For example:\nhttps://gist.github.com/rbruhn/944d507c07590c8cbe8dfcbc1ca25cfd\nI needed the above to select a record and returning the first one found:\n$this->workflowManager->pushCriteria(new WhereFields(['expedition_id' => $expeditionId]));\n$manager = $this->workflowManager->first();\nOr...\nhttps://gist.github.com/rbruhn/82811862cd3418b90282ee9b9a8381df#file-orderby\nI needed for retrieving an earliest date from a table. It uses the above WhereFields too.\n$this->transcription->pushCriteria(new WhereFields(['project_id' => 6, 'expedition_id' => 4]));\n$this->transcription->pushCriteria(new OrderBy('finished_at'));\n$record = $this->transcription->first();\nI find making generic criteria removes the hassle of figuring out scope queries.\n. On second thought... as I go through my code looking at how this package will change things, I think there will be too much coupling. Especially when using criteria. For example, even the queries I used above would necessarily couple my code to this package. Imagine trying to swap out one repo for this one. I'd have to go back and change all these queries. I'm going to stick with my original repo where I had named methods so any new repo simply needs to duplicate those methods and alter it's own queries in the model itself.\n. ",
    "Gurzhii": "183\n. ",
    "hongymagic": "I am finding:\n\"REQUEST_TIME_FLOAT\";d:1462583902.707;s:12:\"REQUEST_TIME\";i:1462583902;\nThese two values in $this->criteria to change with every request and therefore cache never hits when it should.\n. ",
    "hisway": "In \n\nvendor\\prettus\\l5-repository\\src\\Prettus\\Repository\\Criteria\\RequestCriteria.php\napply()\n\n$modelForceAndWhere = false => $modelForceAndWhere = true\n. ",
    "shez1983": "this is not correct  - imean you are telling us to modify core files which will be overwritten by any new updates - also a problem arises when you  modify and upload your project a vendor files are not in git repo, you may find things going wrong & forget all these modifications - which you need to keep up with. but this doesnt allow for dynamic wheres.. . ok i solved it by creating my own CustomArraySerializer\n```\n /\n     * Serialize a collection.\n     \n     * @param string $resourceKey\n     * @param array  $data\n     \n     * @return array\n     */\n    public function collection($resourceKey, array $data)\n    {\n        if ( !$resourceKey )\n        {\n            return ['data' => $data];\n        }\n        return $data;\n    }\n/**\n * Serialize an item.\n *\n * @param string $resourceKey\n * @param array  $data\n *\n * @return array\n */\npublic function item($resourceKey, array $data)\n{\n    if ( !$resourceKey )\n    {\n        return ['data' => $data];\n    }\n    return $data;\n}\n\n```\nand then in transformers I do: \n```\n  /\n\n     * @return League\\Fractal\\ItemResource\n     /\n    public function includeViews(Entity $item)\n    {\n        // dd($item->views);\n    if ( $item->views )\n        return $this->collection($item->views, new ViewTransformer, true);\n}\n\n```\nthat true flag at the end skips the data => [] part\n. Similarly - with my job; i havent had to collaborate on a public repository - but since I use this package actively, I could/would be willing to learn and help you out.. . @DevinGray instead of this\nreturn $this->item($model->profile, new ProfileTransformer());\ndo\nreturn $this->collection($model->profile, new ProfileTransformer());. ",
    "oalencar": "I want to see a example too. ",
    "joaorobertopb": "nice! +1\n. @ionut-tanasa validation should be performed with the data to be stored in the DB ($values) and not with the data that form the condition where ( $attributes ) \n?\n. ",
    "honarkhah": "217\n. fix and new pull request send.\nthanks for review.\n. ",
    "joaosalless": "Check the project name and project repository in composer.json file.\nIt was modified in the pull request. Is correct?\nThank you!\n. @eullercristian , this PR will correct the changes made by PR https://github.com/andersao/l5-repository/commit/852241c66c55777cf1925fca78a65f22ae4b6736 committed on 28 May.\n. This solve the problem?\nphp\npublic function maxID()\n{\n    return $this->model->max('IDCompany');\n}\n. I have the same problem.\n```\nFatalThrowableError in RepositoryEventBase.php line 32:\nType error: Argument 2 passed to Prettus\\Repository\\Events\\RepositoryEventBase::__construct() must be an instance of Illuminate\\Database\\Eloquent\\Model, instance of Illuminate\\Database\\Eloquent\\Builder given, called in /home/joao/Projetos/myproject/vendor/prettus/l5-repository/src/Prettus/Repository/Eloquent/BaseRepository.php on line 587\n```\n. I think this solves the problem:\nIn the file /vendor/prettus/l5-repository/src/Prettus/Repository/Eloquent/BaseRepository.php line 587\nchange\nphp\n...\nevent(new RepositoryEntityDeleted($this, $this->model));\n...\nto\nphp\n...\nevent(new RepositoryEntityDeleted($this, $this->model->getModel()));\n...\nFor me, it worked\n. Have you tried to obtain the total number of records using pagination?\nphp\n$clients = $this->repository->paginate();\n$clientsTotal = $clients->total();\nSee:\n``` php\n$clients = $this->repository->paginate();\ndd($clients);\n```\nOutputs:\nLengthAwarePaginator {#784 \u25bc\n    #total: 6621\n    #lastPage: 442\n    #items: Collection {#819 \u25bc\n        #items: array:15 [\u25b6]\n    }\n    #perPage: 15\n    #currentPage: 1\n    #path: \"http://localhost:8000/admin/clients\"\n    #query: []\n    #fragment: null\n    #pageName: \"page\"\n}\nYou can get the total number of records using pagination:\n``` php\n$clients = $this->repository->paginate();\ndd($clients->total());\n```\nOutputs:\n6621\n. If you are sending the user_id field on the form, try this:\nphp\nreturn [\n    'name'  => 'required',\n    'email'  => 'unique:users,email,'.\\Request::get('user_id').',user_id',\n];\n. Hello @eullercristian. Use the take() function:\nphp\n$this->findWhere()->take(10);\n. ``` php\n$currentPage = 5;\n$totalPerPage = 10;\n// force current page to 5\nPaginator::currentPageResolver(function() use ($currentPage) {\n    return $currentPage;\n});\n// list all users, with 10 users per page, on page 5\n$users = User::all()->paginate($totalPerPage);\n```\n. Great contribution. Thank you.. The PR #330 makes the package compatible with versions 5.1, 5.2, 5.3 and 5.4.\nIlluminate\\Console\\AppNamespaceDetectorTrait is not required.\n```php\n/*\n * Get application namespace\n * \n * @return string\n /\npublic function getAppNamespace()\n{\n    return \\Illuminate\\Container\\Container::getInstance()->getNamespace();\n}\n/\n * Get class name.\n \n/\npublic function getRootNamespace()\n{\n    return config('repository.generator.rootNamespace', $this->getAppNamespace());\n}\n```. @thekaduu, excellent contribution.\nThank you.. @andersao \nI am willing to collaborate, I have not collaborated with open repositories, but this is one that I am willing to help, and learn from it.. The $values parameter exists only in Laravel 5.3 or higher.This PR would make the repository method firstOrCreate incompatible with the Laravel 5.2 or less firstOrCreate method.\n. Hello @shellus,\nSee PR #360.\nThanks for the comment.. ```php\n<?php\nnamespace App\\Transformers;\nuse League\\Fractal\\TransformerAbstract;\nuse App\\Models\\User;\nclass UserTransformer extends TransformerAbstract\n{\n    /*\n     * Include user profile data by default\n     /\n    protected $defaultIncludes =   ['profile'];\n/**\n * optional user profile data\n */\n//protected $availableIncludes = ['profile'];\n\n/**\n * Transform the App\\Models\\User entity\n * @param App\\Models\\User $model\n *\n * @return array\n */\npublic function transform(User $model)\n{\n    return [\n        'id'      => (int)$model->id,\n        'name'    => $model->name,\n        'email'   => $model->email,\n        'role'    => $model->role,\n        'created_at' => $model->created_at,\n        'updated_at' => $model->updated_at\n    ];\n}\n\npublic function includeProfile(User $model)\n{\n    if ($model->profile) {\n        return $this->item($model->profile, new ProfileTransformer());\n    } else {\n        return null;\n    }\n}\n\n}\n```. I have some more detailed examples here:\nhttps://github.com/joaosalless/laravel-codedelivery/tree/master/app/Transformers. Hi @dashracer,\nTo trigger the available transformers, you only need to include the include parameter in the url, separating the values with a comma.\nExample:\nshell\nhttp://localhost:8000/api/orders?include=items,cupom,client,deliveryman\nIn the controller, when executing the query you need to specify all available relationships in the with method:\n```php\n    public function index()\n    {\n        return $this->orderRepository\n            ->with(['items', 'cupom', 'client', 'deliveryman'])\n            ->skipPresenter(false)\n            ->paginate();\n    }\npublic function show($id)\n{\n    return $this->orderRepository\n        ->with(['items', 'cupom', 'client', 'deliveryman'])\n        ->skipPresenter(false)\n        ->find($id);\n}\n\n``. Make sure you have included thePrettus\\Repository\\Providers\\RepositoryServiceProvider::class,inconfig/app.php` settings.\nIf this is not the cause of the problem, review the installation documentation or inform the version of the l5-repository package and the version of the Laravel framework.. ",
    "Belphemur": "I'm confused. Does this PR mean @andersao gave up his package to @honarkhah  ?\n@ionut-tanasa was that the wanted effect ?\n. ",
    "abenevaut": "I think that everything are there : https://laravel.com/docs/5.2/events\n. My solution, with some LengthAwarePaginator tips based on this article : http://blog.mauriziobonani.com/laravel-keep-url-query-parameters-in-manual-pagination/\n```\n{{ with(\n        new \\Illuminate\\Pagination\\BootstrapThreePresenter(\n            new \\Illuminate\\Pagination\\LengthAwarePaginator(\n                $items['meta']['pagination']['count'],\n                $items['meta']['pagination']['total'],\n                $items['meta']['pagination']['current_page'],\n                $items['meta']['pagination']['per_page']\n                [\n                    'path' => Request::url(),\n                    'query' => Request::query(),\n                ]\n            )\n        )\n\n)->render() }}\n```\n. For laravel 5.3\n``` php\nfunction pagination($nb_rows, $total_row, $current_page, $per_page = 15)\n{\n    $paginator = new \\Illuminate\\Pagination\\LengthAwarePaginator(\n        $nb_rows,\n        $total_row,\n        $per_page,\n        $current_page,\n        [\n            'path' => Request::url(),\n            'query' => Request::query(),\n        ]\n    );\nreturn $paginator->render('partials.common.pagination');\n\n}\n```\n. GoGoGo! We need the laravel 5.4 update!. ",
    "malyusha": "@mvpasarel What if I decide to create something like CompanyTypeRepositoryRedis later? Wouldn't it be better to create new methods in CompanyTypeRepository interface to force all repositories types implement them? So, in case of deleteMultipleById it will be like:\n```\ninterface CompanyTypeRepository()\n{\n    public function deleteMultipleById();\n}\nclass CompanyTypeRepositoryEloquent extends BaseRepository implements CompanyTypeRepository\n{\n    public function deleteMultipleById($ids)\n    {\n        return $this->model->destroy($ids);\n    }\n}\nclass CompanyTypeRepositoryRedis implements CompanyTypeRepository\n{\n    public function deleteMultipleById($ids)\n    {\n        //Do stuff to delete all via redis\n    }\n}\n```\n. ",
    "tibi00": "@mvpasarel Thank you, I dit it earlier, but the original RequestCriteria changed over the time, got new features, and I had to update the derived class every time. That is why I thought it would be a good feature to configure the original one.\n. ",
    "felipeminello": "@mvpasarel, thank you! \n. Opa, consegui uma solu\u00e7\u00e3o.. se algu\u00e9m conseguir uma melhora (ou menos custosa para processamento), por favor coloquem aqui :)\n```\nclass UserService\n{\n    /\n     * @var UserRepository\n     */\n    private $repository;\n    /\n     * @var UserTransformer\n     */\n    private $transformer;\n/**\n * UserService constructor.\n *\n * @param UserRepository  $repository\n * @param UserTransformer $transformer\n */\npublic function __construct(UserRepository $repository, UserTransformer $transformer)\n{\n    $this->repository = $repository;\n    $this->transformer = $transformer;\n}\n\n/**\n * Retrive the authenticated user\n *\n * @return mixed\n */\npublic function authenticatedUser()\n{\n    return $this->repository->skipPresenter()->find(Authorizer::getResourceOwnerId());\n}\n\n/**\n * Get list of users\n *\n * @param $limit\n *\n * @return mixed\n */\npublic function listOthers($limit)\n{\n    $userLogged = $this->authenticatedUser();\n\n    $users = $this->repository->makeModel()->withTrashed()\n        ->where('email', '!=', 'email@email.com')\n        ->where('id', '!=', $userLogged->id)->paginate($limit)->toArray();\n\n    $users['data'] = array_map(function($user) {\n        $model = new User();\n\n        $model->id = $user['id'];\n        $model->name = $user['name'];\n        $model->last_name = $user['last_name'];\n\n        $user = $this->transformer->transform($model);\n\n        return $user;\n    }, $users['data']);\n\n    return $users;\n}\n\n}\n```\n. Opa que bom !\nDei uma melhorada no c\u00f3digo, adicionei uma busca...\ncomo TODO seria interessante fazer a implementa\u00e7\u00e3o da busca utilizando o Criteria... mas assim j\u00e1 quebra um galho e n\u00e3o fere muito o design pattern...\n```\n    public function listOthers($limit, $search)\n    {\n        $userLogged = $this->authenticatedUser();\n    $users = $this->repository->makeModel()->withTrashed()\n        ->where('email', '!=', 'email@email.com')\n        ->where('id', '!=', $userLogged->id);\n\n    if (!empty($search))\n    {\n        $users = $users->where(function($query) use ($search) {\n            $query->orWhere('name', 'like', '%'.$search.'%')->orWhere('last_name', 'like', '%'.$search.'%')->orWhere('email', 'like', '%'.$search.'%');\n        });\n    }\n\n    $users = $users->paginate($limit)->toArray();\n\n    $users['data'] = array_map(function($user) {\n        $user = $this->transformer->transform(new User($user));\n\n        return $user;\n    }, $users['data']);\n\n    return $users;\n}\n\n```\n. ",
    "lsxiao": "\nthe ModelRepositoryEloquent was bound in app container.\nif you want to use UserRepositoryEloquent in AdvertRepositoryEloquent.\nphp\n$userRepository = app(UserRepositoryEloquent::class);\n. ",
    "pulselife": "Maybe is there another way?. I think this package is almost dead.. @nikolaynesov I don't know. There are a lot of issues is opened. And this package updates rarely.. ",
    "computerfr33k": "Repository:\n``` php\n<?php\nnamespace App\\Repositories;\nuse Prettus\\Repository\\Eloquent\\BaseRepository;\nuse Prettus\\Repository\\Criteria\\RequestCriteria;\nuse App\\Entities\\User;\nuse App\\Validators\\UserValidator;\n/\n * Class UserRepositoryEloquent.\n */\nclass UserRepositoryEloquent extends BaseRepository implements UserRepository\n{\n    /\n     * Specify Model class name.\n     \n     * @return string\n     /\n    public function model()\n    {\n        return User::class;\n    }\n/**\n * Specify Validator class name.\n *\n * @return mixed\n */\npublic function validator()\n{\n    return UserValidator::class;\n}\n\n/**\n * Boot up the repository, pushing criteria.\n */\npublic function boot()\n{\n    $this->pushCriteria(app(RequestCriteria::class));\n}\n\n}\n```\nUserValidator:\n``` php\n<?php\nnamespace App\\Validators;\nuse Prettus\\Validator\\Contracts\\ValidatorInterface;\nuse Prettus\\Validator\\LaravelValidator;\nclass UserValidator extends LaravelValidator\n{\n    protected $rules = [\n        ValidatorInterface::RULE_CREATE => [\n            'first_name' => 'required|max:255',\n            'last_name' => 'required|max:255',\n            'email' => 'required|email|unique:users|max:255',\n            'phone_number' => 'required|numeric|unique:users|digits_between:10,14',\n            'password' => 'required|min:6',\n            'user_name' => 'required|unique:users|max:255',\n        ],\n        ValidatorInterface::RULE_UPDATE => [\n            'first_name' => 'max:255',\n            'last_name' => 'max:255',\n            'email' => 'email|unique:users|max:255',\n            'phone_number' => 'numeric|unique:users|digits_between:10,14',\n            'user_name' => 'unique:users|max:255',\n        ],\n   ];\n}\n```\n``` php\ntry {\n            $temp = factory(User::class)->make(['password' => 'myPassword'])->makeVisible(['password'])->toArray();\n        $this->validator->with($temp)->passesOrFail(ValidatorInterface::RULE_CREATE);\n\n        $user = $this->userRepository->create($temp);\n\n        $response = [\n            'message' => 'User created.',\n            'data'    => $user->toArray(),\n        ];\n\n        if ($this->request->wantsJson()) {\n            return response()->json($response);\n        }\n\n    } catch (ValidatorException $e) {\n        if ($this->request->wantsJson()) {\n            return response()->json([\n                'error'   => true,\n                'message' => $e->getMessageBag(),\n            ]);\n        }\n    }\n\n```\n. Edit: The initial post was just an example of what I was using and referring to. Not necessarily exact code I am using that is failing.\nI am passing in an array from the faker factory and made the password visible, but the problem is that the repository create is making the model and then passing the array and recasting back to an array causing the password field to be re hidden and failing the validation.\n. here's the problematic line which doesn't allow an attribute to be fillable and hidden using the create method.\nhttps://github.com/andersao/l5-repository/blob/master/src/Prettus/Repository/Eloquent/BaseRepository.php#L464\n. ",
    "damian-nz": "I have just submitted this PR to fix this issue\n. ",
    "zjien": "same problem but @damian-nz 's code can fix it in Laravel 5.2+ .\nLaravel 5.1 will throw 'Call to undefined method Illuminate\\Database\\Query\\Builder::makeVisible()' exception.\nhow to fix it in Laravel 5.1?\n. can I solve it by this way?\nremove: $attributes = $this->model->newInstance()->forceFill($attributes)->toArray();\n. yes, I found it also ,hope to merge the PR\n. ",
    "ecuation": "Does it already fixed?? I have the same issue with it. How do they solved?\nThanks in advance.. ",
    "andre-bahia": "I also have the same problem!. Same issue, in lumen 5.5\n. ",
    "FilipNikolovski": "Sure thing :+1: \n. There is already a fix in the PRs https://github.com/andersao/l5-repository/pull/249 just needs to get merged.\n. ",
    "adhatama": "@eullercristian it won't affect any production code because this PR only modify .stub file used in generator.\n. ",
    "CasperLaiTW": "You should use scopeQuery\nphp\n$items = $this->itemRepository->scopeQuery(function ($query) {\n    // your conditions\n    return $query->whereIn('id', [1, 2, 3, 4]);\n})->paginate();\ndd($items->toArray());\n. @apoca \nphp\n$aux = [1, 2, 3, 4];\n$items = $this->itemRepository->scopeQuery(function ($query) use ($aux) {\n    // your conditions\n    return $query->whereIn('id', $aux);\n})->paginate();\ndd($items->toArray());. ",
    "apoca": "How I can pass an array here:\nreturn $query->whereIn('id', [1, 2, 3, 4]);\nlike this:\nreturn $query->whereIn('id', $aux);. I already solved... My bad ...\nEnviado do meu iPhone\nNo dia 06/01/2017, \u00e0s 17:13, Casper Lai notifications@github.com escreveu:\n\n@apoca\n$aux = [1, 2, 3, 4];\n$items = $this->itemRepository->scopeQuery(function ($query) use ($aux) {\n    // your conditions\n    return $query->whereIn('id', $aux);\n})->paginate();\ndd($items->toArray());\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. \n",
    "liubusian": "OK, I find it.\nAt Illuminate\\Pagination\\AbstractPaginator line:326\n```\npublic static function resolveCurrentPage($pageName = 'page', $default = 1)\n    {\n        if (isset(static::$currentPageResolver)) {\n            return call_user_func(static::$currentPageResolver, $pageName);\n        }\n    return $default;\n}\n\n```\nsolved\nThanks.\n. ",
    "gusBrid-IT": "I need this too! Enable or disable specific repo.\n. ",
    "RienMoeyaert": "I'm guessing this should do it:\n$posts = $this->testRepository->findByField('kkk','!=',null);.\nIf not, you could extend the testRepository and return the Eloquent method Test::whereNotNull('kkk');\n. Untested, but you could try this:\n$repository->scopeQuery(function ($query) use($id, $cate_id) {\n      return $query->where('product_id', $id)->where('category_id', $cate_id);\n});\n. Not tested, but you could still add the Route::resource('cats', CatsController::class); in one of the files within the routes folder I'd guess, no?\n. ",
    "danmurf": "I'll dig through and update :)\n. Added these in pull request 295\n. ",
    "quynhbkit": "You can try like this:\n$this->repository->skipPresenter(true)->paginate(...)\n. I tried to overwrite makeModel() like this and it works with Laravel 5.3.\npublic function makeModel()\n{\n    parent::makeModel();\n    $this->model=$this->model->newQuery();\n}\n. ",
    "godcong": "it's my solution in finally\npublic static function arrayPaginate($result, $paginate = 15)\n{\n    $pageName = 'page';\n    $page = Paginator::resolveCurrentPage($pageName);\n    $total = count($result);\n    return new LengthAwarePaginator($result, $total, $paginate, $page, [\n        'path' => Paginator::resolveCurrentPath(),\n        'pageName' => $pageName,\n    ]);\n}\n. ",
    "jgardezi": "@godcong can you please explain more about your solution i.e. where we have to add the following function \npublic static function arrayPaginate($result, $paginate = 15)\n{\n    $pageName = 'page';\n    $page = Paginator::resolveCurrentPage($pageName);\n    $total = count($result);\n    return new LengthAwarePaginator($result, $total, $paginate, $page, [\n        'path' => Paginator::resolveCurrentPath(),\n        'pageName' => $pageName,\n    ]);\n}. ",
    "devingray": "@Overx Did you ever find out how to do this?. @jffsn How did you fix that?. What is the use case? Can you give an example? \nWhat is wrong with \n$id = [1,2,3];\n$post = $this->repository->update( Input::all(), $id);. You can new up a class\n$repository = app('App\\Interfaces\\ReleaseRepository');\n$repository->setPresenter(ReleasePresenter::class);\n$releases = $repository->scopeQuery(function($query){\n    return $query->withTrashed();\n})->find($release_ids);. There are 27 open pull requests currently. opening more will not equal a maintained repository. Laravel 5.4, l5 version 2.6.24\n. @eullercdr Still happening, upgraded to latest version. Perhaps at 5.4 we should go a few versions behind?\n. Sorry didn't see these comments was away. Working perfectly! Legends . ",
    "marcus13371337": "I extended the BaseRepository with the following in order to get this to work:\n`    public function chunk($limit, callable $callback)\n    {\n        $this->applyCriteria();\n        $this->applyScope();\n    if($this->model instanceof Illuminate\\Database\\Eloquent\\Builder) {\n        $modelQuery = $this->model->getQuery();\n    } else {\n        $modelQuery = $this->model;\n    }\n\n    $underlyingQueryBuilder = $modelQuery->getQuery();\n    if (empty($underlyingQueryBuilder->orders) && empty($underlyingQueryBuilder->unionOrders)) {\n        $this->model->orderBy($modelQuery->getModel()->getQualifiedKeyName(), 'asc');\n    }\n\n    $presenterFunction = \\Closure::bind(function($results,$page) use (&$callback) {\n        return $callback($this->parserResult($results), $page);\n    }, $this);\n\n    return $this->model->chunk($limit, $presenterFunction);\n}`.\n",
    "Glorian": "@tony-quoctuan, scopeQuery closure can be used only once per instance. If you need to apply multiple queries to repository object in different places in your app, it's better to use criterias. \n. @eullercristian, there is two options:\na)  Limit in sql query: \nphp\n$objectRepository\n    ->scopeQuery(function($query) {\n        return $query->take(10);\n    })\n    ->all();\nb) Limit result collection: @joaosalless already wrote\nIn most cases query limitation is more preferable. \n. ",
    "tony-quoctuan": "But currently, I want to create a common function using scopeQuery, then expand it with other scopeQuery in other function and I can't  :). I have to use standard of laravel to query. \n. ",
    "ricardovigatti": "I'm with @tony-quoctuan, needing this in an abstract repository class to perform some default filters...\n. @tucq88 Sorry for my late response but no, i didn't tried this.\nActually, we decided to produce our own repository pattern implementation, since we found that this package has some bugs and it's preventing us to continue.\nWe're also figuring out that we should not use any repository pattern within Eloquent. Instead, we are growing the idea of use the original Query Builder or Doctrine 2. I think it will have a much better design and easy of understanding.\n. @tucq88 I think Query Builder or Doctrine 2 will provide an repository implementation with more control over the code. Eloquent has to many magic and it's difficult to provide an interface that can handle it together within others AR's and ORM's. That's why all packages i already saw supports Eloquent only.\nOn the otherside, Eloquent has a lot of great features. An implementation without it will need a lot of work to handle some simple stuffs already handled by it.\nOf course i'm only throwing thoughts in here, this needs to be studied. Recently, a new repository pattern package for laravel was created by Rinvex: https://github.com/rinvex/repository. They are implementing using Eloquent too. I'll check it out any soon.\n. Give a try to Rinvex's package first, seems to be evolving very well and fast.\n. ",
    "wugang8068": "@joaosalless , Thanks a lot !  a great help for me. \n. ",
    "breakingrobot": "ping @ionut-tanasa \n. ",
    "Numline1": "Hello @ionut-tanasa - was this ever merged/added? The current version still uses $this->model. Ping @ionut-tanasa @andersao @eullercristian - This is still an issue :(. @eullercristian sadly, I believe there were no changes in about 6 months, perhaps a fork of this nice package would be in order :]. I believe you're also a collaborator (ref #347), how's so you don't have a write access?. Wonderful, thank you. ",
    "callmez": "same problem need merge!. ",
    "mhetreramesh": "Thanks @joaosalless and @golinmarq, I will try both of these solutions. I did handled uniqueness check in the controller previously.\n. Does anyone has any update on this?\n. ",
    "anhtuannguyentran": "It's not worked if use CacheableRepository.\n. ",
    "caophong": "this is answer:\nhttps://github.com/andersao/l5-repository/issues/219\n. ",
    "dgtal": "Hello @computerfr33k \nTry writing these lines in the presenter class:\nphp\nclass UserPresenter extends FractalPresenter\n{\n    protected $resourceKeyItem = 'users';\n    protected $resourceKeyCollection = 'users';\n. ",
    "gnumoksha": "What is not working?\n. I am using in the last couple of weeks and it is working.\n. ",
    "rigobcastro": "It's working! \n. ",
    "guicunha": "It's working or not working?\n. ",
    "marciodiasdeveloper": "+1\n. +1. ",
    "stephane-monnot": "It works with @quynhbkit fix, but I get a new error if I try to create a new instance with \n$this->userRepository->create($request->all()) \n\nBadMethodCallException: Call to undefined method Illuminate\\Database\\Query\\Builder::newInstance() in /opt/project/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php:2508. @lvqingan Thank you for your solution. I will try it when I have time. . \n",
    "tsunamilx": "Same problem, criteria is not applied. \nI tried following:\n1. With MyModel::where(...), where conditions applied.\n2. With app(MyModel::class)->where(...), where conditions not applied, which is now the way how the criteria is applied.\nThe difference here is that, 1 is Query Builder, and 2 is Eloquent Builder which is a wrapper of Query Builder.\nFrom what I see here, Eloquent Builder has to start with newQuery(), so the query gets built.\n. ",
    "lvqingan": "@stephane-monnot may be you can put $this->model->newQuery(); into applyCriteria instead of makeModel\n```php\n/**\n * Apply criteria in current Query\n *\n * @return $this\n */\nprotected function applyCriteria()\n{\n    if ($this->skipCriteria === true) {\n        return $this;\n    }\n    $criteria = $this->getCriteria();\n\n    if ($this->model instanceof Model) {\n        $this->model = $this->model->newQuery();\n    }\n\n    if ($criteria) {\n        foreach ($criteria as $c) {\n            if ($c instanceof CriteriaInterface) {\n                $this->model = $c->apply($this->model, $this);\n            }\n        }\n    }\n    return $this;\n}\n\n```. ",
    "jwwb681232": "in laravel 5.5\nAdminUserController\uff1a\n```php\n$this->repository->setPresenter(AdminUserPresenter::class);\n$this->repository->pushCriteria(AdminUserCriteria::class);\nreturn response()->json($this->repository->search($request));\n```\nAdminUserRepository \uff1a\n```php\npublic function search(Request $request)\n{\n    $this->applyCriteria();    //important\n    $condition = $this->model;\n$data['total'] = $condition->count();\n\n$data['data'] = $this->parserResult(\n    $condition->offset($request->get('offset'))->limit($request->get('limit'))->get()\n);\n\n\nreturn $data;\n\n}\n```\nAdminUserCriteria \uff1a\nphp\npublic function apply($model, RepositoryInterface $repository)\n{\n    $keyword = request('search');\n    return $model->when($keyword,function ($query)use($keyword){\n        return $query->where('name','like',\"%{$keyword}%\");\n    });\n}\n. ",
    "Maras0830": "https://github.com/andersao/l5-repository/issues/265\n. Controller -> Service -> Repository -> RepositoryEloquent. use present trait in your UserDetail model\nuse PresentableTrait;\nand set presenter in controller\n```\n$userDetail = $user->detail;  \n$userDetail->setPresenter(new UserDetailPresenter());  \n$userDetail->presenter();\n```\n. $ php artisan make:resource Home. @eullercdr https://github.com/andersao/l5-repository/pull/466. @qiutuleng  sorry I submit wrong branch in pr, i resent the new.\n@eullercdr https://github.com/andersao/l5-repository/pull/470. @eullercdr yes .. I forgot it ..\nI push new commit,\nwhen user create restful controller in laravel 5.5:\nphp artisan make:rest-controller <name>\nand  in others versions use make:entity & make:recourse are not affected\nphp artisan make:resource <name>\nphp artisan make:entity <name>. agree, and I really want this pr can be merged...\nhttps://github.com/andersao/l5-repository/pull/442\nor 5.5 make:entity issue can't use ..\nmaybe i can help chinese issue. because this commit.\nhttps://github.com/andersao/l5-repository/commit/b5ec10d5e762c05d57e6bcf5216fe95a7e747f26#diff-7f408a7932aa030a9844fa1817ebaf98\nuse \nphp artisan make:entity SomeEntity\nwill be return \nWould you like to create a Validator? [y|N] (yes/no) [no]:\nif answer yes, that will create Validator, but last code in EntityCommand.php\n$this->call('make:repository', [\n            'name'        => $this->argument('name'),\n            '--fillable'  => $this->option('fillable'),\n            '--rules'     => $this->option('rules'),\n            '--validator' => $validator,\n            '--force'     => $this->option('force')\n        ]);\nalso created ... validator and throw FileAlreadyExistsException in RepositoryCommand.php, so if want to solve, suggest remove create validator when execute repository command.\n. @deneuv34 \nbecause lumen did not have app_path() this helper.\nhttps://github.com/andersao/l5-repository/pull/473. @deneuv34 Thanks, that's good idea, although app()->path can get same result\nand I found these code, we can call app()->basePath() to get more path on the project.\nin vendor/laravel/framework/src/Illuminate/foundation/Application.php\n$this->instance('path', $this->path());\n        $this->instance('path.base', $this->basePath());\n        $this->instance('path.lang', $this->langPath());\n        $this->instance('path.config', $this->configPath());\n        $this->instance('path.public', $this->publicPath());\n        $this->instance('path.storage', $this->storagePath());\n        $this->instance('path.database', $this->databasePath());\n        $this->instance('path.resources', $this->resourcePath());\n        $this->instance('path.bootstrap', $this->bootstrapPath());. @eullercdr all version of laravel. @SimonLeeee  https://laravel.com/docs/5.6/eloquent#mass-assignment\n. @SimonLeeee \nI sent a pr for this issue. ",
    "gebaiwan": "$category = $this->category_repository->scopeQuery(function($query) {\n            return $query->where('info',$this->category_info);\n        })->firstOrFail();\nwhy\nCall to undefined method App\\Repositories\\CategoryRepositoryEloquent::firstOrFail(). 'status' must be in $fillable array.\n. ",
    "phelippe": "+1\n. ",
    "ferrl": "+1\n. ",
    "ptsilva": "ping @eullercristian . can you merge this ?. @eullercdr ping. thanks.. Use all() instead of paginate (). Can you use the LengthAwarePaginator.\nBoot the paginator using [ all() / limit(x)->get() ] result, and then make your control of per page/pages.\nhttps://github.com/laravel/framework/blob/f2e485960b7fe8b0ddbf2fc2e76aff5339948621/src/Illuminate/Pagination/LengthAwarePaginator.php#L41. I don't think this a problem. But, @andersao or @eullercdr maybe accept the PR. . The Criteria request apply any sql fragment with query builder. This probably is safe. \nThe issue that exists here, is in include, cause error if relationship not exists. But is not a security issue.. #284 \n283\nI already opened this issue. This must be merged. \n@andersao . See this.. ",
    "pcastrotigre": "@golinmarq That method is mine and yes, I am using the package webpatser/laravel-uuid. To patch this, I am validating my input in the find method I override in my repository. Something like these\npublic function find($uuid, $columns = ['*'])\n    {\n        if(!is_int($uuid)){\n            $floor = $this->getByUuid($uuid);\n            return parent::find($floor->id, $columns);\n        }else{\n            return parent::find($uuid, $columns);\n        }\n    }\nThis works but I do not like the solution. \n. ",
    "MatheusNaldi": "I need this. ",
    "kalemdzievski": "Also need this. Can't find out how to do a multiple update.. Same problem.. Same problem. ",
    "SDLyu": "I can't find any related updateWhere function in source code \ud83d\ude15\nCan anyone help to point out what function I can use?. ",
    "insidert": "Removing from Boot method solved. \n. ",
    "xiatian": "same problem. ",
    "tiemiarashiro": "I solved that using another parameter called 'and'. When it is recieved I set the $modelForceAndWhere value to true. ",
    "profbaco": "Hello, I have the same problem and I could not solve it. Would you help me? I'm using the latest version.. ",
    "nguyenvq": "I try: \nsearchFields=category_type:=;parent_id:=&search=parent_id:6;category_type:A&searchJoin=and\nAdd param: searchJoin=and it's worked for me. \nA long time for this bug but i think it'll help for someone. . ",
    "zhaohehe": "me too, do you have any solution now?. ",
    "ryuheiyokokawa": "I'd like to bump this one too.\nThe issue is in\n\"/vendor/prettus/l5-repository/src/Prettus/Repository/Criteria/RequestCriteria.php\"\nIf you look at the if/else statement on line ~85 and the where clauses that it defines, you can see what's going on.  Not sure what the best method here is, but maybe offer something like a \"searchRelationship\" argument with the API?  It could be a simple option that lets you select between and/or?\nActually, there is a $modelForceAndWhere that's already defined statically as false.  You could probably override that if you fork it.. Actually, this was kind of easy.  All you have to do is set $modelForceAndWhere to this:\n$modelForceAndWhere = $this->request->get('forceAnd',false);\nObviously, you could tie it to config, but that's up to you.\nAll you gotta do is pass forceAnd=1 or 0 as part of your URL query. ",
    "weijinnx": "I found solution. Need to create Criteria and push it to repository.\n. ",
    "gnosis75": "For future googlers, this issue can be avoided by just returning the object inside the function `scopeQuery', like this:\nphp\n$model = $this->repository->scopeQuery(function ($query) {\n      return $query->withoutGlobalScopes();\n})->find($id);. ",
    "petyots": "Thank you ! I saw it already, but I forgot to close the issue. \n. P.S How can I get the key of item in the cache ?\n. ",
    "samirnijenhuis": "A little bit late to the party, I assume you already solved it on your own. You can do two things I think:\n\nIf you use the ?page= parameter the paginator will automatically pick it up and set the offset for you. \nLet your repositories extend your own 'baserepository' which extends the package's BaseRepository ( similar to the Controller.php in laravel ). Example: \n```\nnamespace App\\Repositories;\n\nuse Prettus\\Repository\\Eloquent\\BaseRepository;\nabstract class Repository extends BaseRepository {\n/**\n * Retrieve all data of repository, paginated\n *\n * @param null $limit\n * @param int $page\n * @param array $columns\n * @param string $method\n * @return mixed\n */\npublic function paginate($limit = null, $page = null, $columns = ['*'], $method = \"paginate\")\n{\n    $this->applyCriteria();\n    $this->applyScope();\n    $limit = is_null($limit) ? config('repository.pagination.limit', 15) : $limit;\n    $results = $this->model->{$method}($limit, $columns, 'page', $page);\n    $results->appends(app('request')->query());\n    $this->resetModel();\n\n    return $this->parserResult($results);\n}\n\n}\n```\nand then you can create your custom repositories as such:\n```\nnamespace App\\Repositories;\nclass YourRepository extends Repository\n{\n/**\n * Specify Model class name\n *\n * @return string\n */\nfunction model()\n{\n    return \"App\\\\Models\\\\ExampleModel\";\n}\n\n}\n```\nand call the paginate function:\n```\n$app->get('/', function(\\App\\Repositories\\YourRepository $yourRepository, \\Illuminate\\Http\\Request $request){\n        return $yourRepository->paginate(\n            $request->get('l', 10), // Amount to show\n            $request->get('p', 1), // Page\n    );\n});\n\n```\nI hope this helps.. ",
    "jammersonf": "I think you can do this using a criteria\n$this->employeeRepository->pushCriteria(GetByEmployee::class);\n$employees = $this->employeeRepository->paginate(10, ['id','employee_name','employee_email']);\n. ",
    "iainheng": "I wanted to know how to do paginate with findWhere(). ",
    "Kocal": "See https://github.com/andersao/l5-repository/issues/233#issuecomment-230543405 by using scopeQuery.\nBut I really prefer the solution from @jammersonf.\nUsing Criteria doesn't mean you can't do \"dynamic wheres\" anymore. \nYou can give some values in Criteria __construct(), that you can use in apply().\n```php\napp/Criteria/EmployeeCriteria.php\nclass EmployeeCriteria implements CriteriaInterface\n{\n    private $name;\npublic function __construct($name)\n{\n    $this->name = $name;\n}\n\npublic function apply($model, RepositoryInterface $repository)\n{\n    return $model->where('employee_name', $this->name);\n}\n\n}\n```\n```php\napp/Http/Controllers/EmployeesController.php\n// ...\n$this->repository->pushCriteria(new EmployeeCriteria('vital'));\n$employees = $this->repository->paginate();\n```. ",
    "andradedpg": "Hi Guys!\nSo... we're in 2018 and Criteria its a best way to this yet? I mean...  any type like $this->repository->findWhere(['employee_name'=>'vittal'])->paginate(20); is that a possible?. ",
    "acodercat": "I want to. in BaseRepository.php validator function  I am add $validator->setMessages($this->messages);\n```php\n public function validator()\n    {\n    if (isset($this->rules) && !is_null($this->rules) && is_array($this->rules) && !empty($this->rules)) {\n        if (class_exists('Prettus\\Validator\\LaravelValidator')) {\n            $validator = app('Prettus\\Validator\\LaravelValidator');\n            if ($validator instanceof ValidatorInterface) {\n                $validator->setRules($this->rules);\n                $validator->setMessages($this->messages);\n                return $validator;\n            }\n        } else {\n            throw new Exception(trans('repository::packages.prettus_laravel_validation_required'));\n        }\n    }\n\n    return null;\n}\n\n```. thanks!!!. \u6211\u8981\u662f\u60f3\u628a\u5173\u952e\u5b57\u66ff\u6362\u6210\u4e2d\u6587\u600e\u4e48\u529e\u5462\uff0c\u56e0\u4e3a\u6211\u76f4\u63a5\u628a\u9519\u8bef\u663e\u793a\u5728\u5ba2\u6237\u7aef\uff0c\u663e\u793a\u82f1\u6587\u5b57\u6bb5\u540d\u5b57\u7684\u8bdd\u4e0d\u592a\u5408\u9002. yes  thx!  but now i want use ddd. . ",
    "marlonauthority": "como se usa agora?\ntentei \npublic function pluck(){\n        return $this->model->pluck('nome', 'id');\n    }\nda erro, o que estou fazendo de errado?. ",
    "lourenci": "It can be done as an update/create parameter too, it is just a proposal for skip validator feature.\n. ",
    "johannesschobel": "Can you also add the respective key to the configuration file? . has this been exposed to pull-request or possibly already been merged?. i think this would be good :+1:. Your parent is possibly not a repository?!. this issue can be closed, right?. Why don't you just use Cascade Delete on your database?. this may not work. The semantics of POST is to add data to the server (e.g., create something new). GET however, requests data from the server, so filtering is a common use-case.\nRegarding the POST semantics: What should the fieldSearchable do in your opinion?! At least for me, this makes no sense..\nCheers. Hey,\nfirst of all, i don't think, your includeTechnicans must be that complex.. A simple\nphp\npublic function includeTechnicians(Project $project)\n{\n    return $this->collection($project->technicians, new UserTransformer());\n}\nshould do it, as $this->collection() returns null as well.. (or an empty relationship? I don't know at the moment).\ni would rather create a completely new Transformer for the Technicians. It clearly separates the one model (User) to the consumer with his specific needs. Otherwise, if you change your UserTransformer you would need to manage the changes this way, the TechnicianTransformer would not be affected by the changes --> could be a huge mess!\nCheers. Basically, you need to query the data from your pivot table.. Read about this in the Laravel Docs!\nThis would be something like this:\nphp\n// in your Project Model!\npublic function technicians() {\n   return $this->belongsToMany(Technician::class)->withPivot('your', 'pivot', 'fields', 'here')->withTimestamps();\n}\nThis would also retrieve the data from respective pivot table.\nYou can access this data with\nphp\n$project->pivot->field;\nand can use it in your transformers as well!. simply use ?limit=100 in order to specify how many items should be displayed on one page, and ?page=3 in order to show the items on page 3. Of course you can combine both params!. does anybody can help on this issue?!. Maybe someone can help here @eullercdr , @andersao or Community?. Try this:\nphp\n$users = $repository->whereHas('roles', function($q) use ($roles) {\n   return $q->where('name', '=', 'Delivery');\n})->paginate();\nwhere $repository is your UserRepository and roles is the name of the relationship between User and Role. anyone has some idea on this one? @eullercdr , @andersao or community?. yeah, but then I loose the ability to paginate the results.. I would like to disable the pagination, if the user decides to.. e.g., if the appends the query parameter ?limit=0 or so... . I thought, it would be possible to use this \"out of the box\"..\nWould you accept a PR to fix this behaviour?. in a repository, you can define the columns that are searchable..\nPlease read the readme and search for fieldsSearchable!. Hey there,\nregarding the PR: I actually now have a better / clearner way of implementing this..\nI can do a PR but only if i get feedback if this would get merged.. otherwise it's kind a waste of time :crying_cat_face: . Maybe this is related to #404 ?. @duongtdvn after evaluating this issue, i think the issues are not related to each other... @duongtdvn however, i believe that your issue might be caused by the fact that if you call\nphp\n$this->countries->find(...);\nthe RequestCriteria is applied.. This Criteria, in turn, maps all Request Query Parameters to the repository. In this case, you would also search only for countries that have an a in its name AND have respective id.. this will most likely cause an error.. . Actually, skipCriteria removes all Criteria from this Repository. You may exclude one Criteria more specifically with popCriteria(Criteria)! You may consider using popCriteria instead of skipCriteria. Hey @jaysongyn ,\nas @HerreraG describes, i would also go for the Criteria approach, because it is quite re-usable.. Imagine, that you may need to apply the same where-condition over and over again (e.g., you may want to only output Products that are is_active flagged in your database). So you may easily do this within one Criteria and apply it constantly to your Repository Requests.\nFurther, it contributes to a better maintainability of your application - because the entire \"logic\" on how to select respective Products that are active is within this Criteria..\nHope this helps. order_by does NOT retrieve the data, you still need to get() it from the repository.. . Hey there.. I think, i would go with the Criteria approach and just create lots of small Criteria that, for example, add where statements. These criteria, in turn, can than be added to the Repository before retrieving the data.. \nMaybe this can solve your problem?. @skys215 , i would rather say: Scopes are provided by Laravel itself (work directly on the model builder!), but Criterias are provided by this package (and work on the Repository!). can you please clarify the actual issue and describe the problem? Not sure if i understand it correctly..\nBe sure to have the laravel migration file correctly set up and do not manually cast the string to integer in the model (protected $casts). it certainly works, because i use it in lot of methods myself.. try applying a Criteria with a where condition.. . actually i am not sure, but i think, that array_filter() also removes false and 0 values!. Querys like this would not get handled in the  RequestCriteria. You need to add it to the ?search=... param, right?. @eullercdr if you preview this neat demo of array_filter here https://3v4l.org/eBOaY it shows, what is actually removed by array_filter. I have not tested it in the context of this specific PR - but from what i know from array_filter this could be very dangerous..\nThis could probably (!) result in the fact, that you would not be able again to search for something that is false or has the value '' (empty string) because it is removed from the search array!. why change the \"vendor name\" in the composer file?. same here. should be in require-dev, i think.. and use a \"stable\" version?. ",
    "brayansdt": "+1 to this PR, When is it going to be merged?. ",
    "Bantes": "i try to make a baseRepository and a baseEloquent.\nbaseRepository:\npublic function newModel($model);\nbaseEloquent:\n`public function newModel($model)\n    {\n        $model = $this->app->make($model);\n    if (!$model instanceof Model) {\n        throw new RepositoryException(\"Class {$this->model()} must be an instance of Illuminate\\\\Database\\\\Eloquent\\\\Model\");\n    }\n\n    return $this->model = $model;\n}`\n\ni can use $this->base->newModel(\\App\\Models\\User::class)->all() in my project\nbut i am first to learn repository pattern,so i don't know this is right or wrong. ",
    "marcus-campos": "New functions: findWhereBetween and pluck\nSync, firstOrCreate, Detach, and others. @eullercdr este branch est\u00e1 pronto para ser aceito. @eullercdr Este PR est\u00e1 pronto para ser aceito. ",
    "petarjs": "Hi, try using ; instead of , :)\nFor example\n/v1/entries?with=photos;author;tags. ",
    "jeremynikolic": "I personally do it that way too in a service layer which deal with logic and transactions like in your example. ",
    "joaopaulopvillela": "Good Morning\nI am trying to execute a transaction, but I am not consequently, I already placed inside a block of treatment, but every time it gives an error it persists the data of the transaction, there is some configuration that has to be performed.\nThanks. ",
    "khrisnet": "Lendo melhor a documenta\u00e7\u00e3o acabei conseguindo adaptar a minha necessidade.\nObrigado,\nabs. @boza-vel, @bicatu \nI have the same issue. Any solution?. ",
    "vesper8": "According to this post it's been renamed to DetectsApplicationNamespace ?\nhttp://igniz87.hatenablog.com/entry/2017/01/25/122435\nAnyway should be a quick fix.. would appreciate if you could add it soon :)\nThanks!. ",
    "gordi256": "//use Illuminate\\Console\\AppNamespaceDetectorTrait;\nuse Illuminate\\Console\\DetectsApplicationNamespace;\nabstract class Generator\n{\n//  use AppNamespaceDetectorTrait;\n  use DetectsApplicationNamespace;\n. ",
    "branchzero": "@eullercristian Could you have a time to merge one of the Laravel 5.4 compatible PR to make it work with Laravel 5.4? Thank you.. ",
    "candradebh": "exactly. Hello, I would like to contribute with your project. ",
    "altaraven": "+1 Please add Laravel 5.4.* support.. ",
    "VRuzhentsov": "Anyone know? Is this project alive? or, it is time to start search new laravel repository project ?. ",
    "JunJun-Love-Amber": "+1, 60 issues were opened .Where is the author?. u can go to Pull requests and read the  Files changed. ",
    "yljphp": "+1. ",
    "victorffarias": "Apparently the trait AppNamespaceDetectorTrait had a modification changing its name to DetectsApplicationNamespace so to make the generator to work in versions 5.4+ of Laravel simply has to use the DetectsApplicationNamespace class. ",
    "igorbrum": "@victorffarias thanks a lot! It's work :). @cmzz Hi, sorry for the late response.\nin \\Prettus\\Repository\\Generators\\Generator.php i replace AppNamespaceDetectorTrait to DetectsApplicationNamespace\nNot the best practice but... You can look http://igniz87.hatenablog.com/entry/2017/01/25/122435. ",
    "cmzz": "@igorbrum  How does it work.. @igorbrum Thanks. I've got it.\nI think you can pull requests to fix that bug. \ud83d\udc4d . @Webysther Thanks.   . ",
    "erayaydin": ":+1: please fix. This should be merged on repository. Directly change on vendor is not a good way. ",
    "KamalHr": "Quickly fixed by changing ligne 5 in vendor/laracasts/generators/src/Commands/MigrationMakeCommands.php\ninto : use Illuminate\\Console\\DetectsApplicationNamespace; and ligne 16 into : use DetectsApplicationNamespace;. ",
    "thekaduu": "By default the query uses the OR.. Nice feature, but you implemented the feature just if the field is first (line 99).\nI don't like use switch in this case, because whenevery we need create a \"type field search\" we must create a new case in switch, but I like this feature.\n. You need to create a new branch to each new feature and don't to use your master branch.. You need to create a new branch to each new feature and don't to use your master branch.. Nice job guy.\nYou need to create a new branch to each new feature and don't to use your master branch.. ",
    "desertfoxmb": "Unless I'm missing something this would appear to be incorrect. Using multiple conditions on a findWhere always results in an and.\nFor example $this->repository->findWhere(['col1'=>1, 'col2=>2]) results in a query select * from table where col1=1 and col2=2;\n. ",
    "youssef-lr": "You can just add a method to your repository.. ",
    "KhaledSMQ": "you can use this\n```\n public function groupBy($by)\n    {\n        $this->model = $this->model->groupBy($by);\n    return $this;\n}\n\n```. ",
    "Webysther": "I discovery, Hoa\\Core override this function: https://github.com/laravel/framework/blob/5.4/src/Illuminate/Foundation/helpers.php#L468. I remove/update the package using Hoa/Core. Using compose show is possible to check how package is using, this package use another dependency.. Mostly packages move forward from the lib Hoa/Core, update maybe fix.. Add in criteria:\n```php\n   /*\n     * @var \\Illuminate\\Http\\Request\n     /\n    protected $request;\npublic function __construct(Request $request)\n{\n    $this->request = $request;\n}\n\n```\nafter get the ID from resource URL, to know how get resource list of user:\nshell\n$ php artisan route:list --name=user\nAnd add the key indentity to request inside criteria:\nphp\npublic function apply($model, ... $repository)\n    {\n        $uid = $this->request->route('user');. ",
    "IamBusy": "I came across the same problem. And this feature can solve it.  I hope the pr can be merged. :). ",
    "ftaurino": "solved creating a criteria with an \"or\" in sql definition.. ",
    "BafS": "Hello,\nI also use this package for some project, I don't know if I will have a lot of time to collaborate but I'm open to help, merge pull requests etc.\nAll my Laravel projects are on a private repos but you can check my profile to see others repositories.. @andersao any new ?. Will this pull request be merged? @eullercristian . Still not any new ? We should really clean the code style and the readme.. Now there are some conflicts but I can fix them if a collaborator could respond.. I fixed the conflicts.. @eullercdr any news ?. @andersao or @eullercdr ?. again... @andersao or @eullercdr ?. ",
    "nguyentranchung": "@andersao this repository is still maintain? There has been no new commit for a year \ud83d\ude22 . ",
    "gavinb2c": "Thanks w0rd-driven,  I am checking this out.. This is spot on by the way.  Thanks w0rd-driven confirmed as a solution :). ",
    "clms2": "Hi, I have add and adjust some code to make this available, \npull request is here: https://github.com/andersao/l5-repository/pull/363. ",
    "daoanhvuacc": "the same error when I implement for Restful API as:\n\"errors\": {\n    \"message\": \"Target [App\\Repositories\\RolesRepository] is not instantiable while building [\\App\\Http\\Controllers\\RolesController].\"\n  }\nand in my RepositoryServiceProvider.php:\n$this->app->bind(\\App\\Repositories\\RolesRepository::class, \\App\\Repositories\\RolesRepositoryEloquent::class);\nAny help? I'm using Laravel 5.4. ",
    "Defrothew": "I'm also having issues with this as well. I followed the installation and configuration process but may be I missed something.\nI already added the necessary class in my \"config/app.php\" as well as already created the bindings to a repository but it seems like its not working for me as its throwing \"BindingResolutionException\".\nI'm using Laravel 5.4. Ok, I fixed my issue because I missed a step.\nI just added this code to my \"app\\Providers\\AppServiceProvider\"'s register method function:\n$this->app->register(RepositoryServiceProvider::class);. ",
    "vrkansagara": "@Andreypinky This might help you out. https://github.com/andersao/l5-repository/issues/546#issuecomment-447570311. @SkypieaSGS  This might help you out. https://github.com/andersao/l5-repository/issues/546#issuecomment-447570311. After investing two days , I figured out bellow solution for this problem and it's work fine in my case.\nRegister your  RepositoryServiceProvider into config/app.php file.\nmine would be \\App\\Providers\\RepositoryServiceProvider::class,\n@NailsonCodens  this might help you out .\n@andersao  Can we document this into readme file so user can easily solve and move ahead.. ",
    "schursin": "@eullercristian It work good on BelongsTo relations, but on BelongsToMany we need an \"id\".... ... or comment fix :). IMHO, we need a comment fix, that's all :). @eullercristian tnx!. It seems to be\n/**\n     * Sync relations\n     *\n     * @param $id\n     * @param $relation\n     * @param array $attributes\n     * @param boolean $detaching \n     * @return array\n     */\n    public function sync($id, $relation, $attributes, $detaching = true)\n    {\n        return $this->find($id)->getRelation($relation)->sync($attributes, $detaching);\n    }. @eullercristian ok. @eullercristian https://github.com/andersao/l5-repository/pull/353. ",
    "Quiss": "-   public function sync($relation, $attributes)\n+   public function sync($id, $relation, $attributes)\n      {\n          $this->model = $this->model->with($relation)->getRelation($relation)->sync($attributes);\n          return $this;\nNice, added attribute, and no use. Good work @eullercristian \ud83d\ude04 . @schursin \ud83d\udc4d . @eullercristian one question, you're testing committing code ?. ",
    "mityukov": "Maybe, I'l ask one question right here, then: What is the aim of \"Transformable\", if I can link a model or a repo to \"Presenter\" directly?. ",
    "globsecure": "Cool! Big Support! Thank you!. ",
    "perezale": "Hi, any updates here?\nI've forked l5-repository and made a cleaner commit to support 'between' queries, including only the some changes in src/Prettus/Repository/Criteria/RequestCriteria.php. I removed js as its not strictly necessary and there's no commented code nor white space changes.\nThat should be enough to support these queries.\nShould I open another PR or what? I'd really like to see this feature up and running.\nThanks!. Alright, I guess I can't change my branch without making a new PR. I'll reset my fork afterwards.\nFor the switch/case problem, I also think there should be a better idea for further extensions. Any recomendations?  . ",
    "bicatu": "I have the same issue. Any idea if this is a bug or known undocumented 'feature' ?. ",
    "meness": "I have the same problem. I'm using the latest stable version of Lumen.\n\nBindingResolutionException in Container.php line 873:\nTarget [Illuminate\\Contracts\\Translation\\Translator] is not instantiable while building [App\\Http\\Controllers\\XController, App\\Validators\\Entities\\XValidator, Illuminate\\Validation\\Factory].\nin Container.php line 873\nat Container->notInstantiable('Illuminate\\Contracts\\Translation\\Translator') in Container.php line 725\nat Container->build('Illuminate\\Contracts\\Translation\\Translator') in Container.php line 598\nat Container->resolve('Illuminate\\Contracts\\Translation\\Translator') in Container.php line 567\nat Container->make('Illuminate\\Contracts\\Translation\\Translator') in Application.php line 208\nat Application->make('Illuminate\\Contracts\\Translation\\Translator') in Container.php line 840\nat Container->resolveClass(object(ReflectionParameter)) in Container.php line 780\nat Container->resolveDependencies(array(object(ReflectionParameter), object(ReflectionParameter))) in Container.php line 746\nat Container->build('Illuminate\\Validation\\Factory') in Container.php line 598\nat Container->resolve('Illuminate\\Validation\\Factory') in Container.php line 567\nat Container->make('Illuminate\\Validation\\Factory') in Application.php line 208\nat Application->make('Illuminate\\Validation\\Factory') in Container.php line 840\nat Container->resolveClass(object(ReflectionParameter)) in Container.php line 780\nat Container->resolveDependencies(array(object(ReflectionParameter))) in Container.php line 746\nat Container->build('App\\Validators\\Entities\\XValidator') in Container.php line 598\nat Container->resolve('App\\Validators\\Entities\\XValidator') in Container.php line 567\nat Container->make('App\\Validators\\Entities\\XValidator') in Application.php line 208\nat Application->make('App\\Validators\\Entities\\XValidator') in BaseRepository.php line 219\nat BaseRepository->makeValidator() in BaseRepository.php line 94\nat BaseRepository->__construct(object(Application))\nat ReflectionClass->newInstanceArgs(array(object(Application))) in Container.php line 752\nat Container->build('App\\Repositories\\XRepository') in Container.php line 598\nat Container->resolve('App\\Repositories\\XRepository') in Container.php line 567\nat Container->make('App\\Repositories\\XRepository') in Application.php line 208\nat Application->make('App\\Repositories\\XRepository') in Container.php line 840\nat Container->resolveClass(object(ReflectionParameter)) in Container.php line 780\nat Container->resolveDependencies(array(object(ReflectionParameter))) in Container.php line 746\nat Container->build('App\\Http\\Controllers\\XController') in Container.php line 598\nat Container->resolve('App\\Http\\Controllers\\XController') in Container.php line 567\nat Container->make('App\\Http\\Controllers\\XController') in Application.php line 208\nat Application->make('App\\Http\\Controllers\\XController') in RoutesRequests.php line 676\nat Application->callControllerAction(array(true, array('uses' => 'App\\Http\\Controllers\\XController@test', 'middleware' => array('throttle:15,2')), array())) in RoutesRequests.php line 643\nat Application->callActionOnArrayBasedRoute(array(true, array('uses' => 'App\\Http\\Controllers\\XController@test', 'middleware' => array('throttle:15,2')), array())) in RoutesRequests.php line 623\nat Application->Laravel\\Lumen\\Concerns{closure}(object(Request))\nat call_user_func(object(Closure), object(Request)) in Pipeline.php line 52\nat Pipeline->Laravel\\Lumen\\Routing{closure}(object(Request)) in ThrottleRequests.php line 52\nat ThrottleRequests->handle(object(Request), object(Closure), '15', '2') in Pipeline.php line 148\nat Pipeline->Illuminate\\Pipeline{closure}(object(Request))\nat call_user_func(object(Closure), object(Request)) in Pipeline.php line 32\nat Pipeline->Laravel\\Lumen\\Routing{closure}(object(Request)) in Pipeline.php line 102\nat Pipeline->then(object(Closure)) in RoutesRequests.php line 778\nat Application->sendThroughPipeline(array('App\\Http\\Middleware\\ThrottleRequests:15,2'), object(Closure)) in RoutesRequests.php line 624\nat Application->handleFoundRoute(array(true, array('uses' => 'App\\Http\\Controllers\\XController@test', 'middleware' => array('throttle:15,2')), array())) in RoutesRequests.php line 528\nat Application->Laravel\\Lumen\\Concerns{closure}(object(Request))\nat call_user_func(object(Closure), object(Request)) in Pipeline.php line 52\nat Pipeline->Laravel\\Lumen\\Routing{closure}(object(Request)) in Debugbar.php line 51\nat Debugbar->handle(object(Request), object(Closure)) in Pipeline.php line 148\nat Pipeline->Illuminate\\Pipeline{closure}(object(Request))\nat call_user_func(object(Closure), object(Request)) in Pipeline.php line 32\nat Pipeline->Laravel\\Lumen\\Routing{closure}(object(Request)) in ResponseLoggerMiddleware.php line 39\nat ResponseLoggerMiddleware->handle(object(Request), object(Closure)) in Pipeline.php line 148\nat Pipeline->Illuminate\\Pipeline{closure}(object(Request))\nat call_user_func(object(Closure), object(Request)) in Pipeline.php line 32\nat Pipeline->Laravel\\Lumen\\Routing{closure}(object(Request)) in ETagMiddleware.php line 41\nat ETagMiddleware->handle(object(Request), object(Closure)) in Pipeline.php line 148\nat Pipeline->Illuminate\\Pipeline{closure}(object(Request))\nat call_user_func(object(Closure), object(Request)) in Pipeline.php line 32\nat Pipeline->Laravel\\Lumen\\Routing{closure}(object(Request)) in RequestId.php line 32\nat RequestId->handle(object(Request), object(Closure)) in Pipeline.php line 148\nat Pipeline->Illuminate\\Pipeline{closure}(object(Request))\nat call_user_func(object(Closure), object(Request)) in Pipeline.php line 32\nat Pipeline->Laravel\\Lumen\\Routing{closure}(object(Request)) in Pipeline.php line 102\nat Pipeline->then(object(Closure)) in RoutesRequests.php line 778\nat Application->sendThroughPipeline(array('Softonic\\Laravel\\Middleware\\RequestId', 'App\\Http\\Middleware\\ETagMiddleware', 'App\\Http\\Middleware\\ResponseLoggerMiddleware', 'Barryvdh\\Debugbar\\Middleware\\Debugbar'), object(Closure)) in RoutesRequests.php line 534\nat Application->dispatch(null) in RoutesRequests.php line 475\nat Application->run() in index.php line 28. I don't think it's related to Lumen compatibility, it cannot instantiate the interface Translator and its because of making validation. A workaround is to modify the __construct() method of BaseRepository and comment the $this->makeValidator() line.\n\nphp\npublic function __construct(Application $app)\n    {\n        $this->app = $app;\n        $this->criteria = new Collection();\n        $this->makeModel();\n        $this->makePresenter();\n        //$this->makeValidator();\n        $this->boot();\n    }. ",
    "Patskimoto": "Has anyone found a way to get this to work? I want to use the validator in Lumen so commenting the $this->makeValidator() out isn't really an option and I believe doing so stops any validation from occuring.. ",
    "rodralme": "Register 'Illuminate\\Contracts\\Translation\\Translator' class in yours AppServiceProvider:\npublic function register()\n    {\n        App::bind(Translator::class, function ($app) {\n            return $app['translator'];\n        });\n}\nrefs: https://github.com/andersao/l5-repository/issues/28\nI hope that it works!. ",
    "TiagoSilvaPereira": "+1 I need to access a repository inside another repository. E.g userRepository inside serviceRepository.\nThanks!. ",
    "gesrt": "Don't inject each other, it will cause error.\n```\nuse Illuminate\\Container\\Container as Application;\nuse AnotherRepository;\nclass oneRepository extends BaseRepository\n{\n    private $anotherRep;\npublic function __construct(Application $app, AnotherRepository $anotherRep){\n    parent::__construct($app);\n    $this->anotherRep= $anotherRep;\n}\n\n}\n```. ",
    "shellus": "Okay, I know\n. ",
    "harrysbaraini": "It is not related to L5-Repository. Anyway, yes, laravel handle it, just add your columns to $casts protected property of your Model. Try it:\n```\nclass MyModel extends Model {\n   protected $casts = [\n       'my_column' => 'object',     // or array, or collection\n   ];\n...\n}\n```. If you're initializing your ChatbotDefaultHandler using \"new ChatbotDefaultHandler()\" it won't inject any binding.\nSo you can use something like this in your ChatbotDefaultHandler constructor:\n$repo = app(ChatbotBlockRepository::class);. ",
    "rhwilr": "I do get the same error. I had to disable caching for now.\nI hope I get around to take a closer look at it in the next few days and make a pull request if i find something.. ",
    "netopvh": "I tried to verify why this was happening and could not identify anything.\nI'm waiting for correction.. ",
    "sergiybutenko": "same issue. ",
    "jjag3r": "bump\n. ",
    "zepaduajr": "Same issue.\nSomeone found a solution?. @eullercdr \ni've sent a request with uploaded file.\nWhen i do any querys in repository (using CacheableRepository), i receive this error:\n(1/1)\u00a0Exception\nSerialization of 'Illuminate\\Http\\UploadedFile' is not allowed\n--\nin\u00a0CacheableRepository.php\u00a0(line 161)\nThis error occurs when request is serialized: (inside CacheableRepository.php)\n``` CacheableRepository.php\npublic function getCacheKey($method, $args = null)\n    {\n    $request = app('Illuminate\\Http\\Request');\n\n--->    $args = serialize($args); <---\n        $criteria = $this->serializeCriteria();\n        $key = sprintf('%s@%s-%s', get_called_class(), $method, md5($args . $criteria . $request->fullUrl()));\n    CacheKeys::putKey(get_called_class(), $key);\n\n    return $key;\n\n}\n\n```\nIn my request: \nRequest $request;\n$request->files->parameters['blb_file'] (UploadedFile)\n. ",
    "twcarefoot": "My solution was to create a \"Disable Caching\" middleware and apply it to my route.\n\nconfig(['repository.cache.enabled' => false]);. \n",
    "pedroufv": "i add \"skipCache=true\" in files upload routes. ",
    "tsaiyihua": "my solution is modify serializeCriteria method in CacheableRepository.php\njust use try cache to ignore the error\ntry {\n            return serialize($this->getCriteria());\n        } catch (Exception $e) {\n            return serialize($this->getCriteria()->map(function ($criterion) {\n                /** add here */\n                try {\n                    return $this->serializeCriterion($criterion);\n                } catch (Exception $e) {\n                    Log::warning($e->getMessage());\n                }\n            }));\n        }. ",
    "nejtr0n": "There is no creating, updating and deleting events... So it would be greate to have them in package.. It should be \narray_merge($attributes, $values);. ",
    "dashracer": "Hi @joaosalless,\nThanks for the reply, I've read your code and I found this on OrderTransformer.php\nprotected $availableIncludes = ['items', 'cupom', 'client', 'deliveryman'];\nCan you show me how you can trigger the transformer to include those (items/cupom/client/deliveryman)\nI understand if we use the $defaultIncludes, it will be automatically added to the data, but how to trigger the available includes\nReally need your help\nThanks. Thanks, you saved the day :D. ",
    "jffsx": "Hi Guys\nHow do I return a collection, for example the user has many roles\nThanks. I discovered lol. @DevinGray Exactly as our friend said @shez1983 . ",
    "curder": "Publish Configuration\nphp artisan vendor:publish --provider \"Prettus\\Repository\\Providers\\RepositoryServiceProvider\". Hello @sandeepv When I try it like the following codes\n```\n\u2601  study_repository [master] \u26a1 ll app/Providers\ntotal 48\n-rw-r--r--  1 luo  admin   456B  5 15 09:44 AppServiceProvider.php\n-rw-r--r--  1 luo  admin   575B  5 12 14:50 AuthServiceProvider.php\n-rw-r--r--  1 luo  admin   380B  5 12 14:50 BroadcastServiceProvider.php\n-rw-r--r--  1 luo  admin   596B  5 12 14:50 EventServiceProvider.php\n-rw-r--r--  1 luo  admin   597B  5 15 09:57 RepositoryServiceProvider.php\n-rw-r--r--  1 luo  admin   1.5K  5 12 14:50 RouteServiceProvider.php\n\u2601  study_repository [master] \u26a1 rm -f app/Providers/RepositoryServiceProvider.php\n\u2601  study_repository [master] \u26a1 php artisan vendor:publish --provider \"Prettus\\Repository\\Providers\\RepositoryServiceProvider\"\n[ErrorException]\n  include(/Volumes/codes/Study/laravel/study_repository/vendor/composer/../../app/Providers/RepositorySer\n  viceProvider.php): failed to open stream: No such file or directory\n\u2601  study_repository [master] \u26a1 composer dump-autoload\nGenerating optimized autoload files\n\u2601  study_repository [master] \u26a1 php artisan vendor:publish --provider \"Prettus\\Repository\\Providers\\RepositoryServiceProvider\"\n[Symfony\\Component\\Debug\\Exception\\FatalThrowableError]\n  Class 'App\\Providers\\RepositoryServiceProvider' not found\n\u2601  study_repository [master] \u26a1 vim app/Providers/AppServiceProvider.php\n\u2601  study_repository [master] \u26a1 php artisan vendor:publish --provider \"Prettus\\Repository\\Providers\\RepositoryServiceProvider\"\nPublishing complete.\n```\nBecause i register the repository service provider in app/Providers/AppServiceProvider.php, when i modify this file,like this\n/**\n * Register any application services.\n *\n * @return void\n */\npublic function register()\n{\n//       $this->app->register(RepositoryServiceProvider::class);\n}\nif your are register it in your config/app.php add App\\Providers\\RepositoryServiceProvider::class to the end of the providers array:\n'providers' => [\n    ...\n    App\\Providers\\RepositoryServiceProvider::class,\n],\nyour also should annotate it.\n\nwhen I do that the app\\Providers\\RepositoryProvider.php file do not exists. \nso I create the file and write something code.\n\n\nThe RepositoryServiceProvider.php file like this:\n```\n<?php\nnamespace App\\Providers;\nuse Illuminate\\Support\\ServiceProvider;\nclass RepositoryServiceProvider extends ServiceProvider\n{\n    /\n     * Register the application services.\n     \n     * @return void\n     /\n    public function register()\n    {\n        $this->app->bind(\n            'App\\Repositories\\YourRepository',\n            'App\\Repositories\\YourRepositoryEloquent'\n        );\n    ......\n}\n\n}\n```\ngood luck for your job.. ",
    "sandeepv": "Hi @curder \nIt have run the command php artisan vendor:publish --provider \"Prettus\\Repository\\Providers\\RepositoryServiceProvider\nit says \"Publishing complete.\"\nbut still the same issue . ",
    "mrajabtech": "Could anyone please help advice how to do this?. Thanks! That was simple!. ",
    "DMDc0de": "You could create your own criteria, something like this:\n```php\nclass NameSurnameCriteria implements CriteriaInterface\n{\n    protected $query;\npublic function __construct(String $query)\n{\n    $this->query = $query;\n}\n\npublic function apply($model, RepositoryInterface $repository)\n{\n    $model = $model->where('name', 'like', '%' . strtolower($this->query) . '%')\n        ->orWhere('surname', 'like', '%' . strtolower($this->query) . '%');\n\n    return $model;\n}\n\n}\n```\nand use it inside your repository\n```php\npublic function searchByNameAndSurname(String $text)\n    {\n        $this->pushCriteria(new NameSurnameCriteria($text));\n        return $this->paginate();\n    }\n. ",
    "honarmandali": "in the TourRepositoryEloquent the model function returns Tour::class which I changed to \"App\\Models\\Tour\" where Tour resides and everything works fine now. Am I missing something?. ",
    "757470062": "you need set model in TourRepositoryEloquent. ",
    "sarog": "$this->events()->createMany($events);. ",
    "silentcat14": "I think you should ask this transformer question to laravel-fractal because I think this repo is using that fractal.\nmaybe a little of thought here you could use \n```\npublic function includeTechnicians(Project $project)\n{\n    $availableTech = $project->availableTechnichians; // of course you can use laravel relations here and will be query once for this Or you could query for availableTech here\nreturn $this->collection($availableTech, new UserTransformer());\n\n}\n```\nSorry for bad english.. @johannesschobel  Yea agree with you. Sorry didn't read carefully what he needs there. What I think he needs the available technicians there so he should do wherePivot at his model. sorry for trouble.. ",
    "aghasoroush": "There isn't any specific command for your case. You can see the list of available commands by php artisan. ",
    "sroutier": "+1 for Laravel 5.5. +1 Thanks for the patch @duongtdvn \nPlease merge.. ok, so I see now that a similar PR was merged by @michalisantoniou6 on Mar 24, but then on Apr 7 @eullercdr reverted the change. I can't figure out why. Would anybody know?\nThis looks to me like it is required for Laravel 5.4+,  is it incompatible with previous versions?\nThanks.\n/S. ",
    "renfan": "+1 for Laravel 5.5. ",
    "tsdeveloper": "Thanks, that way, but you need to bring only the \"name, id\" fields of the Rules table. To popular my Dropdownlist. Solve it this way\n$ Deliverymans = User :: with (['roles' => function ($ q) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 $ Q-> where ('role_id', 2);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }]) -> whereHas ('roles', function ($ query) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 $ Query-> where ('role_id', 2);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }) -> lists ('name', 'id');\nWhen I did so I used his example with the whereHas in the l5-repository he gave an error stating that there is no whereHas. I think that's why I'm using L5 Repository in version 2.1.5. Sorted out.... ",
    "duongtdvn": "Im in the same situation and there is my current walk around:\n```php\n$results = $this->repository;\nreturn request()->has('limit') ? $results->paginate(request('limit')) : $results->all();\n```\nfor laravel 5.5:\n```php\n$results = $this->repository;\nreturn request()->filled('limit') ? $results->paginate(request('limit')) : $results->all();\n```\nnotice the request()->has() method has been replaced with request()->filled() since it validate that the query parameter is not empty as https://laravel.com/docs/5.5/requests\n. @tawenxi Yeah i tried that but it did not work as expected.. @johannesschobel have you try to search only with difference text string like me? as my work fine with the a character but any other caused the error.. Thank you @johannesschobel for spotting the RequestCriteria. I have applied the skipCriteria method and everything working as expected. For some one who encountered this issue here is what I am using right now:\nphp\n/**\n * Listing all cities under given country\n * @param int $countryID\n */\npublic function index($countryID) {\n    // verify the existence of the country\n    $country = $this->countries->skipCriteria()->find($countryID);\n    // fetch all the city under given country\n    $cities = $this->cities->scopeQuery(function ($query) use ($country) {\n        return $query->where('country_id', $country->id);\n    })->all();\n    // return final results\n    return $cities;\n}\n. I see, however I did not apply any Criteria in the repository yet. In fact, i have not create any Criteria ever!. ",
    "cmontezano": ":+1: Please merge @andersao . ",
    "pashamesh": "Yes, you need to extend RequestCriteria::apply() method.. ",
    "cosmok": "I've had the same question and this is my finding:\n\n\nThe presenter here cannot be used as view presenter as it doesn't know about the model.\n\n\nI can see some examples of model presenter being used here: https://github.com/joaosalless/laravel-codedelivery/blob/master/app/Presenters/BasePresenters/ClientPresenter.php , but, I don't like it as now the model is aware of a presenter\n\n\nI like what is being said here: https://www.reddit.com/r/laravel/comments/46gwib/using_the_presenter_pattern_with_the_repository/d06bg46/ and I like how a presenter can be created from a model in this package: https://github.com/robclancy/presenter (which is in the suggested list in composer.json file here)\n\n\nSo i am thinking about using the Robcalncy\\Presenter, say maybe add a getPresenter() in the transformer class.\n\n\nIf there is a better approach let's discuss here.. You could do:\n$this->repository->scopeQuery(function($query) {\n    return $query->orderBy('created_at','DESC')\n                 ->take(5);\n})->all();. In the config have you tried setting the 'serializer' key to League\\Fractal\\Serializer\\ArraySerializer::class ?. ",
    "talliujobs": "thanks, I understand now.. ",
    "edmandiesamonte": "@eullercdr in my case, I used the 2.6.18 (https://github.com/andersao/l5-repository/blob/2.6.18/src/Prettus/Repository/Generators/RepositoryEloquentGenerator.php#L121). Wow. Your fix was already months ago. Got me questioning if this repo is still maintained.. ",
    "devyk": "I have same problem. We have header on multiple pages, where bookmarks are rendered and problem is that cache generated for each new page request. What purpose of such cache key generation logic?. ",
    "dzung1nguyen": "Same issue, i think laravel 5.5 just released, so they updated something in core,\nIt work good from laravel 5.4 from a few day before, but when i created a project by laravel 5.4 on today, i get an error like you :(\n$this->user->create($input); -> error: missing password\nUser::create($input); -> work good\n. ",
    "cbernard73": "It's relatively easy to add a limit function to the RepositoryInterface and the Eloquent/BaseRepository. To add it without breaking anything, it would need to be called before the find* functions. For example:\n$this->repo->limit($limit)->findWhere([])\nI think it would be better to make all the read (e.g. findWhere, findByField) methods chainable but this would be a breaking change and it would necessitate calling an additional method at the end of the chain. For example:\n$this->repo->findWhere([])->limit($limit)->fetch();\nWhat do you think? I'm happy to do a pull-request for either approach.. ",
    "rogerio-pereira": "i believe the first one is the better approach\n. ",
    "justinatack": "+1 on this idea. Will the code get pulled in soon?. ",
    "lidelin": "@andersao hello, could you tell me which version apply this pull request ? Thanks~. ",
    "romarioliveira25": "Whoops, \nHas been mentioned at this pull request. . ",
    "jmichaelterenin": "Nvm, this is unrelated to your package. If I set the $tenantName to 'current', I can access whatever I set for the dynamically 'current' database connection by hard-coding:\nprotected $connection = 'ciurrent';. ",
    "mouggey": "Same case here. The make:entity command is not producing a Controller.. ",
    "jdcargile": "+1\nI'm also receiving the following error.\n[Symfony\\Component\\Console\\Exception\\InvalidOptionException]  \n  The \"--force\" option does not exist.. ",
    "higormeloap89": "Same case here. The make:entity command is not producing a Controller.. ",
    "SergeiSporyshev": "Guys?. Yeah!\nThe problem is Laravel 5.5 has own command with signature \"make:resource\".\nI've solved it by change l5-repository command's signature in \"vendors/prettus.....\" to \"make:rest-resource\". In vendor/prettus/l5-repository/src/Prettus/Repository/Generators/Commands/ControllerCommand.php\nyou should replace\n    protected $name = 'make:resource';\nto\n    protected $name = 'make:rest-resource';\n. ",
    "cballou": "OP is bad at managing issues and pull requests, but it looks like he may have fixed the issue in https://github.com/andersao/l5-repository/commit/c28699dbe0823bb7e5f93c4f292018dcc163d5bc. ",
    "dinho-afsn": "Same problem \n[Symfony\\Component\\Console\\Exception\\InvalidOptionException]\n  The \"--force\" option does not exist. \nCan someone solve it?\nI'm using the latest version and it does not work with laravel 5.5. Thank you for replying, my friend.\nBut unfortunately it does not work. see the error I get\n\n\nthere is no make: rest-resource\nI think that looking at the documentation I discovered that I do not need to generate the controller anymore, but the resource only.\nhttps://laravel.com/docs/5.5/eloquent-resources. Thank you my friend SergeiSporyshev. Now it worked perfectly!!!. ",
    "Ryune911": "same case here... ",
    "qiutuleng": "@eullercdr The latest version still has this problem. @tawenxi \u662fnewInstance\u65b9\u6cd5\u5728model\u4e0a\uff0cl5-repository\u7684update\u65b9\u6cd5\u91cc\u9762\u9a8c\u8bc1\u6570\u636e\u4f1a\u7528\u5230$this->model->newInstance()\u65b9\u6cd5\u83b7\u53d6\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\u3002\u56e0\u4e3a\u4e0d\u79fb\u9664\u5168\u5c40\u4f5c\u7528\u57df\u5c31\u67e5\u4e0d\u51fa\u6570\u636e\uff0c\u79fb\u9664\u5168\u5c40\u4f5c\u7528\u57df\u53c8\u8981\u628amodel\u66ff\u6362\u6210builder\u5bf9\u8c61\u3002\n\u611f\u89c9\u53ea\u80fd\u91cd\u5199l5-repository\u7684update\u65b9\u6cd5\u4e86\uff0c\u4f46\u4e0d\u60f3\u8fd9\u6837\u73a9\u554a. lol. Hi.\nyou can add the folder of the corresponding language in'resources/lang/'\nlike this:\n\nmy language files comes from caouecs/Laravel-lang. like this: validation.php\nIn resources/lang/zh/validation.php\n```\nreturn [\n    //...\n'attributes' => [\n    'attribute' => '\u5c5e\u6027',\n    'username' => '\u7528\u6237\u540d',\n    'email' => \u2018\u90ae\u7bb1'\n    //...\n]\n\n]\n``. Hi @felipefrancioni \nIf you need add customized constraints to a relationship constraint, you must usewhereHasmethod.\nBecausewith` is the query records first, and then query relationship record.\nlike this:\n$articleRepository = app(ArticleRepository::class);\n$data = $articleRepository->skipPresenter(false)->with('user')->whereHas('user', function (\\Illuminate\\Database\\Eloquent\\Builder $query) {\n    $query->where('id', 34);\n})->all();\ndd($data->toArray());\nmy relationship:\npublic function user()\n{\n    return $this->belongsTo(User::class);\n}\noutput:\narray:1 [\n  0 => array:7 [\n    \"id\" => 1\n    \"title\" => \"Voluptates voluptatem eligendi hic enim voluptas eos dolor.\"\n    \"content\" => \"Laudantium ab tempora quis quia consequatur delectus distinctio. Esse quam officiis aut. Velit autem debitis magnam debitis. Ut excepturi possimus dicta minus praesentium. Dolorem nisi sed beatae qui. Molestiae maiores atque accusamus voluptatem ipsam. Et quia maxime nam voluptatibus omnis. Optio et ea ut molestiae. Temporibus quo tempore consequuntur corporis. Neque aut eius temporibus aut ipsam hic vel. Ut laborum rerum rerum nemo aut minus ratione. Dolorum sequi suscipit et unde quas. Eos odit et id tempore cupiditate. Minima impedit laborum quaerat est recusandae ullam. Iusto veniam est facere nihil ratione. Quam facilis cum culpa esse aut natus labore. Similique voluptatum ea consequatur. Maiores provident non et doloremque id enim omnis. Est aut et possimus ut ut qui asperiores. Quia eius maxime esse odio voluptatem qui. Consectetur est earum cum sit et sint.\"\n    \"user_id\" => 34\n    \"created_at\" => \"2017-11-16 00:39:05\"\n    \"updated_at\" => \"2017-11-16 00:39:05\"\n    \"user\" => array:6 [\n      \"id\" => 34\n      \"name\" => \"Mrs. Tressa Smitham\"\n      \"email\" => \"pollich.louvenia@example.org\"\n      \"password\" => \"$2y$10$qAbjGZrfPb19FrwO85f33OEBfjaZS6LdgfPV9mRjU7DKWKU2tgaSC\"\n      \"created_at\" => \"2017-11-03 07:33:45\"\n      \"updated_at\" => \"2017-11-03 07:33:45\"\n    ]\n  ]\n]\nSorry, my English is poor.\nHope to help you.. Add app/Providers/RepositoryServiceProvider::class to config/app.php\nliek this:\n'providers' => [\n    //...\n    // L5-repository Provides,\n    \\App\\Providers\\RepositoryServiceProvider::class,\n],. ",
    "dwt11": "public function paginate\npublic function find\nThese two uses    $this->applyCriteria();\npublic function update\nBut this is not used.\n. me too,same problem. https://github.com/andersao/l5-repository/pull/176\nthe update method can receive an array in its second argument,. ",
    "berzley": "I should only need to run $this->repository->find($id); to return the model. If you're using a presenter it should return it presented as you have setup.. ",
    "TELstatic": "@zishiguo \u8bf7\u95ee\u8fd9\u4e2a\u95ee\u9898\u6700\u7ec8\u89e3\u51b3\u4e86\u5417?\n. ",
    "tawenxi": "\u5bf9\u4f60\u8fd9\u4e2apr \u5f88\u6ee1\u610f. \u8fd9\u6837\u80af\u5b9a\u662f\u4e0d\u884c\u7684\uff0cwithoutGlobalScope\u5728model \u5b9e\u4f8b\u91cc\uff0c\u4e0d\u80fd\u7528\u5728Builder\u4e0a. hi,maybe ,you should add return before $query->where('city_id', $city->id);. return $query->where('city_id', $city->id);. ",
    "tad3j": "You need to skip presenter if you want to use filter.\nI've accomplished that by skipping presenter by default in repository:\nprotected $skipPresenter = true;\n...and enabling it inside controller, only in case that filter argument is provided with request:\nif (!$request->get('filter')) {\n    $this->yourRepository->skipPresenter(false);\n}. @hoseinz3, then I guess the only way is to modify presenters transformer and exclude filtered fields there (haven't tried that, so you'll have to figure it out).. ",
    "sanchescom": "I had the same problem. Maybe there's another solution to fix it, but I wrote this one.\n{{url}}/users?filter=id,name\n```sh\nnamespace App\\Presenters;\nuse Prettus\\Repository\\Presenter\\FractalPresenter;\n/\n * Class BasePresenter\n * @package App\\Presenters\n */\nabstract class BasePresenter extends FractalPresenter\n{\n    /\n     * @var string\n     */\n    protected $resourceKeyItem = 'item';\n/**\n * @var string\n */\nprotected $resourceKeyCollection = 'collection';\n\n/**\n * @throws \\Exception\n */\npublic function __construct()\n{\n    parent::__construct();\n\n    $this->parseFieldsets();\n}\n\n/**\n * @return $this\n */\nprotected function parseFieldsets()\n{\n    $request = app('Illuminate\\Http\\Request');\n    $paramFilters = config('repository.fractal.params.filter', 'filter');\n\n    if ($request->has($paramFilters)) {\n        $resources = [\n            $this->resourceKeyItem,\n            $this->resourceKeyCollection\n        ];\n\n        $this->fractal->parseFieldsets(\n            array_combine($resources, array_fill(0, count($resources), $request->get($paramFilters)))\n        );\n    }\n\n    return $this;\n}\n\n}\n```. ",
    "chillcaw": "I've found that overriding the create and update methods is a short-term fix for this:\n```php\npublic function create(array $attributes)\n  {\n      if (!is_null($this->validator)) {\n         $attributes = $this->model->newInstance()\n            ->forceFill($attributes)\n            // Add this line:\n            ->makeVisible($this->model->getHidden())\n            ->toArray();\n          $this->validator->with($attributes)->passesOrFail(ValidatorInterface::RULE_CREATE);\n      }\n  $model = $this->model->newInstance($attributes);\n  $model->save();\n\n  $this->resetModel();\n\n  event(new RepositoryEntityCreated($this, $model));\n\n  return $this->parserResult($model);\n\n}\n```. ",
    "andrewmclagan": "You could hydrate the Eloquent models from ES results:\nhttps://github.com/ethical-jobs/ethical-jobs-elasticsearch/blob/v1.5.2/src/Hydrators/EloquentHydrator.php\nthats how we do it. ",
    "waggyman": "so? any updates on this sir?. ",
    "deneuv34": "@Maras0830 as of your reference PR. The helper for lumen is app()->path? not app()->path() ?. ",
    "leofelipemendes": "@andersao \nhi friend, i'm trying translate de messages from de validator class but in this class i can't put the helper trans()\nI'm doing like this: \nprotected $messages = [\n        'cd_unidade_reguladora.required' => trans('messages.cd_unidade_obriga'),\n        'cd_unidade_reguladora.integer' => trans('messages.cd_unidade_inteiro')\n    ];\nbut not work.\nHave you any suggestion?\ntks. ",
    "denitsa-cm": "Is it correct there's no tests for the package? :). ",
    "mallardduck": "Yes, from what I can see that's the case.. Expanding on this issue further - as mentioned #149 seems related and has a few suggested solutions - the issue with these solutions is that they aren't necessarily ideal. For example @pjmartorell suggests doing:\nclass PostRepository extends BaseRepository {\n    ...\n    def withTrashed() {\n        $this->model = $this->model->withTrashed();\n        return $this;\n     }\n}\nOverall I thought this seemed legit enough, however it didn't work as expected in practice. By applying the scope in this manner we're actually trading out the Model class for a Builder class - since Eloquent scopes return a Builder instance instead of your model class.\nSo with this method you can only use a single scope and things kinda fall apart.. I think that there are a few approaches that could help resolve this - just off the top of my head.\nOne option is to copy the same concept used by Laravels Model and Builder class and the other is to build out logic in the repo to apply scopes.\n1. Copy the same idea used in Laravel core\nSo in this method we'd literally just use the __call method like laravel does. The challenge here would be accessing the scopes method on the Builder from within the Repo. Likely not impossible - but not a easy or quickly executed task either.\n2. Add a new (set of) method(s) to allow applying scopes\nThis one could result in more lines of code added, but is likely easier to reason about building out. For instance we could add a useScopes or useEloquentScopes method. Using it could look something like:\n$places = $this->repository->useEloquentScopes([\n          'ours',\n          ['testsOurs' => false]\n          ])->paginate();\nWhen it sees a set that's a single string it'll just assume the scope parameters are null - when it sees an array it'll use the key as the scope name and the value as the parameters.. So in an interesting turn - an article was just published yesterday that goes into detail on this issue. Put more eloquently by the author - the root issue here is about method chaining and how Eloquent poxyies methods to the underlying Builder.\nThe article is here: https://medium.com/@simonhamp/breaking-the-chain-e8a55106493f\nI think the key to finding an elegant solution to this issue will be keeping their technique in mind and adapting it for this use case. In the end, I think the result may be an amalgamation of all the techniques I've discussed. @johannesschobel thanks for the suggestion and sorry for the lack of reply. This is still on my radar, but I haven't had time to work on the project I'm using it in lately. Will report back once I have that time.. ",
    "rugleb": "For example in your Request class in app/Http/Requests namespace:\npublic function rules(PostValidator $validator)\n    {\n        return $validator->getRules(ValidatorInterface::RULE_CREATE);\n    }. ",
    "felipefrancioni": "I did it another way, it worked. Thank you all.. ",
    "Fanxd": "@qiutuleng Thanks!!! . ",
    "nabeelio": "I created a small PR to fix that issue. In my project, I created the trait and fixed it and pull that in, instead of the one from the vendor directory. @eullercdr Yep, the error showed up in travis-ci, which tests PHP 7.0 through 7.2. Awesome, thanks!. ",
    "humbugz": "@duongphan24289 if this is still an issue, what DB are you using? If you're using MySQL it's likely defaulting to using the MyISAM DB engine - which does not support transactions. You would need to switch MySQL to use the InnoDB engine instead.. ",
    "mCassy": "@DmitryZelonkin try\n'level' => 'required|string|in:' .implode(',', App\\Model\\Vacancy::LEVELS),\nfyi https://laravel.com/docs/5.6/validation#available-validation-rules. @mauro-gallo \nYou can do:\n$user->timestamps = false;\n. @NailsonCodens Did you bind your Repository interface in RepositoryServiceProvider?\npublic function register(){\n$this->app->bind(ProductRepository::class, %YourProductRepositoryImplementationClassHere%::class);\n}. You can substitute d_vch_title with title in request.Something like:\n$request->merge(['title'=>$request->get('d_vch_title')]);. mb try to re-create $request object: \n$request = new \\Illuminate\\Http\\Request($request->all());\n$request->merge(['title' => $request->get('d_vch_title')]);\nThis should work I think.... You can set ArticleValidator by default in your repository independet of your request,\ne.g :\npublic function validator()\n{\n    return ArticleValidator::class;\n}. ",
    "frowhy": "I found a temporary solution, I do not know how good it is.\nphp\n$notification = $this->repository->scopeQuery(function ($builder) use ($user) {\n    /* @var Builder $builder */\n    return $builder->where('user_id', $user->id)->getModel();\n})->update([\n    'is_read' => true,\n], $id);. ",
    "SOSTheBlack": "@thekaduu do you want me to pull the request in branch develop?\n. ",
    "saverio": "@andersao I just saw this issue myself. It looks like the issue is here: https://github.com/andersao/l5-repository/blob/f2008d8ff8af50036d2d155c0b5dbb07cbcd0ee4/src/Prettus/Repository/Criteria/RequestCriteria.php#L91\nUsing the full table name + field name should be far safer here.\n$query->where($relation.'.'.$field,$condition,$value);. ",
    "JvitorA": "@saverio That was the correction I did when  I had this issue. ",
    "stephandesouza": "Acho que \u00e9 o mesmo do #421 tava buscando outro erro na valida\u00e7\u00e3o e achei a sua duplicata :). @M-Abdullahi \nSure, here is a working implementation: https://gist.github.com/stephandesouza/f431b5079dffd01783b78b7cdd105fa7\nThis PR adds this feature directly to Prettus\\Repository\\Criteria\\RequestCriteria and the usage is the same case as with parameter.\nSingle:\n\n?withCount=groups\n\nMultiple:\n\n?withCount=groups,roles. \n",
    "heavyrick": "I have the same doubt as yours. ",
    "HerreraG": "Hello, if we look at the documentation\n\nCriteria are a way to change the repository of the query by applying specific conditions according to your needs.\n\nCriteria Queries\nso watching this I'll use this approach\nCriteria:\npublic function apply($model, RepositoryInterface $repository)\n{\n    $model = $model->whereHas('role', function ($query) {\n        $query->where('name', 'admin');\n    });\n    return $model;\n}\nUserRepository:\npublic function getUserByRole($role)\n{\n    return $this->with('role')\n        ->pushCriteria(new UserByRoleCriteria())\n        ->paginate(request('limit'));\n}\nUserService:\npublic function getUsersByRole($role)\n{\n    return $this->repository->getUserByRole($role);\n}\nI would not use criterial for this query since it can be solved with the base methods that the repository gives us.\nBecause it would be a lot of design for a simple query.\nExcuse my english\n. ",
    "lookwi": "sry I did not see it  stubsOverridePath. ",
    "deviouspk": "same problem.. Anyone with an answer?. ",
    "zarehesmaiel": "reffer to this : touching-parent-timestamps. ",
    "tcdsantos": "Thank you zarehesmaiel for helping!\nI don't use created_at and updated_at properties/columns in all my models because many times i don't need them for my business logic. I am use to include them just when they are need. However, do you know if this repository package relly on them to manage its cache? Because, if that is the case, all models need to have these columns and i was not aware of that.\nOther thing is that many models don't have relationships with other models. So, in these cases, there is no parent to touch and, at least in these models, when they are deleted, the cache should be notified of that.\nThank you!. ",
    "nkusibojoski": "This solved the problem\n'providers' => [\n    ...\n    Prettus\\Repository\\Providers\\RepositoryServiceProvider::class,\n],\nIt is not mentiond on this https://github.com/andersao/l5-repository/tree/2.0.14, should be fine if you can also update it there. ",
    "skys215": "So, Criteria is for controller and scope is for model?. ",
    "monsterddq": "thanks @johannesschobel, this problem is fix.. ",
    "devalpi": "I'm waiting for a solution.\nED\u0130T: \n$this->repository->scopeQuery(function ($query) {\n   return $query->where('status', 2);\n})->paginate(5);\nIt can work.. ",
    "SimonLeeee": "I have been solve it myself.\nI add the fillable into \"Entities/Layout.php\", and it works well.\nBut why? Is it didn't copy the fillable from my Model ? My Model path is in The \"App\".. @Maras0830 I have already added the $fillable in my Model, but the \"Entities/*.php\" made by Generator that didn't have the $fillable.\nIs it didn't copy the $fillable from my Model when I use Generator ? \n. ",
    "emanuellarini": "Nice, I hope this get merged soon.. ",
    "NailsonCodens": "@mCassy \nI was not doing two steps, registering my Repository Provider on the App Provider and registering and linking my interface to my real repository.\nI did this and it worked okay. @mCassy Thank you for your support\n. ",
    "renanBritz": "O que compreendo \u00e9 o seguinte:\nA ideia \u00e9 voc\u00ea n\u00e3o retornar nada relacionado ao Eloquent dos reposit\u00f3rios para evitar acoplamento. Para isso voc\u00ea \"apresenta\" os dados de forma padronizada, sendo um array ou objeto do dom\u00ednio. E para fazer isso \u00e9 necess\u00e1rio \"transformar\" esses dados. Exemplo: mapear Pessoa em um array.\nOs dados obtidos usando o presenter devem ser usados apenas para leitura. Toda a l\u00f3gica de persist\u00eancia deve ficar no reposit\u00f3rio.\nA documenta\u00e7\u00e3o dos transformers / presenters fica aqui.\nAbra\u00e7o!. Voc\u00ea precisa listar os campos que ser\u00e3o, por exemplo, retornados em uma API, ou usados para a l\u00f3gica de neg\u00f3cio em um controlador. Ou seja, n\u00e3o necessariamente precisam ser todos.\nCaso n\u00e3o queira usar presenters, voc\u00ea pode tamb\u00e9m usar a seguinte sintaxe:\nphp\npublic function show(PersonRepository $repo)\n{\n    $person = $repo->skipPresenter()->find(1); // Retorna Person (Model)\n}\nNesse caso, meu controlador estaria trabalhando com um objeto Model, que \u00e9 uma depend\u00eancia com baixa abstra\u00e7\u00e3o. Tornando-o pouco flex\u00edvel e dif\u00edcil de sofrer grandes mudan\u00e7as no futuro, como a de trocar de ORM, o que raramente ocorre em um projeto, ironicamente.... ",
    "eumanito": "Obrigado @renanBritz!\nE \u00e9 necess\u00e1rio listar nesse array todos os campos mesmo que n\u00e3o sejam manipulados? Achei ruim pois quando preciso incluir ou remover algum campo no banco de dados \u00e9 necess\u00e1rio alterar a Model, o Repository, o Controller, a Migration e agora, tamb\u00e9m, o Transform com Presenter. \u00c9 assim mesmo ou estou enganado?. Entendi. Obrigado @renanBritz.. ",
    "eleftrik": "Why has this issue been closed?\nPresenter is still returning data.\nThanks. ",
    "mirucon": "Simply create a serializer class like this to get collections without \"data\" key.\n```php\n/\n * @see     https://github.com/thephpleague/fractal/issues/315\n \n * @package App\\Serializers\n /\nclass SimpleArraySerializer extends ArraySerializer\n{\n    /\n     * Serialize a collection without \"data\" key.\n     \n     * @param string $resourceKey\n     * @param array  $data\n     \n     * @return array\n     */\n    public function collection($resourceKey, array $data)\n    {\n        return $data;\n    }\n}\n````\nThen in config/repository.php, specify this class as a serializer. . ",
    "jebraieili": "Thanks but it did not working :(. Unfortunately, it did not work again.\ni use apiato project (https://github.com/apiato/apiato ) and this use l5-repository.. ",
    "aymanterra": "please try this : \nhttp://api.dev.com:91/v3/tasks?search=development%20tasks;client.country.name:UK;status:active&limit=10&page=1&orderBy=updated_at&sortedBy=desc\nand kindly be noted that: \n- space should be replaced with %20\n- \"&\" means that separation between any two query string parameters and should not used inside the query parameter value. ",
    "M-Abdullahi": "Thank you. That helped a lot. ",
    "khoant88": "Thanks for answer!!!. ",
    "khalilcharfi": "I found a quick (not clean) solution.\nWell, the problem was that the 'datatables' ajax request has the same query key \"search=\" .\nSo the solution was to change this line in the RequestCriteria class:\n$search = $this->request->get(config('repository.criteria.params.search', 'search'), null);\nto\n$search = $this->request->get(config('search1', 'search1'), null);. ",
    "Owen-oj": "You can do this \n$user->posts()->create(['content'=> 'Hello])\nThe only difference between save and create is save accepts full Eloquent model Instance whiles create accepts an array of atttributes. \n Check from the  Laravel Website.. ",
    "tomocy": "That's right.\nI persisted in using repository pattern in controllers haha.\nThanks.. ",
    "joaoroyosilva": "Boa tarde, vc pode fazer assim:\nreturn $this->repository->findWhere([\n            ['maturity', '<=', $date],\n            ['maturity', '>=', date('Y-m-d')]\n        ]);. ",
    "lloricode": "change branch. change branch. ",
    "gsi-alejandro": "It does not work for me in Lumen 5.7 either, it's a pity because it's a very complete library and it provides many facilities for the development of solutions. \nPlease ask them to give an answer as soon as possible about what the problem might be and its possible solution.. ",
    "mrzxy": "You must set up $app->withEloquent(). ",
    "bluemanos": "Walkaround for right now - another criteria ;)\n```php\n<?php\nnamespace App\\Criteria;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Prettus\\Repository\\Contracts\\CriteriaInterface;\nuse Prettus\\Repository\\Contracts\\RepositoryInterface;\n/\n * Class SelectColumnsCriteria.\n \n * @package namespace App\\Criteria;\n /\nclass SelectColumnsCriteria implements CriteriaInterface\n{\n    /\n     * @var array\n     */\n    private $columns;\npublic function __construct(array $columns = ['*'])\n{\n    $this->columns = $columns;\n}\n\n/**\n * Apply criteria in query repository\n *\n * @param Builder $model\n * @param RepositoryInterface $repository\n *\n * @return mixed\n */\npublic function apply($model, RepositoryInterface $repository)\n{\n    return $model->addSelect($this->columns);\n}\n\n}\n```. ",
    "catalin125": "Hi! I think your method doesnt work at all.\nWhen you have multiple relations, you should use the 'with' method with an array given.\nExample: $this->repository->with( ['day', 'days.meal'] )->find($id);. It happens.. Have a nice day! :). ",
    "bddimitrov": "Yep, I just found how stupid I am. Thank you. The problem was that i was not using array.. ",
    "lfukumori": "Why not. Think somethink like //domain?false&another_params or //domain?0=value&another_params is crazy.. "
}