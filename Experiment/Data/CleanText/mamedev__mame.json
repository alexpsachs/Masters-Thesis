{
    "p1pkin": "thanks\n. OK, got it.\nsorry\n. Usually I provide them via e-mail.\nBut roms for this system is/was available for free download from official site (igrosoft.ru, but old versions removed there now), so I think its safe enough post link to external site offering them.\n. Micko, can you give advice: how to avoid unrelated commits in pull request ?\nI've created new branch and made there only one commit I want to submit,\nbut in pull request commits list I still have \"line endings \" \"Merge branch 'master' of https://github.com/mamedev/mame \" etc commits...\n. thank you for explanation\nnote: updated MPR-xxxx roms for kingrt66 set can be get joining old ones ic1.bin+ic2.bin, ic3.bin+ic4.bin etc\nI think there no reason to email them\n. no problem, but how to do that ?\nI've did like Mico explained https://github.com/mamedev/mame/pull/23#issuecomment-60775631\nbut it wont work, this stupid ShitHub still add merge commits to pull request, and there no way to chose what exactly commits of branch I want to merge.\nso what I doing wrong? \n. this is exactly what I did\nmaybe this works for you, because you working with origin repo, but wont work for me because I working with fork\n. thanks\n. f205v, ughh, you must be did this changes in a big hurry -\n- \"new finding\" game name is wrong, you probably copy/pasted my typo from DU mail subject, also I strongly thinking there not needed any unwanted attention to this game, until it will be preserved (or lost).\n- Alien Front not require Comm.Board (but supports it)\n- you missed CR in GAME macro part.\nsorry, but I reject this\n. Re: [mame] NAOMI new finding + plus few cosmetic updates (#196)\n\n\nCrazy Taxi PCB doesnt have X76F100 eeprom\n  I have shown pics from ANY as a proof of the fact that X76F100 at IC37 is present.\n  What is the reason why you say it is NOT present?\n\n\nwhats was my fault (as you can see original msg was edited), with not enough magnification IC37 looked like spare space.\nbtw you got this photo from me ;) found it somewhere on the net\n\nwith best regards\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 MetalliC \u00a0 \u00a0 \u00a0 \u00a0mailto:0vetal0@gmail.com\n. I guess add name to copyright-holders tag was the only goal of this \"contribution\" )\n. is this code created or fully rewritten by you or this is still mostly code from  Mamesick (which I suppose taken from MAME Plus!) ?\n. @f205v at this moment mame.lst must be updated manually if set(s) was added or renamed.\nhowever, this is not place for some documentation in comments anymore, because this comments can be wiped out during some auto-regeneration in future.\n. what the purpose of this ? I was thought such features  (i.e. input-macro type) supposed to be implemented as LUA plugins by nowadays design. \n. can you cut this submission in two pull reqs please ? with separate fixes (which is pretty valid) and new core options (which is questionable)\n. are you sure ?\nlook closely at  jvsdev.cpp jvs_device::message\n        while(s < send_buffer + send_size) {\n            int len = handle_message(s, send_size-(s-send_buffer), d);\nbut indeed we need better and standardized JVS interface code, which will satisfy both HLE and LLE of JVS IO boards.\nbtw, in most cases at the end it is nothing more than UART and 3-state \"sense\" line (used for addressing only).\nI'd bet Chihiro used some motherboard's (or some MCU ?) 165xx-compatible UART for this.\n. does SFX roms labels OK and this can be merged ?\nor perhaps you want commit access back ? ;)\n. why not regular pull request ?\n. I see now, no problem.\njust was curious why diff and why new GitHub account.\ncommited. thank you for contribution.\n. if you have a chance - please correct existing labels according with PCB pic as well\n. pushed, thanks.\n. all occurrences have to be replaced ?\n. ok, done\n. \u0441\u0442\u0440\u0430\u043d\u043d\u043e, \u0443 \u043c\u0435\u043d\u044f\nmake vs2015 SUBTARGET=megadrive SOURCES=src/mame/drivers/megadriv.cpp\n\u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u043f\u0440\u043e\u0435\u043a\u0442\u044b \u0434\u043b\u044f VS, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0442\u043e\u043c \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043a\u043e\u043c\u043f\u0438\u043b\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u0441\u0442\u0443\u0434\u0438\u0435\u0439.\n\u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439 \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c msys64 \u043a\u0430\u043a \u043e\u043f\u0438\u0441\u0430\u043d\u043e \u0442\u0430\u043c http://www.mamedev.org/tools/ \u0432 \u0440\u0430\u0437\u0434\u0435\u043b\u0435 \"Updating build tools\", \u0438 \u0443\u0431\u0440\u0430\u0442\u044c \u0438\u0437 \u0441\u0442\u0440\u043e\u043a\u0438 PYTHON_EXECUTABLE=...  \u043e\u043d \u0443\u0436\u0435 \u043d\u0435 \u043d\u0443\u0436\u0435\u043d.\n. then dealing with constexpr make sure its still OK for VS build, MS compiler seems still have number of bugs in constexpr handling, like this one for example\nhttps://connect.microsoft.com/VisualStudio/feedback/details/3103404/c-constexpr-specifier-leads-to-incorrect-code-generation-if-applied-to-structure-containing-char-array\n. pushed\n. pushed, thank you.\n. \u0434\u0411 is correct abbrev of term \"\u0434\u0435\u0446\u0438\u0431\u0435\u043b\", but there is no abbrev for fps = \"\u043a\u0430\u0434\u0440\u043e\u0432 \u0432 \u0441\u0435\u043a\u0443\u043d\u0434\u0443\" in Russian language, sometimes its called \"\u0444\u043f\u0441\" but its more like slang, not sure if at acceptable in our project.\nin general, I found this submission not acceptable \"as is\", number of terms translated to very specific slang or self-made transliterations, not to reall Russian language, so it will not be understood by regular users/people. other parts (later strings mostly) looks like automatically translated by poedit or similar software, and have wrong context meaning.\nbut here is also number of good translated strings or corrections. I'll try to filter good/bad parts during coming days, before this dev cycle freeze.. @cuavas done. I'm not 100% happy with it but it is good milestone.. ",
    "mmicko": "Guess this will be in new pull request \n. Not needed anymore other fix have been applied\n. Please do your commits in separatw branch on your repo that will make it cleaner without merges. See plgDavids closed pulls.\n. Will ask Carl to review. Please note that if you commit something else to master it will appear in this pull request. Best is to have separate branch per bugfix/change that makes things easier for your at the end,\n. when you do things locally just do:\ngit stash\n(that will save your currently changed files)\ngit pull\ngit stash apply\n(will put back your changes and merge it in local)\nand when you do commit it will be clean\nalso if you do it in branch and not in master you will not get things\noverwritten by other changes\nand I can auto-merge changes\nOn Tue, Oct 28, 2014 at 4:32 PM, MetalliC notifications@github.com wrote:\n\nMicko, can you give advice: how to avoid unrelated commits in pull request\n?\nI've created new branch and made there only one commit I want to submit,\nbut in pull request commits list I still have \"line endings \" \"Merge\nbranch 'master' of https://github.com/mamedev/mame \" etc commits...\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/23#issuecomment-60775173.\n. Add vgmwrite.c and vgmwrite.h ,otherwise it's not possible to try out code\n. This does not belongs to MAME core since it's not related to emulation of sound chips, and require heavy changes and anyway doesn't support latest core capabilities.\n\nSo patch is denied\n. can you please rebase this to current master ?\n. yes that is correct way\nOn Tue, Mar 24, 2015 at 5:39 PM, fulivi notifications@github.com wrote:\n\nHi,\nI've just completed a first version of an Intel Intellec MDS series-II\nsystem emulator for MESS. It is not complete but it's usable.\nSince this is my first contribution to MESS, I'd like to know how to send\nthe relevant ROM images to enable testing, please.\nIs it correct to send everything to code@mamedev.org as suggested in\n\"Submitting source code\" page of MAME wiki? Should I attach everything\ninstead to a pull request ?\nThanks.\nF.Ulivi\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/150\nCommit Summary\n- Added MESS driver for Intel MDS series-II\n- Added imds2 to list file & mess makefile\nFile Changes\n- M src/emu/machine/i8257.c\n  https://github.com/mamedev/mame/pull/150/files#diff-0 (2)\n- A src/mess/drivers/imds2.c\n  https://github.com/mamedev/mame/pull/150/files#diff-1 (739)\n- A src/mess/includes/imds2.h\n  https://github.com/mamedev/mame/pull/150/files#diff-2 (122)\n- M src/mess/mess.lst\n  https://github.com/mamedev/mame/pull/150/files#diff-3 (2)\n- M src/mess/mess.mak\n  https://github.com/mamedev/mame/pull/150/files#diff-4 (1)\nPatch Links:\n- https://github.com/mamedev/mame/pull/150.patch\n- https://github.com/mamedev/mame/pull/150.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/150.\n. If it is not a problem please mail me (email visible on my github email\npage), so I can approve this ASAP\n\nOn Tue, Mar 24, 2015 at 5:54 PM, Miodrag Milanovic mmicko@gmail.com wrote:\n\nyes that is correct way\nOn Tue, Mar 24, 2015 at 5:39 PM, fulivi notifications@github.com wrote:\n\nHi,\nI've just completed a first version of an Intel Intellec MDS series-II\nsystem emulator for MESS. It is not complete but it's usable.\nSince this is my first contribution to MESS, I'd like to know how to send\nthe relevant ROM images to enable testing, please.\nIs it correct to send everything to code@mamedev.org as suggested in\n\"Submitting source code\" page of MAME wiki? Should I attach everything\ninstead to a pull request ?\nThanks.\nF.Ulivi\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/150\nCommit Summary\n- Added MESS driver for Intel MDS series-II\n- Added imds2 to list file & mess makefile\nFile Changes\n- M src/emu/machine/i8257.c\n  https://github.com/mamedev/mame/pull/150/files#diff-0 (2)\n- A src/mess/drivers/imds2.c\n  https://github.com/mamedev/mame/pull/150/files#diff-1 (739)\n- A src/mess/includes/imds2.h\n  https://github.com/mamedev/mame/pull/150/files#diff-2 (122)\n- M src/mess/mess.lst\n  https://github.com/mamedev/mame/pull/150/files#diff-3 (2)\n- M src/mess/mess.mak\n  https://github.com/mamedev/mame/pull/150/files#diff-4 (1)\nPatch Links:\n- https://github.com/mamedev/mame/pull/150.patch\n- https://github.com/mamedev/mame/pull/150.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/150.\n. We will apply this after release, it is just too close to release time.\nSorry\n\n\nOn Wed, Mar 25, 2015 at 3:23 AM, Happy-yappH notifications@github.com\nwrote:\n\n[image: 0012]\nhttps://cloud.githubusercontent.com/assets/11620884/6817200/5283a73e-d263-11e4-88e5-83cc93c5b622.png\n[image: 0022]\nhttps://cloud.githubusercontent.com/assets/11620884/6817204/670a0270-d263-11e4-8369-40268cb914a9.png\n[image: 0023]\nhttps://cloud.githubusercontent.com/assets/11620884/6817206/70b9bf36-d263-11e4-8da0-3c5d69ca64b4.png\n[image: 0040]\nhttps://cloud.githubusercontent.com/assets/11620884/6817216/85f07728-d263-11e4-89c0-fe479bcac33d.png\n[image: 0004]\nhttps://cloud.githubusercontent.com/assets/11620884/6817224/a5fad8c4-d263-11e4-83a9-226b28cbcac5.png\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/151#issuecomment-85789480.\n. ok. I see error but will fix it myself after merge\n. Ok by me too\nOn May 11, 2015 5:00 PM, \"R. Belmont\" notifications@github.com wrote:\nThis looks fine to me, unless Micko or Vas want to object.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/178#issuecomment-100936716.\n. thanks for this, anyway portaudio can be as well system package so you can add that as well\n. Thank you very much for this, and for placing license in new files as well.\n. ok, I have updated code so now CGA is default, works now as before\n\nOn Sat, Sep 5, 2015 at 10:33 PM, shattered notifications@github.com wrote:\n\noops. The default should be CGA, not Mono :-)\n(these errors go away once you flip the Display Switch.)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/295#issuecomment-137993320.\n. Sorry for this Joakim, files are just moved without any change in them so\nit should be straight forward.\n\nMicko\nOn Sun, Sep 13, 2015 at 3:51 PM, R. Belmont notifications@github.com\nwrote:\n\nCan you redo this request against latest top of tree? Micko just moved all\nthe devices around so it won't apply as-is.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/298#issuecomment-139878336.\n. please  pull latest, should be fine now. there was error in python script,\nthanks for report.\n\nMicko\nOn Sun, Sep 13, 2015 at 7:04 PM, Joakim Larsson Edstr\u00f6m \nnotifications@github.com wrote:\n\nNo problem but it didn't build for me for some other reason I think so I\nhope I got it right. Got this message:\nFile \"/home/joakim/work/mame/src/build/makedep.py\", line 290\n```\nsys.stdout.write('      MAME_DIR .. \"src/devices\",\\n')\n^\n```\nIndentationError: unexpected indent\nFile \"/home/joakim/work/mame/src/build/makedep.py\", line 290\n```\nsys.stdout.write('      MAME_DIR .. \"src/devices\",\\n')\n^\n```\nIndentationError: unexpected indent\n/home/joakim/work/mame/scripts/genie.lua:1311: attempt to call a nil value\nstack traceback:\n```\n/home/joakim/work/mame/scripts/genie.lua:1311: in main chunk\n[C]: in upvalue 'builtin_dofile'\n[string \"premake = { }...\"]:74: in function 'dofile'\n[string \"_WORKING_DIR        = os.getcwd()...\"]:41: in function '_premake_main'\n```\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/298#issuecomment-139895148.\n. @dmauri82 please do not do pull requests for contributions that are not yours, and probably not even with approval of original author, we will not consider at all such pull requests. It is all work of @dankan1890 so we all need to respect that.\n. Can you please add commit with lst file and scripts change as well ? Just to make it complete.\n. Hello Vladimir,\n\nAgree it would be great. It is on my TODO list, thing is I would like to\nseparate layers in code before adding such functionality.\nIdea is to use libuv library to handle all communication, and gdb interface\nwould need it as well. If you have experience with such\nexposure or remote debugging features feel free to suggest ideas.\nThanks,\nMicko\nOn Sun, Sep 27, 2015 at 3:31 PM, Vladimir Kryvian notifications@github.com\nwrote:\n\nIt would be great to add remote debugging features to MAME.\nInner debugger is good, sure, but if you have ability to connect to emu\nfrom different machine using gdb protocol, you will be able to use debugger\nwithout any dependency from target machine.\nIs it possible to implement?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/346.\n. Sure, feel free to send pull request.\n\nThanks in advance\nOn Fri, Jan 15, 2016 at 8:31 PM, bradhugh notifications@github.com wrote:\n\nmmicko, I already have some code for this. I'll get it in and send a pull\nrequest.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/396#issuecomment-172061579.\n. Clang on OSX points to this error :\n\n../../../../../src/osd/sdl/sdlptty_unix.c:121:13: error: use of undeclared\nidentifier 'ptsname_r'; did you mean 'ttyname_r'?\n        if (ptsname_r(file->handle , name , name_len) < 0) {\n            ^~~~~~~~~\n            ttyname_r\n/usr/include/unistd.h:483:6: note: 'ttyname_r' declared here\nint      ttyname_r(int, char *, size_t) __DARWIN_ALIAS(ttyname_r);\n         ^\nyou can check it in Travis log of this pull request\nOn Sat, Oct 17, 2015 at 12:51 PM, fulivi notifications@github.com wrote:\n\nHi,\nI've implemented a direct interface between emulated serial lines and\npseudo terminals on ux-like systems. I could only test it under Linux, but\nin principle it should compile & work correctly under BSD and OS-X systems\ntoo.\nWindows & OS/2 has no support for pseudo-terminals (as they are intended\non unix-like systems): opening a pty there will always result in failure.\nThanks.\n-- F.Ulivi\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/401\nCommit Summary\n- pty: first step of pseudo terminal implementation\n- pty: seems ok (linux only)\n- pty: fixed for mame0166 release\n- pty: put a stopper in windows & osdmini versions of OSD as they don't\nFile Changes\n- M scripts/src/bus.lua\n  https://github.com/mamedev/mame/pull/401/files#diff-0 (2)\n- M scripts/src/emu.lua\n  https://github.com/mamedev/mame/pull/401/files#diff-1 (4)\n- A src/devices/bus/rs232/pty.c\n  https://github.com/mamedev/mame/pull/401/files#diff-2 (138)\n- A src/devices/bus/rs232/pty.h\n  https://github.com/mamedev/mame/pull/401/files#diff-3 (52)\n- M src/devices/bus/rs232/rs232.c\n  https://github.com/mamedev/mame/pull/401/files#diff-4 (2)\n- A src/emu/dipty.c\n  https://github.com/mamedev/mame/pull/401/files#diff-5 (85)\n- A src/emu/dipty.h\n  https://github.com/mamedev/mame/pull/401/files#diff-6 (48)\n- M src/emu/emu.h\n  https://github.com/mamedev/mame/pull/401/files#diff-7 (1)\n- A src/emu/ui/info_pty.c\n  https://github.com/mamedev/mame/pull/401/files#diff-8 (44)\n- A src/emu/ui/info_pty.h\n  https://github.com/mamedev/mame/pull/401/files#diff-9 (24)\n- M src/emu/ui/mainmenu.c\n  https://github.com/mamedev/mame/pull/401/files#diff-10 (9)\n- M src/emu/ui/mainmenu.h\n  https://github.com/mamedev/mame/pull/401/files#diff-11 (3)\n- M src/osd/osdcore.h\n  https://github.com/mamedev/mame/pull/401/files#diff-12 (19)\n- M src/osd/osdmini/minifile.c\n  https://github.com/mamedev/mame/pull/401/files#diff-13 (8)\n- M src/osd/sdl/sdlfile.c\n  https://github.com/mamedev/mame/pull/401/files#diff-14 (19)\n- M src/osd/sdl/sdlfile.h\n  https://github.com/mamedev/mame/pull/401/files#diff-15 (1)\n- M src/osd/sdl/sdlptty_os2.c\n  https://github.com/mamedev/mame/pull/401/files#diff-16 (5)\n- M src/osd/sdl/sdlptty_unix.c\n  https://github.com/mamedev/mame/pull/401/files#diff-17 (120)\n- M src/osd/windows/winfile.c\n  https://github.com/mamedev/mame/pull/401/files#diff-18 (8)\nPatch Links:\n- https://github.com/mamedev/mame/pull/401.patch\n- https://github.com/mamedev/mame/pull/401.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/401.\n. For now you can add compile time check and disable this call for OSX.\n\nOn Sat, Oct 17, 2015 at 3:25 PM, Miodrag Milanovic mmicko@gmail.com wrote:\n\nClang on OSX points to this error :\n../../../../../src/osd/sdl/sdlptty_unix.c:121:13: error: use of undeclared\nidentifier 'ptsname_r'; did you mean 'ttyname_r'?\n        if (ptsname_r(file->handle , name , name_len) < 0) {\n            ^~~~~~~~~\n            ttyname_r\n/usr/include/unistd.h:483:6: note: 'ttyname_r' declared here\nint      ttyname_r(int, char *, size_t) __DARWIN_ALIAS(ttyname_r);\n         ^\nyou can check it in Travis log of this pull request\nOn Sat, Oct 17, 2015 at 12:51 PM, fulivi notifications@github.com wrote:\n\nHi,\nI've implemented a direct interface between emulated serial lines and\npseudo terminals on ux-like systems. I could only test it under Linux, but\nin principle it should compile & work correctly under BSD and OS-X systems\ntoo.\nWindows & OS/2 has no support for pseudo-terminals (as they are intended\non unix-like systems): opening a pty there will always result in failure.\nThanks.\n-- F.Ulivi\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/401\nCommit Summary\n- pty: first step of pseudo terminal implementation\n- pty: seems ok (linux only)\n- pty: fixed for mame0166 release\n- pty: put a stopper in windows & osdmini versions of OSD as they\n  don't\nFile Changes\n- M scripts/src/bus.lua\n  https://github.com/mamedev/mame/pull/401/files#diff-0 (2)\n- M scripts/src/emu.lua\n  https://github.com/mamedev/mame/pull/401/files#diff-1 (4)\n- A src/devices/bus/rs232/pty.c\n  https://github.com/mamedev/mame/pull/401/files#diff-2 (138)\n- A src/devices/bus/rs232/pty.h\n  https://github.com/mamedev/mame/pull/401/files#diff-3 (52)\n- M src/devices/bus/rs232/rs232.c\n  https://github.com/mamedev/mame/pull/401/files#diff-4 (2)\n- A src/emu/dipty.c\n  https://github.com/mamedev/mame/pull/401/files#diff-5 (85)\n- A src/emu/dipty.h\n  https://github.com/mamedev/mame/pull/401/files#diff-6 (48)\n- M src/emu/emu.h\n  https://github.com/mamedev/mame/pull/401/files#diff-7 (1)\n- A src/emu/ui/info_pty.c\n  https://github.com/mamedev/mame/pull/401/files#diff-8 (44)\n- A src/emu/ui/info_pty.h\n  https://github.com/mamedev/mame/pull/401/files#diff-9 (24)\n- M src/emu/ui/mainmenu.c\n  https://github.com/mamedev/mame/pull/401/files#diff-10 (9)\n- M src/emu/ui/mainmenu.h\n  https://github.com/mamedev/mame/pull/401/files#diff-11 (3)\n- M src/osd/osdcore.h\n  https://github.com/mamedev/mame/pull/401/files#diff-12 (19)\n- M src/osd/osdmini/minifile.c\n  https://github.com/mamedev/mame/pull/401/files#diff-13 (8)\n- M src/osd/sdl/sdlfile.c\n  https://github.com/mamedev/mame/pull/401/files#diff-14 (19)\n- M src/osd/sdl/sdlfile.h\n  https://github.com/mamedev/mame/pull/401/files#diff-15 (1)\n- M src/osd/sdl/sdlptty_os2.c\n  https://github.com/mamedev/mame/pull/401/files#diff-16 (5)\n- M src/osd/sdl/sdlptty_unix.c\n  https://github.com/mamedev/mame/pull/401/files#diff-17 (120)\n- M src/osd/windows/winfile.c\n  https://github.com/mamedev/mame/pull/401/files#diff-18 (8)\nPatch Links:\n- https://github.com/mamedev/mame/pull/401.patch\n- https://github.com/mamedev/mame/pull/401.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/401.\n. if you wait a bit you can see status of build at: https://travis-ci.org/mamedev/mame/builds/85922028\n\n\nlast two are those that should be of interest to you\n. Please do, it would be great.\nMicko\nOn Sun, Jan 31, 2016 at 7:21 PM, Brad Hughes notifications@github.com\nwrote:\n\nI've got a good start on this work, but to port properly, need to refactor\nand modularize existing windows input methods RawInput, DirectInput, and\nWin32. If you want me to take this on, I can work on it.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/403#issuecomment-177569481.\n. This is done by Brad\n. Based on images, not not measurements, therefore closed\n. These are part of bgfx official distribution, so please send it there.\n. Thanks a lot.\n\nOn Fri, Nov 13, 2015 at 1:45 PM, Thomas Klausner notifications@github.com\nwrote:\n\nDone: bkaradzic/bgfx#571 https://github.com/bkaradzic/bgfx/pull/571\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/463#issuecomment-156423518.\n. Have sent you email, but please provide ROM in order to complete these pull\nrequest.\nMy mail is visible on my github page.\nThanks,\nMicko\n\nOn Fri, Nov 27, 2015 at 8:04 AM, Jean-Fran\u00e7ois DEL NERO \nnotifications@github.com wrote:\n\nSound support added.\nBank switching for monitor >2RX added.\nACIA instance added.\nPIAs instances added.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/478\nCommit Summary\n- Monitor V1.2 EPROM support added.\nFile Changes\n- M src/mame/drivers/squale.cpp\n  https://github.com/mamedev/mame/pull/478/files#diff-0 (81)\nPatch Links:\n- https://github.com/mamedev/mame/pull/478.patch\n- https://github.com/mamedev/mame/pull/478.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/478.\n. Since sqlite3 is external, I suggest change in scripts\\genie.lua\n\nif (version >= 30200) then\n                buildoptions {\n                    \"-Wno-unused-value\",\n                }\n            end\nguess version >= 30000  should fix this. Please inform me \n. Thank you for your hard work. But please note few things.\nChange in vector.cpp is system dependent so will not compile on Windows,\nthere are osd calls used to open file, socket or ptty that you can use.\nI have also commented other changes so please review them.\nWould like also to suggest usage of clang 3.6 that you can get from\nmacports for better compatibility, also would need that probably for next\nrelease already.\nOn Fri, Nov 27, 2015 at 11:57 PM, Trammell Hudson notifications@github.com\nwrote:\n\nThis patch adds output of the vector line segments to the serial port in a\nformat that the v.st vector display board will parse. This allows display\nof the emulated games on real vector hardware like oscilloscopes,\nvectorscopes and slower XY monitors like the Vectrex. It adds runtime\noptions to set the serial port, the scaling and the rotation of the\ndisplay. More info: https://trmm.net/MAME\nThis patch also adds a SUBTARGET=vector to build just the vector games\nand CPUs, which shortens the build time from hours to a few minutes.\n[image: Starwars on a vectorscope and a Vectrex]\nhttps://camo.githubusercontent.com/b0824c5a1ae4dd4aaaf9e4a8230b0ed521ce3286/68747470733a2f2f34392e6d656469612e74756d626c722e636f6d2f65346632353836646439346364333662656565323731666439306538613963632f74756d626c725f6e786773336771634d63317336773671376f315f3530302e676966\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/483\nCommit Summary\n- silence warnings on OSX clang3.0 (issue #480)\n- add casts from emu_file to core_file (issue #482)\n- Fix \"use of constant operatand with &&\" on osx\n- Add output of vectors to a device on the serial port.\nFile Changes\n- M 3rdparty/sqlite3/sqlite3.c\n  https://github.com/mamedev/mame/pull/483/files#diff-0 (6)\n- A scripts/target/mame/vector.lua\n  https://github.com/mamedev/mame/pull/483/files#diff-1 (392)\n- M scripts/toolchain.lua\n  https://github.com/mamedev/mame/pull/483/files#diff-2 (1)\n- M src/devices/sound/samples.cpp\n  https://github.com/mamedev/mame/pull/483/files#diff-3 (2)\n- M src/emu/emuopts.cpp\n  https://github.com/mamedev/mame/pull/483/files#diff-4 (6)\n- M src/emu/emuopts.h\n  https://github.com/mamedev/mame/pull/483/files#diff-5 (8)\n- M src/emu/video/vector.cpp\n  https://github.com/mamedev/mame/pull/483/files#diff-6 (232)\n- M src/emu/video/vector.h\n  https://github.com/mamedev/mame/pull/483/files#diff-7 (32)\n- A src/mame/vector.lst\n  https://github.com/mamedev/mame/pull/483/files#diff-8 (66)\nPatch Links:\n- https://github.com/mamedev/mame/pull/483.patch\n- https://github.com/mamedev/mame/pull/483.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/483.\n. Error on clang:\n\n../../../../../src/mame/drivers/squale.cpp:125:23: error: private\nfield 'm_floppy' is not used [-Werror,-Wunused-private-field]\n```\n    floppy_image_device *m_floppy;\n                     ^\n\n```\nOn Sun, Dec 6, 2015 at 11:26 AM, Jean-Fran\u00e7ois DEL NERO \nnotifications@github.com wrote:\n\nSquale keyboard added : The user can now have some interactions with the\nmachine.\nWD1770 FDC added.\nEF9365 emulation improved : 5x8 and 4x4 Blocks drawing support added.\nSquale machine turned as working.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/488\nCommit Summary\n- Keyboard support added !\n- block drawing support added.\n- WD1770 FDC support added (Work In Progress).\n- Change the machine tags as working :).\nFile Changes\n- M src/devices/video/ef9365.cpp\n  https://github.com/mamedev/mame/pull/488/files#diff-0 (56)\n- M src/devices/video/ef9365.h\n  https://github.com/mamedev/mame/pull/488/files#diff-1 (2)\n- M src/mame/drivers/squale.cpp\n  https://github.com/mamedev/mame/pull/488/files#diff-2 (336)\nPatch Links:\n- https://github.com/mamedev/mame/pull/488.patch\n- https://github.com/mamedev/mame/pull/488.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/488.\n. thanks for this\n. yes, there is need for new pull\n. Please rebase. Can not do auto merge\n. I have done lot of changes on all files. So best just rebase on latest\n. Found where issue is, so will merge and then fix\n. ups, it does not compile\n\nOn Mon, Dec 21, 2015 at 5:04 PM, Vittorio Romeo notifications@github.com\nwrote:\n\n\nUse variadic template functions instead of va_list\nIn x86log_mark_as_data and x86log_printf\nAdd noexcept where appropriate/safe\nUse constexpr std::size_t instead of macros for constants\nNest nullptr check to prevent useless check, add assertion\nIn x86log_printf\n\n(Hope variadic templates are OK!)\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/516\nCommit Summary\n- Modernize x86log.h and x86log.cpp:\n- Modernize x86log.h and x86log.cpp:\n- Merge branch 'master' of https://github.com/SuperV1234/mame\nFile Changes\n- M src/devices/cpu/x86log.cpp\n  https://github.com/mamedev/mame/pull/516/files#diff-0 (77)\n- M src/devices/cpu/x86log.h\n  https://github.com/mamedev/mame/pull/516/files#diff-1 (71)\nPatch Links:\n- https://github.com/mamedev/mame/pull/516.patch\n- https://github.com/mamedev/mame/pull/516.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/516.\n. In file included from ../../../../../src/devices/cpu/drcbex86.h:18:0,\n                 from ../../../../../src/devices/cpu/drcuml.cpp:40:\n../../../../../src/devices/cpu/x86log.h: In function 'void\nx86log_add_comment(x86log_context_, x86code_, const char_, Ts&& ...)':\n../../../../../src/devices/cpu/x86log.h:60:20: error: invalid use of\nincomplete type 'struct x86log_context'\n  char string = log->comment_pool_next;\n                    ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\nIn file included from ../../../../../src/devices/cpu/x86log.cpp:13:0:\n../../../../../src/devices/cpu/x86log.h:61:2: error: 'log_comment' was not\ndeclared in this scope\n  log_comment comment;\n  ^\n../../../../../src/devices/cpu/x86log.h: In function 'void\nx86log_add_comment(x86log_context_, x86code_, const char_, Ts&& ...)':\n../../../../../src/devices/cpu/x86log.h:61:15: error: 'comment' was not\ndeclared in this scope\n../../../../../src/devices/cpu/x86log.h:60:20: error: invalid use of\nincomplete type 'struct x86log_context'\n  log_comment _comment;\n               ^\n  char string = log->comment_pool_next;\n                    ^\n../../../../../src/devices/cpu/x86log.h:70:9: error: invalid use of\nincomplete type 'struct x86log_context'\n  if (log->comment_count >= MAX_COMMENTS)\n         ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:70:28: error: 'MAX_COMMENTS' was\nnot declared in this scope\n  if (log->comment_count >= MAX_COMMENTS)\n                            ^\n../../../../../src/devices/cpu/x86log.h:72:9: error: invalid use of\nincomplete type 'struct x86log_context'\n  if (log->comment_pool_next + strlen(format) + 256 >= log->comment_pool +\nCOMMENT_POOL_SIZE)\n         ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:72:58: error: invalid use of\nincomplete type 'struct x86log_context'\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n  if (log->comment_pool_next + strlen(format) + 256 >= log->comment_pool +\nCOMMENT_POOL_SIZE)\n struct x86log_context;\n                                                          ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n        ^\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:72:75: error: 'COMMENT_POOL_SIZE'\nwas not declared in this scope\n  if (log->comment_pool_next + strlen(format) + 256 >= log->comment_pool +\nCOMMENT_POOL_SIZE)\n                                                                           ^\n../../../../../src/devices/cpu/x86log.h:76:5: error: invalid use of\nincomplete type 'struct x86log_context'\n  log->comment_pool_next += sprintf(log->comment_pool_next, format,\nstd::forward(xs)...) + 1;\n     ^\n../../../../../src/devices/cpu/x86log.h:61:2: error: 'log_comment' was not\ndeclared in this scope\n  log_comment comment;\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:76:39: error: invalid use of\nincomplete type 'struct x86log_context'\n  ^\n  log->comment_pool_next += sprintf(log->comment_pool_next, format,\nstd::forward(xs)...) + 1;\n                                       ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:61:15: error: 'comment' was not\ndeclared in this scope\n../../../../../src/devices/cpu/x86log.h:79:16: error: invalid use of\nincomplete type 'struct x86log_context'\n  comment = &log->comment_list[log->comment_count++];\n                ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n  log_comment comment;\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:79:34: error: invalid use of\nincomplete type 'struct x86log_context'\n  comment = &log->comment_list[log->comment_count++];\n                                  ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\n               ^\n../../../../../src/devices/cpu/x86log.h: In function 'void\nx86log_printf(x86log_context_, const char_, Ts&& ...)':\n../../../../../src/devices/cpu/x86log.h:94:9: error: invalid use of\nincomplete type 'struct x86log_context'\n  if (log->file == nullptr)\n         ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:96:6: error: invalid use of\nincomplete type 'struct x86log_context'\n   log->file = fopen(log->filename.c_str(), \"w\");\n      ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:96:24: error: invalid use of\nincomplete type 'struct x86log_context'\n   log->file = fopen(log->filename.c_str(), \"w\");\n                        ^\n../../../../../src/devices/cpu/x86log.h:70:9: error: invalid use of\nincomplete type 'struct x86log_context'\n  if (log->comment_count >= MAX_COMMENTS)\n         ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:98:10: error: invalid use of\nincomplete type 'struct x86log_context'\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n   if (log->file == nullptr)\n struct x86log_context;\n          ^\n        ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:70:28: error: 'MAX_COMMENTS' was\nnot declared in this scope\n../../../../../src/devices/cpu/x86log.h:105:13: error: invalid use of\nincomplete type 'struct x86log_context'\n  if (log->comment_count >= MAX_COMMENTS)\n  fprintf(log->file, format, std::forward(xs)...);\n             ^\u266a\u25d9../../../../../src/devices/cpu/x86log.h:23:8: note: forward\ndeclaration of 'struct x86log_context'\n struct x86log_context;\n        ^\n                            ^\n../../../../../src/devices/cpu/x86log.h:108:12: error: invalid use of\nincomplete type 'struct x86log_context'\n  fflush(log->file);\n            ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n../../../../../src/devices/cpu/x86log.h:72:9: error: invalid use of\nincomplete type 'struct x86log_context'\n  if (log->comment_pool_next + strlen(format) + 256 >= log->comment_pool +\nCOMMENT_POOL_SIZE)\n        ^\n         ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:72:58: error: invalid use of\nincomplete type 'struct x86log_context'\n  if (log->comment_pool_next + strlen(format) + 256 >= log->comment_pool +\nCOMMENT_POOL_SIZE)\n                                                          ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:72:75: error: 'COMMENT_POOL_SIZE'\nwas not declared in this scope\n  if (log->comment_pool_next + strlen(format) + 256 >= log->comment_pool +\nCOMMENT_POOL_SIZE)\n                                                                           ^\n../../../../../src/devices/cpu/x86log.h:76:5: error: invalid use of\nincomplete type 'struct x86log_context'\n  log->comment_pool_next += sprintf(log->comment_pool_next, format,\nstd::forward(xs)...) + 1;\n     ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:76:39: error: invalid use of\nincomplete type 'struct x86log_context'\n  log->comment_pool_next += sprintf(log->comment_pool_next, format,\nstd::forward(xs)...) + 1;\n                                       ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:79:16: error: invalid use of\nincomplete type 'struct x86log_context'\n  comment = &log->comment_list[log->comment_count++];\n                ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:79:34: error: invalid use of\nincomplete type 'struct x86log_context'\n  comment = &log->comment_list[log->comment_count++];\n                                  ^\nIn file included from ../../../../../src/devices/cpu/drcbex86.h:18:0,\n                 from ../../../../../src/devices/cpu/drcbex86.cpp:89:\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n../../../../../src/devices/cpu/x86log.h: In function 'void\nx86log_add_comment(x86log_context_, x86code_, const char_, Ts&& ...)':\n struct x86log_context;\n../../../../../src/devices/cpu/x86log.h:60:20: error: invalid use of\nincomplete type 'struct x86log_context'\n        ^\n  char string = log->comment_pool_next;\n                    ^\nIn file included from ../../../../../src/devices/cpu/drcbex64.h:18:0,\n                 from ../../../../../src/devices/cpu/drcbex64.cpp:173:\n../../../../../src/devices/cpu/x86log.h: In function 'void\nx86log_add_comment(x86log_context, x86code_, const char_, Ts&& ...)':\n../../../../../src/devices/cpu/x86log.h: In function 'void\nx86log_printf(x86log_context_, const char_, Ts&& ...)':\n../../../../../src/devices/cpu/x86log.h:60:20: error: invalid use of\nincomplete type 'struct x86log_context'\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n../../../../../src/devices/cpu/x86log.h:94:9: error: invalid use of\nincomplete type 'struct x86log_context'\n  if (log->file == nullptr)\n struct x86log_context;\n  char string = log->comment_pool_next;\n         ^\n        ^\n                    ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n../../../../../src/devices/cpu/x86log.h:61:2: error: 'log_comment' was not\ndeclared in this scope\n struct x86log_context;\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:61:2: error: 'log_comment' was not\ndeclared in this scope\n  log_comment comment;\n  ^\n../../../../../src/devices/cpu/x86log.h:61:15: error: 'comment' was not\ndeclared in this scope\n  log_comment comment;\n        ^\n  log_comment comment;\n               ^\n../../../../../src/devices/cpu/x86log.h:70:9: error: invalid use of\nincomplete type 'struct x86log_context'\n  ^\n  if (log->comment_count >= MAX_COMMENTS)\n../../../../../src/devices/cpu/x86log.h:96:6: error: invalid use of\nincomplete type 'struct x86log_context'\n         ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:70:28: error: 'MAX_COMMENTS' was\nnot declared in this scope\n  if (log->comment_count >= MAX_COMMENTS)\n                            ^\n../../../../../src/devices/cpu/x86log.h:61:15: error: 'comment' was not\ndeclared in this scope\n   log->file = fopen(log->filename.c_str(), \"w\");\n../../../../../src/devices/cpu/x86log.h:72:9: error: invalid use of\nincomplete type 'struct x86log_context'\n  if (log->comment_pool_next + strlen(format) + 256 >= log->comment_pool +\nCOMMENT_POOL_SIZE)\n         ^\n      ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n  log_comment comment;\n struct x86log_context;\n               ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\n        ^\n../../../../../src/devices/cpu/x86log.h:72:58: error: invalid use of\nincomplete type 'struct x86log_context'\n  if (log->comment_pool_next + strlen(format) + 256 >= log->comment_pool +\nCOMMENT_POOL_SIZE)\n                                                          ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:72:75: error: 'COMMENT_POOL_SIZE'\nwas not declared in this scope\n../../../../../src/devices/cpu/x86log.h:70:9: error: invalid use of\nincomplete type 'struct x86log_context'\n  if (log->comment_pool_next + strlen(format) + 256 >= log->comment_pool +\nCOMMENT_POOL_SIZE)\n                                                                           ^\n../../../../../src/devices/cpu/x86log.h:76:5: error: invalid use of\nincomplete type 'struct x86log_context'\n../../../../../src/devices/cpu/x86log.h:96:24: error: invalid use of\nincomplete type 'struct x86log_context'\n  if (log->comment_count >= MAX_COMMENTS)\n  log->comment_pool_next += sprintf(log->comment_pool_next, format,\nstd::forward(xs)...) + 1;\n     ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n   log->file = fopen(log->filename.c_str(), \"w\");\n         ^\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:76:39: error: invalid use of\nincomplete type 'struct x86log_context'\n  log->comment_pool_next += sprintf(log->comment_pool_next, format,\nstd::forward(xs)...) + 1;\n                        ^\n                                       ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n struct x86log_context;\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n        ^\n        ^\n../../../../../src/devices/cpu/x86log.h:79:16: error: invalid use of\nincomplete type 'struct x86log_context'\n  comment = &log->comment_list[log->comment_count++];\n                ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:79:34: error: invalid use of\nincomplete type 'struct x86log_context'\n  comment = &log->comment_list[log->comment_count++];\n\n^\u266a\u25d9../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration\nof 'struct x86log_context'\n struct x86log_context;\n        ^\n struct x86log_context;\n../../../../../src/devices/cpu/x86log.h:70:28: error: 'MAX_COMMENTS' was\nnot declared in this scope\n../../../../../src/devices/cpu/x86log.h: In function 'void\nx86log_printf(x86log_context_, const char_, Ts&& ...)':\n../../../../../src/devices/cpu/x86log.h:94:9: error: invalid use of\nincomplete type 'struct x86log_context'\n  if (log->file == nullptr)\n         ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:96:6: error: invalid use of\nincomplete type 'struct x86log_context'\n        ^\n  if (log->comment_count >= MAX_COMMENTS)\n   log->file = fopen(log->filename.c_str(), \"w\");\n      ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n                            ^\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:96:24: error: invalid use of\nincomplete type 'struct x86log_context'\n   log->file = fopen(log->filename.c_str(), \"w\");\n../../../../../src/devices/cpu/x86log.h:98:10: error: invalid use of\nincomplete type 'struct x86log_context'\n                        ^\n   if (log->file == nullptr)\u266a\u25d9../../../../../src/devices/cpu/x86log.h:72:9:\nerror: invalid use of incomplete type 'struct x86log_context'\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n          ^\n  if (log->comment_pool_next + strlen(format) + 256 >= log->comment_pool +\nCOMMENT_POOL_SIZE)\n        ^\n../../../../../src/devices/cpu/x86log.h:98:10: error: invalid use of\nincomplete type 'struct x86log_context'\n   if (log->file == nullptr)\n          ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\n         ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n../../../../../src/devices/cpu/x86log.h:105:13: error: invalid use of\nincomplete type 'struct x86log_context'\n struct x86log_context;\n  fprintf(log->file, format, std::forward(xs)...);\n             ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\n struct x86log_context;\n../../../../../src/devices/cpu/x86log.h:108:12: error: invalid use of\nincomplete type 'struct x86log_context'\n        ^\n        ^\n  fflush(log->file);\n            ^\n../../../../../src/devices/cpu/x86log.h:105:13: error: invalid use of\nincomplete type 'struct x86log_context'\n../../../../../src/devices/cpu/x86log.h:72:58: error: invalid use of\nincomplete type 'struct x86log_context'\n  fprintf(log->file, format, std::forward(xs)...);\n  if (log->comment_pool_next + strlen(format) + 256 >= log->comment_pool +\nCOMMENT_POOL_SIZE)\n             ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n                                                          ^\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n        ^\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:108:12: error: invalid use of\nincomplete type 'struct x86log_context'\n../../../../../src/devices/cpu/x86log.h:72:75: error: 'COMMENT_POOL_SIZE'\nwas not declared in this scope\n  fflush(log->file);\n  if (log->comment_pool_next + strlen(format) + 256 >= log->comment_pool +\nCOMMENT_POOL_SIZE)\n            ^\n                                                                           ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n../../../../../src/devices/cpu/x86log.h:76:5: error: invalid use of\nincomplete type 'struct x86log_context'\n struct x86log_context;\n  log->comment_pool_next += sprintf(log->comment_pool_next, format,\nstd::forward(xs)...) + 1;\n        ^\n     ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:76:39: error: invalid use of\nincomplete type 'struct x86log_context'\n  log->comment_pool_next += sprintf(log->comment_pool_next, format,\nstd::forward(xs)...) + 1;\n                                       ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\noptional.make:4611: recipe for target\n'../../../../mingw-gcc/obj/x64/Release/src/devices/cpu/drcuml.o' failed\n struct x86log_context;\n        ^\nmake[2]: \n[../../../../mingw-gcc/obj/x64/Release/src/devices/cpu/drcuml.o] Error 1\n../../../../../src/devices/cpu/x86log.h:79:16: error: invalid use of\nincomplete type 'struct x86log_context'\n  comment = &log->comment_list[log->comment_count++];\n                ^\nmake[2]: ** Waiting for unfinished jobs....\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:79:34: error: invalid use of\nincomplete type 'struct x86log_context'\n  comment = &log->comment_list[log->comment_count++];\n                                  ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\noptional.make:4623: recipe for target\n'../../../../mingw-gcc/obj/x64/Release/src/devices/cpu/x86log.o' failed\n../../../../../src/devices/cpu/x86log.h: In function 'void\nx86log_printf(x86log_context_, const char_, Ts&& ...)':\n../../../../../src/devices/cpu/x86log.h:94:9: error: invalid use of\nincomplete type 'struct x86log_context'\n  if (log->file == nullptr)\nmake[2]: *\n[../../../../mingw-gcc/obj/x64/Release/src/devices/cpu/x86log.o] Error 1\u266a\u25d9\n        ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:96:6: error: invalid use of\nincomplete type 'struct x86log_context'\n   log->file = fopen(log->filename.c_str(), \"w\");\n      ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:96:24: error: invalid use of\nincomplete type 'struct x86log_context'\n   log->file = fopen(log->filename.c_str(), \"w\");\n                        ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:98:10: error: invalid use of\nincomplete type 'struct x86log_context'\n   if (log->file == nullptr)\n          ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:105:13: error: invalid use of\nincomplete type 'struct x86log_context'\n  fprintf(log->file, format, std::forward(xs)...);\n             ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\n../../../../../src/devices/cpu/x86log.h:108:12: error: invalid use of\nincomplete type 'struct x86log_context'\n  fflush(log->file);\n            ^\n../../../../../src/devices/cpu/x86log.h:23:8: note: forward declaration of\n'struct x86log_context'\n struct x86log_context;\n        ^\nAfter I placed x86log_context from cpp to h I get :\nCompiling src/devices/cpu/drcbex86.cpp...\nIn file included from ../../../../../src/devices/cpu/drcbex64.h:18:0,\n                 from ../../../../../src/devices/cpu/drcbex64.cpp:173:\n../../../../../src/devices/cpu/x86log.h: In instantiation of 'void\nx86log_printf(x86log_context_, const char_, Ts&& ...) [with Ts = {}]':\n../../../../../src/devices/cpu/drcbex64.cpp:683:71:   required from here\n../../../../../src/devices/cpu/x86log.h:144:9: error: format not a string\nliteral and no format arguments [-Werror=format-security]\n  fprintf(log->file, format, std::forward(xs)...);\n         ^\nIn file included from ../../../../../src/devices/cpu/drcbex86.h:18:0,\n                 from ../../../../../src/devices/cpu/drcbex86.cpp:89:\n../../../../../src/devices/cpu/x86log.h: In instantiation of 'void\nx86log_printf(x86log_context_, const char_, Ts&& ...) [with Ts = {}]':\n../../../../../src/devices/cpu/drcbex86.cpp:597:71:   required from here\n../../../../../src/devices/cpu/x86log.h:144:9: error: format not a string\nliteral and no format arguments [-Werror=format-security]\n  fprintf(log->file, format, std::forward(xs)...);\n         ^\ncc1plus.exe: all warnings being treated as errors\nThis is all on Mingw GCC 5.2\nOn Mon, Dec 21, 2015 at 5:28 PM, Vittorio Romeo notifications@github.com\nwrote:\n\nAny compilation log? It compiles fine here.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/516#issuecomment-166350991.\n. yes I did that (complete const and types section) but then got that other\nerror\n\nCompiling src/devices/cpu/drcbex86.cpp...\nIn file included from ../../../../../src/devices/cpu/drcbex64.h:18:0,\n                 from ../../../../../src/devices/cpu/drcbex64.cpp:173:\n../../../../../src/devices/cpu/x86log.h: In instantiation of 'void\nx86log_printf(x86log_context_, const char_, Ts&& ...) [with Ts = {}]':\n../../../../../src/devices/cpu/drcbex64.cpp:683:71:   required from here\n../../../../../src/devices/cpu/x86log.h:144:9: error: format not a string\nliteral and no format arguments [-Werror=format-security]\n  fprintf(log->file, format, std::forward(xs)...);\n         ^\nIn file included from ../../../../../src/devices/cpu/drcbex86.h:18:0,\n                 from ../../../../../src/devices/cpu/drcbex86.cpp:89:\n../../../../../src/devices/cpu/x86log.h: In instantiation of 'void\nx86log_printf(x86log_context_, const char_, Ts&& ...) [with Ts = {}]':\n../../../../../src/devices/cpu/drcbex86.cpp:597:71:   required from here\n../../../../../src/devices/cpu/x86log.h:144:9: error: format not a string\nliteral and no format arguments [-Werror=format-security]\n  fprintf(log->file, format, std::forward(xs)...);\n         ^\ncc1plus.exe: all warnings being treated as errors\nOn Mon, Dec 21, 2015 at 5:35 PM, Vittorio Romeo notifications@github.com\nwrote:\n\nI see. Would it be acceptable to move the struct definitions of\nlog_comment, data_range_t, x86log_context to the x86_log.h header file\nfrom the x86_log.cpp source file?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/516#issuecomment-166352823.\n. please note we try to be compatible with clang 3.4 and up, gcc 4.9 and up,\nand vs2013 and up\n\nOn Mon, Dec 21, 2015 at 5:46 PM, Miodrag Milanovic mmicko@gmail.com wrote:\n\nyes I did that (complete const and types section) but then got that other\nerror\nCompiling src/devices/cpu/drcbex86.cpp...\nIn file included from ../../../../../src/devices/cpu/drcbex64.h:18:0,\n                 from ../../../../../src/devices/cpu/drcbex64.cpp:173:\n../../../../../src/devices/cpu/x86log.h: In instantiation of 'void\nx86log_printf(x86log_context_, const char_, Ts&& ...) [with Ts = {}]':\n../../../../../src/devices/cpu/drcbex64.cpp:683:71:   required from here\n../../../../../src/devices/cpu/x86log.h:144:9: error: format not a string\nliteral and no format arguments [-Werror=format-security]\n  fprintf(log->file, format, std::forward(xs)...);\n         ^\nIn file included from ../../../../../src/devices/cpu/drcbex86.h:18:0,\n                 from ../../../../../src/devices/cpu/drcbex86.cpp:89:\n../../../../../src/devices/cpu/x86log.h: In instantiation of 'void\nx86log_printf(x86log_context_, const char_, Ts&& ...) [with Ts = {}]':\n../../../../../src/devices/cpu/drcbex86.cpp:597:71:   required from here\n../../../../../src/devices/cpu/x86log.h:144:9: error: format not a string\nliteral and no format arguments [-Werror=format-security]\n  fprintf(log->file, format, std::forward(xs)...);\n         ^\ncc1plus.exe: all warnings being treated as errors\nOn Mon, Dec 21, 2015 at 5:35 PM, Vittorio Romeo notifications@github.com\nwrote:\n\nI see. Would it be acceptable to move the struct definitions of\nlog_comment, data_range_t, x86log_context to the x86_log.h header file\nfrom the x86_log.cpp source file?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/516#issuecomment-166352823.\n. We used TravisCI but that one just can't cope with our code, it requires\ntoo much time to compile on those VM's.\n\n\nPlease use SUBTARGET=dummy while testing , it will at least compile all\ndevices and that covers lot usage cases. But making full build is always\nonly way to know all compiles.\nOn Mon, Dec 21, 2015 at 6:11 PM, Vittorio Romeo notifications@github.com\nwrote:\n\nYou're right - I was compiling with SUBTARGET=tiny. This commit\nhttps://github.com/SuperV1234/mame/commit/ed48c2cabbe1cbc12a8c3c57c77a75f33d499633\nfixes the compilation errors on my machine.\nAlso, continuous integration would greatly help - is there any plan of\nusing it?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/516#issuecomment-166362381.\n. If you could please rebase and create new pull request, I would do manual\nmerge from my side and check if all compiles.\n\nPlease note that I have revert original changes on main trunk.\nOn Mon, Dec 21, 2015 at 6:15 PM, Miodrag Milanovic mmicko@gmail.com wrote:\n\nWe used TravisCI but that one just can't cope with our code, it requires\ntoo much time to compile on those VM's.\nPlease use SUBTARGET=dummy while testing , it will at least compile all\ndevices and that covers lot usage cases. But making full build is always\nonly way to know all compiles.\nOn Mon, Dec 21, 2015 at 6:11 PM, Vittorio Romeo notifications@github.com\nwrote:\n\nYou're right - I was compiling with SUBTARGET=tiny. This commit\nhttps://github.com/SuperV1234/mame/commit/ed48c2cabbe1cbc12a8c3c57c77a75f33d499633\nfixes the compilation errors on my machine.\nAlso, continuous integration would greatly help - is there any plan of\nusing it?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/516#issuecomment-166362381.\n. passes gcc 5.2 and vs2015, will check clang now\n. Thanks, but problem is not there. it is in DRC  part, will take care of\nthat.\nIt is related to mixing unique_ptr with our auto_alloc system\n\n\nOn Wed, Dec 23, 2015 at 7:03 PM, Vittorio Romeo notifications@github.com\nwrote:\n\nI'm still looking into any possible mistake - is it possible that\nsimple_list was being used polymorphically somewhere?\nIt had a virtual destructor that I changed into a non-virtual destructor\nin aa6d4d0\nhttps://github.com/mamedev/mame/commit/aa6d4d0b882c86dc5e55e0dcf68884c6a588797b,\nbecause I could not find any polymorphically usage of simple_list in the\ncodebase.\nAssuming I missed such usages: could you try if reintroducing virtual in\n~simple_list\nvirtual ~simple_list() noexcept { reset(); }\nand check if the crash still occurs?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/517#issuecomment-166959770.\n. Can you please make pull request again and send rom and other files on my email ?\n. Sure this is fine. It would not work on old tools since it used win threading and those did not have proper implementation for std::thread and std::mutex\n. aware of that one, preferred solution is always standard supported by\ncompiler itself\n\nOn Wed, Jan 6, 2016 at 9:17 AM, Jeffrey Clark notifications@github.com\nwrote:\n\nhttps://github.com/meganz/mingw-std-threads works well for those\nsituations.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/552#issuecomment-169264181.\n. Had to make state_string_export  non-const again, due to compile error with\ndevcb, please note that devcb_read does not mean that it will not change\nstate, so even if it works\nit can't be const in all cases.\n\nOn Mon, Jan 11, 2016 at 3:32 AM, Miso Kim notifications@github.com wrote:\n\nIt seems to be reasonable to change the code.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/561#issuecomment-170418685.\n. @StefanJokisch @notaz Sorry to contact you like this, but idea is to get response from you about setting license to drivers you are copyright owner or share ownership with someone at MAME project.\nMost of files are now BSD3, but we respect wish of all developers, and we allow GPL-2.0+ and LGPL-2.1+\n. Thanks a lot\n\nOn Wed, Jan 13, 2016 at 7:55 PM, StefanJokisch notifications@github.com\nwrote:\n\nMiodrag, I'm fine with changing the license for my MAME contributions to\nBSD3.\nBest wishes\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/562#issuecomment-171396919.\n. rom have been updated can you please confirm is now proper rom dump and\nsend it ?\n\nOn Wed, Jan 13, 2016 at 5:39 PM, Miso Kim notifications@github.com wrote:\n\n\nspc1000 ROM file update for CP/M disk working at booting time\nspc1000 cassette tape motor fixed for better working\n\n\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/564\nCommit Summary\n- [spc1000] cassette tape motor fixed for working properly\nFile Changes\n- M src/mame/drivers/spc1000.cpp\n  https://github.com/mamedev/mame/pull/564/files#diff-0 (17)\nPatch Links:\n- https://github.com/mamedev/mame/pull/564.patch\n- https://github.com/mamedev/mame/pull/564.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/564.\n. Sorry it took some time, but needed to fix some issues after large scale changes I did.\n. Thanks\n. @bradhugh just to say that I like coding style :)\n. thanks, missed reverting that one\n. It looks quite safe so I go for it, have time to check so no worries.\n. Same as for other one, it looks quite safe so I go for it. I have time to check so no worries.\n. Comments regarding patches :\n\n0001-Refactor-MACOSX_USE_LIBSDL-to-USE_LIBSDL-for-windows.patch  - FINE\n0002-add-TOOLCHAIN-make-flag-for-explicit-toolchain-prefi.patch - FINE\n0003-allow-libs-to-be-linked-multiple-times.patch - Need to go upstream\n0004-upstream-patch-to-fix-threaded-build-race-condition.patch - This will\nwork on Linux and OSX but will break on windows, that is reason why it is\nsuch as it is now\n0005-check-STRIP_SYMBOLS-in-strip-function-add-strip-supp.patch - FINE\n0006-fix-cross-windows-targetextension.patch - FINE\n0007-genie-make-targets-for-packager-scripts.patch - FINE\n0008-fix-windows-bgfx-link-in-sdl-builds.patch - FINE\n0009-make-sdl-osd-the-same-size-as-directx.patch - ??? PLEASE CHECK RB\n0010-set-plist-dependency-before-task-to-fix-parallel-bui.patch -- FINE\n0011-osx-clang-silence-flac-unknown-attribute-error.patch - FINE\n0012-implement-remove_extent_t-and-make_unique-for-unsupp.patch - NOPE :)\nOn Mon, Feb 15, 2016 at 5:59 PM, R. Belmont notifications@github.com\nwrote:\n\nCross-compilation patches would be very acceptable, I just don't want the\nC++14 workarounds :)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/606#issuecomment-184300855.\n. thing is that UI window is fullscreen on D3D and BGFX and not on OpenGL\n\nOn Tue, Feb 16, 2016 at 5:36 PM, R. Belmont notifications@github.com\nwrote:\n\nI have no idea what that 0009- patch is meant to do, could we get some\nclarification?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/606#issuecomment-184757448.\n. please mail me directly (my email is visible on my github page)\n. No need, it is automatically added to new pull request\n. please provide us additional rom, you can find my email address on my github page\n. if you have some more ideas of improvement of OSD layer ,please inform me\ndirectly on my email (can be found on Github account page)\n\nThanks,\nMicko\nOn Tue, Feb 9, 2016 at 3:50 PM, Brad Hughes notifications@github.com\nwrote:\n\nClosed #614 https://github.com/mamedev/mame/pull/614.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/614#event-544434291.\n. Since this is UI related I have moved it to ui_options and those are not exposed as command line params, but can be changed using UI itself or by editing ui.ini\n. Let's go that way\n. There is still part of build require you to have mingw compiler installed.\nPromise to try to resolve this.\n\nAnd yes we suck at documentation maintenance :)\nOn Monday, 15 February 2016, howprice notifications@github.com wrote:\n\nI'd like to contribute to MAME using Visual Studio 2015 as IDE. When I\nheard that the project had moved to use GENie I imagined the build process\nwould be something like:\n$ git clone https://github.com/mamedev/mame/\n$ 3rdParty\\bin\\windows\\genie.exe vs2015\n\nBefore I get stuck in I'd like to confirm that the actual process as\ndescribed on these pages is up to date:\nhttp://mamedev.org/tools/\nhttp://wiki.mamedev.org/index.php?title=Building_MAME_using_Microsoft_Visual_Studio_compilers\nThanks\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/624.\n. Docs are not valid\n\nCommand line would be:\nmake vs2015\nBut it require you to have our official tools that include mingw and Python.\nSince they are needed to compile. And put your Python root in PATH\nOn Monday, 15 February 2016, howprice notifications@github.com wrote:\n\nThanks for the quick response.\nAnd yes we suck at documentation maintenance :)\nDoes this mean that the existing docs are still valid, or is there\nanything I should be aware of? (or any steps that can be skipped?)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/624#issuecomment-184377092.\n. Working on a change to make mame deps also pacman packages from our own repo\n\nIt should be done during today, will update tools page then\nOn Tue, Feb 16, 2016 at 9:53 AM, howprice notifications@github.com wrote:\n\nI'm now debugging MAME with Visual Studio 2015. Many thanks for the help.\nDo you want me to update the pages at:\nhttp://wiki.mamedev.org/index.php/Building_MAME_using_Microsoft_Visual_Studio_compilers\nhttp://mamedev.org/tools/\nor should I leave that to the core team?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/624#issuecomment-184581503.\n. Right, your feedback was one of the reasons to fix this :)\nIdea is always to keep things simple for users\n\nOn Wed, Feb 17, 2016 at 1:51 PM, howprice notifications@github.com wrote:\n\nI just installed the tools on another machine. However this time when I\nran win32env.bat for the first time the console said\nCopying skeleton files.\nThese files are for the users to personalise their msys2 experience.\nThey will never be overwritten nor automatically updated.\n'./.bashrc' -> '/home/Howard//.bashrc'\n'./.bash_logout' -> '/home/Howard//.bash_logout'\n'./.bash_profile' -> '/home/Howard//.bash_profile'\n'./.inputrc' -> '/home/Howard//.inputrc'\n'./.profile' -> '/home/Howard//.profile'\n'./.vimrc' -> '/home/Howard//.vimrc'\n[MINGW64] C:\\msys64\\src>\nThis didn't happen the first time round which complicated the process\nbecause there was no home directory which meant that git config failed.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/624#issuecomment-185185390.\n. Updated wiki page, there is also info on main README.md \n. closed on demand\n. These are comments as reason why this is reverted:\n\nTafoid:\nI support progress and things that make disseminating game data easier for people, but losing legacy display of simple command such as -listsource isn't something I am behind.  This function now acts like some sort of multi-list - almost a mini XML substitute.  Rather than clear tags the output is littered with special symbols being used to signify machine parents and bios sets as well which causes existing tools more work to extract what the command should only be listing ... machine names and source files.   This may be a selfish view, but it effects many of my personal tools for MAME and forces me to program workarounds for a command which shouldn't be changing.  Everything done with this new -listsource can also be parsed from this newly added -listtree command.  I am also not happy about the change in -listclones.  This was a simple list that has turned into something more, which I presume, for specific front-end use.\nExamples:\nLegacy -listsource output:\n[MINGW64] c:\\mamegit\\mame>mame64_0224 zomb* -listsource\nzombraid         seta.cpp\nzombraidp        seta.cpp\nzombraidpj       seta.cpp\nzombrvn          naomi.cpp\nzombrvno         naomi.cpp\nNew -listsource output:\n[MINGW64] c:\\mamegit\\mame>mame64 zomb* -listsource\nzombraid         @seta.cpp\nzombraidp        @seta.cpp ^zombraid\nzombraidpj       @seta.cpp ^zombraid\nzombrvn          @naomi.cpp :naomi\nzombrvno         @naomi.cpp :naomi ^zombrvn\n\nOld -listclones output:\nc:\\mamegit\\mame>mame64_0224 -listclones zomb\nName:            Clone of:\nzombraidp        zombraid\nzombraidpj       zombraid\nzombrvno         zombrvn.\n.\nNew -listclones output:\nc:\\mamegit\\mame>mame64 -listclones zomb\nClones of \"Zombie Raid (9/28/95, US)\" (zombraid):\nzombraidp         \"Zombie Raid (9/28/95, US, prototype PCB)\"\nzombraidpj        \"Zombie Raid (9/28/95, Japan, prototype PCB)\"\nClones of \"Zombie Revenge (Rev A)\" (zombrvn, naomi BIOS):\nzombrvno          \"Zombie Revenge\"\n\n-listtree output:\n[MINGW64] c:\\mamegit\\mame>mame64 zomb* -listtree\nDrivers in source file seta.cpp:\nzombraid                Zombie Raid (9/28/95, US)\n  zombraidp             Zombie Raid (9/28/95, US, prototype PCB)\n  zombraidpj            Zombie Raid (9/28/95, Japan, prototype PCB)\nDrivers in source file naomi.cpp:\nnaomi                   Naomi Bios\n  zombrvn               Zombie Revenge (Rev A)\n    zombrvno            Zombie Revenge\nAgain, all the data that has been added to the -listsource and also -listclones is also available and can be parsed from -listtree (new command)\nI'd humbly suggest that -listsource/-listclones changes at least be reverted to simply display what it was intended.\n. please rebase on latest, there are conflicts\n. Manually merged \n. I have cleared and convert to std::atomic and std::mutex usage. But if anyone would take care of osd_work implementation and move it to use std::thread it would be great. \nDo not have time for that right now.\n. please rebase to latest\n. Sorry for this, was late and I made mistake by not checking full build.\nOn Fri, Mar 4, 2016 at 9:07 AM, LnmVolbo notifications@github.com wrote:\n\nNo need to make local changes now, it's been corrected properly: cc2330d\nhttps://github.com/mamedev/mame/commit/cc2330d739ab68afed3b6725b7d2f80bb582ef50\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/673#issuecomment-192174578.\n. did manual change. Thanks\n. try this :\n\ninter2a = 0x30f2e / (_27d8 - ((((UINT32)abs((INT8)vx)) << 16) / 0x58f8c));\nOn Sat, Mar 12, 2016 at 12:09 PM, Julian Sikorski notifications@github.com\nwrote:\n\nWhen trying to build with gcc-6.0.0 the following error occurs:\nCompiling src/mame/machine/slikshot.cpp...\ng++    -MMD -MP -MP -DPTR64=1 -DNDEBUG -DCRLF=2 -DLSB_FIRST -DUSE_SYSTEM_JPEGLIB -DUSE_SYSTEM_PORTMIDI -DUSE_SYSTEM_SQLITE -DNATIVE_DRC=drcbe_x64 -DLUA_COMPAT_ALL -DLUA_COMPAT_5_1 -DLUA_COMPAT_5_2 -DUSE_XAUDIO2=0 -I../../../../../src/osd -I../../../../../src/emu -I../../../../../src/devices -I../../../../../src/mame -I../../../../../src/lib -I../../../../../src/lib/util -I../../../../../src/lib/netlist -I../../../../../3rdparty -I../../../../generated/mame/layout  -g -m64 --pipe -g1 -fno-omit-frame-pointer -fno-optimize-sibling-calls -Wno-deprecated-declarations -O2 -fno-strict-aliasing -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -m64 -mtune=generic -Wno-unknown-pragmas -Wall -Wcast-align -Wundef -Wformat-security -Wwrite-strings -Wno-sign-compare -Wno-conversion -Wno-unused-result -Wno-array-bounds -m64 -x c++ -std=c++14 -Woverloaded-virtua\n l -Wsugg\n est-override -include ../../../../linux_gcc/obj/x64/Release/emu.h -o \"../../../../linux_gcc/obj/x64/Release/src/mame/machine/slikshot.o\" -c \"../../../../../src/mame/machine/slikshot.cpp\"\n../../../../../src/mame/machine/slikshot.cpp: In member function 'void itech8_state::vels_to_inters(UINT8, UINT8, UINT8, UINT16_, UINT16_, UINT16_, UINT8_)':\n../../../../../src/mame/machine/slikshot.cpp:264:47: error: invalid operands of types '__gnu_cxx::__enable_if::__type {aka double}' and 'int' to binary 'operator<<'\n  inter2 = 0x30f2e / (_27d8 + ((abs((INT8)vx) << 16) / 0x58f8c));\n                                 ~~~~~~~~~~~~~~^~~~~\n../../../../../src/mame/machine/slikshot.cpp:265:47: error: invalid operands of types '__gnu_cxx::__enable_if::__type {aka double}' and 'int' to binary 'operator<<'\n  inter2a = 0x30f2e / (_27d8 - ((abs((INT8)vx) << 16) / 0x58f8c));\n                                 ~~~~~~~~~~~~~~^~~~~\nitech.make:324: recipe for target '../../../../linux_gcc/obj/x64/Release/src/mame/machine/slikshot.o' failed\nMakefile:175: recipe for target 'itech' failed\nmake[2]: ** [../../../../linux_gcc/obj/x64/Release/src/mame/machine/slikshot.o] Error 1\nmake[1]: * [itech] Error 2\nmake[1]: * Waiting for unfinished jobs....\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/712.\n. Great\n. Aware of this, but dynamic libraries are disabled by intention. Idea is to always give users code that is multi-platform.\n. Thanks for pointing to this. Checked the rest and found cases where restriction is mentioned and removed those where we have direct approval. Also contacted one more external author and even get more permissive license\n. Release is always last Wednesday of month, so 30th of March for next release\n\nOn Thu, Mar 24, 2016 at 10:59 AM, jmallach notifications@github.com wrote:\n\nThank you. I'll check current git to see if I can find anything else\nbefore 0.172. Any clue when that release might happen? I might want to hold\nmy Debian upload until that release happens.\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/734#issuecomment-200766227\n. This is related to roms not to code, so that is fine :)\n\nOn Thu, Mar 24, 2016 at 12:51 PM, jmallach notifications@github.com wrote:\n\nThe last questionable block I've been able to find is:\nhttps://github.com/mamedev/mame/blob/master/src/mame/drivers/system16.cpp#L3032\n/*\nProgram Roms contain\nDesigned and Programmed by A.M.T. Research & Development Department 03/30/1991.\nCopying or Revising for Commercial Use Is Not Permitted.\n*/\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/734#issuecomment-200802652\n. Confirmed this issue on other platform as well.\n. Easiest way to setup is to use : https://github.com/mamedev/buildtools/\n\nor you can set MINGW64 to point to root path of your mingw installation and\ntry out\nOn Fri, Mar 25, 2016 at 7:51 PM, sum notifications@github.com wrote:\n\nSwitch to Python2.7\nNow it complain mingw64.\nI try to download mingw64 but it only has header file.\nHow to solve it ? Thanks\n[image: 2]\nhttps://cloud.githubusercontent.com/assets/2177532/14051404/8e0c5678-f2fd-11e5-8ba1-7e1d5ca89982.png\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/739#issuecomment-201420067\n. set MINGW64 = C:\\msys32\\mingw32\\bin is wrong\n\nyou are using 32bit tools on 64 bit system\nuse :\nset MINGW32 = C:\\msys32\\mingw32\\bin\nmake PTR64=0\nto create 32bit executable if that is what you wish\nOn Sun, Mar 27, 2016 at 12:12 PM, sum notifications@github.com wrote:\n\n@mmicko https://github.com/mmicko set MINGW64 = C:\\msys32\\mingw32\\bin\ndon't work\n[image: 2]\nhttps://cloud.githubusercontent.com/assets/2177532/14064922/62185ed6-f447-11e5-9ab1-a702209b3351.png\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/739#issuecomment-202031861\n. Can you please rebase on latest, since translation files changed a lot :)\n. Can you please point to to those few you have retained ?\n\nhave pointed to const auto as return parameter, yes that is C++14 but please check if it is working under GCC4.9\n. Sorry for late reply confirmed working on 4.9\n. you can revert last one (   b0e0331) since it works on 4.9  and that fix for  unused is already in\n. never mind, better this way :)\n. Looks fine, it does simplify things. \n@awjackson sice we started this any changes of taking a look, aware that you are not much on project lately ?\n. This one looks fine to me. Any objections @dankan1890  ?\n. roms are not available on that page for few days, if you could send those to us we could add this patch\n. had to delete comment due to copyright, but thanks :)\nOn Sat, Apr 16, 2016 at 10:03 AM, rfka01 notifications@github.com wrote:\n\nHere you go\nhttps://www.magentacloud.de/lnk/1u1EREcQ#file\n\u2014\nYou are receiving this because you commented.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/806#issuecomment-210760671\n. better use exename in this case\n\nOn Fri, Apr 15, 2016 at 11:40 AM, Jordi Mallach notifications@github.com\nwrote:\n\nThere is a variable called exename, maybe it could be used instead. In\nfact, it is used in the output of mame -showusage. Please let me know your\nthoughts about this.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/812#issuecomment-210386698\n. Thanks, Think we need to confirm osx builds with QT5 works as well, but\nanyway all params should be same on all platforms\n\nOn Fri, Apr 15, 2016 at 1:46 PM, Jordi Mallach notifications@github.com\nwrote:\n\nThis patch has been tested on Debian builds.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/813#issuecomment-210433306\n. Reverted\n. This change breaks compiling on Fedora/RHEL/CentOS.\n. This is part of 3rdparty package, we try to keep those same as their\ndistribution. Guess problem is in distributing source package for MAME only?\n\nOn Fri, Apr 15, 2016 at 11:57 AM, Jordi Mallach notifications@github.com\nwrote:\n\nHi,\nWhile I was reviewing the licenses of all of the MAME distribution, I came\nacross:\n3rdparty/rapidjson/bin/jsonchecker\nThe license of the material in this particular directory is considered\nnon-free by Debian, Red Hat and all other major distributors. As it serves\nof no purpose for MAME, I suggest it is removed entirely from the next\nversion.\nFrom 3rdparty/rapidjson/license.txt:\nTo avoid the problematic JSON license in your own projects, it's sufficient to exclude the\nbin/jsonchecker/ directory, as it's the only code under the JSON license.\nThe problem in particular is the JSON license has the following pointless\nclause:\nThe Software shall be used for Good, not Evil.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/814\n. Ok clear.\n\nOn Fri, Apr 15, 2016 at 3:49 PM, Jordi Mallach notifications@github.com\nwrote:\n\nThe problem is the contents of that directory would force all of the\nsource package in non-free in Debian, and out of Fedora entirely, etc.\nI would just post-process the import of new rapidjson versions to rm -rf\njsonchecker entirely, or possibly better, switch to any of the many\nalternatives that were written to work around this license:\nhttps://wiki.debian.org/qa.debian.org/jsonevil\n\u2014\nYou are receiving this because you commented.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/814#issuecomment-210470902\n. Fixed in 1a83c84eaeede7f5a735ac1f299bb43a47ca4a47\n. Agree that at least at release time it have to be unique, also date does\nnot make much sense.\n\nMaking build process to set variable for building at current git version\nunless it match release tag it will be enough I think. That way we will\nhave exact git guid on non-release builds and that part empty at release\ntime\nOn Sat, Apr 16, 2016 at 9:16 AM, Jordi Mallach notifications@github.com\nwrote:\n\nConsider the following patch:\nAuthor: Jordi Mallach jordi@debian.org\nDescription: Remove date of build to ensure binary reproducibility.\nForwarded: no\nIndex: mame-0.171/src/version.cpp\n--- mame-0.171.orig/src/version.cpp\n+++ mame-0.171/src/version.cpp\n@@ -13,4 +13,4 @@\n extern const char bare_build_version[];\n extern const char build_version[];\n const char bare_build_version[] = BARE_BUILD_VERSION;\n-const char build_version[] = BARE_BUILD_VERSION \" (\" DATE\")\";\n+const char build_version[] = BARE_BUILD_VERSION;\nWith this I avoid using DATE which just adds the compilation date to\nthe version string. As that probably is not meaningful at all (we probably\ncare a lot more about the release date instead of the build date), I\nremoved it from Debian as our compiler defaults doesn't like it.\nHowever, I don't want to change the version string as some frontends rely\non a specific string format.\nI am unsure how to rework things so it uses a RELEASE_DATE macro or\nsomething, that resolves to the date of the actual MAME release, or a git\nsnapshot in the case of a git build. In the latter case, I would add an\nextra string \"from git \" or something).\nIn short, using DATE means every build will not be binary exact unless\nyou tamper with the build system clock to make it match. Being able to\ncreate exact binaries is a goal to provide extra security to detect\nmalicious 3rd party tampering of systems. See\nhttps://reproducible-builds.org/ for way too many details.\nWhat do you think?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/817\n. This is implemented and effective in 0.173\n. ZIP is merged\n. merged, but please see if possible to clean it according to  OG request\n. It is intentional so only portable plugins could be used.\n. Can you please rebase this? Thanks\n. Nick:  \" author and he is not interested to help\" is that related to PCem\nor fs-uae ?\n\nOn Wed, May 11, 2016 at 5:32 PM, Nick Sardelianos notifications@github.com\nwrote:\n\nAside from assimilating emulation related open source code, it might be\nuseful to find and incorporate libraries that will make the whole I/O as\nportable as possible. Like BGFX for graphics rendering, look what's out\nthere for audio output and generic input handling.\nAlso VLC code can be used to add videosnap feature to new GUI (see #840\nhttps://github.com/mamedev/mame/issues/840).\nAlso fs-uae is open source which could take Amiga (and related) emulation\nyears ahead. That said, I've contacted the author and he is not interested\nto help (but that doesn't change the fact that the code is GPL-2.0).\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/838#issuecomment-218496359\n. Thanks for report, fixed in e87b25b32b4a35358610a60f8ea27efb742457ac\n. Sorry, all updates to 3rdparty have to go there, not over us.\n\nMicko\nOn Mon, May 2, 2016 at 4:34 PM, Thomas Klausner notifications@github.com\nwrote:\n\nThe patches in this pull request are build fixes for NetBSD.\nOne of the is needed for new versions of fontconfig.\nPlease merge them.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/852\nCommit Summary\n- Fix build on NetBSD.\n- Fix build on NetBSD.\n- Handle NetBSD case.\n- Fix build with freetype-2.6.x.\nFile Changes\n- M 3rdparty/bgfx/examples/common/font/font_manager.cpp\n  https://github.com/mamedev/mame/pull/852/files#diff-0 (4)\n- M 3rdparty/bx/include/bx/thread.h\n  https://github.com/mamedev/mame/pull/852/files#diff-1 (4)\n- M 3rdparty/libuv/src/unix/netbsd.c\n  https://github.com/mamedev/mame/pull/852/files#diff-2 (3)\n- M scripts/src/3rdparty.lua\n  https://github.com/mamedev/mame/pull/852/files#diff-3 (9)\nPatch Links:\n- https://github.com/mamedev/mame/pull/852.patch\n- https://github.com/mamedev/mame/pull/852.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/852\n. right will take that one.\n\nMicko\nOn Mon, May 2, 2016 at 4:54 PM, Thomas Klausner notifications@github.com\nwrote:\n\nHm, take one of the four then, please (scripts/src/ is your code, right?)\nand I'll try to feed back the others upstream.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/852#issuecomment-216257231\n. applied \n. We are fine with this change. But we have agreement not to apply any external change nor internal major change after what's new document is released (that is about 48h) before release.\n\nWill be applied after release\n. maybe good idea would be to place window_list inside osd_interface, or some place better, seen just inside OSD.\n. Sorry, on vacation now so can't check, but it looks idea was to unify input from any osd OS, and most computers do have just CR and no LF key, so guess there is a problem.\n. I was away for almost all time since last release, thing is if there are\nsome things like ifdefs with includes for specific platform that is doable,\nbut can not sync all since there is a chance to broke some existing things.\nif you could make pull request with minimal needed changes that could work\nOn Mon, Jul 25, 2016 at 12:14 PM, Jordi Mallach notifications@github.com\nwrote:\n\nThere are a few fixes I am interested in on both trees, and it'd make my\nlife easier if these could be synced with MAME's 3rdparty tree.\nIs that feasible for 0.176?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/issues/1144, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADdKSPPIhLM_BFL02JmMeYa4BRd9S0Zwks5qZIyagaJpZM4JT-e2\n.\n. Think this is good idea. Ideally UI should be externalized, specially for\nnon-emulation and non-critical features.\n\nIs it possible to get rid of datfile.cpp datmenu.cpp (from\nsrc/frontend/mame/ui) and also cmddata.h cmdrender.h  (from src/emu/ui) ?\nOn Tue, Sep 6, 2016 at 4:59 AM, cracyc notifications@github.com wrote:\n\nThis will change the selgame ui sidebar get the dat information from a\nplugin rather than the hardcoded c++. It will make it much easier to add\nother dat files and allow for scripted data, an example is included that\nuses the hi2txt xml parser files to decode and display high score info from\nhiscore file or nvram. Submitted as a pr for comment.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/1368\nCommit Summary\n- ui/selgame: get dat info from plugin [Carl]\nFile Changes\n- A plugins/data/button_char.lua\n  https://github.com/mamedev/mame/pull/1368/files#diff-0 (245)\n- A plugins/data/data_command.lua\n  https://github.com/mamedev/mame/pull/1368/files#diff-1 (25)\n- A plugins/data/data_gameinit.lua\n  https://github.com/mamedev/mame/pull/1368/files#diff-2 (23)\n- A plugins/data/data_hiscore.lua\n  https://github.com/mamedev/mame/pull/1368/files#diff-3 (803)\n- A plugins/data/data_history.lua\n  https://github.com/mamedev/mame/pull/1368/files#diff-4 (22)\n- A plugins/data/data_mameinfo.lua\n  https://github.com/mamedev/mame/pull/1368/files#diff-5 (22)\n- A plugins/data/data_messinfo.lua\n  https://github.com/mamedev/mame/pull/1368/files#diff-6 (23)\n- A plugins/data/data_story.lua\n  https://github.com/mamedev/mame/pull/1368/files#diff-7 (28)\n- A plugins/data/data_sysinfo.lua\n  https://github.com/mamedev/mame/pull/1368/files#diff-8 (22)\n- A plugins/data/init.lua\n  https://github.com/mamedev/mame/pull/1368/files#diff-9 (60)\n- A plugins/data/load_dat.lua\n  https://github.com/mamedev/mame/pull/1368/files#diff-10 (97)\n- A plugins/data/plugin.json\n  https://github.com/mamedev/mame/pull/1368/files#diff-11 (10)\n- M src/frontend/mame/luaengine.cpp\n  https://github.com/mamedev/mame/pull/1368/files#diff-12 (14)\n- M src/frontend/mame/luaengine.h\n  https://github.com/mamedev/mame/pull/1368/files#diff-13 (1)\n- M src/frontend/mame/ui/selgame.cpp\n  https://github.com/mamedev/mame/pull/1368/files#diff-14 (358)\n- M src/frontend/mame/ui/selgame.h\n  https://github.com/mamedev/mame/pull/1368/files#diff-15 (9)\n- M src/frontend/mame/ui/selmenu.cpp\n  https://github.com/mamedev/mame/pull/1368/files#diff-16 (212)\n- M src/frontend/mame/ui/selmenu.h\n  https://github.com/mamedev/mame/pull/1368/files#diff-17 (9)\n- M src/frontend/mame/ui/selsoft.cpp\n  https://github.com/mamedev/mame/pull/1368/files#diff-18 (152)\n- M src/frontend/mame/ui/selsoft.h\n  https://github.com/mamedev/mame/pull/1368/files#diff-19 (4)\n- M src/frontend/mame/ui/utils.cpp\n  https://github.com/mamedev/mame/pull/1368/files#diff-20 (2)\n- M src/frontend/mame/ui/utils.h\n  https://github.com/mamedev/mame/pull/1368/files#diff-21 (2)\nPatch Links:\n- https://github.com/mamedev/mame/pull/1368.patch\n- https://github.com/mamedev/mame/pull/1368.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1368, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADdKSHBG8tVnd0U3PUUBHxye57q7d_YTks5qnNb4gaJpZM4J1a44\n.\n. Yes, I will do that, need to do some cleanup as well, this library is\nuseful but forks work just on some OSes not on all\n\nOn Sat, Oct 8, 2016 at 5:42 PM, Scott Stone notifications@github.com\nwrote:\n\nThis should be something that someone should address upstream?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1487#issuecomment-252431379, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ADdKSHWM3MktkHTP3Yy1_RBRYscrlVDYks5qx7nvgaJpZM4KRvJr\n.\n. Just to add that there is no issues regarding conflicts and possible additional changes we need, I have created a tool to help me with this so it is much faster to change/update\n. well line state should be\n\nenum line_state\n{\nCLEAR_LINE = 0,\nASSERT_LINE,\nHOLD_LINE,\nPULSE_LINE\n};\nor better use enum class. As I told it is not a problem to do all changes\nagain, this is just playground to see what would be best solution and how\nwill all look after changes.\nOn Mon, Oct 24, 2016 at 3:40 PM, ajrhacker notifications@github.com wrote:\n\nVas, what you don't mention is that int is anything but an \"obvious\"\nrepresentation of line state.\nI do think that making the parameters to memory handlers explicit is a\ngood idea (because it's easy to forget what the parameters are named when\nso many handlers don't use the mask or even the offset), but in some other\ncases I don't think the signatures have been so well thought out; for\ninstance, modern C++ code shouldn't have to pass around random chunks of\noptional data as void * pointers.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1551#issuecomment-255743069, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ADdKSNgt-TQ7Fr3YbitCVyakjoZLO6k2ks5q3LU1gaJpZM4KeI0R\n.\n. and yes void * should not be used\n\nOn Mon, Oct 24, 2016 at 3:45 PM, Miodrag Milanovic mmicko@gmail.com wrote:\n\nwell line state should be\nenum line_state\n{\nCLEAR_LINE = 0,\nASSERT_LINE,\nHOLD_LINE,\nPULSE_LINE\n};\nor better use enum class. As I told it is not a problem to do all changes\nagain, this is just playground to see what would be best solution and how\nwill all look after changes.\nOn Mon, Oct 24, 2016 at 3:40 PM, ajrhacker notifications@github.com\nwrote:\n\nVas, what you don't mention is that int is anything but an \"obvious\"\nrepresentation of line state.\nI do think that making the parameters to memory handlers explicit is a\ngood idea (because it's easy to forget what the parameters are named when\nso many handlers don't use the mask or even the offset), but in some other\ncases I don't think the signatures have been so well thought out; for\ninstance, modern C++ code shouldn't have to pass around random chunks of\noptional data as void * pointers.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1551#issuecomment-255743069, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ADdKSNgt-TQ7Fr3YbitCVyakjoZLO6k2ks5q3LU1gaJpZM4KeI0R\n.\n. Moving all work to separate branch on main git repo, for better coordination with others\n. if you are doing small build locally, just add REGENIE=1 parameter in\ncommand line  to force regeneration of project file\n\n\nOn Thu, Oct 27, 2016 at 7:00 PM, hap notifications@github.com wrote:\n\nAFAIK the autochecker doesn't do a full compile.\nOn Thu, Oct 27, 2016 at 6:55 PM, Joakim Larsson Edstr\u00f6m \nnotifications@github.com wrote:\n\nIt passed, must be something wrong in my setup then. maybe the GCC 6.x\nlinker...?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1581#issuecomment-256704759, or\nmute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI11VZjfn1moc6nhY_\nVIK1OfuVqbyiOQks5q4NeBgaJpZM4Kieza\n.\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1581#issuecomment-256706084, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ADdKSJpQPp7_lDYVfJYEXDblt9UN3Rw0ks5q4NiWgaJpZM4Kieza\n.\n. @cbrunschen  can websocketpp be used to provide http server capabilities as well, or it is limited to web sockets only ? I have start some work on https://github.com/vinniefalco/beast to make it work without boost, but it will take some time\n. Ok. I will take a look and do some more generic version. Will keep you in loop for this.\n. Best would be to keep input and uiinput together. Right now these are two\nseparate things and for example if you run cpc464 driver and try to enter\ninternal menus you will see that menu is open and that key is also\npropagated to machine (TAB key), maybe by handling both in same place we\ncould prevent such leaks of events in wrong context.\n\nOn Tue, Nov 1, 2016 at 5:37 PM, ajrhacker notifications@github.com wrote:\n\nClosed #1622 https://github.com/mamedev/mame/pull/1622.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1622#event-843623225, or mute the\nthread\nhttps://github.com/notifications/unsubscribe-auth/ADdKSOpdvofFwUj8ELPa4xq6T-C9me9-ks5q52rlgaJpZM4KmP6B\n.\n. Due to a compiler limitations (visual studio) and easier development I would suggest that file serving is done by file system access and not from embedded strings\n. This looks much better to me, and most important library is maintained,\nluabridge is not and sol2 is best available solution right now\n\nOn Wed, Nov 2, 2016 at 6:16 PM, cracyc notifications@github.com wrote:\n\nDone as a PR for comment and compile testing.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/1626\nCommit Summary\n- luaengine: convert to sol2 [Carl]\n- luaengine: use templated accessor for call_plugin (nw)\n- luaengine: add basic table return support (nw)\n- luaengine: safer (nw)\n- luaengine: bugfixes (nw)\nFile Changes\n- M plugins/cheatfind/init.lua\n  https://github.com/mamedev/mame/pull/1626/files#diff-0 (2)\n- M plugins/data/data_hiscore.lua\n  https://github.com/mamedev/mame/pull/1626/files#diff-1 (10)\n- M plugins/data/init.lua\n  https://github.com/mamedev/mame/pull/1626/files#diff-2 (8)\n- M src/frontend/mame/luaengine.cpp\n  https://github.com/mamedev/mame/pull/1626/files#diff-3 (4028)\n- M src/frontend/mame/luaengine.h\n  https://github.com/mamedev/mame/pull/1626/files#diff-4 (256)\n- M src/frontend/mame/mame.cpp\n  https://github.com/mamedev/mame/pull/1626/files#diff-5 (2)\n- M src/frontend/mame/ui/datmenu.cpp\n  https://github.com/mamedev/mame/pull/1626/files#diff-6 (33)\n- M src/frontend/mame/ui/mainmenu.cpp\n  https://github.com/mamedev/mame/pull/1626/files#diff-7 (2)\n- M src/frontend/mame/ui/pluginopt.cpp\n  https://github.com/mamedev/mame/pull/1626/files#diff-8 (18)\n- M src/frontend/mame/ui/selgame.cpp\n  https://github.com/mamedev/mame/pull/1626/files#diff-9 (8)\n- M src/frontend/mame/ui/selmenu.cpp\n  https://github.com/mamedev/mame/pull/1626/files#diff-10 (40)\n- M src/frontend/mame/ui/selsoft.cpp\n  https://github.com/mamedev/mame/pull/1626/files#diff-11 (4)\n- M src/frontend/mame/ui/ui.cpp\n  https://github.com/mamedev/mame/pull/1626/files#diff-12 (3)\nPatch Links:\n- https://github.com/mamedev/mame/pull/1626.patch\n- https://github.com/mamedev/mame/pull/1626.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1626, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADdKSLv5UZ0Q7Xt9JtkgJGeXnV_2H6Lcks5q6MV6gaJpZM4Knggo\n.\n. This one is rather big, so would like to ask people to check if they have objection on this one\n. this have been fixed in e3988ad65e5b25dcc956ea43e008f9ea2d3ce329\n\nOn Mon, Mar 28, 2016 at 2:35 AM, balr0g notifications@github.com wrote:\n\nIn src/emu/emuopts.cpp\nhttps://github.com/mamedev/mame/pull/743#discussion_r57537522:\n\nremove_device_options();\n-       while (add_slot_options()) { }\n-   }\n  +\n-   // get the new system\n-   const game_driver *cursystem = system();\n-   if (cursystem == nullptr)\n-       return;\n  +\n-   if (software_name())\n\n@ajrhacker https://github.com/ajrhacker software_name() appears to\nreturn an empty C-string in my testing using the MAME builtin UI. This\nmeans the code inside the if-statement will be executed. Probably a bug?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/743/files/dee9b2d34a4826c1b9d83e2b5602c2093f7eb4bc#r57537522\n. not sure this will work on GCC 4.9 which is minimal requirement, and highest available on some platforms.\n. pool is still used, one of reason of redoing hashfile.cpp has removing pool\nusage\n\nOn Wed, Jun 29, 2016 at 2:39 PM, Vas Crabb notifications@github.com wrote:\n\nIn src/frontend/mame/ui/menu.cpp\nhttps://github.com/mamedev/mame/pull/1011#discussion_r68937985:\n\n@@ -341,8 +357,8 @@ void menu::item_append(const char text, const char subtext, UINT32 flags, void\n// allocate a new item and populate it\nmenu_item pitem;\n-   pitem.text = (text != nullptr) ? pool_strdup(text) : nullptr;\n\nIs the pool used for anything else now that this is gone?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1011/files/78576d09c66b7bfb6d3e6d41c38fc9c059e6cb6b#r68937985,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/ADdKSMUr2UONhduDElXmJ_FLxa4NDkMhks5qQmeDgaJpZM4JBFBb\n.\n. ah sorry was thinking of object_pool\n\nOn Wed, Jun 29, 2016 at 2:46 PM, Miodrag Milanovic mmicko@gmail.com wrote:\n\npool is still used, one of reason of redoing hashfile.cpp has removing\npool usage\nOn Wed, Jun 29, 2016 at 2:39 PM, Vas Crabb notifications@github.com\nwrote:\n\nIn src/frontend/mame/ui/menu.cpp\nhttps://github.com/mamedev/mame/pull/1011#discussion_r68937985:\n\n@@ -341,8 +357,8 @@ void menu::item_append(const char text, const char subtext, UINT32 flags, void\n// allocate a new item and populate it\n   menu_item pitem;\n-  pitem.text = (text != nullptr) ? pool_strdup(text) : nullptr;\n\nIs the pool used for anything else now that this is gone?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1011/files/78576d09c66b7bfb6d3e6d41c38fc9c059e6cb6b#r68937985,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/ADdKSMUr2UONhduDElXmJ_FLxa4NDkMhks5qQmeDgaJpZM4JBFBb\n.\n. \n\n",
    "shattered": "I'll redo this PR from another branch then.\n. oops.  The default should be CGA, not Mono :-)\n(these errors go away once you flip the Display Switch.)\n. Sent them to Micko.\n. RB: yes, that's the idea -- DEC PDP-11 world is octal.  They don't use a prefix, though.\nMaking other parts of MAME honor is_octal() is bigger task, I thought I'd start with something simple :)\n. @cuavas, will do.  @startaq, this terminal (like the original VT240) also supports color, I just haven't figured out exactly how.\n. Those changes are in https://github.com/mamedev/mame/pull/1159\n. Lua emu.keypost() cannot post a F20 without a macro -- if I map it, say, to F12, that only works in interactive mode, Lua will send an actual F12 key, not the F20.\nActual use case is regression testing with Lua; on the dvk_ksm, F20 toggles online/local modes and I'm testing local loopback mode this way.\n. sure, why not, but keypost() is more user-friendly (not by much -- I may be missing something, but can it accept a key name, and not just its Unicode codepoint in 0x100000 region?)\n. take 2: https://github.com/mamedev/mame/pull/1253\n. @startaq recommended to do it this way in https://github.com/mamedev/mame/pull/1117\nI'll wait until dust settles before reworking this :)\n. AY3600.  I've not written native keyboard yet.. clock_device's period cannot be changed at runtime, can it?. It's used by MCFG_GENERIC_KEYBOARD_CB macro and has to be public.. Manual says that pixel clock changes between 12.5 and 20.625 MHz.. configure() isn't working for me, haven't found the reason yet.. done and done. accidental, but the driver is not_working anyway. exactly the opposite in fact, it prints valid data only.   good idea, though, will do that. Moved them.. There was another another PORT_CHAR, for level 2 shift (= Ctrl), which I removed before raising the PR.. This was done to pass 'press all keys' test -- so that individual Shift or Control key press is registered, iirc.. PORT_NAME is autogenerated for many well-known keys, including these - that's why I removed it.. ",
    "cracyc": "FYI , I told Micko that I don't know either whether it's correct or not so as long as the 5150 hdd still works it's okay so test it if you can.\n. Setting the min_y of the viewport to m_vbp is required for pc9801 software which use the vbp to offset the slave 7220 start line from the master (such as Dragon Buster).  Can you fix it without that?\n. Sorry, didn't mean to close it.\n. There were too many issues with the 7220 changes so I did it differently.  Let me know if there are still problems with the mm1.\n. m_m is set for the master 7220 device which handles all the actual screen timing.  Out of all the dozen or so emulated machine that have 7220s only the mm1m6 and pc9801 have 7220s configured in slave mode.  Since it's the masters job to set up the screen the configure call should only be made if m_m is set so moving it broke quite a bit of things.  As far as the mm1m6 goes, the 8275 does the screen timing and having master mode set on the 7220 might really screw up the display output if you were to try it on a real machine. If it turns out that somehow configure is called from the 7220 we might have to put a guard around it so configure isn't called until the screen is actually enabled and m_m is set.   As for the CDOT, I looked into it and it's using 0xa0 (RDAT) opcode to read 2 bytes from the vram but it actually only reads one then is confused why the FIFO isn't empty.  The 7220 datasheet says that bytes are loaded from the FIFO to the data output register which might mean FIFO empty might be set when there is one more byte to read but I haven't gotten that to work yet.\n. I committed something which appears to work.\n. Don't see any reason to leave this open now that it's complete.\n. Assistent is a proper transliteration of the cyrillic http://www.leningrad.su/museum/show_calc.php?n=573.\n. Currently lua can send events via ioports but can't receive them.  I'm not sure how to do it but it would probably make people who use cheats happy to be able to bind buttons to enable and disable cheats.\n. You want the events, mouse movements or keypresses, to be fed to a Lua script and transformed in some way and passed on to the driver, right?  If so than what I meant is that luaengine can't receive any input currently.  There does appear to be some interface for outputs but I haven't tried it.\n. > One could argue that, in principle, the Lua engine shouldn't have direct access to OS input.\nFor this it might not be needed depending on how it's done but if we want to bring back cheat hotkeys there would have to be a way for scripts to receive input.\n. This should be fixed.   Let us know if there's still an issue.\n. > Prevent keyboard stuck errors by waiting for master reset (0xfd). \nNot a big fan of this.  There are many users of the lk201 other than the rainbow and they may look for keypresses without doing a reset.  Plus the reset is handled by the mcu and if there is a stuck key we should find out why rather than adding logic that doesn't actually exist on the machine.\n. Should be fixed.\n. Not sure of the best way to deal with this.  @mmicko should look at it.\n. > Maybe the right fix for this should be done in the other way, keeping relative paths and reverting to plugin base path only if we can't find/write correctly .hi files.\nThat could probably work but if you are going to put them anywhere use a subdir of the nvram path rather than the plugin path because there will be significant number of people who will accidentally delete their hiscore files when trying to update their plugins.\n. I can buy this as long as the default path remains ./hi and the path expansion is made portable.  A function called lfs.env_replace is added in boot.lua which works on Windows and *NIX that you can use.\n. > so you mean that is relative to sdlmame executable and not the plugin one. You think it should be the same for hiscore.dat?\nBecause if we don't we'll have a ton of bug reports about why hiscore files have disappeared.  If you want to make the default different and windows and unix then go ahead but remember that most windows users are going to have the hi score dir in the same directory as the executable.\n. This affects pasting into the emulated machine too which uses the same interface.\n. Got rid of datfile.  There are other users of cmdrender but possibly the font loading part could be folded in somewhere else and the remaining users of convert_command_glyph could use the utf8 codes directly instead which would permit the removal of cmddata.  One issue to be aware of is that although the titles from the plugin are passed though the translation since the strings aren't in the main tree anymore they may get lost when the translations updated.\n. Eeproms don't have address spaces any more so these cheats will have to be rewritten.  The Lua cheat engine prints an error but doesn't fatalerror when an invalid cheat is found, possibly the built-in cheat engine should do the same.\n. Fixed in master.\n. I don't feel familiar enough with makefiles to change the rules that much without messing it up.. Don't do this.  Just change portname/plugin.json \"start\" to \"true\".. The 82072 has one motor control line which is driven with the drive select so it would, i guess, depend on the way the drives are connected.  The later 82077 has a PC compatible DOR register and 4 motor control lines.. Why would this be undefined?  b is set on both sides of the if statement.. ",
    "firewave": "Also the -vgmwrite option should match the existing -*write options for consistency. Adding support for the format specifiers -snapname supports wouldn't be a bad idea though.\n. ccache should be detected as the proper clang version it is, so it will use the proper flags for that one and we don't need to take care of another list of warnings.\nAlso emscripten also requires -Qunused-arguments, so maybe something can be made more generic here.\nAnd if those are additional warnings, that are being suppressed to the one we already suppress I would like to have the location of the warnings (source files) documented as I did with the other clang warnings.\n. ccache can be used with any compiler, that behaves like GCC, so hard-coding it to work with clang is wrong to begin with. It also seems troublesome to detect which compiler lies behind ccache.\nCould give an exmaple how you use ccache - e.g. as prefix or via symlinks?\n. Thanks for the explanation. Please give me a few days to look into this - I might not get around to it before Monday.\n. Sorry - not yet. I have ccache setup on my system but didn't get \naround to look into it yet...I will definitely look at it before the \nnext release.\n\nAny updates on this patch?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/mamedev/mame/pull/58#issuecomment-66913319\n. When I use CCACHE_CPP2 I am not getting any warnings at all, so I don't really see a reason to apply any of this at all. My ccache version is 3.1.9. If 3.2 fixes the unused argument warnings you drop that and just use NOWERROR=1. I think it's reasonable to use the appropriate option for the ccache version instead of changing the makefile.\n. Well..not too much to thank me for - you basically did all the research yourself and I just rejected it ;)\n. Typos for external libraries should be submitted upstream instead. They will appear again, if we update them and they weren't fixed there.\n. Don't we need some re-doing of the LUA engine anyways, so it will \nproperly be (dis-)connected with running_machine? I can't remember \nwhat it was, but it was essential to actually controlling the \nemulation via LUA....just wondering if that should happen before we \ndo lots of major additions, that might then suddenly completely \nchange and break compatibility.\nHi,\ncpu.mem_read stuff is a bad idea for three reasons:\n- firstcpu shall die, it sucked in multi-processor systems, it sucks even\n  harder now that any device can have address maps.  You need to create a\n  device tree and allow memory access from any device that allows it.\n- devices can have up to 3 address maps, called program, data and i/o.  You\n  need accessors for each one (when it exists)\n- passing the read size as a parameter is extremely unintuitive.\n  device:program():read_byte(address) is more in the logic of Mame\nBest,\nOG.\nOn Wed, Dec 10, 2014 at 11:03 AM, Luca Bruno notifications@github.com\nwrote:\n\nThese commits add a new LUA namespace and a method to\nread data from the main address-space.\nThe idea is to provide user scripts some means to introspect on\ncurrent machine status, eg. to programatically draw a HUD.\nSigned-off-by: Luca Bruno lucab@debian.org\nTo ease development on my side, this branch is depending/embedding PR #71\nhttps://github.com/mamedev/mame/pull/71. It is ONLY up for review at\nthis point. I will rebase on master as soon as the other one gets merged.\nYou can merge this Pull Request by running\ngit pull https://github.com/lucab/mame lucab/mame-lua/cpu\nOr view, comment on, or merge it at:\nhttps://github.com/mamedev/mame/pull/72\nCommit Summary\n- luaengine: add \"gui\" namespace for scriptable HUD\n- luaengine: add gui.screen_width()/screen_height() methods\n- luaengine: add gui.draw_box() method\n- luaengine: add gui.draw_text() method\n- luaengine: add gui.draw_line() method\n- luaengine: add gui.show_fps() method\n- luaengine: add emu.hook_frame() method\n- luaengine: add \"cpu\" namespace\n- luaengine: add cpu.mem_read() method\nFile Changes\n- M src/emu/luaengine.c\n  https://github.com/mamedev/mame/pull/72/files#diff-0 (248)\n- M src/emu/luaengine.h\n  https://github.com/mamedev/mame/pull/72/files#diff-1 (20)\n- M src/emu/video.c\n  https://github.com/mamedev/mame/pull/72/files#diff-2 (3)\nPatch Links:\n- https://github.com/mamedev/mame/pull/72.patch\n- https://github.com/mamedev/mame/pull/72.diff\n\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/72.\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/mamedev/mame/pull/72#issuecomment-66445311\n. What is the command you are using to cross compile? I had trouble in the past even compiling 32-bit with a 64-bit compiler on Linux - still have to look into this as well.\n. What error are you getting? The introduction of BASELIBS was not to use LIBS. Also there was a change earlier, that added some of the external libraries to BASELIBS.\n. What tools? Did you pull the latest git since the missing libz and libFLAC symbols have been fixed.\n\nhttps://github.com/mamedev/mame/commit/b55b45a5a99b8bce694b7ed3cd2d4a00d790f6ae\n. Err...what? GCC is way more stupid about floating-point than Visual \nStudio (as seen with the optimization issues with FLAC).\nhttps://msdn.microsoft.com/en-us/library/e7s85ffb.aspx\n\nYeah, this is pretty much exactly why the x87 and 680x0 FPUs are done in SoftFloat.  (Also MSVC doesn't support 80-bit extended floats).  Also keep in mind that we do support PowerPC and ARM targets to some extent (ARM support will be growing this year probably).\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/mamedev/mame/pull/125#issuecomment-75445003\n. Ah...right...\"long double\"...\nGCC on x86 and x64 always picks 32-bit registers for 'float', 64-bit for 'double', and 80-bit for 'long double'.  Those sizes are 100% guaranteed to be selected based on the variable type, which is ideal for emulation (and certain other use cases).  MSVC doesn't support 'long double' at all (it's either an error or it's silently treated as a plain 'double').  This is among VIsual C's most well-known incompatibilities with other compilers (it's why Bochs and Mini vMac use SoftFloat).\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/mamedev/mame/pull/125#issuecomment-75454789\n. Looking at it I am not sure what is right anymore - feels a bit all over the place. I will just revert it.. The problem is, that digit_nbr is initialized to 4 which will cause a out-of-bounds access when it accesses uint8_t m_digit_cache[4] a few lines down (which is what Coverity complained about).. \n",
    "felipesanches": "Please, reconsider that. This patch has been mantained out-of-tree for a long time and I think the users deserve to have it readily available. Regarding the latest core cababilities, I am willing to update it and maintain it.\nAlso, dumping other things such as MNG, AVI and WAV is already supported in the core, even though it is not something strictly about core chip emulation.\n. The concern is with the vgmwrite function calls being there? Or the problem is adding all the necessary calls (1 for each chip) ?\nIt seems to me that it does not impact performance, neighter code-legibility. I'd assume the trouble may be on actually adding the necessary calls. And I would be glad to be responsible for taking care of that.\n. By the way... this game was implemented by Ricardo Bittencourt, the same developer of the SEGA Master System \"Show do Milh\u00e3o\" prototype. But while \"Show do Milh\u00e3o\" was dismissed by TecToy, \"Dona Barata\" became a real product (by MATIC, a different company).\n. thanks\n. ValleyBell was the author of that text change. I think the difference is only subtle. Which version do you consider to be more precise? The original one or the one edited by ValleyBell ? I would be glad to rethink this based on your feedback.\n. Anyway... It is not really a huge issue at all. But I'll be glad to hear your opinion on the topic.\n. Right now I'm working on updating this code to the latest master.\nThe files in the following list seem to be new sound devices that do not yet output VGM. I'll first make sure the current feature builds nicely after rebasing to master and later I'll focus on updating these:\n- src/devices/sound/tiasound.c...\n- src/devices/sound/tiaintf.c...\n- src/devices/sound/amiga.c...\n- src/devices/sound/astrocde.c...\n- src/devices/sound/cem3394.c...\n- src/devices/sound/sb0400.c...\n- src/devices/sound/es1373.c...\n- src/devices/sound/bsmt2000.c...\n- src/devices/sound/es5503.c...\n- src/devices/sound/es5506.c...\n- src/devices/sound/esqpump.c...\n- src/devices/sound/es8712.c...\n- src/devices/sound/gaelco.c...\n- src/devices/sound/cdp1863.c...\n- src/devices/sound/cdp1864.c...\n- src/devices/sound/cdp1869.c...\n- src/devices/sound/hc55516.c...\n- src/devices/sound/ics2115.c...\n- src/devices/sound/i5000.c...\n- src/devices/sound/iremga20.c...\n- src/devices/sound/k005289.c...\n- src/devices/sound/k007232.c...\n- src/devices/sound/k056800.c...\n- src/devices/sound/l7a1045_l6028_dsp_a.c...\n- src/devices/sound/lmc1992.c...\n- src/devices/sound/mas3507d.c...\n- src/devices/sound/mos6560.c...\n- src/devices/sound/mos7360.c...\n- src/devices/sound/namco.c...\n- src/devices/sound/n63701x.c...\n- src/devices/sound/c140.c...\n- src/devices/sound/c352.c...\n- src/devices/sound/digitalk.c...\n- src/devices/sound/315-5641.c...\n- src/devices/sound/okiadpcm.c...\n- src/devices/sound/msm5205.c...\n- src/devices/sound/msm5232.c...\n- src/devices/sound/okim6376.c...\n- src/devices/sound/okim9810.c...\n- src/devices/sound/saa1099.c...\n- src/devices/sound/qs1000.c...\n- src/devices/cpu/dsp16/dsp16dis.c...\n- src/devices/sound/rf5c400.c...\n- src/devices/sound/scspdsp.c...\n- src/devices/sound/aica.c...\n- src/devices/sound/aicadsp.c...\n- src/devices/sound/st0016.c...\n- src/devices/sound/nile.c...\n- src/devices/sound/x1_010.c...\n- src/devices/sound/mos6581.c...\n- src/devices/sound/sid.c...\n- src/devices/sound/sidenvel.c...\n- src/devices/sound/sidvoice.c...\n- src/devices/sound/snkwave.c...\n- src/devices/sound/spu.c...\n- src/devices/sound/spu_tables.c...\n- src/devices/sound/spureverb.c...\n- src/devices/sound/sp0256.c...\n- src/devices/sound/sp0250.c...\n- src/devices/sound/s14001a.c...\n- src/devices/sound/sn76477.c...\n- src/devices/sound/tms36xx.c...\n- src/devices/sound/tms3615.c...\n- src/devices/sound/tms5110.c...\n- src/devices/sound/tms5220.c...\n- src/devices/machine/spchrom.c...\n- src/devices/sound/t6721a.c...\n- src/devices/sound/tc8830f.c...\n- src/devices/sound/upd7752.c...\n- src/devices/sound/vlm5030.c...\n- src/devices/sound/votrax.c...\n- src/devices/sound/vrender0.c...\n- src/devices/sound/wave.c...\n- src/devices/sound/2151intf.c...\n- src/devices/sound/2413intf.c...\n- src/devices/sound/ym2413.c...\n- src/devices/sound/2203intf.c...\n- src/devices/sound/2608intf.c...\n- src/devices/sound/ymdeltat.c...\n- src/devices/sound/2610intf.c...\n- src/devices/sound/2612intf.c...\n- src/devices/sound/3812intf.c...\n- src/devices/sound/3526intf.c...\n- src/devices/sound/8950intf.c...\n- src/devices/sound/ymf262.c...\n- src/devices/sound/262intf.c...\n- src/devices/sound/ymf271.c...\n- src/devices/sound/ymf278b.c...\n- src/devices/sound/ymz280b.c...\n- src/devices/sound/ymz770.c...\n- src/devices/sound/mpeg_audio.c...\n- src/devices/sound/zsg2.c...\n- src/devices/sound/vrc6.c...\n. Also these files have issues and need to be fixed:\n- src/devices/sound/multipcm.c\n- src/devices/sound/segapcm.c\n- src/devices/sound/sn76496.c\n. I removed a reference to an unused rf5c164. I'm gradually trying to keep this patch as clean / minimal / non-intrusive as possible. Actual development is being done on the vgmdump_development branch (https://github.com/felipesanches/mame/tree/vgmdump_development) while in this branch I'll keep rebasing and amending a single commit that should cleanly apply against master.\n. I've updated the commit to use the bios feature you suggested. Please review and consider merging it.\n. Does it look good now?\n. thanks :-)\n. The enumeration fix results in the replicator1 driver printing the unimplemented warning thousands of times. The patch provided here makes sure that the unimplemented warning shows up, but only once.\nAlso, it disables other timer #5 related log messages, since these are there only for debugging purposes and should not be enabled by default.\n. what does MAME use as a default for indentation: tabs or spaces? If it is spaces, then how many spaces per indentation level?\n. it would be really good to specify a default tab/spaces style for everybody to use always. Letting scripts cleanup the whole codebase will probably messup with git blame, for instance. I'd rather preffer to setup my code editor with one good setting and make sure none of my commits mess up with indentation any more.\n. I'm curious to understand the rationale behind the idea of it being considered \"most definitely unacceptable\" to you. What are the bad consequences of it? Isn't it actually doing what it is designed to do? What are the drawbacks that make it so bad in your eyes?\nI'm just asking because it sounds a bit harsh when someone calls something unnaceptable, so I'd expect to learn more about your reasoning. After all... it is just a simple \"unimplemented\" log message. Can't be that harmfull at all... :-)\n. Thanks for providing a clearer reasoning. I think it makes sense and I can (and will) adapt the code in this pull request accordingly.\nMore specifically, the consideration presented by @etabeta78 was something I wasn't aware of yet.\nFinally, I'd like to make it clear that I want indeed to collaborate. My only concern was that it was not clear exactly what the criticism was. Now I understand it. Thanks.\n. I've just updated the commit, removing the static variable.\nI also took the opportunity to fix the indentation levels in that area of the code.\nPlease review and merge if considered appropriate.\ncheers,\nFelipe\n. I have just updated the commit to include exclusivelly the registers indexing fixes and the minor handling of debug messaging to avoid flooding the terminal. Log messages will only show up if a developer turn it on by setting the appropriate logging #define.\nAll fixes to broken indentation were now intentionally left aside, so that we can move on to merge this tiny avr8 bugfix.\n. Nevermind... I just noticed that the registers fixes were already merged into master. The log flood issue still remains, though. So I opened a new pull request specifically for that:\nhttps://github.com/mamedev/mame/pull/186\n. Thanks :-)\nSorry if I perhaps ended up sounding a bit harsh/arrogant in this thread. It was not my intention and I appologize.\nHappy hacking!\n. thanks :-)\n. I did notice it, sorry. And then I cleaned this up and amended the commit a few minutes after submitting this pull request. Please let me know if there's still any indentation mistakes to be fixed.\n. Oh! I see it now at src/mess/drivers/uzebox.c\nI'll fix it now. Sorry.\n. Done. Please, let me know if that's good now.\n. I've just updated the if/else code-style.\n. Thanks for that tip, Tafoid! I have just updated the commit to include the GAME_IMPREFECT_SOUND flag.\nIndeed, when listening to the recorded WAV file, the sound is much better, but not yet perfect. I hear a sort of high frequency noisy hiss in the recording. Maybe this is an artifact of the PWM used to generate the sound? I recall that the hardware design contains a filter in the sound output. Maybe it is meant to remove this high pitch noise ?\n. yeah, using the speaker_sound_device resulted in much better sound quality. Still bad in runtime. But much better when dumped to a wav file.\nThe resulting wav file still has some minor background noise, though... But definitely much better than with the DAC sound device!\n. I'm happy with this implementation. It is not great in terms of performance, but it is surely an improvement over the current master. I'll be glad to have it merged if you do not have any other pending issue regarding this implementation.\nIf I come up with a way to improve it's performance I can easily open a new pull request in the future.\n. ok, cool.\n. ok, done.\nI also added the entries that were missing in genie.lua and mess.lst\nBe sure to do:\ntouch -d yesterday src/emu/drivers/xtal.h\nin order to avoid unnecessarily triggering a time-wasting full-rebuild.\n. yeah, sure. Ramiro Polla is also involved in this one. He's the one who actually has access to the original device.\n. Please consider using git rebase instead of git merge to reduce the number of commits in a pull request (all of these \"Merge branch master\" commits are just noise and not actual contributions).\n. The CPU is labeled 8404 (presumably yymm timestamp) and SYE6507.\n. I don't see any XTAL. So it may be using the CLOCK signal from the main-board.\n. \n. \n. These changes were meant to be part of this previous pull request:\nhttps://github.com/mamedev/mame/pull/309\nThe changes were, by mistake, only staged but not actually committed and pushed.\n. The intent is to document the hardware. There are indeed stickers in the EPROMs of this bootleg pcb and the sticker for the EPROM at location referenced as IC25 in the silkscreen says \"14\" in its label. So the rom name reflects that by being called \"14.ic25\"\nFor me that's much more useful because it serves as technical documentation of the ROMset of this specific board. Not using the corrected name on purpose is simply losing information.\n. I already made clear my point.\nAnd Haze presented support.\nYou did present your opposing points.\nWe need more voices in this debate.\n. This seems to be a mask ROM (or OTP ROM) because the silkscreen in the pcb underneath it says 27C4096, even though the IC did not seem to be an EPROM at first sight. Initially I thought it was som sort of charagter generator video chip perhaps, due to the \"CG\" markings in it and the lack of an UV window.\n. There is another one of these nearby in the PCB, which also seems to be a ROM since it is labeled MX23C3210 in the PCB, but unfortunatelly my reader can't deal with this typo of memory.\n. The problem of the other ROM (the MX23C3210) is that it's got more than 40 pins, which is the size of the ZIF connector in my universal ROM reader (http://mamedev.emulab.it/fsanches/2014/10/14/dumping-gear-tl866cs/).\nI would appreciate if anyone could offer advice on how to dump this one.\n. OK, I got a good rendering of the CG ROM's contents using a simple python script to rapidly guess the gfxdecode parameters :-)\n\n. And here's the script I prepared for viewing the CG ROM contents: https://gist.github.com/felipesanches/8802f04e803ed9acbf91\n. thanks, @rb6502  :-D\n. Hey, @LnmVolbo ! Thanks for catching these :-)\nYou are absolutely right about the first one. I'll fix it in the ROM and update the driver with the new checksum.\nI am a bit unsure about the second issue, though. My book is the Brazilian Portuguese edition. In my book it is indeed written:\n- 0375 FE 0D          CP A, 0DH\n- 0376 CA 91 03      JP Z, TTYIN2       * Jump if carriage return\n- and so on...\nIt is clearly an issue in the book as the memory address only increments while it should increase by 2.\nI saw this when I was transcribing the ROM. But I thought it was just a typo in the address values.\nI actually have written with pencil in my book a not aobut the whole address range starting at 0376 being offset by 1.\nThe weird thing is that FE 0D actually means CP A, 0DH and BF means CP A (compare A with itselt, meaning, check if it is zero or nonzero). And 0DH actually means \"carriage return\" in the ASCII table, so my version would make more sense. At the same time, the jump addresses that exist within the off-by-1 block are consistent with the wrong addresses displayed in my version of the book. So I am puzzled.\nThe patch in the brazilian book seems to be very intentional and not a typo. The off-by-1 in addresses may be just a mistake in calculating the address values while the change may be an intentional \"improvement of some sort. Maybe an attempt to fix an actual bug of the original english version?\nI think I need to study the whole source code and decide \n. so, yeah... I gotta load this into the emulator and check if the brazilian version actually is a valid fix.\nIt seems they got addressing wrong when attempting to fix that opcode error. Maybe both versions are broken. Then I think we'll have to fix it ourselves and leave a compilation of the relevant portion of these comments in the source code for the sake of historical record.\n. I'll try to do it tomorrow.\n. Observing the PDF and comparing it to the brazilian edition I noticed a few interesting things.\nEditing and typesetting of the book for translation into portuguese was done by cuting sheets of paper and photocopying the mosaic of \"patches\" instead of by re-typing the whole thing from scrach in a type-writer. That's why the dot of dirt on top of 0xC2 remains in the portuguese version.\nAlso, I can see in some regions the borders of the paper sheets that were use to substitute the english text comments by the equivalent comments in portuguese. In some places the paper even covers partially some of the '*' characters. :-P\nSo, it means that by (literaly) cutting and pasting they decided to fix a bug, but forgot to edit the values of the addresses. So that's the source for the \"off-by-one\" issue in addressing.\n. The expected result should be something similar to this:\n- https://www.youtube.com/watch?v=l20V7f2sM8c\nWhich is documented here:\n- http://blog.arrozcru.org/?p=11\n- http://blog.arrozcru.org/?p=38\n- http://blog.arrozcru.org/?p=122\n. @mmicko just told me that git can still access such commit history with a command like this:\ngit log --follow src/mame/drivers/ibmpc.c\nBut GitHub does not seem to use it when building their commit history webinterface, which is a shame. They should definitely change this behaviour.\n. I have 4 EPROMs, 3 of which say 1988 in the type-written label. Only one says 1986.  The one that says 1986 also says \"original\" in handwritting.\nThe contents of the ROM, in the few last bytes, say:\nMPS1000 VERS 2.2 DATE 12/06/86 HWH/BEH 85/86\nSo, yeah... 1986.\n. I just ammended and \"push --force\"d the commit\n. thanks :-)\n. When you say \"XML metadata\" I can think of 2 things:\n- -listxml\n- the softlist XML files\nWhich do you mean?\n. The rationale behind my proposal is that there is a lot of occurences nowadays of both general description of what a certain device is, as well as of information on how to operate a device, that are kind of \"buried\" into comments in the headers of driver source files. It seems to be a current common practice. This is useful metadata and, as a documentation and preservation project, I think we would benefit from making all this information accessible on run-time and also in a more structured way so that this metadata can be (1) more accessible to the users and not only to people who take a look at the source code and (2) in a machine-readable manner so that it can be more easily repurposed by automated tools (such as data processing scripts to generate all sorts of visualizations and statistics on our current codebase).\nThink of it as something as useful as the other metadata for which we already have macro markups on a driver source file, such as release year, manufacturer name, model name, driver status flags, rom names and hashes, etc...\n. Also, other info could perhaps also be better organized with more specialized markup such as:\nc\nDRIVER_AUTHOR(zapcomp, \"Felipe Correa da Silva Sanches\", \"juca@members.fsf.org\")\n. In addition to the improved visibility/access of the data within MAME's runtime, one other potential future benefit of this markup would be that projects such as the Internet Archive would be able to more easily extract this information and to expose it to visitors as part of the user interface of their website.\n. Can SVGs be rendered as layouts in MAME already? I've not seen this yet. I don't see any SVG file at src/mame/layout/\n@startaq Can you show me an example of this working?\n. I fully support this idea. It is something I've been dreaming of for a while already and I will be really glad to see happen.\n. Can you help figuring out the best 3d scanning solutions for that purpose? We'll need to streamline the process so that we can get good scans of a large number of devices, but without a large monetary burden on the contributors.\nOf course, something is better than nothing. So if we can hookup an initial simple 3d layout system, even if it is just a half-baked prototype, it is already a move in the direction of having something better.\n. Yeah, lets focus on simple things first.\nAnd it is not only about the MESS side of the project. It is also about arcade games. Here some simple examples:\n- Wacky Gator\n- Golly Ghost\nAnd for non-arcade, I would start with the several Apple II clones, which are mostly the same in terms of circuitry, but have a much greater variety in terms of shape and colours of their external cases (an historically relevant aspect that we currently do not pay much attention to in MAME).\n. Here's a video of Wacky Gator running on MAME.\nThere's an animated 3D scene also in the video, which I created using OpenSCAD. \nhttps://youtu.be/P48hQkLiNxM\nConsider this a mockup of what I would like to see running nativelly in MAME. It still needs textures, for sure. And the alligators should actually be 3d scanned from original parts.\nAlso the dimensions of the cabinet are guessed, but the overall 3d model is a parametric design, so it should be easy to fix it with the same ease of patching software :-)\nThat's why I consider OpenSCAD (the algorithmic and parametric 3d modelling tool that was used to create this) to be a good candidate for the documentation of mechanical arcade hardware.\n. The SCAD script that generates this 3d scene is available at:\nhttps://github.com/felipesanches/MAME_3D_models\n. Let me make a requirements list here as well :-)\nHere are some things we need:\n- a way to identify surfaces in the 3d mesh to which we'll apply specific emulated video buffers such as:\n  - The surface of the 3d model of a CRT\n  - The rectangular area where a dot-matrix LCD is located in the panel of an equipment\n- 3dimensional positioning of classic elements that are already supported by our current artwork system such as LEDs, 7seg displays, etc...\n- methods similar to set_output_ but for informing mechanical movement. This could be something like:\n  - set_rotation(\"element-name\", x, y, z, angle) //the x,y,z provides the rotation axis, but this could also be declared in the artwork XML file and then the method would only pass an angle value.\n  - set_translate(\"element-name\", x, y, z) //alternatively, a direction could be predetermined in the XML and the translation method would only pass a distance value along that direction\n. Also, we may still need the ability for the driver to algorithmically generate 3d content in addition to the shapes defined by the artwork and to control positioning and coordinate transformation of the objects arbitrarily if needed (perhaps this would be acchieved with a generic API and a scene_update callback, similar in spirit to the custom screen_update callbacks we already use in some places). This is specially the case when we think of 3d scenes that depend on chaotic interactions determined by physics, such as:\n- an arduino controlled drone\n- a radio-controlled toy racing car or a toy boat in a swimming pool\n- plush-toys being grabbed and dropped by a gantry\n. We also need to make sure that coordinate transformations can be composed. That is useful for things like:\n- the X/Y/Z CNC axis of several machines such as 3d printers, pen plotters, pick and place machinery, plush-toy gantries, etc\n- also useful for stuff we already support in MAME such as the composed movements of the Galaxy Force II Super Deluxe cabinet\n. Type design software has the concept of \"anchor-points\". These are used for determining the coordinate in the canvas where a glyph can have an additional shape appended. As an exemple, you can have an upper-case A glyph with an anchor point defined a bit above it. That anchor could then be used to attach diacritical marks such as acute, circunflex, or many other outlines for optional marks.\nI think we may use the same concept here, by having anchor points in the 3D space, so that there are predefined places where you can attach optional peripherals in a scene. So we would have an Apple II 3d model with anchor points for a Monitor behind it, another anchor point for a printer to the right of it and for floppy drives to its left. An Apple II floppy drive 3d model could have an anchor point for stacking another drive on top of itself. Similarly, a SEGA Genesis would have an anchor point in the cartridge slot (which makes us figure out we actually need an anchor transform as well and not only a point!).\nI'm obviously pushing the boundaries here, but that's only for the purpose of brainstorming. We naturally can start with something much simpler than all of this and then gradually improve this artwork subsystem capabilities.\n. And templates for camera positioning and motion. One device can have a few different views that are most interesting for the user, so these could be available for easy navigation. Examples:\nGalaxy Force II Super Deluxe cabinet:\n- a view from outside of the cabinet (like people observing someone play on an arcade room)\n- a view form inside the cabinet looking directly to the screen\nReplicator 1 3D printer:\n- zoom in to see the text messages being displayed in the LCD panel\n- zoom out to see the whole machine operating\n- focus on the 3d printer bed to see what is being printed\nPinball machines:\n- playfield views from 3 or 4 different fixed angles\n- an interactive camera that smoothly follows overall region of the playfield where the ball is during play\n- a view of the dot-matrix display and the backglass\nAny device could, by default, have a generic \"showroom\" view that constantly rotates around the device.\n. For the record, I do have a python+OpenSCAD pinball 3d modelling project at github here:\nhttps://github.com/felipesanches/SolidPinball/\nAnd this is one example of a pinball playfield built using it:\nhttps://github.com/felipesanches/PARTYLandRemake\n. One more consideration:\nWe should plan to always have at least a basic 3d scene natively available in MAME, with an unbranded overall geometry of the device (just like the Wacky Gator animation in this video https://www.youtube.com/watch?v=P48hQkLiNxM with the alligators being replesented by a simple green brick), while textures (backglass and sticker artwork) and actual 3d scanned models of parts (such as the alligators in Wacky Gator) would be loaded from an optionally available 3d artwork pack.\n. I am busy with my day-time work now, but I'd like to suggest that we start using the wiki pages at this GitHub repository to draft a spec of the 3d artwork system. Can someone with administrative rights enable the wiki feature and then create a \"3D Artwork Specification\" wiki page?\nI'll be back tonight after my work-hours to help start drafting this.\nFirst thoughts/questions are:\n- [ ] which macro markup keyword to use on a driver's MACHINE_CONFIG for declaring a 3d layout ?\n- [ ] how to make it compatible with a pre-existing 2D layout?\n- [ ] which directory will hold the in-tree basic (unbranded) 3d layouts ?\n- [ ] what will be the structure of each ZIP file containing 3d models and scene/layout description ?\n- [ ] etc... Please add you own ideas\nI'll be back later this night.\n. We can start small and increase gradually.\nAnd things will only get slow if we really abuse the system.\nHaving said that, I appreciate the idea of delegating 3D stuff to a thread in a secondary CPU, if available. Not sure if that's really so necessary and effective performance-wise though. We'll see as we try :-)\n. I have been improving my python-based prototype here:\nhttps://github.com/felipesanches/MAME_3D_models\nYou'll need to have OpenSCAD installed in order to compile the 3d models.\nThe end users wiill only deal with the final files, so no worries. And obviously one does not need to use OpenSCAD in order to create 3d models. It is just what I am used to. Naturally we'll have scanned meshes as well, directly from the real parts when 3d scanners get more affordable.\nI'm converging towards a certain XML schema for describing the 3d scene and I am starting to like it. The 2 devices I'm working on while developing this system are Wacky Gator and Galaxy Force II Super Deluxe. Their XML 3d artwork description files can be seen here:\nhttps://github.com/felipesanches/MAME_3D_models/blob/master/wackygtr/wackygtr.3dlay\nhttps://github.com/felipesanches/MAME_3D_models/blob/master/gforce2/gforce2.3dlay\n. Also, here are a few previews of the system running:\n\n\n\n\n\n\n. Be sure to read the instructions in the README.md file here: https://github.com/felipesanches/MAME_3D_models\nI just added the most important stuff there so that it is easier for everybody to try running this and to provide some feedback.\n. It looks like SEGA UFO is another nice driver that could benefit from this :-)\nhttp://git.redump.net/mame/tree/src/mame/drivers/segaufo.cpp\nhttps://seoulsounds.files.wordpress.com/2010/11/img_0587.jpg\n. @retro27 This proof-of-concept is not (yet?) integrated into the official MAME codebase. It works with the latest MAME code running side-by-side with python scripts which are available in my separate personal repository at https://github.com/felipesanches/MAME_3D_models\nMaybe someone might be interested in porting this proof-of-concept into MAME codebase in an experimental branch?\n. I wish there was more people interested in this...\n. As a technology reference, here's a good usage example of 3d scans and photogammetry that may inspire future efforts for MAME 3D artwork: http://phys.org/news/2016-03-archaeologists-d-interactive-digital-reconstruction.html\n. @MooglyGuy, last March (as seen above on https://github.com/mamedev/mame/issues/388#issuecomment-196995221) you mentioned you were working on something related to this issue. Could you perhaps tell us a bit more about the current status of its development, please?\n. Hahaha! Do we know each other in person? Do you also speak portuguese? I'm glad that such a simple fix apparently made someone very happy :-)\n. MAME and MESS were merged into a single thing simply called MAME from now on (where 'now' means some months ago...).\n. @Shideravan please contact-me at juca@members.fsf.org\nI'd like to chat. I still wonder whether you're a brazilian or maybe you're from Portugal? Anyway, it is nice to see other portuguese speaking people contributing to MAME. If you are from Brazil, I will be glad to meet in person to talk about emulation. If you're in Europe, than IRC chatting and/or e-mails are good as well :-)\nHappy Hacking,\nFelipe \"Juca\" Sanches\n. thanks, RB! But I'm am right now fixing an issue with this. The ROM sizes were wrong. And I also took the opportunity to add notes about the boards from which these ROMs were dumped. I'll send a follow-up pull request right now.\n. There we go:\nhttps://github.com/mamedev/mame/pull/421\nSorry for the inconvenience :-P\n. yeah... I think you're right. The dumps were not done by me. The procedures are described by nocash here: http://www.psxdev.net/forum/viewtopic.php?f=70&t=557\n. @Jkhemili MAME's purpose is to preserve the history of electronic devices including, but not limited to, arcade machines, video game consoles and lots of other stuff.\nThe team of developers and contributors is not very big, so naturally there's lots of drivers that are still not fully implemented. In some cases the drivers are only placeholders for the purpose of preserving the ROM images so that someone can work in the future in the proper emulation of the devices.\nThis issue tracking system is intended to document specific known problems. Please avoid posting generic too broad requests here. A focused issue about some specific game, though, would be greatly appreciated. The golden rule is that you have got to provide as much technically relevant information as possible here, so that the development team can have better conditions to tracing down the source of the issues at hand and hopefully fix them.\nHappy Hacking,\nFelipe \"Juca\" Sanches\n(relatively new MAME code contributor)\n. @Jkhemili The MAME developers and contributors are surely working hard to get the emulator working in the best way we can while documenting in a faithful way the technical details of the electronic boards of these devices.\nWhile I can understand your complaint, I must note that this kind of request is not appropriate here in the GitHub issues tracker, as it does not actually present any specific technical issue other than a very generic concern. So this issue must be closed.\n. I just updated (ammended) the commit to use the 6C ROM as character generator data.\n. Yeah. This sounds good (even though I have not tested it yet).\nThanks a lot for having worked on it! I appreciate it.\n. Some proposals:\nThis works, but it terribly unreadable.\nGAME( 1992, wwmarine, 0, segac2, wwmarine, segac2_state, bloxeedc, ROT0, \"Sega\", \"Waku Waku Marine \\u308f\\u304f\\u308f\\u304f\\u30de\\u30ea\\u30f3\", 0 )\nGAME( 1991, soniccar, 0, segac2, soniccar, segac2_state, bloxeedc, ROT0, \"Sega\", \"Waku Waku Sonic Patrol Car \\u308f\\u304f\\u308f\\u304f\\u30bd\\u30cb\\u30c3\\u30af\\u30d1\\u30c8\\u30ab\\u30fc\", 0 )\nThis seems much better!\nGAME( 1992, wwmarine, 0, segac2, wwmarine, segac2_state, bloxeedc, ROT0, \"Sega\", \"Waku Waku Marine \u308f\u304f\u308f\u304f\u30de\u30ea\u30f3\", 0 )\nGAME( 1991, soniccar, 0, segac2, soniccar, segac2_state, bloxeedc, ROT0, \"Sega\", \"Waku Waku Sonic Patrol Car \u308f\u304f\u308f\u304f\u30bd\u30cb\u30c3\u30af\u30d1\u30c8\u30ab\u30fc\", 0 )\n. What about in the case of accented latin text?\nCould it be like this?\nCOMP( 1972, patinho,  0,        0,      patinho_feio,  patinho_feio, patinho_feio_state, patinho_feio, \"Escola Polit\u00e9cnica - Universidade de S\u00e3o Paulo\", \"\", \"Patinho Feio\", \"\", MACHINE_NO_SOUND_HW | MACHINE_NOT_WORKING)\nBear in mind that both the \"company\" and the \"full name\" fields may have unicode characters...\nWe may have to use some macros to make it nicer and cleaner. I can understand the idea of using null strings but I'd preffer to not have them visible in the source at all.\n. @angelosa Could you please open a new issue on GitHub specifically about the broader topic of improving the way MAME stores metadata in general? I think you've got valid points and I would add some more comments on that, but I'd preffer to keep this issue focused on the unicode strings and have all other discussion going on in a separate issue, for the sake of clarity and better organization of the current issues at hand.\n. The file src/mame/drivers/cps2.cpp has got almost 300 GAME entries... It would be good to keep all metadata in a single line if possible. But sometimes, indeed the lines get really long!\n. A tool called pyftsubset in the fonttools project (https://github.com/behdad/fonttools/) may be able to generate the needed Noto font subsetting that I suggested on IRC earlier today for unicode metadata strings in MAME.\nNoto is a libre font family being developed by Google to have a very wide glyph coverage. So it is essentially a font designed to fulfill needs of ambitious multi-language projects like this.\nBut the problem is that such a font family has very large file sizes. So the idea is that we should generate a minimal font subset that contains only the glyphs needed. Before packaging a new MAME release, we would have to run an automatic subsetting script that would list all unicode codepoints of glyphs used in metadata strings declared in MAME's codebase and then the generated minimal font file would be added as a program resource and loaded by default in the MAME ui.\nThis would guarantee that all metadata would be properly rendered in our user interface.\n. oh! And by the way... here's the Noto libre font project website:\nhttps://www.google.com/get/noto/\n. Could you ellaborate on that? I can see both pros and cons to this proposal.\nWhile I'd like to hear @galibert 's rationale, here's mine:\n- Pros:\nMetadata is very valuable. As a general principle I would be very supportive of adding a richer set of metadata fields for all devices. Because it helps us sort things, categorize them, and make richer and more meaninful queries to the database. \nI've been wondering about the possibility of employing metadata markup techniques such as the ones used for Linked Data with the objective of improving the user experience on places like the Internet Archive's Arcade Museum, for instance (or really, for any user of the javascript transpiled builds of specific MAME drivers). I think that's definitely a fruitful area for further research if one is truly concerned about enhancing historical preservation efforts.\n- Cons:\nHaving the ability to \"filter-out\" stuff makes it easier to ship partial builds which potentially fragment the project and which likely weakens the historical preservation of the devices emulated by the less popular drivers. So I would only support doing so, if that's done as part of a larger effort towards much richer metadata, instead of simply to allow incomplete builds.\n. I strongly support the idea presented in the original description of this issue. I have faced the same kind of trouble when writing drivers for devices that use multiplexed displays. One example is the Minicom IV driver.\nHere's a video of it running:\nhttps://www.youtube.com/watch?v=Mv7bSd9cOvY&html5=true\nEven though it looks good, I have the feeling that this is not really the correct emulation for the display because it does not take fading of the segments into account. I could conceive of alternative firmware for the device that would result in diverging visual rendering in the emulator in comparison to the real device.\n. it uses a shift register to shift-in the multiplexing signal that sequentially selects each of the digits in the display. Then there is a shared set of bits that defined the pattern to be displayed in the currently selected digit. Actually there is also a second layer of multiplexing, since each digit is a 14-segment display, so this extra bit selects which half of the display the pattern refers to.\n. This seems to be a bit related to the 3D artwork system proposals at #388 \n. @jbaicoianu This sounds interesting. Could you showcase an example of such usage?\n. I tend to agree with lots of what you said, but I don't feel like spending too much time on this right now. I'd rather focus on the Patinho Feio computer now. I may work more on this teleprinter stuff later though. Perhaps. Thanks for the insights.\n. I did not actually address the things that Vas pointed out. I'm still working on incremental improvements to the emulation of the CPU and of the machine itself because I think that's more useful work for me to be doing on my leisure time. (because that's where most of the historical preservation value of the Patinho Feio computer actually is and I'm the only Brazilian developer working on it, so I have a duty to get this done)\nAlso, I think that my implementation of a printed paper rendering for the generic teleprinter is actually much better than the current rendering in MAME master branch (which looks like a pixelated terminal screen while the purpose should be to emulate/render a paper printer).\nI can understand how the suggestions that Vas presented could lead to a much more accurate implementation of teleprinter emulation and rendering than my current code, but that should not let one forget the fact that my work in this pull request is already better than the one at master branch (that misleadingly depicts paper as a pixelated video terminal), so I am not too worried about spending time on undoing the good stuff I've done up to now.\n. ...or, alternatively, name it \"generic typewriter font\" instead of \"ASR33 font\". Then you'll have an \"arbitrary\" font (just like we already do have now) but with ink on paper rendering style instead of pixel on screen.\n. Maybe later. Maybe.\nI won't waste my time with such counter-productive finicky demands. If you really care so much about properly emulating/simulating the intricacies of a mechanical teletype, then perhaps you should be helping to do it, instead of simply blocking iterative small improvements.\n. I'm aware of several of the things you pointed out. All will be improved at some point. There's no need to rush, I'm still focusing on more fundamental aspects of the CPU emulation.\nSome other things you just mentioned are new insights I had not thought of yet and I would have been really glad if you had provided such feedback as someone who wants to help, instead of using them as some sort of rhetoric weapon that you keep to yourself until you can use it strategically.\nUnfortunately, your recurring behaviour does not make me feel like talking to a friend or a collaborator in a shared-effort project. You sound like a boss. A really bad boss, because a good boss has got the skills to encourage people to engage in work instead of making people angry or sad.\n. @balr0g yes, I agree and I will do it at some point. Maybe a bit later this week.\n. I just noticed something that may be a misunderstanding causing trouble in here. I'm not actively asking for this to be merged immediately. Instead, I'm working on the code publicly (rather than in private), so, from that you can better understand why the code may be in rough-shape in some parts. It is mostly a work in progress, among several other non-coding tasks related to the historical preservation of the Patinho Feio computer, such as book scanning, punched-tape data dumping, phone calls and in-person meetings with the people that were behind the development of this computer back in 1975, etc...\nNow I can see that I probably should have placed a big disclaimer in the description of this PR making it clear that it is not meant for immediate merge, but rather for collecting feedback so that I can improve it. It's only natural that you faced this as a request for merge, since, after all this thing here is called a \"pull request\"! My mistake here, sorry. I'll add the big warning next time I do it.\nNow, you may ask why did I open a Pull Request if I did not want it necessarily merged immediately, right? That's because I want to let people know I'm working on it. I want to make my work visible so that friendly people can help.\n. I'll probably continue pushing commits to this branch and they'll probably show up here in this closed PR as a side effect. No rush to merge. You don't even have to worry about it. I may squash everything into a single commit later when it reaches a good state. And yes, I'll split out the controversial teleprinter code to its own independent PR when I feel like doing it later.\n. That sounds good! Thanks.\n. I'm aware that there may be build issues with this changeset. I've been experimenting with emscripten builds as well as working with both full native build as well as native patial builds. Recently both native builds seem broken, but I still can get it to build with emmake. I'm not sure exactly what's wrong, but I'd appreciate feedback from whoever feels confortable with MAME's build rules.\n. I just added it and ammended the commit.\n. thanks! I'll do it.\nEven though I think the srcclean approach is somewhat problematic, I'll do it as is the current way of doing it and then we can discuss better ways for the future releases (just like we've already talked about at https://github.com/mamedev/mame/issues/586).\n. There's also a python script that generates this. I would preffer to add the python script to the source tree as well as it is the source and the .lay is just output data. But then I would need to tweak the build system. Maybe someone here can help with that.\n. I think that after we merge this one, I can open another PR to gatter feedback and to work on the build-system replacing the .lay file by its source .py script.\n. These are like 60 lamps with equal spacing. It is terrible to edit/tweak that directly in the layout file. That's why I added the scripting routines. To make my life easier. I'd bet other people would benefit from it as well.\n. Of course, an SVG layout system such as the one described at #386 would be much better than what we have nowadays... I actually have an SVG file for this computer panel layout, but converting that SVG into a MAME layout XML file is just too much work do be done manually.\n. hmmm... that's interesting! I think then I would adopt a mixed approach. Each change would require not a rebuild, but a re-run of my script + SHIFT-F3 (that way, I have a more semantic control of the placement of elements while benefiting from the real-time feedback)\n. https://github.com/felipesanches/PatinhoFeio/blob/master/SVG/Painel_Frontal_PatinhoFeio.svg\n. yeah... I've been thinking about that. Perhaps we should have a selection of views for a given machine so that the user could alternate between different areas of a panel like this. Also, how could I accomodate on screen both the computer front-panel rendering and the peripherals of the computer, such as the decwriter teletype ?\n. Sooner or later I'll upload an SVG layout, so I'm giving up on adding the python script to the build system. Closing.\n. dude !!!\nplease use git rebase ! :-)\n. kind of weird that you have 76 commits and zero code changes in this pull request...\n. Nice! So this assumes that the emulator will be running server-side while the UI can be implemented with webtechnologies, right? I like the idea of using SVG and I think this could be useful as well for 3D arcade cabinets such as Galaxy Force II and the other examples discussed at #388 \nAny idea if this system could also work nicely with an emscripten build of MAME so that the emulator itself could also be running within the browser?\n. Maybe a facade implementation of this could have the client-server communication protocol input/output notifiers translated into corresponding javascript events for the emscripten build.\n. @cbrunschen In order to avoid the clutter seen above (loads of unrelated commits and a few developer comments about them) I'd suggest that you use the git rebase command on your development branch. It would work like this:\ngit fetch upstream\ngit rebase upstream/master\ngit push origin webserver --force\nNOTE: The above assumes that you have a git remote named upstream pointing to https://github.com/mamedev/mame.git and that origin points to https://github.com/cbrunschen/mame.git\n. Inserir C\u00f3digo\n. you missed the \":\" in the end of the string. Please try to keep the same punctiation and case-style in translations.\n. again, here punctuation is not the same. You're forgetting the exclamation mark \"!\" in the end.\n. The work \"Status\" is already highly well understood ammong technically literate Brazilians (and portuguese speakers in general). I would keep it as \"Status do Autodisparo\"\n. maybe here a better term would be \"Selecionar filtros personalizados:\" or even \"Selecionar filtros personaliz\u00e1veis:\"\n. Apparently you need to leave the extra space here in the end of the string.\n. I'm not sure this is a good translation. The word that Ashura-X chose here means \"father\". I'd go with something like \"original drivers\" (\"drivers originais\"). But I'm not sure exactly in which context this string is used.. here I'd prefer \"Salvamento suportado\" (Saving is supported). same here: \"Salvamento N\u00e3o Suportado\". I think this is very wrong!\nIn my opinion, it should be \"Filtro Customizado\" (Customized Filter) instead of \"Filtro Customiz\u00e1vel\" (Customizable Filter).. I'd use the singular here: \"[arquivos INI sem categoria]\". a better wording here could be: \"encontrados arquivos INI sem categoria\" (INI files lacking category were found) instead of what seems to poorly translate into something like \"INI files without found-category\". I'd suggest it would be better to have here \"Nenhum grupo encontrado no arquivo de categoria\". \"inclui\" means \"it includes\". The correct here should be \"Incluir clones\" (a verb indicating an action: to include clones). we should translate \"Yes\" to \"Sim\". we should translate \"Yes\" to \"Sim\". The correct translation here is \"Temporaza\u00e7\u00e3o\" meaning \"Timing\" instead of the above which means \"Timer\". \"Temporiza\u00e7\u00e3o\\tImperfeita\\n\". There's a typo here! The correct spelling is \"possui\".. \"temporiza\u00e7\u00e3o\". \"Sele\u00e7\u00e3o da BIOS\" means \"Selection of the BIOS\" while I think it would be better to say here \"Sele\u00e7\u00e3o de BIOS\" meaning \"BIOS selection\" or (implicitely) \"Selection of a BIOS\".. Translate this!\n\"Recordes\". I have no idea what is the semantics of this string. Can anyone clarify this? I'd advise adding a source-code comment so that other translators have a clue when translating this string.. \"Sele\u00e7\u00e3o de BIOS\". The more commonly used term in portuguese here would be plural: \"Informa\u00e7\u00f5es Gerais\". \"Pular o menu de sele\u00e7\u00e3o de BIOS\". I disagree. \"Modo Janela\" is better here indeed. \"Modo Janelado\" (meaning \"Windowed Mode\") could work as well, but I think it may sound a bit weird.. I think both are good here. But I'd prefer @katananja 's \"Disabled\"/\"Desabilitada\".\nWhat really concerns me here is that \"Passou\" that was added. It means \"Passed\". I'm not sure that's the intended meaning.\n@cuavas can you clarify where and how this string shows up in the UI ?. IU  meaning user interface (interface de usu\u00e1rio) sounds pretty weird. Maybe we should use the word \"Interface\", but that would result in a pretty long string: \"Configura\u00e7\u00f5es Personalizadas da Interface\". For that reason, a shorter, but nice, alternative could be \"Personaliza\u00e7\u00f5es da Interface\", roughly meaning \"UI customizations\". Similar issue here with the uncommon IU usage.\nYou know... in the early 80s people in Brazil used to translate CPU to UCP (Unidade Central de Processamento). But nobody does that anymore! Tech-lingo broadly adopts acronyms in its original english form nowadays (such as CPU and UI or even GUI).\n. here I'd suggest saying something like \"Tipografia da Interface de Usu\u00e1rio\". We may consider using just \"Interface\" in places where \"Interface de Usu\u00e1rio\" results in too long strings.. Even \"Fonte Tipogr\u00e1fica\" (not mentioning the UI at all) would work well in this case, though. And could be a good / effective short string to be used here.. Brazilian computer users are used to the term \"Bold\" refering to darker than \"Regular\" font weigths. But if we want to use a proper portuguese word we could translate this to \"Negrito\". Keeping it as \"Bold\" would do no harm, though.. sure. Sorry about that.. This is code copied and adapted from some other driver. It is the first time I deal with the Intel 8275 so I gotta admit this is a bit of poking and guessing and definitely needs to be reviewed and cleaned up.. What's actually going on here?\nWhile 0x5000 made it always run the code block, what would be special about 0x500 in the proposed fix? This kind of change should come with an explanation of the meaning of the registers being set and of the \"magic\" numbers being used. Preferable with references to the datasheets, if the behavior is described in official documentation.. Thanks for the clarification!. just a quick thought inspired by this: perhaps having #defines for the known CPU IDs could make the semantics of this code clearer.. you mean it should remain as MACHINE_IS_SKELETON as it was before, right?. Would it make sense to provide a ROM with default calibration values for the CALRAM? \nWhat would calibration mean for an ideal/perfect device like an emulator? Are there canonical calibration values in the case of a \"perfect\" measurement instrument?. ",
    "awjackson": "MNG, AVI and WAV dumping don't require custom hooks inside the emulation of every individual sound chip.\n. The 16-bit wrappers for the scroll registers can be eliminated completely by using AM_WRITE8 in the 68k address maps:\nAM_WRITE8(bgscroll_w, 0x00ff)\nAlso, instead of having a wrapper that checks whether tilerom2 is NULL, why not just point popbingo's tilemap at creation time directly to the 8-bit versions of the tile callback (you'll have to move those from dooyong_z80_state to the base dooyong_state, of course)?\n. Please use a separate pull request for unrelated changes to an unrelated driver.\n. Sorry, that was meant to be a suggestion, not a rejection.\n. trap15, you yourself did a breakdown of the changes on a forum a couple of years ago. I guess you forgot:\nhttp://shmups.system11.org/viewtopic.php?f=1&t=42415&p=822369\nSummary: the changes consist of a fix for a crashing bug specific to the US 6-button mode, and some tweaks to make the game harder e.g. by spawning fewer 1up items.\nNone of the changes appear to be related to adapting the game to run on different hardware, so it's probably not a bootleg.\nLuckily I have archives from the MAMEDev list going back to when the set was added. The ROMs were submitted in 2012 attached to the following email.\n\nHi Micko,\nI tried doing the \"freeze\" bug on my Daioh board while playing, which I know happens in the version in MAME, and it didn't happen. I dumped my board, and all of the ROMs match except the program ones. I think it may be a newer version? I have attached a ZIP archive with the new ROMs.\"\n\nIn a followup email, the submitter provided this (unfortunately low resolution) photo of the PCB:\n\nwhich Guru confirmed to be an original Seta board. Guru also commented that\n\nit's not uncommon for arcade companies to lose the source and have to fix it directly in existing binaries\n\nThe set was added as parent and the old set demoted to a clone specifically because of the crash fix.\n. @rb6502 requested that I clarify something: what @felipesanches is trying to do with layouts is simply not supported by the core.\nMAME only supports one layout for the entire emulated machine, including all slot devices that happen to be connected. If you specify a MCFG_DEFAULT_LAYOUT in a slot device, you're overriding the layout for the entire machine, not adding elements to an existing layout. To do what he's trying to do, where you can plug a printer into a slot and have it display its own artwork and LEDs in addition to the screens and whatnot of the base system, we're going to have to come up with a whole new framework for \"layout fragments\" and figure out how the core should assemble them into a complete layout.\nThe reason slot devices with screens work is because in the absence of any layout file (neither user-provided, in MCFG, nor in a GAMEL macro) the core will select a default layout based (solely) on the total number of screens in the machine, including slots. But, again, this only works if there isn't any layout file. So right now, unfortunately, you can't have a machine with a built-in non-4:3 screen that also supports connecting additional screens via slots (e.g. a laptop with an external monitor port)\n. Based on this old MW thread, I think this patch should only apply to OPL3 and not to OPL2. It seems the out-of-order ksl shift table is actually correct for OPL2:\nhttp://www.mameworld.info/ubbthreads/showthreaded.php?Cat=&Number=311700&page=&view=&sb=5&o=&fpart=1&vc=1\n. It's my understanding that original, non-bootleg SF2CE boards do use the 12MHz CPU. \"Street Fighter II Dash\" is the Japanese name for SF2CE--i.e. the 12 MHz \"Dash\" CPU board was created specifically for SF2CE.\n. Yeah, this is great work, it's exactly what I intended when I created device_gfx_interface.\n. ",
    "rb6502": "I make Audio Overload that plays VGMs and I agree with the reject.  It's far, far too intrusive for the benefit provided.\n. Are schematics available from which we could mathematically derive the colors?  We generally prefer to do that, as the colors on individual machines can drift over 30 years of component aging.\n. My understanding is that Micko is currently reworking the build system to\nuse the 'genie' makefile generator (which is a fork of premake4), so\nlarge-scale build system projects like this are not a great idea right now.\nOn Sun, Dec 14, 2014 at 7:04 PM, Ramiro Polla notifications@github.com\nwrote:\n\n\nYou can merge this Pull Request by running\ngit pull https://github.com/ramiropolla/mame cross-compile\nOr view, comment on, or merge it at:\nhttps://github.com/mamedev/mame/pull/79\nCommit Summary\n- makefile: don't set TARGETOS while setting OSD, it will be set later\n- makefile: fix some comments\n- makefile: fix default NATIVE_OBJ\n- Run build tools based on build OS\n- Add CROSS_PREFIX to make cross-compiling easier\nFile Changes\n- M makefile https://github.com/mamedev/mame/pull/79/files#diff-0\n  (44)\n- M src/build/build.mak\n  https://github.com/mamedev/mame/pull/79/files#diff-1 (2)\n- M src/osd/windows/windows.mak\n  https://github.com/mamedev/mame/pull/79/files#diff-2 (2)\nPatch Links:\n- https://github.com/mamedev/mame/pull/79.patch\n- https://github.com/mamedev/mame/pull/79.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/79.\n. I'm a little terrified of the \"Merge branch 'master' into cfalco\" part.  Could you redo this cleanly, please?\n. Yeah, this is pretty much exactly why the x87 and 680x0 FPUs are done in SoftFloat.  (Also MSVC doesn't support 80-bit extended floats).  Also keep in mind that we do support PowerPC and ARM targets to some extent (ARM support will be growing this year probably).\n. GCC on x86 and x64 always picks 32-bit registers for 'float', 64-bit for 'double', and 80-bit for 'long double'.  Those sizes are 100% guaranteed to be selected based on the variable type, which is ideal for emulation (and certain other use cases).  MSVC doesn't support 'long double' at all (it's either an error or it's silently treated as a plain 'double').  This is among VIsual C's most well-known incompatibilities with other compilers (it's why Bochs and Mini vMac use SoftFloat).\n. I'll accept this, but please get your distro to update your SDL2 ASAP.  2.0.3 is the first version stable enough to run MAME, and even it has problems.\n. I'm not sure why this is still sitting in our pull requests; neither the patch nor the upstream repo have been updated for 9 months, and there's been no indication that we'd want to accept it anyway.  Closing.\n. Reject.  We already enter VBL at line 160; this patch makes VBlank also end on line 160 and last no time, which is strongly unlikely on hardware.\n. Actually, both the 224 value and the shotgun debugging are from Kale and/or Harmony.  My original driver was submitted with the IRQ and DMA on line 160, but they changed it because 224 fixes the rasters in certain games (e.g. Castlevania Harmony of Dissonance, a game which I'm inclined to want working).  160 breaks those and several others.  Can you explain that?\n. Title sequence, as soon as the leaf touches the water.  With the 224 value it works as on console; with 160 you start seeing visible VRAM uploads (!) and other corruption.\n. Yes, I think the long comment actually says that.  I was hoping you'd have some insight to offer on the problem since you've written your own emulator from scratch.  Oh well.\n. Restricting HBL / HDMA to visible scanlines indeed fixes Harmony of Dissonance.  Nice!\n. Endrift, thanks so much for your help with this issue!\n. GT Advance in-game is garbage without hblank IRQs on all scanlines and other games don't seem to care, so I'd say it's confirmed.  Thanks again!  You can buzz me more directly at messdrivers [at] gmail [dot] com, BTW.\n. Could you describe briefly what this fixes/improves please? :)\n. Ahh, my bad.  Thanks! :)  I'll apply this later today if nobody beats me to it.\n. Jezze, could we get a preferred license for your changes?  Most of the project's going with either BSD-3-Clause or GPL, but pick whatever you like.  Thanks!\n. This looks fine to me, unless Micko or Vas want to object.\n. Please use the bios feature to make these all one driver.\n. Good catch, and thanks!\n. Great work!  It's nice to see something with a custom CPU boot up.\n. Nobody should be using -resolution on an LCD monitor for what I hope are obvious reasons, so if he's running on a CRT I'm gonna apply this.\n. I'm fairly certain Windows dropped depth to avoid causing holy hell with HLSL; we now have a similar thing with GLSL (and will eventually with BGFX).\n. If this gets applied, anyone known to be setting the depth will be placed on the SDLMAME Lifetime Support Ban List.  There is literally no useful thing that can be achieved by letting the user change it, just an infinity of horrible, hard to diagnose errors.\n. This breaks full screen on Linux (Fedora 22, using the KDE 5 Plasma desktop).  Alt-Enter now toggles the window to maximum size, but the window decorations persist so it's not full screen.  -nowindow has the same problem.\n. Hi Felipe, this pull request fell out of sync with trunk and can't be applied as-is.  Could you please rebase it against current?\n. Looks great!  I'll apply this as soon as 0.163 is out.\n. SailorSat, I'm showing conflicts against current.  Could you rebase the patch against latest please?\n. Interestingly this is fine on latest Fedora 22 GCC, which is 5.1.1 from about a week ago off the branch.\n. Hi,\n\nThis patch is awesome, but it doesn't apply as-is to trunk.  Could you re-base it please?\nCheers,\n-RB\n. This was nothing to do with srcclean or whitespace: it misses OG's changes to how CPU cores work, and it appears to be using old floppy code rather than the modern system.\nAs a result, top of tree is broken.\n. I have, I think, resolved the issues.  Please check and make sure it's still working OK.\n. We can probably put together a list of games that Guru could go multimeter hunting on to try and find the divider pins.\n. Yeah, look for where it says \"Why has my account not been approved?\" at the top of http://forums.bannister.org/ .  The same instructions appear during the registration process, but a significant number of people somehow manage to ignore them.\n. Ok.  Given what Cowering said, then the PICO PCM should be a separate device type, possibly deriving from the 7759.  And then everyone's happy.\n. Never mind the AppVeyor build, it's busted period unfortunately.\nRegarding the Z8530, I think I'd prefer that a new device be made called \"8530n\" (N = new) or something which incorporates the useful pieces of the upd7201.  That would give us a cleaner basis for future expansion (e.g. supporting the weird encodings used for AppleTalk) than continuing to layer more stuff on top of z80dart.  We could later work on converting over the users of the existing 8530 skeleton.\n. It may be worth splitting out SDLC later; the current prevailing theory (which I don't fully subscribe to) is that diserial was a mistake because of subtle differences in UARTs and thus a lot of recent UART emulations have copy/paste code to do the bitstream (de)serialization/parity/etc.  So for now I'd copy/paste as necessary.\n. Can you redo this request against latest top of tree?  Micko just moved all the devices around so it won't apply as-is.\n. Do you have any information about this \"intelligent keyboard\" - how it's hooked up, or what the CPU type is?\n. Yup, likely a Synertek second-sourced MOS 6507.  Thanks!\n. Interesting!  Thanks for the detail.\n. Hi!  Do you have any kind of test binary, or even a few raw opcodes?  Also, has this been checked against a real hardware m68k?\n. Great, thanks.  And the h/w writes 7fffffff and then 80?\n. Also, needless to say, we'd be interested in any complete test programs you come up with.  We pass Gwenole's old 68K tester, but that only tests original 68000 instructions, not the '020 bitfield stuff like this.\n. Thanks.  I've applied the analogous fix to all the bitfield instructions and verified that your test case works.  Once some build system issues are resolved in MAME I'll apply the fixes to trunk.\n. Fix has been applied to master.  Thanks again, and let us know if you find any other m68k issues!\n. Thanks again!  Would it be possible to list the hex opcodes for the setup (just the 3 MOVEs and the PACK)?  I don't have a 68k assembler handy :)\n. Thanks, fixes have been applied to MAME trunk.  My understanding is that this issue reporter may be repurposed soon for other uses, so please email me directly at messdrivers [at] gmail [dot] com with any further m68k problems you discover.\n. FWIW, we've already discussed changing things so the current MAME debuggers (Win32, Qt, and Cocoa) are compiled and run separately and would connect to MAME over this or another protocol.  This would allow using a comfortable desktop debugger to control MAME running on a phone/tablet/ARM dev board/whatever.\n. This is because MinGW chooses to behave like MSVC instead of like GCC, so Joakim misdetected the compiler.  I've fixed both files to use MAME's built-in workaround for that issue.\n. I don't get that, but I do get the printer's status LEDs overwriting the system's main screen.  Does this work on a Windows build?  Because it smells like a core problem.\n. Removing the layout fixes the problem; I get a second screen with the printer then.\nETA: the printer doesn't seem to respond to incoming Centronics data though (tried The Print Shop on the apple2e driver and a few other things).\n. Well, go ahead and comment out the MCFG line adding the artwork layout for the printer.  Then try the original setup Felipe was going for and see if you can get the printer to accept output from the emulated PC instead of your dummy pipe.\n. I've seen commercial 1990s and later dot matrix printers that were as fast or faster (especially in draft mode), so it's not impossible.  But yeah, it'd be nice if @ramiropolla could verify the speeds are close to what the printer's rated for.\n. Bug #418 now covers this issue.\n. Not really.  There's no need to use an F/OSS program to create models for another F/OSS program.\nAlso, things are happening about this, but they cannot currently be discussed.\n. Glad to hear that, @Luke-Nukem !\nFor reference, the Vectrex buzz was due to a manufacturing error; when it's built to the schematics it has no buzz.  Some models (I think all of the Bandai-branded Japanese market ones) were built properly; people sometimes mod those to have the buzz again for \"authenticity\".  This was covered in interviews with the designers in the \"Vectrex Radio\" podcast.\n. LUA scripts can draw arbitrary  primitives and text overlaying the game screen; there is one already that shows hitboxes in one game.  More advanced GUI functionality can be added if necessary.\n. Are there schematics for the system?  Those would allow determining the true RGB values.\n. I'm inclined to at least reopen this based on these side-by-side screens of a real Osborne-1 and MAME:\nhttp://forums.bannister.org/ubbthreads.php?ubb=showflat&Number=102222#Post102222\nADD_MONOCHROME_GREEN_HIGHLIGHT is way too subtle with the highlights compared to hardware.\n. When submitting pull requests, they should always be against the current master branch :)\n. MCUs are 6805s that were dumped via test mode.  The specific model is known and has a non-power-of-2 ROM size, same as the Egret/Cuda 6805s in the Macs.\n. CPUs in slot devices can absolutely find their ROMs automatically.\nCheck e.g. bus/a2bus/mouse.c - the 68705 finds its own ROM no trouble by standard means.\n. When smf made the 6551 respect CTS we had drivers where it's tied to 0 set it to 0 in the driver's reset function.  This makes the most sense in terms of moving hardware-specific things to the hardware without compromising the actual chip's accuracy.\n. Hello, Javier Donoso!  This space is not for duplicates of MAMETesters issues.  Closing.\n. I don't understand what this change is intended to accomplish.  START1 is 100% the correct thing to use for player 1 on a console driver.\n. Agreed, this would be greatly useful for debugging FPUs and the like.  32 and 64-bit (\"float\" and \"double\" on x86) and 80-bit extended (used by x87 and 680x0, at least) would all be interesting formats to support.\n. They appear in registers, it's do they appear in memory that's pertinent here.  This is for the memory viewer, not the CPU register viewer.  (Don't worry, I thought it was the other way around at first too).\n. This should be implemented as a renderer module that's a peer with the existing OpenGL, D3D, Soft etc. renderers.  You'd then do -video=serialvector or something similar.\nLook at int sdl_info_ogl::draw(const int update) in drawogl.cpp to see how OSD parses the primitive list.  (Similar functions exist in other renderers).\n. This issues list does not replace MAMETesters for bug reports.\n. Firehawke had done some investigation earlier into why -verbose isn't picked up at the earliest possible point and had some progress to report but not yet how to fix it correctly.  Your patch solved the symptoms but not the underlying problem.\n. LN: are you planning to sort out the ER2055 situation soon, or can we apply this?\n. AJR: since LN seems to have died, could you re-submit this against current?\n. Haze: the screens in question are typically 120.0 only; they won't work well with the vast majority of MAME games.  The original poster should run GroovyMAME, which has hacks for those monitors, or not use -vsync because it will make games play at the wrong speed even with black frame insertion.\nMonitors compliant with GSync or FreeSync already work with stock MAME and -switchres and will sync exactly to oddball rates like 53 Hz or 59.97 or 60.1.\n. His specific claim is that with -vsync -noswitchres on 0.156 with a 120 Hz video mode somehow the game ran normal speed.  To me that actually indicates that a bug was fixed, because the game running double speed with -vsync -noswitchres on a 120 Hz desktop is what I would expect to happen.\n. I think this would violate the principle of least surprise in a fairly major way.  There's no precedent in the Wii's software library for a still Wiimote to randomly warp offscreen, and in some of the slower-paced MAME lightgun games if you wanted to line up a shot and keep it there, having the pointer suddenly warp offscreen would be quite upsetting.\nAnd of course since we don't know the difference between Wiimotes and arcade light guns, those users would really find this weird.\n. In general, having more RAM and/or an SSD helps greatly with this sort of thing.  I have 8 GB and the factory SSD in my mid-2013 MacBook Air and no files in MAME take any serious amount of time to compile.\n. Thanks!  I'll take a look.\n. Thanks!  The fix is applied to MAME trunk, and it fixes a long-standing bug where the MacOS Jigsaw Puzzle applet would freak out and create impossible puzzles.\n. Agree that this is a real bug and should be fixed, and beyond Vas' uninitialized variable I don't see any real problems with the code.  Hap, could you clarify what you didn't like?\n. Compile prerequisties for Jessie (which should also cover Wheezy) are at: http://forums.bannister.org/ubbthreads.php?ubb=showflat&Number=103256#Post103256\nActual compiling is simply a matter of \"make -jX\" and waiting a while.  (X = # of CPU cores plus 1, so -j3 for dual-core, -j5 for quad-core, and -j9 for 8-core).\n. Check your packages and see if either GCC 4.9 or Clang 3.5 or later are available; if so, installing them may work.  If not, you may need to update your distro if possible.  Otherwise, stick with 0.168 which predates our use of modern C++11 coding techniques.\n. Just a fair warning, if you use any kind of compiler version workaround you lose 100% of support, even if the problem is our fault.\n. Cross-compilation patches would be very acceptable, I just don't want the C++14 workarounds :)\n. I have no idea what that 0009- patch is meant to do, could we get some clarification?\n. Ok.  That should be fine then if it's been tested.\n. Ever since the projects were merged, certain people have been seeking to deny the hard work of many devs (myself included) on the \"former MESS drivers\" by stripping them right back out of MAME again.  We consider this behavior to be deeply insulting, and we will not provide people the means with which to do it on a silver platter.\n. QMC2 manages to keep up with everything we throw, so the inability of for-profit frontends like GameEx to do so frankly reflects poorly on them, not on us.\n. It's actually a bit worse than that.  GameEx supports console games, they just haven't ever supported MESS/MAME for them.\n. Since this is a hack let's just close it.\n. If it's the 0.170 release, end-user and emulation bugs should be reported at mametesters.org.  We try to keep this \"Issues\" section for technical things such as the recent 68020 instruction screwups.\nIf it's a random GIT pull, those aren't supported; the integration of MEWUI is still very much a work in progress and we aren't accepting bugs on that prior to 0.171.\n. Right.  The idea is that memory regions load from ROMs, so there's no need to save them; they already exist in a file on your disk.  Do you have a use case where that's not valid?\n. The actual setup described there is not exactly correct, you have to include something like \"msvc\" at the end of the command line to generate an MSVC solution file.  The build system is badly under-documented; end user documentation is nearing good shape thanks to Firehawke's efforts.\n. There we go.  \"make vs2015\" and then load the .sln into MSVC2015.\nNote that MSVC is not an official compiler, so you must ensure any changes you plan to submit compile and operate correctly with MinGW.\n. From the source:\n\"TODO: add proper RTC and Rumble support\"\nSo it is a known/planned thing although I don't think eta is working on it right now.\n. This has been solved as far as implementation.  I'll close it when the next release comes out :-)\n. I think this is done to the extent possible with osd_work now using std::thread.  ISO C++ hasn't yet approved standardized networking or filesystem abstractions.  So I'm closing it.  Thanks Micko!\n. In order to perform \"permanent\" cheats, you should look into writing a Lua script which performs the same function (e.g. changing a memory address) and use that.  Your use case is precisely one of the reasons we provide the Lua functionality and gave it full access to the emulated machine's internals.\n. Aaron: yeah, I've been pushing for that, but I don't think it's happened yet.\n. QT5 is the correct version; it appears you tried building with Qt5 after building with Qt4 and so the old .moc file wasn't cleaned up.  'make clean' should fix things.\n. I'd argue that include guards are no longer necessary since we have a strict compiler check which enforces compilers which support #pragma once.  I would accept a clean patch that replaced them with that no problem.\n. There's general agreement that making tools a target instead of a feature of other targets makes a lot more sense.  I don't know if it'll happen though.\nAlso, it's important that if you make from non-clean and change anything about the build, you include REGENIE=1 to regenerate the makefiles.\n. Yeah, my understanding is that valgrind is right and our current trademark isn't an issue for the DFSG.\n. Yeah, most of our Python code is dual-compatible but the translation stuff is very new so it hasn't been shook out that way yet.\n. Yes, using a path requires that we detect the features of the original cartridge; when using the software list that information is included in the list.\nIt's possible to change it so you can load arcade ROMs by path if the set name is given, but I'm not convinced it's a useful feature except for people hacking games.  It wouldn't give the ease of use Sworddragon is seeking because you'd still need to know the set name.\n. It's not possible to autodetect the system reliably.  Closing this issue.\n. setuid and setgid come from libuv, so if you're building with the system one it's not our fault ;-)\n. This is a major issue for synths too.\n. WinUI is a poorly-coded unsupported unofficial add-on that most of the team wants to die. It is not the responsibility of contributors to MAME to make it work and Robbert needs to stop harassing external contributors about it.\n. Specifically, the non-BGFX rendering paths are becoming deprecated.  We plan to run things like GPU computing and hardware rasterization of 3D games through BGFX since it abstracts everything for all the platforms we run on.\n. Again, BGFX abstracts everything.  Once Vulkan is fully implemented, @MooglyGuy 's existing BGFX shader chains will Just Work.  Just like how BGFX shader effects currently work on OpenGL, GLES, D3D9, D3D11, and WebGL (for the Internet Archive's MAME-in-a-browser).\n. Yeah, it was fine, sorry about the wait :)\n. startaq: drivers that do that currently cause MAME's core code to fuck up and it usually ends up crashing on non-Windows builds.\nPernod: thanks for the additional use cases.\neta: we already have it possible that adding a slot device adds more slots (and QMC2 handles it well), so this is simply an extension of that concept.  User discovery of software is irrelevant if it can't run due to missing hardware.\n. Which is precisely why it doesn't make sense to put all possible software lists in the base driver, complete with potential daisy-chains of auto-added options.  Adding software lists with the adaptor devices follows how real life works, and indeed how such devices are described and marketed in real life: the Intellivision System Changer \"makes Atari 2600 games available to you\", the 32X \"adds the ability to play new advanced 32-bit games\", and so on.  Going the other way violates the least surprise principle.\nTaking eta's argument to its logical conclusion, we'd have to add every softlist we have to the PC drivers, because you could run MAME on PCs.  And that would of course be an obvious usability disaster.\n. The BBC Micro add-on used National Semiconductor's ill-fated 32016 which AFAIK is not related to the TI 320xx family.\n. MAME is not in the business of simulating all of the possible imperfections of LCDs, especially since at optimal viewing angles they don't have any.  You can get the effect you want with an overlay PNG without modifying MAME in any way.\n. I'm reopening this because there's a trivial fix: upgrading our version of Info-Zip's unzip library to the 6.0 version which handles ZIP64 extensions (and contains a number of security and correctness fixes).\nGiven that this issue shows at least 3 people have strong opinions about this, I expect a pull request from someone that does this shortly.  Don't disappoint me.\n. We reinvent one of the most commonly sourced wheels in applied computer science?  Alright then.  I still expect a pull request, but the difficulty's gone up a hair.\n. I merged this because it passed a code review and because Felipe, as you know, is usually prompt with submitting the ROMs.  I'm a little concerned they haven't actually turned up yet in this case.\n. The 4 chunks was to allow ultra-hi-res (4k/8k++) screenshots to be taken, I believe.  @MooglyGuy would you care to comment? :)\n. Jigsaw works fine in the IIci driver.\n. FYI, the HD63450 that we do support is 100% compatible with the MC68450 (it's a licensed Hitachi clone of a Motorola part, something that those two companies did a lot).\n. Actually if the emulated code is doing more, that means the emulation code can do less, usually :)  For example, the original 5380 has very little intelligence and relatively little code.\n. That's fine.  Please send the ROMs to me at messdrivers at gmail dot com and I'll merge this as soon as I get them.\n. Your \"inconsistence\" (English is not your native language?) is orthogonal to the issue here.  If it were fixed, there would be no reason for you to object to this feature, so keep your hands to yourself.\n. Per-software save states would be very useful for computers/consoles as well.\n. We have an excellent PCI framework, currently used by iteagle.cpp and (minimally) by atlantis.cpp.  The ES137x sound card and the 3dfx cards are available as pluggable devices thus far.  We just need to emulate the PCI host, which is usually part of the south bridge.\n. How so?  MAME has disc switch support now on PC.  (I recall that was your hobby-horse, anyway).\n. If we pull from UAE, it'll be from upstream WinUAE.  Toni's pretty friendly as long as we're doing the work :)\n. We can revisit this when there are working PCI PCs in MAME.\n. Vas, is this OK for you now?\n. FWIW, the guidance is to type 'make android-arm', which will generate an Android Studio project you can open.  This is likely to only work on Linux, and possibly the Mac right now.\n. Complete instructions for building the Android version on a windows machine have been posted through the link NULUSIOS posted.\n. It's great to see one of the originators of INTV emulation return :)  Let us know if you need any help.\n. We know about this, and I was hoping Couriersud might have a look, but I think he's busy so I'll check it out.\n. ...well, I thought we did, but it's actually working fine for me on the latest El Cap.  Make sure your mame.ini has \"mouse 1\" and \"mouse_device mouse\".\n. Hi, can you verify if this is still happening for you?  As I said, I have the mouse working fine on my Mac with El Cap and SDL 2.0.4.\n. Please verify that the software was fixed by Robbbert's change so we can close this.\n. bump mnadareski, can you please verify that Robbbert's change fixed your problem?\n. Please PM me the ROMs on forums.bannister.org or email them to me at messdrivers at gmail and I'll add this.  Nice work! :)\n. Agree with Haze and Metallic: if Lua doens't meet your needs, follow Carl's example and extend it so it does.  And remove that bit of this request; we'll certainly take the bugfix and the pointer cleanup.\n. Typically that's the result of trying to compile MAME, discovering you didn't install Qt 5, and then continuing the compile without a \"make clean\" in between.\n. Could you please clarify what you mean?  What game are you playing, did you enable \"mouse\" in mame.ini, and what OS?  And did it used to work and break in 0.173, or is this simply a new report?\n. I'd say it's useful for classification/documentation purposes to split the lists, but if you're really against it I'll go along.\n. Eta, have you had time to check this out yet?  I'm trying to keep the pull requests folder as clean as possible, and to avoid undue delays for external contributors.\n. Don't the handheld games in fact use SVGs directly as layouts now?\n. Agreed, it's using pluginspath to find boot.lua but the rest of the plugins assume ./plugins as the path.\n. Vas, can you comment if the latest version is acceptable?\n. Didn't see this before I bumped it myself after Lord Nightmare confirmed that 4 MHz is the correct value.  Either way, it's bumped now.\n. The includes for the hack were never brought into mainline; I wouldn't allow it :)\n. Crackling noises are expected when your computer is too poor to run the emulation at 100% speed.\nThat said, if you are getting 50-80% speed on an x86-64 architecture system with those drivers, something is terribly wrong with how you've configured MAME on your system.  Have you tried \"-video opengl\"?\n. As a reference point, if I run the a800 driver with the Miner 2049er cart and hit F11 to show FPS and F10 to unthrottle I get ~600% speed on a 3-year-old 1.7 GHz Core i7 MacBook Air (running OS X rather than Linux, but performance is fairly comparable since both OSes are from the UNIX family tree).  The upshot is that even a relatively slow laptop CPU should handle an 8-bit computer pretty well.\nLet's try the other way: does -video soft help?  If your system doesn't have hardware-accelerated GLX, -video OpenGL can actually hurt your framerate.\n. Hi Joakim,\nA few comments on this one, you didn't properly add the driver and device in the commit.\nhttps://github.com/mamedev/mame/commit/c0f5e963534a28af6b1831239e70f8867a9d153a shows the additional stuff for adding the driver\nhttps://github.com/mamedev/mame/commit/f503c719341fbab3ac08cf4221a4f188494609fc shows the additional stuff for adding the device\nNext time please make sure you get that stuff done.  I know it's currently undocumented, we're working on that :)\n. Could you please just create a pull request with both the .cpp and the .h in one atomic operation?\n. The goal here is to be compatible with old DEC documentation, as I understand it, so the old-style leading zero is definitely desirable.  Maybe 0o as the default, and have a \"DEC mode\" command that switches it to accept just 0?\n. I like @pullmoll 's suggestion.  @shattered , if you can make it work that way I'll be glad to apply it.\n. AJR: until it was enabled recently nobody registered debugger commands that used class state either.  Because it was pretty much impossible.\n. Concerns have been raised by Mr. Haywood that jailbrek's size changed without the CRC/SHA changing, which is unusual to say the least.\n. The case 0xb: is missing a break; so it will fall through into the 0xc: case.  Is that intentional?\n. I'm more concerned with the every frame string lookup on the ioport name.  On PCs, it's nothing for a system like this, but on ARM targets every bit helps.\n. They're similar enough hardware that it would just be a lot of duplication.\n. As discussed on Bannister, the actual problem is that bankdev doesn't pass along the debugger flag from the input address_space on its read/write handlers to the address space being called.  This also has been problematic for the Apple II, although I didn't understand why before.  So I really appreciate this report even with the aggressive phrasing :)\n. Fixed (and verified for Ryan's example).\n. This feature exists because long ago people would configure MAME to be controlled exclusively with joypads, and then they were unable to control MAME when one went bad or got unplugged.  (This was especially fatal for cabinet builders).  Removing the mappings for joypads that don't exist guarantees you have some form of default control restored to the user.\nIt's not a problem, it's fully intentional.  I have changed the title to reflect the common-sense origins of this feature.\nAlso, who the heck unplugs everything on their PC at random all the time?  When I get stuff working, I superglue the damn ports.\n. We've now synced upstream rapidjson, is this still necessary?\n. Great, thank you!\n. It's not just DEC, Mac desktop keyboards go up to F19.\n. Yeah, he wanted to make sure the final tagged version compiled on all of our supported systems.\n. Could you please retry this with the new 0.177?  0.176 and previous SDL2 based versions had significant input problems on Linux and OS X.\n. Yes, support for the Digital Video cartridge is planned, but first our CD-i developer is working on better understanding the system so that we can improve compatibility with regular titles.\n. Thank you for fixing this problem, it was widely reported but nobody did anything about it :)\n. While that's true, Konami had a tendency to wire up the same chips in different ways for each game (Olivier and I call it \"Lego Hardware\") , so it's possible there isn't a direct match besides using the same chip.  I'll take a look though.\n. I will be working on the 68k-based SoCs this fall; I have specific Ensoniq use cases for them, but helping fruit machines is a bonus too since they annoy all the right people :)\n. Look at something like the esqpanel device for an example of a MAME device\nwith 2-way HLE serial.\nOn Fri, Aug 12, 2016 at 9:34 AM, John Parker notifications@github.com\nwrote:\n\ncrosses fingers ... as there's plenty of documentation out there on\nccTalk, in terms of how to construct messages and what response formats are\nexpected - so as Keith said before (over on dadsfme), if someone were to\ncommit a working skeleton device were constructed with one or two working\ncommands (so perhaps correctly responding to the initial Request Product\nCode commands on sc4dnd) - it would be easier for someone to then flesh it\nout with all the other commands/responses (provided it doesn't encrypt\ncomms later on).\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1224#issuecomment-239447429, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI1OO2QK6Gu6-p_LqJRuDwpi4q_gK1hsks5qfHZtgaJpZM4JhFYD\n.\n. Great!  I'm glad you got it figured out with that tip :)\n. If that's necessary, I'd like to build something as close as possible to the binary package distributed by SDL.org where you can drag it into /Library/Frameworks.  Requiring Mac users to actually build SDL is something I really want to avoid, even if there's a nice Xcode project for it.\n. I approve of this separation because it'll provide a useful basis for Nintendo DS, which contains basically 2 complete GBA video blocks.\n. Makes sense that all the cabinet control comes out of one port, actually.  On hardware it probably goes to a separate board with a microcontroller that actually manages the lights and force-feedback and stuff.\n. Is there some reason we couldn't just add a fake dip that allowed turning this correction off for the 1 person in all of history that's going to run MAME with the original h/w for this?  I mean, this seems like such an obvious win for 99.9% of MAME users that I can't believe we're going to discard it.\n. Yeah, and with MESS merged in we have access to the Machine Configuration to avoid polluting any real DIP switches the game might have.\n. Yeah, Vas is being idealistic all the way into an unusable corner here.  It's nonsense on stilts for mass-storage media to have two completely separate code paths depending on if you open them through a softlist or the file picker.\n. ...and it's equally dumb to have a  tag or whatever for every softlist item that just duplicates data which already exists in the filename.\n. Mac disks pretty much universally can be IDed from their first two bytes and the image size, so that's a poor example.  What's life-or-death is knowing if an Apple II image is .DO or .PO - there's a (completely terrible) heuristic in MAME right now that tries to guess, but it gets things wrong on a fairly regular basis given the sheer variety of bootloaders you find on the machine.\n. I'd suggest it should be simple enough for someone to disassemble the DSP code and find out if it's doing interpolation.\n. I'm going to go ahead and close this pending someone making a serious attempt to disassemble the DSP code and determine if hardware did interpolation or not.\n. Yeah, I'd like to hear what's correct this week for keyboards too.  I've been doing mine as oldschool as possible because the fashion keeps changing and I can't keep up.\n. This is a duplicate of #1107 (https://github.com/mamedev/mame/issues/1107).\n. @ajrhacker makes a lot of excellent points about the state of video, but yeah, I don't think the flip bit belongs in the graphics decode.\n. What are your OS X and Xcode versions?\n. Could you please re-push with a slightly more descriptive name, like \"x68k: Added some clones to the software list\" or similar?  That makes it much less error-prone to assemble the readme for the next version.\n. This breaks Linux, it's going in over my dead body.\n\nAlso, we need Brad to decide what the proper way to do this is.\n. @startaq Testing this patch without a joystick is roughly like testing an audio patch without a sound card.\n. I don't actually think this is so terrible, since it's clearly marked BAD_DUMP.  We do equally awful things to make sets run as an interim solution all the time, and there are known users who only play parent sets.\n. Can you redo this with a more precise description, like what it's the 286 variant of?  These go directly into the whatsnew so they need to read well :)\n. Thanks for the new request, I'll close this one!\n. Because I trust you and DU on this stuff, but I don't want to set a precedent where people submit \"ransomware\" PRs.  It's easy enough to re-open when the ROMs are made available.\n. This looks strongly likely to break other things, but @galibert would probably know better.\n. For pre-HD consoles (2600, INTV, NES, SNES, Genesis, PS1, Saturn, Dreamcast, PS2, Gamecube, Xbox), US NTSC usually gives the best presentation of the widest variety of software.  The reason MAME specifies European English > US is because of the FBI warning screen, which doesn't exist on consoles.\n. Can you direct me to the details of how Lunar Lander has sound?\n. Hi, could you re-do this with the name of the system in the title?  \"Correct medium resolution mode\" will otherwise go directly into readme.txt and confuse everyone :)\n. Width or byte width?  I actually don't mind stride either, although it has more of a graphics connotation.\n. I knew something was wrong regarding System 7 but hadn't tracked it down yet.  Thanks!\n. Mahlemiut: I strongly recommend updating x68k to use z80scc.cpp/.h, which has real first-class transmit/receive support among other things.\n. Those drivers can't boot an OS yet.  It's on my to-do list.\n. The comments in the disassembly seem to be made of descriptions of what each opcode does, rather than explaining how the algorithm works.  That's not very useful.\n. In cases where there is interference, we always prioritize compiling against the Mac-native version of SDL over the X11 port that Homebrew and friends ship.\n. My understanding is that we are currently looking for someone to move PORT_NAMEs to an external data file and don't want to accept more of them in order to incentivize that happening.  If you can separate that part out of the patch the reset is probably OK.\n. I don't see what's wrong with the current mapping, given we've had it since 2001 and nobody complained in that time.\n. I'd like to see MAME's HTTP interface come back in general, and then add a mechanism by which drivers could add their own pages.  Good luck, Micko :)\n. Haze has an excellent point.  We will definitely need the ability for drivers to instantiate their own servers (not necessarily HTTP) for things like that.\n. Nathan's fix is in trunk, so I'm closing this one now that it's not necessary.\n. Maybe we should provide a logprint.h header with on/off and verbose-level forms so people don't keep reinventing that wheel?. Do not modify the ROMs, please use ROM_LOAD16_WORD_SWAP().. Same here; use ROM_LOAD16_WORD_SWAP() instead of modifying the ROMs.. Even if the ratios work out, I think it'd be preferable to use configure(), just for the documentation value on the changing pixel clock.. Why are you replacing useful English names for these ports with generic ones?. Alright, can you document the 9 status input possibilities there in a comment or something?  It could be useful for PCB/cabinet owners at least.. Yeah, \"Brooktree BT45x y Color RAMDAC\" would be quite sufficient.. MCFG_DEVICE removal has nothing to do with devcb3.  DEVCB = DEVice CallBacks.  MCFG removal is not yet mandatory.. On the contrary, it's customary to use blank lines to separate logical sections in the MCFG block.. Looks like inconsistent tabs/spaces.  Happens frequently enough on MAME submissions that we run srcclean on everything before release.. Tabs/spaces again.. @cuavas has a complete rewrite of the via6522 on a branch which hopefully will correct this and other problems (most of the Macs don't work because of the current state of the via) but in the meantime I think this probably makes sense to include.. I don't know how resolve_safe is implemented, but returning a constant shouldn't be 1-2 complete emulations of the machine slower than calling through a delegate.  We routinely praise Ted and Ryan for finding lesser speedups in other drivers, after all.. ",
    "startaq": "Please create a clean pull request without all those merge commits.\n. Create branch, make your changes, commit, create pull request.\n. Addressed by commit 4e9265719006f635c16a6197f903717a9b9c0f7e\n. Fixed by commit 4e9265719006f635c16a6197f903717a9b9c0f7e\n. Please separate the video related changes and put those into their own pull request.\n. What's the exact drive model you recorded the sounds from? Eventually we should assign the correct sounds to the drive models, since they all sound a bit different.\n. It would be verified if you derived the frequency from the schematics, this is just another guess.\n. Is this feature finished? We can render SVGs and the caching is implemented too. Anything left?\n. Well, for one you should split unrelated features into multiple pull requests. In this case, you should do one for the software list updates and floppy, and one for the mc6845 updates.\nYou then run \"mame -validate\" which will among other things point out issues with the software list xml files.\n. Closing this since it doesn't seem to be an actual issue in MAME.\n. The driver still supports 4 floppy drives, it's just that by default only two are attached. If you need more, you can attach them with the slot system like this:\nmame coco -ext fdc -ext:fdc:wd17xx:2 qd (to attach floppy drive 3)\nYou can use the -listslots option to list the available options.\n. What command did you use to compile? Did you make clean before compiling?\n. It works fine for me, or am I misunderstanding something?\nFor example: https://github.com/mamedev/mame/blob/master/src/devices/bus/svi3x8/slot/sv801.cpp#L41\n. Well can you tried on OS X then? Right now I only have Windows to test, and it works fine there. For the SVI-328 you can use mame svi328 -exp sv601 -exp:sv601:6 sv801 -flop1 diskbas. That should load Disk Basic from floppy on boot.\n. Fixed in commit 22798a7.\n. I'll close this since it just adds a bit of commented out code and the extension cable should be emulated as slot device anyway.\n. Shouldn't it be libunicard.a then?\n. For a simple monochrome green palette with highlights you should use the pre-defined one:\nMCFG_SCREEN_ADD_MONOCHROME(\"screen\", RASTER, rgb_t::green)\nMCFG_PALETTE_ADD_MONOCHROME_HIGHLIGHT(\"palette\")\n. I can't reproduce this, gcc (GCC) 6.1.1 20160707 on Arch Linux. Exerion works fine here with latest master.\n. So is the plan to deprecate required_ioport_array then?\n. I liked the automatic disk image creation from the command line. Just enter mame system -flop1 new.dsk and you would have a new empty disk image attached, without needing to go thru all the menus.\n. Do you have specific disk image that can be used to demonstrate the issue?\n. Closing this since a fix has been committed.\n. I was looking for an additional identifier, like \"HID-compliant mouse (\\?\\HID#VID_045E&PID_0053#7&18297dcb&0&0000#{378de44c-56ef-11d1-bc8c-00a0c91405dd})\" in the example. This didn't happen with SDL, so I assumed it doesn't work there. Other than that, it seems to work normally in Arch Linux. I don't have a joystick to test.\n. It's probably not intended to need to implement LIST_PARTITIONS. Pinging @npwoods.\n. ACK doesn't seem to be used anywhere.\n. Do you really need to save the old state here? Does m_centronics->write_strobe(!BIT(data, 2)) not work?\n. ftruncate returns 0 on success. See recent change 2fe1b16c\n. Why not write it like this (probably closer to hardware):\nUINT8 data = 0xff;\nif (BIT(m_input_select, 4) == 0) data &= ioport(\"BUTTONS1\")->read();\nif (BIT(m_input_select, 5) == 0) data &= ioport(\"BUTTONS2\")->read();\nif (BIT(m_input_select, 6) == 0) data &= ioport(\"BUTTONS3\")->read();\nreturn data;\n. (just a note for future improvements)\nYou can use an ioport array here: required_ioport_array<16> m_kbd;\nThis also gets rid of the switch case then: sense = m_kbd[(data >> 4) & 15]->read();\n(example driver: svi318.c)\n. The game is called \"Millenium - Return to Earth\". Yes, it's spelled incorrectly. See http://hol.abime.net/5159.\n. I'm doing this as pull request mainly because of this. This causes the system to completely realloc the render texture on all dirty changes (as opposed to only on size changes before). I had to add this to get it to render the tilemaps correctly. Probably this can be done in a better way?\nNote: It doesn't have a performance impact because this only applies to dirty changes from the tilemap viewer, not from the actual driver.. z80ctc_device?. I prefer the type of device here instead of the filename, which can change (we have a lot of incidents in MAME where the filename specified in the header isn't the real filename anymore). I also don't see much value in duplicating the filename.. Please use either uint16_t or u16.. Same here.. And here and all the other places where you access hardware registers with a defined size.. Please add some whitespace here to make it better readable.. Spacing is weird here too. Our usual syntax would be:\n} while (x <= dest_x);\n. first_screen() shouldn't be used in new code.. I don't think you should add yourself to the copyright holders list of the drivers where you only did minor changes.. lockload specific things should be in the dragngun_statederived class.. ",
    "etabeta78": "Thanks for the contribution. \nSome of the changes are 100% fine, others are not as good.\nThe request will be closed, but in the next few days I will review the various changes, adding what is ok and giving you feedback about the rest, in view of future contributions :)\n. The merging process is going on, albeit more slowly than I hoped for (real life got in the middle, unfortunately). I will give a comprehensive account of the acceptance/rejection of your changes once I'm done, but in the meanwhile I wanted to give you some feedback so to show that I've not forgotten about these changes\nFirst of all, the choice of merging alt versions of games in the same romset is a practice that we won't accept. Each set in the xml softlist should reflect an item that user could buy in a shop. E.g. if a game would have come in a CD + floppy setup, or in a Cart + floppy setup (like some c64 items), then the softlist entry should contain those items. As you might have noticed, those sets have been split into parents/clones. Similarly, it is good to avoid creating set with misc unknown images as in adam_flop.\nSecond, you had put into the list some known bad dumps or hacked dumps. These should be avoided whenever possible, unless you have good reasons to assume that the images were wrongly labeled\nOn the bright side, you have definitely done a very good job collecting info and images. This has been appreciated a lot! You might however notice that when compiling the lists for Hungarian and Czech systems you could have exploited UTF-8 chars to have more accurate entries in the description and manufacturer fields :)\np.s. could you please contact me about the missing images for mc10, mc1000_cass and tvc_flop (currently commented out) and the new cp/m disks for dim68k? Thanks\n. thanks. the compclr2 one was a mistake of mine that went somehow undetected when I tested the -lsoft output :(\n. patch added, but without merging the request (I have just re-created my local setup and I feared to screw things up again ;) )\nthanks for the contribution!\n. something (maybe line ending?) went bad with the megadriv.xml part, since it replaces the whole file with a new copy... can you check what is wrong and resubmit?\n. I have integrated the Game Gear part. Please re-create the megadriv.xml part and resubmit (try also to run srcclean on the file: it might fix the problem)\n. added to the main tree, after a bunch of cosmetic changes. thanks a lot for the contribution :)\n. This approach is the \"legacy way\" to add input devices (still used e.g. by\nmegadrive), adopted when there were no slot devices available. I agree that\nit would be better to use slot devices, of course, but maybe the patch can\nbe accepted and cleaned it up afterwards?\nf.\nOn Sat, May 2, 2015 at 4:27 AM, Vas Crabb notifications@github.com wrote:\n\nIs it really a good idea to do the mouse support this way? I would've\nthought making it a slot device would be a better idea, making it easier to\nadd other controller types (e.g. Densha De Go! controller) later. Also,\nintroducing global variables for the mouse is a red flag. New code\nshouldn't be introducing things like that.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/169#issuecomment-98293032.\n. oh yeah, those should just go inside the driver class, of course :)\nI was referring only to the PORT_CONFIG stuff...\n\nf.\nOn Sat, May 2, 2015 at 9:11 AM, Vas Crabb notifications@github.com wrote:\n\nUsing globals for mouse input is still a bad sign - at the very least that\nshould be cleaned up before accepting the patch.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/169#issuecomment-98323441.\n. On Sun, May 17, 2015 at 1:19 AM, Felipe Corr\u00eaa da Silva Sanches \nnotifications@github.com wrote:\nI'm curious to understand the rationale behind the idea of it being\nconsidered \"most definitely unacceptable\" to you. What are the bad\nconsequences of it? Isn't it actually doing what it is designed to do? What\nare the drawbacks that make it so bad in your eyes?\nit's not bad in his eyes, it's against the direction MAME and MESS have\nbeen moving in the past 4 years.\nif you go back looking to the core changes made when adding the driver\nstates first, and the driver classes later (when passing to C++), and the\ndevice-ification of various components, you will see that we have kept\nremoving static variables in favor of class variables.\nthe reason is that we aim to reach the point of being able to run multiple\nMAME sessions on a single machine (e.g. to connect two arcade cabinet or\ntwo consoles) and static variables risk to make this kind of scenario\nunreliable.\n. I'm going to take care of this. Huge thanks for the contribution.\nAs stated last time, switch vs if/elseif is not something we shall debate\nover: they are basically equivalent, so I have no objections to replace the\nlatter ones with the former ones... I don't think the latter are less\ninformative though: if you understand the code in one form, you cannot\nseriously be mislead by the same code in the other form ;)\n\nThe XML part of the commit, on the other hand, has to be improved (I'm\ngoing to do it), because it won't pass the internal validation otherwise\n(as you would see by running \"mess gameboy -valid\" ;) )\n- the shortname cannot be the one you used (at most 8 chars are allowed)\n- the game should not appear in both lists (games from both list are\n  already runnable in both gameboy & gbcolor drivers)\nFinally, it's not really a problem, but I'd prefer hex values to be lower\ncase in the source files I work on (as they are in the vast majority of the\nsource), so if you don't mind in future to stick with such convention it\nwould be appreciated... but your patches won't ever be rejected for such a\nminor detail :)\nOn Wed, May 20, 2015 at 5:54 AM, Tauwasser notifications@github.com wrote:\n\nSome more changes from me:\n- fixed some MBC1, MBC2 things\n- added MMM01 notes on registers; emulation is totally bogus right now\n  (but works)\n- fixed Sachen MMC1 implementation\n  - logo switch works now\n  - header de-scramble works now as well\nI also added Sachen MMC2 emulation, which works 100% on DMG now. Due to\nthe way RAM accesses are emulated, CGB mode does not currently work,\nbecause cartridges don't see WRAM accesses ATM.\nHowever, you can trivially replace rom_sachen2 with rom_sachen1 in\ngbcolor.xml and play these games already. It's just not proper to do so :P\nI might look into command-line switches for the integrated MMC2+ROM COB\n(start ROM bank and masking), but pointers are appreciated.\nI feel I kept most of the established style, except for switch case vs.\nif-else address comparisons, because I feel the former is clearer and\netabeta merged previous MBC1 changes in switch-case style into master.\ncYa,\nTauwasser\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/188\nCommit Summary\n- Gameboy: Fix Sachen MMC1 implementation\n- Gameboy: MMM01 notes/todos\n- Gameboy: MBC1 fix small implementation detail\n- Gameboy: MBC2 has 512x4bit internal RAM\n- Gameboy: add Sachen MMC2 mapper\n- Gameboy: add Sachen 4B-001 Mono + Color entries to XML\nFile Changes\n- M hash/gameboy.xml\n  https://github.com/mamedev/mame/pull/188/files#diff-0 (12)\n- M hash/gbcolor.xml\n  https://github.com/mamedev/mame/pull/188/files#diff-1 (12)\n- M src/emu/bus/gameboy/mbc.c\n  https://github.com/mamedev/mame/pull/188/files#diff-2 (211)\n- M src/emu/bus/gameboy/mbc.h\n  https://github.com/mamedev/mame/pull/188/files#diff-3 (39)\nPatch Links:\n- https://github.com/mamedev/mame/pull/188.patch\n- https://github.com/mamedev/mame/pull/188.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/188.\n. manually merged with more correct XML parts.\nthanks again for the contribution!\n. manually merged.\nthanks for the contribution.\n. nothing wrong with the pull request, but I've had a few issues in the past\nwhile trying to merge old pull request and since then I go through manually\napplying the diff if more than 24 hours are passed.\ncall it paranoia ;)\n\nOn Tue, Jun 2, 2015 at 9:30 PM, Tauwasser notifications@github.com wrote:\n\nErr, why the manual merge? The pull request was fast-forwardable till\nyesterday at least. I'm confused?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/191#issuecomment-108067450.\n. OK, my previous issues with some older pull request was probably due to a\nmissed pull -rebase.\nThanks for the feedback: next time I'll proceed in this way. Apologies to\nTauwasser if I created him any inconvenience.\n\nOn Wed, Jun 3, 2015 at 1:01 AM, Vas Crabb notifications@github.com wrote:\n\n@etabeta78 https://github.com/etabeta78 it's bad form to manually apply\ndiffs like this. Firstly it doesn't preserve full history of the change.\nSecondly it messes around people working on a branch/repo that they plan to\nresynchronise with the mainline because when they do, they'll almost\ninevitably get a conflict because mainline contains their changes but not\ntheir commits. If you're worried, do a pull --rebase onto your local\ncheckout from the pull request branch, check that everything's OK and/or\nmake changes as necessary as commits on top of it, then push to mainline.\nThis will make things much nicer for external contributors.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/191#issuecomment-108123796.\n. manually merged.\nthanks for the contribution!\n. The patch seems to break the encoding of the xml file\n\nf.\nOn Mon, Jun 15, 2015 at 1:04 PM, andrea-petrucci-1975 \nnotifications@github.com wrote:\n\n\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/211\nCommit Summary\n- missing gamecube edition roms added\nFile Changes\n- M hash/n64.xml\n  https://github.com/mamedev/mame/pull/211/files#diff-0 (596)\nPatch Links:\n- https://github.com/mamedev/mame/pull/211.patch\n- https://github.com/mamedev/mame/pull/211.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/211.\n. First of all, thanks a lot for the contribution (and for the hard work that\nhas been done at your end to prepare such a massive submission!)\n\nA few remarks however\nI don't agree adding the Jpn flags to the games in nes_* sublists. Those\ncan be only used in connection with a Japanese game, so that the flag is\nredundant (it's as if those were games for a Jpn-only computer)\nI also object with removing blank lines in gba.xml between the  about\npcb locations and the ones necessary for emulation: it's easier to spot the\nslot device used by the game if it is separated by an empty line\nConcerning other changes:\n- megadriv.xml: most changes are ok, but it is not the addition of \"Sega\n  Channel\" to Game no Kandume Otokuyou: that flag is for games which where\n  released through Sega Channel (despite the dumps probably coming from a\n  later compilation) while this one is a compilation of those games which\n  must have been released in other format (as you can read here\n  http://segaretro.org/Game_no_Kanzume_Otokuyou). when/if its source is\n  confirmed to be a DC disc, we will mark this as \"ripped from Dreamcast\" but\n  as things stand the \"Sega Channel\" flag is just wrong.\n- pokemini.xml: I appreciate the addition of release dates, but country\n  flags should remain in alphabetical order (Aus,USA)\nFor the rest, the changes are ok and can be accepted\nf.\nOn Wed, Jul 15, 2015 at 11:04 PM, Logan B notifications@github.com wrote:\n\nClosed #258 https://github.com/mamedev/mame/pull/258.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/258#event-356907872.\n. On Fri, Sep 11, 2015 at 6:32 AM, Jonathan Gevaryahu \nnotifications@github.com wrote:\nIn most drivers i've seen, the bootleg rom shows its own name and\nlocation and shows the parent rom name in the comments. I believe that\nshould be the standard.\n\nIMHO, there is no need for the parent rom names in the comments either. the\nCRC + SHA combo already documents what matches what in the parent.\nbootleg markings and ICs should be used for the bootleg sets, period ;)\nf.\n. On Fri, Sep 11, 2015 at 7:29 AM, Jonathan Gevaryahu \nnotifications@github.com wrote:\n\netabeta: That does make sense, except in the case where bootleg roms are\nmade of one or more of the parent roms combined onto one chip or split to\nmultiple chips. In those cases, I would definitely add comments explaining.\nof course, in such a case a comment is handy\nbut I was only referring to Guru's objections about same rom different name\n;)\n\nf.\n. Typically, new input types got added to MAME/MESS when dozens, if not\nhundreds, of supported machines require them (e.g. mahjong inputs, and\nlater gambling inputs) so that the default mappings can be applied at once\nto them all.\nAlso, this way the emulator offers a reasonable default mapping to users,\nmaking emulation user friendly out-of-the-box.\nBased on these considerations, while the addition of the shoulder buttons\nand hat inputs might make sense (despite having only a bunch of systems\nusing them), most of the patch is not really ok because\n- by changing the geometry mapping of 6 button games, you make uneasy the\n  usage with controllers which are not joypads\n- the new inputs have no default mappings, so that when you launch e.g. gba\n  emulation, the shoulder buttons have to be manually configured\n- the meaning of JOYSTICK_BUTTON1 & 2 is definitely unclear\nIn conclusion, I think that having default mappings to standard buttons and\nallowing users to remap those to different choices when they have an\nappropriate controller capable to better handling hat & shoulder buttons is\nway friendlier than the solution proposed by this patch.\nOn Sat, Nov 7, 2015 at 8:41 AM, Jason Gauci notifications@github.com\nwrote:\n\nJust to be clear: This change doesn't change the default mappings\n(although it might make sense to change them as a result), it adds new\ninputs to capture buttons that are fundamentally different in nature, such\nas hat switches and shoulder buttons.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/458#issuecomment-154650716.\n. the code checks indeed for device->shortname()[0]!='\\0' because we don't\nwant...  ;)\n\nf.\nOn Wed, Dec 16, 2015 at 6:41 AM, Olivier Galibert notifications@github.com\nwrote:\n\nAnd we want to accept empty but not null shortnames?\nOG.\nOn Tue, Dec 15, 2015 at 10:39 PM, balr0g notifications@github.com wrote:\n\n@MASHinfo https://github.com/MASHinfo's intent seems to be to speed\nthings up, as strlen() is O(n) since it has to iterate over the string\nand\nfind the null terminator. Unfortunately, the returned string could exist\nbut be empty, in which case the code would print out tags like (with an\nempty name entry), which we don't want.\nAs an empty C string will have a null as its first character, it should\nbe\nfaster (but less obvious) to do \"device->shortname()[0]=='\\0', and just\nas\nsafe as using strlen().\n@MASHinfo https://github.com/MASHinfo, can you test that, and see if\nit\nalso provides such a performance improvement?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/503#issuecomment-164905352.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/503#issuecomment-165001295.\n. On Tue, Feb 2, 2016 at 11:56 PM, Victor Vasiliev notifications@github.com\nwrote:\nBug 2 fixed in this PR, steps to reproduce:\n1. Bind \"pause\" to P.\n2. Try saving a state to P. It will save it to P, and subsequently pause\n   the game.\n   That does not seem horrible, but if the key in question is, say,\n   \"throttle\", the results are much worse.\nI believe this is the intended behavior: you shall not bind Save State to\nanother UI key.\nIf you add a special case handling for save states one wonders why there\nshouldn't be other special cases for all conflicts, etc.\n\nmy 2c\n    f.\n. yeah, I had missed that the problem was in the choice of the save slot and\nnot in the mapping of the save state function.\nthen it is definitely not the intended behavior.\nthanks for clarifying that point.\nf.\nOn Wed, Feb 3, 2016 at 7:44 AM, Victor Vasiliev notifications@github.com\nwrote:\n\nI believe this is the intended behavior: you shall not bind Save State to\nanother UI key. If you add a special case handling for save states one\nwonders why there\nshouldn't be other special cases for all conflicts, etc.\nOther cases do not require special handling because they read all inputs\nthey receive via ui_input_manager, and it handles those cases for them.\nSave state UI has to read keyboard directly because it wants raw input (\nui_input_manager only handles mapped keys as I understand it); this\nnaturally means that ui_input_manager does not know about save state UI\nalready having handled the input.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/602#issuecomment-179043058.\n. I was the author of our implementation, inspired by MAMEPlus and UIFX code.\nNo \"direct code\" was used from their source, even if similarities are\nunavoidable being a very simple option check at ESC pressure ;)\n\nf.\nOn Fri, Feb 12, 2016 at 10:27 PM, Stiletto notifications@github.com wrote:\n\nClosed #617 https://github.com/mamedev/mame/issues/617.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/617#event-549086831.\n. You're not seeing it as completely correct ;)\nAll machines (both arcade games and home computers and anything else we\nsupport) are launched only referring to their name and the actual files are\nsearched in the correct path.\nVerified dumps for detachable medias (coming from software lists) are only\nfully supported as loaded via their names and not via their paths (see e.g.\nmulti-part dumps for NES carts, SNES carts, NeoGeo carts, C64 carts, etc.\nwhich cannot be launched through their path unless the different parts of\nthe dump are glued together in one of the not-accurate-to-real-hardware\nformats), so that you are expected to use the syntax\n\nmame *machine* -media *software*\nor the shortcut\nmame *machine* *software*\nalways with \"machine\" and \"software\" being the internal name and not the\npath.\nDetachable medias are also supported as launched via their path because\nyou might want to be able to e.g. run your own software on any home\ncomputer you have written software for (spanning from ZX to C64 to CoCo to\nIBM PCs), without adding them to the software list. The fact that some of\nthe items from software lists (notably tapes and floppies) can also be\nlaunched from their path is a nice bonus but it is not the intended way to\nlaunch them.\nGreetings\n    Fabio \"etabeta\"\nOn Sat, Mar 12, 2016 at 3:25 PM, Sworddragon notifications@github.com\nwrote:\n\nSo arcade games are called with their name and detachable medias with\ntheir path if I'm seeing this correct. And this could be maybe made more\nconsistent for example if both variants would support both methods.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/708#issuecomment-195749855.\n. In fact, you forgot to change names in mame.lst so that current tree does\nnot compile.\nBut I'm not on my working machine right now...\n\nf.\nOn Tue, Apr 12, 2016 at 3:27 PM, f205v notifications@github.com wrote:\n\nThank you very much!\nIt was the first time I tried messing around with github.\nHope everything was OK.\nCiao\nAntonio (f205v)\nwww.citylan.it\nOn 12/04/2016 14:49, R. Belmont wrote:\n\nMerged #759.\n\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub:\nhttps://github.com/mamedev/mame/pull/759#event-624074343\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/759#issuecomment-208904284\n. now that you mention it, you might be right :)\nI haven't yet added any new set since the passage to GENiE build system...\n\nf.\nOn Tue, Apr 12, 2016 at 4:00 PM, f205v notifications@github.com wrote:\n\nI'm sorry about this, but I didn't change it because I thought that\nmame.lst is now automatically generated and should not be touched by hand.\nMy fault.\nIl 12/Apr/2016 15:35, \"etabeta78\" notifications@github.com ha scritto:\n\nIn fact, you forgot to change names in mame.lst so that current tree does\nnot compile.\nBut I'm not on my working machine right now...\nf.\nOn Tue, Apr 12, 2016 at 3:27 PM, f205v notifications@github.com wrote:\n\nThank you very much!\nIt was the first time I tried messing around with github.\nHope everything was OK.\nCiao\nAntonio (f205v)\nwww.citylan.it\nOn 12/04/2016 14:49, R. Belmont wrote:\n\nMerged #759.\n\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub:\nhttps://github.com/mamedev/mame/pull/759#event-624074343\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/759#issuecomment-208904284\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/759#issuecomment-208907879\n\n\u2014\nYou are receiving this because you commented.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/759#issuecomment-208920616\n. In my opinion it is best to attach software lists directly to the main\ndriver, because otherwise it is highly probable that many users would not\neven know about some of the things we support.\nCase in object is the IQ151 driver: the emulated machine has no floppy\ndrive by default because such drive was not very common (I think due to\nhigh price). Most users would thus probably ignore the existence of such\nextension if it wasn't for the floppy software list being attached to the\nmain system (and thus prompting users to investigate how to load such\nimages). If the software list was \"hidden\" in the expansion, it would\nprobably be ignored by the majority of users.\nI can envision a similar situation with apple II, given the large number of\nslot expansions we support.\n\nIn conclusion, while it would be nice to have the option to attach the\nlists to the slot device, I think it is more user-friendly if the software\nis connected directly to the system supporting it ;)\nmy 2c\n    f.\nOn Sat, Apr 2, 2016 at 4:08 PM, R. Belmont notifications@github.com wrote:\n\nThis was briefly discussed on the list a while ago, but there are a lot of\npotential use cases for it: Apple I and II harddisk images, 32X games if we\nturn the 32X into a proper slot device, the 2600 Starpath Supercharger\ncassettes, Game Boy Advance e-reader cards, etc, etc.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/777\n. On Sat, Apr 2, 2016 at 9:35 PM, R. Belmont notifications@github.com wrote:\nstartaq: drivers that do that currently cause etabeta's code to fuck up\nand it usually ends up crashing on non-Windows builds.\nI'd just like to point out that it's not \"my code\" that fucks up ;)\nsoftlist loading code has been rewritten at least twice since when it was\nmy code...\n\neta: we already have it possible that adding a slot devices adds more slots\n\n(and QMC2 handles it well), so this is simply an extension of that concept.\n\nmy suggestion about attaching lists to the driver is philosophical, not\ntechnical: all the software you are going to include in the list was\nreleased for the combo system+extension and thus it makes sense to add it\nto the system machine config as well.\nIn 0.172 AJR added the capability to add input options when loading from\nsoftlist. Attaching all lists to the main driver and (hopefully) add the\ncapability to add slot expansions on demand is simply an extension of that\nconcept...\nmy 2c\n. Good points. I have to think a bit more on the various scenarios...\nf.\nOn Sun, Apr 3, 2016 at 7:45 AM, ajrhacker notifications@github.com wrote:\n\nThe slot_default feature is not just for input devices. In theory, adding\nsomething like  to the\nbbc_flop_z80.xml entries would suffice to automatically install the Z80\ninto the second processor slot. (It does absolutely nothing now because no\nsuch slot has been implemented in the driver.) This feature is not designed\nto work if an image device designed to load the software itself is not\npresent on the machine as configured; startaq's svi328 floppy example shows\nhow they can be doubly hidden.\nThe \"compatibility\" feature of software items really just matches against\nthe filter configured for the softlist device. A slot device could\npotentially modify the filter even if the list isn't its own subdevice, but\nI can't think of a good reason why.\nIt seems to me that trying to load software lists from slot devices is\ngoing at it the wrong way around, especially since machines will often have\nmore than one device that can load a given category of software. If the\nsoftware media wouldn't even fit into the actual hardware that the stock\nconfiguration represents (like a Game Boy cartridge and a SNES without a\nSuper Game Boy), I don't think it would be logically sound for MAME to\nautomagically attach slot option on top of slot option in order to get it\nto load.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/777#issuecomment-204879931\n. One of the changes merged here\n- ROM_LOAD(\"380270-01.bin\", 0xc000, 0x4000, BAD_DUMP CRC(75135d37)\n  SHA1(177283642240fee191ba2d87e1d0c2a377c78ccb))\n- ROM_LOAD(\"pc1_bios.bin\", 0xc000, 0x4000, CRC(e37367c8)\n  SHA1(9aac9c38b4ebdb9a740e393199c2eff75a0bde03))\n\nremoves a properly documented label with a generic ROM name pc1_bios. is\nthere any reason to change it? we shall go the other way around typically ;)\nf.\nOn Tue, Apr 5, 2016 at 9:15 AM, Miodrag Milanovi\u0107 notifications@github.com\nwrote:\n\nMerged #787 https://github.com/mamedev/mame/pull/787.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/787#event-614774083\n. I know it's not exactly what you're asking, because it's not fully\nflexible, but for sake of completeness (maybe some end users have never\nnoticed this in the documentation) let me point out that you can already\nhave per-software save states in current MAME: just use the -statename\nparameter and set it to\n\n%d_cart : if you want it to give a separate sta/ subfolder named after the\nsoftware mounted in the -cart media switch\n%d_cdrm : if you want it to give a separate sta/ subfolder named after the\nsoftware mounted in the -cdrm media switch\n%d_cass : if you want it to give a separate sta/ subfolder named after the\nsoftware mounted in the -cass media switch\n%d_flop1 : if you want it to give a separate sta/ subfolder named after the\nsoftware mounted in the -flop1 media switch\nand so on... it is the same kind of syntax used by -snapname, with %d_xxx\nto use a folder named after the software mounted in the xxx media switch.\nthis automatically works for both softlist-mounted software and\nfullpath-mounted software.\nf.\nOn Mon, Jul 4, 2016 at 2:52 AM, R. Belmont notifications@github.com wrote:\n\nPer-software save states would be very useful for computers/consoles as\nwell.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/issues/808#issuecomment-230185790, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/AI0qvPM-d5i7tRswnhPa6GIDbSuz5H_qks5qSFlFgaJpZM4IGqvS\n.\n. Could you please update the code to use the available get_feature function\nto parse the \"base\" feature from softlist instead of the custom parsing you\nuse currently?\nyou shall not need any check about the presence of part_ptr either\n\nthanks in advance\nf.\nOn Sat, Apr 23, 2016 at 3:35 PM, fulivi notifications@github.com wrote:\n\nHi,\nI've just pushed a set of changes to hp9845b driver to implement loading\nof optional ROMs. I've partially updated the hash file: to be completed.\nThanks.\n-- F.Ulivi\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/829\nCommit Summary\n- hphybrid: found 2 undocumented instructions\n- hp9845b: added capability to load optional ROMs\n- hp9845: adapt to new iterator syntax\nFile Changes\n- M hash/hp9845b_rom.xml\n  https://github.com/mamedev/mame/pull/829/files#diff-0 (58)\n- M scripts/src/bus.lua\n  https://github.com/mamedev/mame/pull/829/files#diff-1 (11)\n- M scripts/target/mame/mess.lua\n  https://github.com/mamedev/mame/pull/829/files#diff-2 (1)\n- A src/devices/bus/hp_optroms/hp_optrom.cpp\n  https://github.com/mamedev/mame/pull/829/files#diff-3 (149)\n- A src/devices/bus/hp_optroms/hp_optrom.h\n  https://github.com/mamedev/mame/pull/829/files#diff-4 (74)\n- M src/devices/cpu/hphybrid/hphybrid.cpp\n  https://github.com/mamedev/mame/pull/829/files#diff-5 (87)\n- M src/devices/cpu/hphybrid/hphybrid.h\n  https://github.com/mamedev/mame/pull/829/files#diff-6 (6)\n- M src/devices/cpu/hphybrid/hphybrid_dasm.cpp\n  https://github.com/mamedev/mame/pull/829/files#diff-7 (3)\n- M src/mame/drivers/hp9845.cpp\n  https://github.com/mamedev/mame/pull/829/files#diff-8 (19)\nPatch Links:\n- https://github.com/mamedev/mame/pull/829.patch\n- https://github.com/mamedev/mame/pull/829.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/829\n. Yeah, this kind of change is what I meant. Thanks a lot.\n\nConcerning the question about integers from XML attributes, we currently\ndon't have one in the core. Typically features only have been used for\nstrings so far, thus I think the sscanf is fine.\nIn the 1 or 2 cases where I needed to pass an offset from the XML, I had\nfound more convenient to just cover the whole CPU space in the dataarea and\nload the pieces with the appropriate offset. But I chose that solution\nbecause most of the space was anyway covered with the loaded ROMs.\nAt first glance, in your case your solution seems more appropriate.\nf.\nOn Sat, Apr 23, 2016 at 7:07 PM, fulivi notifications@github.com wrote:\n\nBetter like this? I hope I got your comment right.\nBy the way, is there a function somewhere in the code that parses\n(hexa)decimal integers from XML attributes? I couldn't find one, that's why\nI used sscanf.\nThanks.\n-- F.Ulivi\n\u2014\nYou are receiving this because you commented.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/829#issuecomment-213787887\n. Sorry, I forgot to push the \"confirm the merge\" button on github and the\npush was not merged :blush:\nIt should be in, now, in time for 0.173 :-)\n\nf.\nOn Mon, Apr 25, 2016 at 2:48 PM, fulivi notifications@github.com wrote:\n\nDo you see other problems with my PR? Should I open a new PR to have\neverything merged in? (This is one of my recurring doubts...)\nThanks.\n-- F.Ulivi\n\u2014\nYou are receiving this because you commented.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/829#issuecomment-214300578\n. would it be possible for you to submit (either via mamedev.org submission\nor via PM at MESS forums) also a datfile with crc & sha1 of the original\nbin+cue used to create CHDs?\nthis would help for re-creating the CHD for other users and to retrieve\noriginal material if we need to recreate the files at a later stage.\nonce you have completed the list, I will integrate the info into the list\nsemi-automatically :)\n\nother than that, the submission is very promising, so please keep up your\nwork! :)\nf.\nOn Sun, May 1, 2016 at 10:22 AM, r09 notifications@github.com wrote:\n\nFilled up to the letter A. More will come later.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/846\nCommit Summary\n- Preliminary software list for FM Towns CDs\nFile Changes\n- M hash/fmtowns_cd.xml\n  https://github.com/mamedev/mame/pull/846/files#diff-0 (393)\nPatch Links:\n- https://github.com/mamedev/mame/pull/846.patch\n- https://github.com/mamedev/mame/pull/846.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/846\n. Thanks a lot. I will take care (and free some PM space :) )\n\nf.\nOn Sun, May 1, 2016 at 3:06 PM, r09 notifications@github.com wrote:\n\nYour PM inbox seems to be full, so I've submitted it to the mamedev.org\naddress. The DAT includes everything in the collection,not just CDs\n(floppies, BIOS files, etc.) but everything needed should be there.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/846#issuecomment-216040896\n. sorry for forgetting about DTD.\nand thanks for the fix.\n\nf.\nOn Mon, May 2, 2016 at 3:56 PM, hap notifications@github.com wrote:\n\nMerged #851 https://github.com/mamedev/mame/pull/851.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/851#event-647608651\n. I've been a little bit out of the loop of how compatibility features are\nchecked since C++-fication, but I'd like to ask: are the\ncompatibility/incompatibility flags still only optional and filtering only\nturned on when people launches\n   mame system gamename\nright?\nbecause sometimes you want to load incompatible software for debugging\npurposes, and thus original behavior was to bypass the checks when launching\n   mame system -cart gamename\n\nThanks in advance\n    f.\nOn Wed, May 4, 2016 at 5:55 AM, ajrhacker notifications@github.com wrote:\n\nThis new softlist feature is now used by genesis_tmss to exclude several\nentries from megadriv.xml.\n- Use popmessage instead of osd_printf_warning for incompatibility\n  warnings\n- Unify some common software loading code, which reduces indentation\n  levels in clifront.cpp\n\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/854\nCommit Summary\n- Check software parts for incompatibility as well as compatibility\nFile Changes\n- M hash/megadriv.xml\n  https://github.com/mamedev/mame/pull/854/files#diff-0 (5)\n- M src/emu/diimage.cpp\n  https://github.com/mamedev/mame/pull/854/files#diff-1 (40)\n- M src/emu/softlist.cpp\n  https://github.com/mamedev/mame/pull/854/files#diff-2 (72)\n- M src/emu/softlist.h\n  https://github.com/mamedev/mame/pull/854/files#diff-3 (9)\n- M src/frontend/mame/clifront.cpp\n  https://github.com/mamedev/mame/pull/854/files#diff-4 (44)\n- M src/frontend/mame/ui/selsoft.cpp\n  https://github.com/mamedev/mame/pull/854/files#diff-5 (2)\n- M src/frontend/mame/ui/swlist.cpp\n  https://github.com/mamedev/mame/pull/854/files#diff-6 (2)\n- M src/mame/drivers/megadriv.cpp\n  https://github.com/mamedev/mame/pull/854/files#diff-7 (5)\nPatch Links:\n- https://github.com/mamedev/mame/pull/854.patch\n- https://github.com/mamedev/mame/pull/854.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/854\n. The logic was that \"casual users\" would probably just go the \"MAME-way\"\nwhen loading home computer/console games and thus they shall not face the\npossible black screens due to incompatible regions.\nOTOH, adding the media switch (-cart, -cass, etc.) is the solution that\nwould probably be followed by more experienced users that know what they're\ndoing and can realize that loading a PAL game in a NTSC system or viceversa\ncould give unwanted results.\n\nEventually, we might indeed want to add a command line option for this, but\nfor the moment this solution seems to have worked well enough :)\nf.\nOn Wed, May 4, 2016 at 6:59 AM, ajrhacker notifications@github.com wrote:\n\nI previously suggested, and this time nearly implemented, a command-line\noption to disable software compatibility checking from the command line.\nHowever, I realized that explicitly specifying an image device by interface\nname already allowed incompatible software to be loaded, so all that I\nchanged regarding that feature is how the warning message for incompatible\nsoftware gets displayed. (The message also now slightly differs depending\non whether it was the check against the \"compatibility\" feature or the\ncheck against the \"incompatibility\" feature that failed; the latter takes\nprecedence, of course.)\n\u2014\nYou are receiving this because you commented.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/854#issuecomment-216743196\n. The change is ok, of course, but you might want to know that you're wrong about \"The files should be given more descriptive names if it can be discovered what they are for\".\nIn fact, the opposite is true: the files should be given the name of the serial number they have on the actual physical tapes / disks ;)\nIf you need to document what a file is for (e.g. \"Game Tape 1\", \"Scenario Tape \", or whatever), so to match what the game can ask you to load at some point during emulation, then you have to use a <feature name=\"part_id\" value=\"...\"> as it has been done in countless of floppy disk lists. In this way, the same ID would be shown in the internal UI, making friendlier the loading procedure of the emulated software.\n\nIf your mention of more descriptive names was referring to some other aspect that I missed, please let me know.\n. I second that! Welcome back to the project!\nf.\nOn Wed, May 11, 2016 at 3:32 PM, R. Belmont notifications@github.com\nwrote:\n\nIt's great to see one of the originators of INTV emulation return :) Let\nus know if you need any help.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/867#issuecomment-218459970\n. I don't see any reason to split the list in two, since the carts are cross\ncompatible.\nThis is not the direction to take about this, sorry.\n\nOn Fri, May 20, 2016 at 1:34 AM, rdroush notifications@github.com wrote:\n\nnot for whatsnew:\nSorted official APF carts by serial number\nShortened image_interface for carts\nRemoved unsupported status from all entries due to emulation improvements\nMisc cleanups and formatting fixes\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/887\nCommit Summary\n- apf: Split afpm1000 and apfimag cart lists, fixed cassette mounting\n  from list\n- Reverted some filename changes, misc cleanup\n- Added newline\nFile Changes\n- A hash/apfimag_cart.xml\n  https://github.com/mamedev/mame/pull/887/files#diff-0 (53)\n- M hash/apfm1000.xml\n  https://github.com/mamedev/mame/pull/887/files#diff-1 (240)\n- M src/devices/bus/apf/slot.h\n  https://github.com/mamedev/mame/pull/887/files#diff-2 (2)\n- M src/mame/drivers/apf.cpp\n  https://github.com/mamedev/mame/pull/887/files#diff-3 (4)\nPatch Links:\n- https://github.com/mamedev/mame/pull/887.patch\n- https://github.com/mamedev/mame/pull/887.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/887\n. The easily acceptable part has been merged (which was the tape interface\nfix)\nIn a couple of days I'll have enough spare time to go through the pull\nrequest more in-depth and decide about the rest.\nThanks\n\nOn Fri, May 27, 2016 at 6:39 PM, R. Belmont notifications@github.com\nwrote:\n\nI'd say it's useful for classification/documentation purposes to split the\nlists, but if you're really against it I'll go along.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/887#issuecomment-222194582, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/AI0qvJY1ZDFyc3GhieBTs6n5UAf7DWLkks5qFx5TgaJpZM4IiwYZ\n.\n. it's in my todo list. I'll need a couple of days more, then I'll either\nmerge the remaining part or reject them.\n\nf.\nOn Tue, Jun 7, 2016 at 4:49 PM, R. Belmont notifications@github.com wrote:\n\nEta, have you had time to check this out yet? I'm trying to keep the pull\nrequests folder as clean as possible, and to avoid undue delays for\nexternal contributors.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/887#issuecomment-224304906, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/AI0qvN9_1uKObTgmBs9JKM94vhVHfeYXks5qJYUAgaJpZM4IiwYZ\n.\n. Even after going back re-reading most documents which are available online, I'm still convinced that a unique software list is better in this case, due to the almost complete compatibility between the two machines. The two (or three) games which don't work in the apf m-1000 can be marked with a compatibility  tag, but split them in a separate list seems not the best solution.\n. Thanks a lot for the contribution!\n. thanks a lot!\n. why would you want\nThe -listclones command has been altered to include the parent sets;\n-listclones pacman and -listclones puckman now produce identical output.\n\n?\nit defeats the whole concept of listclones, which as the name suggests,\nshould list clones of a given game...\nf.\nOn Sun, Jun 26, 2016 at 11:36 PM, ajrhacker notifications@github.com\nwrote:\n\nThe @source.cpp specifier, which matches on the exact basename of the\nsource file, is now accepted by all commands that do driver enumeration.\nThe -listclones command has been altered to include the parent sets;\n-listclones pacman and -listclones puckman now produce identical output.\nThe new -listclonesource (-lcs) command works like -listclones, but also\nprints the source file of each driver. Unlike -listclones, the parent sets\nare included in the listing.\nThe new -listtree command tabulates matching drivers by source file in a\nhuman-readable tree format, with the names of clones indented under their\nparents and drivers indented under their respective BIOS roots.\nFix include_all counting error causing assert to fail in\nfind_approximate_matches (nw)\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/1004\nCommit Summary\n- New @ driver specifier; improved -listclones; add -listclonesource,\n  -listtree\nFile Changes\n- M src/emu/drivenum.cpp\n  https://github.com/mamedev/mame/pull/1004/files#diff-0 (18)\n- M src/emu/drivenum.h\n  https://github.com/mamedev/mame/pull/1004/files#diff-1 (20)\n- M src/emu/validity.cpp\n  https://github.com/mamedev/mame/pull/1004/files#diff-2 (2)\n- M src/frontend/mame/clifront.cpp\n  https://github.com/mamedev/mame/pull/1004/files#diff-3 (209)\n- M src/frontend/mame/clifront.h\n  https://github.com/mamedev/mame/pull/1004/files#diff-4 (2)\nPatch Links:\n- https://github.com/mamedev/mame/pull/1004.patch\n- https://github.com/mamedev/mame/pull/1004.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1004, or mute the thread\nhttps://github.com/notifications/unsubscribe/AI0qvG3wOTI8nrl68vz_L3QZsEwxkGkDks5qPvDXgaJpZM4I-pjt\n.\n. We have plenty of examples of \"info\" node with empty value in the softlists\nwhich uses this kind of nodes to document PCB layouts, like gba.xml,\nsnes.xml, gbc.xml, pico.xml, etc.\nWhen a PCB location is present but no chip is socketed it was often left as\n (even if as of late I've tried to use the\n or  conventions instead)\n\nf.\nOn Fri, Jul 22, 2016 at 5:17 AM, ajrhacker notifications@github.com wrote:\n\nWhat I am specifically referring to are the info, sharedfeat and feature\ntags, each of which is supposed to take a pair of name and value entries.\nThe MAME softlists often set up info and feature tags with value=\"\" for\nvarious reasons, some of them probably more legitimate than others. The\nsoftware slot-default mechanism that I implemented (which apparently\ndoesn't work; I didn't test it rigorously) is intended to accept a\nsharedfeat with value=\"\" to mean \"remove the default slot option and\ndon't try to replace it with anything else.\"\nThus my latest pull request incorporates a custom variant of\nsoftlist_parser::parse_attributes specifically designed to accept value=\"\"\nfor these tags rather than treat it as absent and therefore invalid. The\nonly other problems I noticed, after reducing the total number of\nvalidation errors from 773323 to 302 by fixing a couple of logic errors,\nwere two sketchy entries in one software list that failed to name a\npublisher (for which I inserted ).\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1124#issuecomment-234444952, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0qvJassBYulNmy5DIXsDUsBKTtpWL1ks5qYDZngaJpZM4JQypO\n.\n. Unifying back rom_entry handling has been my dream for long time. Thanks\nfor working in this direction.\n\nIdeally, what we would like to have added to softlist after the untangling\nis the option to also pass an XML together with a software fullpath param\nso to allow loading homebrew in drivers like NES or NeoGeo or C64 without\nthe need to manually add them to softlist (but it would also replace the\nneed for .RPK in TI-99 and it would probably allow for support of byuu's\nMSU1 expansion for SNES).\nMy idea was to support something like\n\"mame neogeo -cart C:\\path\\to\\soft\\mygame.zip -xml_lay custom.xml\"\nwhere custom.xml would be an xml with the exact same DTD structure as our\nsoftlists which specifies where to load each piece inside the zip archive,\nif it is a multifile archive, or where to split a .nes file into .prg &\n.chr as the driver needs.\nI had tried to add this to MESS in the past but I only managed to implement\n(hackish-ly) the support for splitting a single file into multiple parts,\nbut I got stuck to handling multi-files due to the very complex archive\nhandling we had last yeat (and which Vas has wonderfully cleaned up\nrecently). RPK current support could be of help now that archive handling\nis cleaner, since it supports multifiles, but I don't have much time until\nSeptember :(\nf.\nOn Tue, Jul 26, 2016 at 1:08 AM, npwoods notifications@github.com wrote:\n\nI'll buy that - to me, the new location of softlist.cpp is probably the\nleast interesting aspect of the changes I made (in fact, I asked on\nmame-dev IRC where such code should go). I agree that there is unlikely to\nbe a need to use the softlist code in an external tool, unlike say the CHD\ncode.\nI wouldn't mind moving it back to src/emu if the separation was kept,\nthough I would really want to penetrate further in my cleanups of\ndiimage.cpp before doing so. I do agree that the distinction between\nutil::software_rom_entry and rom_entry is crappy though - with better\nrefactoring of rom_entry the data structures could be reunified.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1137#issuecomment-235113727, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0qvAzdwEeqrD-Itxo5bA3ypjm9dYQWks5qZUHQgaJpZM4JTd7B\n.\n. Personally, I don't think it is really necessary to have variable\nNVRAM/SRAM names. It is quite easy to manually duplicate the .nv file when\nyou need a new one, if the game does not already allow for multiple save\nslot.\nNotice also that save states can instead have their name configured with\nthe -statename option (which matches the -snapname option for snapshot\nnaming). The reason why the two are treated differently, in my eyes, has\nalways been that the NVRAM is \"bundled\" with the cart and thus\nnon-configurable; OTOH save states are something pertaining to emulation\nand thus it makes sense to have it configurable.\nIn any case, if you add this option, you'd need to add it as well to arcade\ncabinet NVRAMs, because if it fits well in one case, I don't see why it\nshould not in the other.\n\nConcerning nvram names it already uses software name when loading from\nfullpath (if you load C:\\path\\to\\file\\xxxx.zip, you get NVRAM either as\nnvram\\xxxx.nv or as nvram\\xxxx\\whatever_nvram_device_tag.nv ). This works\nfor SRAM as well (the RAM saved at machine_stop...)\nmy 2c\n    f.\nOn Sat, Jul 30, 2016 at 1:06 PM, Michael Zapf notifications@github.com\nwrote:\n\n@ajrhacker https://github.com/ajrhacker, @npwoods\nhttps://github.com/npwoods: Does the idea of cartridge instances make\nsense to you as I described above? Also, how is the file name for NVRAM\ndetermined? Within the softlist handling is the software name - in case of\nloading from homebrew ZIP it could be useful to take the file name instead.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1137#issuecomment-236359407, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0qvBPH-TZwtRO9Tmq2FPqGQjneasFvks5qazAggaJpZM4JTd7B\n.\n. Aren't inputs without macro already being accessible by LUA via port bits?\nor am I misunderstanding the problem?\n\nIt's not an universal solution, but for exotic input keys I think a\nper-driver solution is acceptable...\nf.\nOn Sun, Jul 31, 2016 at 5:51 PM, Vas Crabb notifications@github.com wrote:\n\nWell there are two issues here:\n- What keys do we want to add? If we're adding them we may as well do\n  a lot at once.\n- How can we expose keys to Lua when they don't have macros? We're\n  never going to have a macro for every key on every exotic input device.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1160#issuecomment-236437551, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0qvMtgs-IJ7nCiXARV0U0zwQ__Ta3sks5qbMSZgaJpZM4JYztl\n.\n. Was really necessary to lose the capability of creating a new .wav image by\njust launching mame with the new filename? I think it was a great feature\nthat helped a lot testing from command line and I don't understand the\nproblem behind this chance.\n\nFabio\nOn Sunday, August 21, 2016, Scott Stone notifications@github.com wrote:\n\nMerged #1278.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.<\nhttps://ci3.googleusercontent.com/proxy/Y8wCK8NyE5o1nY8Zzl9GY4OCxSS2KMrlCl_J1Bb8gYYtCyCvh4__RgvUHkJ1kO0iP6Re2WKhAAd6MhI9i5MzE7pCKVFHu-ctLRQYldrOqYYDgRD3KuXKYWSCBiJ4YHwMkE0s_gw5E-0ZZgcwovjtqPUeYQnmGg=s0-d-e1-ft#https://github.com/notifications/beacon/AI0qvC5PuBboWV1yH_epUxmmfEYdNO0Lks5qiIk0gaJpZM4JpNg7.gif>\n. Chance --> change (stupid smartphone corrector).\n\nOn Monday, August 22, 2016, Fabio Priuli doge.fabio@gmail.com wrote:\n\nWas really necessary to lose the capability of creating a new .wav image\nby just launching mame with the new filename? I think it was a great\nfeature that helped a lot testing from command line and I don't understand\nthe problem behind this chance.\nFabio\nOn Sunday, August 21, 2016, Scott Stone notifications@github.com wrote:\n\nMerged #1278.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.<\nhttps://ci3.googleusercontent.com/proxy/Y8wCK8NyE5o1nY8Zzl9GY4OCxSS2KMrlCl_J1Bb8gYYtCyCvh4__RgvUHkJ1kO0iP6Re2WKhAAd6MhI9i5MzE7pCKVFHu-ctLRQYldrOqYYDgRD3KuXKYWSCBiJ4YHwMkE0s_gw5E-0ZZgcwovjtqPUeYQnmGg=s0-d-e1-ft#https://github.com/notifications/beacon/AI0qvC5PuBboWV1yH_epUxmmfEYdNO0Lks5qiIk0gaJpZM4JpNg7.gif>\n. OTOH, I think the approach we supported since the dawn of MESS until past\nrelease was quite solid and very intuitive: if you launched a driver with\n-cass newfile.wav, a blank wav file was created and written to when the\nemulated system wanted to save anything to tape, unless you launched from\nsoftlist in which case a (ghastly) hack ensured that no blank images was\ncreated\nwhy do we need a new option, which would require more command line typing,\nwhen the old approach just worked?\nwhy was this feature drop necessary, without any discussion about its\ndesirability? which was the problem requiring the feature to be removed?\nwhen we remove something that it is mentioned to be supported in the\ndocumentation (for sure MESS user's manual explicitly suggested this\napproach to create blank files, even if I'm not sure if this bit was picked\nup by Firewave for MAME docs), there should be at least some clear\nexposition of the problem which caused the removal, otherwise we just seem\nto arbitrarily make users' life more complex...\n\n\nf.\nOn Mon, Aug 22, 2016 at 9:32 AM, Scott Stone notifications@github.com\nwrote:\n\nPerhaps we should add a direct command line to allow for explicit image\ncreation. We can already create one using the internal UI.. perhaps\nsomething as simple as -createimage (filename) would be sufficient.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1278#issuecomment-241334598, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0qvHZW02XD3ns-ZdWRq4wJCrAQXiQgks5qiVCogaJpZM4JpNg7\n.\n. Quite the opposite: I support the merging of the code to try and fix the\nregression, my issue with this commit is that it is not explained in the\nlog why a feature was removed. Did it interact badly with some other code?\nDid it only worked for tapes and not for disks? The commit does not tell\nanything and thus other contributors are given no chance to know the\nreasons behind it, and/or if a patch restoring (in a better way) the\nsupport for it would be accepted.\nI don't care if the whatsnew becomes two pages long, but I strongly believe\nthat explaining changes should always be preferable to not explaining\nthem... alienating possible external contributions with cryptic messages\nthat don't explain the reason behind such changes is not really a direction\nI think MAME shall follow.\n\nBack to this specific change, there might be the need for a per-format flag\nthat tells the emu whether a format supports creating a new image from\ncommand line or not, or we might decide for some other workaround that\nallows removing the old very bad check for softlist loading. In both cases,\na discussion on the behavior shall be done :)\nf.\nOn Mon, Aug 22, 2016 at 11:36 AM, Vas Crabb notifications@github.com\nwrote:\n\nSee this is why I didn't want to merge this PR. Rather than simply fixing\nthe regression, it carried a whole lot of other changes with it, and we\ndon't know what other regressions it might have introduced, in addition to\nthis change in behaviour.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1278#issuecomment-241361540, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0qvLGJai8ekEZemhjUr51IeJuOa4ggks5qiW23gaJpZM4JpNg7\n.\n. Previous code was not creating by accident the images. By design, it was\nchecking if the format supported creation and if the loading was happening\nfrom fullpath (as I had explained in a previous email): if both conditions\nwere met, then an empty file was created, ready to be filled with data by\nthe emulated system, with the appropriate number of data block required by\nthe system.\nAs such the problem was that load() had actually been implemented as\nload_or_create(), but I don't think it is fine to just drop the latter part\nto comply with the function name.\n\nThe real point anyway is that I think MAME shall create an empty file\nwhenever the image device support file creation: for tapes a .wav file\nshall be created, for disks an empty .mfi flow would be desirable. I know\nthat currently disks don't work like that, but I still haven't become\nfamiliar enough with the floppy code to add the few improvements I'd like\nto make (after OG's review)...\nf.\nOn Mon, Aug 22, 2016 at 1:55 PM, npwoods notifications@github.com wrote:\n\nWhether or not the old functionality for creating an image from the\ncommand line is desirable or not, the way that it was implemented was\nterrible.\nLoading images at the command line is done through\ndevice_image_interface::load(). That method should only load images, not\ncreate them, and it just so happened that it supported creating images by\naccident for some device types.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1278#issuecomment-241390996, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0qvGUJThJewDuF-PmVGg1LL7b_WNBbks5qiY5MgaJpZM4JpNg7\n.\n. FWIW, the confsetting macro were available in past MAME too, see e.g. the\nAstro Blaster bg color implementation (based on some jumper wirings that\nwas inaccurate to implement as Dipswitch ;) )\n\nf.\nOn Fri, Aug 26, 2016 at 4:33 PM, R. Belmont notifications@github.com\nwrote:\n\nYeah, and with MESS merged in we have access to the Machine Configuration\nto avoid polluting any real DIP switches the game might have.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1289#issuecomment-242752161, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0qvCsF28c-s44-hwZMqbTPIK58Nu71ks5qjvkvgaJpZM4Jpfa8\n.\n. for tapes and disks, I think the file extension can be trusted for the file\nformat in softlists, at least as much as from fullpath (i.e. for disks\ngeometry has still to be calculated by other means).\nOTOH, I can imagine that with carts and their .u1, .u2, .ic1 and .ic2\nextensions, the format cannot be inferred by extensions, but the\ndevice_load code already handles them properly.\n\nf.\nOn Tue, Aug 23, 2016 at 2:35 PM, Vas Crabb notifications@github.com wrote:\n\nI don't think we really want to do this. The information on the image\nformat should be available through information in the softlist itself, not\nfrom the filename extension. If the necessary information isn't present in\nthe softlist, in needs to be added somehow. Moving the hack into the\nsoftlist code is worse than leaving it where it is because it will allow\nother code to easily depend on it.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1290#issuecomment-241716273, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0qvIyomA1AhtJKKtqh49kdjjPS42i9ks5qiukZgaJpZM4Jp2ti\n.\n. How so? Look at the way floppy disks are handled: at loading time you\ndeduce the geometry from the file, but you rely on the extension for\nguessing how to look for geometry (when for instance, the same disks appear\nin multiple formats)...\n\nf.\nOn Thu, Sep 1, 2016 at 4:38 PM, Vas Crabb notifications@github.com wrote:\n\nBut it's against the spirit of the softlist. The softlist itself should\ncontain all necessary metadata. Relying on filename extension goes against\nthat design. I'm closing this.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1290#issuecomment-244099575, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0qvBuAUa9ssZzir9z5Rkvt7mwvSeRlks5qluNpgaJpZM4Jp2ti\n.\n. Since for some Japanese systems we support non-raw dump formats, where\ntracks are stored separately each with a different header, some disks would\nneed more than 30 metadata and it sounds really not worth the effort when\nwe still need the extension handling from fullpath...\n\nf.\nOn Thu, Sep 1, 2016 at 6:28 PM, Vas Crabb notifications@github.com wrote:\n\nOh so what about .dsk for Mac disk images? It's used for half a dozen\ndisk image formats. And what about all the DC42 and DART images that just\nplain have no filename extension? The softlist should have the metadata\nsomewhere, using the filename extension is a hack.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1290#issuecomment-244134643, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0qvMVh98qqgOI9m0IKKdYA5r7Qo1c1ks5qlv0YgaJpZM4Jp2ti\n.\n. .ini files? ;)\n\nf.\nOn Sat, Sep 17, 2016 at 11:20 AM, Olivier Galibert <notifications@github.com\n\nwrote:\nThat's a very good question. Do we have a \"standard\" way to store state\nthat should be preserved across sessions?\nOG.\nOn Fri, Sep 16, 2016 at 7:12 PM, Dankan1890 notifications@github.com\nwrote:\n\nI agree with you, but in what other way can you achieve this without\nusing\nstatic members?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1410#issuecomment-247655626, or\nmute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/\nAI0i8fAx4g6CW4wX3WJgUliqE5iE8p8Hks5qqs3ogaJpZM4J_CWX\n.\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1410#issuecomment-247759239, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0qvGIljXWSmjhfqZzb0P2lTYxJu7u4ks5qq7D5gaJpZM4J_CWX\n.\n. actually .cfg files are more fitting, since we're not talking about a\ncommand line option... I'm not fully in love with such solution, but I\ncan't think to any other way.\n\nf.\nOn Sat, Sep 17, 2016 at 3:57 PM, Dankan1890 notifications@github.com\nwrote:\n\nGreat tip, thanks ;)\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1410#issuecomment-247772650, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0qvA1ToHvpDp3mneOFYqUPDdDSkBY3ks5qq_HGgaJpZM4J_CWX\n.\n. Sorry but this is already in progress, together with Japan...\nI  have #-S done, T-Z in progress\n\nf.\nOn Sat, Sep 17, 2016 at 11:17 PM, aeternal606 notifications@github.com\nwrote:\n\nOops, just noticed that I should have used short region names in the tag\n('Euro' instead of 'Europe', 'Ita' instead of 'Italy' and so on). Sorry,\nI'm going to fix that in the next commit!\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1420#issuecomment-247808666, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0qvAC2oQKmM7TJl9zweaidqawcQcLcks5qrFjugaJpZM4J_tdp\n.\n. Personally, I believe that the correct solution here would be to make\nparent NES the PAL version: MESS habit to make parent whatever the driver\nauthor decided with no consistency was a mistake IMHO... but I doubt I'll\nhave many followers on this point\n\nmy 2c\n   f.\nOn Thu, Sep 29, 2016 at 5:34 PM, Scott Stone notifications@github.com\nwrote:\n\nThere are several popular console softlists which have PAL primary\nparenting which goes along with the arcade side of MAME where the latest\n\"english\" version is considered parent. Many early consoles and computers\nhave games which are are often specifically coded to a specific refresh\nrate (NTSC/PAL) to match the region for its releases. This is a cause of\nconfusion because in most cases of emulation, the NTSC machine is\nconsidered the parent (due largely by popularity/amount of software\navailable) and I would argue that software parent should match up to parent\nin these cases.\nLet is take, for example, The Nintendo Entertainment System which has a\nparent machine with the NTSC region. The nes.xml softlist has parenting in\ncontradiction to this and parents are EURO (PAL) region when available.\nThis can be confusing to the end user and be the cause false bug reports\nsince you are forcing PAL images, in many cases, to run in an NTSC machine\nwhich can and does cause audio and graphic changes due to different\ntimings. You can see the differences by running:\nmame nes megaman2 vs. mame nes megaman2u\nHow do we address this? I'd suggest adjusting the softlists to switch\nparenting to reflect that of whatever was decided for the actual console or\nmachine. In the case of the Nintendo Entertainment System, NTSC is by far\nmost popular and should be considered the parent for games in which their\nsoftware is different between regions. Later consoles were able to\naccomplish this without the need of separate games in most cases - but the\nproblem of the machine/game parenting methods not coinciding is an issue\nthat should be discussed and handled.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/issues/1463, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AI0qvDgPS8cuIdNGRP0cxDJB5cIDUoggks5qu9qGgaJpZM4KKI64\n.\n. I'd guess the second one was meant to be called elfishlt.chd ;)\n\nin the meanwhile, however, you can put them in elfish/ and elfishlt/\nsubfolders, respectively, and MAME won't see any conflict anymore...\nf.\nOn Wed, May 11, 2016 at 11:38 AM, Thomas Klausner notifications@github.com\nwrote:\n\nIn hash/fmtowns_cd.xml\nhttps://github.com/mamedev/mame/pull/864#discussion_r62818439:\n\n\nFujitsu\n\n\n\n\n\n\n\n\n\nElfish Lite\n1993\nFujitsu\n\n\n\n\n\nBoth elfish and elfishlt want to have a disk called \"elfish.chd\" in the\nfile system, but with different checksums. That won't work, please rename\none of them.\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/864/files/bf12928320cfc347050a76fb18e171570954270c#r62818439\n. well, trying to be consistent with MAME tags and shortnames, we have always\ntried to stick to letters/digits/underscores only as valid listname +\nshortname + part, so that \\w seems ok in this occurrence\nin particular, it makes life much easier when launching from command line\nacross most OS and keyboards ;)\n\nf.\nOn Mon, Aug 1, 2016 at 4:36 AM, Vas Crabb notifications@github.com wrote:\n\nIn src/emu/image.cpp\nhttps://github.com/mamedev/mame/pull/1161#discussion_r72918455:\n\n@@ -17,6 +19,13 @@\n #include \"xmlfile.h\"\n//***********\n+//  STATIC VARIABLES\n+//***********\n+\n+static std::regex s_softlist_regex(\"\\w+\\:\\w+\\:\\w+\");\n\nwouldn't it be better to use a string like \"[^:/]+:[^:/]+:[^:/]+\"\nworking from unacceptable characters rather than a narrow class to include?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1161/files/024f698364b2d7396fe800e76cc0e10d1a19da6d#r72918455,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AI0qvIHYYCUhcneQhgWPkdwJL_E6h1Biks5qbVuqgaJpZM4JY0u-\n.\n. \n",
    "riley110": "Thanks\nOn Mon, Nov 3, 2014 at 5:41 AM, etabeta78 notifications@github.com wrote:\n\nClosed #31 https://github.com/mamedev/mame/pull/31.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/31#event-187266790.\n. \n",
    "cuavas": "OK, that's done.  I also tightened up the scope of some variables, made more things const, and made the sprite feature selection for the Z80 games self-documenting.\n. I give up. Forget it, I'll drop this repo. It's simply not worth the trouble.\n. Looks OK, I'll merge it manually soon.\n. Oh, forgot to say, this is all developed and tested on 10.6.8 Snow Leopard.  I no longer have a Tiger machine to test on, but I've tried to avoid doing anything that would break Tiger support.  If I've screwed up, please let me know.\nAlso, I do plan to implement the device view and some other stuff, just haven't had time to do it yet.\n. I did a quick test and didn't see any effects from this DIP switch, but it could just be because I don't know when it takes effect.  What settings do you need to use to see the effects?\n. This completely broke building with Python 2, which is still the officially supported setup.  Can people please check that things work before merging pull requests?\n. I'll add Romanisations.\n. - Build without Qt debugger using USE_QTDEBUG=0\n- Show detailed build steps with VERBOSE=1\nI don't think the spaces before ellipses are a good change - it just makes it ugly with no real benefit.  Use verbose build if you need to know what is doing in detail.\n. Pretty sure this isn't intended to go in mainline - lots of chaotic merge conflict stuff in there ;)\n. It's mostly OK, I've made a few comments on specific changes.  If address them I'll merge it.\nPlease note that there are often reasons for double blank lines, so please don't just blindly remove them.\n. Yeah, it's actually putting a NUL one beyond the end of the array.  Could probably even change it to memcpy since the string is space-padded.\n. Messing with variable and function names also has greater chance of causing conflicts when people are working on the code, and causing unintended side-effects if you unintentionally end up shadowing a global or member.  I still don't think it's a good idea to just change variable names when you aren't doing any other work on the code, but if you're going to, at the very least do a build with -Wshadow and test affected drivers.\n. @mr-t-guru a global rename can still cause a shadowing issue.  Suppose there's a more global variable called \"address\" and a more local variable called \"addres\".  The incorrectly spelled variable doesn't shadow the correctly spelled one.  But if you rename \"addres\" to \"address\" you create a shadowing issue even if you catch all occurrences of it, as any code where the variable formerly known as \"addres\" is in scope that tries to access the more global variable will access the more local variable instead as they now have the same name.\n. In an ideal world things no-one would repeat a misspelling, but it isn't an ideal world:\n- People use editors/IDEs with autocomplete, so when you're working at speed you misspell the name once in the declaration, then use autocomplete each time you use it, so you don't notice the misspelling because you don't have to type it out each time.  This is far easier to do with long names than short ones due to clutter factor.\n- MAME code is in English and many MAME developers are non-native speakers.  Many spelling errors are honest mistakes.  These tend to be done consistently throughout a given developer's work.  If you want all contributors to be fluent English speakers you're going to lose a lot of people.\n- Even with English speakers, you can end up with regional spelling differences causing equivalently named symbols to end up in scope, e.g. colour/color and centre/center.\nGiving variables overly verbose names doesn't help.  If you have a bus write handler, you're going to name the parameters something along the lines of address, data and mask.  In fact, that's what MAME's core macros enforce: your parameters are called address_space, offset, data and mem_mask.  Terse names are easy to understand and use.\nShadowing can be avoided by using conventions like prefixing member names with m_ and global names with g_, but some people on the team find this style distasteful.  Ultimately we should be building with -Wshadow all the time - it would alert us to a lot of potential problems before they become real headaches.  The trouble is, MAME has gone far too long without this, so it causes a huge number of warnings, and it will take a long time to go through and address them all before -Wshadow can be enabled by default.\n. Is it really a good idea to do the mouse support this way?  I would've thought making it a slot device would be a better idea, making it easier to add other controller types (e.g. Densha De Go! controller) later.  Also, introducing global variables for the mouse is a red flag.  New code shouldn't be introducing things like that.\n. Using globals for mouse input is still a bad sign - at the very least that should be cleaned up before accepting the patch.\n. OK, good enough for me.  The globals have been eliminated, members are initialised on the right spot, multiple mouses should work.\n. He describes it in detail in the commit message for a70198a.  Expand it by clicking the \"...: above.  I really don't see how you could make it brief given all the things he's done ;)\n. Sorry, but you've screwed up this pull request again.  Look at the preview under the \"Files changed\" tab on this page.  It has all the crud from a conflicted merge gone badly wrong in the HMCS40 CPU core.\n. I think you've somehow got your branch into a state where you'd be better off forcibly overwriting it with mainline MAME and doing the change again.\n. The header changes are OK but the changes to the source are dubious at best. Also please stop mixing tab and space indentation.\n. MAME code generally uses tabs for initial indents only and spacing for other alignment.  View the code with four spaces per tab if you want to see it aligned properly.  You can work this out by opening pretty much any driver source file.\nDisabling the logging for timer 5 by default (changing the #define to 0 rather than 1) may be acceptable, but using a static variable to suppress logging like that is most definitely unacceptable.  The solution is to implement the missing modes.  Otherwise leave it as is.\n. I don't see what you're problem with the word \"unacceptable\" is.  The code will not be accepted by MAMEdev in its current form -- it is by definition \"unacceptable\".  This is basic English.  If you expect everyone to go out of my way not to say anything negative, you\u2019re coming to the wrong place.  It's my job to ensure contributions don't lower standards; ensuring fragile egos aren't bruised is not my job.\nFirst of all, if you're thinking of using a function static variable, you're probably doing it wrong.  It introduces inaccessible state within a function.  It won't handle multiple instances, and it won't even handle multiple runs within the same process.\nBut putting that aside, you've completely changed what the statement does.  The statement is there to log each time the software tries to use an unimplemented timer mode, and what the mode is each time.  You've changed it to only log the first unimplemented timer mode used.  That's far less useful as with your change one can no longer take the output, pass it through a text filter and get a list of all unimplemented timer modes used by a system.  Your change doesn't bring the code any closer to a working state, and just attempts to put brokenness out of sight and out of mind.  It doesn't help in any way.  It might be OK to change it from a printf to osd_printf_error, but simply suppressing it like that is not a useful change, even ignoring the unacceptable implementation.\nIf you don't want to cooperate, I'll just close this pull request.  It's less work for me than writing long-winded explanations, anyway.\n. The changes to indentation are not good:\n- You are using mixed spaces and tabs for indentation - initial indent should just use tabs.\n- Case labels by themselves do not introduce a scope level and therefore shouldn't cause indentation.\nSwitch statements should look like this:\nswitch (expr)\n{\ncase val1:\ncase val2:\n    unscoped;\n    break;\ncase val3:\n    {\n        scoped;\n    }\n    break;\n}\nThe switch statement itself and the compound statement inside it introduce scope.  Case labels by themselves do not.\n. You'll be credited with the register fixes.\n. @etabeta78 it's bad form to manually apply diffs like this.  Firstly it doesn't preserve full history of the change.  Secondly it messes around people working on a branch/repo that they plan to resynchronise with the mainline because when they do, they'll almost inevitably get a conflict because mainline contains their changes but not their commits.  If you're worried, do a pull --rebase onto your local checkout from the pull request branch, check that everything's OK and/or make changes as necessary as commits on top of it, then push to mainline.  This will make things much nicer for external contributors.\n. Once again, you're mixing spacing/indentation styles within your change.  Please clean this up.\n. There's still a mess with positioning of braces and space between if and the opening parenthesis.  The rest of the file uses this style:\nif (foo)\n{\n}\nelse\n{\n}\nBut there are places where you've used if(foo) (no space between if and the parenthesis) and placed braces on the same line as the if and else.  It's inconsistent with the rest of the function, and not even completely consistent within your change.\n. Yes, we should fix existing sets that don't use correct labels/locations for the boards they're supposed to document.\nTwo identical ROMs with different names aren't a problem in a merged set.  You only need one of them to be present in a zipped merged set and MAME will load it for either set as it scans checksums.\nBootlegs are no less deserving of proper documentation.\n. The trouble is tms36xx is manifestly inadequate at the moment.  It can only generate 12 of the 13 tones, the way it calculates the dividers isn't even close to correct it takes a clock in kHz when the rest of MAME uses clocks in Hz, and it doesn't do one rank of outputs.  tms3615 is slightly better in terms of what it does, but it can't handle capacitors on the key inputs, external reset, or separate routing of the 8' and 16' outputs.  Also the tms36xx code is structured horribly.  The tune generator stuff should be in a derived class.  It would almost be better to improve tms3615 and then make derived classes of that for the related chips.\n. The thing is, it isn't a player 1 start button on a console, it's a start button on a slot device that could be the start button for any player depending on where it's plugged in.  We're using START for this on all other console controllers that work as slot devices.\n. I really don't think this is a good idea.  It's assuming everyone uses a SNES-derived gamepad as an input device and will just cause confusion for people using keyboard or arcade-style controls.\n. I still don't buy it for shoulder buttons.  They aren't an inherently different kind of input, they're just another button.  For the same reason on arcade games we don't treat panel-mounted buttons a la Street Fighter as a different input type to joystick triggers like the vulcan gun button in After Burner.\n. This is an unacceptably hacky way to achieve the intended result.  Vector objects are already identified as such when passed up to the OSD layer.  That's where this should be implemented.  Hacking up vector.cpp is the wrong way to do it.\n. I don't see any open documentation, schematics, firmware or drivers available for your v.st device. It would be better to actually open your device before attempting to get other projects to provide support for it. You can distribute modified MAME source (provided you comply with copyright and trademark license restrictions) before you get the project into a state where MAME will accept a patch.\nAlso your current patch falls into the same trap as the old VectorMAME of only supporting a minority platform: it doesn't compile, let alone work, on our most popular target Windows.\n. I don't think you understand C strings.\n. How do you deal with buffer overrun/underrun?  I don't see any code for dealing with these conditions.  You have to be prepared for buffer underrun during pause or emulation below full speed, and overrun during fast-forward or no-throttle.  It appears the code in its current state will just keep queuing additional buffers if the emulation is running faster than real-time, effectively leaking resources.\n. You can run MAME with -nothrottle argument to make it run as fast as possible, which for a simple driver (e.g. a NeoGeo game) should be faster than real-time.  You can also hold the \"Fast Forward\" key (Ins on the keyboard by default on Windows) during emulation to run as fast as possible.\nRunning a heavy driver that's too demanding to run at full speed (e.g. at586 with a sound card) or just pausing emulation (P key by default) should cause MAME to generate fewer samples than you want.\n. You shouldn't be converting an offset back to an address in your read/write handlers - it makes no sense.  The device is blind to the address bits that are decoded to drive the chip select lines.  You should switch (offset) or perhaps switch (offset * 4) but in any case you shouldn't be adding back in high bits that the device is blind to.  It could be mapped anywhere.\n. @etabeta78 I think you're missing the point. It's not about binding the Save State function to the same key as another UI function.  It's about using a key to select a save state slot that happens to be bound to another function.  For example you have Save State bound to some Fkey, but you try to use slot P which happens to be bound to pause or slot 5 that happens to be bound to coin 1.\nOther functions don't have this issue because they don't accept a second keystroke for slot selection.  I'm not sure this code should be accepted as-is, but it's a real issue that is specific to save/load state.\n. So if you want to cheat to get the \"punishment by repeated blows\" in Taisen Hot Gimmick you're out of luck? Sounds less than ideal to me.\n. It likely wouldn't be accepted anyway. Autofire is like overclocking, something most games went built with in mind (with the notable exception of PC-Engine).\n. It's likely IP range blocking - mamedev.org blocks large ranges of IP addresses because of supposed malware. This probably blocks 1/4 world population.\n. It blocks most Chinese IP address ranges with a few exceptions.\n. Note that advice to keep the same punctuation and capitalisation may be applicable for some Portuguese, it isn't applicable for all languages.  For example in German capitalisation can affect the meaning, and Japanese uses punctuation differently.\n. There are many cases, particularly in UI code, where strings are built by concatenation.  This is very irritating because you can't necessarily just translate the substrings as-is due to word order and you need to be careful to get leading/trailing spaces right.  This stuff needs to be changed to use printf-like formatting, but for now could you please look at the cases where I've noted that leading space is necessary?\n. Remember to push your fix so the pull request picks it up\n. Merged, thanks.\n. It must've just been some delay in the new commit being picked up by the pull request in github.\n. You need to rebase this on the latest mainline and resolve conflicts.  We can't do this for you since you're the Portuguese speaker.  I told you this last time.  If you don't actually do this and keep opening and closing pull requests it will try our patience.\n. As we improve the code, more strings will become localisable. I believe at least most of the strings you've pointed out are already localisable in the latest source in the github repository.\n. Copy-paste error and was working on windows workstation. Sorry. \n. That's been fixed since\n. Hang on, you've now changed a %20 in an URL to a space. The % 20 should be correct.\n. Yes we realise any name containing two successive underscores is reserved. But I think we have bigger things to worry about than this.\n. MAME depends on undefined behaviour all over the place.  In fact the CPU cores heavily depend on twos-complement signed integer overflow and the results of right-shifting signed integers.  If you look at src/emu/validity.cpp you'll see tests for actual compiler behaviour for a number of behaviours that MAME depends on which are undefined by the C/C++ standards.  Using macros with __ in them as #include guards is a far lesser sin than some of the other things we do out of necessity, and if it's going to break something, we'll probably notice very quickly.\nThat said, if you want to create a pull request replacing these macros with the form MAME_LIB_FORMATS_ATOM_DSK_H and MAME_LIB_FORMATS_CBM_CRT_H, feel free.  It will probably be accepted if it's done cleanly and consistently.\n. You're not being constructive.\n. Please note that the English at times is inconsistent.  A glaring example of this is the \u201cConfigure Directories\u201d menu item leading to a \u201cFolder Settings\u201d menu (the rest of the UI besides this one menu item tends to use \u201cfolder\u201d rather than \u201cdirectory\u201d).  The English is inconsistent in its use of \u201cGame\u201d and \u201cMachine\u201d and there are a number of places where \u201cGame\u201d is used that definitely should be changed to \u201cMachine\u201d in English \u2013\u00a0this is a hold-over from before MESS was integrated into MAME.  The English UI is also inconsistent in its use of \u201cdriver\u201d and \u201cromset\u201d, too.\nThere is no need to reproduce inconsistencies in MAME\u2019s English UI in translations, but it\u2019s definitely a retrograde step to be replacing \u201cMachine\u201d with \u201cGame\u201d for consistency when \u201cMachine\u201d is a more generic/descriptive term covering the systems MAME emulates.\n. This still doesn't address the major issues that have been raised.  The French translation will be removed altogether if these issues are not addressed.  The driver fantome is still there.\n. LEDs don't behave like that though - you can use a high-speed camera\nto capture LED multiplexing.  LEDs have tens of kHz of bandwidth.  LED\nmultiplexing depends on persistence of vision to no look flickery.\nGames that use PWM for incandescent lamp outputs also need better\nhandling than what we have in MAME currently.\nWith LEDs fed by PWM, the bandwidth of the LED usually far exceeds the\npulse frequency, and persistence of vision means the brightness\nappears proportional to the duty cycle.  LEDs are actually a pretty\nsimple case.\nWith incandescent lamps you have thermal characteristics of the\nfilament to consider.  As a simplification, the brightness is roughly\nproportional to the square of the true RMS voltage applied.  You also\nget colour temperature shift towards yellow as you reduce the drive.\nLCDs are different again, but I don't even pretend to understand them\nwell enough to give a summary.\nA retriggerable monostable like you're suggesting is not a valid\nsimulation of any of these output devices' behaviours.  I'd rather\nstick with the flickery mess until such time as we try to model at\nleast some of these devices properly.\nVas\nQuoting hap notifications@github.com:\n\nSimulate delay with strobed outputs\nan 'output' in this case is a MAME output port or pin, such as for a\n7segled: output().set_digit_value(index, state);\nThe problem is really simple. We need to simulate outputs with\n(inherited) capacitance. There is a too often seen scenario where\nleds or lamps are strobed and if represented to the emulator user\ndigitally, it will show as a flickering mess. This is the reason I\nhave a custom output-decay handler in many of the handheld drivers.\nWhat needs to be done is a solution in the back-end(HLSL etc?), or\nMAME output core, that leaves these outputs on for a user-defined\ninterval, by default a few microseconds.\n\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub:\nhttps://github.com/mamedev/mame/issues/729\n. No you aren't.  It fucks up my 8-liners as well.  But I have absolutely no clue how I could hack up the artwork system to do variable intensity on an analog output even if I could work out how to create a new output type that took PWM input and produced an intensity output.\n. GuitarAmber, what you're saying is just plain not true.  LEDs do extinguish pretty much instantaneously -  they definitely won't persist for 1/20s unless you actually wire a capacitor across them.  You can observe this yourself with a consumer 1,000fps camera pointed at a multiplexed LED display (e.g. the digital LED displays on Yamaha synths and stage pianos).  Incandescent lamps fade gradually, but it has nothing to do with capacitance: it's because the filament takes time to physically cool (conducting/radiating heat away).  Please stop posting misinformation.\n. This still doesn't address the major issues that have been raised.  The French translation will be removed altogether if these issues are not addressed.\n. This is a one-line change - can you just apply it to master and push rather than going through pull request?\n. Can you get rid of the diff noise if only one line of the change is significant, or should I make the change myself?\n. The trouble with \"fixing\" it by reverting on your branch is that it makes MAMEUI diverge further from mainline MAME.  In this case, it will make MAMEUI handle softlist loading differently, and potentially confuse your users when slot devices don't come up how they should (or at least not how they would in a mainline MAME build).  Ideally, MAMEUI should just be a drop-in OSD module.  Additional core changes, particularly to user-visible behaviour like this, will make the UI builds more frowned-upon.\n. It's called NTSC because simulates an NTSC receiver.  A simulation of a PAL or SECAM receiver would produce different artifacts.\n. It's good for the most part, but there are some problems.\n- You've attempted to correct \"assistent\" in titles which is actually the feminine of \"assistant\" as well as a legitimate word in other Germanic languages. I don't think this change is correct.\n- \"Softwares\" is used as shorthand for \"software list entries\" or similar in various places. Just changing it to \"software\" doesn't read correctly.\n- \"standart\" is a legitimate word in a number of European languages. Are you sure it should be \"corrected\"?\n. Yes, \"assistent\" is archaic usage and not considered standard in modern English anywhere.  However that doesn't stop people potentially using it in software titles for \"artistic\" reasons.  \"Assistent\" is also a legitimate word in Dutch, Danish, French, and other languages, so \"correcting\" it in software titles is more likely to be the wrong decision than not.\n\nThe three remaining changes I take issue with are:\n- src/emu/ui/datfile.cpp:139 could be addressed by changing to \"software list entries\", rather than \"software\"\n- src/emu/ui/selsoft.cpp:681 reads incorrectly after change, and it affects translations \n- src/mame/drivers/primo.cpp:361 \"Standart\" could very well be the correct transliteration from Hungarian - can you show that it's really an English misspelling?\n. Look, there are plenty of software titles with intentional misspellings.  Can you show a source giving an official name for this BIOS version, or contact the developer who added it?\n. You can use 7zip archives with MAME as long as no individual file in the archive exceeds 4GB.\n. We don't use the info zip library for reading zip files -MAME has its own code for walking the ecd and calls zlib to decompress the data. The relevant code is in src/lib/util/unzip.cpp and hidden entirely behind a C++ interface class. It should be easy to implement zip64 without high impact on the restb of the code.\n. Implemented in f5f9b45da8bdd46939e64ebcec1a6afc13063656\n. Please rebase against mainline properly.\n. Please use the types from cstdint rather than the legacy all upercase types from MAME's OSD headers.\nPlease use C++ function-style casts or explicit static_cast/reinterpret_cast rather than C style casts.\nThe ZIP64 signature if present immediately precedes the ECD.  You should check for it after locating the ECD.  You definitely shouldn't be scanning for the ECD twice like this.  Copy/pasting clearly expensive code that does allocations and I/O should ring alarm bells in your head.\n. No, that's an explicit static_cast which you generally don't need unless you're messing with references/pointers to polymorphic classes.  You can use a function-style cast most of the time.  Also, you don't need to explicitly cast when assigning an unsigned integer to a variable of a larger unsigned integer type.  C has automatic promotion.\n. I see no changes.\n. OK: let me be more explicit: I still see a big copy/pasted loop in initialize() that clearly doesn't belong there.  The ZIP64 signature immediately precedes the ECD if present.  You shouldn't be searching for it separately.  And it definitely doesn't belong in that method.  Also you're looking for ZIP64 extra field whether you found ZIP64 signature or not.\n. This:\nhttps://github.com/mamedev/mame/pull/790/files#diff-d83bc6ac7e3a959fd07120cb0bdef0f7R208\nOK, not a loop, but still a big piece of copy/pasted code that's convoluted, unnecessarily complex and in the wrong place.  Why are you dynamically allocating a small fixed-size buffer?  Why are you doing this in what's supposed to be a small inline method?  Why are you later looking for ZIP64 extra fields whether or not you find the ZIP64 signature?\n. Closing due to poor quality, incomplete implementation of ZIP64.\n. This is somewhat better, but still quite buggy:\n- you potentially read off the beginning of your buffer at lines 604 and 605\n- you're not checking the total disks, disk number, etc. in the ZIP64 ECD\n- you shouldn't only be checking for ZIP64 on finding 32-bit saturation - according to spec, ZIP64 may be used for smaller archives\n- you're still hunting ZIP64 extra field whether or not you found ZIP64 signature\n. Implemented in f5f9b45da8bdd46939e64ebcec1a6afc13063656\n. Sorry, we don't want our third-party libraries to diverge from upstream.  We suppress the warning for the K&R function declarations in our GENie scripts.  You could consider sending your patch to the LZMA project.\n. Yeah, I'd question the value of implementing a hypothetical ISA card carrying a chip that IIRC was only sold on PCI and AGP card.\n. Please separate the teleprinter changes from the Patinho Feio changed.  I take issue with a number of things in the teleprinter changes.\nAnything relating to the Model 33 ASR belongs in a Model 33 ASR device, not in the generic teletype,  This includes its font, its speed characteristics, its sounds, etc.\nPutting that aside, there are issues with the approach to simulating a Model 33 ASR:\n- The Model 33 didn't produce \"blotchy\" glyphs, it use a typewheel mechanism and was capable of decent (although not spectacular) output quality.  The poor-quality teletype output seen these days comes from old machines where the platen has hardened, the print head has become misaligned, and the ribbon is in less than ideal condition.\n- The Model 33 had 69 different typewheels available.  Which one are you trying to represent here?  Ideally, the loaded typewheel should be a configuration option or a slot device.\n- The implementation of glyph lookup with a linear search and compare is nothing like how a teleprinter actually worked.  The Model 33 typewheels logically had 42 positions and two shift states (physically there are four rows of 21 characters on the typewheel).  A mapping function was used to convert seven bits of the incoming code to a position and shift state.  Simulation should represent this properly.\n- The Model 33 had automatic WRU response of up to 20 arbitrary 8-bit characters by means of a drum with breakable tabs.  This should be simulated as an image device.\n- The Model 33 ASR has an automatic 8-bit paper tape punch/reader which should be simulated as an image device.  (As a shortcut you could simulate a Model 33 KSR, which lacks the paper tape.)\n- Simulating timing on the Model 33 is quite complicated, it's not as simple as just using delays.  It had a number of continuously rotating components.  Things like sending a character had to wait for the component to come into position before they'd begin.  So you'd need to track the current position of all the components and synchronise it to get timing right.\nSimulating a particular teleprinter properly is quite complicated, which is probably why no-one has attempted it.  Good luck if you want to do it, but please do it properly when you do, and keep it separate from unrelated changes.\n. No the code is not acceptable in this state.  The teleprinter changes need to be done properly or backed out.  The implementation is shoddy, The font is based on imagination, not a real Model 33 typewheel so calling it an ASR33 font is stupid (there is no Model 33 typewheel with that character set).  An idealised TTY shouldn't have sounds based on a particular mechanism.\nPlease use git rebase -i to select just the Patinho Feio changes.\n. Seriously, you're not helping yourself here.  Separate out the Patinho Feio changes.  You should be able to do this with git rebase -i\n. First of all, you've tied up two completely unrelated changes.  It isn't two unrelated bug fixes that happen to be convenient to do together, it's two unrelated sets of functional changes.  That's already bad form.  Secondly, the code is inconsistent quality.\nI hadn't brought it up before, but your code is still making use of mixed spaces and tabs for indentation.  For example in  src/mame/includes/patinhofeio.h at lines 37 to 50 you have some lines indented with a single tab, and others with eight spaces.  This is sloppy, will not line up for anyone with different tab settings to you, and doesn't follow the MAME convention of using tabs for initial indents.\nThe code in patinho_feio_state::update_panel is ugly with the xor in every if statement.  It would be cleaner (and easier for the optimiser) to do each xor once into a local variable and just test it.\nIf you want to use a python script to generate a layout, then you need to make it part of the build process, not check in the script and the generated output.  That's just asking for them to get out of sync.\nA C++ source file containing an XPM bitmap in a string is not an XPM file and shouldn't have an XPM extension.\nThe code you're using to map bytes to bitmap positions is unacceptably bad.\nYour choice of sound effects for a generic TTY is questionable at best.  A carriage return sound isn't relevant to all TTYs, as high-speed teleprinters with chain mechanisms don't have a concept of a carriage as such.  On the other hand, most teleprinters actually do make some kind of sound on line feed.  But the most glaring omission is lack of bell sounds.  TTYs generally ring a bell on receiving the the BEL character, and at a configurable column position when echoing keyboard input.  Unlike the other sounds which are side-effects of the mechanism used, bell sounds are actually intentionally generated.  If you're going to add sounds for a generic TTY, the ones to add would be the bell sounds.\nIt's far from the \"iterative small improvements\" you claim.  If you could actually accept criticism rather than immediately going into defensive mode and assuming you know better than anyone else, you wouldn't waste as much of your own time or others'.\n. Try to see this from someone else's point of view for once:\n- You don't seem to be able to learn from past experience.  Every one of your pull requests that I look at has issues with indentation, spacing and consistency.  I raise the same issues every time, yet you never seem to learn.\n- You always present a smug attitude, as though you think you know better than everyone else, and will only communicate on your own terms.\n- You take it personally if anyone suggests that your ideas or code is flawed.\n- You seem completely unable to accept or act on any kind of criticism of your code.\n- In this pull request, you seem to be trying to force a change you want to make to the generic TTY by tying it up with changes to the Patinho Feio.  I indicated to you on IRC that changes like this would be contentious before you started, yet you still went ahead.\nCan you seriously not see how you're antagonising people and not doing anything to build trust?\n. OK, if you're not asking for it to be merged in its current state, that's fine.  But in that case, I'd recommend not opening a pull request against it.  A pull request implies you want us to merge in the immediate timeframe.  If you just want to develop on a public branch, that's fine.  We can leave it on a closed pull request and re-open it when it's time to sort out issues and merge.\n. Looks good.  We're currently in feature freeze for release, but after the release this should be good to merge.\n. the one issue I can see is that the UTF-8 in port names will have to be replaced with escapes to pass through the source cleaning tool.  For better or for worse, we still require our C++ source to be 7-bit ASCII.\n. I'm merging this now, but some time before the 0.175 release, please open a pull request to replace UTF-8 in strings with escape sequences or it will be mangled by srcclean.\n. This PR was missing the CPU header and hence was reverted.\n. This pull request is still missing src/devices/cpu/patinhofeio/patinhofeio_cpu.h\n. OK I'll merge it now.\nNote that you'll still have to replace UTF-8 with escapes at some point for the input names to survive the srcclean before the next release, e.g. \"PREPARA\u00c7\u00c3O\" -> \"PREPARA\\xc3\\x87\\xc3\\x83O\"\n. We have a significant number of users who require DirectInput 7 functionality for arcane controllers. Removing this is not acceptable. Brad already pointed this out on your previous pull request.\n. Could you cherry-pick the following three commits into a pull request:\n- Fix debugging code in font_dwrite.cpp\n- Introduce osd_dynamic_bind\n- Remove Direct3D abstraction layer\nThe font_dwrite changes should be a pretty clear improvement.  I believe removing the Direct3D abstraction layer should be fine as the D3D8 module is considered legacy support at this time and we're focusing on BGFX going forward.  The osd_dynamic_bind might need some adjustment, but it looks promising.\n. For now I'd rather you just port it to osd_dynamic_bind rather than removing the dynamic binding at this point.\n. As mentioned in comments on the code itself, the MAME convention is to use UTF-8 strings in APIs and convert as necessary, not to pass in wide character strings.  Also passing vectors by value is expensive.\nThinking about this a little, right now the code is inefficient, and the abstraction isn't quite right.  Each dynamically bound function keeps a reference to the module.  It would be better to have a class representing a loadable module, supplying a template function to look up a function symbol and return a pointer.  This could be implemented in terms of a virtual method.\nThe class should follow the pattern of util::core_file, util::archive_file, osd_file etc. and provide a static method for obtaining an instance of a concrete implementation of an abstract interface.  This would give implementations more freedom and remove the need to declare instance variables capable of holding the necessary members for any implementation.\nInterface could look something like this:\n``` c++\ninclude \ninclude \ninclude \ninclude \ninclude \nnamespace osd {\nclass dynamic_module\n{\npublic:\n    typedef std::unique_ptr ptr;\n    ptr open(std::vector > &&names);\n    virtual ~dynamic_module() { }\ntemplate <typename T>\nstd::enable_if_t<std::is_pointer_v<T> > bind(char const *name)\n{ return reinterpret_cast<T>(get_sym_addr(name)); }\n\nprotected:\n    virtual std::uintptr_t get_sym_addr(char const *name) = 0;\n};\n} // namespace osd\n```\n. It hasn't fallen off my radar, just day job is busting my balls.  I'll get back to it.\n. It's good enough to merge now before it rots.  I'll think about a better home for it than the current location and move it later.  Sorry for delay.\n. Supporting subdirectories causes problems with things like NTFS junction points where you can create an effectively infinite directory tree.  This isn't something MAME is likely to support any time soon.\n. The failure to build is caused by other breakage that has since been fixed, so that isn't an issue with this pull request itself.\nI noticed that several includes of source files into the driver source have been eliminated. Are all of them still referenced elsewhere, or can some be eliminated? (Honest question, I don't know where else these source fragments could be included.)\n. In that case, shouldn't the files also be removed? I didn't see file removal (unless github mobile is messing with me).\n. Can you not use static inline free functions?  Simply declaring a function inline suppresses symbol export already, and if you want to prevent a function/global from being used outside a compilation unit, the \"proper\" way to do it is to put it in an anonymous namespace.  Note that this also works for classes, whereas static doesn't.\nShould ui::menu::custom_mouse_down really be public?   It looks to me like it should be private as it's an internal method allowing functionality to be overridden.  Also, consider making it return bool to allow a derived class to suppress the standard mouse-down response, or even move the entire mouse down handling to a ui::menu::mousedown method, allowing the derived class to completely override base behaviour, or call the base method before, after or during processing.\nI really hope your checks for space and breakable characters are just placeholders for a proper implementation because the current code is obviously grossly inadequate.  Hiragana/katakana are definitely not breakable on any character, there are lots of space characters for different purposes, etc.\nI see it considers the \"character\" as the unit to be positioned, as opposed to the \"glyph\", but that doesn't really make things worse than they already are in MAME.\n. This is going to cause a big change in behaviour as currently you can have leading zeroes on a number using default base. Could you use 0o instead?\n. Should be fixed in c33946ba0b0b9b18f21302fd60711a59314674c9\n. Why aren't you using std::function?  A driver may want to have state available in its overriden disassembly function.\n. They currently don't depend on state because it's difficult to. I'm working on making the SPARC disassembler integrate better with the running CPU core and driver already.\n. It's still not a very good implementation - it loses resolution and makes assumptions about the time_t epoch and resolution which are, strictly speaking, not defined. Have you had a look at the hoops I jumped through to convert an NTFS time in unzip.cpp/un7z.cpp? Perhaps that should be put somewhere more accessible since at least three things need it.\n. Did you proto a function after its inline body? (In timeconv.h)\n. This didn't make it in before the freeze for 0.175 - could you please merge or rebase to latest master and resolve the conflicts?\n. Even after the latest change, you're still not using rvalue properly, so it isn't an improvement.  You need to actually use std::move at the key moment.\n. Also, if menu::m_pool is still actually being used for something, please point it out.  I'd be more than happy to see that member and its associated methods disappear.\n. Just one tiny thing...\n. This is completely flawed - it's conflating keypresses with character input.  Hence it will never work with languages that use IME edit or Android.  Also as Tafoid says we support save/load on many more keys than 0-9, including joystick buttons.  You'll need to not lose that functionality.\n. The new overload for utf8_from_unichar is heavily dependent on small string optimisation for performance. It's going to perform pretty poorly with glibstdc++4.9 (glibstdc++5 and libc++ have SSO). Does MSVCPRT have SSO?\n. It's all very well to say that file dialogs are not performance-sensitive, but people will inevitably use it for something else.\n. Also, have you checked for things using the result of the functions that you changed from int to bool return as an integer?  The behaviour of implicit bool to int cast shouldn't break anything, but it's still considered bad form to use bool in integer context.\n. This can't be merged until you push the corresponding changes to the header file into this pull request's branch.\n. Shouldn't this be part of #1033?  You need to push a further commit to #1033, not make another pull request for another part of the same change.  Applying #1033 would break the build without this.\n. Could you make it only allocate the AVI recorder if it's going to start recording? \n. I'm merging this for now before it rots.  @GiuseppeGorgoglione can you please submit another PR to lazily create AVI writing components when you have time?\n. I tested it, and it seems to work properly for D3D with HLSL but it's regressed at some point with BGFX.  Oh well, another regression to chase...\n. menu_file_selector and menu_select_rw never check m_result for null pointers - why not use reference rather than pointer?\nCasting directly from the int-derived result enums to void * produces undefined behaviour. You need to decide whether you want to widen first then make unsigned, or make unsigned first the widen. An intermediate cast is required. The same applies going the other way from FPTR to result enums.\n. The changes to the zippath path utility functions to remove the dst parameter may hurt performance since they now always have to allocate a new buffer for the result string and can't use the existing buffer from dst if the caller has a persistent string object across several operations. I'd prefer adding overloads that return a string by value.\n. Couple of questions:\n- does this include whatever changes are necessary to build scripts so that make shaders compiles these new shaders?\n- have you compiled sharers on Windows with a D3D11 compiler library present so D3D 9, D3D 11 and OpenGL versions will all be present?\n. This is not the correct fix. It requires #include <cstdlib> to be added. I'll get to it soon.\n. Could you send this upstream to Omar as well?\n. You really, really need to add a note in the pull request that it breaks on POSIX, and you've arranged for me to deal with that side of things.  Some well-meaning Windows user could merge it and screw it up for everyone else.\nI don't think changing multi-line comments to C++ style is a good idea.  It makes editing, particularly in vi, more difficult.  If you join two lines in the comment with shift-J, you have to remove the // manually, when you break a line you need to manually adjust the indent because it comes after the leading //, and the indent adjustment commands also won't work when reformatting the text because the leading // comes before the indent space.  Changing single-line comments to C++ style is good though.\nCould you make the function for checking new filenames also reject 0x7f (delete) and the C1 control range 0x80 to 0x9f?  These characters can also cause interoperability problems.\n. @Pernod70 as our resident expert on all things with BBC in the name, any objections to this?  The code looks reasonable.\nI'm not sure about about making a library just for this machine though.  Maybe it should be moved to a misc library rather than getting its own?\n. It's still easier to actually see what you changed in device_debug when it's split out like this.\n. There are now three unrelated changes in this pull request:\n- moving device_debug to a separate file\n- moving script processing from debug_cpu to debug_console\n- moving some watchpoint stuff from debug_cpu to device_debug\nThe first two are pretty non-controversial and I'd probably merge them pretty quickly. The problem is that the third item is tied up in the same pull request. Given that watchpoints are tied to diexec, and the code after the change requires device_debug to do a whole lot of access to debug_cpu anyway when doing a watchpoint check,  I'm not convinced it's a good idea. You haven't given the motivation for it either.\nIn any case, it's better not to tie up unrelated changes in a single pull request.\n. There are a number of functions that take a pointer parameter but take for granted that it will never be null.  If the parameter can really never be null, it should be a reference.  If it can be null, then the functions should check for nullptr and deal with it appropriately.\nIf it's an implementation of an interface but for some reason something up the chain should always be setting it for this particular implementation of the interface, then the interface probably needs re-thinking.  At the very least it should assert that the pointer is non-null and have a comment explaining why.\n. Two nit-picks: can you add #include <string> and <vector> to diimage.h so it isn't relying on it coming from some prior header, and could you put #include <regex> after the project headers in the source to avoid making missing includes in headers?\n. Please add #include for the types you use rather than relying on the precompiled prefix header. For example the header needs at least <memory> and <functional> as well as the MAME headers for bitmap_argb32 and render_texture.\n. Fully decoupling it from the menu code would be annoying due to needing another mechanism for keeping per-machine static objects.\n. If you're going to make a change like this, it's worth looking for places that are calling .c_str() on std::string parameters passed to the function as well.  A quick grep finds two.\n. core_filename_ends_with still isn't right - it doesn't run off the beginning of filename if it's shorter than extension now, but it will return true for things like core_filename_ends_with(\"ps\", \".eps\")\n. Could you put the order of settings back how it was, i.e. coinage choices in order from least credits per coin to most credits per coin, and off before on? This makes it a bit easier to configure games.\n. Not always - we preserve the recommended default from the manual, but we tend to use standardised terminology rather than exact names from manuals, and we like to keep settings in logical ascending or descending order to make it more usable.\n. After the changes does it still build on stock FreeBSD without the GNU environment?  For example the change to src/osd/modules/file/posixptty.cpp - is that define present on stock FreeBSD?\n. Couple of minor things:\n- Could you add PORT_CHAR for the keyboard inputs so that \"natural keyboard\" mode works at least for letter keys?\n- There are a couple of #if 1 blocks in sm7238.cpp for 132-column mode. Could you make this check amacro with a meaningful name? Also the screen parameters seem to be the same in the #if and #else blocks in the machine configuration, just using parameters defined earlier.\n. If you're getting rid of create_option_guide overrides that don't implement anything over the base, why not remove the image_interface overrides that just return nullptr as well? Also I think you've added trailing whitespace on blank lines which will create diff churn when srcclean is run before release.\n. I'm working on encapsulating this stuff myself. It's not straightforward to make it wrap when it should, not wrap when it shouldn't, scroll as expected, etc. There's also code in derived classes that messes with the selection directly that needs to be considered. Could you hold off on this for a bit? I am looking into sorting it out, but it's intermixed with all the other stuff that's going on. \n. Yeah I need a selection changed hook as well, but it requires that all derived classes are prevented from modifying the selection directly, too. As you know, the code is pretty nasty. I've been slowly untangling it. The drawing code for derived classes is actually split out now. The stuff for the multi-pane machine/software select menus have a common derived base that deals with a lot of their shared logic. It's just a lot to get through, and often not obvious where things are used or what logic is actually hit.\n. Why the change from to protected from private for the populate() method? There are no derived classes that need to access it, and it's private in the base IIRC.\n. Are the // TODO: Check if BRG enabled already and restart timer with new value in case advice above is not followed by ROM comments in the Z80SCC source still relevant?\n. This changes semantics substantially.  You're now treating an empty string the way a null pointer was handled previously.  Previously a pointer to a zero-length string was not treated as the same thing as a null pointer.  Are you completely sure there aren't cases where an attribute could have a non-null empty value, e.g. with a self-closing tag in the XML?\n. At the very least, give me a chance to look this over before someone rush-merges it.\n. The freeze is coming very soon.  This is a rather invasive, if mechanical, change.  Given the last significant change with the move to std::string in softlists actually did break things in significant ways, and the subsequent pull request changing the string utilities to use std::string has some careless breakage and oversights, I'm inclined to agree with @Robbbert and wait until after the release to merge this.\n. WTF floor works with constexpr for me...\n. I don't like the direction of this.  It jams even more software list behaviour into diimage, where it really doesn't need to be.  Even if we don't move the software list structure out of emu, I still agree in principal with @npwoods that software lists and software loading shouldn't be tightly coupled with diimage.\n. Don't forget to go looking for callers using .c_str() to clean up, as that will cause an extra allocation now.\n. Playing devil's advocate, do we really need macros for these?  They can be done with PORT_NAME.\n. Yeah interdependent pull requests should be noted explicitly. And I'm not quite sure whether we want #1159. There are lots of common keys that we don't have macros for, e.g. the IME control keys on Japanese keyboards. Is adding macros for keys that are specific to DEC terminals and clones really something we want to do? \n. Well there are two issues here:\n- What keys do we want to add?  If we're adding them we may as well do a lot at once.\n- How can we expose keys to Lua when they don't have macros?  We're never going to have a macro for every key on every exotic input device.\n. Sorry I can't auto-merge due to conflicts. Can you get that resolved?\n. Sorry but converting to lowercase and then doing a literal compare is not safe when Unicode is involved. I realise core_stricmp is not Unicode-aware yet, but in principle, having a function that does a non-literal comparison is the right approach.\n. It's the principle of the thing. I still don't believe in taking shortcuts that just happen to work at the moment for a given application.\n. I disagree with anything that takes us further from treating any Unicode character as just another character.  The way forward is to do no more normalisation than potentially converting to NFC, and then having string comparison functions that accept nonliteral and case-insensitive flags.  Ultimately we need better Unicode support all through MAME, not hacks that take us further from that.\nA very simple example of not wanting to drop non-ASCII characters in an extension is for error messages, e.g. \".\u00fcber is not a recognised image file extension.  Recognised extensions are .foo and .bar.\"  Same goes for forcing lowercase, you should always preserve the original case so you can present it unadulterated in messages.  That's before you get into characters that have no uppercase form or no lowercase form (e.g. the eszett \u00df has no uppercase form so doing case conversion on it is lossy and not round-trip symmetrical).\n. This pull request contains DMCA-bait revisions.  Please get it out of your repo.\n. This pull request contains two DMCA-bait revisions.  Please get it out of your repo.\n. Can you please try adding ARCHOPTS=-flifetime-dse=1 to your make command?  GCC6 changes behaviour in a way that causes MAME's allocators to behave differently.\n. I don't like the idea of adding operaor*() to a class that has a cast-to-reference operator. The class should act like a pointer or a reference, not both.\nRenaming I/O ports less descriptively (e.g. in gomoku.cpp) to appease legacy I/O port array structures is also unhelpful when you can use a real array with C++11 uniform initialisation (see any of the keyboards I modernised).\nIn fact, I'd really rather you didn't do any of the mass I/O port renaming as it will break save states and input recordings.\n. You don't even need initializer_list explicitly, you an do stuff like:\nclass my_device : public device_t\n{\n    required_ioport m_ports[3];\n    my_device(...)\n        : device_t(...)\n        , m_ports{ { *this, \"P1\"}, { *this, \"P2\" }, { *this, \"DIPS\" } }\n    {\n    }\n};\n. Switching to clang probably won't help if the standard library isn't also upgraded. Are you sure you can't build your own gcc/libstdc++ and install it under /opt? That's what I do to use GCC5 on RHEL7.\n. If we wanted to \"keep constraints to a minimum\" we wouldn't have made the decision to move to C++14 in the first place.  Not having constexpr min/max is a pretty big failing.  Any time we have to do something like this, it hurts readability and maintainability of the code.  Also, the expression doesn't behave the same way as std::min because it evaluates at least one of the arguments twice.\n. And there isn't much to \"maintaining an entire hierarchy of compiler and library dependencies\" - on RHEL it's just a matter of making some mechanical changes to an RPM spec.  If it's substantially harder on other systems, that's a problem with the packaging facilities.\n. Does it not understand PORT_CONDITION? It appears to be generating the keystrokes for JIS when the keyboard is set to ANSI layout.\n. Pasting/natural keyboard is fundamentally broken for any system where modifiers are scanned as part of the keyboard matrix (e.g. Sun, Amiga, RM Nimbus, X68000) because it doesn't leave any delay between modifiers and character keys.  (It's also never going to work properly for systems with IME edit, selectable keyboard layouts or dead keys, but those are other issues.)\n. I'll merge it, but I still don't like the way the old I/O port array classes keep an array of smart punters - it's terrible for locality.\n. It's possible to pass a nullptr function pointer or std::function for the filter. I guess that's less relevant when you can pass a lambda that always returns true though. \n. What about the Nichibustu mahjong games? Lots of games in nbmj8688 for example have a button for clearing persistent data. Also what semantics are you implying? Should this input type be used for things that just clear accumulated credits/bookkeeping, or only things that clear all persistent data including settings? There are a number of different reset behaviours depending on the game.\n. Also do we want to think about a potential default mapping for this new input type?\n. A #define macro inside a class declaration? Seriously? Please either move it out of the class declaration (since it isn't scoped) or turn it into a constexpr.\n. In menu_game_info::populate you should std::move the temporary string to avoid introducing an unnecessary copy.\n. Also why move the natural keyboard down a level at all? It's a (rather poorly implemented) feature of the internal front end and not a core emulation feature. I'd argue it should be kept even further away from the core, not moved in deeper.\n. I'm closing this on the grounds that moving natural keyboard around without even attempting to fix its fundamental issues (e.g. having no chance of working reliably with LLE keyboards) is pointless, and if anything it should be moved further away from the core, not closer to it.\n. I don't really think this is the right way to do it. Whether the image is in read-only or read/write mode shouldn't be tied to the mode that it used to open the underlying file. That's relying on an implementation detail which isn't clean at all.\n. Yeah I agree with @galibert - the read-only status is an attribute of the media itself. Tying it to an implementation detail like this isn't beneficial.\n. Sun keyboards have no right control either.\n. The FP-200 has a JIS layout keyboard.  Please map the default keycodes so it works intuitively for people with a real JIS keyboard.  KEYCODE_OPENBRACE should map the the @key, KEYCODE_CLOSEBRACE should map to the [{ key, KEYCODE_COLON should map to the ;+ key, KEYCODE_BACKSLASH should map to the }] key, KEYCODE_QUOTE should map to the :\\* key, etc.  See x86k for an example of a JIS layout keyboard.  Trying to map JIS keyboards to keys with similar characters on an ANSI keyboard makes computers horribly confusing for people using MAME with a JIS keyboard and doesn't really make the system easy to use for people with an ANSI keyboard anyway.\n. Looks like pretty dodgy design to require the reference to be kept like that (I realise it was already like that).\n. I think it has to do with two unintialised members in thesdl_window_info` class.  I've raised this with @bradhugh who last refactored the file and is responsible for the uninitialised members, but he seems to be MIA again.  I'll try initialising them to false and see if it fixes it.\n. Can you see if a2b99f814965f8e703b380a6c67b4f66f1a18749 fixes it?  Preferably just apply that over what you've got to isolate the change.\n. - \n. Screw github and its bloody mess of javascript that causes the page to jump randomly on a touchscreen browser. Didn't mean to close and reopen. \n. So just to confirm, you're sure bdream97 expects to see encrypted data on normal load/store but gets decrypted data for M1 instruction fetches?\n. What if the CPU does an M1 fetch from RAM? Perhaps it would be better to use a single handler for the entire decrypted opcodes space that reads from the program space and does the necessary transform rather than a fake ROM region. That would better represent the hardware if it's doing something simple like XOR M1 with a data line.\n. From experience with these kinds of boards, the \"encryption\" schemes are usually the most trivial hack they can manage that will reduce the likelihood of unskilled bootleggers doing ROM swaps. XOR a data line with M1 fits pretty well with the kinds of things you'd likely find.\nI know other drivers use fake ROM regions, but that doesn't make it right. Also, MAME hasn't supported separate address space for Z80 M1 access for very long, previously direct_update_handler hacks were necessary which pretty much required you to make a fake ROM region (MAME CPU cores couldn't fetch instructions from anything that wasn't plain memory so you couldn't decrypt on-the-fly even if you wanted to). The other drivers should really be updated where appropriate.\nButton lamps are educated guesses in most gambler drivers. The longer you work with this kind of stuff, the better your guesses become. Such is the way when working without complete documentation.\n. Can you please make it pass through the debugger access flag to the program space? See osborne1 or vixen for an example (it's needed to suppress read side effects when viewing memory in the debugger).\n. Well we work with what we've got.  That's what you need to do when passing through accesses, if nothing else just because someone else might copy you in a case where it really does matter.\n. Get rid of the default value for the debugger access constructor parameter and I'll merge it.\n. Fixed.  The code was bloody awful.\n. MAMEUI is not just a UI, it's a MAME derivative with a built-in UI.  It isn't using your new copy of MAME.\n. There are a lot of problems with the code as submitted:\n- There should be no dependencies from src/devices on src/mame and this introduces another one\n- The code plays fast and loose with integers, relying on undefined behaviour\n- The code uses #define macros everywhere, even for simple constants where there's absolutely no excuse given that C++11 gives you a choice of enum, scoped enum and constexpr\n- It puts all kinds of things in global scope that really shouldn't be\nI'll merge this now, but can you at least try to clean up the sheer number of #define macros at some point?\n. I was referring to previous PR adding the dependency.  This one fixed it.  As for good drivers...  I guess look at things that have been rewritten recently is the best generic advice.  Things get modernised slowly, and MAME still has a lot of cruft.\nAs an aside, I'm not really sure moving GBA LCD to src/devices is the right thing to do.  The intention is really to keep things that are common devices in src/devices, and things that are only used for a single system in src/mame.  I know this isn't always followed.\nThere's also some argument over what should be implemented as a device in MAME.  The general consensus is that devices should represent actual physical components or subsystems of a machine, like a sprite chip, a sound board, or a keyboard.  Some people strongly oppose separating different functions of a single SoC into different devices.\n. No until after release.  Pretty much every refactoring change you've done this release cycle has sadly led to instability.\n. Calling them \"tafoid bugs\" is highly misleading.  Tafoid is not responsible for these bugs.\n. See this is why I didn't want to merge this PR.  Rather than simply fixing the regression, it carried a whole lot of other changes with it, and we don't know what other regressions it might have introduced, in addition to this change in behaviour.\n. I don't think we really want to do this.  The information on the image format should be available through information in the softlist itself, not from the filename extension.  If the necessary information isn't present in the softlist, in needs to be added somehow.  Moving the hack into the softlist code is worse than leaving it where it is because it will allow other code to easily depend on it.\n. But it's against the spirit of the softlist.  The softlist itself should contain all necessary metadata.  Relying on filename extension goes against that design.  I'm closing this.\n. Oh so what about .dsk for Mac disk images?  It's used for half a dozen disk image formats.  And what about all the DC42 and DART images that just plain have no filename extension?  The softlist should have the metadata somewhere, using the filename extension is a hack.\n. Well I guess it's getting merged, but I still dislike it in principle.\n. There is no need to rename the I/O ports. You can either use an actual array of required_ioport (see device_matrix_keyboard_interface for an example) which is the preferred way to do this, or you can pass an initializer_listof names to therequired_ioport_array constructor. Please make the change without renaming all the ports. \n. It's not hard to make an array of required_ioport.  You can do it like this:\n``` c++\nclass my_device : public device_t\n{\npublic:\n    my_device(...)\n        : device_t(...)\n        , m_ports{\n                { this, \"names\" },\n                { this, \"of\" },\n                { *this, \"ports\" } }\n    {\n    }\nprivate:\n    required_ioport m_ports[3];\n};\n```\nI believe AJR has also made it possible to do something like this:\n``` c++\nclass my_device : public device_t\n{\npublic:\n    my_device(...)\n        : device_t(...)\n        , m_ports(*this, { \"names\", \"of\", \"ports\" })\n    {\n    }\nprivate:\n    required_ioport_array<3> m_port;\n};\n```\nEither way, there's no need to go renaming all the I/O ports.\nThe required_ioport_array is an ugly structure that actually keeps a collection of smart pointers to the required_ioport objects, which themselves contain pointers to the actual I/O port objects.  This means that it has poor locality, which screws up L2 cache usage.  An actual array of required_ioport keeps all the objects together in one place.\nThe reason for not removing required_ioport_array is for pathological cases where there are hundreds or even thousands of I/O ports.  Listing them out in an initialiser list quickly becomes unwieldy.  Ideally we could use some kind of generator template to allow this to be done with an array, or failing that, with std::array, but we don't have such a template yet.\n. See dbc1e6cd0e5d2fb57a77404ffda1d8421f28d149 for an example of arrays of both required_device and required_ioportworking.\n. @mamehaze you misread the example - the second case usesrequired_ioport_array<3>`\n. Did you read anything at all?\n\nThe required_ioport_array is an ugly structure that actually keeps a collection of smart pointers to the required_ioport objects, which themselves contain pointers to the actual I/O port objects. This means that it has poor locality, which screws up L2 cache usage. An actual array of required_ioport keeps all the objects together in one place.\n\nBut I have a plan to make the required_ioport_array work better, so eventually either will perform as well as each other.\n. It is done: required_ioport_array and optional_ioport_array no longer add a layer of runtime indirection and only have a small additional memory footprint cost and cost to initialise strings over an actual array.  Several types of syntax are supported for initialisation:\nrequired_ioport_array<5> ports(*this, \"port\");\nExpands to \"port.0\", \"port.1\", \"port.2\", \"port.3\", \"port.4\" (legacy behaviour).\nrequired_ioport_array<3> ports(*this, \"input_%u\", 1);\nExpands to \"input_1\", \"input_2\", \"input_3\" (format and starting number).\nrequired_ioport_array<2> ports(*this, { \"port\", \"names\" });\nObvious example is obvious.\n. OK, the legacy form has been removed.  Now there are only two constructors: the freeform one and the one that takes a format and starting number.\n. @shattered this branch no longer builds.  Please update it to work with the new format-string-based constructor for required_ioport_array/optional_ioport_array and change the names of the input ports back to what they were before.\n. With this change can they still be called with the three-argument form?  If not then it's breakage.  The final argument should be optional.\n. Thanks a lot @shattered \n. @smf-  fixed this in a better way. \n. Also you shouldn't be using a std::string as a text sink as it's not designed for this, and not particularly efficient. You should use std::ostream or something like it. This won't be merged in its current form. \n. Well, it's a very big changeset that requires pulling locally and reading over slowly in a git client, and I haven't had a chance to do that yet.  But if it still contains lots of static char [] buffers, then it won't be merged in its current state, because if it is, it will inevitably rot and not get cleaned up properly, because that's what happens when things are half-done.\n. This is going to end up producing illegibly small text on low-resolution displays. Can you make it scrollable rather than just shrinking it when the length blows out? \n. > I cannot think of any scenario where it would be better for draw_text_box() to push text off screen than it would be to shrink the text.\nIf you're using a 15kHz monitor, or running a game at native resolution, or using a small window, or running embedded in a browser window,  the text will already be at the limit of legibility at its normal size. I mean that's why we supply uismall.bdf for these scenarios,  it pushes the limit down to a lower resolution using hand-drawn bitmaps. Cutting the text off still allows some of it to be read, while shrinking it makes all of it illegible. Incomplete legible text is better than completely illegible text.\n. > > Don't use function statics where you can avoid it - they aren't thread-safe.>\n\nIf this was mutable, I'd agree - but that isn't the case. If you wish, I can pull this out of function scope but that wouldn't change anything from a thread safety perspective.\n\nInitialisation of function statics is not thread-safe by definition.  It uses an unsynchronised Boolean to check whether the static has been constructed each time it comes into scope and invokes the constructor if it's false.  This is completely unsafe in a potentially multithreaded application, hence things like DCLP and boost::once being used.  Class statics, globals, etc. are guaranteed to be initialised before any other code in the translation unit is called, in a thread-safe manner.\n\nI agree, though as far as I can tell MAME doesn't really have a provision for making tools (where this is used) localizable. Some further work needs to be done here.\n\nStill, if the string can potentially be used in MAME when creating an image, you should use the gettext wrapper macros around it.  At worst it will just return the string you pass in.\n\nI don't understand the proposal regarding \"custom proxy iterator\". To me, the problem is not how the iterators work, but the fact that STL collections don't have a distinct way to express that a collection is immutable but the members are. I strongly suspect that I am missing something.\n\nYou can make a class of your own that has protected inheritance of the iterator you want to wrap and then promote the methods you want with using statements, so it can't inadvertently be used to modify the collection.\n\n\nThis thing is not POD because of the vector...\n\nIs that a problem right now? This is used nowhere as extensively as the ROM_LOAD stuff was\n\nYes it is a problem.  Things like this should be done right, or I end up having to clean them up.  I got absolutely no sleep several nights in the lead-up to the 0.177 release because I was cleaning up stuff that wasn't done right the first time (e.g. the iterator classes that didn't meet the requirements for iterators, and the dangerous overloaded constructors for the I/O port array finder that caused silent errors in MPU4 and Cosmic drivers).  If it's worth doing stuff, it's worth doing properly, and this is especially true of the core.  No-one is too important to have to write decent code.\n\n\nset_specification is only used on setup...\n\nTrue for now, but that won't be the case in the future. I have some rough UI for image creation that calls set_specification() when the user changes image formats.\n\nWouldn't that cause the guide to change as well as the specification?  That would require the entire structure to be reloaded.\n\n\nfinish previously allowed a runtime check that the structure was valid. You're now relying on asserts which are only compiled in debug builds. This strikes me as rather dangerous\n\nSimilar to above, I'm changing the underlying assumptions about how option_resolution works. Previously there was a whole notion of specified versus unspecified arguments, and the unspecified arguments would get populated when finish() was called. I'm erasing that distinction - now unspecified arguments behave similarly to specified ones, and the need for finish() goes away.\n\nYou still need a way to make errors in these specifications glaringly obvious, and assertions don't do that.  After sacrificing my sleep to expose and sort out silent errors in the I/O port code, I'm feeling particularly sensitive about this.\n\n\nYou'll need to make it into a kind of abstract base and and implementation templated on the number of items using std::array for storage, then have a variadic creator function that makes one with the right number of elements depending on number of arguments.\n\nCan you point me to an example of this technique?\n\nstd::make_tuple is an example of a variadic template function that deduces the return type from the argument count/types.  There's also stuff in src/lib/util/strformat.h like the concrete util::detail::format_argument_pack_impl that inherits the abstract (but non-dynamic) util::detail::format_argument_pack so that the latter doesn't need to depend on number/type of arguments.  The ultimate users just call util::detail::make_format_argument_pack (directly or indirectly) and it instantiates the correct type depending on argument type/count.\n. It's mostly OK, but I'm still not clear on what the actual use case for constructing with a guide but no specification is, and what the case for changing the specification without changing the guide is?\n. Wow, this is probably the most 1337 patch MAME will ever receive!\n. Just one thing - can you make your converter put a newline at the end of the files?  That will reduce diff churn when we run our source cleaning tool on them.\n. I'm merging this to get it in for the release as it's a low impact change to fruit machines, but we generally don't merge external stuff in the last few days before release.\n. I'm merging this to get it in for the release as it's a low impact change to fruit machines, but we generally don't merge external stuff in the last few days before release.\n. Since this only changes descriptions, not code (mostly \"set NN\" to real version numbers) I'm merging it.\n. So the way you have it now, for alphabetic keys, the uppercase letter is unshifted and the lowercase letter is shifted - is that correct for this machine?\n. Well, natural keyboard won't work right in the lower/uppercase mode if you have uppercase characters first the way you do - it expects the first PORT_CHAR to be the unshifted one.\n. Sorry about how confusing all this keyboard stuff is.  Feel free to use the HLE Sun keyboard family as a reference, e.g. here's the bottom row of alphabetic keys:\nhttps://github.com/mamedev/mame/blob/master/src/devices/bus/sunkbd/hlekbd.cpp#L299\n. The trouble is, a driver that's reference-quality today can end up dodgy tomorrow after a change in best practices due to core work, or because someone goes and commits some dodgy code to it.  Trying to maintain the tags would turn into a full-time job in and of itself.\n. > The Natural Keyboard is very sluggish, I need to press a key several seconds to get a response. I can't use Ctl-P to go between upper and lower/upper case modes either. Hope the configuration is correct though\nYeah, natural keyboard is far less than ideal in its current implementation, but unfortunately the person who originally implemented the feature doesn't seem to want to improve it, so it's stagnated.  However any talk about removing it is met with protests.\nYou've got the mapping pretty much right now, just the Z and A were missed, and you'll have to use hex codes for the things that aren't 7-bit characters because UTF-8 in character constants isn't safe for MAME.\n. I'm sorry but this really doesn't make sense to me. How is making flip screen variable apply to a gfxdecode better than what we have? What's the use case where this is better than moving the flip screen attributes onto the tilemaps themselves?\nThe gfxdecode device isn't even a real \"device\" as such, it's a kind of HLE of the concept of mapping memory layout to bitmaps. It shouldn't be holding machine state.\nI agree that the global flip screen state is a bit weird/confusing, not relevant for non-video machines, and often unhelpful for multiscreen machines, but this really doesn't seem like a sensible way to address it.\nAlso, looking to eliminate the dependency of tilemaps on the tilemap manager, and holding them with unique_ptr rather than naked pointers that magically get cleaned up when it feels like it could make sense.\n. This is another good example of why it's worth discussing stuff with the team before embarking on a major change.\n. I don't think machine state should be moved into gfxdecode, and machine state that has nothing to do with decoding graphics definitely shouldn't be moved into gfxdecode.  For example look at the dual-screen Psikyo 4 platform: two CRTs, independent flip screen bits, one gfx space for both.  There are also systems where some layers are magically flipped by setting a bit in a control register while other layers need the software to set the flip bits on the individual elements in the layer and adjust positions accordingly.  Global flip screen bits are really only good for games like Space Invaders and Laser Battle that have a single monitor and use relays to flip the polarity of the deflection coils.\n. I don't have a problem with moving it out of the base machine state into drivers.\n. Meh, good enough for now.\n. If you're messing with all the calls to logerror in a file, please remove the redundant tag from the formatting string, since logerror always prints device tag by itself.\n. It doesn't matter, we still need atomic updates with descriptive comments.  We can't accept more pull requests like this.\n. Please make a new branch for this, group interdependent changes in a single commit and use meaningful commit messages.\n. \u201cView\u201d is a terrible name for this.  Call it contiguous_sequence_wrapper or something.\n. You're missing the iterator operator+(iterator::difference_type, iterator) operators for iterator and const_iterator needed for RandomAccessIterator - these need to be declared as free functions outside the class, not members.\n. Have you considered implementing rbegin/rend if nothing else for the exercise?\n. The template isn't huge, maybe it could go in src/lib/util/coretmpl.h so that file becomes less useless?\n. Could you please use a custom comparator for the container to allow case-insensitive sorting?Binary sorting isn't the most useful behaviour.\n. Thanks\n. Have you built with OSD=sdl and tested?  Does the configuration persist properly when MAME writes out the the cfg file?\n. I'm not OK with accepting it \"on the condition that it's fixed later\".  That never ends well.\n. No, you can't add more static members to the UI menus.  I've gone to a lot of effort to remove static members as they take us further from multiple machine support.\n. If you really need per-session variables, you can use a trick like the base menu or menu_select_launch uses.  Look here: https://github.com/mamedev/mame/blob/master/src/frontend/mame/ui/selmenu.cpp#L167\nIt creates an instance of cache for the running machine instance and cleans it up on exit.  It still needs static members, but the member is a map protected by a mutex that stores the data per running_machine.\n. As with the previous PR that was supposed to do this, it's useless if it can't make the selection member private and deal with what selgame/selsoft has to do.\n. These are actually harmless as they're constants that can never be changed.  The actual loading of the translations is done later.\n. Line 1371 is now in the else branch so it should be indented by one more tab (the braces around it are fine, they don't hurt, it's just the indentation).\n. No problem, thanks.\n. The Dooyong Z80 games use a sea of LSI logic (gates and counters) to implement the tilemaps.  I'd be very surprised if the DY-PL-1 isn't just an OTP CPLD programmed with similar logic.  It mimics the same control registers, ROM access pattern and 16-bit output each tile interval.  The outputs can still be routed completely arbitrarily, as shown by how \"flexible\" they are with which bits are tile index and which are CLUT index.\n. Gah, SSI/MSI counters and gates, not LSI.\n. The trouble with marking all these things as unused just because the manual says so is that the manual is misleading in at least some cases. The games actually read and use bits corresponding to switches that the manual says are unused. I'd be more comfortable leaving them as unknown rather than unused with a comment saying that the manual says the switch is unused until someone can verify from disassembly that the switch really has no effect. That's what we do with the gamblers.\n. Hardly anyone cares about gamblers either, but we still try to document them properly.  And the fact is, without disassembling/tracing the program, you don't know whether functionality is hidden behind these switches.  I've seen too many games that actually do use nominally \"unused\" switches to accept this without at least adding qualifying comments.\n. Are you actually catching the std::bad_alloc further upstream and dealing with it?  Having something that returns an error code for some errors but throws for others is generally considered bad practice.  Also, MAME does not encourage use of exceptions for anything other than achieving an effective non-local goto.\n. To be honest, I'd reject it on the grounds that it makes a function use mixed error value return and throw for different kinds of errors.  It's bad practice and makes the code using it ugly.\n. Please update the translations before merging.\n. Unfortunately gettext doesn't like C++14 so make translation fails.  Are we like the only project that actually uses C++14 or something?\n. It's valid to dereference some_string[some_string.length()] in C++11 but is it actually valid to overwrite it?\n. OK, now if someone can fix shifted characters we'll be even better off.\n. > if you want to merge it and correct them, and do whatever you need to do to the ticket dispenser that might help.\nThat's not how this works.  You can't keep acting like you don't have to do things properly.  You fix it, then we merge it.\n. You can use trampolines to improve the ticket dispenser hookup. It isn't an unassailable issue. And teamwork also involves taking on suggestions from others, not dumping stuff expecting others to clean it up.\n. @ajrhacker does #1489 necessitate changes to this, or is it safe to merge in its current state?\n. You should really come up with a way to do this with RAII, also that goto stuff could be cleaned up if stuff was RAII.\n. Calling a std::function can be optimised to a single vtable dispatch, but assigning to one necessarily involves allocation because it needs to create a wrapper for whatever callable object you supply and store it somewhere. It's a great thing because it's very flexible - it lets you use a function pointer, std::bind, a lambda expression or any object with operator(). A function pointer lacks this flexibility. For situations where you don't need to assign to the variable too and you can live with the hit to locality, the flexibility of std::function is a clear win. When it's in the critical path, we have our delegate templates that have better locality and lower overhead at the cost of being far less flexible.\n. *don't need to assign to the variable too often\nI accidentally a word again\n. I know it isn't fully inlined - it can't be because the specialised wrapper for the function object is behind a pointer and has a vtable. It's the cost of flexibility. But using naked function pointers prevents use of stateful lambdas, std::bind and arbitrary objects with operator(). It's not like this code is in the memory system or something.\n. Isn't this also missing a change to a lua file to make it actually build?\n. what I didn't say to delete the comment entirely, just to make it not use a C-style comment and line comment on the same line\n. It needs a better name than stride, but I like it in principle. Anyone got any ideas?\n. Row length sounds fine to me.\n. It's not possible to change a commit message once it hits mainline. The description from the pull request will be used as the basis of the whatsnew entry.\n. I really think this is the wrong direction. It's messy, bad for code reuse when multiple games have the same ports, and hard to localise. If you really want to do this, look at a way to externalise the names.\n. How much testing have you done?  Have you checked that keyboard is still recognised across Sun 3/4 drivers after this?  They seemed to be pretty good at abusing the chip.\n. You don't really need a bootable disk for the Suns to test SCC abuse.  They probe keyboard on startup, they'll either tell you the type of keyboard (working) or that no keyboard is present (not working).\n. If a software list isn't hooked up, will it be validated automatically? If not, it's probably better not to move stuff out.\n. Can you please separate the rgb_t changes from the bitmap changes? The rgb_t changes are a no-brainer to apply, but an \"erase\" method that actually fills with black is not obvious behaviour and makes things less clear. Experience with Windows/Mac APIs teaches people to expect erase to fill with white or transparency.\n. Why the changes to the labels for mnightj? Do we have confirmation that the Japanese version has the same labels as the world version? In many cases they're actually different.\n. So the japan set and bootleg have identical ROM contents?\n. If you don's provide all parameters, the memory system won't swallow it.  The signature has to match or it won't bind.  The read/write line members are obvious because they don't have the address space and offset, and they use unspecified size int.\n. Uh-oh, looks like this fails on clang at least:\n../../../../../src/devices/cpu/m6809/6x09dasm.cpp:119:27: error: private field 'm_level' is not used [-Werror,-Wunused-private-field]\n                m6x09_instruction_level m_level;\n                                        ^\n1 error generated.\n. Yeah, if it's adapter pattern that sounds nice.  I just see a wall of diff, I'm not in a position to give a proper review.\n. Oh dear, this is one where the spacing around parentheses has come out inconsistent on just about every changed line.  Please clean it up.\n. The trouble with an endless argument about the \"best\" translation in German is we won't be able to tell who's actually making the best case for their preference.\n. Yeah but when we discuss the shortcomings of the translations we keep the actual discussion in English where possible so non-speakers can follow along. For example see discussions on French, Brazilian Portuguese and Japanese translation (here and on IRC).\n. If both are known to exist as factory configurations, there should be options to run at either frequency.\n. Considering we use m_ as a prefix for members, wouldn't it be better to choose some other convention?\n. Why were they swapped to begin with? What was it supposed to be \"consistent\" with?\n. So kind of like when Gradius buttons were swapped to makebutton 1 fire....\n. A single-driver hack isn't the direction we want for this. A possible implementation that would be considered would be extending the output module system to support controlling inputs as well, and providing a WebSockets-based module.\n. Seems odd that changes are required for Fedora ppc64le - we already support Debian ppc64le (required substantial work on RGB utilities to get that working).\n. To answer your question from IRC, yes MAME actually does work on ppc64le.  It required a bit of effort to make it work, because ARGB needs to be packed the opposite way around in VMX registers.  All the threading and synchronisation stuff works fine using the C++ features.  You can see all the checks for __LITTLE_ENDIAN__ in src/emu/video/rgbvmx.h and src/emu/video/rgbvmx.cpp for supporting ppc64le.\n. It's not worth adding hacks for this stuff, just tell people to include the parent set's sourcefile as well.\n. Ouch, this one will break if it ever uses a stream that can't seek back arbitrarily\n. I'd rather the error sink be passed around.\n. Could you please reinstate the extra blank line?  The double blank line separates sections as opposed to the single blank line separating paragraphs in this block comment.\n. Please restore this double blank line separating memory configuration from internal registers.\n. You might want to correct the then/than confusion as well as removing the trailing whitespace.\n. Third Millenium Engineering is a trademark and is spelled with a single 'n'.  Please check properly before attempting to 'correct' the spelling of names/trademarks.\n. Same comment as above - this is unhelpful.\n. Once again, this is repeating the same mistake.\n. Please don't mess with variable names if you aren't doing any real work on related code - it will screw up peoples autocomplete indexing, ctags, etc.  I know it can be irritating to see, but it actually harms people's ability to get things done to mess with code like this.\n. Another one of theses - you're wasting your own time as well as others by 'correcting' the spelling of a trademark.\n. Yet again\n. And another\n. This is a legitimate although unusual spelling in US/Canadian English.  No need to change it.\n. This is appended to another string - it needs at least a leading space to avoid problems.\n. This is part of a concatenation with the previous string - it needs the leading space\n. Capitalisation?\n. This is part of a string concatenation and needs the leading space\n. This requires leading space as it's appended to the folder name\n. That comment wouldn't be helpful at all.  Literally translating the English as-is lead to the horribly bad Japanese grammar that k2-git fixed in #644.  There are still issues with grammar in translations that can't be fixed without changing the code from using concatenation to using printf-style formatting.\n. Please change this API to use UTF8 char strings, rather than wstring as per MAME convention and convert as necessary.  Also, think about efficiency: passing vector of strings by value causes lots of copying, consider using const reference.\n. This is actually invalid C++ as you can't directly reinterpret_cast from a pointer to data to a pointer to function.  C++ doesn't guarantee pointer-to-data and pointer-to-code are the same size, although POSIX does.\n. Having a reference to the module in every dynamically bound function is inefficient - it would be better to have a class osd_dynamic_module that holds a reference to the module and exposes a template method for looking up a symbol.\n. It's better to use C++11 style iteration in cases like this\nfor (auto const &lib : libraries)\n...\n. You're going to want to provide a method taking std::string && as well to avoid unnecessary allocation/copying.  You may as well get rid of the char * version since there's no way the menu can use long-lived C strings without copying now anyway.\n. Is the pool used for anything else now that this is gone?\n. No, you can't do this - if you're passed a const lvalue reference, the caller doesn't want you to potentially destroy the object out from under them.  The whole point of rvalue references is so that you can consume them destructively if it's advantageous.\n. You need to actually std::move the rvalue references when assigning them, otherwise it just calls the lvalue version of the assignment operator anyway.\n. If you're using temporary std::string that you want used destructively, you must use std::move when you make the call.  If you don't want the explicit std::move, you could have left these as const char * and just initialised to \"\" instead of nullptr here.\n. Since this never returns nullptr, why not make it return a reference rather than a pointer?\n. This could be changed to emplace\n. Please tell the compiler that you want move constructor/assignment operator generated to speed up operations when used in a vector (see menu_item for an example).\n. The pre-increment operator (++iter) is marginally more efficient on iterators as it doesn't need to create a temporary holding the old value. \n. Casting from a signed integer to an unsigned integer of a different size has undefined behaviour.  Also, size_t is not guaranteed to be pointer-sized (that's what std::uintptr_t is for), and C-style casts are less readable than function-style casts.\n. %c is not loacale-aware or localisable.  Please use something localisable.\n. Please make the use of line breaks consistent - if you're not putting opening brace on the same line as flow control statement, don't put the closing brace on the same line as a flow control statement, either.\n. Please be consistent with spacing.  You have no space between if and the opening parenthesis, while you have a space there in other places in this file.\n. Is the DSWB bank not physically present for this game? If it's present but unused, the unused switches should still be listed.\n. this should probably return an unsigned integer or a std::size_t rather than a signed integer since a negative result would be meaningless\n. Why use c_str and work with pointers and a manual loop when you can use reverse iterators and find_if?  This is the kind of C to C++ conversion that minimises actual benefits.\n. I actually meant using code like\nauto const start = std::find_if(name.rbegin(), name.rend(), [](char c) { return util::is_directory_separator(c); });\nauto const chop_position = strip_extension ? std::find(name.rbegin(), start, '.') : start;\nauto const end = (chop_position != start) ? chop_position : name.rbegin();\nreturn std::string(start.base(), end.base());\n. This could also be done with C++ algorithms, e.g. something like:\nauto const found(std::find_if(extension.rbegin(), extension.rend(), [it = filename.rbegin()](char c) mutable { return (it == filename.rend()) || (std::tolower(c) != std::tolower(*it++)); }));\nreturn found == extension.rbegin();\n. if you're doing a literal comparison, you may as well just use operator== when you have a std::string, there's no need for a roundabout strcmp\n. This is a good place to consume std::string && and use std::move below to destructively consume them when initialising your members.\n. Another good place to consume rvalues\n. Since you're trying to go to std::string everywhere, why not make these const std::string & rather than naked pointers?\n. This is one of those cases where auto is really unwarranted and doesn't help - the desired type is known, it isn't some complicated inferred iterator or anything.  Please don't use auto for things like this.\nAlso, I'm pretty sure this is not what you want to do.  The code previously attempted to parse the value as a string, convert to an integer, cast up to a pointer and then store that.  You're not doing that at all, you're storing the c_str() address of a temporary variable which is going to be some unpredictable stack address given how short the string is.\n. Another place where you can consume rvalues.\n. Does this local need to be a pointer, or would a reference do?\n. std::list::size() may be O(n) complexity, you should use std::list::empty() if you only care about whether it's zero or not\n. This can probably be a reference, too\n. A loop that does something useful was lost here. \n. Why not use the string's rfind method?\n. Can the osd_disposer template be eliminated completely or is it used for stuff other than strings?\n. Once again, the osd_disposer template itself can probably be eliminated.\n. can the ARRAY_LENGTH template for getting number of elements in the array not be used here?\n. You're not copying the NUL terminator.  Classic off-by-one error.\n. You have a std::string as input.  It knows its length.  You be passing that rather than -1 as cchWideChar to avoid an expensive scan.  Same goes for the call below.\n. If you use the length of the input string, you won't need the -1 because the terminating NUL won't be counted.\n. Will m_software_info_ptr always get reset to nullptr if softlist media is removed and non-softlist media loaded?  If not, a stale value could cause a problem.\n. Ah I see, it always hits unload() first so it should be OK.\n. You should check str.empty() rather than looking for NUL in first element, and use str.back() or *str.rbegin() rather than checking element length() - 1.\n. Now that you've got auto here you've made a bunch of singed/unsigned comparisons. Really, the beginpos/endpos parameters should be changed to std::string::size_type and std::string::npos can be used as a sentinel rather than a negative value, or they should be changed to iterators and an end iterator can be used as a sentinel.\n. With pos changed to std::string::size_type this comparison is always true due to limited range of type. You can't use a negative value as a sentinel.\n. This variable being a signed integer doesn't play nice with std::string::size_type being unsigned. The whole function needs adjusting. \n. This is no longer safe - you need to change it to pos = length ? (length - 1) : std::string::npos\n. This needs to change to ((pos > 0) && (pos != std::string::npos) && is_path_separator(path[pos]))\n. wouldn't it be better to use a string like \"[^:/]+\\:[^:/]+\\:[^:/]+\" working from unacceptable characters rather than a narrow class to include?\n. This local could be const\n. This is dangerous - someone could take a non-const pointer/reference and cause chaos.  Probably better to have set/clear flag methods.\n. Don't forget to add the annotation necessary for the compiler to generate move construct/assign\n. why not make this local const?  It shouldn't change, right?\n. The parameter names should really have parentheses around them to avoid surprising results when the macros are expanded here. \n. Can you please make this return bool rather than int.\n. Please don't use auto type for no good reason like this - it just obfuscates what you're trying to do.  It's not like entry is a proxy or iterator, it can be a reference to exactly one thing and you know exactly what it is.\n. This should be lifted out of the loop to avoid repeated allocations of the dynamic stream buffer.\n. Using the C string overload is far less efficient than the character overload when you have a single character.\n. What's the reason for removing the validation loop here?\n. Don't use function statics where you can avoid it - they aren't thread-safe.\n. This check for null won't work - std::make_unique never returns a null pointer, it will throw a bad allocation exception.  This must have been introduced in a previous round of refactoring, but you should still notice/fix this stuff when changing surrounding lines.\n. srcclean is going to turn this back into spaces causing diff churn\n. Is this reserve really the best idea?  It's going to reserve a lot more space than it needs for a guide with lots of enumeration entries.\n. Please don't use auto-capture, it can have surprising effects.  Capture what you need explicitly.\n. This really needs to be made localisable\n. The idea of assuming these iterators will remain valid for the lifetime of this object is really scary.  It just doesn't seem right to write code like this.\n. This thing is not POD because of the vector.  You'll need to make it into a kind of abstract base and and implementation templated on the number of items using std::array for storage, then have a variadic creator function that makes one with the right number of elements depending on number of arguments.\n. set_specification is only used on setup, it should be a constructor overload, not an extra method.  You can use constructor delegation to avoid duplicating common parts of constructors.\n. finish previously allowed a runtime check that the structure was valid.  You're now relying on asserts which are only compiled in debug builds.  This strikes me as rather dangerous.  Can you explain your thinking?\n. So make a custom proxy iterator class or something - don't do it in a half-arsed way.\n. the PIA read returns a UINT8 - please don't play fast and loose with integer types.\n. If this is a typical matrix keyboard, driving multiple rows simultaneously will result in all the associated rows being wired-anded together.  Please implement this (see e.g. osborne1 as an example) or show evidence that there's some lockout causing different behaviour when multiple rows are driven.\n. You don't need PORT_NAME for keyboard keys where the name is the same as the keycap label.  You should also supply shifted and unshifted variants (assuming the machine supports lowercase).  This key should probably be:\nPORT_BIT(0x04, IP_ACTIVE_LOW,   IPT_KEYBOARD) PORT_CODE(KEYCODE_Z) PORT_CHAR('z') PORT_CHAR('Z')\nAnd similar for other keys\n. If this is the \"extra key\" on ISO keyboards next to left shift, it should be KEYCODE_BACKSLASH2\nedit: ignore that, I see backslash2 is <>\n. Can you clean this up a little?  You can const-qualify op and arg, case labels don't introduce a level of scope, perhaps you should put default cases that log unknown ops or something, the case label, for loop and break on a single line is borderline unreadable, bit is not used before or after the loop so it should be declared in the loop not at the top of the function, the rest of this file uses Allman style, not K&R.\n. \"Natural keyboard\" input is a bit weird and broken in a few ways.  Essentially how it's supposed to work is that MAME listens for character input rather than keypress input from the OS, and then looks for a matching PORT_CHAR.\nIt supports up to four PORT_CHAR per key.  The first PORT_CHAR is the key pressed alone, the second is the key pressed along with the key mapped to PORT_CHAR(UCHAR_SHIFT_1), the third is the key pressed along with the key mapped to PORT_CHAR(UCHAR_SHIFT_2), and the fourth is the key pressed along with the key mapped to PORT_CHAR(UCHAR_SHIFT_1) and the key mapped to PORT_CHAR(UCHAR_SHIFT_2).\nYou can see an example fragment for a Swedish keyboard in https://github.com/mamedev/mame/blob/master/src/devices/bus/sunkbd/hlekbd.cpp#L356\nFor example:\n    PORT_BIT( 0x0010, IP_ACTIVE_HIGH, IPT_KEYBOARD ) PORT_CODE(KEYCODE_7) PORT_CHAR('7') PORT_CHAR('/') PORT_CHAR('{')\nThis key is digit seven alone, slash with shift, and opening brace with AltGr.\nThe shift key is here: https://github.com/mamedev/mame/blob/master/src/devices/bus/sunkbd/hlekbd.cpp#L303\nAnd the AltGr key is here: https://github.com/mamedev/mame/blob/master/src/devices/bus/sunkbd/hlekbd.cpp#L518\n(The keys are all broken up into different groups because that file emulates a whole family of related but different keyboards.)\nNow for the bad news: \"natural keyboard\" assumes that it can press Shift/AltGr and the character key at exactly the same moment, which is categorically not the case for keyboards that scan the shift key as part of the regular matrix, so half the time you'll get the unshifted character.  If you see this happening, don't sweat it - it's a core bug, not a problem in your driver.\n. So for the right/down key, you would use:\nPORT_NAME(\"Right/Down\") PORT_CODE(KEYCODE_RIGHT) PORT_CHAR(UCHAR_MAMEKEY(RIGHT)) PORT_CHAR(UCHAR_MAMEKEY(DOWN))\nWith emulated keyboard, the user will have to press right to get right, and shift-right to get down.  With natural keyboard they can press right to get right, or down to get down (except when it doesn't work due to the timing issue).\n. Ah, just realised these non-ASCII ones won't work properly with all compilers.  MAME source is UTF-8 but the PORT_CHAR macro needs a UCS4 character, so you have to supply it as a hex code (e.g. PORT_CHAR(0x00c5) for \u00c5).  You can give the proper character in a comment for clarity, we allow any Unicode in comments.\n. These two appear to have been missed when flipping the characters around the right way so unshifted comes first.\n. How about making this a gfx_element const & rather than a pointer to non-const since you're assuming it will be non-null and not planning to modify it?\n. This is playing fast and loose with integer types, and making an assumption about how the code is mapped by the gfx decoder.  The whole thing is being dodgy with regards to integers - casting straight from int to UINT8 is undefined for negative values.\n. This whole class is kinda weird when it comes to how integers are (ab)used - the constructor takes signed integers and converts them to UINT32 without actually doing anything special for negative values.  If you're cleaning up/changing the interface, why not clean up the misguided abuse of integers in general?\n. Minor thing, util::stream_format is very forgiving on the types you pass for the format string - to print a UINT8 in decimal, you can just use %u and not bother cast it.\nThe one thing it does that can be surprising from a printf PoV is that %u/%d apply no promotion to short/char types before formatting.  For example printf(\"%d\", UINT8(130)) yields 130 because the UINT8 is first promoted to unsigned when calling the varargs function before being cast to int when formatting.  On the other hand, util::stream_format(str, \"%d\", UINT8(130)) yields -126 because no promotion occurs, so it casts UINT8 to INT8 and prints it.\n. Oh another one of these - you need to change it to a try { } catch (...) { } because make_unique never returns a null pointer.\n. Please don't use auto-capture, make it explicit what the lambda needs to capture.\n. I'm sick of saying it: this is unacceptable.  ALL NAMES BEGINNING WITH AN UNDERSCORE OR CONTAINING TWO CONSECUTIVE UNDERSCORES ARE RESERVED IN C++.\nUse something like MAME_LIB_UTIL_VIEW_H.\n. You can use = default or not declare this since it just does a memberwise copy.  Same for the assignment operator.\n. You should add matching pre-/post-decrement operators to meet the requirements of BidirectionalIterator which is a base concept of RandomAccessIterator.\n. Implicit cast operators are evil, just don't do it.  If you wanted to use naked pointers, you'd just declare the iterator to be a pointer (std::iterator_traits works on pointers).\n. As with the iterators, there's no point doing this explicitly, just use = default to get the standard copy constructor.\n. Could you qualify this constructor explicit?  It makes it more obvious when people are trying to convert one to the other.\n. This is very, very wrong.  What's the precedence of suffix vs prefix operators in C++?  It's effectively *(this[0]) when you want (*this)[0] (you're subscripting the this pointer, not the object).  It's clearer to write return operator[](0) anyway.\n. Have you actually tested this?  I'm pretty sure you're not supposed to use all the -1 because of how the reverse iterator actually works: it wraps a forward iterator one beyond the element it points to.\n. Your logic is backwards.\n. The spacing is screwed up - how about using template <typename T> to be more like other code?\n. Maybe add a typedef for reverse_iterator and its const friend?\n. This is still wrong.\n. What are you?  A C# programmer?\n. Any reason library can't be a reference?\n. Will std::make_unique not work here?  you need to be careful about using constructor syntax like that because in some cases it isn't exception-safe.\n. You could make this const since you don't assign to iter after initialisation (you just can't make it const_iterator).\n. Please don't use auto-catpture.  Explicitly capture this and sort to make it clear what the lambda is copying.\n. Please don't use auto-capture - explicitly capture module_name to make things clear.\n. Spare space?\n. You've subtly changed behaviour of this loop.  Previously it would compare the terminator as well, meaning if you searched for \"hi\", it would get a score of 2 for \"hit\" and 3 for \"hi\".  You've broken that.\n. Same deal with this as with the other loop, subtle change in behaviour.\n. event->append_char limited the length of the input string to the array length of the buffer.  Barcodes were limited to 19 characters plus NUL by this.  Are you sure nothing depends on the length being limited?\n. You're playing fast and loose with integers.  Don't.\n. Also, this changes the behaviour substantially compared to what event did.  See if you can work out why.\n. Please indent the other line that's been made the else branch of this new if statement.  Apart from that this change is good.\n. Try harder.  It's a faulty assumption that the old code was more complex than necessary.\n. Hang on, this can't be right - you need to put it inside a namespace imgtool block.\n. This is a software title - spelling errors should be preserved.\n. Please provide a photo of the machine showing that this is not an original spelling error.\n. Same with this, show evidence it isn't an original error.\n. Genuine question, is WCHAR from the Windows headers actually guaranteed to be the same type as the fundamental C++ type wchar_t?  If not, this change is not harmless.\n. What's the actual purpose of this overload?  It turns a std::string into another std::string?  The whole astring_from_utf8 is leftover crud from before the astring to std::string migration, and should probably be removed unless you can come up with a good justification for it.  The MAME astring was always UTF-8, just like thestd::string objects we pass around internally are always UTF-8.\n. Is this supposed to modify the source?\n. We don't need another global typedef like this.  Please don't do that.\n. What the hell?  I'm not about to believe this is a two-switch bank\n. These should be replaced with std::function to allow more flexibility.\n. Could you please make these use reinterpret_cast to make it clear what kind of cast you're attempting.\n. Is there any reason the parameters can't be references?\n. Wouldn't it be safer to also set disk->stream to nullptr when deleting?\n. You've half-adjusted the spacing around the parentheses in the call - either do it at both ends or don't do it at all.  Same goes for the rest of the changes in this file.\n. No excuse for not fixing bad indentation if you're changing the lines anyway...\n. Are you sure the copy/pasted DIPs that you've now enabled are actually correct for this game?\n. This is sloppy - empty line comments are unwanted noise.\n. The comment that this may be auto-stop contradicts changing the description to Unused.  Is it really unused, or is it possibly auto-stop?\n. Does this make the kaguya2 input definition that was previously used here unused?  If it isn't used for the driver kaguya2 but is used for some other driver, it should be renamed to something less misleading.\n. Please clean up the two kinds of comment in a row\n. Could you please add the model number to the name?  I'm pretty sure they made more than one product.\n. Oh no, the dreaded uneven spacing around parentheses strikes again (two of the lines in this block)!\n. See, this is why I say preview the diff.  Look at lines 1803 and 1804.\n. case labels don't introduce an additional scope level.  Please revert the indentation to how it was before.\n. Please use std::ostringstream for output-only cases.\n. Yeah, but if you look at the rest of the file, it doesn't add the extra indentation for non-existent scope.  So it's bad on two fronts: you're making the file inconsistent with itself, and making the indentation not follow scoping (a label never creates an additional scope level).\n. Here's a case where you've still made the file inconsistent with itself.\n. Here's another case.\n. Calling this append_indirect when it actually overwrites the destination string rather than appending to it is misleading.\n. please make these const since they shouldn't change for the lifetime of the function.\n. Please make this const, and use constructor syntax like every other local in the file.\n. Please make this const and use constructor syntax.\n. Hey why isn't this one const, too?\n. Can you eliminate this extra trampoline altogether?  It doesn't seem to serve much of a purpose.\n. Could you turn this into some kind of stream object and lift it out of the loop?  Then allocations can be saved.\n. As with PPC, this trampoline isn't really very useful - the code without it isn't any more ugly.\n. Does this stream need to be input-capable?\n. I think it needs to be &buffer.vec()[0] or you'll get a problem trying to pass an object with varargs.. this needs to be moved outside the if statement - the string was re-constructed each time through the loop, but now it won't be.. We prefer the form with do { } while (0) on the outside so the macro behaves like a function syntactically, requiring a following semicolon.. Should this one be front porch? . Can you fix the spelling to save Tafoid's blood pressure? ;). This can't possibly be right - how can there be one of these for all instances of the device?  Function statics are also a problem for when we want to be able to run multiple machines in the future.. Why the change in default value?. Could you please change the following:\n Don't use gnu style, we prefer Allaman or K&R (i.e. use func(arg) and arr[idx] rather than func (arg) and arr [idx])\n Make all your intermediates const if you're not planning to change them\n* Don't play fast and loose with integers - you have all kinds of problems with overflow and abuse of std::min\nThe code definitely doesn't work as intended, the std::min calls are effectively doing nothing.  The second argument is the sum of two uint8_t which will not be promoted, so they'll exhibit modulo maths and the result of the addition will always be less than 0xff.  You need to either make the intermediates larger (making them unsigned int is sensible, as it's going to be a type that's efficient to use), or explicitly cast one or both to something larger when adding.\nAlso, 0xff is an int literal while the sum of two uint8_t is a uint8_t so the overload of std::min is ambiguous.. GNU style - please make consistent with the rest of the code.. GNU style - please make consistent with the rest of the code.. GNU style - please make consistent with the rest of the code.. GNU style - please make consistent with the rest of the code.. GNU style - please make consistent with the rest of the code.. GNU style - please make consistent with the rest of the code.. GNU style - please make consistent with the rest of the code.. GNU style - please make consistent with the rest of the code.. Can you please move the local macros after you #include headers?  It's bad form to inject stuff into the global namespace before including headers, and it will make for strange behaviour with/without the precompiled emu.h prefix header if you've got any code in your translation unit before you #include emu.h. You've done this in a lot of files, but I have to ask why.  So, why do you make your macros require the double parentheses?  Why not do something like:\n```\ndefine LOGPRINT(...) do { if (VERBOSE) logerror(VA_ARGS); } while (0)\n```\nThis would allow it to be invoked with more natural syntax:\nLOGPRINT(\"format\", arg1, arg2);\n```\nThe double parentheses in the macro invocations look very strange and make the code harder to read.  It also allows weird injection of additional things into the macro, e.g. what would happen if you did something like this with the current code:\nLOGPRINT((\"boo!\"), some_call());. Please don't add more NAME macros to the codebase.  All identifiers with  in them are reserved.  Make the macro MAME_BUS_COCO_T4426_H or something.  Also, please move the #pragma once inside the conventional #include guards to help compilers that don't recognise this pragma.. Please line this else statement up properly while you're editing code in the area. Commented-out code needs an accompanying explanatory comment, otherwise no-one will know why it's commented out and not removed.. Can you please get rid of the extra GNU-style space?  It's inconsistent with the lines immediately above and below it.. Another issue with these is they behave as a single statement when disabled but as two statements when enabled.  This will make trouble with things like:\nif (foo)\n    LOG(something);\nIntuitively one would expect it to only log something if foo evaluates to true, but it will actually always log.  Also, consider this:\nif (foo)\n    LOG(something);\nelse\n    action();\nThis won't compile at all if the LOG macro is enabled.\nThis kind of behaviour is unintuitive.  Software should not be surprising, it should do what the developer and/or user expect.  I don't want to see these kinds of patterns spread further in the codebase.. This else still appears to be indented further than it should be - look at the braces above and below it.. After the change, the controlled statements have double indent from the containing block.. This name still contains a double underscore - that makes it reserved.  You can have a trailing single underscore, or remove the trailing underscores altogether.. The unintuitive behaviour of the LOG macro still hasn't been improved.. Please #include standard library headers after project headers, to protect against inadvertently getting into a situation where a header doesn't work if you don't #include something else first.. Same here - please move system headers after project headers.. Second parameter is a candidate to change to Boolean.. Oh dear, this kind of change will break the possibility of every localising this.  Can you do something more like:\nutil::stream_format(std::wcerr, L\"%1$s: Unknown filter type\\n\", value);\n\nI tested the stream format stuff with wchar_t when I was writing it, so it should work, but yell at me if it doesn't.  Same applies to all other examples of this.. As well as needing to use a format-style form to ever be localisable, assuming you can turn something into a plural is very bad.  It needs to be reworded to not make the assumption, or whatever yields the name needs to be changed to be able to produce a plural on demand.. Very interesting things are going to happen to alignment when characters are not bytes.  This may require a rethink of string_format to allow it to work in characters, and handle narrow/wide properly, but that's something for another time.. Does this do unexpected things if you redirect stdout to a file?  Like mame -oslog -verbose | tee output.log which I imagine we'd want to have in some ASCII superset encoding.. The 0x80-0x9f range in ISO-8859-1 is the C1 control block, which exists in the same space in Unicode - it isn't unmapped space.. You need to check for the result of uchar_from_utf8 being less than or equal to zero, i.e. invalid coding, and deal with it appropriately.. Why require the input to be in the form of a std::string?  Why not just pointer and size for a contiguous sequence of bytes?  Text may not be stored in a string, and you might not always want to convert an entire string.. Now that you have this thing, could you also change the code in src/frontend/mame/ui/filesel.cpp or wherever it is to use it instead of rolling its own?. Missing space after the while keyword?. Since you use this comparison functoid twice, why not make a static method rather than having a lambda in each place?. Extra parentheses around the type name are clutter - C++ has function-syntax cast for enums.. Same here, no need for extra parentheses. Please add defaulted copy and move constructors and assignment operators to this class so it can be used more efficiently in containers.. Should these be changed to something with more resolution, and should there be some kind of flag for \"not available\", and a flag for whether the source uses local or universal time?  We have other stuff that handles timestamps e.g. in the zip code, perhaps that's a place to look for inspiration?. Please don't use bitfields, they're trouble in the making.  They prevent taking references, etc.. \"Later\" is correct here. It should be \"the rest is a guess\" or \"the rest is guesswork\".  \"the rest is a guesswork\" is bad grammar.  Also, \"originall\" is a typo.. \"later\" is correct here. Please refrain from adding silly amounts of successive empty lines like this.. Please change this to use the form:\nosd_printf_info(\"%-20s %-16s %s\\n\", \"Source file:\", \"Name:\", \"Parent:\\n\");\nThis will allow people to just update the numbers next time, rather than counting spaces.. Please change this to be like:\nosd_printf_info(\"ROMs required for driver \\\"%s\\\".\\n\"\n                    \"%-32s %10s %s\\n\",\n                    drivlist.driver().name, \"Name\", \"Size\", \"Checksum\");\nOnce again, being able to just update matching numbers is better than having to count spaces. Is this actually safe?  Are there situations where 0 was a valid output?  If so, you need to use the next signed type up, i.e. make it int64_t, so it can hold any uint32_t and also the negative sentinel value.. Please change this to the form (once again to ease the job for the next person):\nosd_printf_info(\"%10s\", \"\");. For this, please use the form like:\nprintf(\"%-16s %-16s %-16s %s\\n\", \"SYSTEM\", \"SLOT NAME\", \"SLOT OPTIONS\", \"SLOT DEVICE\", \"NAME\");. This should also be done by generating the width you need programmatically:\nprintf(\"%s %s %s %s\\n\", std::string('-', 16).c_str(), std::string('-', 16).c_str(), std::string('-', 16).c_str(), std::string('-', 28).c_str());. Same for this:\nprintf(\"%-16s %-16s %-10s %s\\n\", \"SYSTEM\", \"MEDIA NAME\", \"(brief)\", \"IMAGE FILE EXTENSIONS SUPPORTED\");\n    printf(\"%s %s-%s %s\\n\", , std::string('-', 16).c_str(), std::string('-', 16).c_str(), std::string('-', 10).c_str(), std::string('-', 34).c_str());. Please move #includes of standard headers after #includes of project headers.. Please make this a variadic macro so it doesn't require extra parentheses around the arguments to logerror.  Look at src/emu/logmacro.h for an example.. Please explain commented code or remove it.. Please make K&R/Allman styles consistent within a file.. Once again, you've got a grating mix of Allman and K&R - please make it consistent.. Here you're using K&R brace style for a single-statement body where before you've omitted braces entirely.. More mixing of K&R and Allman within a single function.. Spacing isn't consistent with the rest of the file here - there's no space after the if in this function while there is everywhere else.. There's no reason to use auto here when you should know exactly what the type is.  Also, you can use std::fill rather than an explicit loop.. This should be scoped down somehow, it shouldn't be a global.  If it's something that doesn't change it should be const.  And a two-dimensional array should be initialised with two levels of braces, not just one.  Same applies for the other ones.\nAlso, if this represents the chip's internal ROM, it should probably be a device ROM.. Where does the magic frequency come from?  I'm pretty sure it's not generated internally.  You should either have a write line member for the clock input which the driver can attach to a clock device or something, or instantiate your own clock device with an MCFG fragment.. You should really use an array rather than a switch statement.. Whole-sale copying from the data sheet is copyright infringement.  Don't do it.. Identifiers containing two consecutive underscores are reserved.  Don't use them.. You shouldn't #include \"emu.h\" from headers.  It's a precompiled header and should only be #included as the first thing in a compilation unit.. Please make these take the _Object as a universal reference and forward it to allow for callbacks that are movable but not copyable.. These definitely shouldn't be public.  They should also be an array.. MACHINE_TYPE_* isn't supposed to be used this way.. And if you look at the commit history, it's slowly being removed.  Also, singly leading underscore is only reserved at global scope, so it's not such a problem for things like template parameters.. I know legacy code should be cleaned up.  That doesn't mean new code shouldn't be written properly.. Here's an example:\nhttps://github.com/mamedev/mame/blob/master/src/devices/video/dl1416.h#L45\nIt's a C++11 feature, so relatively few devices have been updated.  Lots of legacy code.. The kind of form we're encouraging is MAME_DEVICE_MACHINE_MM5740_H. Any reason this isn't const?. Could we get a space with the while for consistency?. Could you make the indentation here more obvious?  Also, const!  Like\nauto const iter = std::find_if(\n        targets.begin(),\n        targets.end(),\n        [argv, i] (const std::string &targ) { return targ == argv[i]; });. Why not use range-based construction and skip the loop?\n\nstd::vector<std::string> args(argv, argv + argc);.     auto const pos = std::advance(args.begin(), i);\nargs.erase(pos, std::advance(pos, 2));. This is what `IPT_MEMORY_RESET` is for.. These definitely shouldn't be I/O - medal in should probably be a coin or keyin, and payout should be `IPT_GAMBLE_KEYOUT` if it's an attendant keyswitch, or `IPT_GAMBLE_PAYOUT` if it's a player button.. `constexpr` implies inline - no need to repeat yourself. Grammar, man!  \"Thirty days *have* \u2026\" because more than one month.. Could you use a local `typedef` inside the function for this?  There's a lot of visual clutter.. `const`?. This should really, really be `const`. These should all be `constexpr`. Can you make the intermediates `const`?. you _know_ that since the first one is `int` the rest will be `int` - there's no need for `auto`. many things here can be `const` and many parentheses are unnecessary because function-style cast syntax. Changes like this are going to create diff churn at srcclean time.  Inside a comment, srcclean replaces tabs with spaced beyond the indentation level of the opening line of the coment, e.g. like this:\n\n```\n/\n    unindented comment\n/\n\\t/\n\\t    indented comment\n\\t/\n```\nIs it possible to adjust your settings to not mess with spacing inside comments?. Does this key not produce ^\\ (0x1C) with control held?. Does this key not generate ^] (0x1D) with control held?. If this key is for the the 1/4 and 1/2 fractions, you should use 0xbc and 0xbd as the PORT_CHAR codes, not artificially map it to something unrelated.. Is this for superscript 3 and 2?  If it is, the PORT_CHAR should be 0xb2 and 0xb3, not something unrelated.. Please use 0xb1 for this character, and whatever it should be for the shifted version of the key, not unrelated characters.. Making the assumption that the root device is the machine you want is pretty dangerous, especially as we're trying to move to the \"everything is a device\" model.  Are you sure you can't supply what you need through the slot interface somehow?. This is a dependency from src/devices on src/mame, isn't it?  We really need to eliminate these things.  Please try to find a way to access the necessary resources through your slot interface.. This very much doesn't belong in this class.  If you think it's really worthwhile, make a class that derives from device_nvram_interface to hold the memory_array and change devices that use it to derive from that.. This name is very confusing.  If you're going to keep this separate from the base device_nvram_interface it needs a better name.. This is likely less efficient when the source isn't a persistent std::string to begin with.. All the code in this module consistently places the const to the right of the type.. These macros really don't add any value - they just obfuscate the code.  Also, macros are a recipe for confusing errors.  If you really want a helper like this, use an inline function.. Please use the appropriate size integer type to represent these.. Please convert this to a device rather than a fragment and a state method.  Look at e.g. one of the Atari sound devices or the Zaccaria sound devices for an example of how to do it.  Having a single method of the driver state class in src/mame/audio doesn't help encapsulation and makes dependencies messier.  In situations like this, if audio/x.cpp to depend on includes/x.h you're doing it wrong.. Please don't use __names - they are reserved for the compiler/runtime according to the standard.  Make it match the path/filename: MAME_INCLUDES_VICDUAL_97271P_H. Is there a reason that this is public?  It's better to keep things encapsulated if possible.. Why is this declared here?  The device should be added to the parent machine/device in the normal way, there should be no need to directly use its machine configuration.. Please make a derived class for nsub and make these required_device. This should be static or inside an anonymous namespace.  There's no need for it to be exported.. Same comment as the audio header.. please use snake_case for member function names for consistency.. Please register device state for save here.. Please use a required_region_ptr member rather than doing a tagmap lookup here.. Please use std::fill over memset.. if these locals aren't supposed to be changed after being set, make them const.. You can initialise the array here using C++11 uniform initialisation syntax.. Please use the BIT helper for these kinds of tests.. If the key is labelled \"NEXT\" that should be preserved here.. Same here - the keycap label should be preserved.. Please convert the other constructor to use C++11 constructor delegation (i.e. define it in terms of this constructor) to avoid the possibility member initialiser lists getting out of sync.. This doesn't follow the spacing of the rest of the function - the rest of the file has space between the if keyword and opening parenthesis of the expression.. Same comment as the previous if applies to this and the rest of them.. This won't work properly - the device will still have the EF9345 type/name/shortname.  It should even fail the mame -valid checks.  You need to make the base class constructor pass this info through as well.. Pass-through constructors should be protected, not public.  Also, you need to pass through device type/name/shortname for it to work properly.. If this is a closed set of values it should be a C++11 scoped enum (enum class).. Please use enum or constexpr for numeric constants rather than preprocessor macros (constexpr variables may also be placed in an anonymous namespace).. Please make data members protected or private if they don't really need to be public.  Also, any overridden protected member functions should also be protected.. Please use the compile-time configurable logging feature from logmacro.h\u00a0for this kind of logging - using #ifdef allows the expressions to rot when not enabled since the compiler doesn't even look at them.. Please use a required_ioport_array for this rather than a tagmap lookup on read.. Please use PORT_NAME for the keycap label on these.. What's the physical layout of the keyboard on this machine?  If it's AZERTY, the A key should be mapped to KEYCODE_Q, Z should be mapped to KEYCODE_W, etc.. The spacing isn't even consistent within this line - there's a space after one comma but not after the other comma.. You're mixing octal literals 00 with decimal literals 512 and 266 - that's unintuttive.. If this is only set at construction and can't be changed, it shouldn't really be saved.  It can also be made const to prevent it from being changed after construction.  Sorry, didn't notice this before. . Why are these copyable while the slot_option isn't?  Is there a reason for the assymetry?. Why not return nullptr for no system?  Doesn't a sentinel make more sense than an empty string?. Why extract a base filename here?  If the person is giving a path or filename it should just give an error.. Why didn't you make this const?  It's a saved value that shouldn't be messed with.  Same for the next one below.. I don't think this is particularly safe.  The option allocates a core_options::entry and hands it off somewhere as a unique_ptr, keeping a naked pointer to it.  For proper safety it should hand off a shared_ptr and keep a weak_ptr.  The current code is an object lifecycle issue waiting to happen.. x.count(foo) can be substantially slower than x.find(foo) != x.end() if you don't care about the actual number of matches.. Is this really safe?  Would it be better to sidestep it by using abbreviated names like WARN and ERR instead?. This should derive from std::exception or one of its friends.  Also, using a condition type member goes against the philosophy of exceptions.  You should have a base options_exception and derived classes for the warning and error categories.. Please use std::min and const locals for these.. Same here, make the locals const and use std::min to avoid the need for the if statements.. Why force the format string to be const char *?  util::string_format allows lots of things as format strings (you don't even need to make it special, you can just forward everything).. I thought we agreed this should be a weak pointer since this isn't the owner of the entry.  Making it a shared pointer changes the actual ownership semantics.. Is it really safe to expose a non-const reference to the entries like this?  You can't enforce any kind of semantics on it.  Since it's an array of pointers, the entries themselves can still be modified with the const accessor on the next line.. I know it's trivial, but could you fix the grammar in the messages?  It should be \"2-byte opcode\" etc. rather than \"2 bytes opcode\" etc.  Also, could you please update the message in the illegal 1-byte opcode handler to make the length explicit?. Could you drop a vowel rather than a consonant, and also make the illegal 1-byte opcode handler use the same format for consistency?  It's easier to read.  Maybe call them illegl1, illegl2 and illegl3.. This should be const as well, just like the other one.. Can you please change these to use !args.empty() instead of the comparison?  It's more readable and looks less dangerous without parentheses with used with the ?: conditional operator.. Is throwing an error when no argument is supplied for -romident really the best choice?  Wouldn't a usage hint saying it wants an archive/folder as an argument be nicer?  For example, if you forget to give tar a file with the f option, it tries to help you out:\n% tar xf\ntar: Option f requires an argument\nUsage:\n  List:    tar -tf <archive-filename>\n  Extract: tar -xf <archive-filename>\n  Create:  tar -cf <archive-filename> [filenames...]\n  Help:    tar --help. You can't do this - the shell is responsible for trimming arguments.  If you do that here, the it will be impossible to, for example, romident a file called \"galaga\" dump.zip. Please attach in input changed callback on this so that flipping the switch while the emulation is running works.. Please don't #include \"emu.h\" from headers - it messes with stuff because of the way we use it as a precompiled prefix header.. Please don't use names beginning with an underscore followed by a capital letter.  Also please make these follow the pattern of taking a universal reference and forwarding it, to support callback objects that are movable but not copyable, and callback objects that are more efficient to move (see any of the hundreds of device headers I updated).  Same applies to the ones added in the other header.. Could you please at least make indentation consistent within a file?  the indentation of this constructor's initialisation list is different to the one for the class immediately above it.. This header is missing #include guards (the #ifndef ... #define ... #pragma once stuff).  Could you please add it?. spacing - everything else in this file has space between flow control keyword and opening paren. These two locals should be const.. you need to use hashes.begin(types) before the loop, hashes.buffer(buffer, actual_count) for each block, and hashes.end() after the loop completes.. Where's error handling for failure?  If the read fails, you'll spin forever getting zero back from read.. you should be using std::string::size_type - std::string::npos generally can't be represented by an int.. More locals that should be const?. Stray (void)?  This is a member function, it will never be valid in C (as opposed to C++), so the void isn't necessary to indicate it isn't a K&R function.. tabs after initial indent in a header - srcclean will cause churn. Should this clear out the hash collection is run_hash fails or something?. Still missing a space after the flow control keyword, in contrast to the if statement below it.\nAlso, casts are right-associative, so it should be (uint32_t)whatever (no space between right-associative operator and argument), or even uint32_t(whatever) (function-syntax cast).\nAnd while we're at it, this is in src/emu, so it should be using the abbreviates u8/s8/u16/s16/u32/s32/u64/s64 types for consistency with the rest of src/emu (same applied to the header).. src/emu is supposed to use the abbreviated types for consistence - that applies to headers as well as sources. Please #include your module header before other headers to avoid nastiness where headers require you to pre-include other headers.  Yes, I realise you copied from something that does the same thing, but that doesn't make it right ;). You should use constexpr rather than const for things that should always be evaluated at compile time.  Also, we encourage naming compile-time constants in ALL_CAPS for consistency.. Right now this only bails if no magic bytes match.  Don't you want || rather than &&?. Since you're doing this constant in multiple places, you should lift it out to the top of the source file, or make it a static constexpr protected class member.. Do you need to check for I/O failure?. Do you need to check for I/O failure?. Is there any reason these need to be inside this part of the loop?  You'll get an allocation/deallocation for each vector on each iteration of the inner loop this way.  Can you not declare them outside the loops?. Spacing is inconsistent - you do for (... above, but here you've done for(... (missing space).. You aren't checking for I/O failure.. This is the wrong way to implement this and will stop natural keyboard, UI paste, and lua keypost from working.  You need to supply the Unicode value of the character(s) with the PORT_CHAR macro.\nSee examples in the Sun Swedish keyboard and Amiga German keyboard input matrix definitions.. You should use the output system for this, not popmessage, and define an XML layout to display the keyboard LEDs on-screen.. Your Java/C# strikes again.  Ixnay on the new - you're throwing a pointer to an object that will leak, whereas you want to throw an instance of an object.. Same deal here.. You can't safely do this check at config complete time, you need to move it to start time.  The reason is that the auxiliary verbs instantiate devices inside an empty machine, and in that case the owner will be some kind of driver_device.  They have no way to know what kind of structure the devices expect around them, so they can't build the expected relationships.  So you can do the dynamic casts here, but you need to move the checks for null to interface_pre_start.. You'll need to check that m_owning_slot isn't null before doing this because you might be instantiated in an otherwise empty machine by an auxiliary verb.. Same as the other check, this should be moved to interface_pre_start or whatever it's called.. You don't need to supply PORT_NAME when the name is the same as what MAME will generate from the combination of PORT_CHAR that you supply.  Providing both adds risk of them getting out of sync.. Same for this one - the PORT_NAME is redundant and risks getting out-of-sync.. Likewise.. Can you please either use C++ line comments, or a single C block comment?  Doing it like this gets the worst of both worlds - hard to reformat, visual clutter at the beginning and end of each line, and stuff that needs to be realigned if lines change length.. Oh my god, local shadows type name.  No, just no.  Call it value or something else, this is a recipe for confusion.. If there's any chance your device could be subclassed, timer IDs should be in the header so derived classes have some chance of not using conflicting IDs.. Then make it a final class to prevent it or something.  The whole timer IDs thing is dangerous at the best of times.. Please use a named constant for the timer ID.  Conflicts are bad enough with names, let alone without.. Why is this now up against the left margin?. Please give this a more descriptive name - m_timer doesn't really say what it times.. Why is str passed by value here?  Wouldn't universal reference be better?. This could be expressed as assert(m_names.empty() == (m_type == option_type::HEADER)). Scope some of these down?  I'm pretty sure at least some of them are only required for some types.. This is just one example, but please use two levels of indent for statement continuation, so it's obviously different to a new scope level.\nif (foo)\n    {\n        // One additional indent for new level of scope\n        bar(\n                arg1, // two additional indents for statement continuation\n                arg2);\n    }. You should use device_timer_id for constants of that type rather than int - they aren't guaranteed to be the same.. Is there a reason all these members need to be public?  If not, it's better to make them protected/private.. You don't put MACHINE_TYPE_COMPUTER in the flags - that's implied by using the COMP macro.  Also, are these actual incomplete prototypes?  MACHINE_IS_INCOMPLETE is not for incomplete emulation, it's for emulation of a prototype that's considered incomplete.. You aren't checking failbit/badbit before using the result of this I/O operations.  That's bad form.  This also looks like an overly literal conversion of the C loop.  Try to make more idiomatic use of a std::istream.\n. This is inefficient - you've got both an iterator and an index into the string in play here.  You only need one.. Surely the boundary condition is wrong here - you want to check that end > start and i > start or you'll be pointlessly looping over stuff you determined to be blank in the first loop if the string contains only spaces.. This removes the cast from char to uint8_t before calling isspace.  This will cause a change in behaviour on platforms where char is signed (e.g. i386 and x86-64) when the top bit of c is set.. This doesn't change the double-scanning of strings containing only spaces at all - it just obfuscates it further.  If you want to do it like this, you need to remap the start to a reverse iterator rather than using str.rend() to not scan the same characters twice in that case.. The explicit check for good() here is pointless - checking the result of std::getline in bool context is sufficient for that.. Do you want to print a message to the console if you got an I/O error?  MAME just dancing past errors is annoying.. Why explicitly #include \"machine.h\" here?  It's very much part of emu.h.  Also, unit header (in this case ui/state.h) should be right after emu.h to help avoid weird issues where headers require you to #include other headers before them.. Can you drop the extra parens adding clutter?  This is C++ - char(a  - b + c) works just fine.. This anonymous namespace should really be inside the namespace ui to avoid weird dependent name lookup issues.. No using namespace at file scope - it's too dangerous.. Why does this care that it's an ostringstream in particular?. Same as above, shouldn't it be happy with any old ostream?. This isn't thread-safe since the working directory is per-process.  The web server and lua engine are on work threads, so they'll still get screwed up by this.. Please don't do this.  This comment is pure noise.  I can see what a destructor is.. This is another comment that adds no value, just clutter, additional work to update, and risk of getting out of sync with the actual code.. Same with this, and the rest of them.  This increases line count for no useful purpose.. Expecting a device to always have the same tag is dangerous.  Please don't encourage it by placing macros like this in device headers.. You don't need both of these.. This extra public: is unnecessary.. Another unnecessary public:. When calling a member function of your own class, you don't need to qualify it like this - you should be able to just call machine_reset() in all these cases.  It's less visual clutter.. Please initialise pointer members in the constructor.. This is probably a better application for the clock_device than a device timer.  Then you can connect its output to the 8251 TxC/RxC by chaining writeline callbacks in MCFG and avoid the extra code altogether.. If you're going to use this form of the timer, you should really use a named constant and check for it to make it a bit easier to play nice with device interfaces and derived classes.. This will cause a coverity warning about using bool in integer context.. If you're not going to be resizing this on-the-fly you should use std::unique_ptr<uint8_t []> or an array in the object.  Also, the member probably shouldn't be public.. Can you please move this up to be with the other private member function declarations?  Intermixing member functions and data members can get confusing.. These are both write line devcb, aren't they?  Remember C++ ?: operator can yield an lvalue - you can probably simplify this line slightly to:\n(m_index ? m_uart->m_out_wrdyb_cb : m_uart->m_out_wrdya_cb)(state);\nIt's not much simpler, but it only says state once.. Please place these utilities in an anonymous namespace to prevent symbol export.  Out-of-line instantiations of templates with the same names in different files cause very hard-to-debug issues.. Same for these templates - place them in an anonymous namespace to stop the being exported.. You shouldn't be doing tagmap lookups like this on-the-fly - use a required_memory_bank member to find it at start/validation time.. No, this is not how to do it.  You declare the member as:\nrequired_memory_bank m_rombank;\nAnd initialise it in the state class constructor with the tag to look up:\nm_rombank(*this, \"rombank\"). If you're doing a tagmap lookup here, errors can't be caught at validation time.. I don't think this is really correct - for other things in this layout there are separate BETn and BETnC elements.  I think the BET3 definition is actually missing.. There's a better way to deal with this, see 1eb3ffe15c89f616713b45c0eee837e293a9764c. Can you please use a required_ioport or optional_ioport state member for this?  Runtime tagmap lookups really hurt performance.. Just since I noticed it, can you nuke the trailing whitespace on this line so srcclean doesn't have to?. Why did you change the condition from cycles < 4 to cycles & 3 for this?  Is it absolutely guaranteed that cycles can never be a higher value, e.g. 6 or 7?. This file uses Allman style, please be consistent with it.. If this can't change it should be const.. This loop will never be entered in the non-Emscripten case because m_scheduler.time() < stoptime will never be true when stoptime is m_scheduler.time() + attotime::zero.  Also, if you want the loop to be entered at least once, should use do ... while ().. Should this really be here, not protected or something?  Also, default argument values are a source of problems.  The name is also confusing, as it runs one or more scheduler timeslices, not really a \"frame\" by any definition.. Since you're really just adding read/write memory to the map, is there any reason you can't use:\nm_ppu->space(AS_PROGRAM).install_ram(0x2000, 0x3eff, m_ntram.get());\nIt's a bit clearer than all the delegate construction, it's a bit more efficient since there's no trampoline, and you can remove the nt_r and nt_w trampolines... Is it necessary for this to be a free function?  It seems like more of a case for a static member function of the running_machine.. It's safer to override driver_start than device_start in a driver_device implementation.. Why the stray semicolon?  Closing a namespace doesn't need a semicolon.. Out-of-line implementations need to be in the namespace of their class.  This needs to be inside the anonymous namespace.\nThis is partly why I frown on indenting for namespaces - you end up having to indent the entire file.  It's better to just try to keep at least the bulk of a file in a single namespace, so you know it's going to be opened near the top and closed near the bottom.. This is not consistent with the one above.  Above you've got cond ? 0 : n while here you've got (cond ? 1 : 0) << 4.  Make both of them use 0/1 and a shift, or make neither of them use a shift. . If you look at this template, it uses unsigned everywhere.  Using %d with that is going to do weird casting, and you probably shouldn't be trying to stuff signed numbers through it unless you're using %+d to force the sign anyway.. This is not a constant configuration value, but it isn't saved.  Fix it or remove the flag indicating save state support.  Same with m_pr_counter (which incidentally isn't being initialised here - under what circumstances is it valid?).. Why not put the address maps etc. inside the anonymous namespace so you can ditch the static keyword everywhere?. ALLOW_SAVE_TYPE. How do you plan to support save states with this variable-size thing?. Is the empty section important for something?. Any reason these aren't const-qualified?  e.g.\nbool cfg_promiscuous_mode() const { return ...; }. Do these constants really need to be at global scope, and do they really have to be `#define` macros?  These things tend to cause annoying compile errors when you get collisions.. These and others like them should be `const char *const whatever[]` or the pointers are not constant, only the characters they point to.. You really mustn't define anything before including the PCH, and it's a bad idea to make your header depend on defining stuff because it'll look different from the PoV of users.. No, the empty `private:` section - not the empty space for alignment.  I know what the space is for.. `const`-qualified methods can't modify the object without jumping through extra hoops, and you can call them with a `const` object reference.  It's useful if you want to ensure that you can't accidentally modify an object in a member function that should be a pure getter.\nclass A\n{\npublic:\n    A(int x) : m_x(x) { }\n    int get_x() const { return m_x; }\n    void set_x(int x) { m_x = x; }\nprivate:\n    int m_x;\n};\nconst A o(5);\nstd::cout << o.get_x(); // OK to call const-qualified member with const object\no.set_x(7); // compile error - can't call non-const member with const object\nA p(6);\nstd::cout << p.get_x(); // OK to call const-qualified member with non-const object\np.set_x(8); // OK to call non-const member with const object\nclass B\n{\npublic:\n    void set_a(int a) const { m_a = a; } // compile error - can't assign to member in const context\nprivate:\n    int m_a;\n}\n```\nconstexpr is a slightly different beast used for things that should be possible to evaluate at compile time, that operate on literal types only.  Maybe that's what you were thinking of.. Please don't put the tag() in the message - logerror always prefixes lines with the device tag anyway.. Please don't hard-code tags at parent or root level.  Provide a macro to configure it.  It creates confusing errors when working on drivers when things do this.. Since this reads/writes external space, it's probably better to make the device inherit device_memory_interface and let the driver configure a map rather than hard-coding it as trampolines that read/write a share.. This doesn't match the file name - there's another underscore in the filename.. These kinds of members really shouldn't be public - it encourages hacks that poke internal stuff directly.. There's no reason to make the overridden protected method public.. You should include this after your module header, to ensure the module header works with just emu.h - headers that require other headers to be included ahead of them (besides the PCH) are annoying.. trouble with putting this inside #if is it can still rot if people make changes and compile without logging enabled.  That's the reason for the log macros being how they are - they at least check that the expressions compile even when logging is disabled.  Same with the other stuff in #if blocks.. Assuming these are for internal things, these should be in the source file, not the header.. The rest of this file is Allman-style, please be consistent with that.. Please declare this in the for statement to make its scope obvious.. Please declare this at the point of initialisation and make it const to make it clear it isn't supposed to persist across loop iterations.. Please use uppercase size/signedness qualifiers - it avoid potential confusion between 101 and 10l (10L is more visually distinct).. If these pointers aren't supposed to change in the loop they should be const themselves (e.g. uint8_t const *const map = ... or const uint8_t *const map = ... with another const after the * to make the pointer itself const.. This is what the BIT helper should be used for.. Note that just above this, there's a parameter declared as uint8_t *data - please follow that style (it's closer to how the C++ parser handles it too, as the unary * here is right-associative).. Yeah, 0x14U if you want explicit unsigned.  I tend to use explicit suffixes for unsigned and long a lot, too.  It's just good to get into a habit of using uppercase long/unsigned suffixes to ensure a lowercase l can't be confused with digit 1.. No, it's trying to slowly increase the quality of the code.  It's a lot easier to write new and updated code at a higher standard than to change all the existing code at once.\nAlso, your estimate is way too low.  You're missing all the device_t *const, game_driver const *const, util::xml::data_node *const, const char *const in the core (src/emu directory).. The * is unary and binds to the thing on it right.  Consider this:\nchar* a, b;\nThis is misleading - the * doesn't bind to char, it binds to a.  It's equivalent to:\nchar *a;\nchar b;\nThis is less misleading and closer to what the parser does, because the * is next to what it binds to:\nchar *a, b;. Since these are static and it's a single driver, there's no need for the tautology in the names - slave_map and sound_map were fine.. please be consistent with case in hex numbers - you've put uppercase hex in the same lines as lowercase hex.. There's really no need for this churn.. Does the header actually use these devices?  If not, including them here slows down the parse and makes dependencies more convoluted.  Don't unnecessarily include things.. Please use snake_case consistently - not a weird mix of snake_case and LlamaCase.. What's the point of this variable?  It's set but never used.. MCFG_CPU_REPLACE. You should be able to use an input_merger_device in place of this glue and define it all in machine config.  The members would be unnecessary.. Is it worth replacing 7 here with a data members specifying a mask and possibly xor?  Then the bit connected to the D line could be configured with an MCFG macro.. Could you please define these trivial read members inline at point of declaration?  It will allow them to be flattened in places where they're called from a larger function (obviously does nothing for the case where something binds to the address of the member function).. Could you please move the pragma inside the preprocessor guards?\nThe reasoning is that compilers that don't support the pragma can often detect the preprocessor guards and elide redundant parses but only if they're the first non-whitespace/comment tokens in the file.  Putting the pragma outside breaks this optimisation.  Compilers that support the pragma shouldn't care where it appears in the file.. Can you please make bit a template parameter?  This allows for compile warnings on out-of-range values, and the bits should be known at compile time when this is used in machine config.\nAlso, use a universal reference for the callback and forward it.\ne.g.\ntemplate <unsigned Bit, class Object> static devcb_base &set_q_out_cb(device_t &device, Object &&cb) { return downcast<addressable_latch_device &>(device).m_q_out_cb[Bit].set_callback(std::forward<Object>(cb)); }. This is probably better handled with a bool const m_is_cmos data member initialised at construction - it's going to be faster than a virtual dispatch for something like this, and it's something that can be called in the hot path.. Is this actually edge-sensitive?  If not, the YM devices possibly need a proper WRITE_LINE for the input so things can hold them in reset.  That's not necessarily something for this PR though.. This trampoline constructor should be protected.. This should really come after the other includes, to help avoid module headers coming to depend on things being included before them.. Is there really no way to put this stuff back inside the audio device and expose it with write line members or something?. Likewise, is there no way to put this inside the .cpp file for the audio?  I've been trying to get this stuff out of the headers.. If you're renaming it anyway, could you make it use snake_case like everything else?. This really looks like a case for at splitting up the all-in-one driver state into a family of derived classes, or making devices for each of the audio variants providing a consistent API.  This just looks gross.. the trouble is we use capitalisation to mean other things in code - snake_case for classes/variables/functions, UPPER_CASE for constants/macros, LlamaCase for template parameters.  Schematics for the most part use all uppercase, so you don't really lose anything by transforming to follow the convention in code.. This member should be const - it shouldn't ever get changed after construction since it's an inherent part of the device.. Do we have missb2 schematics?  I'm sorry if we do.  I was more irritated about the missb2_ on the name of a static address map in a file called missb2.cpp - there's no need to put a prefix to avoid collisions when it's static, and it's obvious it's for missb2 given the name of the file.. Can you please put this in the skeleton project for now?  We already have a plethora of single-driver projects.. Can you please make overrides of protected member function protected, and make data members protected or private?  We're trying to encourage good habits.. If you're defining a macro for the screen tag above, you should probably use it when constructing the device finder here.. We already have a setup for doing monochrome with hilight, see e.g. osborne1.cpp for a example.  The phosphor colour is an attribute of the screen, and a monochrome palette is used.\nMCFG_SCREEN_ADD_MONOCHROME(\"screen\", RASTER, rgb_t::green())\n    MCFG_SCREEN_UPDATE_DRIVER(osborne1_state, screen_update)\n    MCFG_SCREEN_RAW_PARAMS( MAIN_CLOCK, 1024, 0, 104*8, 260, 0, 24*10 )\n    MCFG_SCREEN_PALETTE(\"palette\")\n    MCFG_GFXDECODE_ADD(\"gfxdecode\", \"palette\", osborne1)\n    MCFG_PALETTE_ADD_MONOCHROME_HIGHLIGHT(\"palette\"). Can you please change this to an explicit reinterpret_cast rather than a C-style cast?  It makes it easier to grep for various kinds of pointer (ab)use.\nAlso, having imgtool::charconverter and local charconverter in the same line is a bit of a red flag.  Want to change the name of the local to converter or something to make it a bit clearer?\nAnd you might want to make it imgtool::charconverter *const since you're only making one attempt to find one, so the thing shouldn't be changed afterwards.. Since we have utf8proc, should you be using it here?. This is for appending to a list.  If you don't put space/punctuation, you'll end up with text like:\nCaracter\u00edsticas completamente n\u00e3o emuladasdiscoREDEWAN. This introduces a list, hence the colon/space after it.  If you don't have space/appropriate punctuation you'll end up with:\nCaracter\u00edsticas completamente n\u00e3o emuladasREDE\nNote lack of space.. This introduces a list, hence the colon/space after it. If you don't have space/appropriate punctuation you'll end up with:\nCaracter\u00edsticas emuladas imperfeitamentedisco\nNote lack of space turning two words into one.. It's important to carry over the final \\n in these.  Could you please update any where it's missing?. Could you please replace these printf statements with one of the MAME-provided things?  You have a choice of:\n Configurable logging from logmacro.h (preferred)\n Direct calls to logerror\n* osd_printf_verbose etc. (least preferred as it doesn't automatically provide device context and isn't configurable). This one still snuck through.. How about adding boilerplate to make this movable so performance when resizing a vector can be improved?. Why are you removing the blank line between PCH/module header and device headers?. The two blank lines between logical sections (in this case includes and type definitions) is a useful visual guide.  It's not like it's half a dozen blank lines in a row.. Could this be done better by overriding driver_reset() and calling base class methods where appropriate?  It's generally better to split state classes up than to add messy speicalised MACHINE_RESET_MEMBER etc. that call each other.. If these aren't used in the header itself, they shouldn't be included from the header - it slows down parse and makes compilation slower.  I've been trying to cut down on this.. Is this really unknown?  If so what's the reasoning for hooking it up to the other CPU's reset line?  Is there an actual issue this solves?. Uppercase hex is still inconsistent with the rest of the file.. You can definitely do this with an input merger and cascaded devcb.  Please think about it and do it properly.. Please don't jam stuff up against binary and ternary operator, it just makes it hard to read when there's no space like this.. It's better to put the AM_MIRROR directive with the AM_RANGE as it affects the addresses mapped.. You're right, I somehow missed it in between other stuff.  Gah.. Nope, anything that requires mame/ui to know anything about the OSD layout is completely unacceptable.  You'll need a cleaner way than this.. Does capitalised \"Internet\" imply connection to public Internet?  If so it shouldn't be here.  WAN adapters (ISDN, modem, etc.) are just as likely to connect to a proprietary network.  LAN adapters (e.g. Ethernet) may also be used to connect to public Internet.. Adding \"menos ESC\" to this string is misleading.  Firstly, UI Cancel can be remapped, so assuming it's mapped to the escape key is not acceptable.  Secondly, this string is used in the missing software popup which can be dismissed with the UI Cancel key (escape by default), so it isn't even correct with default mappings.. Are trademarks not capitalised in Spanish?  Laserdisc is a trademark, and hence treated as a proper noun and capitalised in Germanic languages.  (Honest question, I don't know how it's handled in Spanish.). Please don't add \"menos ESC\" here either.. The strings in this section are from a previous version of MAME and no longer used (note that they're all preceded by # characters) - they're provided as reference to possibly help maintain terminology when translating updated strings.  There's no point modifying translations in this section.  You should remove this section after updating the translation.. I'm not sure we want to accept core code under a different license.  The intention is to make src/lib/util and src/osd entirely BSD-licensed to facilitate reuse by other emulators.. this should really have the path in it as well as the name to avoid conflicts.. You're missing the tab, text for right column, and newline.. As above, this isn't going to work right without something for the right-hand column and the final newline.. Trailing newline is important. Same here, it will screw up the general info box if the final newline isn't present.. This won't work properly.  The required format specifier doesn't depend on whether you're using MSVC or not, it's more complex than that.  The msys64 runtime also uses I64 as the size qualifier for long long integers for example.  But that aside, logerror and friends don't need size qualifiers for integer formatting, so there's no need for it.  Please stop adding this to things that don't absolutely need it.. You should be able to avoid the loop with configure_entrees.  Also consider that you always apply a shift when setting the bank for m_unpaged - you can avoid that as well by taking it into consideration when configuring banks.  Try something like this for configuring banks:\nm_unpaged->configure_entry(0, 0x100, &m_mainrom[0], 0x8000]);\nm_page0->configure_entries(0, 0x200, &m_mainrom[0x400], 0x4000]);\nm_page1->configure_entries(0, 0x200, &m_mainrom[0], 0x4000]);\nm_page2->configure_entries(0, 0x200, &m_mainrom[0], 0x4000]);\nThen you can simplify the line for setting the m_unpaged bank to get rid of the shift:\nm_unpaged->set_entry(m_bankbase);. Please don't place superfluous semicolons after the closing brace of a namespace.. While you're changing this - please make these const or constexpr.  Variable character arrays like this are a liability.. Why is this even here?  It's just going to cause confusion.  You can always call some_device_interface.device().tag() anyway - you don't need a dynamic_cast like this in the first place.. This whole function doesn't work right in edge cases.  You're only checking the long instance name for conflicts, not the brief instance name.  So you can end up with a situation where, for example, one device wants promchip/prom and another wants promimage/prom and you won't see it as a conflict so two devices end getting assigned -prom as their short option name.  You need to do it in a way that catches conflict groups on long or short name and renumbers accordingly.  It may require multiple passes.. What?  There's no validity check to ensure that all device_image_interface that have the same custom brief name have the same custom long name.  But anyway, supposed it encountered device_image_interface with these requested brief/long names in this order, this is how I'd expect them to be assigned:\n prom/promimage -> prom1/promimage1\n flop/floppydisk -> flop1/floppydisk1\n prom/promchip -> prom2/promchip2\n rom/promimage -> rom3/promimage3\n* flop/floppy -> flop2/floppydisk2\nA device_image_interface should get the same number on both its brief and long names, and getting a clash on either should put the device in the same numbering sequence.  Right now you're not checking the brief name at all.\nThis is not orthogonal to the options overhaul.  You were supposedly trying to make the options system more solid and future-proof.  This was the chance to fix this stuff properly, not maintain questionable design decisions.  I know it's been pointed out to you by both @galibert and me that the numbering shouldn't be done by device_image_interface itself.\nAnd for an example of the same brief name not causing a validation error:\n```\n% grep 'custom_' src/mame/machine/imm6_76.h src/devices/bus/intellec4/prommemory.h\nsrc/mame/machine/imm6_76.h: virtual char const custom_instance_name()                  const override { return \"promimage\"; }\nsrc/mame/machine/imm6_76.h: virtual char const custom_brief_instance_name()            const override { return \"prom\"; }\nsrc/devices/bus/intellec4/prommemory.h: virtual char const custom_instance_name()          const override { return \"promimage\"; }\nsrc/devices/bus/intellec4/prommemory.h: virtual char const custom_brief_instance_name()    const override { return \"prom\"; }\n% ./mame64 -listmedia intlc440\nSYSTEM           MEDIA NAME       (brief)    IMAGE FILE EXTENSIONS SUPPORTED\n\nintlc440         promimage1       (prom1)    .rom  .bin\n                 punchtape        (ptap)     .bnpf .hex  .lst  .txt\n                 promimage2       (prom2)    .rom  .bin\n```\nTwo devices both request the same brief and long instance names (prom/promimage).  It happens to \"work\" right now because the long names are the same.  However there's no way to guarantee that developers will always specify the same long instance names with the same short instance names across all devices in MAME.  You could swap the imm6_26_device for a slot device which had a different long instance name but still wanted prom as its brief instance name and bad things would happen as the clash wouldn't be detected.. MAME's parent/clone distinction is rather arbitrary, and \"original\" would be a poor choice of word.  The parent is generally the newest version for the most widespread release region.  In many cases, this is not the original - it's often an English translation for general distribution in Europe or Asia, or for US-developed games (e.g. from Midway) a bug-fixed release distributed as a ROM update to operators.. OK, the current text is probably not correct, but \"INI files lacking category were found\" doesn't mean the right thing.  It's saying that no INI files were found, specifically INI files that contain categories, not that it found INI files but they contain no categories.. It's the name of a web site - it can load scores scraped from this site: http://replay.marpirc.net/. Not necessarily - we don't necessarily translate proper nouns, and this is the name of a high score list.. Oh no you don't - suggesting Google translations is a bannable offence :P. Does \"machine 40 of 50\" really translate to Portuguese as \"m\u00e1quina 40 of 50\" or is that an oversight?  (I would've thought it would be \"40 de 50\", but I can't actually speak Portuguese.). Could you please add this to the skeleton target or something else where it kind of fits rather than adding another single-driver project?  We have too many of these as it is.. Could you please be consistent with K&R vs Allman style within a file?  This function is using K&R style (opening/closing brace on same line as control statement) while nt7534_device::update_nibble and nt7534_device::device_timer are using Allman style (opening/closing brace on separate line).. Oh dear, a mix of Allman and K&R within a single function ;)\nAlso, inconsistent case in hex constants - could you please consistently use upper- or lower-case hex within the file?  (Either 0xCAFE or 0xcafe style, not a mix within a single source file).. Please don't litter potentially packaged directories with git metafiles.  Add a line to the top-level .gitignore file to suppress messages for this directory.. Does this change work on *NIX (e.g. Linux) as well as Windows?  I'm kinda cagey about this kind of thing, the copy rule is not very safe due to having to hack around potentially not having cp on Windows.  Does it work if you remove the slash rather than adding the dot?. I know using Google Translate is a bad idea, but I can't speak Turkish at all so I used it to check that translating back to English gives a somewhat similar result.  Given the output from Google Translate, I'm not sure if this one is right: this message is used if the user tries to save a file with the same name as an existing folder/directory (it isn't really worded very well in English, something like \"Cannot replace directory with file\" or something could be clearer).  I'd just like confirmation that the Turkish translation is appropriate for the situation.. Can you use required_device_array<hp80_optrom_slot_device, 6> instead here?  The initialisation will look prettier then: m_rom_drawers(*this, \"drawer%u\", 1) (parameters are device, tag format, and starting number for the %u in the tag format).. This doesn't really look like best practice to me.  It would be better to supply an address space to the slot devices, and allow the cards to install handlers into the address space.  Use the stuff in bankdev.h to access the window into the address space.  See e.g. src/devices/bus/isa or src/devices/bus/intellec4 for examples of cards that install themselves into address spaces provided by the host.. Consistency - this one has no space after, the others do.. Please use a template for this to reduce copy-paste, i.e. in the header at declaration point:\ntemplate <unsigned N> DECLARE_WRITE_LINE_MEMBER(irq) { irq_encoder(N, state); }\nThen you can get each of them as cgc7900_state::irq<0x0>, cgc7900_state::irq<0x1>, ..., cgc7900_state::irq<0xf> and not need 16 of the things here.. While you're changing this file, could you change the #include guard to follow the convention avoiding reserved __NAMES?  It should be MAME_INCLUDES_CGC7900_H.. Is there any reason you've only made this stuff private and not a whole lot of other stuff as well?  There's no reason for all the device members to be public.. Could you make this doxy comment a bit more useful?\nThe @brief description just \"verbises\" the function name - if you don't know what it does, this isn't going to help.\nFor the @return entry, firstly it returns a reference to a std::string, secondly the comment should not just repeat what one can see in the declaration, and thirdly it should hint at the significance of the returned string reference.. If you're trying to cut down on temporaries, why not move the function object as well?. Constructor delegation - use it.. Why the extra std::string?  It will try to coerce the first parameter to std::string anyway when it tries to construct the pair.  Also, why even use this two-step process?  You always want to add/replace an entry if one doesn't exist, and std::unique_ptr is both default constructable and move assignable, so you save a hash lookup and potentially an allocation if you do it with a single statement:\nm_symlist[symentry->name()] = std::move(symentry);. As before, why only move strings?. This can't be flattened if it's not templated on the mutator type.. Inconsistent spacing.. This is horribly inefficient - you're doing moves all over the place.  You're better off operating on ranges.  Start with an empty transformed string, when you get a character that needs transforming, copy the entire range from start to the changing character, then append the changed character, etc.  If you want to get fancy, you can also copy ranges only at points where the size of the UTF-8 sequence changes.. Is \"controleer\" the best translation here, or would \"verifi\u00ebren\" be better?. Why the inconsistent translation on this string?  You've used \"Beeld\" elsewhere, here you've carried across the English \"Graphics\".. Since ioport.h is in included by emu.h and natkeyboard.h isn't, why not just change the definition in natkeyboard.h to use the UCHAR_SHIFT_ macros and avoid the static_assert here?  That wouldn't introduce an extra implementation dependency in emu.h and would marginally simplify things.. This really shouldn't be public - nothing else should be depending on it.  Also, you can define SHIFT_COUNT here in terms of the UCHAR_SHIFT_ macros given you know you'll have emu.h before natkeyboard.h due to the PCH nonsense.. This shouldn't be using natkeyboard.h - that's an implementation detail.  The message could be better, something like \"Field '%s' has non-character U+%04X in PORT_CHAR %d\\n\".. This one doesn't really need to be de-charified, it doesn't cause signed char to wrap and get extended. ;). It might be a good idea to map the alternate functions of the number row to the F-keys in natural keyboard mode.  Probably better than making them all respond to multiplication sign.. We generally use lowercase ROM names, just to simplify things for people with case-sensitive filesystems.  The files will be recognised by CRC inside a zip or 7z archive anyway.. Could you please clean up the indentation?  There's a mixture of spaces and tabs here.  The standard for MAME is to use tabs for indentation, MAME code is generally written to be viewed at four spaces per tab.  Some of the changes the srcclean program makes assume four spaces per tab as well.. C++ does not need the backslash preprocessor line continuation directive in cases like this - it interprets the lack of a semicolon as an indication that the expression will continue on the next line.  Could you please not use unnecessary backslash line continuation directives like this?. You've already #included this in your module header - no need to duplicate it here.. Is there any reason that this data member needs to be public?  Generally data members should be protected or private if possible.. could you please use the magic nullptr rather than the macro NULL as a generic null pointer value?  Also, there's no reason to override device_rom_region if the card has no fixed ROMs.. Was removing the colon here in the translation intentional?  (It's an honest question, I don't know how punctuation works in Turkish.). Here \"Sound: None\" is translated as \"Ses: Yok\", however previously \"None\" is translated as \"Hi\u00e7biri\".  In both cases it's used in the same context (one is used in the default UI, the other with -ui simple).  Is there a reason the translations need to be different?. This is used as a heading in a list file where the first column is padded to a fixed width with spaces.  Could you please add spaces so the column width matches in the translation?  It needs two more spaces.. There seems to be a stray character added to the beginning of this line.  Could you please correct it?. I was referring to all the required_device and required_shared_ptr stuff above, and the overrides of protected member functions.  I realise the keyboard put callback needs to be public.  I know it was like that already, but it's nice to do \"drive-by cleanup\" when doing stuff like this.. This still takes a temporary function by value and then copies it.. Corresponding definition copying the temporary.. What do you mean by \"seems not to like\" in this case?  It clearly works with rvalue references in many other cases.  Why does it object to this one?. Can you please not use auto like this?\n You definitely know what the type of object you want a reference to is\n The name is not excessively long or deeply qualified\n The type is not dependent of template arguments\n It is not an iterator or proxy to the actual object\nUsing auto here just makes the code less approachable.. Oh no, this is a deal-breaker.  No non-const function statics.  It breaks save state support and systems with multiple instances of the same device.. This file appears to be mostly K&R style - please follow that with additions.. More Allman creeping into a K&R file.... Another place auto type isn't helpful. More inappropriate auto. Shouldn't the new members be registered for save state?. On the real machine, how does it implement the mode switch?  Does it change the pixel clock?  If so, does the line frequency change?  Or does it really just change the timing of horizontal blanking?. In that case, shouldn't it be calling configure as it was previously and updating timings?  Just changing visible area would only be correct if it's only changing blanking period.  Or do the ratios somehow work out so the line frequency is identical?. There's corresponding item in the header as well.. This should really use -print0 and xargs -0 to avoid potential problems with spaces.  Also you can use -or to do this with a single command.  It's probably better to make a separate rule for mame.pot since it isn't actually a phony target, and have the translation rule depend on that.  I might do it myself at some point.. Since we're using C++ here, could you please use C++-style declaration of structres?  i.e. struct name { ... }; declares a structure type in C++, not just a struct tag.  Also, names ending with _t are reserved at global scope according to POSIX - I realise MAME already violates this in a few places, but no need to add to it.. Same for this - _t names are reserved at global scope.. Rather than putting static everywhere, could you please group things that don't need symbols exported in an anonymous namespace?  It reduces clutter.. This needs the leading space because it's concatenated with a name. The word \"cheatpath\" shouldn't be translated as it's the name of an option that appears in mame.ini or on the command line.  Please translate this string leaving the word \"cheatpath\" as-is.. Are you sure the literal translation is actually better here?  \"Desligada\" seems to convey the sense of what it's saying.. This makes terminology inconsistent - \"machines\" in the sense of emulated systems is being translated as \"m\u00e1quinas\" elsewhere.. I'm pretty sure the previous translation is better here - this is for selecting a mode where MAME runs windowed, not selecting the mode of a window.. cheat.simple is a file name, and shouldn't be translated - the file name doesn't change with language. Same here, the filename shouldn't be translated. \"cheatpath\" is the name of an options that appears on the command line and in ini files, and hence shouldn't be translated. It's part of the info box in the system selection UI - you can configure it to automatically audit ROMs/sound samples.  Depending on whether you have it enabled or disabled and whether it passes or fails, it will show one of:\n Roms Audit Pass - OK\n Roms Audit Pass - BAD\n* Roms Audit Pass - Disabled\nAnd likewise for samples.\nThe English is already poorly worded.  The word \"pass\" refers to passing over the ROMs/samples when auditing, not that the audit passed.  Also, adding \"Passou\" to the translation for the case where the automatic audit is disabled without also adding it for the OK/BAD cases doesn't make sense to me.. Is there a reason not to use required_ioport_array for this?. Does Russian use transliterated \"\u0434\u0411\" for \"decibels\", but untransliterated \"fps\" for \"frames per second\"?. There is a missing quote at the beginning of this line - that will break things.. Should these logerror all be enabled by default, or would it be better to use logmacro.h and the LOG macro to allow them to be enabled/disabled easily?. This string is missing the final \\n which will mess up formatting - could you please add it?. This appears to be a copy/paste error from the previous string.. Using \"Original\" as a translation for MAME's concept of a \"Parent\" set is misleading.  The parent/clone distinction is somewhat arbitrary.  The parent set is generally the most recent version of the English-language release with most widespread distribution.  In many cases this is not the original version.  For example, the original version of Capcom's fighting games would be the Japanese releases, but the English world releases are the parent sets in MAME.  Can you think of a term that doesn't imply the parent set is the original version?. Is there a reason for not capitalising the first character of temporiza\u00e7\u00e3o in this string vs the one above?. Is there a reason for not capitalising this image category title?. This needs the leading space. You appear to have accidentally changed the key rather than the translation here.. Freeze is today, but I'll cherry-pick translation updates before release if necessary.. You need to guard the read side effect with if (!machine().side_effect_disabled()). What about the second side-effect here?. Overridden protected member should be protected, and if m_maincpu needs to be public, you probably have design issues.. There's no need to use static here:\n constexpr implies inline, which suppresses symbol export already\n It's in an anonymous namespace which suppresses symbol export. This will behave strangely if the size of T is larger than unsigned due to BIT_MASK always returning unsigned.. Qualifying these these static adds clutter:\n constexpr integers at global scope imply static (ODR only applies at compilation unit level)\n You could just put them in the anonymous namespace anyway to save the clutter of the keyword on every line.. This pattern for avoiding mutual recursion is usually a symptom of a less-than-ideal design.  Is there a way to rethink the bus to avoid the need to use this pattern?\n(Also, for this to be exception-safe, you need to use a local object destructor or a catch-all block to ensure m_updating will be cleared.  Doing it this way can lead to a stuck flag.). Read/write members used from your own MACHINE_CONFIG_MEMBER functions shouldn't really be public if the signals aren't exposed outside the device itself (stuff used in address maps still needs to be public because of how address maps are implemented).. Same comment about static as with the other file. Same comment about what will happen if these are used with T larger than unsigned. Why keep the known bad dump here?  We have source control for finding changes.  Is the bad dump useful for anything?. This should be m_sysram[offset % ARRAY_LENGTH(m_sysram)] .... Please preserve the word \"cheatpath\" literally as it's the name of an option that appears on the command line and/or in INI files.. MAME source is supposed to use tabs for indentation (one tab per scope level), and it's generally supposed to be viewed at 4 spaces per tab (mentioned both here in the source, and here on our wiki).  You've got a mixture of spaces and tabs for indentation here, and where you've used spaces, you're assuming tabs are eight spaces.  Could you please clean this up?. Please think about protection levels - overridden protected members should be protected, internal things should be private.. Please use a required_region_ptr for this so some classes of error can be caught when running -validate rather than causing null pointer errors when running (see e.g. src/mame/drivers/alphatro.cpp for an example).. You're using bool in integer context in the expression in parentheses here.  Also, you've created a three-entry palette, but this will only ever access two entries.  Is there a reason for the third entry?. Seriously?  The logerror output will be in text mode, so a line should be ended with \"\\n\", not \"\\r\\n\" - line endings will be translated as necessary.  This applies to all the other added logging, too.. This is inconsistent with the spacing above - you've got a space between the control keyword and opening parenthesis of the expression with if (LOG_ETHERNET) but no space between the control keyword and the parenthesis with for(i=0;...\nAlso, jamming all the tokens together without spaces like this doesn't promote readability and is inconsistent with the assignments above where there are spaces around the operators.. The double blank line here was to give a bigger visual break between classes than between methods.  Why remove it?. Please use std::fill(std::begin(x), std::end(x), val) for filling arrays - it will cause an error if the array is replaced with a pointer or something rather than just silently doing the wrong thing.. logerror is based on util::stream_format - it can handle std::string fine without .c_str() to extract a C string pointer.  Please don't add these in.. Once again, please don't use .c_str() with logerror - it's not unnecessary clutter and shouldn't be encouraged.. For things like this, it's probably less error-prone to define whatever your output function is to behave more like logerror than to adjust all call sites to work with your output function.  For example src/emu/logmacro.h allows logging to be sent to an a std::ostream using the same semantics.  It's possible to use util::stream_format with an intermediate std::ostringstream or util::ovectorstream to do the formatting and then send that unformatted to some other output sink, too.. This opcode handler assigns into m_global_regs directly rather than using set_global_register - is that intentional or an oversight?. There's no call to check_delay_PC here - the similar addc handler does have such a call. Is this intentional or an oversight?. There's no call to check_delay_PC here - the similar negs handler does have such a call. Is this intentional or an oversight?. There's no call to check_delay_PC here - the similar negs handler does have such a call. Is this intentional or an oversight?. It should be possible to eliminate the sign-extended 64-bit value, since the only possible value that can cause overflow is 0x80000000 which is unchanged by truncated negation.  I haven't thought it through completely, so I haven't tried to implement the change.. This opcode handler assigns into m_global_regs directly rather than using set_global_register - is that intentional or an oversight?. As with neg it should be possible to optimise this so the extended 64-bit value isn't necessary.. Could you use ~u64(0) rather than -1 to make it clear this is unsigned?. This is used for the the play time for the current session - is this translation appropriate?  (The English is not particularly clear for this string.). This is missing a trailing space (the string is concatenated with a name - this is bad form and will be fixed at some point, but for now please add the space).. Having the hash commented out is useless as the ROM won't end up in ROM sets - the BIOS feature works across multiple ROM regions, so you can load the correct chargen ROM for each BIOS.  See e.g. osborne1 for an example.. Does this ever get called from the debugger?  Should it check machine().side_effect_disabled() and suppress side effects?. Self-inclusion?  That doesn't look right.. You can't return early here - you still need to hit the block below where it checks for systems with three or more screens and generates additional views.  Without this, bad things happen when you add additional video cards to computers or enable debug terminals on arcade hardware.  You'll have to skip over the rest of the layout search if this succeeds but still generate views.. Please be consistent with code style - the rest of the file uses Allman style (brace on next line).. You probably don't want to load this if machine-specific artwork was found - the name suggests a fallback, not additional views for everything.. Trampoline constructors should be protected, not public - if something other than a derived class can set the device type, it breaks basic assumptions in the framework.. Since xhalfsize and yhalfsize are just tested for zero/nonzero, shouldn't they use bool?  As far as I can tell, xflip and yflip should be bool as well.. Why are these static string objects?  It increases static initialisation overhead on all runs even if the HTML output function is never used.. A global variable like this is a really bad idea.  Also, you shouldn't use a std::string as a buffer, it's not efficient.. The hard-coded filename is unhelpful - it needs to take a filename as a parameter.. html isn't a good name, it doesn't hint that it does something with help.  Also, where's the placeholder for the filename.. This function leaks the open file if any of the fprintf calls fails - that's not acceptable error handling.. Macros should be avoided where possible - they can't be scoped and cause confusing error messages because they work by lexical substitution.  Error handling for one function definitely shouldn't be implemented using a global macro.  Exceptions would work far better.. Does the key on the real machine say \"F11\" on its keycap?  The comment seems to suggest it doesn't.  The PORT_NAME macro should always give the name on the key cap on the original system.. Can you turn this check into a lambda or something?  Repeating it is a liability.. If these are only going to be used in one function, please use local constexpr or enum or something.  Preprocessor macros can't be scoped and produce unhelpful error messages when things go wrong, and hence should be avoided if something else will do the same job.. You still need to define LOG_GENERAL here or you can't enable it because you're supposed to define VERBOSE before including logmacro.h.  If you define LOG_GENERAL here, logmacro.h won't duplicate it.. Please don't use #define if you can avoid it - there's no way to scope this stuff.. Please don't use __ in names - all such names are reserved for the implementation. . Please use the DECLARE_DEVICE_TYPE helper if the device class is public.. Is it intentional that you're still attempting to load \"default\" even if call above succeeded?  Should there be an else at the beginning of this line?. What's the point of |= true on a bool?  It forces it to true, so you may as well just do = true (same thing happens again below).\n  . There are several things to think about.  Firstly, using |= with C++ bool is kind of weird.  This statement:\nsome_bool |= other_bool;\nactually decays to something like this:\nsome_bool = ((some_bool ? 1 : 0) | (other_bool ? 1 : 0)) != 0;\nOf course, the optimiser should be able to do a decent job of handling it, but it's still a case of using bool in int context and several implicit conversions.\nConsider this:\nsome_bool |= function_returning_bool();\nIn this case you can't replace |= with an assignment here because if some_bool was already true but the function returns false, you still want some_bool to be true afterwards.  You could write it like this if you want to avoid implicit conversions:\nsome_bool = function_returning_bool() || some_bool;\nHowever, that's a bit less concise (note that the order can't be reversed around the short-circuit operator || or it won't call the function if some_bool is already true).\nBut when you consider this:\nsome_bool |= true;\nThe initial value of some_bool is completely irrelevant - it's effectively assigning it true but in a more confusing way.  I'd say this kind of thing should be eliminated, including the two that already exist in src/emu/render.cpp (as of 0f413001dc0034412779747fde5b003bcfecc2f0).. Well, an artwork pack should only contain one .lay file, and the current behaviour is to look for, e.g. artwork/superx/superx.lay and if that fails to try artwork/superx/default.lay (i.e. it won't consider default.lay if it can load superx.lay).  It should be the same for the override option - put the else in.. Please don't use _device suffix for things that are not device_t implementations.  It's horribly confusing.. If the keyboard is external and interchangeable, it should be a slot device allowing the different layouts to be plugged in.  If it's internal, it should instantiate the correct layout device for the machine.  Either way, these should be derived device classes, not a fake config port.. This puts the indentation all over the place in the input ports.  One tab per indent level is the MAME standard.. You don't need PORT_CONDITION at all.  Just make derived classes that override the method returning the input port creator.  Use PORT_INCLUDE and PORT_MODIFY to modify the inputs.  See e.g. the Sun or Amiga keyboard matrixes.. This can't possibly be right - MACHINE_CONFIG_DERIVED takes two arguments.. This should say \"the byte at\" in both cases - it's applicable for writing as well as reading.. Why are you creating a new machine config that's a duplicate of an existing one?  There's no reason you can't use the same machine config with multiple systems.  The machine config name doesn't have to match the shortname of the system.. You shouldn't need to declare these here since the device instantiates them - they can be static or in an anonymous namespace in the source file.. What's the reason for removing this?  The only base member the derived classes need to access is the protected constructor.. Overridden protected member functions should be protected.. This is inconsistent with the other enum declarations (opening brace on same line vs next line). . This is a runtime tagmap lookup, which causes poor performance and makes refactoring harder.  Use required_ioport instead.. Another runtime tagmap lookup that should be avoided.. Yeah, use required_device to find it relative to the root.  first_screen is going to go away at some point.. I'd prefer std::fill(std::begin(foo), std::end(foo), 0) for this kind of thing - it will continue to work if the type of container changes, and it will throw a fit if it's changed to a pointer rather than doing the wrong thing.. Please don't do this - it's not bad enough to be a fatal error and will make development harder.. This can't possibly be right - data won't overlap mask.  Also, are you sure about which lane is which?  (Same for other change in this file.). logerror and friends can handle std::string fine - please don't go adding .c_str() unnecessarily, it actually hurts performance.. Please use uppercase TODO so editors like vim will highlight it and source analytics tools will recognise it.. Please don't leave commented crud - it just rots.. Please use more terse source file names.. Please don't use unnecessary .c_str() calls - logerror can handle std::string just fine.. This file is missing copyright/licence annotation comments.. Missing end-of-line at end of file.. Also missing end-of-line.. Another missing end-of-line.. You probably want to note that the default is forward delete on Mac (fn-delete on notebook/compact keyboards, dedicated key on full-size keyboards).  It might be different again on Linux, I can't remember.. This won't work with a wildcard since it needs to build a machine configuration.\nIt's also worth noting that as you populate slots, this will show any additional slots they provide.  For example with a computer driver, putting a disk controller card in a slot will expose additional slots for the disk drives.. This description is kind of dated.  It lists information about systems and devices (ixnay on the \"game\" terminology).  If you specify a system name or glob pattern it will only list matching systems and the devices they use.\nThis command can accept multiple system names/glob patterns, so remember the ellipsis.\nActually, the whole lot needs the game name terminology fixed.  MAME emulates systems, not games.. This is another verb that can accept multiple patterns or system names.  It also accepts device names.. This is another verb that can accept multiple patterns or system names, and also accepts device names.. I'm pretty sure this can't work with a wildcard.  It's another one where the fact that it updates when you change slot options is important, too.. The options here vary with OSD - you get win and potentially dwrite on Windows, osx on Mac, and sdl on Linux.. Does this option even exist any more?  I think it's a vestige of newui.. This can accept a system name or glob pattern.  If you give it a system name or pattern it will just validate matching systems.  If you give it no system name or glob pattern, it will validate all systems and additionally validate all devices.. There's also an accel option that uses SDL2 2D acceleration if available.. There are also coreaudio (Mac only), xaudio (Windows only) and portaudio options.  The portaudio option supports a variety of drivers and is generally the lowest latency option on Windows and Linux, while on Mac coreaudio is the default and generally provides lowest latency and overhead.. Don't explicitly reference TrueType - just say it an be a system font name.  It's OpenType as often as not these days.. The OpenGL render module isn't specific to the SDL OSD any more - it's compiled in by default on Windows.  Are these options really not present in Windows builds?  I was under the impression that GLSL filters are pretty popular with Windows users.. This option is not Windows-specific any more - it works with the Qt and Cocoa debuggers as well.  The default is debugger-specific (Lucida Console for Win32 debugger, system default for Cocoa, and I forget what for Qt).  Note that you can choose to include the Qt debugger on Windows and Mac when compiling, so it's not tied to the OS.. This option is also not Windows-specific, and the default depends on the debugger you choose.. This screams that it's a hack.  Are you sure you can't do this properly with address maps?. This doesn't match the style of the surrounding code.  The statement immediately below is Allman style.. Much like system/software shortnames, we have to work with source file names.  Making them excessively long makes them annoying to type, increases the width of columns in multi-column listings, reduces the number of columns that can be shown in potential completions on the command line, etc.  There's value in being terse.. You shouldn't be assigning base members here - if it needs to be done, it should be in interface_pre_start in the interface where the member is declared.. The device_t implementation of reset() resets child devices automatically.  You don't need to do this.. Inconsistent line breaks.  Also, this could be simplified to return bool(m_card); or return nullptr != m_card; and the method should be const-qualified since it isn't a mutator.. Please use an object finder in preference to a runtime tagmap lookup.. Why not just use MCFG_DEVICE_MODIFY rather than a duplicated machine config?. I don't want people copy/pasting anything if they don't understand it, and if I knew it was being done there as well, I would have commented on the commit and asked the author to fix it.  And anything you copy/paste is your code, and you have no excuse for bringing problematic baggage along with it.. Also, do you seriously think I have time to go through all of MAME and fix everything in case someone copy/pastes it?  You seriously over-estimate the amount of spare time I have.. #include order should be PCH (emu.h), module header, project headers, framework headers, and standard library headers in that order.  This helps avoid a lot of pitfalls.  Please don't #include anything before the PCH in particular.. Are you thinking about how you'll support save states?  Variable-length structures like an unbounded queue aren't conducive to this.  Do you have any clues as to what the actual queue depth is on the hardware and what it does on overrun?. Please use nullptr as the null pointer constant.. Please follow convention of indenting braces to the level of the control statement.. You really should be able to do this with optional_device_array - why are you doing it like this?. * The optional_device_array isn't particularly common, but the conceptually similar required_device_array is used in over 30 drivers and a number of devices\n Even if you weren't to use optional_device_array you should be using three optional_device members instead of naked pointers\n Using device finders is easier to debug when things go wrong because they're handled consistently during the object resolution phase before devices are started\n You have one member declaration m_floppycon or whatever instead of three m_con1, m_con2 and m_con3\n You have one line in the constructor's initialiser list rather than these three lines in machine start\n You can use loops and indexing on an optional_device_array while you need long if-else-if structures which individual members\n The example you gave would be 12 lines with individual members like you're using, but it's 3 lines with the optional_device_array - a saving of 75%. Please use CamelCase for template parameters to make it clear they aren't locals or function parameters.. Please use std::fill for safety.. This would better be done with a range-based loop.. Please use std::fill for safety.. Please use std::fill for safety.. Here's a great example of why std::fill is a better option - sizeof returns the size of the std::vector object and bears no relation to the size of its content.. Please don't leave stray changes like this around.. Same issue as on the other pull request - sizeof has nothing to do with the vector's content.. It's pointless if you don't use std::begin/std::end to find beginning/end.  Like this you've still got hard-coded sizes and haven't gained anything.. Could you please make the spacing consistent with the other if statements (i.e. space between if and opening parenthesis).. I realise this was here before, but if you have any idea what it's supposed to catch, could you put a TODO comment inside the braces to enlighten the rest of us?. Since you're touching the code anyway, could you please make the spacing on the if and switch here consistent?. Can you please not make non-standard heading comments like this?  We actually scrape these things for various purposes.\nIf you think you've made a significant copyrightable contribution to this file, add your name to the copyright-holders: heading.  (Facts are not copyrightable, i.e. things like memory maps, PCB layouts, graphics decode macros, etc.)\nWe recognise a thanks-to: heading for significant contributions that are not eligible for copyright protection.\nFor anything else, just add notes in the big multiline comment below.. It looks like there are a bunch of comments referring to the Alphatronic machines in here when this is the itt3030 source file - bad copy/pasta?. Please put this with the other #include directives at the top of the file - doing stuff before including a framework header can lead to chaos.. Are you sure this compiles?  I would've thought you'd either need to change the type of mix from short * to std::vector<short>::iterator or use &m_mixer_buffer[0] to initialise it.. Same comment as for the other one above.. There's inconsistent style here - you have one member with an m_ prefix and two without.  Also, the object finder members above don't need to be public.. We're moving towards using the 4_MHz_XTAL syntactic sugar for this stuff.. Not necessarily.  The trouble is the D3D9 HLSL feature can only really use the supplied HLSL shaders, while OpenGL can chain several user-supplied shaders.  It's also easier to get started with if you're experimenting because you don't need to build the bgfx tools to compile your shaders, you can just drop them and they get compiled when they're loaded.  There are definitely some use cases for using GLSL filters.. Putting an unescaped backslash in a string will cause problems.. Remember the distinction between \"verbs\" like -verifyroms and -listxml \"commands\" like srcclean, romcmp and mame.  Also you should probably note that glob patterns should be quoted to avoid having the shell try to expand them against file names.. Without a pattern it validates all systems and device types (it skips validating device types if you specify a pattern).. bgfx and none are not Windows-specific.  Probably better to have bgfx, opengl and none in a general group first, followed by the OSD- and platform-specific ones in their own groups.. Is it worth mentioning that VBO is vertex buffer object, and PBO is pixel buffer object?. As of MAME 0.194 this also accepts 2 for bicubic.. This needs a proper explanation.\nIn \"emulated keyboard\" mode, MAME translates pressing/releasing host keys/buttons to emulated keystrokes.  When you press/release a key/button mapped to an emulated key, MAME presses/releases the emulated key.\nIn \"natural keyboard\" mode, MAME attempts to translate characters to keystrokes.  The OS translates keystrokes to characters (like it does when you type into a text editor), and MAME attempts to translate these characters to emulated keystrokes.\nThere are a number of unavoidable limitations in \"natural keyboard\" mode:\n The emulated system driver or keyboard device or  has to support it\n The selected keyboard must match the keyboard layout selected in the emulated OS\n Keystrokes that don't produce characters can't be translated (e.g. pressing a modifier on its own)\n Holding a key until the character repeats will cause the emulated key to be pressed repeatedly\n Dead key sequences are cumbersome to use at best\n It won't work at all if IME edit is involved (e.g. for Chinese/Japanese/Korean). System fixed pitch font (typically Monaco).  This is not the same as the system font (typically Lucida Grande).. Probably worth explaining that this is a dynamic recompiler.. Why have you moved this variable here?  Logically the two mix variables are not related, and the code doesn't want the value from one channel to persist to the next channel.  It's not like it's an object that's expensive to construct.  But that aside, are either of the mix variables even needed?  Couldn't you just use m_mixer_buffer[i] in each case anyway, eliminating a piece of redundant state?. Why are you filling the buffer before the resize here?  The new size will be smaller, so you're doing additional work for nothing.  You'd save (a small amount of) cycles by doing it after the resize.. If you want the new elements of the vector to be zeroed, you should supply 0 as the second argument to resize (first argument is desired size, second argument if supplied is desired value for new elements).. I'm not too sure about capitalising this in the placeholders.  In prose below, it should obviously be capitalised, but command line placeholders are a bit of a weird thing.\nYou also don't capitalise \"bool\" in command-line placeholders despite it being a proper noun, as an abbreviation of the surname \"Boole\".\nThere's also a case below where you haven't capitalised the acronym ASCII in a command-line placeholder, which is inconsistent (oh and ASCII is actually an acronym while CPU is an initialism or abbreviation, not an acronym).\nAny other developers have an opinion?. Zero-filling m_ram on construction is wasted work when it's going to be filled with 0xff at start time.  But that aside, why did you change it from being dynamically allocated to being a member array?  Making it dynamically allocated at start time can improve the performance of -validate, -listxml, -romident and other verbs that need to instantiate devices but not start them.  Making it a member and filling it at construction increases the work required to construct an instance of the device.. Why are you using make_unique_clear here when you plan to fill it with 0xff at reset time anyway?  It's wasted work to zero-fill something when you plan to completely overwrite it anyway.. Why remove this comment?  Have you determined what this does?. Why have you removed the comment?  Have you actually measured screen timing on a real PCB?. Please don't pollute global scope, and especially don't use preprocessor macros for this kind of thing since they produce unhelpful error messages and can't be scoped at all.. Is this actually a DIP switch?  If it's some other kind of configuration switch or jumpers, it should use PORT_CONFNAME and PORT_CONFSETTING.  DIP switches should be real DIP switches.. Please use a terse tag without spaces here - it's easier for utilities to deal with.. Is this really adequate?  Wouldn't you have to go through set_select to make sure everything's mapped properly?. You'll need to add a prefix to the shortname - \"cadmouse\" is too generic.. These don't have the m_ prefix that other members have here.. The spacing around this doesn't match the other if statements in the file - please be consistent with surrounding code.  The rest of the file is if (condition) style.. Why is it commented here?  No-one can test it or make further progress if they can't insert it in a slot.  Also the name here is in a local namespace for the slot options, so it can be terse - \"cadmouse\" is fine.. It should be possible to make these internal memory maps protected now.. There's no way to mark a device as not working yet, but you can mark it as having unemulated graphics and mouse - implement static constexpr feature_type unemulated_features() in the public section of the device class to return the unimplemented features, and the user will get a red warning if they try to use it.\nA device you can't mount at all doesn't get validated and rots.. If you're touching lines like this anyway, please change them to not use _Names (identifiers starting with an underscore followed by an uppercase letter are reserved), make them forward a universal reference, and make them not use confusingly similar names for template parameters and function parameters, e.g. this one would become:\ntemplate<class Object> devcb_base &set_vsync_callback(Object &&cb) { return m_vsync_cb.set_callback(std::forward<Object>(cb)); }. These should be templated and made to forward a universal reference, e.g. for this one:\ntemplate <typename Object> void set_bank2_callback(Object &&cb) { m_bank2_cb = std::forward<Object>(cb); }. Why put this in a separate group?  Doesn't it make sense to live in the groups with other devices for machines it's compatible with?  Does it not work with other kinds of machines with 488 interfaces in MAME?. You need to #include \"emu.h\" as the very first thing apart from comments in a compilation unit.. I don't think treating a socket as a black hole while it's listening is a good idea.  Also, this makes Win32 and POSIX behaviour diverge.. When you're doing this, could you please be consistent with the style used in the rest of MAME?  We put right-associative things to the right of the space.\nNote that in this line it's devcb_base &set_ym_read_callback (the ampersand qualifying it as an lvalue reference is after the space).  Likewise, it should be Object &&object (with the double ampersand qualifying it as a universal reference coming after the space).\nAlso, this stuff is less confusing if there aren't different things called Object and object in the same line - that's why I've been changing them to cb or callback when I change them.. This one should forward a universal reference as well.. This one should forward a universal reference as well.. This one should forward a universal reference as well.. This one should forward a universal reference as well.. This one should forward a universal reference as well.. More inconsistent spacing around right-associative qualifiers.. More inconsistent spacing around right-associative qualifiers.. The loop counters are completely independent and should be scoped to the loops they control.  It isn't a single logical value that persists from one loop to the next.. This spin looks like a hack - is there any evidence that the main CPU is halted while the command is processed?  Is it working around an issue caused by the fact that the sound latch write goes through a schedule synchronisation barrier but m_latch_full is set immediately?. It doesn't have to come before it in the same file - it just has to be in the same file or a header included by it.. When adding comments to XML, could you please indent them to block level?  This convention is used in all our software lists.\nFor example for this one it should look like:\n<software name=\"swa\" supported=\"no\">\n        <!-- Black screen on startup with both the DRC and the interpreter. -->\n        <description>Star Wars Arcade (Euro)</description>. Seems someone doesn't know the difference between \"capacity\" and \"capacitance\"\u2026. Please don't add constants like this at global scope, and don't use #define preprocessor macros.  Make them members of the state class, using either static constexpr or enum.. You need to test these changes - this requires you to supply a type and use the = sign.. You need to check that stuff works before opening pull requests - this won't compile.. Why does it need the extra one compared to the previous code?. Do you need the explicit this-> for cases like this?. Please put this in the device class at public level.  Device timer IDs can't conflict across a device and all derived devices and mixins, so it's good practice to have them declared in the device class.. This is inefficient do to creating an ostringstream and copying the string out of it twice.  You could use util::string_format to get a std::string directly from the formatting operation, or use a persistent util::ovectorstream (as a member) to avoid needing to allocate the stream buffer each time this function is called.  Also, LOG doesn't require you to use .c_str() - it can consume std::string directly.. You really shouldn't use auto for cases where you know what the required type is and it isn't a proxy or iterator for something.. Functions like isalnum are locale-aware.  It's generally a bad idea to use them in situations like this.. The limit of eight iterations on this loop will probably lead to socket buffer overruns if the socket is being fed invalid data.  What purpose is it actually supposed to serve?. Please don't write functions in a way that there's only a case difference between symbols - Object and object here.  The convention we're using would be to rename object to cb (abbreviation for \"callback\") as in the function above.. This doesn't make sense - the condition ((mask != 0x3f00) || (mask != 0)) cannot be false, as mask cannot be equal to both 0x3f00 and 0 at the same time.. Please don't add runtime tagmap lookups.. This was not a typo - it intentionally had the \"de\" suffix because it's a German release.  I think it's probably worth leaving the country suffix in for the parent in this case whether you go for appetizede or appetide.. Can you show a source for this change?  What are the board markings?  What's the chip label if any?  I don't want arbitrary renames without sourcing them.  Also please don't add empty features like this - just add the comments if you don't have a value to put in.. Can you explain what value these are supposed to provide, with the name and value basically being the same thing?  There's no way a driver could use it to determine correct mapping/mirroring or anything.  I don't want to see feature attributes turn into the same stupid mess we have with ROM labels in the main source - each software list needs a clear, documented schema for the features in an obvious place, like the header comment of the file.. See here's a great example - none of the feature elements provide value - you'd be better off just putting \"U3 is an unpopulated N-pin socket\" in the comment.. This is another case where having the target market in the set name is probably more useful than not - ClarisWorks was released in a large number of variants, including specific UK and Australian English versions.. It's a bit different with a software list like this.  Putting aside the rather arbitrary nature of the parent/clone relationship, the parent for arcade games is generally supposed to be the most widespread, English-language release, mainly for general accessibility.  But if you fire up the wrong release of an arcade game, you probably aren't going to be massively inconvenienced\nIn this case, it's a piece of software that was localised for a number of regions, and we have a German release as the parent.  I think the original practice in this software list of making the release region explicit in parents is useful.. Well, adding a feature element with empty attributes is not useful.  You can add a comment containing the information, but the feature element should have a well-defined schema with values that could ultimately be machine-parsed to configure emulation.. Well, you need to agree on a schema for it with the driver developer.  It should be theoretically possible to parse the feature elements to configure emulation for the cartridge, even if the driver doesn't implement it.  This isn't even a step in that direction.  For now, just add comments.. Please reduce the scope of your locals and use const as appropriate.. You can also put data inside the block where it's used, since it's not used outside that block anywhere and doesn't need to persist, and you can declare i inside each of the for loop control expressions, since it's not used for anything else.  Oh, and you've also got a mixture of K&R (opening brace on same line as control statement) and Allman (opening brace on line following control statement) in a single function in each place.  Please make it consistent with the rest of the file, and at least consistent within a function.. You still have mixed Allman and K&R formatting within function.  For example this if statement has the opening brace of the controlled block (K&R style) while the for loop below has the opening brace of the controlled statement on the following line (Allman style).\nIn each case, you should look at the rest of the file, and follow the same convention, whether it's K&R or Allman.  You should not mix Allman and K&R within a file, and particularly not within a function.. Please include the module header immediately after emu.h to help avoid nasty cross-dependency issues.. Please register save state here..  Perhaps this should go through a synchronisation barrier?. Please consider the use of arrays.. Why the less descriptive description?. It would be better to use BIOS options here than moving the ROMs to drivers.. Static mutable variables are going to break things - can this be made constant, or should it be moved to the state class?. The (ch != 1) check is redundant - if ch is equal to zero, it definitely won't be equal t 1. This is using a bool in integer context and will generate a warning in Coverity - you should replace it with (m_slavelatch->pending_r() ? 0x0 : 0x4) | (m_z80_to_beast_full ? 0x8 : 0x0) or similar.. Do you have a reference for this?  Are recommended DIP switch settings given in the manual?. In cases like this, std::copy_n may be clearer.. Could you make a base machine configuration with the common parts, and only put what's different in the coh700 and coh716 configurations?  It's not clear at all what he actual differences are when it's like this.. Please at least lift the call to memregion(\"sprites\")->bytes() out of the loop - right now you're doing a tagmap lookup when it checks the condition on every iteration of the loop.. This isn't safe with macro substitution when the arguments are expressions.  The macro above it isn't safe either, but there's no excuse for adding more unsafe macros.. Can you please keep source files in order within these blocks?  It makes it far easier to keep track of stuff.. There's no need to make a duplicate machine configuration - nust use the existing one.. You need to guard against doing this multiple times since you can't safely uninstall before restart.  You effectively can't apply DIP switch changes until MAME is relaunched;. Please don't pollute the global namespace with stuff like this.  If you put a macro like this in a header, it propagates to anything that includes the header.. These are too verbose and will be a problem in configuration menus.  Also, is this a real set of eight DIP switches or not?  If it represents the three configuration jumpers, it should be a CONFSETTING and be three bits wide, not eight.. You need to store a flag to indicate you've installed your handlers and not reinstall them on reset or it leads to trouble since you can't safely unmap the old location.  Changes to address mapping really require a hard reset.. Please put line endings at the end of lines.. The device type identifier, class name and short name are far too generic and will cause conflicts.. You're missing #include guards. This should probably derive from device_t and device_palette_interface rather than palette_device. Identifiers beginning with an underscore followed by a capital letter are reserved.  Please remove the leading underscores.. Why comment out these LOG lines?  That kind of defeats the purpose of configurable logging.  You'd be better off adding another bit to the VERBOSE mask to allow them to be enabled/disabled separately if they're too noisy.\nSee examples:\nhttps://github.com/mamedev/mame/blob/84944bebfc78507b00723991a1bd768aef350e4c/src/devices/bus/ti99/internal/998board.cpp\nhttps://github.com/mamedev/mame/blob/84944bebfc78507b00723991a1bd768aef350e4c/src/devices/cpu/m6800/m6801.cpp\nhttps://github.com/mamedev/mame/blob/84944bebfc78507b00723991a1bd768aef350e4c/src/devices/machine/sdlc.cpp\n. You can't pollute the global namespace in a header like this. Preprocessor macros are global and can't be scoped.  This will affect anything that includes this header, including other headers included after it.  Find a better way of doing it.. Is this really a set of eight jumpers?  If not, don't give it a mask that covers eight bits.  Also, use CONFSETTING/CONFNAME rather than DIPSETTING/DIPNAME for things that are jumpers, not actual DIP switches.\nAlso, the names are too long - you need to consider how the UI displays this stuff.  You can't include usage information here.. Don't use printf for diagnostic information - use logerror or the stuff in logmacro.h so it works with the framework.  Also, debugging code needs to follow indentation properly.. This indentation is all over the place - use one tab per scope level.. Please use required_ioport to avoid runtime tagmap lookups.. As I commented on a previous PR, you need to keep a flag indicating that you've installed handlers and not reinstall them on subsequent resets.  Otherwise if someone changes config you end up mapped in multiple places after a soft reset.  Due to various limitations in the memory system, this is the easiest way to do things at the moment - config changes need a hard reset.. This is what BIOS options are for.  Use them.. Could you please put a configurable log message here, using the stuff from logmacro.h?  I'd rather not see unknown stuff blackhole.. What's the point of adding this device finder that's never used?. Was leaving logging on intentional?. Please fix the spacing here - it's inconsistent on the opening and closing parentheses.. \"Keypad\" in this case isn't necessarily numeric.  The difference between \"keypad\" and \"keyboard\" is just that the presence of \"keyboard\" inputs causes full keyboard mode to be enabled, while \"keypad\" inputs doesn't.  Is \"telcado num\u00e9rico\" the best translation?. Please use logerror or things from logmacro.h rather than printf for diagnostics.. Why was this added?. This won't actually work - the 16-bit latch device doesn't honour the mask.  You need to check that your changes actually build and work properly.. Is the index necessary?  The NAME macro should already be giving distinct names.. Yeah, but there's no point adding a completely unused member, and you don't know if in the future everything will be connected to the MCU via machine configuration, in which case the member still won't be needed.. Please use quotes for these headers, and only use angle brackets for system/standard library headers.  Also, it's become convention to have a blank line followed by:\n```\n//#define VERBOSE 1\ninclude \"logmacro.h\"\n```\nto remind the next person who comes along what they need to do to enable logging.. There's no need to use a backslash line continuation here - C++ is largely insensitive to whitespace.  Also, please indent statement continuation by two levels to make it obvious it's statement continuation and not a new scope block.. Oh sorry, I missed where it was removed from mconfig.. The \"A-Blast\" title doesn't appear on the title screen, only \"\u8f5f\u5929\u96f7\", and the manual says \"\u8f5f\u5929\u96f7 (A-Blast)\".  I'm changing it to \"Hong Tian Lei (A-Blast)\".. The full names don't include the BT45x part number.  I kinda think they should.  Also does it really need \"Monolithic CMOS\" and \"Palette\" in the full names?  They're pretty long.. We use Waapuro Hepburn Romaji for Japanese transliteration.  Sha/shu/ja/ju, not sya/syu/jya/ju.. Why did this line change?  Have you inadvertently added a zero-width no-break space?. Traditional Chinese for Hong Kong market should use Jyutping Romanisation.  In this case it would be \"Fung Bou\".. Please use Jyutping for Hong Kong Cantonese titles (Dungfong Zi Zyu).\n. Oh I see, it's supposed to print the message when it gets additional CONF data it can't deal with.  To make things clearer, can you make the log message explicit that it's more data than it knows what to do with, and also keep incrementing m_conf_ptr and add it to the message so it's clear how much extra CONF it's received?. Why do some of your comment like this one have the version before the date (V100 03/14/05 20:04:08) while the one above has the version after the date (06/20/05 11:36:15 V100)?  Is there a difference in the way the games display the build information?  If not, the comments should be consistent.. You're still not using standard Romaji here for the Japanese.. We still prefer explicit region names, even if the offset is zero.. This would be easier to read if you just did BIT(~data, i) instead of the explicit shifts.. Please put project headers before standard library headers to help flush out issues with headers not including what they need.. Please scope down some of these variables, and use const appropriately.. Please don't put generically-names things in the global namespace in headers.  Either put it inside your class or get it out of the header. Putting all these generic names in a header makes trouble for anything that includes it.. Why is this indented twice?  Also, you can reduce it to using device_t::tag; if your want.. Please consider using required_device_array instead of separate members.. Why are you using a vector for this if it's fixed size?  Why are you allocating at construction and not deferring until start?. Please use required_region_ptr rather than convoluted stuff like this.. Please don't use vector for things that don't need dynamic resizing, and defer allocations until start where possible.. You want to do something with the result here?  In general I dislike this pattern.  You're initialising ret even though you always plan to assign to it.  If you didn't initialise it you'd get a compiler warning for this.  Also, does the ret variable really gain anything over a return in each case?. Please follow the convention for #include guards - we don't use a trailing underscore.. This is better handled by exposing a memory space.. See e.g. pull request #3515 that converts the R5C68 to use expose a memory space.. Can you provide a reference for this?  Every video I've seen of the cabinet shows the trackball being a lot more yellow when illuminated by the incandescent globe.  You've made it look decidedly pink which is definitely not going to happen with incandescent illumination.. These buttons are not backlit - they shouldn't get brighter when pressed.. These buttons are also not backlit and shouldn't get brighter when pressed.. These are incandescent globes with red glass behind a grey marquee element.  They shouldn't be pink when lit.. If you're always only considering the low four bits, is it possibly you should use map(0x470000, 0x47000f).mirror(0x00fff0) for this?  It seems a bit more plausible that the top eight bits would be decoded for the chip selects and the low four bits used by the device.. Did you forget the copyright/license header here?. Could you please be consistent with spacing?  Here you've done for( and T& var whereas below you've done for ( and T &var - the latter is more common in MAME.. Please use one tab per indent level - not this mix of spaces and tabs.. Please use either colon and comma at end of line, or colon and comma at beginning of line for initialiser lists - not a mixture with colon at beginning but comma at end.. You still haven't fixed the bug here - you're calling space.unmap() to get the open bus value but doing nothing with the value it returns.. Please be consistent with initialiser list formatting.. does this actually treat dst as an array or allow nullptr?  If not it should be a reference, not a pointer.. You can do this by binding an output directly to the devcb and inverting it - no need for a trampoline in the driver.. Wouldn't this be better with two output finders - one for the \"low\" LEDs starting at 0 and one for the \"high\" LEDs above 100?. This never uses lamp zero - why not have a correctly sized output finder starting at one?. Why not keep the output finders together here?. This is another oversized one where it should start at 1.. And another oversize one.. There's only one led here - it may as well be zero-dimensional. Same for the one below.. This is another single LED.. Another one that should start at 1.. Another individual LED.. Eight times eight is sixty-four.. There are only two LEDs here.. There are only two lamps.. When this flips between true and false, you also need to m_uart8251->write_rxd, m_rs232->write_txd, etc. to force the correct one to the TxD output etc. otherwise the state after enabling/disabling loopback won't be right until the next output change.. Maybe use a loop here?. Probably a good candidate for a loop.. Probably another loop candidate.. Eugh, surely there's a better way than three copies of the same code here?  Maybe (muxlamps - 1) * 3 or something, and similar for the other repeating pieces of code?. These are probably good loop candidates, too.. This can't possibly be right - changing logging settings shouldn't affect behaviour.  Read the value and store it in a local variable before the logerror or something.. Logging configuration shouldn't need to affect things like this.. You're mixing data members with and without m_ prefix because of the base you derive from.   Could you please add the m_ prefix for consistency?. This should be protected since it's an internal signal handler.  There's no need to make handlers used from machine configuration public any more.. There's no need for these handlers and device_input_ports to be public (unfortunately the DECLARE_INPUT_CHANGED_MEMBER declarations do still need to be public).. \"Would did not\"?. Haha two of these point to the same share - did this even work before?. I know the port tags are not validated right now, but they're identifiers, not human-readable names.  Please follow the conventions used in other devices.. Please use the default string macros for things like this.. Please register members for save state - we want to get to a point where we can assume devices support save states unless flagged.. Please be consistent with spacing - in function calls elsewhere you have no space before comma, but in these member functions you're placing spaces before commas.. Please don't use auto where the type is:\n Not dependent on template arguments\n Not horribly wrong to write out\n* Not a proxy/iterator/something else weird\nIn cases like this, it doesn't make the cod easier to understand - it just makes it more opaque.. Please be consistent with spacing.. Please do what other sources do and #define VERBOSE before including \"logmacro.h\".. Please fix the indentation here - one tab per scope level and no weirdness with the opening brace.. Why are you using uniform initialiser syntax for some class type members but not for others?  It's jarring.. Please register members for save states.. What's the big vertical whitespace inside the function supposed to be in aid of?. Please suppress side effects for debugger access - this goes for all read functions.. Please be consistent with spacing - you're using if (... but switch(... - they're both flow control constructs, so there's no reason to use different spacing for them.. Please follow convention in the rest of the source and don't indent the opening brace itself.  See e.g. src/emu/addrmap.h for an example of this style of inline function in a header.. Please don't expose internal stuff like this - if you need it to be public, there's probably something wrong with your design.. Why are you using no parentheses for these, when you're using parentheses for the ones above?. Please be consistent and use snake_case for type names - we use LlamaCase for template parameters.. These should be static - they don't depend on an instance.. Can you please be consistent with spacing?  You've got for( and for ( in the same function now, where you seem to mostly use if ( most of the time.  You've even got both in this change, and it's not like you're modifying someone else's code.  It looks really careless.. Don't we have an \"NVRAM reset\" assignment that can be used for this, or is that already in use in this driver?  Same applies for the other systems.. Please don't move the braces to the end of the line when the initialiser list isn't all on one line like this.. Did we get confirmation that the internal ROMs match for these?  That's pretty cool if we did.. Why don't you use the BIT helper for these?. This won't work - m_protdata.get() returns a pointer, so you're just using the size of a pointer (four or eight bytes), not the size of the allocated block.. You don't appear to have set this in any of the lua files for the targets - this will cause a link error when someone tries to do a full build.. This is going to set the floppy to m_floppy[1] if both selects are set.  Is that actually what you want, or do you want it to logical-or for the two drives or something in that case?. What's with the triple inversion?  I don't see how it aids in readability.. Please use a region the size of the ROM and use .region in the memory map to load from the correct offset.. You need to define the macros that can be used for VERBOSE before you have the dummy VERBOSE declaration.  Also, since LOG_GENERAL doesn't have a _MASK suffix, please don't use it on your masks, as it creates inconsistency.. Please use a more descriptive description (the second string argument).. You're going to have to save these in save state as well.  To make them savable, use the ALLOW_SAVE_TYPE macro, and specify an explicit storage class for each enum (see examples in src/devices/cpu/mcs40/mcs40.h and src/devices/cpu/mcs40/mcs40.cpp).. This doesn't need to be in the header if it's only used by other members of this class.. Please wrap comments somewhere around column 72 - it makes them a lot more readable.. You could just do return status_read(!machine().side_effects_disabled()); here.. Well, the convention that @JoakimLarsson seemed to use was to have an underscore in the mask macro, like LOG_INT, but not in the logging macro, like LOGINT(...) - @JoakimLarsson do you have any comments on the best way to deal with this?  (Essentially, logmacro.h is supposed to be an adoption of the kind of logging macros @JoakimLarsson was using with the major issues addressed.). C++ doesn't support K&R calling convention - no need for void here.. You need to add explicit storage class to enums that you want to save, to ensure portability, e.g enum class device_trigger_state : uint8_t { .... Minor thing, but this switch statement is not formatted like the ones below.. This should be protected since it's a partial machine.\nAlso, the stuff above with LEDs should be done through the output system, so it can be logged with -output console, displayed using the artwork system, or fed to an external program.. Why not use the BIT helper here?  It's less verbose than this.. This stuff would be less verbose with the BIT helper as well.. Using CONSTANT here would be simpler than the READ8 trampolines that return constants.. You really should be registering stuff for save states - it makes your life easier, too, because you can save/restore state at a problematic point to aid in debugging.. Please don't do this with bool variables - just test the name.. Don't compare bool to false - just test the complement.. \"drawned\"?. Please declare for loop counters in the loop control statement.\nAlso, please declare max_sprites as close to the point where it becomes valid as possible.. Are these constant for an iteration?  If so, they should be const-qualified.. This would be easier to read using the BIT helper.. Please declare for loop counters in the loop control statement.. Please const-qualify things that shouldn't change after initialisation.. Please don't compare bool to true/false.. NeoGeo refers to the two 16-bit code address spaces as P/P0/ROM (read-only, 16-bit only) and P1/PORT (read/write, selectable 8-bit lanes) - the original name of this function makes sense.. It's easier to understand if the bank values are aligned in the LSBs and shifted/multiplied when used.. Same with this - it's easier to understand if the member is the bank number, not converted to an offset here.. The spacing on this if( is inconsistent with the if ( above.. Wouldn't it be better to just template the function and avoid having to do these checks in the critical path on a write?. Surely this line could be lifted out of the loop.. I'm not really sure it's worth adding an imperfect graphics flag for this.  The issues are relatively minor, and they're noted here in the source.. Now that this is WIRTE8 the & 0xff is redundant (it's already definitely no larger than that).. Is it safe to call this after start?  If not it should assert that it isn't started.. Perhaps this one should be straight logerror so unhandled commands are always logged, not just when verbose is on?. Hey, this if ( doesn't match the if( below it!. I can't see why this is non-static.  Also, would utilities for conversion between native filesystem paths and canonical URL fragments be something you'd want in a common place, not in a driver?. Use logerror and the mechanisms using logmacro.h for debug logging, not stuff like this.. Use the osd_printf_* functions rather than rolling your own mechanism like this.. You can restrict this search to the position of the last slash if found.. Would it be better to look for things that are path separators but are not slashes?  That in itself is probably a warning sign.. Does this device really not have a clock input?  If it is clocked but you don't know what the clock is, it shouldn't have the clock defaulted to zero.  Same for other devices.. I strongly suspect this thing shares a clock with the main CPU, and shouldn't have a defaulted clock.. Does this device really not have a clock source?  If it logically has a clock, it shouldn't be defaulted to zero just for convenience.  I'd expect a peripheral like this probably uses the bus clock or core clock of the CPU it's associated with.. Please don't put the { } on the end of a line when the initialiser list is split across multiple lines.. Can this condition ever be true?  For realy to be both less than the minimum and greater than the maximum (because &&), cliprect would have to be an invalid rectangle.. Leftover from something?  At any rate, you should use logerror rather than printf for diagnostic output like this.. Please only use auto type where one or more of the following applies:\n The type depends on template arguments\n The type is very deeply qualified and impractical to type out\n The type is a proxy/iterator to something obvious from context\n The type is a private inner type that you can't use directly by name\nIn this case, auto doesn't even save any characters vs XTAL.\nAlso, this stuff needs to be moved after the headers are included.  It shouldn't have been here in the first place as it messes with pre-compiled header behaviour.. Please use uppercase U and L suffixes for literals - it's easy to visually confuse lowercase l with 1, so we encourage uppercase for both.. As far as I can tell, the definition of FAULT doesn't use b.  Does it shut up the warning if you move the declaration of b after the GPF check?. Spacing is out on this line.  Also please don't put tag() in log messages - logerror (the default output sink for LOG) already prefixes lines with the device tag.. Spacing is off here - you've got if (... (space) and switch(... (no space).  Both are control statements, so they should both have the space.. Please outdent your labels by one level, like:\nswitch (c)\n    {\n    case N:\n        ...\n        break;\n    case M:\n        ...\n        break;. Check the code below - he adjusted the switch statement for the shift.. You've made the spacing asymmetrical here and in many other places.. You've put Allman-like code in a K&R-like file here, and also below.. This doesn't seem to be right at all - if anything this is the reciprocal of what the seek time should be.\n TIME_FULL_STROKE_SEEK is the time to seek across the radius of the recording surface.\n Suppose the disk has 129 physical tracks, seeking by 128 tracks should take TIME_FULL_STROKE_SEEK, and seeking by 64 tracks should take TIME_FULL_STROKE_SEEK / 2.\nSo for the 128 track seek, with your formula, m_num_cylinders is 129 and diff is 128 (ignoring the TIME_PER_ROTATION adjustment for simplicity):\n TIME_FULL_STROKE * m_num_cylinders / diff = TIME_FULL_STROKE * 129 / 128\n Slightly more than TIME_FULL_STROKE - this can't be right.\nFor the 64 track seek, with your formula, m_num_cylinders is 129 and diff is 64 (ignoring the TIME_PER_ROTATION adjustment for simplicity:\n TIME_FULL_STROKE * m_num_cylinders / diff = TIME_FULL_STROKE * 129 / 64\n Almost double TIME_FULL_STROKE - this definitely can't be right.. Using abs on the result of an unsigned subtraction isn't going to end well.  The proper way to make it work is to defensively cast up the results of the divisions to a signed type.. Now you've got mixed case for hex literals - uppercase 0xB1 above and lowercase0x0fabove and below.  MAME code tends to prefer lowercase letters in hex literals, and that's what the code was using before, so I'd recommend sticking with it.. Previously it was callingabson the result of a signed integer subtraction.  You've completely changed the behaviour, and as it is it can't possibly be right.  You seem to fundamentally misunderstand this.. Why are you subtracting the time per rotation here?  TheTIME_FULL_STROKE_SEEK` should be the time the mechanism takes to position the head for a seek of maximum distance.  It's not related to rotation time at all.  Now it's an oversimplification, because for small seeks the head positioning time is dominated by settling time, which is largely independent of the time it takes to seek.\nBut anyway, the time it takes for the desired sector to reach the head is applied below.  This calculation is supposed to involve just the head positioning time.. Since we've been talking about consistency, could you please pick a style and stick with it for enum declarations in this header?  The ones above have the opening brace on the same line as the declaration.  Either make them match this one, or make this one match the others.. It seems to be a little-known fact, but if you supply the body of the member function at declaration point like this, inline is implied - there's no need to explicitly mark them inline.  It makes the lines a bit shorter and less cluttered if you leave out the inline.. This group could do to be const-qualified as they're not supposed to modify state.. Would it be worth at least a logerror for unrecognised opcodes here?. Other way around - int is_JF() const { ..... } - when const-qualifying a method.  Don't worry, I'll fix it on these ones.. Is the 4th parameter here (length) supposed to be a length in pixels, or maximum coordinate?  If it's a length in pixels, you'll need to subtract cliprect.min_x to make it correct.. This kind of change is undesirable - it's better to minimise the scope of variables and keep the delcaration/initialisation close to the point of use.  Also, the \"same as galaxian\" comment is pointless - it tells you no more than the line it's attached to.  Comments like this just add clutter.\nSame applies to the other init functions.\nThe other issue is that this is a legacy code pattern that we're trying to discourage.  Things should be converted to use derived address maps, not add more code to adjust mapping in init methods.. Um, how is this line supposed to compile?. This line can't possibly compile.. This can't compile.. What's the actual reason for removing these?  It's not clear from the description.. This kind of indentation is bad.  There's no need for braces when there are not initialisations or things that need to be unwound, and the case labels don't create scope blocks.  To be honest, it was a lot easier to read in tabular form, but if you must break it up lines, do it in a way that's less visually cluttered, e.g.\nswitch (op)\n    {\n    case 0x6:\n        m_protection_result ^= 0x80; // scrambles\n        break;\n    case 0x9:\n        m_protection_result ^= 0x80; // scrambles\n    ...\n    }. How should I apply priority masking when copying the intermediate bitmap?. There's no point overriding these if you're not doing anything.  Also you have superfluous semicolons.. Is the game playable as originally intended?  If not, the MACHINE_NOT_WORKING flag should be retained.. Please outdent preprocessor directives to the margin - they aren't affected by scope blocks.. You should be looking for Windows platform here, not OSD_WINDOWS, as this is also applicable to the SDL OSD when built on Windows.  Probably better to check defined(WIN32) here.  Same applies for the other platform checks.. Please use widechar versions of these APIs since you're retrieving potentially user-supplied text and the system ANSI codepage is typically not UTF-8 that MAME expects in its strings.. You're doing extra copies here - use std::string &guid to avoid.. The -- should at least be replaced with a Harvard comma, rather than being completely removed.  @Firehawke any comments?. Are you initialising m_handle to a safe value on construction?  I can't see that happening.  If somehow an exception is thrown before you assign it, you might close an invalid handle.  Probably good to initialise it to INVALID_HANDLE_VALUE here.. I think this is the wrong solution.  You should be delaying delivering the transmitted frame to tap/tun by the amount of time it would take for the emulated MAC to get it on the wire.  That depends on the PHY and also how the device works.  Instead you're assuming the emulated MAC can always deliver the entire frame at the point where transmission starts, and kind of enforcing half duplex behaviour as well,. Please don't use macros when constexpr functions are better (multiple evaluation of expressions, etc.).  Also, this can be defined in terms of std::min and std::max.. Please follow the convention used in existing files - space between control keyword and opening parenthesis of control expression, and spaces after semicolon/comma separators.. Why this approach rather than a flat array of uint16_t for the registers with accessors for the common access patterns?. inline qualifier has no effect here and adds clutter - if the body is present at declaration inline is implied.. inline qualifier without body present at declaration generally doesn't produce desired effect.  If you want to suppress export of the body, you should put the inline qualifier on the definition.. Please follow Allman style and put the opening brace on the following line, as is the case for the device class itself.. C++ doesn't use C-style \"structure tags\".  Please don't add unnecessary struct keyword in places like this.  Use references rather than pointers where it doesn't make sense for the argument to be null, and it isn't an array.. Things that operate entirely on an inner structure/class like this should be members of the inner structure/class, otherwise you're passing a useless this pointer for the outer class and need an explicit parameter for the inner structure/class.. You really need to provide member initialisation for the qsound_voice etc. structures for this to work properly, and you don't need the locals, as you can construct a temporary in the call, e.g. std::fill(std::begin(m_voice), std::end(m_voice), qsound_voice());. In cases like this, please declare variables at initialisation and use const where appropriate to reduce mutable state.. Please use nullptr as a null pointer constant.  Also, probably a case for std::fill. Resetting the device would cause the DSP to jump to address zero, causing it to zero its registers and reinitialise.. This should be constexpr, not const - const-qualified return-by value has no effect.. This seems to be a stray comment - I don't actually see it clearing a buffer.. Why is the ROM region bigger than the ROM load commands?  It generally doesn't make sense to do this if you aren't specifying fill for the parts where no ROMs are loaded.  Otherwise you're potentially mapping randomly filled memory in space where there's no ROM.. Please add a BAD_DUMP flag for these.. There input ports are already used by T.T Mahjong - how does it still work when inverting the logic without making any other changes?. If one of these is a licensed version of the other, should it be marked as a clone?. It's generally kept in alphabetical order within a file just to make things easy to find, but that's a minor thing.. This name is far too generic for something in a header that needs to be included in downstream driver sources.  Could someone please either remove it completely if the DSP is in fact working, or at least prefix it with something to make it less likely to class with something equally generically named in another header?. We're deperecating this style of callback configuration - please use devcb3 style bind targets.  See e.g. recent changes by @Osso13 for examples of migration.. This really shouldn't be public - if you're relying on subdevices being able to access it directly, there will likely be a problem if they can't coordinate with each other.. Since namespaces are big, I generally comment on the closing braces to make it clear what it should balance with, e.g.\n} } // namespace bus::hp_dio. Please use bool where appropriate.. Please #include your module header stlforce.h immediately after emu.h and before other headers - this helps ensure that headers #include device headers they need.. Does this device have a standard memory layout?  Should it expose a device map?. Please #include the module header immediately after the prefix header.. If you're going to configure tags, you should template it so it can take other tag-likes (usually object finders).\nBut why does this need to get everything from shares in the host device?  Is it impossible to allocate the memory inside the device itself?  The host devices (in this case drivers) don't seem to access this stuff directly.. Can you please use std::fill rather than memset where possible?  It shows intention better, and x86 CPUs perform better if all accesses to a location use the same access size.. Oh dear, a K&R slipped in!. This isn't actually necessary - child devices are automatically reset.. You might also want to m_iocpu->set_input_line(INPUT_LINE_RESET, state); if the I/O CPU is going to be held in reset while the line is asserted.. The comment style is different on this case label (end of label line vs line of its own).. It's a really bad idea to be doing this on reset.  Devices should be resolving callback on start, so by this time it should be too late if the CPU is resolving callbacks correctly.  You'll definitely know whether you have a DIO bus or not by configuration complete time so there's no need to wait until reset.  It's also not going to change between resets in a session.  But really, this should be done in machine configuration when the DIO bus is added.. I think this is a leftover from copy/pasting - the base shouldn't depend on the implementations.. When we move to C++17, we'll actually be able to write this as namespace bus::hp_hil { with a single opening brace.  I know it's ugly in the mean time, but it will get better.. The trouble with adding util::fifo is it doesn't support save states (it can't because it's in src/lib/util so it can't be aware of things in src/emu).. A mouse shouldn't need the implementation of the device_matrix_keyboard_interface template.... Please don't use ROM_LOAD_OPTIONAL - it just leads to things being lost.. You could do this with a template rather than the four trampolines.. Why not make a derived state class for the systems that have the MSM5205 chips?  Then you can use required device/region finders here and get validation benefits.. What's going on here?  Generally you shouldn't put the same character in two shift states like this.  You can just leave it with a single PORT_CHAR.. The trouble with this is it subverts what \"natural\" keyboard is supposed to do.  Really, the lua interface needs a better way of controlling inputs.  Posting character events just isn't flexible enough.. It's a good idea to still provide a PORT_NAME for keys like this where the PORT_CHAR isn't a printable character.  If you don't, it can mess up the input configuration menu.  Same goes for the other shift/alt/etc. where you've removed the PORT_NAME.. Is it just designed for a cabinet with an inverted monitor?  It wouldn't be the first time.. It's generally not a good idea to make overridden protected base members private.  You want to make it easy to make derived machines classes, and the derived classes should call the overridden methods from their immediate base.  If a derived class needs to call past the immediate base to a base of that, it's usually indicative of bad design somewhere.  Making overridden protected base methods private encourages this kind of stuff.. You should indent line continuations by two levels to make it clear where they start/end, for example:\nfunc(\n        T1 p1,\n        T2 p2);\nThe trouble with making formal value parameters const is it doesn't affect the function signature but it still requires the header to be changed if you decide you want to modify the value in the function for some reason.  (Changes to value parameters are local to the function and don't affect the caller.)  It's not really going to be a problem in a driver header like this, because it's only going to cause the PGM driver files to be recompiled anyway, but it's definitely worth avoiding for widespread devices.  (Reference/pointer parameters should always be const if the function isn't using them as outputs, as the caller can be affected in that case.). The trouble with this change is it now hides the \"branch on uninitialised\" error from Valgrind or similar if a bug causes read_chunk to return PNGERR_NONE without setting the chunk_type output.  Without initialisation, the chunk_type local starts off tainted and won't be marked as set until it's set by read_chunk, but now it's always marked as safe, even though it won't behave properly if the zero is actually used for anything.. The behaviour of this option depends on the audio output module used.  This description doesn't really make sense when I read it, and doesn't describe what the option does for CoreAudio or SDL output.. I'm not sure this description is even correct for DirectSound, but the interpretation of the value depends on the selected module.\nFor example, it controls the buffer size for CoreAudio:\nm_headroom = m_sample_bytes * (clamped_latency() * sample_rate() / 40);\n    m_buffer_size = m_sample_bytes * std::max<uint32_t>(sample_rate() * (clamped_latency() + 3) / 40, 256U);. Have you submitted this upstream (bkaradzic/bx)?  We prefer not to get out-of-sync.. How safe is this?  Does Linux provide a C runtime for 64-bit long double ABI, or alternate versions of the entry points for printf-like functions?  If it doesn't, this will potentially cause stack overruns.. We do it periodically, or when it becomes necessary for compatibility with things.. That patch doesn't allow you to build with against glibc 2.4 or late with -mlong-double-64 - it only provides backwards compatibility for programs built against older versions of glibc.  It assumes that if you're building against a later version of glibc, you're using 128-bit long doubles.. I'm saying that sooner or later it's going to blow up when something in MAME passes a long double to a printf-like function (e.g. osd_printf_warning or something).  You can only safely use 64-bit long double if you can guarantee a long double will never be passed to the C runtime, and that's definitely not the case for MAME.  You can pass those flags on your own make command line if you want, but you get to keep the pieces when it breaks.  I don't want want MAME to build in a way that's known to be unsafe out-of-the-box.\nIt's a GCC bug, and they need to fix it.  It's more important than ever with modern C++ because this bug means that user-defined literal suffixes (introduced in C++11) can't be used for floating-point numbers on 64-bit PowerPC targets with GCC.. No, I'm saying that with its scope, MAME can't guarantee it won't pass a long double to the C runtime library, and hence can't be built safely with non-standard ABI options like this.  There's no way we're going to enforce a rule that developers need to be careful to avoid ever passing a long double to the C runtime library and to look for this when reviewing submissions.  It just isn't practical.  We don't support building with non-standard ABI options on x86 either.\nThe GCC people need to fix their compiler.  A significant piece of language functionality doesn't work, and they can't expect projects to just avoid that because they're unwilling to implement it.\nIn the mean time, you can add additional flags when you build your own MAME binaries, but you need to be aware that this is very much unsupported by us.  It's acceptable for mainline.. You can do this without the trampolines as:\nm_io_sys->irl().set_inputline(m_ppu, HPHYBRID_IRL);\n    m_io_sys->irh().set_inputline(m_ppu, HPHYBRID_IRH);\nWe consider device_execute_interface input lines to be important enough to have special support.. These changes break SDL Windows builds - the Windows C runtime lacks the SUS extension %z.. Fixed this by switching to streams.. This won't work - the names of the parameters are not used for anything.  You can have:\n offset, data, and mem_mask\n offset and data\n data\n any of the above with space as well\nYou can't have other combinations like offset and mem_mask or data and mem_mask.. Look, the device regressed horribly with that change that you did for the prodigy driver.  None of the Mac drivers have worked since.  It's fundamentally wrong in multiple ways, e.g. it pretends there's an extra timer for the shifter when the shifter can only be made to use T2.  Also, it shifts on random edges because it doesn't actually check whether it's a rising or falling edge in the code to update the shifter, which makes the Mac 128k/512k/Plus keyboard randomly not work.  It should have been fixed or reverted long ago.. This one is a command line fragment rather than an INI file fragment.  You could reformat it onto multiple lines without the leading hyphens INI-style or make it bold like other command fragments.. When file fragments are on their own line and indented, they don't need the ` markup to get the fixed pitch formatting and box.. This is a key label, not a filename or file fragment.  Bold is probably better than fixed pitch for this.. Another key label, same comment applies.. Another key label.. Let's make these key labels bold as well.. \"by default\" isn't part of the key label at all.... The debugger command and its abbreviation should be formatted consistently.. \"F12\" is a key label, and there's also a path fragment \"inp\" that hasn't been updated here.. These are in command fragment syntax, not INI fragment syntax.  Either make them bold like other command fragments, or change the syntax to INI syntax.  There are a few more cases of this below.. It will only work if you aren't actually usingmem_mask` for anything.  The memory system will call the handler with the offset and data, but now the mask.  The names of the parameters don't affect how the function is called, only the types.. The main motivation for this is exact colours and precise edges vs uneven pixels, not performance.. Since \"systemname\" isn't literal it should be in angle brackets like \"screen.name\" is.. This needs to be reworded.  Something along the lines of, \"When enabled, MAME preserves the correct aspect ratio for emulated screen images...\"  The part in parentheses should be \"(usually 4:3 or 3:4 for CRT monitors)\" because we have LCDs with all different aspect ratios, and we're starting to emulate workstations that used Sony 5:4 Trinitron CRTs.\nIf you don't do this one, I'll get to it on my next pass over this file.. I need to test again, but I'm not sure how applicable this is to non-Windows - I think you can resize freely but it gives black borders.. This option's behaviour is depends on your operating system and video drivers.  On Windows it blocks until vblank before allowing the application to draw a frame, so it will limit the frame rate to the host screen refresh rate.  On macOS it's effectively transparent buffering - the application will not be slowed down, but the most recent complete frame will be drawn at vblank so if the emulated system has a higher refresh rate than the host, frames will be dropped causing motion judder.. For the scaling options I've tried to clean up the use of \"stretch\" vs \"scale\" in the -showusage output - the same should probably be done here (this option and the ones above it).  See 113f98accc754abe34ce8825ca179a0afb197281. probably better to expand the abbreviation - something like \"Use an OpenGL GLSL shader to perform filtering, rather than using the fixed function pipeline's bilinear filtering.\". -nomax is supposed to cause the window to be sized so that emulated screens are not being shrunk in any dimension, i.e. if there's a single screen with square pixels it will be 1:1 emulated to host pixels, and with non-square pixels it'll be enlarged on one axis only.. It's worth pointing out that this scales the the video by this amount in both axes using nearest-neighbour sampling before applying filtering and/or shaders (but in a less uncomfortable sentence structure than this comment).. There \"where\" in this line should be \"whereas\" or \"while\", amirite?. Is  supposed to be a filename, or are you supposed to jam the map into the command-line argument?  It isn't clear here.  If these maps are example file fragments, use :: (double colon) at the end of this line and extra indentation so they show in a code sample box.. Literal filename is not marked up here.. This is OS-dependent.  On Windows it sends it to the debugger if one is attached (otherwise it goes nowhere) while on other operating systems it goes to standard error output and typically ends up in the terminal window or on the console.. The macros are going away - replace \"VIDEO_UPDATE\" with \"video update\" - it's plain English anyway.  Also, \"during pause\" is ugly, how about \"while emulation is paused\"?. Add an explanatory note \"... 0.0.0.0 (bind to all local IPv4 addresses).\". Same as the one above - could do with an explanatory note.. Probably worth pointing out that this enables additional sliders for overclocking/underclocking various devices.  Also, save states may be incompatible with this option enabled vs disabled.. Needs a note that it only works for drivers that support \"natural keyboard\".. I don't think this change is an improvement: \"closest possible size\" is misleading because pixels on modern desktop displays are a lot smaller than they were on arcade screens; it will specifically enlarge on one access (\"scale\" could mean that it shrinks on one axis).  It's specifically the smallest size where it can do 1:1 pixel mapping in both axes, or 1:1 pixel mapping on one axis and enlarge on the other.. There are lots of other ratios as well, think Gamee & Watch, Nichibutsu 2-player mahjong player LCDs, various LCD notebooks that have square pixels at CGA or EGA resolutions that don't have square pixels on a 4:3 monitor.  If you're going to give a couple of examples, make sure you say \"for example\" or parenthesise it and use \"e.g.\" so it doesn't sound like you're listing all the exceptions.. The -triplebuffer option is Windows-specific, so this note should go with the other Windows stuff.  I'm also not sure whether it works with OpenGL or bgfx on Windows (possibly D3D-specific, but I'd have to look at the code to confirm).. It's \"before applying filtering and/or shaders\" - \"before being scaled\" doesn't make sense because you're saying it's scaled before it's scaled.. It should be \"... data to the system diagnostic output.\". Save states work - they just aren't always compatible with save states created with it off.  If you create a save state with -cheat on it may not load with -nocheat and vice versa.. This won't build properly with precompiled headers disabled - emu.h must be the first thing in each compilation unit.. If you can't call the base class device_start it's usually a sign that the design is broken.  If there's stuff the regular NES APU does that the VT APU doesn't, that should be split into a derived class, so both APUs can use a common base.. This function isn't consistent in formatting within itself - there are extra spaces inside the parentheses for the memset call that aren't used on any of the other function calls here.. Why are the opening braces for these two blocks at the end of a line, when all the others are on their own lines?. Will add a note that this is to be use in conjunction with -playback.. Will mention -aviwrite here.. Will note that this is uncompressed.. I'll make an attempt at this after merging.. I checked - it letterboxes with SDL.  I'll update it.. \"Original resolution\" is kind of a lie given we need to do lowest common multiple tricks for stuff like Zaccaria...  Not worth trying to explain that here though.. The comment about specific video modules is long obsolete - I'll remove it.. This has shell escaping mixed up with what MAME interprets.  Can be fixed later though.. Since you're not using macros any more, you can get rid of the device_remove and use config.replace() in the following line to replace the device in a single step.  Same applies for the controller ports below.. Trampoline constructors should not be public.. This looks a lot like it's a wired-AND configuration - why not bitswap/invert/or/test?  That probably better matches how the hardware behaves.. Do these actually need to use the derived class?  If not, all it does is increase dependencies for no reason since the CPU headers are now included from the header... You could just use { m_eeprom->cs_write(BIT(data, 0)); } etc. to make this less cluttered.. Does this need a fixed width?  can you not tell it to use 100 percent width?. What's the point of this?. Fix your editor if you screw up text encoding, it's a lot of wasted time fixing it.. It would be better to separate this from the stuff directly related to the audio CPU wiht a blank line to keep things clearer.. What have you done to this line?  Ensure your editor isn't adding a zero-width no-break space to the file.. This is a change in behaviour - now it's setting the raw data to one random value and setting the bitmap pixel to a different, unrealated random colour.  To get the same behaviour back you'd need to do something like:\nm_render_line_raw[x] |= (machine().rand() & 0x3f);\n                    lineptr[x] = pen(m_render_line_raw[x]);. This is a bad pattern - the check on the devcb is fast anyway, but now you've got stuff that can potentially get out of sync.  For m_opcode_func you can just use resolve_safe and call it without the check.. When it's already running that much faster than realtime, the speed hit is immaterial.. ",
    "ramiropolla": "Hi,\nThere are no problems in compiling MAME with ccache using gcc, either as prefix or via symlink. clang, on the other hand, will issue a few warnings when being run through ccache. That's why this patch is specific to clang.\nThese warnings are due to the fact that ccache will run clang twice: once to preprocess the source code and then again to compile the preprocessed source code.\nOn the first step, clang will complain about unused arguments (which are only meant for the compilation step), so -Qunused-arguments is needed.\nOn the second step, clang will receive preprocessed code, with stuff like:\ndata = (data);\nWhich in this case will trigger warnings about self assignment. Those warnings aren't issued by clang if it receives the same code through macros (as it would if used normally without ccache).\nThose warnings happen each in quite a few places in the code, that's why I decided to omit the location of the warnings. If you prefer having the location anyways, I can add them (maybe only the fist one for each warning).\nAbout detecting the compiler behind ccache, we can keep using the same method with findstring, since the compiler name will be somewhere in the command line. Detecting whether ccache is running is a little bit tricker, but it is possible. In my patch I used findstring, but this won't work on symlinks. We can use the following test:\nTEST_CCACHE = $(shell $(CC) --ccache-skip --version > /dev/null 2>1; echo $$?)\nifeq ($(TEST_CCACHE),0)\n    # ccache is present\nendif\nAbout emscripten, I don't know if it's worth bundling the checks together.\nTo test, I use:\nmake CC=\"ccache clang\"\nOr you could make make clang a symlink to ccache and run:\nmake CC=clang\nI've updated the patch.\nRamiro\n. Any updates on this patch?\n. Thanks for looking into this! Setting CCACHE_CPP2 works perfectly with a very small performance penalty.\n. I'm setting up a nightlies build box (along with continuous integration maybe), and having this cross-compilation support would help a lot. I had some more large-scale build system changes on my mind =/, but the rest can wait for Micko's reworking.\nBy the way, I only found Micko's roadmap that mentions premake4 on google cache. Why has it been removed from github?\n. I've updated the patchset to contain only \"Run build tools based on build OS\". The other commits could be avoided by tweaking the parameters to make, but it's currently not possible to cross-compile from Linux to Windows without this one commit.\n. $ make buildtools\n$ make TARGETOS=win32 PTR64=1 OSD=windows NATIVE_OBJ=obj/sdl64 CROSS_BUILD=1 CC=x86_64-w64-mingw32-gcc LD=x86_64-w64-mingw32-g++ RC=x86_64-w64-mingw32-windres\n32-bit can be built with\n$ make buildtools\n$ make TARGETOS=win32 PTR64=0 OSD=windows NATIVE_OBJ=obj/sdl64 CROSS_BUILD=1 CC=i686-w64-mingw32-gcc LD=i686-w64-mingw32-g++ RC=i686-w64-mingw32-windres\n. I'd like some help reviewing this code, specially from J Wallace, who seems to have done the most work on steppers. I am not sure all changes are correct, specially in mpu4hw.c.\nThere are a few issues I am not very happy about:\n- awp_draw_reel() taking both reel number and stepper_device &reel as parameter. Maybe this can be fixed later in an awp rework;\n- more code is needed for initialization (class member, machine MCFG, class constructor, and configure) instead of a single stepper_config();\n- duplication of reelX_optic_cb() callbacks. I believe this could be made easier if a new device is introduced which just maps bits to a byte. I don't know what the real hardware for the optic patterns look like though.\n. I'd like some help reviewing this code, specially from J Wallace, who seems to have done the most work on steppers. I am not sure all changes are correct, specially in mpu4hw.c.\nThere are a few issues I am not very happy about:\n- awp_draw_reel() taking both reel number and stepper_device &reel as parameter. Maybe this can be fixed later in an awp rework;\n- more code is needed for initialization (class member, machine MCFG, class constructor, and configure) instead of a single stepper_config();\n- duplication of reelX_optic_cb() callbacks. I believe this could be made easier if a new device is introduced which just maps bits to a byte. I don't know what the real hardware for the optic patterns look like though.\n. Thank you for reviewing, testing, fixing, and updating steppers to the devcb2 interface!\n. ping? this saves a few seconds while building.\n. I'd like to raise a few issues with the new build system, but I don't know where is the proper place to discuss it (I don't seem to be able to file issues for MAME)\n- How can I build for linux clang besides using \"ARCHITECTURE=_x64_clang\"? There should be a clean parameter to use clang.\n- How can I build sdl without qtdebug? There used to be a NO_USE_QTDEBUG flag to disable it.\n- How can see which directory make errored out in? It's useful to be able to copy the command line make was running when the error happened, paste it and tweak it if needed. Recursive makes normally show the directory the error happened, so that you can pushd there and run the command, but now --no-print-directory is used.\n. Thanks for d055017f.\nThere are still a few issues though:\n- Build targets are not documented. For example, to build using clang, one could use \"make linux_x64_clang\". This should be documented somewhere.\n- There is still some misleading documentation in the makefile (for example the comment for supported TARGETOS and the subtargets list).\nAbout the spaces before ellipses, it does indeed look ugly. But I see no benefit of having the ellipses there in the first place. I suggest removing them altogether, so that you get the real filename printed in the console, instead of \"filename...\". You can then easily double click, copy the name, and do any manipulation you want with the file.\n. Result from the printer's self-test can be seen here: https://youtu.be/l20V7f2sM8c\nNow someone needs to implement the noise from the stepper motors and the printhead so that we can get a full dot-matrix-printing experience! =)\n. I had used a dummy centronics driver to test the printer, which can be found here:\nhttps://github.com/ramiropolla/mame/commits/dmcntr\nThis dummy driver allows me to open a pipe in Linux and send data directly to MESS, which then talks directly to the printer. Basically it does 3 things:\n- Opens named pipe for reading and keep it alive;\n- Creates device with a high-level emulation of a centronics port for writing;\n- Connects them together.\nThe code there is very hackish, but I'd really like to know if anyone has any suggestions on how to cleanly implement this functionality. The printer should be able to boot by itself and accept data from anywhere.\n. Oh, yes, that worked. But for some reason I couldn't get the full printer bitmap on screen. The \"printhead\" never shows up on the bottom, along with the bottom lines (which should show what's currently being printed).\n. Perhaps it would be better to have the printer as a separate driver. Two instances of MAME (one for the PC, another one for the printer) communicating through some pipe or socket.\nRegarding the speed, the user manual [1] says \"Fast draft printing of up to 240 characters per second at 12 cpi\". In the self-test there are 96 characters per line and at the fastest speed (between lines 4 and 17) it does 14 lines in around 8 seconds, which is 168 characters per second. So the speed seems about right. I don't have access to the printer anymore, but I know Felipe has an epson lx-300, which claims to be around the same (264 cps) [2]. Felipe, could you check if you get the same speed with the real printer?\nOh, and I definitely want sound. I liked the idea used by the floppy drives, but I think we could even go as far as generating sound based on the steps and the printhead firing.\n[1] https://files.support.epson.com/pdf/ap2k__/ap2k__u1.pdf\n[2] https://files.support.epson.com/pdf/lx300_/lx300_u1.pdf\n. ",
    "fesh0r": "looks like ccache 3.2 should fix the unused-arguments warning, probably safe to just disable that warning unconditionally though?\nreading http://peter.eisentraut.org/blog/2014/12/01/ccache-and-clang-part-3/ and earlier posts, sounds like using CCACHE_CPP2  would be better than disabling the other warnings, if a bit slower\n. ",
    "ZoeB": "Good point, let me see if I can fix them there too!\n. Done.  Thanks for the feedback!  As you might gather, I've only made much smaller C programs and aren't familiar with all these conventions yet.  Thank you!\n. Neat!  Checking it out now, thank you.  I'll stick to fixing typos, capitalisations and the like then. :)  Thanks!\n. Can do!\nI wrote a simple program yesterday that only prints out comments, leaving code alone.  I may make a wordlist based on http://en.wikipedia.org/wiki/Commonly_misspelled_English_words and use that with spell, for starters.  Grammatical errors are a little trickier to find (even for that reasonably straightforward example, something like \"grep '[^Tt][^h][^i]s does' src/mame/drivers/*.c\" is too simplistic), but I'm certainly game to give it a go, sure!\nI'm sure I'm not the first woman to like MAME. :P  Centipede was co-created by a woman, Dona Bailey, remember.  It wasn't until 1984 that it was decided that women shouldn't like programming: http://www.npr.org/blogs/money/2014/10/21/357629765/when-women-stopped-coding  There are good efforts underway to get us back on track.\nI've also managed to get my nieces into Rod-Land, Uo Poko, etc, so that's neat.  It's a shame MAME doesn't yet support Donkey Kong Pauline Edition, even if it never did make it into an arcade, even as a bootleg.  Little things like that would really help, I'm sure.\n. I wasn't aware of HBMAME.  Fantastic, thanks!  I'm glad to hear there are more women contributing to MAME and MESS too, excellent.  Sophie Wilson's great, I went to a talk of hers at Wuthering Bytes last year.  And of course Lynn Conway did some pretty revolutionary work too!\n. Thanks for the recommendation!  I'll check it out.  It looks similar to Pnickies, surely a good thing. :)\n. Huh.  They spelt Millennium correctly on the PCB: http://apple2info.net/images/thumb/3/3d/TME_ArcadeBoard.jpg/480px-TME_ArcadeBoard.jpg  I guess they weren't too consistent. :)  Reverting...\n. I've reverted the Millennium fix, the publicly fix, and the variable fix, so you can pick and choose (or, rather, cherry-pick and squash) which of these you'd like and which you wouldn't.\n. Ack, you're right, COLUM should stay as it is!  Nice catch, thanks.  I'll make a version with \"catagory\" changed but COLUM left well alone, on the offchance that's a combination that would be more useful.  Again, feel free to cherry pick and squash / rebase these as needed to only keep the good changes.\n. ",
    "happppp": "or you could do it in a .lay file, no global macro needed\nOn Mon, Dec 1, 2014 at 11:13 PM, shattered notifications@github.com wrote:\n\n(for the bitgraph driver)\nYou can merge this Pull Request by running\ngit pull https://github.com/shattered/mame _f32d857\nOr view, comment on, or merge it at:\nhttps://github.com/mamedev/mame/pull/61\nCommit Summary\n- add COMPM() macro -- allows to specify monitor rotation angle (nw)\nFile Changes\n- M src/emu/gamedrv.h\n  https://github.com/mamedev/mame/pull/61/files#diff-0 (19)\nPatch Links:\n- https://github.com/mamedev/mame/pull/61.patch\n- https://github.com/mamedev/mame/pull/61.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/61.\n. Thanks for letting us know, but IMHO the driver todo list is for driver\ndevelopers.\n\nOn Wed, Dec 17, 2014 at 10:22 PM, nitrofurano notifications@github.com\nwrote:\n\nmore information about this can be found at\nhttp://www.smspower.org/Development/Palette - thanks for considering this\nfile change proposal! :)\nYou can merge this Pull Request by running\ngit pull https://github.com/nitrofurano/mame patch-4\nOr view, comment on, or merge it at:\nhttps://github.com/mamedev/mame/pull/87\nCommit Summary\n- sms/markIII palette is different from sg1000\nFile Changes\n- M src/mess/drivers/sms.c\n  https://github.com/mamedev/mame/pull/87/files#diff-0 (4)\nPatch Links:\n- https://github.com/mamedev/mame/pull/87.patch\n- https://github.com/mamedev/mame/pull/87.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/87.\n. The previous patch corrected rom names.\nA naming conflict is not a problem in MAME. If it's for having a\nfull-merged MAME romset, I think clrmamepro can handle it fine.\n\nOn Sun, Mar 1, 2015 at 10:45 AM, Thomas Klausner notifications@github.com\nwrote:\n\nIt introduced naming conflicts in two rom sets where the name\nbb9.bin is used for two different roms.\nSigned-off-by: Thomas Klausner wiz@NetBSD.org\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/143\nCommit Summary\n- Revert part of 34d0ee6b.\nFile Changes\n- M src/mame/drivers/mitchell.c\n  https://github.com/mamedev/mame/pull/143/files#diff-0 (4)\nPatch Links:\n- https://github.com/mamedev/mame/pull/143.patch\n- https://github.com/mamedev/mame/pull/143.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/143.\n. Yes, I misunderstood, thanks for clearing it up.\n\nOn Sun, Mar 1, 2015 at 2:04 PM, Guru notifications@github.com wrote:\n\nyou are correct. 2 files with the same name and different CRCs in the same\nROMset is illegal.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/143#issuecomment-76595869.\n. We actually have a tool \"srcclean\" for whitespace cleanup, scheduled to run\nonce with every new binary MAME release.\n\nLook the commit message during release that's usually titled something like\n'cleanups and version bump' if you want to see what it specifically\nchanges. Such whitespace cleanup is not needed to be done manually. :)\nOn Fri, Apr 10, 2015 at 10:30 AM, Vas Crabb notifications@github.com\nwrote:\n\nMerged #157 https://github.com/mamedev/mame/pull/157.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/157#event-277901808.\n. all the bla aside, the \"catagory\" variable typo is ok to fix :|\nThe COLUM one: well, a quick look tells me there's M and P, COLUP and COLUM\n\nOn Sat, Apr 11, 2015 at 2:49 PM, Vas Crabb notifications@github.com wrote:\n\n@mr-t-guru https://github.com/mr-t-guru a global rename can still cause\na shadowing issue. Suppose there's a more global variable called \"address\"\nand a more local variable called \"addres\". The incorrectly spelled variable\ndoesn't shadow the correctly spelled one. But if you rename \"addres\" to\n\"address\" you create a shadowing issue even if you catch all occurrences of\nit, as any code where the variable formerly known as \"addres\" is in scope\nthat tries to access the more global variable will access the more local\nvariable instead as they now have the same name.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/159#issuecomment-91837386.\n. Sorry, it is very unlikely that the chip works this way.\n\nOn Wed, Jun 10, 2015 at 7:21 PM, Ian Karlsson notifications@github.com\nwrote:\n\nDowntown has an issue in MAME where all the music and sound effects play\nat an octave higher than intended (compare the PCB\nhttps://www.youtube.com/watch?v=DBDnFbIDpA8 with how it sounds like in\nMAME today https://youtu.be/e6-Vqz_XJ6A?t=113).\nMy solution is to add a frequency divider config in x1-010 which can be\nused by downtown (if needed, other sets with this problem, however I can't\nthink of any right now).\nThe other solution would be to reduce the X1-010 clock, however this would\naffect the sample rate (which is already low enough in MAME) and waveform\nenvelopes.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/208\nCommit Summary\n- Merge pull request #2 from mamedev/master\n- seta, x1-010: Fix pitch in downtown\nFile Changes\n- M src/emu/sound/x1_010.c\n  https://github.com/mamedev/mame/pull/208/files#diff-0 (5)\n- M src/emu/sound/x1_010.h\n  https://github.com/mamedev/mame/pull/208/files#diff-1 (7)\n- M src/mame/drivers/seta.c\n  https://github.com/mamedev/mame/pull/208/files#diff-2 (1)\nPatch Links:\n- https://github.com/mamedev/mame/pull/208.patch\n- https://github.com/mamedev/mame/pull/208.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/208.\n. ok from me\n\nOn Wed, Jun 10, 2015 at 8:52 PM, Ian Karlsson notifications@github.com\nwrote:\n\nAfter discovering bit 7 in the status register, I implemented it. This\nfixes the pitch in Downtown, and it did not seem to affect any other game\nI've tested so far.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/208#issuecomment-110876059.\n. Please remember the advice that was given to you previously! :)\n\nIndentation in MAME source is 1 tab, not 2 spaces.\nI'm not as strict as Vas, but you should at least be consistent with coding\nstyle. Don't mix them (see icatel_pixel_update vs ioport_r, 2 styles)\nOn Fri, Jun 19, 2015 at 3:15 PM, Felipe Corr\u00eaa da Silva Sanches \nnotifications@github.com wrote:\n\n\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/218\nCommit Summary\n- initial implementation of Icatel driver (brazilian public payphone)\nFile Changes\n- M src/emu/drivers/xtal.h\n  https://github.com/mamedev/mame/pull/218/files#diff-0 (1)\n- A src/mess/drivers/icatel.c\n  https://github.com/mamedev/mame/pull/218/files#diff-1 (303)\nPatch Links:\n- https://github.com/mamedev/mame/pull/218.patch\n- https://github.com/mamedev/mame/pull/218.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/218.\n. IIRC the C352 gets its clock from a programmable clock generator chip. How\nabout emulating that instead?\n\nplenty of time? ^____^ Namco Technodrive pls. (even though not my donation)\nOn Wed, Jul 22, 2015 at 10:09 PM, Guru notifications@github.com wrote:\n\nyeah. I've got plenty of time now :-)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/265#issuecomment-123848144.\n. Please flesh it out a bit more before submitting this driver, this is too\nbare-bones.\n\nOn Wed, Aug 19, 2015 at 10:54 PM, Felipe Corr\u00eaa da Silva Sanches \nnotifications@github.com wrote:\n\n\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/287\nCommit Summary\n- initial skeleton driver for Canon S-80 typowriter\nFile Changes\n- M scripts/target/mame/mess.lua\n  https://github.com/mamedev/mame/pull/287/files#diff-0 (2)\n- M src/mame/mess.lst\n  https://github.com/mamedev/mame/pull/287/files#diff-1 (1)\n- A src/mess/drivers/canon_s80.c\n  https://github.com/mamedev/mame/pull/287/files#diff-2 (54)\nPatch Links:\n- https://github.com/mamedev/mame/pull/287.patch\n- https://github.com/mamedev/mame/pull/287.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/287.\n. we don't wild guess xtals, if it's unknown we put it a value instead. In\nthis case the value is so close to the one from 1942, I'd rather keep it\nas-is.\n\nOn Fri, Oct 9, 2015 at 5:02 AM, kazblox notifications@github.com wrote:\n\n1942p:\ncrystals and divider guessed from this video\nhttps://www.youtube.com/watch?v=xFCDIZ3MI4c\nspcwarp:\nseperated memory map due to different write locations that hunchbkg\ndoesn't use.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/373\nCommit Summary\n- 1942p, spcwarp; (1) XTALs (2) seperate memory map\nFile Changes\n- M src/mame/drivers/1942.c\n  https://github.com/mamedev/mame/pull/373/files#diff-0 (12)\n- M src/mame/drivers/galaxold.c\n  https://github.com/mamedev/mame/pull/373/files#diff-1 (54)\nPatch Links:\n- https://github.com/mamedev/mame/pull/373.patch\n- https://github.com/mamedev/mame/pull/373.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/373.\n. Yes, only inside romsets for now.\nsee for example drivers/hh_ucom4.cpp\n\nOn Mon, May 30, 2016 at 3:33 PM, Felipe Corr\u00eaa da Silva Sanches \nnotifications@github.com wrote:\n\nCan SVGs be rendered as layouts in MAME already? I've not seen this yet. I\ndon't see any SVG file at src/mame/layout/\n@startaq https://github.com/startaq Can you show me an example of this\nworking?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/issues/386#issuecomment-222493767, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/AI11VZ5Pa_P2c1vgVSmVd2ETTAp1FFByks5qGudDgaJpZM4GO539\n.\n. It's less on-topic and inspirational to this issue than the Utah Teapot.\nPlease don't clutter here, this is not a forum.\n\nOn Wed, Mar 23, 2016 at 9:58 PM, Felipe Corr\u00eaa da Silva Sanches \nnotifications@github.com wrote:\n\n[Not sure who did it but...] I think it was a bit rude to simply delete my\nprevious posting in this thread. Anyway...\nAs a technology reference, here's a good usage example of 3d scans and\nphotogammetry that may inspire future efforts for MAME 3D artwork:\nhttp://phys.org/news/2016-03-archaeologists-d-interactive-digital-reconstruction.html\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/388#issuecomment-200540906\n. Hi! This submit form is not for getting help to play with MAME.\nI suggest you to ask on this user forum:\nhttp://www.mameworld.info/ubbthreads/postlist.php?Cat=&Board=mamechat\n(+hint: be more elaborate describing your problem to them)\n\nOn Mon, Oct 26, 2015 at 10:35 PM, Jkhemili notifications@github.com wrote:\n\nFor some odd reason, almost every game I play, it does not work. Why is\nThis so?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/435.\n. Moving stephh's mooncrst notes to galaxian.c is good.\nI wouldn't bother with documentation or improvements to deprecated galaxian\nhw drivers. They're going to be relocated and any other work is a waste of\ntime IMO (...but yeah, it's taking much longer than anticipated)\n\nOn Sat, Oct 31, 2015 at 12:29 PM, kazblox notifications@github.com wrote:\n\nNot sure if anyone agrees on the idea of my descriptions for the old\ndrivers, but the exactly say the current meaning of them, sort of coming\nfrom the words of Haze...\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/447#issuecomment-152725834.\n. In cases the d-pad is like N64 C buttons, the method to hook it up in MAME\nis a joystick with the flag PORT_16WAY.\n\nsome Game & Watch games for example:\nhttps://www.youtube.com/watch?v=K9CoOYqqVLU\nOn Sat, Nov 7, 2015 at 10:15 AM, etabeta78 notifications@github.com wrote:\n\nTypically, new input types got added to MAME/MESS when dozens, if not\nhundreds, of supported machines require them (e.g. mahjong inputs, and\nlater gambling inputs) so that the default mappings can be applied at once\nto them all.\nAlso, this way the emulator offers a reasonable default mapping to users,\nmaking emulation user friendly out-of-the-box.\nBased on these considerations, while the addition of the shoulder buttons\nand hat inputs might make sense (despite having only a bunch of systems\nusing them), most of the patch is not really ok because\n- by changing the geometry mapping of 6 button games, you make uneasy the\n  usage with controllers which are not joypads\n- the new inputs have no default mappings, so that when you launch e.g. gba\n  emulation, the shoulder buttons have to be manually configured\n- the meaning of JOYSTICK_BUTTON1 & 2 is definitely unclear\nIn conclusion, I think that having default mappings to standard buttons and\nallowing users to remap those to different choices when they have an\nappropriate controller capable to better handling hat & shoulder buttons is\nway friendlier than the solution proposed by this patch.\nOn Sat, Nov 7, 2015 at 8:41 AM, Jason Gauci notifications@github.com\nwrote:\n\nJust to be clear: This change doesn't change the default mappings\n(although it might make sense to change them as a result), it adds new\ninputs to capture buttons that are fundamentally different in nature,\nsuch\nas hat switches and shoulder buttons.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/458#issuecomment-154650716.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/458#issuecomment-154666615.\n. Shoulderbuttons: weak-ok from me\n\nJoystick buttons: Besides vage term, it's too rare to be included in the\nMAME core. AFAIK of the systems we emulate, this only includes PS1\ndual-shock, and the arcade version of (Super?) Punch Out.\nhat switch: No, use IPT_JOYSTICK for digital joysticks and d-pads. See my\nother email for how to set it up if the directional input is 4 separate\nbuttons. By the way, don't forget we also have IPT_JOYSTICKLEFT and\nIPT_JOYSTICKRIGHT if there is a use case for more than 1 digital joystick.\nOn Sat, Nov 7, 2015 at 5:08 PM, Shideravan notifications@github.com wrote:\n\nI really liked this new approach, as it turn the device input\nconfiguration more intuitive for the machine which use these shoulders\nbuttons.\nThe games/softwares for these machines, in really was developed with this\nconfiguration set for shoulder buttons in mind.\nThen I don't see a major problem for users that use keyboards and\ncontrollers without shoulders buttons to think the best default way to\nrepresent them for their input...\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/458#issuecomment-154718989.\n. I think you ate a trollbait there Felipe. This guy did the same thing 2\nweeks ago and still pretends to be clueless?\nsee: https://github.com/mamedev/mame/issues/435\n\nOn Tue, Nov 10, 2015 at 11:09 PM, Felipe Corr\u00eaa da Silva Sanches \nnotifications@github.com wrote:\n\n@Jkhemili https://github.com/Jkhemili The MAME developers and\ncontributors are surely working hard to get the emulator working in the\nbest way we can while documenting in a faithful way the technical details\nof the electronic boards of these devices.\nWhile I can understand your complaint, I must note that this kind of\nrequest is not appropriate here in the GitHub issues tracker, as it does\nnot actually present any specific technical issue other than a very generic\nconcern. So this issue must be closed.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/462#issuecomment-155583661.\n. yeah, i see the regression in code so adding a ! is ok.\nBut what's with the extra parentheses?\n\nOn Tue, Dec 15, 2015 at 3:10 AM, MASH notifications@github.com wrote:\n\nThe listxml dosn't output the game samples.\nThis fixed commit: tagmap_t to std::unordered_map or std::unordered_set\nwhere applicable\u2026\n3414b01\nhttps://github.com/mamedev/mame/commit/3414b0166e77c5353373d655e3def0251571722d\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/500\nCommit Summary\n- Fixed listxml sample output.\nFile Changes\n- M src/emu/info.cpp\n  https://github.com/mamedev/mame/pull/500/files#diff-0 (2)\nPatch Links:\n- https://github.com/mamedev/mame/pull/500.patch\n- https://github.com/mamedev/mame/pull/500.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/500.\n. I reject this.\n\nMASH, a while ago you were told to stop the mass device renaming. That\ndoesn't mean you can retry it later.\nOn Mon, Dec 28, 2015 at 7:16 AM, Miodrag Milanovi\u0107 <notifications@github.com\n\nwrote:\nMerged #512 https://github.com/mamedev/mame/pull/512.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/512#event-501116264.\n. Ok, let's say it bluntly. The majority of the active MAME team does not\ntrust that you have the qualifications to be responsible for deciding names\nof emulated devices.\n\nOn Mon, Dec 28, 2015 at 6:02 PM, MASH notifications@github.com wrote:\n\n@hap https://github.com/hap\nNobody told me to stop device renaming.\nWho said this? And why did you reverted it?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/512#issuecomment-167603744.\n. We prevented you from deciding emulated devices names.\n\nOn Mon, Dec 28, 2015 at 7:42 PM, MASH notifications@github.com wrote:\n\nThe new names are good. What are you doing there?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/512#issuecomment-167625133.\n. ah, arjhacker can't read this, you mailed to the internal mailinglist.\n\nAlso, FWIW that global variable Moogly complained about was not a newly\ncreated global. It is declared in osdcore.cpp I believe.\nOn Wed, Dec 30, 2015 at 5:59 AM, R. Belmont notifications@github.com\nwrote:\n\nFirehawke had done some investigation earlier into why -verbose isn't\npicked up at the earliest possible point and had some progress to report\nbut not yet how to fix it correctly. Your patch solved the symptoms but not\nthe underlying problem.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/530#issuecomment-167936940.\n. fine by me if the device is only like this in liberatr\n\nOn Sun, Jan 3, 2016 at 10:50 PM, ajrhacker notifications@github.com wrote:\n\n\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/546\nCommit Summary\n- liberatr: fully disentangle from atarigen, fix typo\nFile Changes\n- M src/mame/drivers/liberatr.cpp\n  https://github.com/mamedev/mame/pull/546/files#diff-0 (54)\n- M src/mame/includes/liberatr.h\n  https://github.com/mamedev/mame/pull/546/files#diff-1 (22)\n- M src/mame/machine/atarigen.cpp\n  https://github.com/mamedev/mame/pull/546/files#diff-2 (50)\n- M src/mame/machine/atarigen.h\n  https://github.com/mamedev/mame/pull/546/files#diff-3 (12)\nPatch Links:\n- https://github.com/mamedev/mame/pull/546.patch\n- https://github.com/mamedev/mame/pull/546.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/546.\n. :) From quick glance, some positive criticism\n\n1) Please add proposed open source license on top of the file, like how\nother drivers have it.\n2) what is the MSC exception for? +#define FUNCNAME PRETTY_FUNCTION\n3) If hardware is very similar to eachother, you may put them all in the\nsame class, no need for 3 separate classes. If one machine has a device the\nother one has not, you may use optional_device\n4) No need for empty driver inits/machine reset/start\nOn Tue, Jan 5, 2016 at 6:05 PM, Joakim Larsson Edstr\u00f6m \nnotifications@github.com wrote:\n\n\nAdded support for Didact mp68a, a 6800 based educactional computer\n  with 7seg display and hex keypad. 7Seg display and keyboard works only from\n  full build.\nAdded skeleton for the Didact md6802, the successor, not yet\n  functional\nAdded skeleton for Esselte 100, another Didact design with a CRT and\n  real keyboard, no ROM dumped yet\n\nFor some reason the driver does not get 7seg support if built alone and I\nhad to start it using the driver name or the 7seg support would also\ndisappear, like this\n./mess64d mp68a -window\nArtwork etc can be found here:\nhttps://drive.google.com/file/d/0B685nj_1DkduaFQ0M2dhMTFtbVU/view?usp=sharing\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/550\nCommit Summary\n- - Added support for Didact mp68a, a 6800 based eduactional computer\n  with 7seg display and hex keypad. 7Seg display and keyboard works only from\n  full build.\nFile Changes\n- M scripts/target/mame/mess.lua\n  https://github.com/mamedev/mame/pull/550/files#diff-0 (1)\n- A src/mame/drivers/didact.cpp\n  https://github.com/mamedev/mame/pull/550/files#diff-1 (562)\n- M src/mame/mess.lst\n  https://github.com/mamedev/mame/pull/550/files#diff-2 (1)\nPatch Links:\n- https://github.com/mamedev/mame/pull/550.patch\n- https://github.com/mamedev/mame/pull/550.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/550.\n. What are you trying to fix, can you be more verbose? The added code is\nhacky IMO.\n\nOn Tue, Feb 2, 2016 at 10:35 PM, Victor Vasiliev notifications@github.com\nwrote:\n\nAlso fixes some bugs without which this feature ends up not very useful.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/602\nCommit Summary\n- Do not read the load/save state filename while sequence is still\n  pressed\n- Do not handle any UI inputs immediately after state load/save\n- Allow saved states to be bound to joystick buttons\nFile Changes\n- M src/emu/ui/ui.cpp\n  https://github.com/mamedev/mame/pull/602/files#diff-0 (49)\n- M src/emu/ui/ui.h\n  https://github.com/mamedev/mame/pull/602/files#diff-1 (1)\n- M src/emu/uiinput.cpp\n  https://github.com/mamedev/mame/pull/602/files#diff-2 (10)\n- M src/emu/uiinput.h\n  https://github.com/mamedev/mame/pull/602/files#diff-3 (2)\nPatch Links:\n- https://github.com/mamedev/mame/pull/602.patch\n- https://github.com/mamedev/mame/pull/602.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/602.\n. No, let's just accept the pull req. I can have a try at cleaning it up\nlater.\n\nOn Wed, Feb 3, 2016 at 2:00 PM, R. Belmont notifications@github.com wrote:\n\nAgree that this is a real bug and should be fixed, and beyond Vas'\nuninitialized variable I don't see any real problems with the code. Hap,\ncould you clarify what you didn't like?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/602#issuecomment-179215429.\n. The concept and feature of autofire is fine by me. I think an\nimplementation of it should be more generic though. The way you have it\nthere, it's only supported on 8 joystick buttons?\n\nOn Sun, Feb 14, 2016 at 11:57 PM, motoschifo notifications@github.com\nwrote:\n\nMamesick has written initial code, then I changed a lot of things:\n- added command line option checking\n- moved submenu to cheat menu (it's a cheat...)\n- redrawn the menu if options changed (for example with shortcut\n  toggle)\n- added gui toggle item\n- added enabled/disabled layout with colored or grayed text, grouped\n  players buttons\n- optimize source code and variables\n- changed a bit of existing cheat code (i.e. I used const instead of\n  numbers 1 and 2)\n- other minor changes\nBefore starting this work I asked permission to Mamesick to extend and\nchange his code.\nIf this request will be accepted, his name should be present in credits.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/618#issuecomment-183998403.\n. Seriously, please read up on some GIT tutorials :)\n\nOn Sun, Mar 6, 2016 at 10:28 AM, johnparker0072 notifications@github.com\nwrote:\n\nClosed #687 https://github.com/mamedev/mame/pull/687.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/687#event-579174124.\n. For reference, here's TI CC40 (cc40.cpp, cc40) in MAME whining about\namnesia if the user exited MAME and didn't press the emulated OFF button\nbefore that. http://tsk-tsk.net/net/temp/cc40_memlost_crop.png\nTI74 and TI95 in ti74.cpp give a similar error. And I believe TI's later\nprogrammable calculators were designed the same way.\n\nNeo Geo Pocket in ngp.cpp also relies on the user to turn off the machine\nbefore exiting MAME. IIRC its BIOS shutdown includes NVRAM management,\nMAMEdev Judge will know for sure.\nIn X68k case, is there a chance of data loss with harddisk write cache and\nsuch? Like on modern PCs.\nOn Sat, Mar 19, 2016 at 11:10 AM, mahlemiut notifications@github.com\nwrote:\n\nThe X68000 would benefit from this sort of option, too. Its power switch\ngenerates an interrupt so that the system can clean things up before\nshutting down. Probably not as critical as what you've described though.\nAnother useful, related idea, would be to support auto-shutdown, for those\nvarious PC (and similar) systems that have OSes that will switch the system\noff for you after logging out.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/728#issuecomment-198679159\n. Yes you are mostly right, I think in most cases (leds, not lamps!) the capacitance is very small. But that means in practice we'd still need to filter from x KHz to typical 60Hz screen. I refuse to get rid of the workaround in the meantime that would make all handheld drivers unusable.\n. After a few moments of thinking: I know leaving the workaround in stubbornly has its cons.\npro = me and users can play\ncon = user is oblivious that there's a workaround. Devs are more reluctant to solve the real problem. It's a shame that in reality I'm the only person currently on the MAMEdev side working on the drivers at hand.\n. I have a question unrelated to this commit. Considering you specifically chose this game, I am assuming you know it well (had it when you were a kid and/or is a favourite of yours). I want to know if you think its emulation is accurate. Is the timing of the spinning bar and electric field supposed to be erratic like this?\n. Board game pieces don't need to be able to receive ioport events, unless\nwe're going to plan moving them automatically. What I have in mind is a\nsprite layer where pieces can be drag-dropped with the mouse manually. A\npiece may have a weight or id so when placed above a button in the layout,\nit would auto-press down.\n\nOr imagine a chess game where the king piece cheeks blush with bright LEDs\nwhen he's in check by the opposite queen. Would that be a (very silly)\nexample of what you meant by receiving ioport events? Are outputs(eg.\noutput_set_led_xx) supported by lua?\nOn Sun, Apr 10, 2016 at 9:55 PM, cracyc notifications@github.com wrote:\n\nCurrently lua can send events via ioports but can't receive them. I'm not\nsure how to do it but it would probably make people who use cheats happy to\nbe able to bind buttons to enable and disable cheats.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/798#issuecomment-208052489\n. Ah, access to OS input devices(via MAME), not emulated input devices. Yes,\nthat's a necessity.\n\nOn Mon, Apr 11, 2016 at 12:44 AM, cracyc notifications@github.com wrote:\n\nYou want the events, mouse movements or keypresses, to be fed to a Lua\nscript and transformed in some way and passed on to the driver, right? If\nso than what I meant is that luaengine can't receive any input currently.\nThere does appear to be some interface for outputs but I haven't tried it.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/798#issuecomment-208086660\n. Why did you make it a ISA device? PCI is supported by MAME core.\n\nOn Sat, May 7, 2016 at 9:07 AM, MoochMcGee notifications@github.com wrote:\n\nThis is based off my implementation in PCem-mooch. 1280x1024x256 doesn't\nwork there, but for some reason it works here.\nWhat works:\nBanked VESA modes up to 1280x1024x256\nWhat doesn't work:\nLinear VESA modes\nAny kind of acceleration\nAny kind of PCI or AGP stuff\n1600x1200 (Hardware bug??? PCem shows this mode as 1856x1200)\nRefresh rates\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/857\nCommit Summary\n- Add preliminary hacky RIVA TNT support\nFile Changes\n- M scripts/src/bus.lua\n  https://github.com/mamedev/mame/pull/857/files#diff-0 (2)\n- M src/devices/bus/isa/isa_cards.cpp\n  https://github.com/mamedev/mame/pull/857/files#diff-1 (1)\n- M src/devices/bus/isa/isa_cards.h\n  https://github.com/mamedev/mame/pull/857/files#diff-2 (1)\n- A src/devices/bus/isa/nv4.cpp\n  https://github.com/mamedev/mame/pull/857/files#diff-3 (474)\n- A src/devices/bus/isa/nv4.h\n  https://github.com/mamedev/mame/pull/857/files#diff-4 (67)\n- A src/devices/bus/isa/svga_nv4.cpp\n  https://github.com/mamedev/mame/pull/857/files#diff-5 (96)\n- A src/devices/bus/isa/svga_nv4.h\n  https://github.com/mamedev/mame/pull/857/files#diff-6 (51)\n- M src/devices/video/pc_vga.cpp\n  https://github.com/mamedev/mame/pull/857/files#diff-7 (6)\nPatch Links:\n- https://github.com/mamedev/mame/pull/857.patch\n- https://github.com/mamedev/mame/pull/857.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/857\n. There is no MAMEUI team. Try the contact address of the MAME fork you're\nusing, probably in the documentation or their website.\n\nOn Mon, May 30, 2016 at 5:53 AM, Justin De Lucia notifications@github.com\nwrote:\n\nWell I assume this can be closed now as I can't really check if it occurs\nin normal MAME.\nSince I'm here, mind if I ask if there's a way I can report this issue\ndirectly to the MAMEUI group/team?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/issues/885#issuecomment-222406843, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/AI11VXeg8Af8QpDNhp2PxFdmulndxcxIks5qGl9UgaJpZM4Ih1wj\n.\n. Let's not convolute it. I think it's simple enough to not need a custom\ngenerator script. If the layout needs improvements, another contributor\nwill find it easier to edit the layout than your script. Especially if\nthey're not used to Python.\n\nOn Wed, May 25, 2016 at 7:15 PM, Felipe Corr\u00eaa da Silva Sanches \nnotifications@github.com wrote:\n\nThis PR removes the layout file and adds a python script that generates\nit. But this is not yet integrated into the build system. Can anyone here\nhelp me with that?\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/898\nCommit Summary\n- python script that generates the patinho feio layout file\nFile Changes\n- D src/mame/layout/patinho.lay\n  https://github.com/mamedev/mame/pull/898/files#diff-0 (515)\n- A src/mame/layout/patinho.py\n  https://github.com/mamedev/mame/pull/898/files#diff-1 (266)\nPatch Links:\n- https://github.com/mamedev/mame/pull/898.patch\n- https://github.com/mamedev/mame/pull/898.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/898\n. Let me advice you on an efficient way to edit .lay: Make a copy of the\nlayout file, put it in mame exe folder/artwork/patinho/patinho.lay\nThen open that file in an editor and start MAME running the patinho\nmachine. Every time you want to check your changes, save and simply press\nShift+F3 to refresh MAME.\n\nWith your script, every change needs a recompile.\nOn Wed, May 25, 2016 at 8:41 PM, Felipe Corr\u00eaa da Silva Sanches \nnotifications@github.com wrote:\n\nOf course, an SVG layout system such as the one described at #386\nhttps://github.com/mamedev/mame/issues/386 would be much better than\nwhat we have nowadays... I actually have an SVG file for this computer\npanel layout, but converting that SVG into a MAME layout XML file is just\ntoo much work do be done manually.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/898#issuecomment-221667595\n. Yup, it depends on the SVG*. Felipe could you show it?\n\n*AFAIK embedded fonts and pictures are not possible yet, correct me if I'm\nwrong. This means text labels will have to be made of bezier curves and\nphoto-realistic artwork isn't possible.\nOn Thu, May 26, 2016 at 2:42 AM, R. Belmont notifications@github.com\nwrote:\n\nDon't the handheld games in fact use SVGs directly as layouts now?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/898#issuecomment-221748421\n. That looks great!\nYou'll need to substitute the embedded font though. I'd also cut out the\nupper half, the button panel will show up very small on a widescreen\notherwise.\n\nOn Mon, Jun 6, 2016 at 12:35 AM, Felipe Corr\u00eaa da Silva Sanches \nnotifications@github.com wrote:\n\nhttps://github.com/felipesanches/PatinhoFeio/blob/master/SVG/Painel_Frontal_PatinhoFeio.svg\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/898#issuecomment-223841997, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/AI11Vbxwgy-r-m4lDxSimgvmkdNAdFB6ks5qI08igaJpZM4Imwv4\n.\n. Peripherals with their own layout, attached to the 'parent' layout? It's a\ngood idea, but not possible with the current system.\n\nOn Mon, Jun 6, 2016 at 4:27 PM, Felipe Corr\u00eaa da Silva Sanches \nnotifications@github.com wrote:\n\nyeah... I've been thinking about that. Perhaps we should have a selection\nof views for a given machine so that the user could alternate between\ndifferent areas of a panel like this. Also, how could I accomodate on\nscreen both the computer front-panel rendering and the peripherals of the\ncomputer, such as the decwriter teletype ?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/898#issuecomment-223975217, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/AI11VZhd2NIFxP33Z0dq2iwWS-6Kslrfks5qJC5kgaJpZM4Imwv4\n.\n. fine by me\n\nOn Fri, May 27, 2016 at 1:10 AM, MASH notifications@github.com wrote:\n\nAdded the original/dumped 2708 roms (1024 bytes) to clone Ozma Wars (set\n2). They were merged with (set 1) since\nthey were added in MAME 0.53.\nAlso added Malcor's PCB info from 1998 to (set 2).\nThe PCB info says that Ozma Wars (set 2) uses Taito's three board colour\nversion of Space Invaders PCB,\nso i added the color maps proms from intruder to it. They matched the\nflyer picture at:\nhttp://flyers.arcade-museum.com/?page=flyer&db=videodb&id=5784&image=2\nWhile (set 1) only differs in 6 bytes from (set 2) i added the proms also\nto (set 1).\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/904\nCommit Summary\n- Added color proms to Ozma Wars.\nFile Changes\n- M src/mame/drivers/8080bw.cpp\n  https://github.com/mamedev/mame/pull/904/files#diff-0 (54)\nPatch Links:\n- https://github.com/mamedev/mame/pull/904.patch\n- https://github.com/mamedev/mame/pull/904.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/904, or mute the thread\nhttps://github.com/notifications/unsubscribe/AI11VacnOnLU12V6dDwdfnE1wCkZItbdks5qFihJgaJpZM4IoCUH\n.\n. That is expected, none means exactly none.\nHowever, it would be friendlier if MAME warned the user if they change\nvideo mode to none in the UI.\n\nOn Sat, Jun 4, 2016 at 8:30 PM, Ant notifications@github.com wrote:\n\nIf MAME v0.174's Video Mode's setting setup from Auto to None, then\nstarting up MAME shows nothing in my very old updated Windows XP Pro SP3\nmachine. Had to reset this by editing its INI file.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/issues/924, or mute the thread\nhttps://github.com/notifications/unsubscribe/AI11VUuoBpQF63vJAqxjVu0ZCVQU2O8Sks5qIcQ_gaJpZM4IuMCF\n.\n. At the moment yes, and don't change it to \"none\" again now that you know\nwhat it does.\n\nOn Sat, Jun 4, 2016 at 9:08 PM, Ant notifications@github.com wrote:\n\nThanks Happppp. So the only way to get GUI back is to edit the INI file? :(\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/issues/924#issuecomment-223772592, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/AI11VTWwIOx4XXrxDG4XpoNa0Tlz8xwHks5qIc0YgaJpZM4IuMCF\n.\n. We'd prefer if you post these kind of emulation bugs to\nhttp://mametesters.org/ and not here :)\n\nOn Sat, Jun 11, 2016 at 5:29 AM, PeladoFeo notifications@github.com wrote:\n\nThat video... of course it was recorded from a real PCB.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/issues/943#issuecomment-225334294, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/AI11VWduUM3vFgELV-zTvycbRRfPE1vfks5qKiulgaJpZM4IzcFp\n.\n. - Comment out some irregularly-patterned mirrors on RAM areas (needs\n  better solution)\n\nInstead of doing a wrong fix and commenting things out, just leave them\nas-is and make a list of remaining errors so other devs can address them. :)\nOn Fri, Jun 17, 2016 at 5:26 PM, ajrhacker notifications@github.com wrote:\n\n\u2026nt restrictions (nw)\n- Update address maps so all drivers pass checks\n- Comment out some irregularly-patterned mirrors on RAM areas (needs\n  better solution)\n\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/962\nCommit Summary\n- Validity checking for AM_MASK/AM_MIRROR/AM_SELECT, based on OG's\n  recent restrictions (nw)\nFile Changes\n- M src/devices/bus/imi7000/imi5000h.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-0 (2)\n- M src/emu/addrmap.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-1 (22)\n- M src/mame/audio/gottlieb.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-2 (2)\n- M src/mame/drivers/8080bw.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-3 (8)\n- M src/mame/drivers/batman.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-4 (20)\n- M src/mame/drivers/blstroid.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-5 (37)\n- M src/mame/drivers/cfx9850.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-6 (2)\n- M src/mame/drivers/cxhumax.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-7 (2)\n- M src/mame/drivers/didact.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-8 (4)\n- M src/mame/drivers/firefox.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-9 (2)\n- M src/mame/drivers/grchamp.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-10 (2)\n- M src/mame/drivers/hyperscan.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-11 (4)\n- M src/mame/drivers/itech32.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-12 (2)\n- M src/mame/drivers/jedi.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-13 (2)\n- M src/mame/drivers/kurukuru.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-14 (2)\n- M src/mame/drivers/looping.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-15 (4)\n- M src/mame/drivers/mac.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-16 (1)\n- M src/mame/drivers/marywu.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-17 (2)\n- M src/mame/drivers/mbc55x.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-18 (2)\n- M src/mame/drivers/midxunit.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-19 (2)\n- M src/mame/drivers/midyunit.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-20 (2)\n- M src/mame/drivers/ms32.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-21 (2)\n- M src/mame/drivers/prof180x.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-22 (2)\n- M src/mame/drivers/pve500.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-23 (2)\n- M src/mame/drivers/rainbow.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-24 (2)\n- M src/mame/drivers/rc759.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-25 (4)\n- M src/mame/drivers/safarir.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-26 (8)\n- M src/mame/drivers/seta.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-27 (3)\n- M src/mame/drivers/skimaxx.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-28 (2)\n- M src/mame/drivers/sothello.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-29 (2)\n- M src/mame/drivers/supracan.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-30 (2)\n- M src/mame/drivers/taito.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-31 (16)\n- M src/mame/drivers/taito_f2.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-32 (2)\n- M src/mame/drivers/timeplt.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-33 (12)\n- M src/mame/drivers/toobin.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-34 (32)\n- M src/mame/drivers/unixpc.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-35 (2)\n- M src/mame/drivers/unkhorse.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-36 (2)\n- M src/mame/drivers/xybots.cpp\n  https://github.com/mamedev/mame/pull/962/files#diff-37 (28)\n- M src/mame/includes/timeplt.h\n  https://github.com/mamedev/mame/pull/962/files#diff-38 (3)\nPatch Links:\n- https://github.com/mamedev/mame/pull/962.patch\n- https://github.com/mamedev/mame/pull/962.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/962, or mute the thread\nhttps://github.com/notifications/unsubscribe/AI11VQwas7D9y4LWocGqIcr3Iox-G3Fcks5qMrysgaJpZM4I4d-X\n.\n. Ok, it looks like you can use AM_MASK to resolve this issue. See latest git\nunkhorse.cpp that I updated just now.\n\nOn Fri, Jun 17, 2016 at 6:26 PM, ajrhacker notifications@github.com wrote:\n\nWhen the old way now gives out fatal errors, leaving that untouched seems\nlike the greater of two evils. The only pathological cases are various\nareas of color RAM in 8080bw.cpp and unkhorse.cpp, where the specified\naddress mirroring for shared memory consists of bits in the middle of the\noffset range.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/962#issuecomment-226815665, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/AI11VVLUmfwHZLyrXJTajwePDJZ6FgI1ks5qMsqmgaJpZM4I4d-X\n.\n. Thanks\n\nOn Fri, Jun 17, 2016 at 8:45 PM, ajrhacker notifications@github.com wrote:\n\nThat's exactly how I just fixed 8080bw.cpp. I also undid the unnecessary\nhandler split in timeplt.cpp.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/962#issuecomment-226850177, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/AI11VUVbuCcEDAB3dBWPiWhcEvQPHghxks5qMutUgaJpZM4I4d-X\n.\n. It's not meant to be a 1:1 representation of existing 7seg leds. This\nlayout element can be used for VFD and LCD as well, so I'd just leave it as\nit is.\n\nOn Tue, Jun 28, 2016 at 12:03 AM, John Parker notifications@github.com\nwrote:\n\nThis more accurately matches the appearance of displays of this type.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/1006\nCommit Summary\n- Increased background brightness of 7 segment display.\nFile Changes\n- M src/emu/rendlay.cpp\n  https://github.com/mamedev/mame/pull/1006/files#diff-0 (4)\nPatch Links:\n- https://github.com/mamedev/mame/pull/1006.patch\n- https://github.com/mamedev/mame/pull/1006.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1006, or mute the thread\nhttps://github.com/notifications/unsubscribe/AI11VYfgOXnpaEZmFPoZkT5cFzgXR8yuks5qQEjBgaJpZM4I_jaC\n.\n. No, there's actually a good solution to this.\nDraw a half-transparent rect over the 7seg panel, see: fxmcr165, h2hbaseb\n\nOn Tue, Jun 28, 2016 at 12:19 AM, John Parker notifications@github.com\nwrote:\n\nAh ok - we were attempting to improve the appearance of layouts for fruit\nmachines. Perhaps I could make a custom element that is fruit machine\nlayout specific?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1006#issuecomment-228893272, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/AI11VXnucIi9r3gHL2ccfWgaGbPHUjchks5qQExtgaJpZM4I_jaC\n.\n. Can't you update GCC to 5.x or 6.x?\n\nOn Fri, Aug 5, 2016 at 8:21 PM, J\u00fcrgen Buchm\u00fcller notifications@github.com\nwrote:\n\nFWIW the problem persists with gcc-4.9.4\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1189#issuecomment-237925036, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI11VcFZlbsXCgQJ8Atj-zRh9EpPo_r_ks5qc38YgaJpZM4Jc7tE\n.\n. probably related: I saw Pernod mention that BIOS selection is broken and\nnow lists every device.\nref: http://imgur.com/a/1sEIQ\n\nOn Tue, Aug 9, 2016 at 4:02 PM, MASH notifications@github.com wrote:\n\nAll bios names in -listxml are now wrong. See 18wheelr:\n<rom name=\"epr-21576g.ic27\" merge=\"epr-21576g.ic27\" bios=\"bios0\" ...\n<rom name=\"epr-21576e.ic27\" merge=\"epr-21576e.ic27\" bios=\"bios0\" ...\n<rom name=\"epr-21576d.ic27\" merge=\"epr-21576d.ic27\" bios=\"bios0\" ...\nmust be\n<rom name=\"epr-21576g.ic27\" merge=\"epr-21576g.ic27\" bios=\"bios1\" ...\n<rom name=\"epr-21576e.ic27\" merge=\"epr-21576e.ic27\" bios=\"bios2\" ...\n<rom name=\"epr-21576d.ic27\" merge=\"epr-21576d.ic27\" bios=\"bios3\" ...\nIn src\\frontend\\mame\\info.cpp (MAME 0.176) this:\nfor (const rom_entry *brom = rom - 1; brom != m_drivlist.driver().rom;\nbrom--)\nwas changed to this now\nauto entries = rom_build_entries(m_drivlist.driver().rom);\nfor (const rom_entry *brom = entries.data(); !ROMENTRY_ISEND(brom); brom++)\nIf you changed:\nfor (const rom_entry brom = entries.data(); !ROMENTRY_ISEND(brom); brom++)\nto\nfor (const rom_entry brom = rom - 1; !ROMENTRY_ISEND(brom); brom--)\n-listxml worked again!\nmame -listxml sometimes crashed/stops at games roadblstcg and roadblstgu\n(atarisy1.cpp),\nbut if you exclude this games src\\mame\\mame.lst it creates a complete\nlistxml.\nThe ROM_STARTs and BIOS entries in roadblstcg and roadblstgu must be wrong.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/issues/1216, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AI11VX6irXqvBA_dtstNX8JkUN2dmdwvks5qeIhZgaJpZM4JgG-o\n.\n. It's the one from the TAB menu. (press TAB in the middle of the game,\nselect BIOS Selection)\n\nOn Tue, Aug 9, 2016 at 9:04 PM, Scott Stone notifications@github.com\nwrote:\n\nGIT as of 9705b0c\nhttps://github.com/mamedev/mame/commit/9705b0ccb150ce04ada0fce8cd07b02badcef77a\n(9 hours ago) seems ok before starting when I start mame64 and select metal\nslug X from menu, it shows me all the neogeo bioses as expected. Tested\nboth 5.4.0 and 6.1.0 toolchains, full mame build in 64-bit. 32-bit from\n6.1.0 also looks ok. 5.4.0 of 32-bit untested.\nThe BIOS listing as mentioned above via -listxml does seem to be an issue,\nthough.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/issues/1216#issuecomment-238657135, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI11VQfVg8vTQxKo1_Tbgos1463MI3AUks5qeM8_gaJpZM4JgG-o\n.\n. It's merged in now.\nThe BIOS Selection problem I described still persists.\n\nOn Tue, Aug 9, 2016 at 11:35 PM, npwoods notifications@github.com wrote:\n\nDid you see pull request #1208 https://github.com/mamedev/mame/pull/1208\n?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/issues/1216#issuecomment-238699456, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI11Vc2VK0VCv3GWfkPrxZ9yBPPEXn9eks5qePK9gaJpZM4JgG-o\n.\n. Isn't there still plenty code by you in those files?\nIf it's due to not wanting your real name associated, you could change it\nto a nickname :)\n\nOn Fri, Aug 19, 2016 at 11:51 PM, Dankan1890 notifications@github.com\nwrote:\n\n\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/1276\nCommit Summary\n- Brought back to the right holders of copyrights. (nw)\nFile Changes\n- M src/frontend/mame/ui/auditmenu.cpp\n  https://github.com/mamedev/mame/pull/1276/files#diff-0 (2)\n- M src/frontend/mame/ui/auditmenu.h\n  https://github.com/mamedev/mame/pull/1276/files#diff-1 (2)\n- M src/frontend/mame/ui/custmenu.cpp\n  https://github.com/mamedev/mame/pull/1276/files#diff-2 (2)\n- M src/frontend/mame/ui/custmenu.h\n  https://github.com/mamedev/mame/pull/1276/files#diff-3 (2)\n- M src/frontend/mame/ui/custui.cpp\n  https://github.com/mamedev/mame/pull/1276/files#diff-4 (2)\n- M src/frontend/mame/ui/custui.h\n  https://github.com/mamedev/mame/pull/1276/files#diff-5 (2)\n- M src/frontend/mame/ui/datfile.cpp\n  https://github.com/mamedev/mame/pull/1276/files#diff-6 (2)\n- M src/frontend/mame/ui/datfile.h\n  https://github.com/mamedev/mame/pull/1276/files#diff-7 (2)\n- M src/frontend/mame/ui/datmenu.cpp\n  https://github.com/mamedev/mame/pull/1276/files#diff-8 (2)\n- M src/frontend/mame/ui/datmenu.h\n  https://github.com/mamedev/mame/pull/1276/files#diff-9 (2)\n- M src/frontend/mame/ui/defimg.ipp\n  https://github.com/mamedev/mame/pull/1276/files#diff-10 (2)\n- M src/frontend/mame/ui/dirmenu.cpp\n  https://github.com/mamedev/mame/pull/1276/files#diff-11 (2)\n- M src/frontend/mame/ui/dirmenu.h\n  https://github.com/mamedev/mame/pull/1276/files#diff-12 (2)\n- M src/frontend/mame/ui/icorender.h\n  https://github.com/mamedev/mame/pull/1276/files#diff-13 (2)\n- M src/frontend/mame/ui/inifile.cpp\n  https://github.com/mamedev/mame/pull/1276/files#diff-14 (2)\n- M src/frontend/mame/ui/inifile.h\n  https://github.com/mamedev/mame/pull/1276/files#diff-15 (2)\n- M src/frontend/mame/ui/menu.cpp\n  https://github.com/mamedev/mame/pull/1276/files#diff-16 (2)\n- M src/frontend/mame/ui/miscmenu.cpp\n  https://github.com/mamedev/mame/pull/1276/files#diff-17 (2)\n- M src/frontend/mame/ui/miscmenu.h\n  https://github.com/mamedev/mame/pull/1276/files#diff-18 (2)\n- M src/frontend/mame/ui/moptions.cpp\n  https://github.com/mamedev/mame/pull/1276/files#diff-19 (2)\n- M src/frontend/mame/ui/moptions.h\n  https://github.com/mamedev/mame/pull/1276/files#diff-20 (2)\n- M src/frontend/mame/ui/optsmenu.cpp\n  https://github.com/mamedev/mame/pull/1276/files#diff-21 (2)\n- M src/frontend/mame/ui/optsmenu.h\n  https://github.com/mamedev/mame/pull/1276/files#diff-22 (2)\n- M src/frontend/mame/ui/selector.cpp\n  https://github.com/mamedev/mame/pull/1276/files#diff-23 (2)\n- M src/frontend/mame/ui/selector.h\n  https://github.com/mamedev/mame/pull/1276/files#diff-24 (2)\n- M src/frontend/mame/ui/selgame.cpp\n  https://github.com/mamedev/mame/pull/1276/files#diff-25 (2)\n- M src/frontend/mame/ui/selgame.h\n  https://github.com/mamedev/mame/pull/1276/files#diff-26 (2)\n- M src/frontend/mame/ui/selsoft.cpp\n  https://github.com/mamedev/mame/pull/1276/files#diff-27 (2)\n- M src/frontend/mame/ui/selsoft.h\n  https://github.com/mamedev/mame/pull/1276/files#diff-28 (2)\n- M src/frontend/mame/ui/sndmenu.cpp\n  https://github.com/mamedev/mame/pull/1276/files#diff-29 (2)\n- M src/frontend/mame/ui/sndmenu.h\n  https://github.com/mamedev/mame/pull/1276/files#diff-30 (2)\n- M src/frontend/mame/ui/starimg.ipp\n  https://github.com/mamedev/mame/pull/1276/files#diff-31 (2)\n- M src/frontend/mame/ui/submenu.cpp\n  https://github.com/mamedev/mame/pull/1276/files#diff-32 (2)\n- M src/frontend/mame/ui/submenu.h\n  https://github.com/mamedev/mame/pull/1276/files#diff-33 (2)\n- M src/frontend/mame/ui/toolbar.ipp\n  https://github.com/mamedev/mame/pull/1276/files#diff-34 (2)\n- M src/frontend/mame/ui/utils.cpp\n  https://github.com/mamedev/mame/pull/1276/files#diff-35 (2)\n- M src/frontend/mame/ui/utils.h\n  https://github.com/mamedev/mame/pull/1276/files#diff-36 (2)\nPatch Links:\n- https://github.com/mamedev/mame/pull/1276.patch\n- https://github.com/mamedev/mame/pull/1276.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1276, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AI11VTVLdYxo5rvA9FCf-Qy72w8MafCyks5qhiVTgaJpZM4Jo4mu\n.\n. That's a lot of extra code for correcting coords. Is this trial&error, or\ndid you study the 68k disasm and reverse the algorithm?\n\nOn Mon, Aug 22, 2016 at 5:50 AM, Patrick Lessard notifications@github.com\nwrote:\n\nPatch that calculate offsets making the game playable.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/1289\nCommit Summary\n- Fix for Mametesters BugID #1455\nFile Changes\n- M src/mame/drivers/segas18.cpp\n  https://github.com/mamedev/mame/pull/1289/files#diff-0 (145)\nPatch Links:\n- https://github.com/mamedev/mame/pull/1289.patch\n- https://github.com/mamedev/mame/pull/1289.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1289, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AI11VSf9-YMjgEKPkLqNUo0C-EvyCCZVks5qiRxpgaJpZM4Jpfa8\n.\n. I'm ok with this PR actually\n\nOn Fri, Aug 26, 2016 at 2:15 PM, R. Belmont notifications@github.com\nwrote:\n\nIs there some reason we couldn't just add a fake dip that allowed turning\nthis correction off for the 1 person in all of history that's going to run\nMAME with the original h/w for this? I mean, this seems like such an\nobvious win for 99.9% of MAME users that I can't believe we're going to\ndiscard it.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1289#issuecomment-242719658, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI11VdlopCYndk5s9PVAo404vb46135Aks5qjtjbgaJpZM4Jpfa8\n.\n. Anyway, let me take care of it. I will also add the option to disable it.\n\nWithin our aim for accurate emulation, there are limits to workarounds like\nthese. This one is fine I think, and looks like RB is ok with it too.\nOn Fri, Aug 26, 2016 at 3:49 PM, hap revertebrae@gmail.com wrote:\n\nI'm ok with this PR actually\nOn Fri, Aug 26, 2016 at 2:15 PM, R. Belmont notifications@github.com\nwrote:\n\nIs there some reason we couldn't just add a fake dip that allowed turning\nthis correction off for the 1 person in all of history that's going to run\nMAME with the original h/w for this? I mean, this seems like such an\nobvious win for 99.9% of MAME users that I can't believe we're going to\ndiscard it.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1289#issuecomment-242719658, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI11VdlopCYndk5s9PVAo404vb46135Aks5qjtjbgaJpZM4Jpfa8\n.\n. I think interpolation belongs in MAME's sound core. Sarayan(OG) has it on\nhis evergrowing TODO :)\n\n\nOn Mon, Aug 22, 2016 at 4:39 PM, superctr notifications@github.com wrote:\n\nThis should improve the current HLE sound emulation a bit until the DSP is\nfinally hooked up... I'm still not that sure about the chip frequency\n(sample rate), it seems a little too low for a DSP but I won't touch that\nwithout more knowledge.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/1291\nCommit Summary\n- qsound: add sample interpolation\n- (nw)\nFile Changes\n- M src/devices/sound/qsound.cpp\n  https://github.com/mamedev/mame/pull/1291/files#diff-0 (52)\n- M src/devices/sound/qsound.h\n  https://github.com/mamedev/mame/pull/1291/files#diff-1 (3)\nPatch Links:\n- https://github.com/mamedev/mame/pull/1291.patch\n- https://github.com/mamedev/mame/pull/1291.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1291, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AI11VRwTnI4pCxsoq7WYkvtPnxJmaR-2ks5qibSSgaJpZM4Jp8Hz\n.\n. A good resampler will interpolate the stream(waveform). If you think about\nit, interpolating twice (before mixing channels and after) doesn't have a\ndifference in the end.\n\nOn Mon, Aug 22, 2016 at 5:49 PM, superctr notifications@github.com wrote:\n\nThe effects from this commit are separate from the effect of improving\nthe sound.cpp resampler. Both when together will have the best output.\nOn Mon, Aug 22, 2016 at 5:15 PM, hap notifications@github.com wrote:\n\nI think interpolation belongs in MAME's sound core. Sarayan(OG) has it on\nhis evergrowing TODO :)\nOn Mon, Aug 22, 2016 at 4:39 PM, superctr notifications@github.com\nwrote:\n\nThis should improve the current HLE sound emulation a bit until the\nDSP is\nfinally hooked up... I'm still not that sure about the chip frequency\n(sample rate), it seems a little too low for a DSP but I won't touch\nthat\nwithout more knowledge.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/1291\nCommit Summary\n- qsound: add sample interpolation\n- (nw)\nFile Changes\n- M src/devices/sound/qsound.cpp\n  https://github.com/mamedev/mame/pull/1291/files#diff-0 (52)\n- M src/devices/sound/qsound.h\n  https://github.com/mamedev/mame/pull/1291/files#diff-1 (3)\nPatch Links:\n- https://github.com/mamedev/mame/pull/1291.patch\n- https://github.com/mamedev/mame/pull/1291.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1291, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/\nAI11VRwTnI4pCxsoq7WYkvtPnxJmaR-2ks5qibSSgaJpZM4Jp8Hz\n.\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1291#issuecomment-241457249, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI11VcLzSULCEAL43pDDocKMVUpmKpNNks5qicT-gaJpZM4Jp8Hz\n.\n. We may have simply overlooked some of Siftware's dumps in the past. In\nother cases it could be deemed a bad dump of an existing set. Did you check\nif this one is not the latter case?\n\nOn Wed, Aug 24, 2016 at 12:31 AM, MASH notifications@github.com wrote:\n\nNew Clone Added\nChampion Base Ball (Japan set 3) [Siftware, MASH]\nRom: blue1.zip\nSet is missing palette + look-up table proms, use the ones from (Japan set\n1).\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/1305\nCommit Summary\n- Update champbas.cpp\n- Add files via upload\nFile Changes\n- M src/mame/drivers/champbas.cpp\n  https://github.com/mamedev/mame/pull/1305/files#diff-0 (23)\n- M src/mame/mame.lst\n  https://github.com/mamedev/mame/pull/1305/files#diff-1 (1)\nPatch Links:\n- https://github.com/mamedev/mame/pull/1305.patch\n- https://github.com/mamedev/mame/pull/1305.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1305, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AI11VbN6_V5Cc9QR6xNpvB-34mEd4skZks5qi3S6gaJpZM4JrdTW\n.\n. Ok, rom seems good.\n\nOn Wed, Aug 24, 2016 at 4:53 PM, hap revertebrae@gmail.com wrote:\n\nWe may have simply overlooked some of Siftware's dumps in the past. In\nother cases it could be deemed a bad dump of an existing set. Did you check\nif this one is not the latter case?\nOn Wed, Aug 24, 2016 at 12:31 AM, MASH notifications@github.com wrote:\n\nNew Clone Added\nChampion Base Ball (Japan set 3) [Siftware, MASH]\nRom: blue1.zip\nSet is missing palette + look-up table proms, use the ones from (Japan\nset 1).\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/1305\nCommit Summary\n- Update champbas.cpp\n- Add files via upload\nFile Changes\n- M src/mame/drivers/champbas.cpp\n  https://github.com/mamedev/mame/pull/1305/files#diff-0 (23)\n- M src/mame/mame.lst\n  https://github.com/mamedev/mame/pull/1305/files#diff-1 (1)\nPatch Links:\n- https://github.com/mamedev/mame/pull/1305.patch\n- https://github.com/mamedev/mame/pull/1305.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1305, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AI11VbN6_V5Cc9QR6xNpvB-34mEd4skZks5qi3S6gaJpZM4JrdTW\n.\n. Please test your work when you make a PR :)\nI fixed it for you this time.\n\n\nC:\\Dev\\MAME\\git_mame>m champbasjb\nDriver champbasjb (file champbas.cpp): 2 errors, 0 warnings\nErrors:\n   HD44801 device 'alpha_8201:mcu': program space memory map entry 0-7FF\nreferences non-existant region ':alpha_8201:mcu'\n   HD44801 device 'alpha_8201:mcu': program space memory map entry F40-FBF\nreferences non-existant region ':alpha_8201:mcu'\nOn Wed, Aug 24, 2016 at 5:40 PM, hap revertebrae@gmail.com wrote:\n\nOk, rom seems good.\nOn Wed, Aug 24, 2016 at 4:53 PM, hap revertebrae@gmail.com wrote:\n\nWe may have simply overlooked some of Siftware's dumps in the past. In\nother cases it could be deemed a bad dump of an existing set. Did you check\nif this one is not the latter case?\nOn Wed, Aug 24, 2016 at 12:31 AM, MASH notifications@github.com wrote:\n\nNew Clone Added\nChampion Base Ball (Japan set 3) [Siftware, MASH]\nRom: blue1.zip\nSet is missing palette + look-up table proms, use the ones from (Japan\nset 1).\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/1305\nCommit Summary\n- Update champbas.cpp\n- Add files via upload\nFile Changes\n- M src/mame/drivers/champbas.cpp\n  https://github.com/mamedev/mame/pull/1305/files#diff-0 (23)\n- M src/mame/mame.lst\n  https://github.com/mamedev/mame/pull/1305/files#diff-1 (1)\nPatch Links:\n- https://github.com/mamedev/mame/pull/1305.patch\n- https://github.com/mamedev/mame/pull/1305.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1305, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AI11VbN6_V5Cc9QR6xNpvB-34mEd4skZks5qi3S6gaJpZM4JrdTW\n.\n. Could you please make your commit messages more meaningful?\nDescribe the changes instead of this:\n- Update galaga.cpp\n- Update xevious.cpp\n- Update xevious.h\n\n\n\nOn Thu, Sep 8, 2016 at 8:12 PM, R. Belmont notifications@github.com wrote:\n\nMerged #1379 https://github.com/mamedev/mame/pull/1379.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1379#event-782824227, or mute the\nthread\nhttps://github.com/notifications/unsubscribe-auth/AI11VTVXr4pS0KKkAsENgZx_EXQ8kasRks5qoFAIgaJpZM4J38oy\n.\n. Merge them in your git client before submitting the PR.\n\nOn Thu, Sep 8, 2016 at 8:57 PM, MASH notifications@github.com wrote:\n\nOk. I will add some test mext time. But is there a way to merged all in one\nfor a 'Pull requests' viva WEB base edit?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1379#issuecomment-245703014, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI11VW0YjHZms3KIAcO00tYLFATCYQoCks5qoFqjgaJpZM4J38oy\n.\n. That's the situation as it is now. Your PR is opening the Potato Rings bag\nand pouring the contents into an empty Hula Hoops bag. :P\n\nOn Sun, Sep 18, 2016 at 3:58 PM, gamez-fan notifications@github.com wrote:\n\nHaze You dont agree with this i fully understand, i come at it from a\ndifferent perspective as i was brought up and taught sometimes your best to\nmake the best of a bad situation. Your from the same country as me so im\nsure you'll get this Hula Hoops analogy...............\nI love Hula Hoops but their \u00a31 a bag and i only have 50p but there is\nsomething similar Potato Rings made by Tesco which are 50p a bag i then\nhave two options i can simply do without or i can buy the\nPotato Rings sure their not as good as Hula Hoops but they'll do in the\nmeantime.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1418#issuecomment-247849227, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI11VcNMJurPAEcBkW91cWoMhi7_GiS_ks5qrUOHgaJpZM4J_nmP\n.\n. Because they added that later?\nThe MINGW package(updated with 'pacman' tool) is at gcc 6.1.0\n\nOn Mon, Sep 19, 2016 at 5:55 PM, Michael Zapf notifications@github.com\nwrote:\n\nHmm ... you're also using gcc ... why does my 5.3.1 not complain?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/issues/1426#issuecomment-248034057, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI11VUxMreoJfKmfZ8lPJ-AHs-bfalWjks5qrrBhgaJpZM4KApHo\n.\n. Oh, Miso Kim is using GCC 5.3.0, hmm yeah then it's weird it's not detected\nin 5.3.1 :|\n\nOn Mon, Sep 19, 2016 at 6:20 PM, hap revertebrae@gmail.com wrote:\n\nBecause they added that later?\nThe MINGW package(updated with 'pacman' tool) is at gcc 6.1.0\nOn Mon, Sep 19, 2016 at 5:55 PM, Michael Zapf notifications@github.com\nwrote:\n\nHmm ... you're also using gcc ... why does my 5.3.1 not complain?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/issues/1426#issuecomment-248034057, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI11VUxMreoJfKmfZ8lPJ-AHs-bfalWjks5qrrBhgaJpZM4KApHo\n.\n. Uppercase letters in rom/image swlist filenames is a validation error? We\nshould be more lenient, we already allow this on MAME's internal romdefs.\n\n\nOn Sun, Oct 23, 2016 at 2:18 PM, Rebecca Wallander <notifications@github.com\n\nwrote:\n\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/1549\nCommit Summary\n- Fix a bunch of validation errors.\n- Undo some collateral damage.\nFile Changes\n- M hash/a2600.xml\n  https://github.com/mamedev/mame/pull/1549/files#diff-0 (38)\n- M hash/a800_flop.xml\n  https://github.com/mamedev/mame/pull/1549/files#diff-1 (50)\n- M hash/apple2.xml\n  https://github.com/mamedev/mame/pull/1549/files#diff-2 (20)\n- M hash/apple2gs.xml\n  https://github.com/mamedev/mame/pull/1549/files#diff-3 (4)\n- M hash/casloopy.xml\n  https://github.com/mamedev/mame/pull/1549/files#diff-4 (4)\n- M hash/gameboy.xml\n  https://github.com/mamedev/mame/pull/1549/files#diff-5 (2)\n- M hash/hp9845b_rom.xml\n  https://github.com/mamedev/mame/pull/1549/files#diff-6 (2)\n- M hash/ibm5150.xml\n  https://github.com/mamedev/mame/pull/1549/files#diff-7 (98)\n- M hash/ibm5170.xml\n  https://github.com/mamedev/mame/pull/1549/files#diff-8 (96)\n- M hash/lynx.xml\n  https://github.com/mamedev/mame/pull/1549/files#diff-9 (2)\n- M hash/megadriv.xml\n  https://github.com/mamedev/mame/pull/1549/files#diff-10 (4)\n- M hash/mo5_cart.xml\n  https://github.com/mamedev/mame/pull/1549/files#diff-11 (2)\n- M hash/msx1_cart.xml\n  https://github.com/mamedev/mame/pull/1549/files#diff-12 (2)\n- M hash/segacd.xml\n  https://github.com/mamedev/mame/pull/1549/files#diff-13 (4)\n- M hash/sg1000.xml\n  https://github.com/mamedev/mame/pull/1549/files#diff-14 (6)\n- M hash/sms.xml\n  https://github.com/mamedev/mame/pull/1549/files#diff-15 (10)\n- M hash/supracan.xml\n  https://github.com/mamedev/mame/pull/1549/files#diff-16 (2)\n- M hash/tutor.xml\n  https://github.com/mamedev/mame/pull/1549/files#diff-17 (8)\nPatch Links:\n- https://github.com/mamedev/mame/pull/1549.patch\n- https://github.com/mamedev/mame/pull/1549.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1549, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AI11Vbafmpj3DFna3l5bShUzZrKGUNI2ks5q21CXgaJpZM4KeHiU\n.\n. AFAIK the autochecker doesn't do a full compile.\n\nOn Thu, Oct 27, 2016 at 6:55 PM, Joakim Larsson Edstr\u00f6m \nnotifications@github.com wrote:\n\nIt passed, must be something wrong in my setup then. maybe the GCC 6.x\nlinker...?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1581#issuecomment-256704759, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI11VZjfn1moc6nhY_VIK1OfuVqbyiOQks5q4NeBgaJpZM4Kieza\n.\n. I don't think it's a black & white issue. We probably shouldn't accept\nsuper trivial ones, for example where button 1 is changed to \"Jump\" and\nbutton 2 to \"Punch\". More complex control schemes like this one are better.\n\nMASH can you clarify this? Are they buttons? Jamma pins? or what?\nIt makes me think of a cab link option. Don't implement them like this, but\nas a read function.\n-   PORT_BIT( 0x00001000, IP_ACTIVE_LOW, IPT_OTHER ) PORT_NAME(\"RIGHT of\n  DOUBLE\") PORT_CODE(KEYCODE_C)     /* RIGHT of DOUBLE /\n-   PORT_BIT( 0x00002000, IP_ACTIVE_LOW, IPT_OTHER ) PORT_NAME(\"DOUBLE\n  SYSTEM\") PORT_CODE(KEYCODE_V)       /* DOUBLE SYSTEM /\n-   PORT_BIT( 0x00004000, IP_ACTIVE_LOW, IPT_UNUSED )\n-   PORT_BIT( 0x00008000, IP_ACTIVE_LOW, IPT_OTHER ) PORT_NAME(\"4 COIN\n  COUNTERS\") PORT_CODE(KEYCODE_B)     /* 4 COIN COUNTERS */\nOn Thu, Oct 27, 2016 at 10:29 PM, R. Belmont notifications@github.com\nwrote:\n\nMy understanding is that we are currently looking for someone to move\nPORT_NAMEs to an external data file and don't want to accept more of them\nin order to incentivize that happening. If you can separate that part out\nof the patch the reset is probably OK.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1582#issuecomment-256759771, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI11VURrHdFhjOXJyTL5qsW0XqJQmyLYks5q4QmngaJpZM4KijJ8\n.\n. Ok, then something like this instead:\n- PORT_BIT( 0x00001000, IP_ACTIVE_LOW, IPT_SPECIAL ) /* TODO: RIGHT of\n  DOUBLE /\n- PORT_BIT( 0x00002000, IP_ACTIVE_LOW, IPT_SPECIAL ) /* TODO: DOUBLE SYSTEM\n  /\n- PORT_BIT( 0x00004000, IP_ACTIVE_LOW, IPT_UNUSED )\n- PORT_BIT( 0x00008000, IP_ACTIVE_LOW, IPT_SPECIAL ) /* TODO: 4 COIN\n  COUNTERS */\n\nOn Fri, Oct 28, 2016 at 1:50 AM, MASH notifications@github.com wrote:\n\n@hap https://github.com/hap\nI didn't found any informations about the RIGHT of DOUBLE, DOUBLE SYSTEM\nand\n4 COIN COUNTERS button. So i decided to add them as keys.\nDon't implement them like this, but as a read function.\nDon't know how? Can you please do it!\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1582#issuecomment-256801573, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI11VVcqERxkjfEDYNWG_sRVwLIswRpXks5q4Ti5gaJpZM4KijJ8\n.\n. -> #1586 \n. You didn't need to create a new PR, more than 1 commit is possible per PR,\neveryone's doing it. If you don't know how, look it up :)\nThanks for clearing up the fake buttons. I'd like a 3rd dev to merge it.\nRight now it's:\nRB: not ok\nme: ok\n3rd vote needed to cut the tie. It's like X Factor, where's Simon? :P\n\nOn Fri, Oct 28, 2016 at 7:29 AM, MASH notifications@github.com wrote:\n\nI used the 'Service Mode' in Space Lords, the manual and a Flickr picture\nto fixed the controls.\nManual: www.gallopingghostarcade.com/qr/spacelords/manual.pdf\nControls: http://www.flickr.com/photos/10707024@N04/26548492116\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/1586\nCommit Summary\n- Fixed input in Space Lords\nFile Changes\n- M src/mame/drivers/atarigx2.cpp\n  https://github.com/mamedev/mame/pull/1586/files#diff-0 (38)\nPatch Links:\n- https://github.com/mamedev/mame/pull/1586.patch\n- https://github.com/mamedev/mame/pull/1586.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1586, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AI11Vf0GQFnEo7ehocEh1_TNFvekVI-zks5q4YgzgaJpZM4KjF5V\n.\n. Is this firmware freely distributable? If it isn't, please don't attach it\nto a public PR.\n\nOn Thu, Nov 3, 2016 at 3:26 PM, fulivi notifications@github.com wrote:\n\nHi,\nI've just pushed a set of commits where I re-implemented the 98035 RTC\nmodule of HP9845\nsystem at a low level. This is now possible because Mr. Kueckes dumped the\nfirmware ROM\nfor me.\nIn order to emulate the module at a low level, I also had to implement the\ndriver for its\n\"nanoprocessor\" microcontroller. The nanoprocessor disassembler is already\n\"Nathan Woods\"ized (i.e. it uses ostream's) :)\nI'm planning to use the nanoprocessor again for the 98034 driver I'm going\nto work on in the\nnear-ish future (have the firmware ROM for this one, too).\nI'm repeating here the instructions to read the current time from the\nmodule.\nIf you want to try to read the real time clock from the card, you need to\nstart MESS with\nthese options:\n\"-optrom1 iob:lpu_rom -optrom2 iob:ppu_rom -slot0 98035_rtc\"\nThen type & run the following BASIC program:\n10 OUTPUT 1;\"R\"\n20 ENTER 1;T$\n30 PRINT T$\n40 END\nIt should print the time in the month:day:hours:minutes:seconds format.\nI'm attaching the new rom-set of 9845B with the 98035 firmware.\nThanks.\n--F.Ulivi\nhp9845b.zip https://github.com/mamedev/mame/files/569220/hp9845b.zip\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/1637\nCommit Summary\n- nanoprocessor: initial support. Disassembler only is known to work\n  at this point.\n- nanoprocessor: fixed format strings. Execution of code seems ok.\n- nanoprocessor: minor fixes\n- nanoprocessor: added CB to read state of input DC lines\n- nanoprocessor: using ostream in disassembler now\n- hp9845: re-implemented the 98035 RTC module at a low-level as I have\n  the\n- nanoprocessor: a bit more info on NP\n- hp9845: cleanups & more info in 98035 driver\n- hp9845: minor fix to graphic video subsystem\nFile Changes\n- M scripts/src/cpu.lua\n  https://github.com/mamedev/mame/pull/1637/files#diff-0 (16)\n- M scripts/target/mame/mess.lua\n  https://github.com/mamedev/mame/pull/1637/files#diff-1 (1)\n- M src/devices/bus/hp9845_io/98035.cpp\n  https://github.com/mamedev/mame/pull/1637/files#diff-2 (1031)\n- M src/devices/bus/hp9845_io/98035.h\n  https://github.com/mamedev/mame/pull/1637/files#diff-3 (125)\n- A src/devices/cpu/nanoprocessor/nanoprocessor.cpp\n  https://github.com/mamedev/mame/pull/1637/files#diff-4 (525)\n- A src/devices/cpu/nanoprocessor/nanoprocessor.h\n  https://github.com/mamedev/mame/pull/1637/files#diff-5 (138)\n- A src/devices/cpu/nanoprocessor/nanoprocessor_dasm.cpp\n  https://github.com/mamedev/mame/pull/1637/files#diff-6 (135)\n- M src/mame/drivers/hp9845.cpp\n  https://github.com/mamedev/mame/pull/1637/files#diff-7 (1)\n- M src/tools/unidasm.cpp\n  https://github.com/mamedev/mame/pull/1637/files#diff-8 (2)\nPatch Links:\n- https://github.com/mamedev/mame/pull/1637.patch\n- https://github.com/mamedev/mame/pull/1637.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1637, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AI11VQknrC6DdwYVh-85udyLhxVUUWDBks5q6e8NgaJpZM4Koa5o\n.\n. Yes, that is a better way :)\n\nOn Thu, Nov 3, 2016 at 6:25 PM, fulivi notifications@github.com wrote:\n\nI'm sorry, I promise I won't do that again...\nWhat would be the correct way to send the ROM images to those doing\ntesting, etc.?\nShould I send them to code@mamedev.org?\nThanks.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1637#issuecomment-258213359, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI11VYVZlteYSnfykDV8Dq5-mSaMkazZks5q6hj6gaJpZM4Koa5o\n.\n. AM_RANGE is inclusive. Even though it's commented out, did you mean 0x8bff?. You can remove default: altogether. It's impossible(both on the real chip and this emulation) for (ttl74145_data & 0x0f) to be a different value than 0,1,2,4,8.\n\nThen, simply change:\nuint8_t digit_nbr = 4;\nto: uint8_t digit_nbr = 0;\nCompiler and/or test tools will probably complain too if left unitialized.. I'd just name it megadriv_bootleg.cpp. Let's say for example you'd find a home version of a standalone game Megadrive bootleg, it can be placed in this driver too(instead of making megadriv_home_clones just because it doesn't have a coin slot?). This is a 2-bit output, keep the & 3.. Don't put constructor body on the same line, more like this:\nm_blah1(x),\n        m_blah2(x)\n    {\n        std::fill(std::begin(m_sample_rom_offset), std::end(m_sample_rom_offset), 0);\n    }. Nope it shouldn't be reverted, this was an obvious typo from https://github.com/mamedev/mame/commit/649c169c2ffb5daa68925114fce0d6d1159d61c0#diff-3cb160bd796b24b4e23eaef590cd5696R276\n0x500 is Pentium.. That's fine, it's common to underclock(or even overclock) chips. The block underneath can be replaced with copybitmap_trans.. That's not a very nice workaround. What methods did you try? If there really is no other way, can't you pretend this internal rom is external?. @cuavas Haze requested you to clarify your code review here. Or did you already tackle it in \"do stuff modern way (nw)\"? You should mark these Resolved then.. Hm yes, I've marked all as resolved and the PR still says \"Changes requested\". Anyway, this PR can be merged then, and should have been 10 days ago, sorry for the delay.. Aspect ratio here is copy-pasted from the dkong2 driver.\nIf the SVGs are the same size as the ones you sent me earlier today, height for both screens is 1266/2.. Could you make region length same as file length? For the other screen too. Let's say breakpoint[0] changes length, and breakpoint[1] changes type, then this is true. But if only one breakpoint changes type or length, it is false. Is this correct?. FYI these can be set with clip.set(minx, maxx, miny, maxy), or even while declaring, like: rectangle clip(minx, maxx, miny, maxy). This is ((old_val & 0xffff0000) != (new_val & 0xffff0000)). You can add a comment that explains what it means, instead of taking it through verbose code.. ",
    "yz70s": "First time i am doing this, hope all goes well :smile:\n. This patch seems to make assumptions about the host processor running the emulator.\nIf some exception flags were previously set not beacuse of the current sse instruction, but because of something else inside the emulator, those flags will be set even in the emulated processor where they souldn't be.\nThen there is the call to fesetround() that will effect all calculations, even those done outside the processor core. Consider also a system with two emulated processors with different rounding modes.\n. The easy way is to backup the current mode, set the new one, execute the instruction and restore the old mode.\nThe other way is to rewrite all the sse mathematical instructions to use the softfloat library.\n. I close this because is superseded by  #133\n. You do not need to add the python folder in the path.\nIf the mame build tools have been installed in c:\\buildtools , as an example, you can use\nmake vs2015 PYTHON_EXECUTABLE=c:/buildtools/usr/bin/python.exe\nAnd if you want to build an executable with only a single driver, use (substitute drivername with the name of the driver)\nmake vs2015 SUBTARGET=drivername SOURCES=src\\mame\\drivers\\drivername.cpp PYTHON_EXECUTABLE=c:/buildtools/usr/bin/python.exe\n. Mame build environment has its own copy of git installed (so you cannot use your installation of git for windows from a bash command prompt started by win32env.bat)\nIn your case the /home/Howard directory is actually c:\\msys64\\home\\Howard\n. I am going to check it soon, since chihiro sends more than 1 command per packet :)\nChihiro uses a cypress ezusb chip with the uart of its internal 8051 cpu\n. Ok checked it and in fact it does support more than one command per packet\n. ",
    "ghost": "technically I don't think there is anything wrong with this, but it would be nice if button names could be handled as external files, especially for 'obvious' buttons, otherwise it has the potential to add a lot of code bloat that will have a negative impact on build / link times etc. because in many cases the only difference between input port definitions would be the names.\nFWIW I also feel we should handle dipswitch name definitions in external files too for the same reason.\nhowever, as we're not there yet, so I'm not rejecting this outright, I'll let somebody else decide if we need / want it.\n. the roadmap is now at \nhttps://github.com/mamedev/roadmap\n. Nobody has commented on this, so I'm just going to merge it.\n. merged manually\n. it is listed in my paper manual, and the one found at TAMDB. It is used when losing all lives then continuing. A discount is given to continue. So for example if 2 coins are required to start the game, the discount can be set to 1 coin to continue. it gives the player an incentive to pump more money into the machine ;-)\n. you are correct. 2 files with the same name and different CRCs in the same ROMset is illegal.\n. can you (or someone) also add the correct Romanization?\nTranslating I get.....\n94 fiscal three major title challenger handicap Collection\nSuccessive Qisheng anthology\nKikai Overlord Den-classic Hen\nKikai Overlord Den and contemporary Hen\n. Here's the last version from cart KS-1010 showing all 10 games.....\nhttp://members.iinet.net.au/~lantra9jp1/gurudumps/temp/Pasogo_Carts.jpg\n. the original set 'daioh' with roms fg001001.u3 and fg001002.u4 (which you removed!) was dumped at least 10-15 years ago (probably by Al Kossow judging by the PCB layout) and is definitely not a hack. the rom names match the PCB ascii layout in the src and also correspond with the standard way Seta ROMs were labelled at the factory.\nit shoudn't be removed IMO.\nwhy do you think it is a hack?\n. .- ROM_LOAD16_BYTE( \"fg001001.u3\", 0x000000, 0x080000, CRC(e1ef3007) \n.- ROM_LOAD16_BYTE( \"fg001002.u4\", 0x000001, 0x080000, CRC(5e3481f9) \n.+ ROM_LOAD16_BYTE( \"fg1-001.u3\", 0x000000, 0x080000, CRC(104ae74a) \n.+ ROM_LOAD16_BYTE( \"fg1-002.u4\", 0x000001, 0x080000, CRC(e39a4e67) \nlooks to me like the original set with crc e1ef3007 and 5e3481f9 has been removed from the src and replaced with the daioha roms (u3/u4). surely not correct......\n. so you're saying at some point in the past the \"hacked\" set got promoted to the original parent set?\n1. the hacked set shouldn't be totally removed regardless because of lack of proof. maybe it was converted at the factory to run on a different board that they had excess stock of.... we just don't know. leave it there and add any new sets with a different (clone) name.\n2. the ascii layout clearly shows the rom names of the original set (dumped 10-15 years ago) are \"FG-001-001\" and \"FG-001-002\" etc and should not have been renamed, regardless! the original rom names as per the Daioh ascii PCB layout in the src should be kept.\n. I'm not going to do anything. you are messing with it, you can fix it or your merge will be nak'd ;-)\nseriously though, don't mess with what is there already.\npromote the original original Daioh set (with rom names that match the PCB layout in the src) to parent\nmove the 'hacked' set to set1 (without the hack text unless you have definitive proof as to why it was hacked and exactly which PCB it ran on, including a photo of the 'bootleg' PCB)\nadd your new 'location' set\n. p.s. if you want, also add the summary from your previous post with the code changes as a note above the daioha set when re-added showing what is changed and say it's possibly a hack/bootleg.\n. ok thats fine now. \nI see the location test PCB is using many EPROMs instead of the large capacity mask ROMs. Out of curiosity, have you got a pic (or link to pic) of the location test PCB?\nAlso, have you passed the ROMs to someone on the team and/or made them available anywhere? \nAs per MAME rules, new games can't be added unless the ROMs are available publicly.\n. btw, the prototype / location test version has some bad tiles on the background of the titlescreen, possibly due to it being a proto, but it would be good to know that the roms were read at least twice when it was dumped to rule out any potential dumping problem.\n. Does this just boot the IPL4-ROM or does it actually run other ROM dumps? Does it support controller input or does it only run video?\n. My bad, images weren't loading for me (School's internet sucks). Is there a difference between the IPL4 and IPL ROM or did I just screw up the names?\n. Oh thanks I didn't know that. I've had the idea of writing an emulator for quite some time but I never got around to actually beginning the development process until now (Guess you beat me to it). Good job man.\n. WOW! A girl interested in MAME. That must be a first. Everyone be very quiet and don't make any sudden moves, we don't want to scare her off.... ;-)\nThanks for taking the time to fix those mistakes (but yeah, don't touch whitespace ;-)\nI wanted to point out another related issue.... since MAME is coded by many people and some of them don't use English as their first language, there are a lot of broken English or grammar errors in the source. So you could make corrections there too if you wanted :-)\nI don't want to point fingers so I will just say here is one example....\nhttps://github.com/mamedev/mame/blob/master/src/mame/drivers/hng64.c#L631\nthe comment should be something like \"TODO: reads to i/o but coins don't work?\"\nOr \"TODO: reads to i/o but coins are not working?\"\nOr \"TODO: reads to i/o but coin is not working?\"\nOr even \"TODO: reads to i/o but coin doesn't work?\" (i.e. just drop the s off 'coins' since in this case coin = coins)\nYou can check things online using sites like this....\nhttp://www.reverso.net/spell-checker/english-spelling-grammar/ or MS Word or other word processors with Proofing Tools.\nIf you check this example there it corrects it to 'don't work'\n. besides HBMAME (that sadly i can\u2019t find it available in Debian/Ubuntu repository, in some ppa, get-deb, tarballs or whatever... :S ), i think MAME, by default, could be more flexible for running homebrews (for example, via EmulationStation, it's difficult to have PacMan and PacManicMinerMan in the same directory - alternatedly and optionally, a kind of metafile inside the .zip file (saying which machine is to be emulated for opening the rom files) would be great... ) - since months ago, i was getting a lot of fun using Boriel\u2019s ZX-Basic Compiler for making experiences on hardware emulated by MAME http://www.boriel.com/wiki/en/index.php/ZX_BASIC:Released_Programs#Arcade_Systems (only experiences there for now, i really have to code \"real\" stuff soon! :D ) - and developing homebrews might be an interesting tool for improving MAME emulation when comparing the emulation with the same content burnt into roms and socketed on the real hardware \n. I agree. unless there is a legitimate US/UK spelling difference, the\nspelling of any dictionary word, including variable names should be correct.\nGuru\nOn Sat, Apr 11, 2015 at 9:04 AM, balr0g notifications@github.com wrote:\n\nI don't know if I would call \"publically\" legitimate. Most authoritative\nsources consider it at least nonstandard, and many consider it wrong.\n\"Third Millenium\" is correct as-is \u2014 see\nhttp://apple2info.net/index.php?title=The_Arcade_Board .\nAs for variable renames: I'm not sure how the developers other than\n@cuavas https://github.com/cuavas feel about this, but personally it\nreally irks me if I'm working with code with such misspellings. And\nvariable names change pretty-frequently as-is. Personally I'd rather have\ncorrectly spelled variable names over the temporary convenience of not\nhaving to refresh autocomplete data.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/159#issuecomment-91734883.\n. if a full source-wide rename is done there shouldn't be issues since all\naffected variables are renamed.\nI seem to recall Aaron did this many times in the past. Sure he was working\non the code but it's still just a variable renamed and if all of them are\nchanged through the entire source codebase it functions exactly the same as\nbefore the rename. only now it looks more professional because the spelling\nis correct ;-)\n\nOn Sat, Apr 11, 2015 at 3:28 PM, Vas Crabb notifications@github.com wrote:\n\nMessing with variable and function names also has greater chance of\ncausing conflicts when people are working on the code, and causing\nunintended side-effects if you unintentionally end up shadowing a global or\nmember. I still don't think it's a good idea to just change variable names\nwhen you aren't doing any other work on the code, but if you're going to,\nat the very least do a build with -Wshadow and test affected drivers.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/159#issuecomment-91784113.\n. the solution is to plan and be smarter from the start and to NOT use\nkeywords or commonly used computer terms as variables. If you want to use\nsome common computer-word like \"address\" as a variable you are just asking\nfor trouble. If you miss-spell it and continue to use the miss-spelled\nversion multiple times that is just lazy or stupid (or both).\nhence the use of long obscure multi-word variables through-out MAME that\nare easily mass-renamed without errors.\nanyway I'm not going to argue with you about it. She should probably just\nstick with non-code changes/corrections anyway because she doesn't have a\nMAME-background or knowledge of the MAME-Way(tm)\n\nOn Sat, Apr 11, 2015 at 8:49 PM, Vas Crabb notifications@github.com wrote:\n\n@mr-t-guru https://github.com/mr-t-guru a global rename can still cause\na shadowing issue. Suppose there's a more global variable called \"address\"\nand a more local variable called \"addres\". The incorrectly spelled variable\ndoesn't shadow the correctly spelled one. But if you rename \"addres\" to\n\"address\" you create a shadowing issue even if you catch all occurrences of\nit, as any code where the variable formerly known as \"addres\" is in scope\nthat tries to access the more global variable will access the more local\nvariable instead as they now have the same name.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/159#issuecomment-91837386.\n. so it should be done. MAME can't get any worse ;-)\nMaybe ZoeB can look into it and make a real improvement so we can eventually enable -Wshadow\n. Keep in mind, this is my first commit so if there is any problems tell me\n. I completely messed up on this pull request\n. so you are just guessing without any evidence of what the real display had and added that comment into the src on a whim? I would like to hear one reason why your comment shouldn't just be removed immediately. you should voice your concerns directly to the team and/or driver author, not in the source.\n. again, you are just guessing without having any real knowledge of the hardware and in a driver that is not working anyway. personally I think you should voice your concerns directly to the team and/or driver author, not in the source.\nin any case the final decision to merge this should go with the driver author (in this case Andrew Gardner) or someone who has worked on LD hardware and then they should just correct the problem without the comment.....\n. directly to the team is not equal to adding a comment in the source that is a total guess in a driver that is flagged as non-working.\nsomeone who wrote a driver originally might do that as a reminder to himself about various things (Haze and Angelo do it all the time) but in most cases when things are figured out the guess comments are removed or updated to more factual info.\nIn this case I'm talking about discussing it either directly with the driver author via email or discussing it on a forum or irc, or wherever devs are hanging around these days.\nadding comments to the driver source asking devs to think about or look at something is not the way to do it. And as Angelo said in the other pull by the same guy, if he thinks he has a fix, just submit the fix not add a comment about it.\n. the laser disc hardware is quite rare so that's unlikely ;-)\n. we tend not to name 'obvious' buttons as it would just bloat the structures.\n\nwe should probably support a way of doing this with external files in all honesty.\n(likewise DIP definitions will probably end up being moved to xml files like the softwarelist hashes, pulled into the emulation by dipswitch devices - I already have some concept code for that but it isn't submission worthy yet)\n. heh! I have influenced almost every driver in MAME in some way or other with either dumps or hardware info/readme's, running trojans to crack protection etc etc since around 2000 (so 15 years work so far), and almost none of them have my name in the copyright (not that I really want it). my point is you would need to do a lot more than change a few text button labels to have your name in lights ;-)\nas far as button names, if you can show a control panel for the game that provides those button labels then I think the labels are warranted. otherwise if they are unlabelled on the real cab (or just generic names) they will also be unlabelled on MAME.\n. I checked the labels in your pull request and I have to agree they are worthwhile and valid.\nPerhaps even necessary because there are so many chop-sockey beat'em-ups with many buttons and it's not so clear which button does what initially. if there are labels on the control panel to inform the player we should also do the same in the source with matching button labels. saying that it bloats the source is a pretty lame excuse. its just a bit of text on the end of the port line. it doesn't even add any lines, it just extends the line a few extra characters. there are plenty of other things that bloat the source more than information about button labels. and as balr0g stated, more information is better.\nIf it were up to me I'd say submit the changes again minus the copyright credits etc. and they can be accepted. \nI have a compromise.... there really should be a default set of button labels for beat'em-ups because there are so many games with the same set of button labels. perhaps something else to add to the source to bloat it further.... ;-)\nseriously though, this will reduce bloat if we have a one-off define for a default set of chop-sockey beat'em-up button labels. that will save at least a million characters alone in cps1/cps2/cps3.....\n. in the define the order doesn't matter. the define simply adds a custom button text.\nin the source you put the defines wherever they need to go.\ni.e.\nbutton 1 (chop1)\nbutton 2 (chop2)\nbutton 3 (chop3)\nor\nbutton 1 (chop3)\nbutton 2 (chop1)\nbutton 3 (chop2)\nthe important part is the chop1/chop2/chop3 are pre-defined and standardized. there are hundreds of those defines in MAME for many different types of inputs. just check the specific src file for all of them and add some more.\n. clang build works, although GCC doesn't according to Travis. not sure why...\n. Yeah, most likely a AppVeyor/Travis VM running out of memory error due to large binary size.\n. agreed. but not all games in Seta2.c ;-)\nthe Funcube games DO have stereo output :-)\n. yeah, we're definitely interested in including things like this, looks like there might be a few compile issues with it tho.  please ensure somebody on the team has access to the ROM images so that it can be tested.\n. I've spoken about this kind of obfuscation in the past. putting the divider somewhere else just forces someone who needs to know the real clock rate to look for another file and work it out.\nIMO putting it in another file isn't helping documentation(which is the primary purpose of MAME).\nif the final clock is wrong just fix it in the driver. a couple of repeated texts in several drivers isn't going to blow out MAME to several gigs. as RB says 'MAME can use your HDD space with impunity'\n. I'm just saying it obfuscates the code. anyway, if there is an internal divider inside the chip, surely the divider should be exclusively in c352.c and the game driver shouldn't need to be touched?\n. yeah. I've got plenty of time now :-)\n. I measured the clock frequency on the clock generator IC on at least one of my boards and that is what was documented. no guesses there.\n. restarting pull request\n. uh what the fuck did I just do\n. 1/3 of this commit (the color improvement) is worthless really since the actual color generation has been discovered, but I am not bothered to emulate it yet.\nConsider this pull request static and unmergeable and untouched until someone rewrites the video emulation.\n. AppVeyor build failed with the following:\n\"Build execution time has reached the maximum allowed time for your plan (60 minutes).\"\n. the name \"Attach\u00e9\" will probably end up being mangled by the cleanup script before a release.\n. I didn't know there was such a thing as a 'too bare bones' skeletons.. that's the whole point in them...\n. is this going to be improved (new device or derived device for the Pico sound?)\nshould it be closed?\n. I've refactored your SegaPico changes here\nhttps://github.com/mamedev/mame/commit/8abb4014f330944ef2d18f6eaba4b9ce677da75f\nplease create new pull requests for anything else you want including as there were multiple other changes included in this single request.\n. VIDEO_UPDATE_AFTER_VBLANK is generally a bit of a hack to cope with cases where sprite buffering is missing.  I'll apply this anyway because it's no worse than what we already have, but it shouldn't really be considered a correct solution.\n. Ok. Thank you.\n. do you want this request closing?\n. merging, but the validity errors on the softlist need fixing.\n. bootlegs normally don't have constructive names on the labels, or even PCB locations. if yours does then fine but for shared ROMs (i.e. ROMs that have a matching CRC32 used on original PCBs) we leave the names as-is.\nyou can add a comment to each line on the bootleg to show the bootleg ROM names/locations if you want, but the ROMs used on the original should remain untouched. this ensures ROMs can be merged without overlapping.\n. as I have said, any unique ROMs you can label any way you want.\nif there are ROMs that also exist on the original such as is common with the gfx/sound etc, those names should be left as-is because those ROMs are from the parent.\nand as I just said, if you want to add a comment on the end of each line stating where that ROM goes on the bootleg, go ahead.\nthere's no point having 2 roms with the same CRC32 and having different filenames.\nyou add a comment on the end of the line if the name/location is different on a bootleg.\nthere are hundreds of those comments in MAME src already. this is the procedure to follow.\n. we use the labels as per the PCB, often bootlegs have different ic locations too even if the content is the same, so using proper labels / positions for each board is important, even if said board is a bootleg.  this submission is fine...\n. I'm fully aware bootleg PCBs have different locations.\nin hundreds of other drivers there are bootlegs using the parent rom names with comments showing the bootleg name/location. should we fix all of those possibly 1000's of items too?\nwhat about rom merging? 2 roms with the same CRC32.\nI dont see why an added comment isn't good enough. it's just a bootleg it's not that important and the comment with location will suffice for any repairs.\n. it's still a mess of contradictions in terms of consistency but fine then go ahead and commit it (I care less about this now than I did 12 hours ago ;-)\n. > should we fix all of those possibly 1000's of items too?\nwe go over things fixing them all the time, a lot of choices made in the past were made when we were all young(er) and a little naive.\nyes, multiple bootlegs could exist with the things having different names, in those cases we can start to add comments about the other boards, and yes a comment stating where 2 roms in another set are joined / split to make the bootleg is handy too.\nthe key thing is providing a service to the people with the boards, and a mixed up mash up set of rom labels from original boards and a bootleg is far less useful than just using the bootleg labels.  I'm going to merge this.\n. How bleak and pathetic is this. The code change is good and correct. If this is the current way of MAME development, good to know. No feeds and/or answers after a week. I'm not here for the glory like other Developers probably are. No more from me. Request closed. Go ahead, MAMEDevs.\n. Sorry, I don't believe you.\nCuriously, after a week of silence, I closed the patch and received an answer. That was expected.\nHave a nice day. Nothing personal.\nGiulio\n----Messaggio originale----\nDa: notifications@github.com\nData: 24/09/2015 13.26\nA: \"mamedev/mame\"mame@noreply.github.com\nCc: \"Mamesick\"mamesick@libero.it\nOgg: Re: [mame] SCREEN_RAW_PARAMS in gberet.c driver (#329)\nHad your mail been \"ping?\", I'd have noticed that we all missed the patch,\nlooked at it and pulled it.\nInstead, I read your mail, read the patch, found it was good but not worth\nthe aggravation of dealing with someone like you.\nCongratulations.\nOG.\nOn Thu, Sep 24, 2015 at 1:19 PM, Mamesick notifications@github.com wrote:\n\nHow bleak and pathetic is this. The code change is good and correct. If\nthis is the current way of MAME development, good to know. No feeds and/or\nanswers after a week. I'm not here for the glory like other Developers\nprobably are. No more from me. Request closed. Go ahead, MAMEDevs.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/329#issuecomment-142900811.\n\n\u2014\nReply to this email directly or view it on GitHub.\n. Note: I could squash the commits together but rebase is failing me...\n. manual is available here....\nhttp://ohwow-arcade.com/Assets/Game_Manuals/WACKY%20GATOR.PDF\nDIPs are shown there so they can be added.\nBased on low quality PCB pic, best guess for PCB parts (clockwise starting top left)\nEPROM, 8k x8 SRAM (DIP28), EPROM, 6809, 2k x8 SRAM (DIP24), 2k x8 SRAM (DIP24), 3x 6821 PIA's\nno YM2151.....\n. before going forward it really needs to be fixed so we can have artwork for the printer on one screen and the computer on the other screen.\nalso, in the youtube video above, its too fast. the printing speed needs to be set somewhere in the driver. those old printers have defined print speeds (CPS) and the demo above it going way too fast.\n. we also need some sound happening.....\n. I don't think we need to go as far as verifying the print speeds of actual printers. that's not practical anyway because very few people have access to the real hardware.\nas long as the speed is close to the advertised CPS in manuals or advertisements of the era it will be fine.\nWe need a set of printer and floppy drive recording rules for key events so we can record specific sounds. At the moment very few people know exactly what sounds are needed (myself included)\n. You probably made a typo with the year. Regardless of day/month order, the year should be 1986?\n. I disagree, the Taito do Brasil releases (where the game is rewritten, like zigzag) all have translated text, this LAX bootleg is probably a bootleg of their bootleg, or the source of their bootlegs rather than being the set Taito do Brasil put out.\n. Now that I saw a better closeup of the flyers.... you're right.\n. LAX seems to be absent and Game Over text (barely visible and blurry) seems to have spacing, more resembles a \"FIN DEL JUEGO\".\n. eh? getting spcwarp to work just requires a real dev to look at it. \nin the beginning developers knew nothing about arcade hardware. now almost all of it is emulated. \nIf someone like Haze had a look I'm sure it would be working in no time.\nHowever the bad dump isn't helping....\n. the only bad dump is ROM 3 which is all text, but I see your point\n. Entire fork got fucked up; let me reopen this soon\n. hap: main crystal is actually 20mhz according to author of the video... I'm\njust waiting for him to report the CPU/AY clocks\nOn Fri, Oct 9, 2015 at 9:58 AM, hap notifications@github.com wrote:\n\nwe don't wild guess xtals, if it's unknown we put it a value instead. In\nthis case the value is so close to the one from 1942, I'd rather keep it\nas-is.\nOn Fri, Oct 9, 2015 at 5:02 AM, kazblox notifications@github.com wrote:\n\n1942p:\ncrystals and divider guessed from this video\nhttps://www.youtube.com/watch?v=xFCDIZ3MI4c\nspcwarp:\nseperated memory map due to different write locations that hunchbkg\ndoesn't use.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/373\nCommit Summary\n- 1942p, spcwarp; (1) XTALs (2) seperate memory map\nFile Changes\n- M src/mame/drivers/1942.c\n  https://github.com/mamedev/mame/pull/373/files#diff-0 (12)\n- M src/mame/drivers/galaxold.c\n  https://github.com/mamedev/mame/pull/373/files#diff-1 (54)\nPatch Links:\n- https://github.com/mamedev/mame/pull/373.patch\n- https://github.com/mamedev/mame/pull/373.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/373.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/373#issuecomment-146878895.\n. closing until video author replies back.\n. the xtal is total bullshit. 12.432MHz WTF????\nonly use standard values listed in src/emu/drivers/xtal.h\n. mr-t-guru: Once again, please read ALL of the comments before overviewing anything\n. erm, dude, I read the comment. I was commenting to the first post (the same\none HAP replied to)\n12.432MHz does not exist and should never have even been put there in the\nfirst place.\nUSE ONLY REAL MANUFACTURED CRYSTAL SPEEDS\n\nOn Fri, Oct 9, 2015 at 11:13 PM, kazblox notifications@github.com wrote:\n\nmr-t-guru: Once again, please read the comment I just posted above:\n\"main crystal is actually 20mhz according to author of the video... I'm\njust waiting for him to report the CPU/AY clocks\"\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/373#issuecomment-146899673.\n. probably the copyright holders listed at the top of src/devices/video/upd7220.c could know\n. there were a lot of companies making drives back then. The Fanuc PG box I have has 2 similar looking black drives that clunk and they are Ye-Data drives.\nit'd be a whole lot easier and more accurate to just lift the top off and look on the back of the drive for the make/model sticker instead of guessing what might be.\n. based on those numbers....\ntracks * sectors per track * heads * 512\n80 * 8 * 2 * 512  = 655360 bytes\nIt may be less due to system overhead/unused tracks/reserved tracks etc.\n\nIf you have any floppy disks they can be backed-up and imaged using a DOS program called ImageDisk\nwhich is available here.....\nhttp://www.classiccmp.org/dunfield/img/index.htm\nTo use it: \nYou need a PC with a 5 1/4\" HD floppy drive and running DOS. \nIn the GUI in settings set the number of cylinders to 80, translate speed 300 -> 250 (to read a DD disk on a HD drive).\nOn the main menu press R to Read, type a file-name and press enter, press enter\nagain to skip the comment. Press enter again and it will read the disk and save\nit to the HDD.\n. the service manual says SOUND 0/P\u2022 Delivers a tone to the speaker from an internal oscillator.\nkey word is internal.\nmeaning a separate osc outputting something unknown and nothing to do with the external 16MHz input.\nThere goes your theory ;-)\nadding to that, it appears the ULA has inside all logic and peripherals of the BBC implemented.\nSo I suppose whatever the BBC has should be used as the frequency.\n. show me on the schem where it says a SN76489 runs at 'x' speed....\n. my point is there's no documentation or evidence to suggest what has been done is correct.\nit's one big guess.\nas per my statement above.....\nthe service manual says SOUND 0/P\u2022 Delivers a tone to the speaker from an internal oscillator.\nkey word is internal.\nwithout docs on the ULA internal means anything.\nso just do whatever is necessary to make it sound right and people will be happy.\n. Guru: you know what, forget ALL of what I said above (deleted all comments of mine):\nhttp://www.8bs.com/othrdnld/manuals/essentials/Eaug_pdf.zip\nThe Electron's Advanced Users Guide.\nDescribes the frequency of the internal ULA clock. 1 MHz. (Actually seems to cycle between... 1 MHz and 2 MHz for some operations)\nApparently this is also where Wilbert Pol got the algorithm from. MAME's algorithm is exactly copied off here. The problem with both is that the divider is off by 16.\n. Let's just stick to my fixed up version of the manual's algorithm with a /32 divider.\n. Specification is getting pretty heavy.\nFor minimum requirements, how about adding an 8-core CPU ;-)\nIn any case, certainly current-gen multi-core CPUs are required. \nMaybe one core can be dedicated to the 3D artwork task?\nMost multi-core CPU's are under-utilized.....\n. You made a big mess trying to make that pull. Several commits that aren't yours are present in the pull request (I assume because you're trying to update your fork via web interface via pull requests, which is not as effective when it comes to commandline git.)\nNext time, git fetch upstream and git rebase upstream/master should work well if you're using commandline to update. Prevents showing other's commits or any extra auto-generated messages from showing up in your request. \n. Can someone restart the Travis Clang compiles? They couldn't reach the github repository for some reason.\n. Close notice:\nApparently I underestimated myself, this picture https://lh4.googleusercontent.com/-QKoQQkeHV1Y/UgO0FeqRlCI/AAAAAAAAHkY/QrQ1EQ-G5QY/w974-h647-no/janika+dobozok+003.jpg shows the discrete filter area, but it never seems to be utilized.\nLater I found out that the HA17458 op amp that would be in place is gone, leaving the filters useless.\nI found a better PCB (the one I was studying had missing discrete chips) on Flickr https://i.imgur.com/TvAiJpR.jpg and it shows the op amp chip inserted as is.\n. Assuming the MCU is a custom chip and protected, how were they dumped?\nThey would still be considered incomplete/bad dumps IMO because the size is not a regular ROM size like 1k/2k/4k/8k/16k etc. Even if all the available on-chip ROM is not used they are still padded with either 0xff or 0x00 to fill all of the ROM space. for example if you read a 64kb ROM that is only half used you still get an 8k dump and the unused space contains 0xff. \nif we know how much ROM the (custom) MCU has it should be padded to that amount so the ROM becomes a standard size as per the original chip and/or datasheet specs.\n. I don't understand this change, the spectrum plus 3 disks are\nspecpls3_flop.xml\nso your change will cause them to not be seen?\nas things stand they work.\nsome of the russian clones have their own TRDOS disks etc. which will need different lists.\n. you'd be better off renaming the list in the xml then, disconnecting the list is not acceptable.\n. pretty sure we can't just use 'AM_ROM' in this situation.\n. right, since it's flash... commented that out for now.\n. more that it's a CPU in a slot device, and I don't think it can automatically find the rom in this situation, I doubt being flash matters here because they're unlikely to be trying to check the flash ID or reprogram the chip ;-)\n. Not really, I think it should be left until we can handle it.\nCreating large software lists for non-working CD based systems generally isn't a good idea anyway, same reason we haven't done Dreamcast, Xbox etc.\n. Not sure if anyone agrees on the idea of my descriptions for the old drivers, but the exactly say the current meaning of them, sort of coming from the words of Haze...\n. Maybe I'll try merging some galaxold games in at some point, but it'll take\nsome long time as Haze said, some of the galaxold/scramble/scobra games\nwere meant for wiremods and guessed prepherials. The galaxold driver is\ntweaked to fit these wiremods and I can tell.\nOnce tried merging bagmanmc in and got completely wrong video positions at\nthe third point of the game and the game over screen, yet I checked and\neverything is right.\nOn Sat, Oct 31, 2015 at 7:51 AM, hap notifications@github.com wrote:\n\nMoving stephh's mooncrst notes to galaxian.c is good.\nI wouldn't bother with documentation or improvements to deprecated galaxian\nhw drivers. They're going to be relocated and any other work is a waste of\ntime IMO (...but yeah, it's taking much longer than anticipated)\nOn Sat, Oct 31, 2015 at 12:29 PM, kazblox notifications@github.com\nwrote:\n\nNot sure if anyone agrees on the idea of my descriptions for the old\ndrivers, but the exactly say the current meaning of them, sort of coming\nfrom the words of Haze...\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/447#issuecomment-152725834.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/447#issuecomment-152726700.\n. Should probably close this for a new pull request and some thinking time.\n. Can someone restart the travis compiles? They aren't doing anything.\n. Redid the commit with a merge of other extra commits to prevent crumminess if it gets merged.\n. If this pull request cant be merged I might as well close it.\n. what were these made with, nobody can reproduce them from the existing sources (redump.org etc.)\n\nif they're self-dumped, to what standard?\ntempted to revert...\n. again, you're failing to state what dumps were converted.\nare they redump, tosec, or other sources? what version of said collection? why did you pick the ones you picked etc?\nare you using a proper current commandline CHDMAN or an older version with potentially different output due to different bugs (qchdman doesn't tell me anything)\nNOBODY has been able to reproduce these from any 'known community dumps' and the change will shortly be reverted, as it seems they're not from known dumps, we're looking at the wrong dumps, or you've done something wrong.\neven if the dumps you're trying to put into the list surface because you've uploaded them we would prefer to be able to create them ourselves if they are indeed from known sources, as to verify the process was performed properly, this is why I'm asking you to tell us exactly what the source of the images you used is.\n. for public reading, it has been established that the CHDs were added incorrectly, the SHA1 of the CHD file was added to the list, rather than the internal SHA1 of the CHD content stored in the CHD header.\nbasically the equivalent of adding the SHA1 of a zip file rather than the SHA1 of the file it contains.  CHD is a container format just like ZIP etc. the SHA1 of the metadata+data contained within it is stored in the header; this is so that the whole file doesn't need to be loaded on startup to verify you're using the expected image.\n. thanks guys I really appreciate your efforts! you guys rock!\n. a word of warning, please do not start cutting roms in half just because they have identical data in each half.  \nwe're still undoing the damage from last time that was done, sometimes the ROMs on PCBs genuinely had duplicate data because the PCB they came from required a specific type of chip.\nsince whoever dumped this PCB specifically used the setting for a larger sized ROM on the gfx roms (the program roms are of smaller size) it suggests to me that the PCB really did have roms with duplicate data in, it isn't a case of somebody being lazy and not observing the rom types.\nfor future reference, the SMALLER you make your changes the more likely they are to be accepted, making over broad assumptions will get them rejected.  This is a problem typical of many of your patches, you make very very broad assumptions.\n. No PCB needs a specific type of ROM with duplicate halves.\nSome manufacturers used 2X-sized ROMs to use up stocks. They simply doubled the same data to fill up the ROM because on a PCB wired for 1X-sized ROMs, when using a 2X-sized ROM the last bank is the only one accessed and the first bank is padded with the same data so that it works. It's a common thing to do and I have done it myself hundreds of times on repair jobs using 2X or 4X-sized ROMs.\nAnother reason is some ROMs have been dumped at 2X the real size because the real size was unknown.\nIf there is some proof that the ROMs really are half size then cutting them is the right thing to do.\nAre there photos available of the PCBs showing the ROMs?\nIf not there's not much point chopping ROMs without some evidence.\n. actually there's one game that does it's rom checksum by checking that the bottom and top half of the program rom are identical, can't remember which one mind you ;-)\nthere was also one (PGM I think?) where they duplicated data in each half because there's no smaller rom type with a close enough pinout to use.\neither way, as stated, unless there is proof that it's wrong (and saying 'another set is like that' isn't proof - a lot of these boards are bootlegs etc.) then it should be left alone, things like this should be changed based on evidence, not assumptions.\n. its open again. please go ahead and do the changes. thanks\n. the changes really aren't needed, there's nothing wrong with the old names, the entire set of changes is nothing but personal preference which isn't really objective.\n. you're disagreeing simply because it's MASH. I personally like them. many of the device names are too short or not punctuated properly, and MANY of the game names have poorly chosen short [MAME] names that are just plain stupid and left-overs from the old 8.3 DOS days. it wouldn't hurt if someone more subjective renamed them, rather than someone (i.e. a programmer) who believes everything they do is perfection.\nof course now you're going to disagree because I agree. it's a never-ending circle like a dog chasing it's own tail and you must disagree to uphold the 'standards' that were made up just to have standards.\ntry thinking outside the box, you might be surprised what's there.\n. manually merged\n. please send things like roms / other binary files separately, not as part of the pull requests.\n. actually there are a lot of things in here that shouldn't really be in the pull request (subtargets, misc text files, python scripts in the rom folder etc.)\n. this isn't the best description, but is a valid topic of discussion, I say we leave it open.\na lot of current software will automatically insert black frames or similar if running at 120hz, which I think is what this is about because we don't do that.  It should be possible to run synced on a 120hz display* with such a technique.  Right now if you try to sync MAME to a 120hz display you get double speed, which isn't really desirable.\n-  or thereabout - 2x whatever the game refresh rate is.\n. actually it ends up improving clarity on a fair number of displays, I would expect horrible flicker myself, but the end result is actually strangely pleasing and reduces the motion blur issue a number of large screens have.\n. and yes, unfortunately a rogue dev appears to have deleted your comments, that side of things will be dealt with internally, sorry about that.\n. It is possible however that these screens ONLY handle 120hz properly, which would only apply to a tiny subset of the MAME titles, if they can't actually do 59.9 * 2 instead, or actually flicker badly at such a rate rather than giving the desired effect then it might turn out to not be feasible, but that will need to be discovered with time.\n. fixed these for release\n. likewise probably safest to merge in after the next release?\n. probably safest to merge this in AFTER the next release I think?\n. there is no MESS. it is MAME and includes everything.\nForget MESS, it's history.\n. hahahah! so it's the same moron as the other thread now stirring up more pointless shit.\nshould have left the other thread locked and banned him.\nnow he's going to keep going on and on and on (at least until he's banned) and I'm just going to laugh and say I told you so....\n. We are not stupid, we have known the front end in MAME has sucked for many years.\nOver the last week or two work has begun on updating the MAME front end to support the current situation by one of our new members who has some enthusiasm about front ends. \nThis isn't the end, the front end will continue to be enhanced and changed for some time until everyone is happy.\nYou should probably just wait and see what happens, rather than whine about it and annoy the devs who are trying to make it better.\n. this is a hack, the logic in the driver is broken instead.\n. The autofire code scans for all 16 buttons that are supported by MAME core: IPT_BUTTON1 <---> IPT_BUTTON16. Obviously if a game/machine has no buttons (e.g. a mahjong panel or a computer with keyboard) the menu is not populated and a message is displayed. \n. Feel free to modify the code to also scan for IPT_MAHJONG keys/buttons. Sincerely I don't care too much about this. A friend asked me the source of my autofire feature to see if it was possible to implement in official MAME. That's all. I'm not asking anything here, nor to be credited neither to see it accepted. I simply posted a comment to better explain the behaviour. If you wish, you can scan for all IPT_XXXX entries of a game/machine so you will have autofire on IPT_COIN for example and you'll be able to insert hundreds of them. Have fun.\n. mamedev.org works fine. if there is a problem it's at your end.\n. use a VPN. there are free programs out there. ViperVPN is a good one. there are MANY others.\nOr use TOR browser which has VPN built-in.\n. Withdrawn.  My mistake.  I wondered if I was tinkering with the correct list (this versus the .flt files).\n. bios names can be whatever a driver author decides, some will be taken from actual documentation, others based on chip labels, others based on maybe a version string in the roms, others based on the regions the bios is, others based on a revision, and some invented for lack of better information.\n. again, that's something lua should be able to take care of, without the need to add extra core options.\nalso for the Raiden 2 / Raiden DX 2-in-1 case they were sold as separate games (probably just both coded onto the board to reduce production costs) the way we handle it makes sense.\n. @rb6502 I do have OpenGL enabled in my mame.ini. Just in case, I did try -video opengl and it didn't make a difference. I can understand why crackling might happen from the due to the timing being off, causing cuts in the audio signal. Would frameskipping/vsync help with the audio at all?\nOn the other hand, other systems I've used barely have any crackling at all. These older systems should be running faster on my machine... I've used many other ROMs that also run at about 80% speed and do not have crackling noises as loud, if any at all.\n. I do have GLX support on my laptop. Here's what glxinfo shows.\n```\nname of display: :0\ndisplay: :0  screen: 0\ndirect rendering: Yes\nserver glx vendor string: SGI\nserver glx version string: 1.4\nserver glx extensions:\n    GLX_ARB_create_context, GLX_ARB_create_context_profile, \n    GLX_ARB_fbconfig_float, GLX_ARB_framebuffer_sRGB, GLX_ARB_multisample, \n    GLX_EXT_create_context_es2_profile, GLX_EXT_create_context_es_profile, \n    GLX_EXT_fbconfig_packed_float, GLX_EXT_framebuffer_sRGB, \n    GLX_EXT_import_context, GLX_EXT_texture_from_pixmap, GLX_EXT_visual_info, \n    GLX_EXT_visual_rating, GLX_INTEL_swap_event, GLX_MESA_copy_sub_buffer, \n    GLX_OML_swap_method, GLX_SGIS_multisample, GLX_SGIX_fbconfig, \n    GLX_SGIX_pbuffer, GLX_SGIX_visual_select_group, GLX_SGI_swap_control\nclient glx vendor string: Mesa Project and SGI\nclient glx version string: 1.4\nclient glx extensions:\n    GLX_ARB_create_context, GLX_ARB_create_context_profile, \n    GLX_ARB_create_context_robustness, GLX_ARB_fbconfig_float, \n    GLX_ARB_framebuffer_sRGB, GLX_ARB_get_proc_address, GLX_ARB_multisample, \n    GLX_EXT_buffer_age, GLX_EXT_create_context_es2_profile, \n    GLX_EXT_create_context_es_profile, GLX_EXT_fbconfig_packed_float, \n    GLX_EXT_framebuffer_sRGB, GLX_EXT_import_context, \n    GLX_EXT_texture_from_pixmap, GLX_EXT_visual_info, GLX_EXT_visual_rating, \n    GLX_INTEL_swap_event, GLX_MESA_copy_sub_buffer, \n    GLX_MESA_multithread_makecurrent, GLX_MESA_query_renderer, \n    GLX_MESA_swap_control, GLX_OML_swap_method, GLX_OML_sync_control, \n    GLX_SGIS_multisample, GLX_SGIX_fbconfig, GLX_SGIX_pbuffer, \n    GLX_SGIX_visual_select_group, GLX_SGI_make_current_read, \n    GLX_SGI_swap_control, GLX_SGI_video_sync\nGLX version: 1.4\nGLX extensions:\n    GLX_ARB_create_context, GLX_ARB_create_context_profile, \n    GLX_ARB_fbconfig_float, GLX_ARB_framebuffer_sRGB, \n    GLX_ARB_get_proc_address, GLX_ARB_multisample, \n    GLX_EXT_create_context_es2_profile, GLX_EXT_create_context_es_profile, \n    GLX_EXT_fbconfig_packed_float, GLX_EXT_framebuffer_sRGB, \n    GLX_EXT_import_context, GLX_EXT_texture_from_pixmap, GLX_EXT_visual_info, \n    GLX_EXT_visual_rating, GLX_INTEL_swap_event, GLX_MESA_copy_sub_buffer, \n    GLX_MESA_multithread_makecurrent, GLX_MESA_query_renderer, \n    GLX_MESA_swap_control, GLX_OML_swap_method, GLX_OML_sync_control, \n    GLX_SGIS_multisample, GLX_SGIX_fbconfig, GLX_SGIX_pbuffer, \n    GLX_SGIX_visual_select_group, GLX_SGI_make_current_read, \n    GLX_SGI_swap_control, GLX_SGI_video_sync\nExtended renderer info (GLX_MESA_query_renderer):\n    Vendor: Intel Open Source Technology Center (0x8086)\n    Device: Mesa DRI Intel(R) Ironlake Mobile  (0x46)\n    Version: 11.2.2\n    Accelerated: yes\n    Video memory: 1536MB\n    Unified memory: yes\n    Preferred profile: compat (0x2)\n    Max core profile version: 0.0\n    Max compat profile version: 2.1\n    Max GLES1 profile version: 1.1\n    Max GLES[23] profile version: 2.0\nOpenGL vendor string: Intel Open Source Technology Center\nOpenGL renderer string: Mesa DRI Intel(R) Ironlake Mobile \nOpenGL version string: 2.1 Mesa 11.2.2\nOpenGL shading language version string: 1.20\nOpenGL extensions:\n    GL_3DFX_texture_compression_FXT1, GL_AMD_performance_monitor, \n    GL_AMD_seamless_cubemap_per_texture, GL_AMD_shader_trinary_minmax, \n    GL_ANGLE_texture_compression_dxt3, GL_ANGLE_texture_compression_dxt5, \n    GL_APPLE_object_purgeable, GL_APPLE_packed_pixels, \n    GL_APPLE_vertex_array_object, GL_ARB_ES2_compatibility, \n    GL_ARB_arrays_of_arrays, GL_ARB_buffer_storage, \n    GL_ARB_clear_buffer_object, GL_ARB_clear_texture, GL_ARB_clip_control, \n    GL_ARB_color_buffer_float, GL_ARB_compressed_texture_pixel_storage, \n    GL_ARB_copy_buffer, GL_ARB_copy_image, GL_ARB_debug_output, \n    GL_ARB_depth_buffer_float, GL_ARB_depth_clamp, GL_ARB_depth_texture, \n    GL_ARB_draw_buffers, GL_ARB_draw_elements_base_vertex, \n    GL_ARB_draw_instanced, GL_ARB_explicit_attrib_location, \n    GL_ARB_explicit_uniform_location, GL_ARB_fragment_coord_conventions, \n    GL_ARB_fragment_program, GL_ARB_fragment_program_shadow, \n    GL_ARB_fragment_shader, GL_ARB_framebuffer_object, \n    GL_ARB_framebuffer_sRGB, GL_ARB_get_program_binary, \n    GL_ARB_get_texture_sub_image, GL_ARB_half_float_pixel, \n    GL_ARB_half_float_vertex, GL_ARB_instanced_arrays, \n    GL_ARB_internalformat_query, GL_ARB_invalidate_subdata, \n    GL_ARB_map_buffer_alignment, GL_ARB_map_buffer_range, GL_ARB_multi_bind, \n    GL_ARB_multisample, GL_ARB_multitexture, GL_ARB_occlusion_query, \n    GL_ARB_occlusion_query2, GL_ARB_pipeline_statistics_query, \n    GL_ARB_pixel_buffer_object, GL_ARB_point_parameters, GL_ARB_point_sprite, \n    GL_ARB_program_interface_query, GL_ARB_provoking_vertex, \n    GL_ARB_robustness, GL_ARB_sampler_objects, GL_ARB_seamless_cube_map, \n    GL_ARB_seamless_cubemap_per_texture, GL_ARB_separate_shader_objects, \n    GL_ARB_shader_bit_encoding, GL_ARB_shader_draw_parameters, \n    GL_ARB_shader_objects, GL_ARB_shader_texture_lod, \n    GL_ARB_shading_language_100, GL_ARB_shadow, GL_ARB_sync, \n    GL_ARB_texture_barrier, GL_ARB_texture_border_clamp, \n    GL_ARB_texture_compression, GL_ARB_texture_compression_rgtc, \n    GL_ARB_texture_cube_map, GL_ARB_texture_env_add, \n    GL_ARB_texture_env_combine, GL_ARB_texture_env_crossbar, \n    GL_ARB_texture_env_dot3, GL_ARB_texture_float, \n    GL_ARB_texture_mirror_clamp_to_edge, GL_ARB_texture_mirrored_repeat, \n    GL_ARB_texture_non_power_of_two, GL_ARB_texture_query_lod, \n    GL_ARB_texture_rectangle, GL_ARB_texture_rg, GL_ARB_texture_rgb10_a2ui, \n    GL_ARB_texture_storage, GL_ARB_texture_swizzle, GL_ARB_transpose_matrix, \n    GL_ARB_vertex_array_bgra, GL_ARB_vertex_array_object, \n    GL_ARB_vertex_attrib_binding, GL_ARB_vertex_buffer_object, \n    GL_ARB_vertex_program, GL_ARB_vertex_shader, \n    GL_ARB_vertex_type_10f_11f_11f_rev, GL_ARB_vertex_type_2_10_10_10_rev, \n    GL_ARB_window_pos, GL_ATI_blend_equation_separate, GL_ATI_draw_buffers, \n    GL_ATI_separate_stencil, GL_ATI_texture_env_combine3, \n    GL_ATI_texture_float, GL_EXT_abgr, GL_EXT_bgra, GL_EXT_blend_color, \n    GL_EXT_blend_equation_separate, GL_EXT_blend_func_separate, \n    GL_EXT_blend_minmax, GL_EXT_blend_subtract, GL_EXT_compiled_vertex_array, \n    GL_EXT_copy_texture, GL_EXT_draw_buffers2, GL_EXT_draw_instanced, \n    GL_EXT_draw_range_elements, GL_EXT_fog_coord, GL_EXT_framebuffer_blit, \n    GL_EXT_framebuffer_object, GL_EXT_framebuffer_sRGB, \n    GL_EXT_gpu_program_parameters, GL_EXT_multi_draw_arrays, \n    GL_EXT_packed_depth_stencil, GL_EXT_packed_float, GL_EXT_packed_pixels, \n    GL_EXT_pixel_buffer_object, GL_EXT_point_parameters, \n    GL_EXT_polygon_offset, GL_EXT_polygon_offset_clamp, \n    GL_EXT_provoking_vertex, GL_EXT_rescale_normal, GL_EXT_secondary_color, \n    GL_EXT_separate_specular_color, GL_EXT_shadow_funcs, \n    GL_EXT_stencil_two_side, GL_EXT_stencil_wrap, GL_EXT_subtexture, \n    GL_EXT_texture, GL_EXT_texture3D, GL_EXT_texture_array, \n    GL_EXT_texture_compression_dxt1, GL_EXT_texture_compression_rgtc, \n    GL_EXT_texture_compression_s3tc, GL_EXT_texture_cube_map, \n    GL_EXT_texture_edge_clamp, GL_EXT_texture_env_add, \n    GL_EXT_texture_env_combine, GL_EXT_texture_env_dot3, \n    GL_EXT_texture_filter_anisotropic, GL_EXT_texture_integer, \n    GL_EXT_texture_lod_bias, GL_EXT_texture_object, GL_EXT_texture_rectangle, \n    GL_EXT_texture_sRGB, GL_EXT_texture_sRGB_decode, \n    GL_EXT_texture_shared_exponent, GL_EXT_texture_snorm, \n    GL_EXT_texture_swizzle, GL_EXT_timer_query, GL_EXT_vertex_array, \n    GL_EXT_vertex_array_bgra, GL_IBM_multimode_draw_arrays, \n    GL_IBM_rasterpos_clip, GL_IBM_texture_mirrored_repeat, \n    GL_INGR_blend_func_separate, GL_INTEL_performance_query, \n    GL_KHR_context_flush_control, GL_KHR_debug, GL_MESA_pack_invert, \n    GL_MESA_texture_signed_rgba, GL_MESA_window_pos, GL_NV_blend_square, \n    GL_NV_conditional_render, GL_NV_depth_clamp, GL_NV_light_max_exponent, \n    GL_NV_packed_depth_stencil, GL_NV_primitive_restart, \n    GL_NV_texgen_reflection, GL_NV_texture_barrier, \n    GL_NV_texture_env_combine4, GL_NV_texture_rectangle, GL_OES_EGL_image, \n    GL_OES_read_format, GL_S3_s3tc, GL_SGIS_generate_mipmap, \n    GL_SGIS_texture_border_clamp, GL_SGIS_texture_edge_clamp, \n    GL_SGIS_texture_lod, GL_SUN_multi_draw_arrays\nOpenGL ES profile version string: OpenGL ES 2.0 Mesa 11.2.2\nOpenGL ES profile shading language version string: OpenGL ES GLSL ES 1.0.16\nOpenGL ES profile extensions:\n    GL_ANGLE_texture_compression_dxt3, GL_ANGLE_texture_compression_dxt5, \n    GL_APPLE_texture_max_level, GL_EXT_blend_minmax, \n    GL_EXT_discard_framebuffer, GL_EXT_draw_buffers, \n    GL_EXT_draw_elements_base_vertex, GL_EXT_map_buffer_range, \n    GL_EXT_multi_draw_arrays, GL_EXT_read_format_bgra, \n    GL_EXT_separate_shader_objects, GL_EXT_texture_compression_dxt1, \n    GL_EXT_texture_filter_anisotropic, GL_EXT_texture_format_BGRA8888, \n    GL_EXT_texture_rg, GL_EXT_texture_type_2_10_10_10_REV, \n    GL_EXT_unpack_subimage, GL_INTEL_performance_query, \n    GL_KHR_context_flush_control, GL_KHR_debug, GL_NV_draw_buffers, \n    GL_NV_fbo_color_attachments, GL_NV_read_buffer, GL_NV_read_depth, \n    GL_NV_read_depth_stencil, GL_NV_read_stencil, GL_OES_EGL_image, \n    GL_OES_EGL_image_external, GL_OES_EGL_sync, \n    GL_OES_compressed_ETC1_RGB8_texture, GL_OES_depth24, GL_OES_depth_texture, \n    GL_OES_draw_elements_base_vertex, GL_OES_element_index_uint, \n    GL_OES_fbo_render_mipmap, GL_OES_get_program_binary, GL_OES_mapbuffer, \n    GL_OES_packed_depth_stencil, GL_OES_rgb8_rgba8, \n    GL_OES_standard_derivatives, GL_OES_stencil8, GL_OES_surfaceless_context, \n    GL_OES_texture_3D, GL_OES_texture_float, GL_OES_texture_float_linear, \n    GL_OES_texture_half_float, GL_OES_texture_half_float_linear, \n    GL_OES_texture_npot, GL_OES_vertex_array_object\n24 GLX Visuals\n    visual  x   bf lv rg d st  colorbuffer  sr ax dp st accumbuffer  ms  cav\n  id dep cl sp  sz l  ci b ro  r  g  b  a F gb bf th cl  r  g  b  a ns b eat\n\n0x020 24 tc  0  32  0 r  y .   8  8  8  8 .  .  0 24  8  0  0  0  0  0 0 None\n0x021 24 dc  0  32  0 r  y .   8  8  8  8 .  .  0 24  8  0  0  0  0  0 0 None\n0x082 24 tc  0  32  0 r  y .   8  8  8  8 .  .  0  0  0  0  0  0  0  0 0 None\n0x083 24 tc  0  32  0 r  . .   8  8  8  8 .  .  0  0  0  0  0  0  0  0 0 None\n0x084 24 tc  0  32  0 r  . .   8  8  8  8 .  .  0 24  8  0  0  0  0  0 0 None\n0x085 24 tc  0  24  0 r  y .   8  8  8  0 .  .  0  0  0  0  0  0  0  0 0 None\n0x086 24 tc  0  24  0 r  . .   8  8  8  0 .  .  0  0  0  0  0  0  0  0 0 None\n0x087 24 tc  0  24  0 r  y .   8  8  8  0 .  .  0 24  8  0  0  0  0  0 0 None\n0x088 24 tc  0  24  0 r  . .   8  8  8  0 .  .  0 24  8  0  0  0  0  0 0 None\n0x089 24 tc  0  32  0 r  y .   8  8  8  8 .  .  0 24  8 16 16 16 16  0 0 Slow\n0x08a 24 tc  0  24  0 r  y .   8  8  8  0 .  .  0 24  8  0  0  0  0  0 0 None\n0x08b 24 tc  0  24  0 r  y .   8  8  8  0 .  .  0 24  8 16 16 16  0  0 0 Slow\n0x08c 24 dc  0  32  0 r  y .   8  8  8  8 .  .  0  0  0  0  0  0  0  0 0 None\n0x08d 24 dc  0  32  0 r  . .   8  8  8  8 .  .  0  0  0  0  0  0  0  0 0 None\n0x08e 24 dc  0  32  0 r  . .   8  8  8  8 .  .  0 24  8  0  0  0  0  0 0 None\n0x08f 24 dc  0  24  0 r  y .   8  8  8  0 .  .  0  0  0  0  0  0  0  0 0 None\n0x090 24 dc  0  24  0 r  . .   8  8  8  0 .  .  0  0  0  0  0  0  0  0 0 None\n0x091 24 dc  0  24  0 r  y .   8  8  8  0 .  .  0 24  8  0  0  0  0  0 0 None\n0x092 24 dc  0  24  0 r  . .   8  8  8  0 .  .  0 24  8  0  0  0  0  0 0 None\n0x093 24 dc  0  32  0 r  y .   8  8  8  8 .  .  0 24  8  0  0  0  0  0 0 None\n0x094 24 dc  0  32  0 r  y .   8  8  8  8 .  .  0 24  8 16 16 16 16  0 0 Slow\n0x095 24 dc  0  24  0 r  y .   8  8  8  0 .  .  0 24  8  0  0  0  0  0 0 None\n0x096 24 dc  0  24  0 r  y .   8  8  8  0 .  .  0 24  8 16 16 16  0  0 0 Slow\n0x05d 32 tc  0  32  0 r  y .   8  8  8  8 .  .  0 24  8  0  0  0  0  0 0 None\n36 GLXFBConfigs:\n    visual  x   bf lv rg d st  colorbuffer  sr ax dp st accumbuffer  ms  cav\n  id dep cl sp  sz l  ci b ro  r  g  b  a F gb bf th cl  r  g  b  a ns b eat\n\n0x05e  0 tc  0  16  0 r  y .   5  6  5  0 .  .  0  0  0  0  0  0  0  0 0 None\n0x05f  0 tc  0  16  0 r  . .   5  6  5  0 .  .  0  0  0  0  0  0  0  0 0 None\n0x060  0 tc  0  16  0 r  y .   5  6  5  0 .  .  0 16  0  0  0  0  0  0 0 None\n0x061  0 tc  0  16  0 r  . .   5  6  5  0 .  .  0 16  0  0  0  0  0  0 0 None\n0x062 24 tc  0  32  0 r  y .   8  8  8  8 .  .  0  0  0  0  0  0  0  0 0 None\n0x063 24 tc  0  32  0 r  . .   8  8  8  8 .  .  0  0  0  0  0  0  0  0 0 None\n0x064 24 tc  0  32  0 r  y .   8  8  8  8 .  .  0 24  8  0  0  0  0  0 0 None\n0x065 24 tc  0  32  0 r  . .   8  8  8  8 .  .  0 24  8  0  0  0  0  0 0 None\n0x066 24 tc  0  24  0 r  y .   8  8  8  0 .  .  0  0  0  0  0  0  0  0 0 None\n0x067 24 tc  0  24  0 r  . .   8  8  8  0 .  .  0  0  0  0  0  0  0  0 0 None\n0x068 24 tc  0  24  0 r  y .   8  8  8  0 .  .  0 24  8  0  0  0  0  0 0 None\n0x069 24 tc  0  24  0 r  . .   8  8  8  0 .  .  0 24  8  0  0  0  0  0 0 None\n0x06a  0 tc  0  16  0 r  y .   5  6  5  0 .  .  0 16  0  0  0  0  0  0 0 None\n0x06b  0 tc  0  16  0 r  y .   5  6  5  0 .  .  0 16  0 16 16 16  0  0 0 Slow\n0x06c 32 tc  0  32  0 r  y .   8  8  8  8 .  .  0 24  8  0  0  0  0  0 0 None\n0x06d 24 tc  0  32  0 r  y .   8  8  8  8 .  .  0 24  8 16 16 16 16  0 0 Slow\n0x06e 24 tc  0  24  0 r  y .   8  8  8  0 .  .  0 24  8  0  0  0  0  0 0 None\n0x06f 24 tc  0  24  0 r  y .   8  8  8  0 .  .  0 24  8 16 16 16  0  0 0 Slow\n0x070  0 dc  0  16  0 r  y .   5  6  5  0 .  .  0  0  0  0  0  0  0  0 0 None\n0x071  0 dc  0  16  0 r  . .   5  6  5  0 .  .  0  0  0  0  0  0  0  0 0 None\n0x072  0 dc  0  16  0 r  y .   5  6  5  0 .  .  0 16  0  0  0  0  0  0 0 None\n0x073  0 dc  0  16  0 r  . .   5  6  5  0 .  .  0 16  0  0  0  0  0  0 0 None\n0x074 24 dc  0  32  0 r  y .   8  8  8  8 .  .  0  0  0  0  0  0  0  0 0 None\n0x075 24 dc  0  32  0 r  . .   8  8  8  8 .  .  0  0  0  0  0  0  0  0 0 None\n0x076 24 dc  0  32  0 r  y .   8  8  8  8 .  .  0 24  8  0  0  0  0  0 0 None\n0x077 24 dc  0  32  0 r  . .   8  8  8  8 .  .  0 24  8  0  0  0  0  0 0 None\n0x078 24 dc  0  24  0 r  y .   8  8  8  0 .  .  0  0  0  0  0  0  0  0 0 None\n0x079 24 dc  0  24  0 r  . .   8  8  8  0 .  .  0  0  0  0  0  0  0  0 0 None\n0x07a 24 dc  0  24  0 r  y .   8  8  8  0 .  .  0 24  8  0  0  0  0  0 0 None\n0x07b 24 dc  0  24  0 r  . .   8  8  8  0 .  .  0 24  8  0  0  0  0  0 0 None\n0x07c  0 dc  0  16  0 r  y .   5  6  5  0 .  .  0 16  0  0  0  0  0  0 0 None\n0x07d  0 dc  0  16  0 r  y .   5  6  5  0 .  .  0 16  0 16 16 16  0  0 0 Slow\n0x07e 24 dc  0  32  0 r  y .   8  8  8  8 .  .  0 24  8  0  0  0  0  0 0 None\n0x07f 24 dc  0  32  0 r  y .   8  8  8  8 .  .  0 24  8 16 16 16 16  0 0 Slow\n0x080 24 dc  0  24  0 r  y .   8  8  8  0 .  .  0 24  8  0  0  0  0  0 0 None\n0x081 24 dc  0  24  0 r  y .   8  8  8  0 .  .  0 24  8 16 16 16  0  0 0 Slow\n```\nSo I know that OpenGL works. I tried:\n\nmame -video soft\n\nAnd it didn't help with anything.\nAnyways, I think I'm going to close this for now, because this doesn't just happen on a800, it happens on almost every game and system now. I'm still going to assume MAME isn't going to be a good emulator for me until I have a decent desktop PC. I'm using 0.173, I know 0.174 just came out. Haven't tested it out yet, it's not quite available for my distro just yet.\nMaybe it has some other unrelated slowdown issue that will get fixed, I'm not sure.\n. gut feeling is the video is an undumped revision.\n. what would be handy is if functionality also listed clones of software etc. right now afaik there's no way to see the clones of anything in the softlist?\n. Well it's likely the video part of Air Raid is closer to the single PCB Air Raid than Street Fight (it uses customs rather than discrete stuff for mixing, the same ones as the single PCB)\nBy doing this it allows the version that's a Street Fight conversion and the version on the single PCB to share the same video code, rather than duplicating it.  Street Fight was converted too so that it's a choice of which video board you plug into the Street Fight base board.  There are quite a few cases where different boards plug together, I think encapsulating those various boards as devices makes sense, I believe Aaron did it with the Midway sound boards?  This is even more common with the EM type games where you sometimes have baseboards driving mechanical games, and in other cases video games, just by changing the sub-boards.  (The Tap-A-Tune driver could benefit from such treatment too, the CPU board is common, used by various EM games, but Tap-A-Tune plugs a video board into it)\nPrior to this the Street Fight driver had it's own implementation of the video hardware found on Air Raid.  If you've not noticed before, one thing I've spent a lot of time doing is removing duplication in the codebase.\nThe devices for these boards can still make use of common devices within them, although my hardware studies / tests would suggest that they're all a bit different.  Dark Mist is the closest tho, it definitely shares the same mixing hardware as Air Raid (Street Fight does not)\nThe mixing and solid handling for example appears to be handled by the SEI0100BU chips, which sit with the gfx roms and a look-up rom, using bit 1 bit of an a 0x100 sized PROM for transparency handling and 6 bits for colour lookup.  Each PCB has one for each layer, so those would be an ideal candidate for devices, taking the prom region, and the colour base in the MACHINE structure and moving the mix calls to that device, one device for each layer.  That was my next line of refactoring here, I would have done it earlier but quickly established that Street Fight uses different mixing.  (This is why the new devices use manual mixing, as doing it in a device-centric way which doesn't care if a layer is tilemaps or sprites for the mixing more or less demands it)\n. Agreed with what others have said here.\nThere's probably room for improvement in our read only handling (and way we write data to images) in the core - ideally providing a mode where the original files are never modified, only diff files, which is essential (and should always be the case) for things opened via software lists, as you don't want to change the original files in those cases as you'd no longer match what was listed.  There are games etc. in the software lists where the disks must be writeable for them to function.  There are also games that expect the disks to be write-protected, so the read only flag is very much not tied to anything to do with the files.\nThis mode should probably be available via an ini option too, so that MAME can be put in a 'Safe Mode' where it guarantees no original files will be modified, when you're trying to preserve data, and don't know exactly what code is going to get executed on an emulated machine that is important.\n. I'm just improving the organization for now, trying to make sure things are in the right places, and that the ones that are clear hacks are marked as such (plus in cases where the sets requiring datapaks are parents, making a regular set the parent as they're more likely to work / boot)\nsome thought definitely needs to go into how to handle the various machine configurations with appropriate callbacks on the ports etc.  (and likely promoting MPU4 itself to a device so that you can have a driver with multiple units - I suspect at least some of the games are going to require top and bottom units emulated)\neven labelling all these the versioning and shortcodes used are highly illogical, although I guess that could again be multi-unit setups etc.\nbut no, basically this is just the grunt work, that has needed doing for a while to tidy things up, actual improvements are not stepping on toes :-)\n. I still think that the fruit machines are one of the great areas of potential for MAME too, especially with Android ports, touchscreen support etc.  A lot of the existing emulators are Windows only.\nNot sure anybody reads the comments here, but any help in getting the other hardware up and running, or adding missing devices, improving the CPU cores to support all the SoC peripherals etc.  The Epoch stuff is still a nice big challenging H8 reverse engineering and simulating of devices case, The Scorpion 4 stuff really needs proper hoppers (and CPU peripherals so that the later games can boot with less ugly hacks) and the Scorpion 5 stuff could potentially do a lot too, but gets stuck on a hardware test at the moment.  Even the smaller systems with less games could do with work.\nIt's definitely an area people could contribute in if they wanted to make a real difference\n. The protection stuff, yeah, might as well handle it with the existing chr files, even if ultimately they're pals and somebody should send one or more to Charles MacDonald to see if we can get the proper dumps and equations out of them rather than the fake files.\nThat said, not sure it matters if they are in the source, it's stuff that has been reverse engineered in order to make things work, like a lot of MAME, nowhere near the size of the Data East or NeoGeo encryption tables ;-)\nThe SC4 stuff needs proper peripherals on the CPU, for the CCTalk stuff I believe that means a proper MBUS / I2C hookup etc. (68307 peripherals)  RB said he was going to do some peripheral work later.  MPU5 is 68340 peripherals (as is the Adder 4 addon for SC4).  Scorpion 5 is Coldfire peripherals (there are other things that would surely benefit from improved Coldfire too eg. the Gaminator touchscreen gamblers, although I'm not sure they're all the same variation)\nThe stuff in 'pluto5.cpp' and 'astrofr.cpp' (which IMHO is the same platform) doesn't actually look too complex either, again needs peripherals.\njpmsys7.cpp (made up name) seems to be pluto 6 or 7, it's definitely Coldfire but seems a different one to SC5\nGlobal 'stealth' hardware (M37702S based) is also an interesting target, but I think most games are missing sound roms.\nThe castle.cpp platform(s) which could be related to spACE stuff is also a viable target for somebody who likes the 8-bits CPUs. (HD6303Y) in that case...\nThe Electrocoin stuff is also promising, I see no reason why Sphinx, Pyramid, Labyrinth and the like can't run, main issue I really see right now on that is the reels don't spin properly on Sphinx and the others fail some interrupt check (maybe a Z180 peripheral issue)\nI'm really surprised nobody has put in a bit more effort with these, I imagine progress with some of them would be trivial even if some might use MCUs for reel control etc. it can be simulated.\n. Ah yeah, I believe Guitar has been helpful in the past, it will be interesting to find out what he has uncovered about Epoch as it should really be possible to get MAME in the state that the likes of SC4 are in at the very least.  Our H8 core should be solid enough.\n. I'm pretty sure you could create a layout with proper labels for \"Sphinx\" or \"Pennies From Heaven\" in the current state btw, the reels might not spin properly, but the layout we have light up properly, and the entire layout of the machine(s) is basically a very neat square, so it should be easy enough to deduce things.\n. yeah it can seems a bit opaque right now, there's so little info on most of the machines, some of them there seems to be literally nothing out there for.  I think once people see more usable examples it might gain a bit more momentum, our presentation layer is still rather limited tho.\nit many cases, especially for the unemulated techs, it's not clear if dumps are complete either, there are so many things with missing sound roms it isn't funny, and some could be part of bigger systems with video boards too.\nI notice for the Scorpion 6 stuff (which is brand new, encrypted and not really interesting to us yet) the dumps of the video ones are all just the files, rather than an image of whatever media they're on too, which is going to be messy later I'm sure.\n. yeah, MAME is good like that, it's one of the reasons we're more open about things these days, there are so many reusable bits of code it's wasted potential otherwise.\nglad to hear you're making progress anyway\n. looks like the MCU needs hooking up for the 2nd bank of lamps to work.  There is a dump of it, so full emulation is probably possible.\ncurrent driver attempts to hook it up as a 2nd 8279, when it is not.\n. the difference is probably that MFME doesn't attempt to emulate the 8279 properly and we do, meaning the MFME implementation of it works for this case because it's less fussy?\nM1A board pics are here FWIW\nhttp://www.citylan.it/wiki/index.php/Gladiators_(Maygay)_(M1A/B)\n. can this be merged? I'd like to take a look at the MCU.\n. ok, thanks, I'll take a look at them.\nonce some basic lamping works it will definitely help to get some of the more popular machines set up with internal layouts\n. I think they're ok (SFXJ seems more correct than SFX, as the US version has sfxu.07a so it's a region specific rom, not a universal one) comment in mame.lst needs updating tho, forgot about that, minor tho.\nnot too bothered about commit access, would rather not be on the list.\n. the MCU code is very small btw\n3 interrupts (probably 2 of them serial related) and a tiny loop.\nnot that familiar with 8051 assembly myself, so might need to research it.\ndo we know where the MCU dump actually came from?\n. actually, looking up some docs, the following interrupts are used\n0x03 external int 0\n0x13 external int 1\n0x1b timer / counter 1\nexternal int 0 is very simple\nexternal int 1 has the most code\ntimer / counter 1 is again, very simple\n1b is internally sourced, the timer / counter runs, and it gets triggered\nso knowing what ex0 and ex1 are is important\nboth involve port 2 accesses\n. well for a start, you're using a build from Emucr\nNever use anything from emucr, they ship known broken builds all the time, don't compile things properly (often not doing full rebuilds when they're needed) and never seem to package anything properly.\nif it can be reproduced NOT using a build from Emucr, then it might be interesting, but Emucr are so bad that issues with their builds can't really be considered.\n. for 32-bit I'm not sure, there is a site doing a good job of nightly builds, but they only do 64-bit.\n. I found\nhttps://build.btolab.com/project/mame/\nto be trustworthy, properly built, and properly packaged.\n. maybe the bug causes some old config files to become corrupt then?\nare you installing to a fresh folder to avoid that?\nthe reason for the bug occurring was rather straightforward and a fix was definitely put in, and I've tested the builds from that site without an issue.\n. Well no.. upgrading the MAME version then using your old mame exe isn't upgrading the MAME version at all, so of course you get the same bug..\n. @johnparker007 you might want to check this, actual problem with 2nd lot of lamps was a bit dumb, the strobe wasn't hooked up at all, so the write handlers were being called, but doing nothing.\nMCU needs a little more investigation so currently the handlers are nulled with a define, James might be right in that it was actually a limited replacement for a 2nd i8279 because they never needed the read features that the i8279 offered, although I find it bizarre that an MCU would be cheaper than an i8279\n. are the lines swapped around on the PCB, or are the bits in the input ports just in the incorrect order? \nthat really determines if it's the correct solution or not\n. I guess the easiest way to tell with the bitswap might be (assuming it applies to them) how the dipswitches hook up, if we know which dip is which on the physical board, and they too need the lineswap to be in the right order, then the lineswap is almost certainly correct.  for lack of better knowledge it might just be best to go with 'whatever is compatible with existing layouts'\nre: mcu, we load the mcu, and I now run it as a CPU, however I couldn't get it working properly, so currently we still use the extra i8279.  Looking at the MCU code it has nothing to do with inputs, it looks like it really was intended to act as a write-only i8279, it polls some lines in the main loop to make sure they're stable (probably the strobe) and in the interrupt(s) it reads in from another port, using the value on read in one interrupt as an index, and the value in the as a value to store.  (so presumably each write port on the main cpu side triggers a different interrupt, and it uses the interrupt level to know the port that was the source of the write)  At least that's how I attempted to hook it up.\nI'm a little surprised my hookup didn't work, but maybe i've misread / misunderstood something with the 8051 code, either way, since it exists only to implement a subset of the i8279, the 2nd i8279 works just fine.\nour rom banking seems incorrect btw, at least if MFME is correct, in MFME 0x2800 - 0xd0ff (very weird range) is banked (either showing the upper or lower half of the rom) while 0xd100 - 0xffff always comes from the lower rom.  those ranges seem a bit arbitary to me (0x2800 makes sense, area below that is RAM, but 0xd100 as a banked ROM / fixed ROM split point is just plain weird, 0xd000 might make more sense, but I guess there must be a game that expects 0xd000 - 0xd0ff to bank or it wouldn't have been set up that way.\nEither way, I'd be surprised if any of the games with 128kb ROMs work in MAME right now, because the way we handle it is entirely different...\n. schematics are always handy to have, not just for us, but especially owners of the hardware\n. btw the IC positions don't quite match up with the PCB pictures we've got, so I guess the schematics are for a different PCB revision (1B?) however, still handy to have :) \n. yeah, u35 is a mc146818a on these, so they're the 1b schematics\nalso good to have it confirmed that 1b just uses 2x 8279 instead of the 80c51 in place of one of them.\nprobably still worth emulating the MCU for the sake of completeness and hooking that driver up to one of the earlier machines, but for simplicity most games can probably just run on the '1b' emulation with the 2x 8279 then.\n. yeah, having individual parts as devices makes sense.\nthe cpu cores can pull together the various devices to form SoC implementations.\nthe various 68k variants often integrate standard Motorola peripherals (sometimes with a few limits, like only 1 DMA channel not 2) but making it so that the code can be reused, and implementing the variants in the chip implementations as derived dervices makes a lot more sense than duplicating all the code.\nin the end the actual CPU core in a SoC is just another part it it, and we wouldn't dream of duplicating entire CPU cores.\n. I would be inclined to shuffle the sets around so that the versions where there are layouts are the parent sets\n. for the M1A sets there really is no reasoning to the order AFAIK, most of them were batch added.\nthe reason I suggest layouts being paired with the parent sets is simply because the parent sets are the ones people are most likely to run, so having a layout associated with them means they're most likely to see the progress.\nalso yeah, since the existing emulators are using those sets, we at least know they're usable sets, with no major issues.\nMAME is playing catch-up here, so even if in the end things get switched around again later, making the primary sets the ones which are most likely to end up working is going to help us in the short term.\nI think in the end the fruit machines will need layouts where the graphics / text descriptions used depend on the set, also as noted, often you get the same machines with different payouts etc.  For sets where you can select the payout (the 'Y' sets in MPU4 at least, where they depend on jackpot / stake keys) I guess the layouts will have to include all the variations, so that people can select the correct one for their configuration.  We might need a system where every variation of layout for a given game is stored in one layout file, and the default layout within that file to use is specified in the machine driver.\n. not exactly\nif the layout is intended for 'm1cluecb1 ' then I would rename (both romset and GAME definition of 'm1cluecb1' to 'm1cluecb' and rename the existing 'm1cluecb' to something else so that the primary set is the one the layout is intended for.\neither way, don't let it bother you, if I feel it needs taking care of I'll do it myself  :)  just keep working on making sure we have some layouts we can test with, it's more productive use of your time.\nyou're right by the looks of things tho, the m1a sets do seem to have been sorted into 'version' order in many cases, didn't realise that had been done; at least the maygay ordering seems somewhat logical, unlike the MPU4 stuff where one game can have multiple codes, and seemingly random version numbers!\n. yeah, there are various sites that offer complete MAME set torrents for every release, not run by us, obviously, but they exist, so even when we rearrange things people catch up rather quickly; there's a release every month and they sync to that.\nif you're not rearranging any sets you're not breaking anything tho ;-) also if people store their roms as 'merged' then all the roms get stored in the parent zip file which is the first place MAME looks.\nsome of the 'handheld electronic game' emulation we do actually includes the 'deluxe' layouts in the romsets with SVG graphics (which can be generated in your favourite SVG editors) however that style of artwork really only supports simple 'on/off' graphics, not something like the fruit machine reels.\n. the travis failure looks unrelated to the changes, looks like it couldn't pull from Github rather than couldn't compile.\nfatal: The remote end hung up unexpectedly\nError: Failure while executing: git pull -q origin refs/heads/master:refs/remotes/origin/master\n. I think that might eventually happen (even if it seems weird storing non-rom data in the romsets, things like the laserdiscs are 'analog captures' anyway.  That's some time away tho.  In a more short-term view it might be possible to ship some 'generic' symbols with MAME, for the classic fruits etc. just nothing that is too specific to one game.\nEither way, for now the layout system we have provides a way of at least making things functional, which is a lot better than 'unusable'\nIn the end it will come down to momentum, and establishing a foothold.  Right now MAME has little presence in terms of Fruit Machine emulation, but, if we get the majority of machines running (especially it some of those don't run elsewhere) and it becomes a viable choice, then there will be more demand / interest in improving it.\nThe layouts that are being created now will be useful fallbacks at worst if a newer system for representing these in 3D is created for example.  It's all part of a process.\n. btw there seems to be a problem with some (all?) of the layouts\nthey reference \"lamp_134_1_border\" which doesn't exist, so you get\nError in XML string: Unable to find layout element lamp_134_1_border\ntested with m1bargn and m1cluedo at least\n. actually they reference quite a few elements that don't exist..\nlamp_134_1\nand\nlamp_130_1_border\nprobably others...\nif there are XML errors like this the layouts don't display\n. ok, not all, but a couple more than the ones i initially tested..\ndoes look like our lamping isn't quite right based on the squares that light up in deluxe monopoly tho\n. well I've fixed the lamping code, I'll do a pull request for that shortly.\n. https://github.com/mamedev/mame/pull/1267\nthat should take care of the lamping for both ports, with cleaner code, at least m1dxmono51o looks better this way\n. while the game lamps look pretty good in general now, the reel lamps don't seem quite right for a number of the games, I suspect that's a mapping problem with the converter program.\nm1coro21n throws a slightly different error, which I'm guessing is the converter too, or an error in the original layout?\nError in XML string: Illegal bounds value in XML: (577.000000-575.000000)-(142.000000-141.000000)\nbtw, in MAME layouts support multiple views, would it be possible for your converter to generate a 2nd view, closer to the 'grid' layout MAME has now, but colour-coded based on information from the layout.\nwhat I mean is that if a lamp in the grid has been referenced by the layout being converted it could have a dark green (off) / green (on) colour scheme, if it's been referenced and is being used for a reel it could have a dark blue / blue colour scheme, and if it hasn't been referenced at all it could have a dark grey / white colour scheme.\nthat way you could easily bring up the debug view to make sure no unreferenced lamps are being used.  (although sometimes it's possible unreferenced lamps / unconnected lamps might intentionally be used, some of the SC4 stuff does use lamps that aren't tested / named in test mode, not sure if they were either missed from test mode, or just aren't connected on hardware)\n(this is just a suggestion, it's obviously not essential!)\n. yeah it would probably help to have a grid of buttons for the input matrix too in the debug layout\nreally anything like that you can think of that would be useful would be good to have if you can implement it :)\n. in most cases the flags are a series of on/off bytes at the end of the rom, checked in software, meaning a lot of sets really only differ by those bytes.  some are probably even for debug features.\nI think the 'D' sets were given to arcades that wanted a bit of extra security, like you say, more monitoring / logging but the functionality is present in all the sets, just disabled / enabled depending on the flag.\n. I think the idea of automatically creating a wav file with \"-cass newfile.wav\" is flawed anyway tho\nTapes have sizes, fixed sizes, they're not (and should not be treated as) some kind of expanding entity or something like that.  You should have a fixed size tape, and be able to fast forward / rewind to any position it it, and start recording there.\nI don't see how \"-cass newfile.wav\" in any way allows you to specify a size.\nIt  just feels a bit hacky.  In reality a cassette, a floppy, a hard drive, or a CD-RW aren't really too different and so should have a more standardized way of being created.\n. more along the lines that our native output format should probably be something like CHD, with the option to convert to wav if wanted.  If you want a blank 60 minute tape, 2 sides, you create a container for a blank 60 minute tape with 2 sides.\ntapes are of a fixed size, and you can ff / rewind to any position in them and play / record from there.\nthe way we do it is a poor representation of  a tape.\n. yeah, seconded, this is a hack, hence needing the per-game ram addresses etc.\n(our Golly Ghost hookup is using similar ugly hacks btw, pretty sure that now we emulate the Namco MCUs those can be removed)\n. the request still looks a bit messed up, I can see the new and correct logic in there, but your old changes also still seem to be present (the init functions with per game addresses etc.)\n. looks better now :-)\n. comments in the submission mention a 'large payload' with one of the commands, might be worth checking if it's the entire program for a known cpu..\n. Yeah, definitely looks like the alt dump is the good one.\nMaybe human error and the Cowering's match was with the alt one, not the other? Maybe a bad cart that exchanged hands and was dumped twice?\n. the reason this happens is because the guns on the original (which are actually gun-shaped analog sticks) were not centered, rather one was to the left, the other center, the final one to the right.\nthe game software attempts to compensate for this positioning by moving the cursor more quickly on the opposite side of the screen to the gun.\nthe problem with fixing it the way it's been fixed here is if you attached guns in the original positions the cabinet had them then the alignment would be off as you're changing the actual value returned to the emulated machine to match MAME's mapping.\nit might actually make more sense to change the crosshair drawing function instead?\n. well what you actually want to do is find the 68k code that applies the offset correction and see what calculation it does, not build massive tables.\napplying the offset in the crosshair drawing is definitely a more involved task, as that is handled at core level, so the actual crosshair functionality in MAME would need extending so that mappings that aren't 100% linear can be used, that is non-trivial.\nThe problem with changing the values that are returned on the ports, as I said, is that it will no longer work with guns hooked up in the original positions; the guns return a value of 0x00 - 0xff, that isn't scaled by the guns.  If you hooked up the original guns in their original positions and turned the crosshair off the shots would be in the correct place on the screen with the code we already have in MAME (the crosshair would not be, but as you'd be using the original guns you wouldn't need it)\nI'll leave it up to other people to decide, but IMHO this fix is in the wrong place and the actual crosshair functionality of MAME needs improving to take into account possible non-linear scaling for guns that aren't centered on the original cabinets.  If the crosshair drawing code was improved, and you used the original guns in the original positions then the guns would point at the crosshair.\n. The problem gets more complicated however if you consider the user might want to use a regular gun, pointed straight at the screen for player 1, or turn off MAME's internal crosshair and use the OS mouse pointer; in that case you would have to alter the return value the way you're doing now.\nThe cost of that is breaking support for the gun in the real position tho.. \nAs you can see it's not really a 'simple' issue.\n. I'm not sure, it needs some thought for sure.\nIt might be that the devs are happy to accept this as a solution for 'most common use case' (ie somebody running the game on a PC)  however solutions that break trying to use the game with the original setups are generally frowned upon.\nI guess a gun type input that can compensate either way (either in the cross hair drawing, or the input port reading depending on user preference) could be an option, but I'm in no way familiar enough with any of the code to give you guidance there.\nwould probably be a good idea if somebody else chipped in tho, don't want to lead you down the wrong path.\n. for this specific game it might actually be possible to get a better alignment by using the ingame calibration, but when asked to shoot the center, instead shoot somewhere about 30-40 / 60-70% along, because I assume the game uses those values in it's internal correction, so if you can calibrate it in such a way that it compensates for that....\n. Ah, that's a shame, most do have the 'center' input when calibrating, for reasons similar to this..\nlooks like this game really was designed around having the guns at those exact positions / angles from the screen.\nwhich means there's no simple solution.. you either have it broken for PC users, or you have it broken for people who want to rebuild the original cabinet using MAME.  I suppose you could have a configuration switch to decide if the 'correction' is applied but it might still make more sense to try and do this as a core concept rather than per-driver kludgery..\n. Well I don't think the whole thing has been a waste of time, it's been an interesting investigation into the problem at least, because on the surface it does seem like a simple and obvious fix until you consider why it acts as it does.\n. hmm unless I'm misunderstanding this, there are times when we'll want to be able to derive the image format from the filename extension in the softlist.\nfor example with some tape / disk lists we have no choice but to go for 'best available' images, some of which are in better formats than others, using the file extension in those cases makes a lot more sense than adding addition metadata to every entry to specify it.\nobviously it should be possible to override it / specify it manually, but by default, for such cases the filename extension is a very useful hint.\n. is there evidence that the chip actually does it?  we've added things like this to chips before, only to find out later that they don't do anything of the sort.\n. I think we might have to turn the DMD device into a small 'screen'\nthe tag lookups for every 'pixel' (which are handled as lamps) absolutely kill us, and the bigger the XML file is the slower the lookups are, so it makes everything else slow too.\n. there are some inefficiencies I need to address (tag lookups in the driver) but I think the problem is our string lookups have got slower and slower as code has been modernized.\nit's unfortunate, but I'll see what can be done.\n. the example given seems over complicated too, rather than a very simple device to copy, is that method actually used anywhere else in the code?\nI couldn't get the intilization working in a very simple case using an array of required_ioports and a list, was having none of it.\n. ok, yes, that is a clearer example.\nI was trying to do what you show in the 2nd example\nm_ports(*this, { \"names\", \"of\", \"ports\" })\nand the compiler was having none of it\nyour first example does indeed work tho.\n. yeah, that is indeed the mistake I made at the time.\nso which is preferable?\n. yes, I can read, but then you gave 2 examples, simply saying that the internal structure is ugly doesn't really mean much in terms of which was preferable to use as internal structures can change later, which in this case is what happened.  (a lot of what we do is ugly in intermediate stages)\nanyway, it sounds like it should be easier now, and I think little things like this would be worth documenting in a 'coding tips / recommendations' section somewhere, because it's definitely a case where the preferred use case right now is in the minority.\n. sc2prem for example, but the reality is we shouldn't be doing so many string lookups, it needs a better solution.\nwe need some concept of a 'physical element' that drivers can interact directly with, that gets tied directly to artwork elements, so there is no string lookup every time.\n. would love to have it narrowed down if possible, it's one hell of a performance drop and even with the workarounds I've done here it doesn't bring it back to anywhere near what it was.\n. yeah, looks like we have a winner then...\n@mmicko what do you say? there's no way to win that performance back at a driver level and 2000% -> 120% is a significant loss.\n. yeah, if that is accepted this one can be closed then (unless we WANT to treat DMDs as a type of screen? it would save an awful lot of lines in the artwork files)\n. https://youtu.be/LYyRQxqsop8?t=2m\nnear the bottom.\nthe 'problem' is they're driven more like lamps, the game code manually strobes each line and writes the data.. so the 'refresh rate' is entirely dependant on the game code, and how often it writes.  treating them as a screen doesn't feel quite right.\n. well if we're ok with treating them as screens, then it's probably a lot tidier from a layout point of view, and for that reason I think I prefer it.\n. yeah, I see, not too dissimilar, I think it makes sense to go ahead with this then.\n. ok, I've modified the other layouts by hand so that they have screens in them rather than 1000+ dot matrix entries\n@johnparker007  if this gets pulled in you'll need to update your generation code :-)\n. basically replaces\nhttps://github.com/mamedev/mame/pull/1303\n. Well I agree they need to be moved, it's completely illogical as a global global concept, I also agree they don't make sense in the GFX decode\nin terms of keeping code churn to a minimum I'd personally I'd consider the screen device, but some others would disagree, and we'll probably end up with disagreement like there was over the screen orientation thing a while back (I still don't really feel that the orientation is a per-machine property either, it's a layout thing, it was moved to be part of the 'screen' device but it doesn't really belong there either so ended up being moved back)\nin reality tho, it probably makes more sense to be done per-driver, like the sound latches.\nthings like random number generators should be the same, and also a device that gets added per driver if you want a PRNG (allowing for different algorithms and devices to have RNGs that don't affect each other etc.)\n. some hardware does have genuine random number generators tho, system32 comes to mind plus simulation of some protection devices eg. the Kaneko ones.\nI think having it as a device, which can be named (and if it is a fake one, given a name/tag to show such) could actually be useful.\n. I think these things MASH are adding are ok, sounds like he has a source that was a mirror of some old mamedev stuff, as opposed to the modern 'dat' based collections which unfortunately have all recognized roms and often readmes stripped out of the sets making them much more difficult to work with.\n. I've never seen these games with 4-way sticks so I don't believe this to be correct.\nWe need a level of abstraction for control panels rather than the input ports and control types being mushed together.\n. hmm well if the manual states it, and there are no ill-effects, then I guess it can be done, as you say, I don't think most ops bothered in practice tho, the only times I've seen these games they've been in generic cabinets and 4-way sticks pretty much went out of style with the classic 8-bit games that commonly used them.\nStill, do need selectable panels, there are some games where the cabinet type is configured in service mode and MAME is just coded around whatever the default is whereas allowing the user to choose control panel types to match their selection in service mode is really needed, and fake dipswitches aren't the answer ;-)  Some of the System32 games do this, I believe Spiderman is one.\n. yeah, this was changed at a period where the rather misguided policy was to merge roms in clones for cases where\nrom1+rom2 in clone = rom3 in parent\nand just use rom3 for those cases.\nobviously this ends up creating rather weird frankenromsets that don't quite match a PCB, so going back to the proper dump makes more sense even if data is duplicated.\n. Yes it should definately be marked as a BAD_DUMP sorry i plain forgot to make it so\n. no, just no.\nthis is pointless, the bootleg rom (which is 100% of the CPU code and the only difference between a bootleg and original) is from a bootleg, adding it to the parent set achieves nothing.\nthe real rom still needs dumping, there's no point at all to doing this, it just makes the 'original set' operate as a bootleg.  if you want to run this code then run the bootleg.\n. Sure ok, i just thought it was better that the parent at least fuctions till such a time as the proper\nand correct CPU for the parent is dumped i'll close down the request now.\n. it is not important that the parent set functions, it's important that the parent set fully documents that there's no dump of the CPU module from the original game, and therefore no code to run.\na dev is known to have one of these (although he's been saying that for several years now, heaven knows if it still works)  Ideally it would be sent to Charles who can do what he did for Free Kick.\n. Not an ideal situation, but it makes sense to me at least to make the parent set of Counter Run work\nby using the CPU from the bootleg until such a time as the proper CPU from this set is dumped. There are\ninstances where this has been done in other drivers.\n. why are you resubmitting this?\nI already said it's a terrible idea.\nThere is no requirement for the parent to work, making the set 100% identical to the bootleg set serves no purpose and is completely misleading.\nThe only instances where this has been done in other drivers are where maybe one small part is missing and we use something from a bootleg, not the ENTIRE cpu code.\n. basically it needs doing properly, or not at all, because this has no purpose, if you want to run that bootleg, run that bootleg, using it as a fake rom in the parent just degrades the documentation.\nall you're doing is making the parent the bootleg and calling it not a bootleg.\n. Haze You dont agree with this i fully understand, i come at it from a different perspective as i was brought up and taught sometimes your best to make the best of a bad situation. Your from the same country as me so im sure you'll get this Hula Hoops analogy...............\nI love Hula Hoops but their \u00a31 a bag and i only have 50p but there is something similar Potato Rings made by Tesco which are 50p a bag i then have two options i can simply do without or i can buy the\nPotato Rings sure their not as good as Hula Hoops but they'll do in the meantime.\n. your analogy makes no sense in this situation.\nthis is not a 'bad situation' this is accurate documentation.\nif you want to run the bootleg you can run the bootleg.\nmisrepresenting the set is a 'bad situation'\n. Yeah fair enough i'll stick wiht the Hula Hopps\n. it's pointless tho, it just makes the clone and parent 100% identical.\nwe have no way to know if the bootleg is actually the same code revision as the label we have for the CPU, so we either have a potentially wrong label associated with the data (bad documentation) or scrap it completely (which this patch does, throwing away documentation)\nall for no benefit, because you can already run the bootleg and get exactly the same result without us misrepresenting anything at all.\nthe situation right now is the correct one.  the only other real solution would be to delete the current parent (since there's no unique data dumped for it) have the bootleg as the parent, and note that the original isn't dumped in the source, but I think the current setup works better because it clearly exposes the CPU module and its associated label as a NO_DUMP in our XML output (a 100% factual situation)\nif anything having some non-working parent sets is good because it makes people think twice about that 'parents only' mentality too.\nmore interesting than all this messing around would be if somebody wrote an MCU simulation to make the protected bootleg work.\nif Chris would get his original PCB / module to Charles before it's deader than a dodo it would resolve the whole thing anyhow.\n. furthermore, I've seen people say in the past that some of the powerup behaviors in the bootleg don't seem quite right (IIRC it was in a MARP replay, something with the 1-ups?) so it's possible the unprotected bootleg set is actually hacked from an MCU protected bootleg set with the protection removed again, or it's a glitch in the game that happens in certain situations.\nwe have no idea how close the bootleg roms are to what should be in the module so using it as a fake rom in the parent set isn't even necessarily going to give correct results, it's best just left placed where it is now, in the bootleg set.\n. this is an interesting one.\nyour submission seems to assume that the tilemaps are completely independent, however, I've wondered for a while now if maybe this isn't the case and if what you do with one potentially affects the others (if all tilemaps are handled by a single IC this could be the case, I didn't find good enough references to tell me)\nthe reason I say this is the soldam hack, needed for the high score table (and a few other elements IIRC) to render correctly.  I wonder if the way they set up the other tilemaps forces the tilemap we need a hack on into that mode even if that tilemap doesn't explicitly set it.\nI never did any extensive research on the subject however.  It could just as easily be some missing mirroring or 68k byte smearing situation.\nsomething you might want to consider tho\n. Karateco was a bootlegger, so this should probably be marked as a bootleg.\n. would nice to see this supported, it's one I submitted many years ago but was not accepted due to only being a change in the sample rom, however it's definitely something of a curiosity and hopefully new policy should make it acceptable.\n. In this case it's less harmful than making them completely unavailable to the user, which was the old policy.\nIf the manual says they're unused, it's a fair base assumption (and in most cases, correct) if somebody proves that wrong they can be updated again.\n. why closed? it can remain open until it can be merged, it isn't going to change between now and then..\nwith the previous ShouTime submission I was asked to do things via Pull Request, which I've done here.\n. closed this because i accidentally ended up putting the clone addition in here when it was meant to go elsewhere.  if the Konami change is actually wanted can create a new one for it.\n. https://s12.postimg.org/68h1oyf5p/0056.png is the title screen\n. if anybody can trace the crashes that would help, gdb is giving me nothing.\n. ahh, I looked in a few other drivers, and the ones I looked in weren't using GAMBLE_BOOK or MEMORY_RESET, I did search for BOOKKEEPING and it didn't throw up anything so thought there wasn't a specific input for it.\nif you want to merge it and correct them, and do whatever you need to do to the ticket dispenser that might help.\nhooking these things up properly in MAME is relatively recent, old policy was to basically ignore them, sfbonus.cpp could do with proper hookups for all the payout / ticket printer methods too. \n. > That's not how this works. You can't keep acting like you don't have to do things properly. You fix it, then we merge it.\nI don't see what's wrong with letting somebody take over it if they've expressed an interest, it's what I call teamwork.\n. > It's not so surprising that usage of IPT_MEMORY_RESET is still relatively low; I added it to MAME only fairly recently, and since then have been going through gambling drivers to increase its usage, hooking up dispensers to most of those as well. (The reason I didn't use IPT_MEMORY_RESET in mjsister was that it actually has two \"M. Reset\" inputs, and neither is actually functional.)\nI do also wonder if 'Memory Reset' is the correct term here, it clears the stats if you're in the bookkeeping mode, but doesn't actually completely wipe memory.  Sometimes 'Memory Reset' means blank memory entirely, sometimes initialize memory, so I'm not 100% clear on if all use cases are covered by the same input (might explain why some games have 2) or if this is actually the correct one for this situation.\n\nThe ticket_dispenser_device issue obviously can only be fully resolved by a larger-scale cleanup which I intend to do when I find the time for it.\n\nThank you, that is what I was hoping to hear before the needlessly aggressive comments from somebody else.\n. the ticket dispenser hookup is taken straight from a driver that was only just modernized.\n. fwiw I think the decryption problem could be an error in the original submission.  The code sent was as follows.  The code references type1_map1100 but the structure provided is type1_map1090.  The comments do describe this structure, but I'm wondering if there has been a mixup.  Obviously the code as-sent was never going to compile, changing map1090 to map1100 allowed it to compile, but the decryption fails.\n`\n static UINT8 type1_map1090[8] = { T1PROM,T1PROM,T1LATCHINV,T1DIRECT,T1PROM,T1PROM,T1LATCH,T1PROM };\n/***********\n\n-  TYPE1 DONGLE DP-1100/DP-2100 map for Ocean to Ocean\n  \n- Latched bits                          = $44 (2 latch bits)\n- Input bits that are passed uninverted = $10 (1 true bits)\n- Input bits that are passed inverted   = $00 (0 inverted bits)\n- Remaining bits for addressing PROM    = $AB (5 bits)\n- Latched bit #0:\n- Input bit position  = 2\n- Output bit position = 2\n- Type                = Inverting latch\n- Latched bit #1:\n- Input bit position  = 6\n- Output bit position = 6\n- Type                = Non-inverting latch\n  *\n  *************/\nMACHINE_RESET_MEMBER(decocass_state,cocean1a) /* 10 */\n{\n    decocass_state::machine_reset();\n    LOG(0,(\"dongle type #1 (DP-1100 map)\\n\"));\n    m_dongle_r = read8_delegate(FUNC(decocass_state::decocass_type1_r),this);\n    m_type1_map = type1_map1100;\n    m_type1_inmap = MAKE_MAP(0,1,2,3,4,5,6,7);\n    m_type1_outmap = MAKE_MAP(0,1,2,3,4,5,6,7);\n}\n`\n. should be ok now.\n. I can understand why this is being done, but at the same time I do wonder if it's wise.\nThe macros do hide parameters, but they also enforce standards.  Without them it becomes easier to write code that doesn't pass all the parameters around which later on can cause problems if the code needs to be re-purposed to work with elsewhere else in MAME.\nThey things like the read/write handlers for bytes/lines also make it very clear from a documentation point of view if something was a line or something was a byte, they enforce a naming standard which makes the code easier to read.\nThe cleanups that were done in the past to use the macros wherever possible, and enforce some standards that way actually helped a lot, and while from a pure 'clean code' perspective this makes sense I do wonder if it isn't actually going backwards and undoing a lot of the hard work people did before while potentially making things more difficult to maintain going forward.\n. Well I was more taking about cases where we have read/write handlers that aren't called directly by the memory system, but by other functions.\nit was still nice form, and a decent tidy up to have them as read/write handlers because they serve the same purpose, ensuring everything got passed down, same parameter order, same names etc.  with a clear purpose.  It made reusing the code inside them easier if you ever did need them to be used as real memory handlers.  A lot of effort was put into cleaning things like that up in the past (not by me, but in general)\nWith that structure gone I can see things diverging more outside of the direct calls from the memory system, and I'm not entirely sure that's a good thing.\n. I had, but didn't include it in the request because my editor decided to reformat the entire file, need to work out how to turn off that useful option, or have somebody else do that bit.\n. we're also going to have to run our own servers of various kinds for internal communications in order to keep some of the devices we emulate in the future happy (cases where the original servers are no longer online so we have to fake data to keep things happy)\nOne example might be simulating the original xbox live servers so that those parts of the emulation can be used with a fake / replacement store for non-physical items and game updates)  In other cases, authentication servers for obsolete software, there's a fair bit out there now that you have to crack as the servers don't exist anymore.\n. ",
    "Tafoid": "No sense in waiting on this one - harmless clarification.\n. -       ROM_REGION(0x400 , \"iocpio\" , 0)\n- ROM_LOAD(\"pio_a72.bin\" , 0 , 0x400 , BAD_DUMP CRC(8c8e740b))\nThis is missing,  Please provide a link for someone on the DevTeam to download or it may be commented out of the source until it surfaces.\n. Discussed with system11, the changes all look legit and have multiple PCB snaps to back up most of the changes on the sets as well as corrected mistakes to overdumps which he originally did when added the first time.\n. If you are adding sound unless you know it is 100% correct, please flag the\ndriver as GAME_IMPERFECT_SOUND.  Leaving this empty if the sound is not\n100% correct encourages bug reports for things that are already known.\nAlso, regardless of how slow the emulation is.. using \"-wavwrite xxxx.wav\"\nwill record a wav file at the proper emulation speed letting you know if it\nsounds correct even if performance suffers and causes stuttering/glitching\nin real time.\nOn Tue, Jun 16, 2015 at 9:08 AM, Felipe Corr\u00eaa da Silva Sanches \nnotifications@github.com wrote:\n\nI've just updated the if/else code-style.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/213#issuecomment-112421236.\n. As near as I can tell, these changes or #297 might be the cause of a few noted at.c regressions if you could kindly look at them.   There may also be more, but these are the observed issues:\n\napxenp2 - at.c\nTaking longer to kick into BIOS/Init screen. Driver isn't working but at least does that after a bit of resetting.\nOn-Screen Popup - \"Char SEL checker, contact MAMEdev (02 00)\"\nk286i - at.c\nResolution changed unexpectedly - screen snaps at 320x200 (before it was 640x200). The text mentions \"Display adapter failed; using alternate\"\nibm5162 - at.c\nBIOS now beeps signifying missing/undetected components.\n. Missing the pro128s romset and the pro128_cart contents.  I was able to\nfind the pro128_cart softlist items off list (retroroms), but the needed\nrom for pro128s is not found:\n\u200bmos510o.ic49 NOT FOUND (tried in pro128s bbcmc pro128s)\n. oops.. that would help huh?\nScott\nOn Mon, Sep 7, 2015 at 9:44 AM, Felipe Corr\u00eaa da Silva Sanches \nnotifications@github.com wrote:\n\nThese changes were meant to be part of this previous pull request:\n309 https://github.com/mamedev/mame/pull/309\nThe changes were, by mistake, only staged but not actually committed and\npushed.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/312#issuecomment-138303511.\n. Some regressions/observed differences.  There are likely more sets which also have problems,  but this is just based on a before/after regression testing and 10 second snapshot comparisons.\n- doncdoon, kurufev, starsldr- aleck64.c\n\nGame vertical resolution is x2 before causing screen to appear in top half of screen - Was 640x474, now 640x948.\n\n\n\n\nmayjin3, twrshaft - aleck64.c,  n64 (sm64u) - n64.c\n\nSome observed timing issues - test cases.  Is current correct now?\n\n\n\n. The roms needed for this device, to my knowledge, have not surfaced yet.  Please provide them to a Dev in the know or use the email address for external code submissions:  http://wiki.mamedev.org/index.php/Submitting_Source_Code\nThank you.\n. Yes.  Any sets that use the code in question involves netlist discrete emulation in some form.\n. Current GIT sources show this:\ndvk_ksm01 - dvk_ksm.c\nFATALERROR: Unable to resolve I/O port callback reference to 'SA1' in device ':ppi8255'\n. There is one driver that has an observed graphics change with which might\nnot be expected, malzak.c.  As the snapshot (-str 10 regression run test)\nattached shows, there is a black line on the screen. Does something driver\nside need to be adjusted to fix this for malzak.c games?\nTafoid\n\nOn Sat, Oct 24, 2015 at 2:33 AM, Miodrag Milanovi\u0107 <notifications@github.com\n\nwrote:\nMerged #413 https://github.com/mamedev/mame/pull/413.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/413#event-444470736.\n. I noticed some regression which seem tied to the i8251 device changes.  It is important to at least give cursory checks to associated drivers which use a device you are working on for a current one.\n\nIn this case, these sets seem to have regressed and no longer show any text.  There may be more but this is based on screen comparisons of a 10 second test run for each.\nsage2 - sage2.c\nsdk80 - sdk80.c\nsoftbox - softbox.c\nxor100 - xor100.c\nIf you could please look at these, perhaps something driver level for each needs to be adjusted.\nThanks!\nTafoid\n. Any movement on this before we go to release tomorrow?  We have about 12 hours to come up with a solution or it gets marked in an MT bug upon release..\n. I haven't looked into the changes, but the initial default mapping of the buttons are supposed to make sense for keyboard use which is what most developers use when working with the drivers themselves.  Any enhanced mapping can and has always been done by end users to handle their specific controller(s).  This is just my opinion and wouldn't be surprised if others had the same thoughts.\n. Shideravan,\nI know you mentioned \"Contact me for the CHDs\", but this shouldn't need to be done by any Devs directly.  It is custom for those who add softlist entries or other games to the MAME source to be prepared to make them available for examination and verification and able to be obtained at the time of your submission.\nUpload to a filesharing site (sendspace, mediafire, mega, etc) the file(s) in question and then share the link with any active developer privately or send such links to the submission email address: \n   FTP and other options are also available for you as requested.\nAs it stands, your psx list additions are in danger of being rejected/reverted due to inability to recreate your hashes with known sources.  Please contact someone regarding this also being able to detail how/what program or hardware was used to produce the dumps.\n. Going though some things I noticed the softlist you added bbc_68000_flop.xml is attached to no driver or set.  We like to avoid adding more orphaned lists whenever possible.  Will an appropriate set be showing up to allow this image to be used or tested?\n. This looks to be the cause of compile issues - Windows - GCC 5.2.0\nhttp://pastebin.com/q58y73Dy\nOn Tue, Dec 15, 2015 at 1:13 PM, fulivi notifications@github.com wrote:\n\nHi,\nI've just pushed the first version of the hp9845b driver I'm working on.\nIt's still WIP but it's usable.\nLet me know where I should send the zip file with rom images, please.\nThanks.\n-- F.Ulivi\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/502\nCommit Summary\n- hphybrid: first draft of HP-5061-3001 CPU driver\n- hphybrid: access to top half of base page fixed\n- hphybrid: register W added (it's needed by 9845 test ROM)\n- hphybrid: implemented all EMC instructions, seem ok\n- hp9845b: first version (implemented devices: 2 CPUs, RAMs, test ROM,\n  text mode video)\n- hphybrid: added selection of boot mode for 5061-3001\n- hphybrid: fixed MAE bug, added \"PA changed\" callback\n- hp9845b: first release (to be completed)\nFile Changes\n- M src/devices/cpu/hphybrid/hphybrid.cpp\n  https://github.com/mamedev/mame/pull/502/files#diff-0 (985)\n- M src/devices/cpu/hphybrid/hphybrid.h\n  https://github.com/mamedev/mame/pull/502/files#diff-1 (236)\n- M src/devices/cpu/hphybrid/hphybrid_dasm.cpp\n  https://github.com/mamedev/mame/pull/502/files#diff-2 (308)\n- M src/mame/drivers/hp9845.cpp\n  https://github.com/mamedev/mame/pull/502/files#diff-3 (629)\nPatch Links:\n- https://github.com/mamedev/mame/pull/502.patch\n- https://github.com/mamedev/mame/pull/502.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/502.\n. I suspect this submission as being the cause for a crash/exception upon exit for most system which use DRC or DRC backend such as the following driver examples: (aleck64, coolridr, stv, deco_mlc, model3, taitotz, cps3, psikyosh, suprnova and many more).  The MIPS core doesn't seem to be influenced by this, examples of such are (kinst, vegas)\n0  0x00000000008759ec in resource_pool::remove ()\nat ../../../../../src/emu/emualloc.cpp:127\n1  0x000000000082eb99 in drcuml_state::~drcuml_state ()\nat ../../../../../src/devices/cpu/drcuml.cpp:145\n2  0x0000000000cb223c in std::default_delete::operator() ()\nat C:/buildtools/vendor/mingw64/x86_64-w64-mingw32/include/c++/bits/unique_ptr.h:76\n3  0x0000000000d0c4de in std::unique_ptr >::~unique_ptr ()\nat C:/buildtools/vendor/mingw64/x86_64-w64-mingw32/include/c++/bits/unique_ptr.h:236\n4  0x0000000000ba8c9b in ppc_device::~ppc_device ()\nat ../../../../../src/devices/cpu/powerpc/ppc.h:174\n5  0x0000000000bcced3 in mpc8240_device::~mpc8240_device ()\nat ../../../../../src/devices/cpu/powerpc/ppc.h:732\n6  0x0000000000bcce4a in mpc8240_device::~mpc8240_device ()\nat ../../../../../src/devices/cpu/powerpc/ppc.h:732\n7  0x0000000000bb0379 in simple_list::remove ()\nat ../../../../../src/lib/util/coretmpl.h:242\n8  0x0000000000bb01d0 in simple_list::reset ()\nat ../../../../../src/lib/util/coretmpl.h:89\n9  0x0000000000bb03da in simple_list::~simple_list ()\nat ../../../../../src/lib/util/coretmpl.h:78\n10 0x0000000000867ae3 in device_t::~device_t ()\nat ../../../../../src/emu/device.cpp:72\n. It is a valid current GIT tree issue with all game Using DRC.  It is being looked into\n. I am curious why the renaming had to happen since most all other softlists have common endings (_cart, _flop, _cass) when there are multiple media types for a certain machine.  Personally, I've found it useful to have those unique identifiers in the same place for all XMLs.\n. In doing some testing, we have regressions.  Integer release (0.170) is to come early Wednesday Morning (January 27, 2016), so please examine/fix these issues or revert your other work before then.  If more items come up (still testing..) I will report them here\n\n\nRegion ':sprites' found but is width 8, not 16 as requested\nRequired memory region ':sprites' not found\nbeautyb, iqpipe - system16.cpp\nbloxeed, bloxeedd - segas18.cpp\n\nRequired memory region ':sprites' not found\nAll sets in segaybrd.cpp\n. I suspect a regression happened here causing exception/crash with the following sets:\ntorchh10, torchh21 - bbc.cpp\nException at EIP=024D7934 (device_slot_interface::get_card_device()+0x0014): ACCESS VIOLATION\nPlease see what you can do.\n. Issues with cart loading causing crash:  m5, m5p - m5.cpp\nNot certain if it is this submit of something that happened when it was made to compile for all targets:  https://github.com/mamedev/mame/commit/ae55e9ffcba46faa090121ee56c4f8f0f7a69133\nExamples:  mame m5 -cart1 scobra  /  mame m5 scobra\nException at EIP=01407D41 (m5_state::machine_reset()+0x0081): ACCESS VIOLATION\n. There is an issue with this that was discovered and being that we have only a few days before release we'd like to see it fixed.\nYou can activate a normal cheat, then goto autofire and activate a button for autofire, or even enable/disable it.  When you return to the cheats, they are all shut off.\nExample:  defender\n- Enter Cheat Menu and activate Invincibility \"ON\"\n- Enter Autofire Settings and change any setting there (turn it on, or activate a specific button)\n- When you leave the Autofire Settings menu and return to normal cheats, they are all set to \"OFF\"\nIn practice, going to another menu should not eliminate settings from another.  Could someone please look at correcting this?\n. Yes.  Both mephisto.c and mmodular.c will need to be adjusted.\nLocally you could simply adjust source file:   scripts\\target\\mame\\mess.lua and delete the two lines below:\n    MAME_DIR .. \"src/mame/drivers/mephisto.cpp\",\n    MAME_DIR .. \"src/mame/drivers/mmodular.cpp\",\nUnsure when the actual fix will happen as the recently dropped mboard file is needed for those chessboard drivers.\n. The UI got a major change in 0.171, which is the latest binary.  It is\nworking fine for games which are not able to load with a clear message what\nto do.\nOn Fri, Mar 11, 2016 at 4:02 PM, Sworddragon notifications@github.com\nwrote:\n\nI'm using MAME 0.170 and if I try to start a ROM that is invalid the error\nmessage \"The selected game is missing one or more required ROM or CHD\nimages. Please select a different game. Press any key to continue.\". But on\npressing any key besides removing this message the next action will be\ndone. For example on pressing enter the ROM is tried to be loaded again\nwhich results that the error message appears again. I think pressing any\nkey at this point should really only remove the error message and nothing\nmore.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/707.\n. This is not how it works.\nYou need to place any roms in the default place \"ROMS\", a folder where you\nMAME executable stands.  It can be a .zip or a .7z file. If you want\nanother path outside of default, you can manually adjust the mame.ini file\nand add a ROMPATH entry (with a ; separator) or use the MAME's internal UI\nto select one: \"Configure Options\" -> \"Configure Directories\" -> \"ROMs\".\n\nOn Fri, Mar 11, 2016 at 4:10 PM, Sworddragon notifications@github.com\nwrote:\n\nIf I'm trying to choose a path for the gamename argument for example by\nexecuting \"mame ./circus.zip\" the game doesn't start as MAME claims that\nfiles are missing. Maybe MAME could also support using a path for the\ngamename argument.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/708.\n. That said, if you are using a machine which doesn't fall under the normal \"mame (setname)\" usage, such as a game console, computer or other machine which uses detachable media, you can use a logical path to start those in MAME, as in this example:  \"mame nes -cart c:\\nintendo\\nes\\super mario 3.nes\" (or a .zip/.7z containing that file similarly named).\n. multithreading or -mt, in this case, is not directly linked to processor CPU cores, but allows them to be used for graphics processing.  The command causes the window and all Direct3D code to execute on a second thread, which can improve performance on hyperthreaded and multicore systems. The default is OFF because there are some machines which do not function properly with it and cause graphic emulation problems where they didn't exist before.  It is strictly use as your own peril at this moment and as ppriest mentioned - it will likely be removed entirely.\n. Testing this morning based on this submit is showing all drivers/machines which have resolutions which are purposely larger for rendering (eg. sega system 1, galaxian, pce/tg16, snes, pc-based) are all showing aspect ratio cropped RAW snapshots surrounded by black screen when they should be showing snapshots entirely stretched out as rendered in the core.\n\nAttached are some examples of these taken from my regression test this AM (-str 10) which automatically takes a \"final.png\" snapshots and was compared to the previously logged run.\n\n\n\n\n. Regarding the presets you added to the INI folder - should those be internal and not depend on external files?  Users may already have .ini files which will be overwritten as soon as they update GIT or update the next integer release (if these stay in source) which will likely lead to very unhappy campers.\n. Sadly, this was applied without any sourcing or testing of the romset.\nCould you please provide the needed missing as soon as possible?\nSpectrum ED [folder: spectred - parent: apple2e]\nmissing rom: 167_8980.u5 [size: 4096] [CRC32: a501f197] [SHA1: 136c2b562999a6e340fe0e9a3776cea8c2e3647e]\nmissing rom: spm-c_ed_06-08-85.u6 [size: 32768] [CRC32: a1b9ffe4] [SHA1: 3cb281f19f91372e24685792b7bff778944f99ed]\nmissing rom: spm-c_ed_50-09-86.u50.H [size: 16384] [CRC32: 1fccaf24] [SHA1: 1de1438ee8789f83cbc97f75c0485d1fd0f58a38]\nmissing rom: spm-c_ed_51-09-86.u51.H [size: 16384] [CRC32: fae8d36c] [SHA1: 69bed61513482ccb578b89c2fb8e7ba2258e82a5]\nThank you!\n. This was sent a bit earlier to the proper email and has been handled now.\n. Regression noted:\n\nhdrivair, hdrivairp, racedrivepan, strtdriv - harddriv.cpp\nRegion 'user1' found but is width 8, not 16 as requested\nRequired memory region 'user1' not  found\n. I failed to see another regression earlier because argely non-working and very slow drivers tend to take hours just to check ~400 sets so they are tested periodically, last time being 4 days before this commit.  Anyway, this has caused regression in those driver which use \"NAOMI_GDROM_BOARD\" sets which appear to be used by chihiro.cpp, naomi.cpp and triforce.cpp.\n\nCurrently all sets which use a CHD show:  \"Fatal error: GDROM: Could not find the file to decrypt.\"\n. Funny, I just put up a report for this at MAMETESTERS\nhttp://mametesters.org/view.php?id=6176\nIf you find other confirmed bugs/regression and it is something that can be\nduplicated with the release version (not current GIT), the report should be\nfiled at mametesters.org, not here.\nOn Fri, Apr 8, 2016 at 1:57 PM, justindarc notifications@github.com wrote:\n\nLaunching games that are based on ksys573 (such as the DDR games) results\nin \"CDR BAD\" at boot-up with the message \"HARDWARE ERROR...RESET\". These\ngames previously did not have this issue in v0.171.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/796\n. Noticed regression from this submit:\npve500 - pve500.cpp\nHangs MAME at startup - must use -watchdog or forcibly close\n\nMore if/when they are discovered.\n. Can you give us any links, pictures or other documentation that states this fact?  It is possible to be properly emulated, it needs to be added as a slot device rather than built-in to the default.\n. This file may be useful to an external tool, front-end or historical document (such as mameinfo.dat), but it doesn't belong in the current MAME distributions in my honest opinion.  With MAME we deal with the most current released binary and primarily care only to focus our energies on that release rather than listing commands or triggers that are no longer valid and are therefore unimportant.  MAME will warn you if there is a command in your .ini that is not recognize and a text list of such in a text file strikes me as needlessly redundant.\n. Whether by design or not, the machine ABC1600 watchdog resets every 2-3 seconds after adding it to the driver.\n. ## There appears to be others related to this change that are crashing:\nbubsymphb - taito_f3.cpp\nException at EIP=0258A589 (watchdog_timer_device::watchdog_reset()+0x0009): ACCESS VIOLATION\nlupin3a - 8080bw.cpp\nException at EIP=009589D7 (_8080bw_state::screen_update_lupin3(screen_device&, bitmap_rgb32&, rectangle const&)+0x01f7): ACCESS VIOLATION\n. Someone assembling CHD's came across some issues (as reported by 'oddi' in IRC #mess-dev (freenode):\n\nlooking at dat for fm towns just noticed that Alice no Yakata CD and Alice no Yakata III have the same sha1 so Alice no Yakata III is probally wrong and maybe 6 chds have bad sha1 , try few variants for convert from Neo Kobe Collection, but not luck\n38-man Kilo no Kokuu [folder: 38mank - size: 1mb]\nmissing set: 38-man Kilo no Kokuu\nmissing chd: 38-man Kilo no Kokuu.chd [chd-sha1: 8b3aed4b095183e3b9a0ee88e7dfd34d1c44e7d7]\n3x3 Eyes: Sanjiyan Henjou [folder: 3x3eyes - size: 0]\nmissing set: 3x3 Eyes: Sanjiyan Henjou\nmissing chd: 3x3 Eyes - Sanjiyan Henjou.chd [chd-sha1: 243e61ee754eb6c7efc55a692cc89b0dd31d944c]\n4D Driving [folder: 4ddriv - size: 0]\nmissing set: 4D Driving\nmissing chd: 4D Driving.chd [chd-sha1: b09e774be4ee926dc32efd2e3b28dd72bc223c76]\nAmaranth III [folder: amarant3 - size: 0]\nmissing set: Amaranth III\nmissing chd: Amaranth 3.chd [chd-sha1: 9c83fcd4623dd62dcfc7c683c82836704f8665a7]\nAngel [folder: angel - size: 0]\nmissing set: Angel\nmissing chd: Angel.chd [chd-sha1: e8da3eae3b949459751fd027579aee52b167dc2f]\n. http://mametesters.org/view.php?id=6221\nPosted to MT\n. Just know this is a fix for http://mametesters.org/view.php?id=3321 (MT Bug #3321)\n. Suspect regression of \"~\" slider menu malfunction to this submission.\nUnable to use \"~\" to bring up slider menu - instead flashes TAB menu quickly then screen disappears.\n. To my knowledge MAME has never allowed for recursive folder structure like that.  To support such a recursive path would likely cause a lot of slowdown (especially on startup).  Each path that has roms needs to be explicitly defined in ROMPATH in your .ini file.  In your pictured case, you should only need two:\n\nrompath            \"i:\\mame\\mame roms\";\"i:\\mame\\mame software list roms\"\nYou'll do yourself a favor in the end by shortening your folder names and getting rid of spaces - most people just use \"roms\" and \"software\" for simplicity.  If you have a space, the path needs to be in quotes but the UI should do this for you if selecting them.\n. The migration of the binaries are a WIP to use GITHUB as the primary host.  AFAIK we have from 0.100 onward covered pretty well on mamedev.org.  Prior binaries will be added sooner or later.\nFor now, you can use this link \nGoogle provides other places too depending on the version searched for so long as you are accurate in your searches.\n. To OP,\nAm I to understand 0.174 worked for you for a time, then didn't?  Doesn't that point more to either a local system configuration problem or maybe an update gone awry?  Do you have other keyboards to test that might be non-USB and are supported by your system.  Does the OS/GUI for Mate have an on-screen keyboard which can be used with the mouse?\n. You mentioned 0-9 can be pressed, but what of the other keyboard keys.  As it stand right now, you can use a-z and some others to load/save via F7/SHIFT+F7\n. This has caused a regression with audio (no music, but speech is still intact) for all games in zaccaria.cpp.   More issues as I detect them...\n. The current solution we've been suggesting is, once you have your global (default) configuration correct with your pad mapped, adjust the file properties of the .CFG file to READ ONLY so it does not get overwritten when you exit MAME without the controller plugged in.  This should retain the mappings for you the next time you load MAME.\n. MAME already allows for a stepping of slider values.  Holding LEFT CTRL while using arrows will increment a full integer value at a time.  Holding LEFT ALT while using arrows will bring values to MAXIMUM or MINIMUM allowed.\n. When overclocked, many machines can show instabilities. malfunction, hang, or cause other visual or audio bugs which tend to trigger false testing reports.  As a result, much like the warning screens for problem games and machines, we have a long standing policy of not allowing this option (or removal of important information screens).\nIf you want to chronically overclock emulated CPU speeds, it is suggested that you adjust the driver source to the level you require before compiling.  The slider option is meant to be there as a Developer tool (only triggered with -cheat) and is not viewed as a permanent solution.  Once a Developer gets the correct CPU speed, they simply adjust the source files and it's done.  You can do this yourself as well with your local compile/source tree and you'll not have to deal with sliders anymore.\nAs it stands I only know of 2.. maybe 3 drivers which people commonly overclock (Double Dragon, Neo-Geo (mslug), Hard Drivin). \n. Daily testing flagged a regression and checking the devices it seems this commit appears to be responsible for it (changes in z80scc), for machine hk68v10\nhttp://mameload.mameworld.info/hk68v10-diff.png\n. This adds KEYCODE_F keys which are above the F15 which input.h can deal with.  Therefore, it doesn't compile unless you forgot to merge core input changes as well to take in account your driver additions? \n. There is a report on MT which no one can duplicate either that sounds similar to this.  Same person here?\nhttp://mametesters.org/view.php?id=6389\n. GIT as of https://github.com/mamedev/mame/commit/9705b0ccb150ce04ada0fce8cd07b02badcef77a (9 hours ago) seems ok before starting when I start mame64 and select metal slug X from menu, it shows me all the neogeo bioses as expected.  Tested both 5.4.0 and 6.1.0 toolchains, full mame build in 64-bit.  32-bit from 6.1.0 also looks ok.  5.4.0 of 32-bit untested.\nThe BIOS listing as mentioned above via -listxml does seem to be an issue, though.\nThe picture hap shows (picking BIOS from TAB menu) does show the same and is in error.\n. This appears to be a regression in how \"ROM_COPY\" functions.   For example, the driver has:\n\nROM_COPY( \"main_code\", 0x18000 + 0x2000, 0xe000, 0x2000 )\n\nBefore August 1st, this was handled and the expression was valid.  Now, it doesn't appear to be working as when I change the 0x18000 + 0x2000 to 0x1a000, the game works once again.  I believe we had a similar issue with ROM_FILL also malfunctioning so there may be a relation.\nThe push here seems to be the culprit:   https://github.com/mamedev/mame/commit/871656c98caca81aa501c3dbdc8d0a581e2b0178\nNOTE:  There were 2 ROM_FILL fixes\nhttps://github.com/mamedev/mame/commit/062017977dbbaae000e8e5ecbeef5a9662e85b9c and https://github.com/mamedev/mame/commit/a475f61dd8e9b22a07c3b9f021b31c5095b4c387 which both may need reexamination/reverting.\nAttention @npwoods \n. Unable to compile Windows GCC 6.1.0\n\nCompiling src/mame/drivers/gba.cpp...\nIn file included from ../../../../../src/mame/drivers/gba.cpp:18:0:\n../../../../../src/mame/drivers/gba.cpp: In member function 'void gba_state::gba_io_w(address_space&, offs_t, UINT32, UINT32)':\n../../../../../src/mame/includes/gba.h:13:58: error: narrowing conversion of '(((gba_state_)this)->gba_state::m_regs[(((184 + (0 * 12)) - 96) / 4)] >> 16)' from 'UINT32 {aka unsigned int}' to 'UINT16 {aka short unsigned int}' inside { } [-Werror=narrowing]\n #define HWHI(x)              (m_regs[(x - REG_BASE) / 4] >> 16)        / 16-bit Register, Upper Half-Word /\n                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~\n../../../../../src/mame/drivers/gba.cpp:36:21: note: in expansion of macro 'HWHI'\n #define DMACNT_H(c) HWHI(0x0B8 + c * 0xC) / 0x40000BA  2  R/W   DMA 0 Control /\n                     ^~~~\n../../../../../src/mame/drivers/gba.cpp:761:25: note: in expansion of macro 'DMACNT_H'\n  UINT16 dmachcnt[4] = { DMACNT_H(0), DMACNT_H(1), DMACNT_H(2), DMACNT_H(3) };\n                         ^~~~~~~~\n../../../../../src/mame/includes/gba.h:13:58: error: narrowing conversion of '(((gba_state_)this)->gba_state::m_regs[(((184 + (1 * 12)) - 96) / 4)] >> 16)' from 'UINT32 {aka unsigned int}' to 'UINT16 {aka short unsigned int}' inside { } [-Werror=narrowing]\n #define HWHI(x)              (m_regs[(x - REG_BASE) / 4] >> 16)        /* 16-bit Register, Upper Half-Word /\n                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~\n../../../../../src/mame/drivers/gba.cpp:36:21: note: in expansion of macro 'HWHI'\n #define DMACNT_H(c) HWHI(0x0B8 + c * 0xC) / 0x40000BA  2  R/W   DMA 0 Control /\n                     ^~~~\n../../../../../src/mame/drivers/gba.cpp:761:38: note: in expansion of macro 'DMACNT_H'\n  UINT16 dmachcnt[4] = { DMACNT_H(0), DMACNT_H(1), DMACNT_H(2), DMACNT_H(3) };\n                                      ^~~~~~~~\n../../../../../src/mame/includes/gba.h:13:58: error: narrowing conversion of '(((gba_state)this)->gba_state::m_regs[(((184 + (2 * 12)) - 96) / 4)] >> 16)' from 'UINT32 {aka unsigned int}' to 'UINT16 {aka short unsigned int}' inside { } [-Werror=narrowing]\n #define HWHI(x)              (m_regs[(x - REG_BASE) / 4] >> 16)        /* 16-bit Register, Upper Half-Word /\n                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~\n../../../../../src/mame/drivers/gba.cpp:36:21: note: in expansion of macro 'HWHI'\n #define DMACNT_H(c) HWHI(0x0B8 + c * 0xC) / 0x40000BA  2  R/W   DMA 0 Control /\n                     ^~~~\n../../../../../src/mame/drivers/gba.cpp:761:51: note: in expansion of macro 'DMACNT_H'\n  UINT16 dmachcnt[4] = { DMACNT_H(0), DMACNT_H(1), DMACNT_H(2), DMACNT_H(3) };\n                                                   ^~~~~~~~\n../../../../../src/mame/includes/gba.h:13:58: error: narrowing conversion of '(((gba_state)this)->gba_state::m_regs[(((184 + (3 * 12)) - 96) / 4)] >> 16)' from 'UINT32 {aka unsigned int}' to 'UINT16 {aka short unsigned int}' inside { } [-Werror=narrowing]\n #define HWHI(x)              (m_regs[(x - REG_BASE) / 4] >> 16)        /* 16-bit Register, Upper Half-Word /\n                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~\n../../../../../src/mame/drivers/gba.cpp:36:21: note: in expansion of macro 'HWHI'\n #define DMACNT_H(c) HWHI(0x0B8 + c * 0xC) / 0x40000BA  2  R/W   DMA 0 Control /\n                     ^~~~\n../../../../../src/mame/drivers/gba.cpp:761:64: note: in expansion of macro 'DMACNT_H'\n  UINT16 dmachcnt[4] = { DMACNT_H(0), DMACNT_H(1), DMACNT_H(2), DMACNT_H(3) };\n                                                                ^~~~~~~~\ncc1plus.exe: all warnings being treated as errors\nnintendo.make:575: recipe for target '../../../../mingw-gcc/obj/x64/Release/src/mame/drivers/gba.o' failed\nmake[2]: ** [../../../../mingw-gcc/obj/x64/Release/src/mame/drivers/gba.o] Error 1\nmake[2]: Target 'all' not remade because of errors.\nmakefile:238: recipe for target 'nintendo' failed\nmake[1]: * [nintendo] Error 2\nmake[1]: Target 'all' not remade because of errors.\nmakefile:960: recipe for target 'windows_x64' failed\nmake: * [windows_x64] Error 2\nmake: Target 'all' not remade because of errors.\nDone!\n. Has already been Reported, Logged, and Fixed in Current GIT sources.\nhttp://mametesters.org/view.php?id=6335\n. It sounds like MAMEUI64 is the same binary you had before?  That site does\nnot make integrated Windows UI builds.  It sounds like despite downloading\nmultiple standalone binaries, you are still running MAME64UI every time\nwhich hasn't been updated and has the same behavior as it did when 0.176\nwas released.  Am I right?\n\nOn Sat, Aug 27, 2016 at 7:32 PM, shinra358 notifications@github.com wrote:\n\nextracted the data from the windows version from that site you linked into\na fresh folder. Put 1 MameUI64.exe into said folder. Put one rom into the\nroms section in that folder. Audited that rom. Did nothing else but turn\nthe game on and press tab. Goes into the above stated settings and it's\nstill offscreen.\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/issues/1249#issuecomment-242946729, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AIp8uDR0rl1RCxwV5jPF_YLxDam1LnlRks5qkMkWgaJpZM4Jk5fp\n.\n. Perhaps we should add a direct command line to allow for explicit image creation.  We can already create one using the internal UI.. perhaps something as simple as -createimage (filename) would be sufficient.  That said, I'm not against allowing it to function as it was.\n. There is precedent for Configuration Options for games with 'real' controls and other options.  The example I'm thinking of is 720 (atarisy2.cpp).\n. Haze,\nIf you can provide me an example or two of specific game/drivers that have regressed and I'll see what I can come up with.\n. I can confirm it.. and have a day of Dev performance tanked (January 10 of this year)\nWithout bisecting and testing, that's about all I can narrow it down to.\n\n\n[MINGW64] c:\\mamegit\\mame>mame64_0110am -bench 10 sc2prem\nID String @ 0000ff00\nPROJECT NUMBER PR6432  PREMIER CLUB MANAGER 25P !250  GAME No 95-750-848  THIS PROGRAM IS THE COPYRIGHT OF  BELL-FRUIT MANUFACTURING CO LTD  AND WILL BE STRICTLY ENFORCED  13-AUG-1996 14:05:05               1o    ?  N  ?}' N<   1  +  R&@RRS2         W\nAverage speed: 1982.67% (9 seconds)\n[MINGW64] c:\\mamegit\\mame>mame64_0110pm -bench 10 sc2prem\nID String @ 0000ff00\nPROJECT NUMBER PR6432  PREMIER CLUB MANAGER 25P !250  GAME No 95-750-848  THIS PROGRAM IS THE COPYRIGHT OF  BELL-FRUIT MANUFACTURING CO LTD  AND WILL BE STRICTLY ENFORCED  13-AUG-1996 14:05:05               1o    ?  N  ?}' N<   1  +  R&@RRS2         W\nAverage speed: 120.63% (9 seconds)\n. I'll attempt to do it sometime today or as soon as possible.  Just have a lot of testing on my plate at the moment and having to revert source tree to 8 months ago impedes that just a bit.\n. I did a bisect.. had to adjust the source for GCC 6.1 and add a flag or two to get everything to compile spending hours on it, but I got this:\ngit.exe bisect bad\nf9f908d48bd3607f8ddf529eb6b83c2b4b0b9790 is the first bad commit\ncommit f9f908d48bd3607f8ddf529eb6b83c2b4b0b9790\nAuthor: Miodrag Milanovic mmicko@gmail.com\nDate:   Sun Jan 10 18:41:17 2016 +0100\nmodernize output_manager (nw)\n:040000 040000 3f7f2bcaaf6db76ba890895bd6a5dc32669d47aa f5067a1226280b1ba0c35ec8e664ae679627e3f4 M  src\nSuccess (343 ms @ 8/23/2016 8:14:55 PM)\n\nProfiles were mentioned, this is my \"TOP 5\" output with -profile 5 for -str 10:\n58.7% -  14701 : 000007FEFD9F5920 (strcmp)\n                 000000000259CAF4 (output_manager::set_value(char const_, int)+0x0044)\n                 000000000259CCE7 (output_manager::set_indexed_value(char const_, int, int)+0x0127)\n                 000000000055DD19 (bfmdm01_device::mux_w(address_space&, unsigned int, unsigned char, unsigned char)+0x0169)\n                 0000000003266E67 (address_space_specific::write_byte(unsigned int, unsigned char)+0x0067)\n16.2% -   4060 : 000007FEFD9F5920 (strcmp)\n                 000000000259CAF4 (output_manager::set_value(char const_, int)+0x0044)\n                 000000000259CCE7 (output_manager::set_indexed_value(char const_, int, int)+0x0127)\n                 0000000000549D9E (bfm_sc2_state::mux_output_w(address_space&, unsigned int, unsigned char, unsigned char)+0x004e)\n                 0000000003266E67 (address_space_specific::write_byte(unsigned int, unsigned char)+0x0067)\n13.2% -   3297 : 000000000259CAB0 (output_manager::set_value(char const_, int))\n                 000000000259CCE7 (output_manager::set_indexed_value(char const_, int, int)+0x0127)\n                 000000000055DD19 (bfmdm01_device::mux_w(address_space&, unsigned int, unsigned char, unsigned char)+0x0169)\n                 0000000003266E67 (address_space_specific::write_byte(unsigned int, unsigned char)+0x0067)\n                 00000000031CAC03 (m6809_base_device::execute_one()+0x23a3)\n2.1% -    534 : 00000000031C8860 (m6809_base_device::execute_one())\n                 0000000001C2F169 (m6809_base_device::execute_run()+0x0019)\n                 00000000025C405C (device_scheduler::timeslice()+0x053c)\n                 0000000002584168 (running_machine::run(bool)+0x0148)\n                 000000000257EBD6 (machine_manager::execute()+0x0216)\n2.1% -    518 : 000000000259CAB0 (output_manager::set_value(char const_, int))\n                 000000000259CCE7 (output_manager::set_indexed_value(char const_, int, int)+0x0127)\n                 0000000000549D9E (bfm_sc2_state::mux_output_w(address_space&, unsigned int, unsigned char, unsigned char)+0x004e)\n                 0000000003266E67 (address_space_specific::write_byte(unsigned int, unsigned char)+0x0067)\n                 0000000001C2E37C (m6809_base_device::mi_default::write(unsigned short, unsigned char)+0x001c)\n. I wouldn't see the harm in this being a quick fix before release and working out the scrollable/pageable window in the next release.  vgmplay is likely the only machine in MAME that has so much hooked up that would require this 'shrinking' anyway - so effect should be minimal.\n. I'm suspect that the prom lengths were incorrect for 'battles' xevious clone and needed to be changed.\nIn any case, it now has bad graphics/colors now after you submission.  Please look into fixing this.\n\n\n. This commit, among some other commits, have introduced layouts which cannot properly work and cause an error with the internal lay handling system:  Below is a list sorted by driver of what I've come across.. there may just be more, too.  In the below cases, you get two instances of the following message: \n\nUnable to load component bitmap 'backdrop.png'\n\nj6bnkrcl - jpmimpctsw.cpp\nj6bnkrcla - jpmimpctsw.cpp\nj6bnkrclb - jpmimpctsw.cpp\nj6bnkrclc - jpmimpctsw.cpp\nj6swpdrp - jpmimpctsw.cpp\nj6twst - jpmimpctsw.cpp\nj6twsta - jpmimpctsw.cpp\nj6twstb - jpmimpctsw.cpp\nj6twstc - jpmimpctsw.cpp\nj6twstd - jpmimpctsw.cpp\nj6twste - jpmimpctsw.cpp\nj6twstf - jpmimpctsw.cpp\nj6twstg - jpmimpctsw.cpp\nj6twsth - jpmimpctsw.cpp\nj6twsti - jpmimpctsw.cpp\nj6twstj - jpmimpctsw.cpp\nm1monclb - maygay1b.hxx\nm1monclba - maygay1b.hxx\nm1monclbb - maygay1b.hxx\nm1monclbc - maygay1b.hxx\nm1monclbd - maygay1b.hxx\nm1monclbe - maygay1b.hxx\nm1monclbf - maygay1b.hxx\nm1monclbg - maygay1b.hxx\nm1monclbh - maygay1b.hxx\nm1monclbi - maygay1b.hxx\nm1monclbj - maygay1b.hxx\nm1monclbk - maygay1b.hxx\nm1monclbl - maygay1b.hxx\nm1monclbm - maygay1b.hxx\nm1retpp - maygay1b.hxx\nm1retppa - maygay1b.hxx\nm1retppb - maygay1b.hxx\nm1retppc - maygay1b.hxx\nm1retppd - maygay1b.hxx\nm1ttcash - maygay1b.hxx\nm3circle - mpu3.cpp\nm3circlea - mpu3.cpp\nm3circleb - mpu3.cpp\nm5barkng - mpu5.hxx\nm5circlb - mpu5.hxx\nm5circlb00 - mpu5.hxx\nm5circlb15 - mpu5.hxx\nm5circlb33 - mpu5.hxx\nm5fiddle - mpu5.hxx\nm5fiddle03 - mpu5.hxx\nm5hotslt - mpu5.hxx\nm5nnww - mpu5.hxx\nm5qshot - mpu5.hxx\nm5qshot04 - mpu5.hxx\nm5starcl - mpu5.hxx\nm5stars - mpu5.hxx\nm5stars10 - mpu5.hxx\nm5stars10a - mpu5.hxx\nm5stars13a - mpu5.hxx\nm5stars20 - mpu5.hxx\nm5stars22 - mpu5.hxx\nm5stars25 - mpu5.hxx\nm5stars25a - mpu5.hxx\nm5stars26 - mpu5.hxx\nm5supro - mpu5.hxx\nm5suproa - mpu5.hxx\nm5wking - mpu5.hxx\nm5wking05 - mpu5.hxx\nsc1bartk - bfm_sc1.cpp\nsc1str4 - bfm_sc1.cpp\nsc1str4a - bfm_sc1.cpp\nsc4cclim - bfm_sc4.cpp\nsc4cclima - bfm_sc4.cpp\nsc4cclimb - bfm_sc4.cpp\nsc4cclimc - bfm_sc4.cpp\nsc4cclimd - bfm_sc4.cpp\nsc4cclime - bfm_sc4.cpp\nsc4cclimf - bfm_sc4.cpp\nsc4cclimg - bfm_sc4.cpp\nsc4cclimh - bfm_sc4.cpp\nsc4cclimi - bfm_sc4.cpp\nsc4cclimj - bfm_sc4.cpp\nsc4cclimk - bfm_sc4.cpp\nsc4ccliml - bfm_sc4.cpp\nsc4cclimm - bfm_sc4.cpp\nsc4cclimn - bfm_sc4.cpp\nsc4cclimo - bfm_sc4.cpp\nsc4cclimp - bfm_sc4.cpp\nsc4cclimq - bfm_sc4.cpp\nsc4cclimr - bfm_sc4.cpp\nsc4cclims - bfm_sc4.cpp\nsc4cclimt - bfm_sc4.cpp\nsc4cclimu - bfm_sc4.cpp\nsc4fwp - bfm_sc4.cpp\nsc4fwpa - bfm_sc4.cpp\nsc4fwpb - bfm_sc4.cpp\nsc4fwpc - bfm_sc4.cpp\nsc4fwpcs - bfm_sc4.cpp\nsc4fwpcsa - bfm_sc4.cpp\nsc4fwpcsb - bfm_sc4.cpp\nsc4roksc - bfm_sc4.cpp\nsc4roksca - bfm_sc4.cpp\nsc4rokscb - bfm_sc4.cpp\nsc4rokscc - bfm_sc4.cpp\nsc4srrca - bfm_sc4.cpp\nsc4srrcaa - bfm_sc4.cpp\nsc4srrcab - bfm_sc4.cpp\nsc4srrcac - bfm_sc4.cpp\nsc4srrcad - bfm_sc4.cpp\nsc4srrcae - bfm_sc4.cpp\nsc4srrmz - bfm_sc4.cpp\nsc4srrmza - bfm_sc4.cpp\nsc4srrmzb - bfm_sc4.cpp\nsc4srrmzc - bfm_sc4.cpp\nsc4srrmzd - bfm_sc4.cpp\nsc4srrmze - bfm_sc4.cpp\nsc4srrmzf - bfm_sc4.cpp\nsc4srrmzg - bfm_sc4.cpp\nsc4srrmzh - bfm_sc4.cpp\nsc4srrmzi - bfm_sc4.cpp\nsc4srrmzj - bfm_sc4.cpp\nsc4srrmzk - bfm_sc4.cpp\nsc4srrmzl - bfm_sc4.cpp\nsc4srrmzm - bfm_sc4.cpp\n. General Inputs -> User Interface - you can adjust it to whatever inputs you\nhave available.\nOn Mon, Aug 29, 2016 at 5:36 PM, shinra358 notifications@github.com wrote:\n\nI would like to request the ability to use the dpad from gamepads on the\nmame menus. Currently I can only control the menu with the left analog\nstick.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/issues/1346, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AIp8uHKslyrvvCbji4aBB9VaA1_HRZVfks5qk1DygaJpZM4Jv7Fp\n.\n. This software is not, as far as I can tell, publicly available, so it cannot be tested.   Please contact someone on the Dev team directly to address this or use CODE at MAMEDEV.ORG contact email to provide a source for these added images.  If you are not able to produce the images before release next Wednesday (September 28), we will be forced to revert this addition.\n. Please checkout and test current GIT.  There was a push this morning that dealt with file extensions which had been broken in 0.176 #1290 \n. Multiple issues I noticed:\n- Dump contents do not have an SP0256 populated, yet you have added an image of one to the romset.\n- You have not documented the rom locations from the filenames of this particular romset dump - those roms which share 100% data with the parent   This also doesn't mean you change the parent also as you have to verify via actual PCB pictures if locations were not provided with the files.\n- There is an extra PROM which you have entirely ignored and not added to source\n\nAdding a readme text is a delicate thing, especially when it might contain an emails or web locations.  Please avoid placing such things in commit messages.  Adjusted your message above.\n. The problem with adding a romset found on the net or in any non-mame collection is that it might not contain everything the original archives had (changed filenames/missing pcb pictures/etc) from the dumper.  Your sourced romset may have come from another fork or arcade emulation project who may only add sets to make them playable and may not have used all the original dump's contents - therefore causing inaccurate documentation if added now to MAME.  You must be very careful what you intend to add to the source and that it is accurately represented.  As this point new games are usually only added if it is accompanied by an actual picture of the PCB as proof of type of board, labels, processors and other components are clearly laid out.\n. Quite possibly related errors in release 0.178 in Window (looks like Windows 10 since -verbose shows xaudio2 as default audio:   http://forum.mamedev.org/viewtopic.php?f=14&t=122&p=408#p407\n. This should be something that someone should address upstream?\n. Noted one MSX2 (fs5000) set came up with an (unexpected?) message after this commit.  I tried other MSX2 sets and none of the few I looked at showed this screen or similar and match 10 second snapshots taken prior to this commit.\nThe translation is something along the lines of:  \"Backup battery dead. Please change\"\n\n. hp9845b_rom.xml has a new romset which has not been submitted (setname=sssmass).  Please contact myself or use the submission address mentioned at http://wiki.mamedev.org/index.php?title=Submitting_Source_Code\n. AFAIK, that is only acceptable to \"nodump\" a portion of a romset.  In the case of the entire set (or in this case, an entire disc image), it would be most acceptable to have the entry commented until it is found/dumped.  That means the six sets that come up in a mame -validate as having an incomplete disk definition will need to be commented.\ncolrmech\ncomptonsb\nmusijpbr\nsurgical (needs to be renamed as well)\nsmurfs\nwinxeye\n. Also, one other issue was detected.\nLine 3865 has:\ncloneof=\"balckh\"\nIt looks like a mistype as there is no parent set called \"balckh\", but is actually \"blackh\".  I'd have fixed it but I don't want to interfere with your ongoing changes.\n. I'd like to get this fixed ASAP if someone could please provide the right SHA1 hash for each image I will apply the changes needed.  We release next week and I don't want a software list in MAME that can never be completed.\n. I request that we please wait until Fabio gets a chance to look this over and until after release coming up.\n. Please note that 8 letter setname restrictions on parents is no longer a restriction and, given the situation, you can use more letters.  Also, mixed case is allowed for rom labels... making most of these changes unneeded.\n. Normal -validate for me on the current GIT copy of the HASH folder (with fresh binary) doesn't show any of these you've changed.  What are you using to validate your copies of softlists?\nThe 8 letter change is a pretty recent one https://github.com/mamedev/mame/commit/3291684c2baf8d43c7300e0a2f7fc42b6ee8bcff and while we are allowed to use up to 16 characters for parent names (like the clones have been for years), we only need to use it when the need arises and the extra characters will help avoid confusion with other similar setnames.\nThe lowercase filenames for rom labels was historically for consistency but we've recently been trying to better represent actual labels by allowing uppercase where they appear on PCBs, Rom Chips, etc.  In most instances, actually, the labels on the actual chips are uppercase.  The names of a CD or cartridge blob of data doesn't matter so much for case.\n. This machine name is already used.  Looking at your COMP( addition, it looks like it should be named ti84pov2?\n. \nLooks to be another copy/paste sharing the label of the previous romset you copied from.. Please be sure to correct comments if importing code from other solutions.  In Color Computer 3's case, only 2 screens are in play.. No problems. ",
    "lucab": "Rebased on current master.\n. Given the review I got for #72, it would probably makes sense to OO-ify also this interface. I'm putting it a bit on hold waiting for further comments on the general direction.\n. Superseded by #90, closing.\n. Thanks for your comments/reviews. I'm new to MAME codebase, so pardon me if I'm reaching to some almost-deprecated interfaces. \n@galibert:\n1) I see,  makes sense. AFAICT, I should retrieve them from machine_config devices, indexed by tag-name, correct? \n2) Ah! So from the device_t above can I just go for .memory()->space(n), right? I see four spaces there (upto AS_3), am I looking at the wrong place? \n3) I see that you seem to prefer OO-LUA. I'm not much used to see it in scripting, but it probably makes sense if reworking the internals as above.\nIt'd take me a bit to refresh my table-handling-fu on the C side, though.\nRegarding methods naming, I'm not a great fan of the (size)*(sign)*(R|W) explosion, I fear the overlong read_qword_unsigned name and in general like how easy it is to parametrize the single method in scripts.\nAny chance for me to convince you on this :)? \nAs a second choice, I would propose going for read_[u8|i8|u16|i16|etc.]() as\nseen in several other languages, which looks both more clear and more concise to me.\n@firewave: I know this was probably not addressed to me, but I found it at the same time both too vague and beyond my limited codebase knowledge to act/comment on.\nAFAIU there were/are plans (written somewhere?) to make LUA fully manage a mame instance on all aspects, which seems quite a bit of a overhaul. \nIt would be nice to know if I can go somehow orthogonally to this, as I'm just interested in having some more tools for in-game scripting.\nAlso, we are also exposing version info in LUA right now, which may help (a little) on the compatibility side.\n. @galibert I have reworked the memory reading lua interface in this other branch making it somehow more OO-style according to your comments.\nCan you please have a look at it and let me know if it more in line with your remarks, or if you'd like to plan a somehow different API? If all ok, I'd then proceed to discard this PR and open one for the newer interface.\n. Superseded by #89.\n. This is v2 of my previous PR #72, taking into account @galibert comments.\nMajor changes:\n- use luabridge instead of custom type, more C++ friendly\n- map device_t and address_space to lua\n- provide objects (userdata) for devices and address spaces\n- expose .devices and .spaces property tables to enumerate available devices/spaces\n- split previous single mem_read() into multiple read_<sign><size> methods\n. API usage is now as follow:\n```\n\nfor i,v in pairs(manager:machine().devices) do print(i) end;\n:fatfury2_prot\n:spritegen\n:memcard\n:banked_cart\n:mslugx_prot\n:maincpu\n:screen\n:kof2002_prot\n:lspeaker\n:saveram\n:pvc_prot\n:upd4990a\n:ymsnd\n:sbp_prot\n:kof98_prot\n:sma_prot\n:audiocpu\n:cmc_prot\n:bootleg_prot\n:pcm2_prot\n:palette\n:rspeaker\nfor i,v in pairs(manager:machine().devices[\":maincpu\"].spaces) do print(i) end;\nprogram\nprint(manager:machine().devices[\":maincpu\"].spaces[\"program\"]:read_i16(0xC1871C))\n20085\n```\n. This is v2 of #71, OO-ified after some suggestions from @galibert.\n\nMajor changes:\n- now using luabridge, more C++ friendly\n- available screens now enumerable via manager():machine().screens\n- instance methods to draw boxes/lines/text on a single screen separately\n. Just as a note, this is a very dumb LUA autoboot_script I'm using to test all of lua_engine current capabilities:\n```\nlocal g = {\n        x = 0,\n        y = 0\n}\nlocal mem=manager:machine().devices[\":maincpu\"].spaces[\"program\"]\nlocal gui=manager:machine().screens[\":screen\"]\nemu.sethook(function()\n        gui:draw_text(g.x, g.y, mem:read_i16(0x0000C000))\n        gui:draw_box(20,20, g.x, g.y, 0, 0xffff0000)\n        gui:draw_line(20,20, g.x, g.y, 0xff0000ff)\n        g.x = g.x + 1;\n        g.y = g.y + 1;\n        if (g.x+5) >= gui:width() then\n            g.x = 0\n        end\n        if g.y >= gui:height() then\n            g.y = 0\n        end\nend, \"frame\")\n```\n. @galibert @mmicko can I get a review on this?\n. @galibert sorry, I'm still getting used to mame core and may miss some details here and there. Thanks for patiently checking my PRs.\nI have some doubts after your last comment:\n- Should I go up to device_t::pre_save/post_load (notify all interface?) or are device_state_interface::interface_pre_save/interface_post_load (notify state interface?) enough?\n- What's their relation with device_state_entry::state_import/state_export``? Should I care here?\n- I don't see how to link adevice_state_entryto its parentdevice_state_interface? Is there a way to retrieve it that I'm not seeing? If not, should I add an upward pointer in the child?\n- Should I also take care of these notification mechanisms when dealing withaddress_spacememory I/O?\n- A posteriori, I suspect that friend-inglua_enginetodevice_state_entryis a big no-no\n. Oh, my bad, I was trying to avoid full machine updating on each state read/write (which seems a bit a performance hog).\nLet me just factor out the presave/postload part of the save_manager and call that directly, then, as you originally proposed.\n. So maybe something along the line of this? https://gist.github.com/lucab/411b53c061935aaab29c\n. Deal! Rebased and updated.\n. I had a look at it before sending this, but I have some doubts. I see that ui container has an associated render_target(with orientation, pixel aspect, etc), is there any equivalent for a generic render_container/screen? Otherwise, the folded method will still have to special case for the ui container.\n. I see, then probably you'd prefer this minimally invasive version with a single method and a default parameter...\n. I've folded the two methods back intorender_manager::ui_aspect()`, but this PR became stale in the meanwhile. As I've piled up some other luaengine fixes and a bit of doc in the meanwhile, let me close this old PR and open a new one with all the fresh stuff.\n. ",
    "galibert": "Hi,\ncpu.mem_read stuff is a bad idea for three reasons:\n- firstcpu shall die, it sucked in multi-processor systems, it sucks even\n  harder now that any device can have address maps.  You need to create a\n  device tree and allow memory access from any device that allows it.\n- devices can have up to 3 address maps, called program, data and i/o.  You\n  need accessors for each one (when it exists)\n- passing the read size as a parameter is extremely unintuitive.\n  device:program():read_byte(address) is more in the logic of Mame\nBest,\nOG.\nOn Wed, Dec 10, 2014 at 11:03 AM, Luca Bruno notifications@github.com\nwrote:\n\nThese commits add a new LUA namespace and a method to\nread data from the main address-space.\nThe idea is to provide user scripts some means to introspect on\ncurrent machine status, eg. to programatically draw a HUD.\nSigned-off-by: Luca Bruno lucab@debian.org\nTo ease development on my side, this branch is depending/embedding PR #71\nhttps://github.com/mamedev/mame/pull/71. It is ONLY up for review at\nthis point. I will rebase on master as soon as the other one gets merged.\nYou can merge this Pull Request by running\ngit pull https://github.com/lucab/mame lucab/mame-lua/cpu\nOr view, comment on, or merge it at:\nhttps://github.com/mamedev/mame/pull/72\nCommit Summary\n- luaengine: add \"gui\" namespace for scriptable HUD\n- luaengine: add gui.screen_width()/screen_height() methods\n- luaengine: add gui.draw_box() method\n- luaengine: add gui.draw_text() method\n- luaengine: add gui.draw_line() method\n- luaengine: add gui.show_fps() method\n- luaengine: add emu.hook_frame() method\n- luaengine: add \"cpu\" namespace\n- luaengine: add cpu.mem_read() method\nFile Changes\n- M src/emu/luaengine.c\n  https://github.com/mamedev/mame/pull/72/files#diff-0 (248)\n- M src/emu/luaengine.h\n  https://github.com/mamedev/mame/pull/72/files#diff-1 (20)\n- M src/emu/video.c\n  https://github.com/mamedev/mame/pull/72/files#diff-2 (3)\nPatch Links:\n- https://github.com/mamedev/mame/pull/72.patch\n- https://github.com/mamedev/mame/pull/72.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/72.\n.   Hi,\n\nOn Wed, Dec 10, 2014 at 11:26 PM, Luca Bruno notifications@github.com\nwrote:\n\nThanks for your comments/reviews. I'm new to MAME codebase, so pardon me\nif I'm reaching to some almost-deprecated interfaces.\n@galibert https://github.com/galibert:\n1) I see, makes sense. AFAICT, I should retrieve them from machine_config\ndevices, indexed by tag-name, correct?\nIt's a tree structure. You start from machine()->root_device(), you get the\ndirect children with for( device_t *d = dev->first_subdevice(); d != NULL;\nd = d->next() ) { ...}.  You can enumerate them recursively that way, and\nbuild the appropriate lua-side structure.\n2) Ah! So from the device_t above can I just go for .memory()->space(n),\nright? I see four spaces there (upto AS_3), am I looking at the wrong\nplace?\nYou're correct, I forgot about the 4th one.  It's only used in one place,\nand it's arguably obsolete there :-)\n3) I see that you seem to prefer OO-LUA. I'm not much used to see it in\nscripting, but it probably makes sense if reworking the internals as above.\nIt'd take me a bit to refresh my table-handling-fu on the C side, though.\nThe ioport in luaengine are oo-ified if you need an example.\nRegarding methods naming, I'm not a great fan of the (size)(sign)(R|W)\nexplosion, I fear the overlong read_qword_unsigned name and in general\nlike how easy it is to parametrize the single method in scripts.\nAny chance for me to convince you on this :)?\nAs a second choice, I would propose going for read_u8|i8|u16|i16|etc. as\nseen in several other languages, which looks both more clear and more\nconcise to me.\nI used the current memory.h accessor names, but I'm not overly fond of\nthem.  Since you need the sign information added, it's a good justification\nto shorten the name.\n\nBest,\nOG.\n. The branch looks good to me.  The *64 variants look a tad illusory to me\ngiven that 5.2 stores data in doubles, but that will work better with 5.3.\nIt's too bad it's not possible to enumerate devices, but that can be added\nlater.  And the metatable creation boilerplate could use a common helper\nmethod.\nBest,\nOG.\nOn Sun, Dec 14, 2014 at 10:57 PM, Luca Bruno notifications@github.com\nwrote:\n\n@galibert https://github.com/galibert I have reworked the memory\nreading lua interface in this other branch\nhttps://github.com/lucab/mame/tree/lucab/mame-lua/mem making it somehow\nmore OO-style according to your comments.\nCan you please have a look at it and let me know if it more in line with\nyour remarks, or if you'd like to plan a somehow different API?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/72#issuecomment-66931807.\n. Eventually the hook should be per-screen, because different screens can\ntheorically gave different frame rates.  But the core is currently fucked\nin that area, so you can't do it.\n\nOG.\nOn Mon, Jan 5, 2015 at 5:54 PM, Luca Bruno notifications@github.com wrote:\n\n@galibert https://github.com/galibert @mmicko\nhttps://github.com/mmicko can I get a review on this?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/90#issuecomment-68737312.\n. I don't think the internal base value should be changed.\n\nBest,\nOG.\nOn Fri, Jan 9, 2015 at 3:07 AM, RealComboman notifications@github.com\nwrote:\n\nm_gear+1 is so output of gears will start at 1 instead of 0, to be\nconsistent with other Atari 4-speed shifter games (drag race & sprint\nseries). Internally gear still starts at 0 (though perhaps that should be\nchanged).\nYou can merge this Pull Request by running\ngit pull https://github.com/RealComboman/mame patch-3\nOr view, comment on, or merge it at:\nhttps://github.com/mamedev/mame/pull/97\nCommit Summary\n- added output so artwork can display current gear settings\nFile Changes\n- M src/mame/drivers/firetrk.c\n  https://github.com/mamedev/mame/pull/97/files#diff-0 (3)\nPatch Links:\n- https://github.com/mamedev/mame/pull/97.patch\n- https://github.com/mamedev/mame/pull/97.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/97.\n. It's buggy though.  You need to call the pre- methods before reading state,\nand the post- methods after changing it.\n\nOG.\nOn Sun, Jan 11, 2015 at 10:43 AM, Miodrag Milanovi\u0107 \nnotifications@github.com wrote:\n\nMerged #100 https://github.com/mamedev/mame/pull/100.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/100#event-217064438.\n. Don't worry, I don't understand all of it either.  And I wrote the original\nversion of the save state subsystem :-)\n\nFor presave, you need to extract the pre-save part of\nsave_manager::write_file in its own method.  I mean the \"for\n(state_callback *func = m_presave_list.first(); func != NULL; func =\nfunc->next()) func->m_func();\" part.  Save for post_load, of course.\nI'm in the process of adding the device to the state_entry structure, and\nalso making it public.  It's essentially for the same use case as you,\nexcept it's access from the debugger.  So don't worry about the friend\nthingy, it'll be fixable better later.\nAs for state_import/export it's used for the display and modification of\nregisters in the debugger, so no worry there.\nBest,\nOG.\nOn Sun, Jan 11, 2015 at 5:23 PM, Luca Bruno notifications@github.com\nwrote:\n\n@galibert https://github.com/galibert sorry, I'm still getting used to\nmame core and may miss some details here and there. Thanks for patiently\nchecking my PRs.\nI have some doubts after your last comment:\n- Should I go up to device_t::pre_save/post_load (notify all\n  interface?) or are\n  device_state_interface::interface_pre_save/interface_post_load (notify\n  state interface?) enough?\n- What's their relation with\n  device_state_entry::state_import/state_export`? Should I care here?\n- I don't see how to link a device_state_entry to its parent\n  device_state_interface? Is there a way to retrieve it that I'm not\n  seeing? If not, should I add an upward pointer in the child?\n- Should I also take care of these notification mechanisms when\n  dealing with address_space memory I/O?\n- A posteriori, I suspect that friend-ing lua_engine to\n  device_state_entry is a big no-no\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/100#issuecomment-69500053.\n. Sorry, but \"luaengine: rework state getter/setter for saves\" is still\nincorrect.  Not everything goes through interfaces, far from that.  The\nrest is ok, we can merge it if you separate it.\n\nOG.\nOn Sun, Jan 18, 2015 at 12:09 AM, Luca Bruno notifications@github.com\nwrote:\n\nThis is a cumulative PR to expose some more methods to LUA, and to fix\nsome gotchas.\nFixes are in the first half: make better use of screen area infos,\nrefactor some distate internals and later use them to rework state getter\nand setter. (After last review, I think I mostly grasp the\npre_save/post_load needs and I think this may be enough for it, but I may\nstill be off)\nLast part is the new stuff: a memory writer (basically copied from the\nreader) and frame counter getter. @mmicko https://github.com/mmicko\nwhile at it, why is there a default 2sec autoboot_delay? I'm using 0sec for\nlua testing, and no quirks seen yet. Can I zero the default?\nWith these commits, TAS aficionados can re-use old hitboxes from\nmame-rr/fba-rr with minimal API compatibility changes:\n[image: mame-rr hitboxes for sf2]\nhttps://camo.githubusercontent.com/4dbcecfe366e0d57a7eac07544a4714ab8f52536/68747470733a2f2f7062732e7477696d672e636f6d2f6d656469612f42374c7351336143514145666c7a762e6a70673a6c61726765\n(not yet on-par with features, clearly)\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/105\nCommit Summary\n- core: link state entries to parent state interface\n- luaengine: rework state getter/setter for saves\n- luaengine: use visible_area for drawing\n- luaengine: update copyright\n- luaengine: add memory writers\n- luaengine: add per-screen frame_number() getter\nFile Changes\n- M src/emu/distate.c\n  https://github.com/mamedev/mame/pull/105/files#diff-0 (14)\n- M src/emu/distate.h\n  https://github.com/mamedev/mame/pull/105/files#diff-1 (7)\n- M src/emu/luaengine.c\n  https://github.com/mamedev/mame/pull/105/files#diff-2 (131)\n- M src/emu/luaengine.h\n  https://github.com/mamedev/mame/pull/105/files#diff-3 (3)\nPatch Links:\n- https://github.com/mamedev/mame/pull/105.patch\n- https://github.com/mamedev/mame/pull/105.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/105.\n. I understand, but no, it was not going to be reliable :-)  OTOH, you only\nneed to do it once as long as you don't restart the emulation.\n\nOG.\nOn Sun, Jan 18, 2015 at 1:48 PM, Luca Bruno notifications@github.com\nwrote:\n\nOh, my bad, I was trying to avoid full machine updating on each state\nread/write (which seems a bit a performance hog).\nLet me just factor out the presave/postload part of the save_manager and\ncall that directly, then, as you originally proposed.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/105#issuecomment-70407100.\n. Yeah, that's pretty sure to work.\n\nOG.\nOn Sun, Jan 18, 2015 at 4:38 PM, Luca Bruno notifications@github.com\nwrote:\n\nSo maybe something along the line of this?\nhttps://gist.github.com/lucab/411b53c061935aaab29c\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/105#issuecomment-70412639.\n. Could you fold the two instances of container testing into a\nget_aspect(container) ui_manager method (or whichever name you want)?\n\nOG.\nOn Thu, Feb 12, 2015 at 10:53 AM, Luca Bruno notifications@github.com\nwrote:\n\nDo not assume ui-container aspect when drawing on other containers.\nThis fixes LUA draw_text() in multi-screens game, where the font\naspect for each screen is wrongly computed on the aggregated target.\nSigned-off-by: Luca Bruno lucab@debian.org\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/129\nCommit Summary\n- ui: use per-container pixel aspect (draw_text bugfix)\nFile Changes\n- M src/emu/screen.c\n  https://github.com/mamedev/mame/pull/129/files#diff-0 (24)\n- M src/emu/screen.h\n  https://github.com/mamedev/mame/pull/129/files#diff-1 (1)\n- M src/emu/ui/ui.c\n  https://github.com/mamedev/mame/pull/129/files#diff-2 (14)\nPatch Links:\n- https://github.com/mamedev/mame/pull/129.patch\n- https://github.com/mamedev/mame/pull/129.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/129.\n. I have no idea :-)  My problem is not with the special casing, it's with\nhaving the same special casing code in two different methods of the same\nclass.\n\nOG.\nOn Thu, Feb 12, 2015 at 12:01 PM, Luca Bruno notifications@github.com\nwrote:\n\nI had a look at it before sending this, but I have some doubts. I see that\nui container has an associated render_target(with orientation, pixel\naspect, etc), is there any equivalent for a generic\nrender_container/screen? Otherwise, the folded method will still have to\nspecial case for the ui container.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/129#issuecomment-74053109.\n.   Hi,\n\nYour code is a little strange, the write to de00 specifically.  Could you\nexplain it?\nBest,\nOG.\nOn Thu, Feb 19, 2015 at 8:55 AM, Hiromitsu Shioya notifications@github.com\nwrote:\n\nsound code == sega mark3.\nextend emu. YM2413.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/137\nCommit Summary\n- SEGA:System-E::fantzn2 extend YM2413.\nFile Changes\n- M src/mame/drivers/segae.c\n  https://github.com/mamedev/mame/pull/137/files#diff-0 (34)\nPatch Links:\n- https://github.com/mamedev/mame/pull/137.patch\n- https://github.com/mamedev/mame/pull/137.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/137.\n.   Hi,\n\nThe translator is sufficient.\nYou say, if I understand correctly, that writing 1 to de00 makes the game\nuse the chip.  Does that mean it never uses it normally?\nBest,\nOG.\nOn Thu, Feb 19, 2015 at 11:42 AM, Hiromitsu Shioya <notifications@github.com\n\nwrote:\nBecause that is adapted FM writing begins when the address value is entered\n, it is rewritten by the value of dipSwitch.\nI tried to appropriately translate translator . Will communicate meaning ?\n2015-02-19 19:13 GMT+09:00 Olivier Galibert notifications@github.com:\n\nHi,\nYour code is a little strange, the write to de00 specifically. Could you\nexplain it?\nBest,\nOG.\nOn Thu, Feb 19, 2015 at 8:55 AM, Hiromitsu Shioya \nnotifications@github.com\nwrote:\n\nsound code == sega mark3.\nextend emu. YM2413.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/137\nCommit Summary\n- SEGA:System-E::fantzn2 extend YM2413.\nFile Changes\n- M src/mame/drivers/segae.c\n  https://github.com/mamedev/mame/pull/137/files#diff-0 (34)\nPatch Links:\n- https://github.com/mamedev/mame/pull/137.patch\n- https://github.com/mamedev/mame/pull/137.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/137.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/137#issuecomment-75027238.\n\n\n\n\u3057\u304a\u3061:hiroshica\nhiroshica@gmail.com\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/137#issuecomment-75031755.\n. You changed the X76F100 for Crazy Taxi from not present to present, why?\n\nOG.\nOn Mon, Jun 1, 2015 at 12:37 AM, f205v notifications@github.com wrote:\n\nadded description for newly discovered game + a few cosmetic changes\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/196\nCommit Summary\n- Update arcade.lst\n- Update naomi.c\nFile Changes\n- M src/mame/arcade.lst\n  https://github.com/mamedev/mame/pull/196/files#diff-0 (2)\n- M src/mame/drivers/naomi.c\n  https://github.com/mamedev/mame/pull/196/files#diff-1 (11)\nPatch Links:\n- https://github.com/mamedev/mame/pull/196.patch\n- https://github.com/mamedev/mame/pull/196.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/196.\n. Ah, so it was deliberate, cool.  Since it was in the commit message, I\nwasn't sure.\n\nOG.\nOn Mon, Jun 1, 2015 at 10:58 AM, f205v notifications@github.com wrote:\n\nHi OG.\nI changed it after checking pictures of the cart.\nhere is the picture:\nhttp://www.citylan.it/wiki/images/2/26/848_PCB_component_side.jpg\nand here is the reference page on my website:\nhttp://www.citylan.it/wiki/index.php/Crazy_Taxi\nAs you can see the X76F100 at IC37 is present.\nBTW I'm re-checking everything on NAOMI-CHIHIRO-TRIFORCE, and updating my\ntable\nhere:\nhttp://www.citylan.it/wiki/index.php/Naomi_-Chihiro-_Triforce\nThat was the only difference I found up to now.\nCiao\nAntonio (f205v)\nwww.citylan.it\nOn 01/06/2015 08:32, Olivier Galibert wrote:\n\nYou changed the X76F100 for Crazy Taxi from not present to present, why?\nOG.\nOn Mon, Jun 1, 2015 at 12:37 AM, f205v notifications@github.com wrote:\n\nadded description for newly discovered game + a few cosmetic changes\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/196\nCommit Summary\n- Update arcade.lst\n- Update naomi.c\nFile Changes\n- M src/mame/arcade.lst\n  https://github.com/mamedev/mame/pull/196/files#diff-0 (2)\n- M src/mame/drivers/naomi.c\n  https://github.com/mamedev/mame/pull/196/files#diff-1 (11)\nPatch Links:\n- https://github.com/mamedev/mame/pull/196.patch\n- https://github.com/mamedev/mame/pull/196.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/196.\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/mamedev/mame/pull/196#issuecomment-107321766\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/196#issuecomment-107373437.\n. Had your mail been \"ping?\", I'd have noticed that we all missed the patch,\nlooked at it and pulled it.\n\nInstead, I read your mail, read the patch, found it was good but not worth\nthe aggravation of dealing with someone like you.\nCongratulations.\nOG.\nOn Thu, Sep 24, 2015 at 1:19 PM, Mamesick notifications@github.com wrote:\n\nHow bleak and pathetic is this. The code change is good and correct. If\nthis is the current way of MAME development, good to know. No feeds and/or\nanswers after a week. I'm not here for the glory like other Developers\nprobably are. No more from me. Request closed. Go ahead, MAMEDevs.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/329#issuecomment-142900811.\n. I've merged it, but did you check the interactions with the timers used by\nthe lua engine itself?\n\nOG.\nOn Sun, Oct 4, 2015 at 8:42 AM, Gyunt Kim notifications@github.com wrote:\n\nImplement machine save/load functions in LuaEngine.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/360\nCommit Summary\n- luaengine: added save/load state support\nFile Changes\n- M src/emu/luaengine.c\n  https://github.com/mamedev/mame/pull/360/files#diff-0 (2)\nPatch Links:\n- https://github.com/mamedev/mame/pull/360.patch\n- https://github.com/mamedev/mame/pull/360.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/360.\n. What frequency is going into the chip in the first place?\n\nOG.\nOn Sun, Oct 11, 2015 at 5:30 PM, kazblox notifications@github.com wrote:\n\nJust checked the schematics, sound is generated inside a chip, which means\nI cannot tell the exact frequency.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/378#issuecomment-147211511.\n. Answering my own question, 16MHz.  So use XTAL_16Mhz / ( 512 * ( data + 1\n)) and it will be a way better looking guess.\n\nOG.\nOn Sun, Oct 11, 2015 at 6:49 PM, Olivier Galibert galibert@pobox.com\nwrote:\n\nWhat frequency is going into the chip in the first place?\nOG.\nOn Sun, Oct 11, 2015 at 5:30 PM, kazblox notifications@github.com wrote:\n\nJust checked the schematics, sound is generated inside a chip, which\nmeans I cannot tell the exact frequency.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/378#issuecomment-147211511.\n. Huh?  The configuration memory map is virtual for that reason.  Look at\ni82875p for instance, it adds a bunch of registers.\n\n\nOG.\nOn Tue, Mar 1, 2016 at 4:51 AM, MoochMcGee notifications@github.com wrote:\n\nThis interface is incomplete for the purposes of at586, as there are\ndevices required by at586 which need to be able to hook up custom registers\nin the configuration space. The new interface can't do this as far as I can\ntell.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/391#issuecomment-190527535.\n. You're not trying to read memory, you're calling save_item or something\nelse of that family...\n\nOn Tue, Dec 8, 2015 at 9:07 AM, Lab 313 notifications@github.com wrote:\n\nI'm trying to read memory after this:\n// disallow save state registrations starting here.// Don't do it earlier, config load can create network// devices with timers.\nm_save.allow_registration(false);\nAnd it gives me this error.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/491#issuecomment-162808830.\n. I don't think you can reasonably call read_byte before device reset, let\nalone initialization, and even then is iffy.\n\nOG.\nOn Tue, Dec 8, 2015 at 10:14 AM, Lab 313 notifications@github.com wrote:\n\nI'm not calling save_item function directly. It callable by\ndevice_start(). By some strange thing, read_byte() calls device\ninitialization. I can't understand that.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/491#issuecomment-162823600.\n. And we want to accept empty but not null shortnames?\n\nOG.\nOn Tue, Dec 15, 2015 at 10:39 PM, balr0g notifications@github.com wrote:\n\n@MASHinfo https://github.com/MASHinfo's intent seems to be to speed\nthings up, as strlen() is O(n) since it has to iterate over the string and\nfind the null terminator. Unfortunately, the returned string could exist\nbut be empty, in which case the code would print out tags like (with an\nempty name entry), which we don't want.\nAs an empty C string will have a null as its first character, it should be\nfaster (but less obvious) to do \"device->shortname()[0]=='\\0', and just as\nsafe as using strlen().\n@MASHinfo https://github.com/MASHinfo, can you test that, and see if it\nalso provides such a performance improvement?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/503#issuecomment-164905352.\n. But then shouldn't the test be part of validate, not listxml?\n\nOG.\nOn Wed, Dec 16, 2015 at 7:17 AM, etabeta78 notifications@github.com wrote:\n\nthe code checks indeed for device->shortname()[0]!='\\0' because we don't\nwant... ;)\nf.\nOn Wed, Dec 16, 2015 at 6:41 AM, Olivier Galibert \nnotifications@github.com\nwrote:\n\nAnd we want to accept empty but not null shortnames?\nOG.\nOn Tue, Dec 15, 2015 at 10:39 PM, balr0g notifications@github.com\nwrote:\n\n@MASHinfo https://github.com/MASHinfo's intent seems to be to speed\nthings up, as strlen() is O(n) since it has to iterate over the string\nand\nfind the null terminator. Unfortunately, the returned string could\nexist\nbut be empty, in which case the code would print out tags like (with an\nempty name entry), which we don't want.\nAs an empty C string will have a null as its first character, it should\nbe\nfaster (but less obvious) to do \"device->shortname()[0]=='\\0', and just\nas\nsafe as using strlen().\n@MASHinfo https://github.com/MASHinfo, can you test that, and see if\nit\nalso provides such a performance improvement?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/503#issuecomment-164905352.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/503#issuecomment-165001295.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/503#issuecomment-165012173.\n. Could you limit your pull request to the memory aspects?  RIght now it\nincludes genie stuff I'd rather not merge myself, but the address map parts\nI'm ok with.\n\nOG.\nOn Sun, Dec 20, 2015 at 12:38 AM, ajrhacker notifications@github.com\nwrote:\n\nA new devdelegate getter lets the validity checker catch bogus\nAM_DEVREAD/WRITE device tags (confirmed by a test case not included here).\nThe map-checking code has been moved into addrmap.c for better\norganization, and one more global_alloc has been eliminated. The fixed\ncheck for missing spaceconfig in the address_map constructor and some new\nasserts for nullptr references will hopefully never be triggered.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/509\nCommit Summary\n- Refactoring memory map validity checking\nFile Changes\n- M src/emu/addrmap.cpp\n  https://github.com/mamedev/mame/pull/509/files#diff-0 (153)\n- M src/emu/addrmap.h\n  https://github.com/mamedev/mame/pull/509/files#diff-1 (7)\n- M src/emu/devdelegate.h\n  https://github.com/mamedev/mame/pull/509/files#diff-2 (5)\n- M src/emu/dimemory.cpp\n  https://github.com/mamedev/mame/pull/509/files#diff-3 (131)\nPatch Links:\n- https://github.com/mamedev/mame/pull/509.patch\n- https://github.com/mamedev/mame/pull/509.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/509.\n. You got it the wrong way around.  The game generates the sync signals at\nwhichever frequency it wants.  The monitor displays the result if the\nfrequencies happen to fall within its tolerances, otherwise it fucks up.\nThere is no feedback from the monitor to the game pcb whatsoever.  So the\ngame has its natural refresh rate, and is not designed to adapt to anything.\n\nOn Wed, Feb 10, 2016 at 8:27 AM, vgturtle127 notifications@github.com\nwrote:\n\n@mamehaze https://github.com/mamehaze Is there some sort of dynamic\nsolution? Like a way to make it work with any refresh rate below 120Hz? I\nmean, technically there are 240Hz displays, but they are somewhat rare\nnowadays...\n@rb6502 https://github.com/rb6502 When you say 120.Hz only, you mean\nthey will only run at 120Hz? I always thought most monitors supported\nmultiple refresh rates (for example, I know of a monitor that is 120Hz that\nalso supports 100Hz, 80Hz, 75Hz, 70Hz, and 60Hz.)\n@balr0g https://github.com/balr0g Yeah, I was wondering about that\ntoo...\nAnother thing is that none of these games are meant to run at a refresh\nrate faster than the arcade cabinets monitors were normally set at (60Hz in\nthe US, I guess? I actually never though about it or have done any\nresearch), and also the games should still run fine at the default refresh\nrate of the monitor, it doesn't cut down on the amount of frames if you run\nit at a different refresh rate on another monitor, it just means the game\nwon't run as fast as your monitor can handle. Maybe I am missing something?\nDoes anybody else get what I'm saying? [image: :laughing:]\nI feel like there is something wrong with the way this is working in my\nhead. [image: :laughing:]\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/557#issuecomment-182236438.\n. Way cool :-)\n\nOG.\nOn Sun, Jan 24, 2016 at 8:21 PM, R. Belmont notifications@github.com\nwrote:\n\nThanks! The fix is applied to MAME trunk, and it fixes a long-standing bug\nwhere the MacOS Jigsaw Puzzle applet would freak out and create impossible\npuzzles.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/573#issuecomment-174332580.\n. Like, no.\n\nOn Tue, Feb 9, 2016 at 6:01 PM, Antonio Paradossi notifications@github.com\nwrote:\n\nI think, before it is definitively denied the opportunity to compile only\nMAME arcade or just MESS, it should be added to the xml voice \"IsArcade\",\njust like \"IsMechanical\" or \"IsDevice\". With more than 30,000 machines\ncurrently present, a new filtration system would be very useful (especially\nfor front-end, but not only).\nAlso useful to add entries \"Arcade\" and \"Not Arcade\" in the new UI.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/615.\n. Very negative.\n\nOn Tue, Feb 9, 2016 at 7:01 PM, Antonio Paradossi notifications@github.com\nwrote:\n\nExcuse me but I have not figured out if your comment is positive or\nnegative ...\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/615#issuecomment-181983095.\n. That's bullshit.  Why is it bullshit?  Because there's zero configuration\ndifference between neogeo MVS and AES, between cps2 arcade and cps2\nexchanger, and in general between arcade and consoles.\n\nWhat makes a configuration difference is the inputs.  It's entirely\ndifferent to configure the inputs for \"standard\" arcade games, mahjong\ngames (20-odd keys), keyboardmania (24-key piano keyboard), dance dance\nrevolution (pad on the ground), typing of the dead (full 100+ key keyboard)\nor prop cycle (exercise bike).  Guess what, all of these are arcade games.\nAnd we do give the input information in the xml.\nSo no, filtering mame vs. mess is just taking a piss on our work.\nOG.\nOn Wed, Feb 10, 2016 at 1:58 PM, u-man notifications@github.com wrote:\n\n@Belmont https://github.com/Belmont: I totally agree with you, that\nnoone should disrespect the tremendous work on former MESS drivers, but i\ndont think that people deny the hard work, it is more that supporting MESS,\ncan also considered as hard work on the frontend developer side and please\ndont come with qmc2.\nIn particular i dont like that frontend devs are forced to support it and\nthis is a wrong approach in my eyes. It looks more like a personal dispute\nrather than a logical step. More meta-data would eventually help frontend\ndevs to fully support MAME. If i look at GameEx for example, it supports\nthe MESS side of MAME now, but it is still very time-consuming to configure\na meaningful setup, as a user needs to setup each machine individually and\neven if this is done, you would need mapfiles for each machine for proper\nname-handling.\nI think it would be much better, to invest more time and work to make it\neasier for 3rd party devs, as doing exactly the opposite. Doing steps\ntogether to reach the goal, you know.\nI am really scared to write this, as i dont want to upset you or others\nhere, risking to be not heard anymore. I just want to tell my thoughts and\ni am open to hear your opinions.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/615#issuecomment-182360933.\n. Why do they struggle?  There's almost nothing in the mess-added systems\nthat doesn't exist in the arcade ones.  And anything problematic (unhandled\ninputs, slots, softlists) is indicated in the xml.  A frontend that handles\nthe whole of mame and that can't cope with any mess driver makes zero sense.\n\nOn Wed, Feb 10, 2016 at 2:35 PM, u-man notifications@github.com wrote:\n\n@mr-t-guru https://github.com/mr-t-guru: i dont know who the real moron\nis here :) , but you wrote false arguments in the other thread.\n@galibert https://github.com/galibert: you didnt understand my last\npost. it seems that you dont realize that most frontends where written at a\ntime where only MAME existed and they struggle right now, to make it as\nuseful and easy as it was before and i dont mean any input-stuff with this\n(you would do this externally with MAME anyway).\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/615#issuecomment-182377812.\n. Megatech, neogeo and stv uses softlists, you know?\n\nOn Wed, Feb 10, 2016 at 3:06 PM, u-man notifications@github.com wrote:\n\nAs i told before, there is no problem to get machines running. The problem\nis to set them up. Nearly all frontends start emulators via a commandline\nand in case of GameEx, you would need many different commandlines to start\nthe machines, but you can only have one commandline per emulator.\nSo a user need to setup each machine as a seperate emulator, even if it is\njust one MAME. It becomes more complicated, if you want artwork support for\nthe machines.\nPrior GameEx had total control of MAME and was a rich featured frontend\nfor it (it is still, at least for the arcade part) but these features are\ngone in the case of MESS. I am sure, that Tom Speirs and Headkaze will find\na solution, but thats the current state.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/615#issuecomment-182388929.\n. It's not ideal, but otoh it's not bad ui-wise right now.  Why not accept\nit, that would show we're ok with that kind of feature, and someone\ninterested can enhance it.\n\nOG.\nOn Mon, Feb 15, 2016 at 7:43 AM, Mamesick notifications@github.com wrote:\n\nFeel free to modify the code to also scan for IPT_MAHJONG keys/buttons.\nSincerely I don't care too much about this. A friend asked me the source of\nmy autofire feature to see if it was possible to implement in official\nMAME. That's all. I'm not asking anything here, nor to be credited neither\nto see it accepted. I simply posted a comment to better explain the\nbehaviour. If you wish, you can scan for all IPT_XXXX entries of a\ngame/machine so you will have autofire on IPT_COIN for example and you'll\nbe able to insert hundreds of them. Have fun.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/618#issuecomment-184083004.\n. Or genie didn't pick the correct moc/didn't manage to tell moc what version\nof qt to generate for.\n\nOG.\nOn Sun, Mar 6, 2016 at 9:24 PM, R. Belmont notifications@github.com wrote:\n\nQT5 is the correct version; it appears you tried building with Qt5 after\nbuilding with Qt4 and so the old .moc file wasn't cleaned up. 'make clean'\nshould fix things.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/686#issuecomment-192982524.\n. Hmm no, as I'm sure you've noticed you're losing some information w.r.t flips.  Please do a complete informational return somehow (possiblity something like two value, rotation angle + bool flipy).\n. The second choice, I'd say.  Also, call it l_orientation then :-)\n\nOG.\nOn Sat, Mar 12, 2016 at 6:50 PM, motoschifo notifications@github.com\nwrote:\n\nWhat is the best choice with a multi-value return on this situation?\n1) single method l_rotate, 1 packed push as string: \"270,flipx,flipy\" or\n\"90,flipy\"\n2) single method l_rotate, 3 separated pushes: rotation angle (int), flipx\n(bool), flipy (bool)\n3) 3 methods: l_rotation_angle (int), l_flipy (bool), l_flipx (bool)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/715#issuecomment-195780017.\n. There's something to discuss?  Through the bgfx backend, mame already\nsupports gl, gles, metal and dx11.  That's all of what's actually out\nthere.  Soon bgfx will also support vulkan and dx12 (which are very close),\nso we'll support them too.  That's it.\n\nOn Mon, Mar 28, 2016 at 11:58 AM, NULUSIOS notifications@github.com wrote:\n\nI submit this as a feature request, but is more to get feedback on any\npossible discussion and progress on the subject.\nVulcan seems to be big for most platforms and will allow for easier mobile\npresence.\nMajor gfx hardware now has Vulcan support.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/754\n. Given the existence of artwork, hash, plugin...  that wouldn't be enough.\nPlus we'd need to generate a default config with $PREFIX in it.  Plus the\nwhole binary package organization is very os-dependent.\n\nIt's not that easy to have a decent install target.\nOG.\nOn Thu, Mar 31, 2016 at 3:52 PM, rain-1 notifications@github.com wrote:\n\nHello!\nWhat about adding an 'install' target that copies mame64 to \"$PREFIX/bin/\"?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/771\n. Clean that history please, in the current state your pull request is unreadable.\n. The problem is that non-qtchooser moc does not accept -qt5, you get the\n(logical) error \"Unknown options: q, t, 5.\".  Debian not making moc-qt5\nvisible in the path is batshit stupid in the first place.\n\nOG.\nOn Sat, Apr 16, 2016 at 5:19 PM, Jordi Mallach notifications@github.com\nwrote:\n\nHmm. I'll see if I can work with the Debian Qt maintainers for a version\nthat does not break others. I had understood this was it.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/813#issuecomment-210837854\n. Meh.  I agree with the general idea, but I dislike the function/cast-like\ninterface.  I realize it's the minimal change, but would it be possible to\nhave a method instead or that would be too much hackery?\n\nOG.\nOn Tue, Apr 19, 2016 at 1:16 AM, ajrhacker notifications@github.com wrote:\n\nReplace the old device_iterator and its specialized versions with\nfunctionally equivalent classes that use standard operators to yield\nreferences to devices/interfaces rather than pointers. With range-based for\nloops, they no longer have to be stored in named variables, though they can\nalso be reused concurrently since the iteration state is now maintained by\na subclass.\nAdd a few more typical getters to device_t::subdevice_list.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/823\nCommit Summary\n- Iterate over devices C++11 style\nFile Changes\n- M src/devices/bus/abcbus/abc890.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-0 (60)\n- M src/devices/bus/c64/bn1541.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-1 (12)\n- M src/devices/imagedev/cassette.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-2 (5)\n- M src/devices/video/voodoo.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-3 (7)\n- M src/emu/addrmap.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-4 (7)\n- M src/emu/audit.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-5 (37)\n- M src/emu/audit.h\n  https://github.com/mamedev/mame/pull/823/files#diff-6 (2)\n- M src/emu/cheat.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-7 (11)\n- M src/emu/clifront.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-8 (167)\n- M src/emu/debug/debugcmd.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-9 (179)\n- M src/emu/debug/debugcpu.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-10 (21)\n- M src/emu/debug/dvbpoints.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-11 (7)\n- M src/emu/debug/dvdisasm.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-12 (9)\n- M src/emu/debug/dvmemory.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-13 (11)\n- M src/emu/debug/dvstate.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-14 (7)\n- M src/emu/debug/dvwpoints.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-15 (7)\n- M src/emu/devfind.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-16 (11)\n- M src/emu/device.h\n  https://github.com/mamedev/mame/pull/823/files#diff-17 (311)\n- M src/emu/diexec.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-18 (3)\n- M src/emu/diimage.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-19 (31)\n- M src/emu/disound.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-20 (36)\n- M src/emu/divideo.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-21 (4)\n- M src/emu/drivenum.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-22 (5)\n- M src/emu/driver.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-23 (5)\n- M src/emu/emumem.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-24 (6)\n- M src/emu/emuopts.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-25 (50)\n- M src/emu/image.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-26 (80)\n- M src/emu/info.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-27 (229)\n- M src/emu/ioport.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-28 (15)\n- M src/emu/luaengine.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-29 (8)\n- M src/emu/machine.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-30 (66)\n- M src/emu/mconfig.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-31 (27)\n- M src/emu/network.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-32 (18)\n- M src/emu/render.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-33 (16)\n- M src/emu/rendlay.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-34 (23)\n- M src/emu/romload.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-35 (70)\n- M src/emu/romload.h\n  https://github.com/mamedev/mame/pull/823/files#diff-36 (2)\n- M src/emu/schedule.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-37 (15)\n- M src/emu/softlist.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-38 (19)\n- M src/emu/sound.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-39 (21)\n- M src/emu/ui/cheatopt.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-40 (3)\n- M src/emu/ui/datmenu.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-41 (13)\n- M src/emu/ui/devopt.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-42 (67)\n- M src/emu/ui/filemngr.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-43 (28)\n- M src/emu/ui/imgcntrl.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-44 (12)\n- M src/emu/ui/info.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-45 (5)\n- M src/emu/ui/info_pty.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-46 (15)\n- M src/emu/ui/inifile.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-47 (34)\n- M src/emu/ui/mainmenu.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-48 (62)\n- M src/emu/ui/miscmenu.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-49 (19)\n- M src/emu/ui/selgame.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-50 (5)\n- M src/emu/ui/selsoft.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-51 (29)\n- M src/emu/ui/slotopt.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-52 (45)\n- M src/emu/ui/slotopt.h\n  https://github.com/mamedev/mame/pull/823/files#diff-53 (14)\n- M src/emu/ui/swlist.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-54 (20)\n- M src/emu/ui/ui.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-55 (104)\n- M src/emu/ui/viewgfx.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-56 (34)\n- M src/emu/validity.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-57 (55)\n- M src/emu/video.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-58 (42)\n- M src/mame/machine/atarigen.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-59 (16)\n- M src/mame/video/cyberbal.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-60 (16)\n- M src/osd/modules/debugger/qt/deviceswindow.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-61 (9)\n- M src/osd/modules/debugger/qt/mainwindow.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-62 (9)\n- M src/osd/modules/debugger/win/consolewininfo.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-63 (27)\n- M src/osd/modules/render/d3d/d3dhlsl.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-64 (6)\n- M src/osd/sdl/window.cpp\n  https://github.com/mamedev/mame/pull/823/files#diff-65 (18)\nPatch Links:\n- https://github.com/mamedev/mame/pull/823.patch\n- https://github.com/mamedev/mame/pull/823.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/823\n. Huh?  No, rebasing a pull request is fine, and mainline merges in the\nhistory are actually annoying.\n\nOG.\nOn Wed, Apr 27, 2016 at 9:45 PM, ajrhacker notifications@github.com wrote:\n\nSorry--I didn't quite get the warning that a large release \"MAME 0.173\"\nwas approaching fast. Since rebasing a pull request is apparently\nconsidered harmful, I've done a merge for the sake of conflict resolution.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/835#issuecomment-215206455\n. Lagarith looked like a candidate.\n\nOG.\nOn Sat, Jul 23, 2016 at 6:07 PM, Angelo Salese notifications@github.com\nwrote:\n\nAny kind of open source & loseless video codec, that is better than our\ncurrent heavyweight raw codec as option for -aviwrite or video playback.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/issues/838#issuecomment-234726014, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0i8fP6DUWN8K85TFCHm3XwW7YPb08Vks5qYjxEgaJpZM4IRTCP\n.\n. mameui changes things massively in that area, so we really can't help.\n\nOG.\nOn Fri, May 27, 2016 at 7:13 PM, Justin De Lucia notifications@github.com\nwrote:\n\nThis was an error I got in MAMEUI, so I'm guessing it may not be affecting\nnormal MAME.\nPrimarily what happens is instead of the mouse cursor going into the\nscreen and becoming invisible unless you exit out of the game or press the\nWindows key, it is always visible, and you can move it freely across the\nscreen. When you press Tab to open up the menu, the system's mouse cursor\nis shown over the orange cursor in the MAME window.\nAttempting to fiddle with the Hide Mouse option doesn't seem to work for\nme.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/issues/885#issuecomment-222202577, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/AI0i8XSilUI47CPbMnn6TQMQ76mrv1Dbks5qFyZVgaJpZM4Ih1wj\n.\n. Pictures will happen eventually.  Fonts won't, but you can \"convert to\npath\" in inkscape without loss or difficulty.  And that way the font is not\ngoing to change from one system to another.\n\nOG.\nOn Thu, May 26, 2016 at 4:02 AM, hap notifications@github.com wrote:\n\nYup, it depends on the SVG*. Felipe could you show it?\n*AFAIK embedded fonts and pictures are not possible yet, correct me if I'm\nwrong. This means text labels will have to be made of bezier curves and\nphoto-realistic artwork isn't possible.\nOn Thu, May 26, 2016 at 2:42 AM, R. Belmont notifications@github.com\nwrote:\n\nDon't the handheld games in fact use SVGs directly as layouts now?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/898#issuecomment-221748421\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/898#issuecomment-221758641\n. If you deliberately disable the graphics, you'd better be able to reenable\nthem without graphics.\n\nOG.\nOn Sat, Jun 4, 2016 at 10:16 PM, Ant notifications@github.com wrote:\n\nThanks. Yeah, there is need to be a GUI way to fix that \"none\". ;)\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/issues/924#issuecomment-223776015, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/AI0i8TPyBo4q8loVAAOLF_lO9aJhhKINks5qId0sgaJpZM4IuMCF\n.\n. Your commit message is drunk, can you fix it?\n\nOG.\nOn Thu, Jun 16, 2016 at 4:49 PM, Dagarman notifications@github.com wrote:\n\nclarify comment\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/956\nCommit Summary\n- Add files via upload\nFile Changes\n- M src/emu/dioutput.h\n  https://github.com/mamedev/mame/pull/956/files#diff-0 (2)\nPatch Links:\n- https://github.com/mamedev/mame/pull/956.patch\n- https://github.com/mamedev/mame/pull/956.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/956, or mute the thread\nhttps://github.com/notifications/unsubscribe/AI0i8VHsZJqxQjrrvBrcetw6W8mdTtiyks5qMWJugaJpZM4I3d3R\n.\n. Well, you edited the pull request (which was enough), it's the commit\nmessage, \"Add files via upload\", which is what will stay in the tree\nforever, which I have a problem with...\n\nI'll do a new commit if you want, I don't know how intricate github is with\nthat stuff.\nOG.\nOn Fri, Jun 17, 2016 at 6:30 AM, Dagarman notifications@github.com wrote:\n\nit is sober now\nOn Thu, Jun 16, 2016 at 10:33 AM, Olivier Galibert <\nnotifications@github.com\n\nwrote:\nYour commit message is drunk, can you fix it?\nOG.\nOn Thu, Jun 16, 2016 at 4:49 PM, Dagarman notifications@github.com\nwrote:\n\nclarify comment\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/956\nCommit Summary\n- Add files via upload\nFile Changes\n- M src/emu/dioutput.h\n  https://github.com/mamedev/mame/pull/956/files#diff-0 (2)\nPatch Links:\n- https://github.com/mamedev/mame/pull/956.patch\n- https://github.com/mamedev/mame/pull/956.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/956, or mute the thread\n<\n\nhttps://github.com/notifications/unsubscribe/AI0i8VHsZJqxQjrrvBrcetw6W8mdTtiyks5qMWJugaJpZM4I3d3R\n\n.\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/956#issuecomment-226556805, or\nmute\nthe thread\n<\nhttps://github.com/notifications/unsubscribe/AK5gIZy9F_eruU9ctD5UNMNMptLkpp-Zks5qMYjhgaJpZM4I3d3R\n.\n\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/956#issuecomment-226678161, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/AI0i8Xibh2E_eTadrhiH4nZS9bTdmIz0ks5qMiL8gaJpZM4I3d3R\n.\n. Indeed it did :-)  Merged.\n\nThanks,\nOG.\nOn Fri, Jun 17, 2016 at 2:20 PM, Dagarman notifications@github.com wrote:\n\nI figured out how to change the message. Maybe this will do it??\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/956#issuecomment-226754859, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/AI0i8Ua384qzCkQXvoKWm3X_KtgHZptfks5qMpETgaJpZM4I3d3R\n.\n. You can't, AM_MASK is ignored on AM_RAM.  I'll tell the bureaucrat to bitch.\n\nOG.\nOn Fri, Jun 17, 2016 at 8:05 PM, hap notifications@github.com wrote:\n\nOk, it looks like you can use AM_MASK to resolve this issue. See latest git\nunkhorse.cpp that I updated just now.\nOn Fri, Jun 17, 2016 at 6:26 PM, ajrhacker notifications@github.com\nwrote:\n\nWhen the old way now gives out fatal errors, leaving that untouched seems\nlike the greater of two evils. The only pathological cases are various\nareas of color RAM in 8080bw.cpp and unkhorse.cpp, where the specified\naddress mirroring for shared memory consists of bits in the middle of the\noffset range.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/962#issuecomment-226815665, or\nmute\nthe thread\n<\nhttps://github.com/notifications/unsubscribe/AI11VVLUmfwHZLyrXJTajwePDJZ6FgI1ks5qMsqmgaJpZM4I4d-X\n.\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/962#issuecomment-226839891, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/AI0i8VYyFCe2AVh9YofYeluSA5FQtWcjks5qMuHYgaJpZM4I4d-X\n.\n. Thanks ajr \n. Are we supposed to guess which device did not register any state?\n\nOG.\nOn Mon, Jun 20, 2016 at 8:31 PM, ajrhacker notifications@github.com wrote:\n\n\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/979\nCommit Summary\n- More efficient device error logging\nFile Changes\n- M src/emu/device.cpp\n  https://github.com/mamedev/mame/pull/979/files#diff-0 (6)\n- M src/emu/device.h\n  https://github.com/mamedev/mame/pull/979/files#diff-1 (3)\n- M src/emu/device.ipp\n  https://github.com/mamedev/mame/pull/979/files#diff-2 (21)\n- M src/emu/emu.h\n  https://github.com/mamedev/mame/pull/979/files#diff-3 (4)\n- M src/emu/machine.cpp\n  https://github.com/mamedev/mame/pull/979/files#diff-4 (13)\n- M src/emu/machine.h\n  https://github.com/mamedev/mame/pull/979/files#diff-5 (12)\nPatch Links:\n- https://github.com/mamedev/mame/pull/979.patch\n- https://github.com/mamedev/mame/pull/979.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/979, or mute the thread\nhttps://github.com/notifications/unsubscribe/AI0i8QhzXd5mwCgJCAtuqJl81pWqlq4vks5qNtyOgaJpZM4I5_Uq\n.\n. Duh indeed :-)\n\nOG.\nOn Tue, Jun 21, 2016 at 7:21 AM, ajrhacker notifications@github.com wrote:\n\nIn recent versions of MAME, the device tag is included when using\ndevice_t::logerror. The inefficiency comes from using string_format to\nprepend it to the given format before even checking if logging should be\ndone at all.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/979#issuecomment-227343206, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/AI0i8VXI9Z88v8o1o-8yFuOGawvzCF1Uks5qN3S9gaJpZM4I5_Uq\n.\n. Hey ajr, could you contact me (galibert@pobox.com)?  Thanks.\n\nOG.\nOn Sun, Jul 10, 2016 at 12:46 AM, ajrhacker notifications@github.com\nwrote:\n\n\nIndividual crosshairs are now first-class objects, rather than bits\n  of state scattered across half a dozen arrays. The class is named\n  render_crosshair with a view towards incorporating crosshairs into layouts\n  in the future, rather than managing them separately as crosshair_manager\n  still does now.\nRemoved the old crosshair_user_settings interface for adjusting\n  crosshair settings, since the UI can access the new crosshair objects\n  directly.\n\n\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/1073\nCommit Summary\n- Crosshair refactoring (nw)\nFile Changes\n- M src/emu/crsshair.cpp\n  https://github.com/mamedev/mame/pull/1073/files#diff-0 (371)\n- M src/emu/crsshair.h\n  https://github.com/mamedev/mame/pull/1073/files#diff-1 (98)\n- M src/frontend/mame/ui/miscmenu.cpp\n  https://github.com/mamedev/mame/pull/1073/files#diff-2 (43)\n- M src/frontend/mame/ui/miscmenu.h\n  https://github.com/mamedev/mame/pull/1073/files#diff-3 (3)\n- M src/mame/machine/sms.cpp\n  https://github.com/mamedev/mame/pull/1073/files#diff-4 (2)\n- M src/mame/video/cave.cpp\n  https://github.com/mamedev/mame/pull/1073/files#diff-5 (4)\nPatch Links:\n- https://github.com/mamedev/mame/pull/1073.patch\n- https://github.com/mamedev/mame/pull/1073.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1073, or mute the thread\nhttps://github.com/notifications/unsubscribe/AI0i8ReFJv-BOw5_DR3W3BJHIw3E07KHks5qUCTUgaJpZM4JIt_G\n.\n. The process is that micko creates the tag, then test-compiles the tagged\nversion. If it fails, he adds whatever fixes are needed until it works,\nthen updates the tag. Only after that he does the actual release.\n\nOG.\nOn Mon, Aug 1, 2016 at 5:35 AM, Kyungdahm Yun notifications@github.com\nwrote:\n\nIt seems like 0.176 version tag has been updated shortly after its\ninitial release on July 27th and I found two additional commits (3fc2464\nhttps://github.com/mamedev/mame/commit/3fc2464d7c6dd154452b45270d20154ea1a25485,\n14e7367\nhttps://github.com/mamedev/mame/commit/14e7367f7e1dd575754f8c59fcf74b956c91e87b)\npushed after a version bump commit (4887ce1\nhttps://github.com/mamedev/mame/commit/4887ce18443a51fd2a861da959082ad346ff4ee2)\nwhich usually would be the last.\nWe'll update the broken checksum of tar.gz archive\nhttps://github.com/mamedev/mame/archive/mame0176.tar.gz for OS X\nhomebrew package if this change is officially confirmed upstream.\n- Initial (Homebrew/homebrew-games#605\n  https://github.com/Homebrew/homebrew-games/pull/605):\n  ce69d65fc0431563e5617ce738a504826b73632ad261df53f16b314f67d5a48d\n- Current (Homebrew/homebrew-games#610\n  https://github.com/Homebrew/homebrew-games/pull/610):\n  e8837ae9c21ac6ca289c0214747a6d7ff7cc4683b9426377f42cda318fddcb25\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/issues/1168, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AI0i8cPEaL42Foqx--Cu1CLEXBFSyCpgks5qbWlsgaJpZM4JZN11\n.\n. Well, you don't seem to realize the magnitude of the impact of your\nprevious patch.\n\nYou took a compile-time const struct and turned it into a non-POD.  That\nwould only be anecdotal if it wasn't the most used struct in Mame. As in,\nmore than 100K instances.  And there are two strings per entry, so that's\nmore than 200K classes to manage at compile time and then build at startup\n(because std::string may be invoking an allocation).\nWith gcc 6.1.1, on a 64-bits 3.4GHz i7, that's 11mn20 to compile mpu4.cpp.\nCompare with 4 seconds with that new patch.  I'm not entirely sure what\nthere is to discuss.\nUnless we want to compare the -listxml/-valid time to decide between that\npatch and reverting your initial stuff instead?  Because they're going to\ndo the 200K+ string constructions.  Not sure how long that takes though, it\nmay be negligible. And unifying softlists/rom_entry is a worthwhile goal.\nOG.\nOn Sun, Aug 7, 2016 at 12:59 AM, npwoods notifications@github.com wrote:\n\nDON'T COMMIT WITHOUT DISCUSSION\nI've seen a great deal of concern on #mame-dev IRC that the recent change\nto the rom_entry structure made 32-bit compiles too unwieldy.\nThis introduces a tiny_rom_entry structure declared the old fashioned way\nthat then gets converted to the C++-ified rom_entry structure on\ninstantiation. Before anybody pulls this, we should determine the following:\n1. This change fixes the problem\n2. The problem is actually worth fixing (is this only a problem on\ncompilers that we shouldn't be supporting)\n3. We have consensus that this is the right way to solve the problem\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/1196\nCommit Summary\n- Created a tiny_rom_entry structure for the purposes of rom_entry\n  declarations in code, and a first pass at the required core changes\n- Finished up tiny_rom_entry conversion\nFile Changes\n- M src/devices/bus/a1bus/a1cassette.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-0 (2)\n- M src/devices/bus/a1bus/a1cassette.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-1 (2)\n- M src/devices/bus/a1bus/a1cffa.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-2 (2)\n- M src/devices/bus/a1bus/a1cffa.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-3 (2)\n- M src/devices/bus/a2bus/a2applicard.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-4 (2)\n- M src/devices/bus/a2bus/a2applicard.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-5 (2)\n- M src/devices/bus/a2bus/a2cffa.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-6 (4)\n- M src/devices/bus/a2bus/a2cffa.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-7 (4)\n- M src/devices/bus/a2bus/a2corvus.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-8 (2)\n- M src/devices/bus/a2bus/a2corvus.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-9 (2)\n- M src/devices/bus/a2bus/a2diskii.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-10 (2)\n- M src/devices/bus/a2bus/a2diskii.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-11 (2)\n- M src/devices/bus/a2bus/a2diskiing.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-12 (2)\n- M src/devices/bus/a2bus/a2diskiing.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-13 (2)\n- M src/devices/bus/a2bus/a2hsscsi.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-14 (2)\n- M src/devices/bus/a2bus/a2hsscsi.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-15 (2)\n- M src/devices/bus/a2bus/a2memexp.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-16 (4)\n- M src/devices/bus/a2bus/a2memexp.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-17 (4)\n- M src/devices/bus/a2bus/a2pic.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-18 (2)\n- M src/devices/bus/a2bus/a2pic.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-19 (2)\n- M src/devices/bus/a2bus/a2scsi.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-20 (2)\n- M src/devices/bus/a2bus/a2scsi.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-21 (2)\n- M src/devices/bus/a2bus/a2ssc.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-22 (2)\n- M src/devices/bus/a2bus/a2ssc.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-23 (2)\n- M src/devices/bus/a2bus/a2swyft.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-24 (2)\n- M src/devices/bus/a2bus/a2swyft.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-25 (2)\n- M src/devices/bus/a2bus/a2thunderclock.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-26 (2)\n- M src/devices/bus/a2bus/a2thunderclock.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-27 (2)\n- M src/devices/bus/a2bus/a2ultraterm.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-28 (4)\n- M src/devices/bus/a2bus/a2ultraterm.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-29 (4)\n- M src/devices/bus/a2bus/a2videoterm.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-30 (12)\n- M src/devices/bus/a2bus/a2videoterm.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-31 (12)\n- M src/devices/bus/a2bus/a2vulcan.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-32 (4)\n- M src/devices/bus/a2bus/a2vulcan.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-33 (4)\n- M src/devices/bus/a2bus/a2zipdrive.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-34 (2)\n- M src/devices/bus/a2bus/a2zipdrive.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-35 (2)\n- M src/devices/bus/a2bus/corvfdc01.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-36 (2)\n- M src/devices/bus/a2bus/corvfdc01.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-37 (2)\n- M src/devices/bus/a2bus/corvfdc02.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-38 (2)\n- M src/devices/bus/a2bus/corvfdc02.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-39 (2)\n- M src/devices/bus/a2bus/mouse.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-40 (2)\n- M src/devices/bus/a2bus/mouse.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-41 (2)\n- M src/devices/bus/a2bus/timemasterho.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-42 (2)\n- M src/devices/bus/a2bus/timemasterho.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-43 (2)\n- M src/devices/bus/abcbus/fd2.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-44 (2)\n- M src/devices/bus/abcbus/fd2.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-45 (2)\n- M src/devices/bus/abcbus/hdc.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-46 (2)\n- M src/devices/bus/abcbus/hdc.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-47 (2)\n- M src/devices/bus/abcbus/lux10828.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-48 (2)\n- M src/devices/bus/abcbus/lux10828.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-49 (2)\n- M src/devices/bus/abcbus/lux21046.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-50 (2)\n- M src/devices/bus/abcbus/lux21046.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-51 (2)\n- M src/devices/bus/abcbus/lux21056.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-52 (2)\n- M src/devices/bus/abcbus/lux21056.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-53 (2)\n- M src/devices/bus/abcbus/memcard.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-54 (2)\n- M src/devices/bus/abcbus/memcard.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-55 (2)\n- M src/devices/bus/abcbus/sio.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-56 (2)\n- M src/devices/bus/abcbus/sio.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-57 (2)\n- M src/devices/bus/abcbus/slutprov.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-58 (2)\n- M src/devices/bus/abcbus/slutprov.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-59 (2)\n- M src/devices/bus/abcbus/turbo.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-60 (2)\n- M src/devices/bus/abcbus/turbo.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-61 (2)\n- M src/devices/bus/abcbus/uni800.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-62 (2)\n- M src/devices/bus/abcbus/uni800.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-63 (2)\n- M src/devices/bus/abckb/abc77.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-64 (2)\n- M src/devices/bus/abckb/abc77.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-65 (2)\n- M src/devices/bus/abckb/abc800kb.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-66 (2)\n- M src/devices/bus/abckb/abc800kb.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-67 (2)\n- M src/devices/bus/abckb/abc99.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-68 (2)\n- M src/devices/bus/abckb/abc99.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-69 (2)\n- M src/devices/bus/adam/ide.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-70 (2)\n- M src/devices/bus/adam/ide.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-71 (2)\n- M src/devices/bus/adamnet/ddp.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-72 (2)\n- M src/devices/bus/adamnet/ddp.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-73 (2)\n- M src/devices/bus/adamnet/fdc.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-74 (2)\n- M src/devices/bus/adamnet/fdc.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-75 (2)\n- M src/devices/bus/adamnet/kb.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-76 (2)\n- M src/devices/bus/adamnet/kb.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-77 (2)\n- M src/devices/bus/adamnet/printer.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-78 (2)\n- M src/devices/bus/adamnet/printer.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-79 (2)\n- M src/devices/bus/adamnet/spi.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-80 (2)\n- M src/devices/bus/adamnet/spi.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-81 (2)\n- M src/devices/bus/amiga/zorro/a590.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-82 (2)\n- M src/devices/bus/amiga/zorro/a590.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-83 (2)\n- M src/devices/bus/amiga/zorro/action_replay.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-84 (6)\n- M src/devices/bus/amiga/zorro/action_replay.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-85 (6)\n- M src/devices/bus/amiga/zorro/buddha.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-86 (2)\n- M src/devices/bus/amiga/zorro/buddha.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-87 (2)\n- M src/devices/bus/bml3/bml3kanji.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-88 (2)\n- M src/devices/bus/bml3/bml3kanji.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-89 (2)\n- M src/devices/bus/bml3/bml3mp1802.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-90 (2)\n- M src/devices/bus/bml3/bml3mp1802.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-91 (2)\n- M src/devices/bus/bml3/bml3mp1805.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-92 (2)\n- M src/devices/bus/bml3/bml3mp1805.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-93 (2)\n- M src/devices/bus/bw2/ramcard.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-94 (2)\n- M src/devices/bus/bw2/ramcard.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-95 (2)\n- M src/devices/bus/c64/currah_speech.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-96 (2)\n- M src/devices/bus/c64/currah_speech.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-97 (2)\n- M src/devices/bus/c64/fcc.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-98 (2)\n- M src/devices/bus/c64/fcc.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-99 (2)\n- M src/devices/bus/c64/multiscreen.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-100 (2)\n- M src/devices/bus/c64/multiscreen.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-101 (2)\n- M src/devices/bus/c64/supercpu.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-102 (2)\n- M src/devices/bus/c64/supercpu.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-103 (2)\n- M src/devices/bus/c64/xl80.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-104 (2)\n- M src/devices/bus/c64/xl80.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-105 (2)\n- M src/devices/bus/cbm2/hrg.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-106 (2)\n- M src/devices/bus/cbm2/hrg.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-107 (2)\n- M src/devices/bus/cbmiec/c1526.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-108 (4)\n- M src/devices/bus/cbmiec/c1526.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-109 (4)\n- M src/devices/bus/cbmiec/c1541.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-110 (24)\n- M src/devices/bus/cbmiec/c1541.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-111 (24)\n- M src/devices/bus/cbmiec/c1571.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-112 (8)\n- M src/devices/bus/cbmiec/c1571.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-113 (8)\n- M src/devices/bus/cbmiec/c1581.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-114 (4)\n- M src/devices/bus/cbmiec/c1581.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-115 (4)\n- M src/devices/bus/cbmiec/c64_nl10.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-116 (2)\n- M src/devices/bus/cbmiec/c64_nl10.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-117 (2)\n- M src/devices/bus/cbmiec/cmdhd.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-118 (2)\n- M src/devices/bus/cbmiec/cmdhd.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-119 (2)\n- M src/devices/bus/cbmiec/fd2000.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-120 (2)\n- M src/devices/bus/cbmiec/fd2000.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-121 (2)\n- M src/devices/bus/cbmiec/interpod.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-122 (2)\n- M src/devices/bus/cbmiec/interpod.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-123 (2)\n- M src/devices/bus/cbmiec/serialbox.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-124 (2)\n- M src/devices/bus/cbmiec/serialbox.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-125 (2)\n- M src/devices/bus/cbmiec/vic1515.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-126 (2)\n- M src/devices/bus/cbmiec/vic1515.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-127 (2)\n- M src/devices/bus/cbmiec/vic1520.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-128 (2)\n- M src/devices/bus/cbmiec/vic1520.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-129 (2)\n- M src/devices/bus/centronics/comxpl80.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-130 (2)\n- M src/devices/bus/centronics/comxpl80.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-131 (2)\n- M src/devices/bus/centronics/epson_ex800.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-132 (2)\n- M src/devices/bus/centronics/epson_ex800.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-133 (2)\n- M src/devices/bus/centronics/epson_lx800.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-134 (2)\n- M src/devices/bus/centronics/epson_lx800.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-135 (2)\n- M src/devices/bus/centronics/epson_lx810l.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-136 (4)\n- M src/devices/bus/centronics/epson_lx810l.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-137 (4)\n- M src/devices/bus/centronics/nec_p72.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-138 (2)\n- M src/devices/bus/centronics/nec_p72.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-139 (2)\n- M src/devices/bus/cgenie/expansion/floppy.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-140 (2)\n- M src/devices/bus/cgenie/expansion/floppy.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-141 (2)\n- M src/devices/bus/coco/coco_fdc.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-142 (12)\n- M src/devices/bus/coco/coco_fdc.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-143 (12)\n- M src/devices/bus/coco/coco_pak.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-144 (2)\n- M src/devices/bus/coco/coco_pak.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-145 (2)\n- M src/devices/bus/comx35/clm.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-146 (2)\n- M src/devices/bus/comx35/clm.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-147 (2)\n- M src/devices/bus/comx35/eprom.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-148 (2)\n- M src/devices/bus/comx35/eprom.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-149 (2)\n- M src/devices/bus/comx35/expbox.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-150 (2)\n- M src/devices/bus/comx35/expbox.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-151 (2)\n- M src/devices/bus/comx35/fdc.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-152 (2)\n- M src/devices/bus/comx35/fdc.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-153 (2)\n- M src/devices/bus/comx35/printer.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-154 (2)\n- M src/devices/bus/comx35/printer.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-155 (2)\n- M src/devices/bus/comx35/thermal.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-156 (2)\n- M src/devices/bus/comx35/thermal.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-157 (2)\n- M src/devices/bus/cpc/brunword4.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-158 (2)\n- M src/devices/bus/cpc/brunword4.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-159 (2)\n- M src/devices/bus/cpc/cpc_rs232.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-160 (4)\n- M src/devices/bus/cpc/cpc_rs232.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-161 (4)\n- M src/devices/bus/cpc/cpc_ssa1.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-162 (4)\n- M src/devices/bus/cpc/cpc_ssa1.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-163 (4)\n- M src/devices/bus/cpc/ddi1.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-164 (2)\n- M src/devices/bus/cpc/ddi1.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-165 (2)\n- M src/devices/bus/cpc/hd20.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-166 (2)\n- M src/devices/bus/cpc/hd20.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-167 (2)\n- M src/devices/bus/cpc/mface2.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-168 (2)\n- M src/devices/bus/cpc/mface2.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-169 (2)\n- M src/devices/bus/cpc/smartwatch.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-170 (2)\n- M src/devices/bus/cpc/smartwatch.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-171 (2)\n- M src/devices/bus/cpc/transtape.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-172 (2)\n- M src/devices/bus/cpc/transtape.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-173 (2)\n- M src/devices/bus/dmv/k220.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-174 (2)\n- M src/devices/bus/dmv/k220.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-175 (2)\n- M src/devices/bus/dmv/k230.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-176 (8)\n- M src/devices/bus/dmv/k230.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-177 (8)\n- M src/devices/bus/dmv/k806.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-178 (2)\n- M src/devices/bus/dmv/k806.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-179 (2)\n- M src/devices/bus/ecbbus/grip.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-180 (2)\n- M src/devices/bus/ecbbus/grip.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-181 (2)\n- M src/devices/bus/econet/e01.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-182 (2)\n- M src/devices/bus/econet/e01.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-183 (2)\n- M src/devices/bus/electron/m2105.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-184 (2)\n- M src/devices/bus/electron/m2105.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-185 (2)\n- M src/devices/bus/ep64/exdos.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-186 (2)\n- M src/devices/bus/ep64/exdos.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-187 (2)\n- M src/devices/bus/epson_sio/pf10.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-188 (2)\n- M src/devices/bus/epson_sio/pf10.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-189 (2)\n- M src/devices/bus/epson_sio/tf20.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-190 (2)\n- M src/devices/bus/epson_sio/tf20.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-191 (2)\n- M src/devices/bus/ieee488/c2031.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-192 (2)\n- M src/devices/bus/ieee488/c2031.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-193 (2)\n- M src/devices/bus/ieee488/c2040.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-194 (6)\n- M src/devices/bus/ieee488/c2040.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-195 (6)\n- M src/devices/bus/ieee488/c2040fdc.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-196 (2)\n- M src/devices/bus/ieee488/c2040fdc.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-197 (2)\n- M src/devices/bus/ieee488/c8050.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-198 (6)\n- M src/devices/bus/ieee488/c8050.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-199 (6)\n- M src/devices/bus/ieee488/c8050fdc.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-200 (2)\n- M src/devices/bus/ieee488/c8050fdc.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-201 (2)\n- M src/devices/bus/ieee488/c8280.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-202 (2)\n- M src/devices/bus/ieee488/c8280.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-203 (2)\n- M src/devices/bus/ieee488/d9060.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-204 (2)\n- M src/devices/bus/ieee488/d9060.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-205 (2)\n- M src/devices/bus/ieee488/hardbox.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-206 (2)\n- M src/devices/bus/ieee488/hardbox.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-207 (2)\n- M src/devices/bus/ieee488/shark.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-208 (2)\n- M src/devices/bus/ieee488/shark.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-209 (2)\n- M src/devices/bus/ieee488/softbox.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-210 (2)\n- M src/devices/bus/ieee488/softbox.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-211 (2)\n- M src/devices/bus/imi7000/imi5000h.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-212 (2)\n- M src/devices/bus/imi7000/imi5000h.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-213 (2)\n- M src/devices/bus/intv/ecs.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-214 (2)\n- M src/devices/bus/intv/ecs.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-215 (2)\n- M src/devices/bus/intv/voice.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-216 (2)\n- M src/devices/bus/intv/voice.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-217 (2)\n- M src/devices/bus/iq151/disc2.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-218 (2)\n- M src/devices/bus/iq151/disc2.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-219 (2)\n- M src/devices/bus/iq151/minigraf.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-220 (2)\n- M src/devices/bus/iq151/minigraf.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-221 (2)\n- M src/devices/bus/iq151/ms151a.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-222 (2)\n- M src/devices/bus/iq151/ms151a.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-223 (2)\n- M src/devices/bus/iq151/rom.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-224 (2)\n- M src/devices/bus/iq151/rom.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-225 (2)\n- M src/devices/bus/iq151/video32.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-226 (2)\n- M src/devices/bus/iq151/video32.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-227 (2)\n- M src/devices/bus/iq151/video64.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-228 (2)\n- M src/devices/bus/iq151/video64.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-229 (2)\n- M src/devices/bus/isa/3c505.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-230 (2)\n- M src/devices/bus/isa/3c505.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-231 (2)\n- M src/devices/bus/isa/aga.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-232 (4)\n- M src/devices/bus/isa/aga.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-233 (4)\n- M src/devices/bus/isa/aha1542.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-234 (2)\n- M src/devices/bus/isa/aha1542.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-235 (2)\n- M src/devices/bus/isa/cga.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-236 (14)\n- M src/devices/bus/isa/cga.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-237 (14)\n- M src/devices/bus/isa/dectalk.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-238 (2)\n- M src/devices/bus/isa/dectalk.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-239 (2)\n- M src/devices/bus/isa/ega.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-240 (2)\n- M src/devices/bus/isa/ega.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-241 (2)\n- M src/devices/bus/isa/finalchs.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-242 (2)\n- M src/devices/bus/isa/finalchs.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-243 (2)\n- M src/devices/bus/isa/hdc.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-244 (2)\n- M src/devices/bus/isa/hdc.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-245 (2)\n- M src/devices/bus/isa/ibm_mfc.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-246 (2)\n- M src/devices/bus/isa/ibm_mfc.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-247 (2)\n- M src/devices/bus/isa/mc1502_fdc.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-248 (2)\n- M src/devices/bus/isa/mc1502_fdc.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-249 (2)\n- M src/devices/bus/isa/mc1502_rom.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-250 (2)\n- M src/devices/bus/isa/mc1502_rom.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-251 (2)\n- M src/devices/bus/isa/mda.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-252 (4)\n- M src/devices/bus/isa/mda.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-253 (4)\n- M src/devices/bus/isa/mufdc.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-254 (4)\n- M src/devices/bus/isa/mufdc.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-255 (4)\n- M src/devices/bus/isa/omti8621.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-256 (4)\n- M src/devices/bus/isa/omti8621.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-257 (4)\n- M src/devices/bus/isa/p1_fdc.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-258 (2)\n- M src/devices/bus/isa/p1_fdc.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-259 (2)\n- M src/devices/bus/isa/p1_hdc.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-260 (2)\n- M src/devices/bus/isa/p1_hdc.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-261 (2)\n- M src/devices/bus/isa/p1_rom.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-262 (2)\n- M src/devices/bus/isa/p1_rom.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-263 (2)\n- M src/devices/bus/isa/pc1640_iga.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-264 (2)\n- M src/devices/bus/isa/pc1640_iga.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-265 (2)\n- M src/devices/bus/isa/pgc.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-266 (2)\n- M src/devices/bus/isa/pgc.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-267 (2)\n- M src/devices/bus/isa/sb16.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-268 (2)\n- M src/devices/bus/isa/sb16.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-269 (2)\n- M src/devices/bus/isa/side116.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-270 (2)\n- M src/devices/bus/isa/side116.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-271 (2)\n- M src/devices/bus/isa/stereo_fx.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-272 (2)\n- M src/devices/bus/isa/stereo_fx.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-273 (2)\n- M src/devices/bus/isa/svga_cirrus.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-274 (4)\n- M src/devices/bus/isa/svga_cirrus.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-275 (4)\n- M src/devices/bus/isa/svga_s3.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-276 (8)\n- M src/devices/bus/isa/svga_s3.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-277 (8)\n- M src/devices/bus/isa/svga_trident.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-278 (2)\n- M src/devices/bus/isa/svga_trident.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-279 (2)\n- M src/devices/bus/isa/svga_tseng.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-280 (2)\n- M src/devices/bus/isa/svga_tseng.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-281 (2)\n- M src/devices/bus/isa/vga.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-282 (2)\n- M src/devices/bus/isa/vga.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-283 (2)\n- M src/devices/bus/isa/vga_ati.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-284 (6)\n- M src/devices/bus/isa/vga_ati.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-285 (6)\n- M src/devices/bus/isa/wd1002a_wx1.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-286 (2)\n- M src/devices/bus/isa/wd1002a_wx1.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-287 (2)\n- M src/devices/bus/isa/wdxt_gen.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-288 (2)\n- M src/devices/bus/isa/wdxt_gen.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-289 (2)\n- M src/devices/bus/isa/xtide.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-290 (2)\n- M src/devices/bus/isa/xtide.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-291 (2)\n- M src/devices/bus/kc/d004.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-292 (4)\n- M src/devices/bus/kc/d004.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-293 (4)\n- M src/devices/bus/kc/rom.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-294 (2)\n- M src/devices/bus/kc/rom.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-295 (2)\n- M src/devices/bus/macpds/pds_tpdfpd.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-296 (2)\n- M src/devices/bus/macpds/pds_tpdfpd.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-297 (2)\n- M src/devices/bus/msx_cart/bm_012.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-298 (2)\n- M src/devices/bus/msx_cart/bm_012.h\n  https://github.com/mamedev/mame/pull/1196/files#diff-299 (2)\n- I src/devices/bus/msx_cart/moonsound.cpp\n  https://github.com/mamedev/mame/pull/1196/files#diff-300 (0)\nPatch Links:\n- https://github.com/mamedev/mame/pull/1196.patch\n- https://github.com/mamedev/mame/pull/1196.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1196, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AI0i8cyO19HcUiCFlNQaKQaSfOzJH_rUks5qdRG_gaJpZM4JeYlt\n.\n. Hey hey hey :-)\n\nFirst, machine_info is a good idea.  Could you separate it?  Could you, in\nfact, in general, try to do one thing per pull request?  With git it's\nusually not hard to split changes, git add -p in particular is very nice. I\nknow it's work, but it's really, really useful when we're talking about\ninternals.\nAs for natural keyboard, I'm not sure where it belongs.  What about we talk\nabout it on the list?  That's why it's there.\nOG.\nOn Tue, Aug 9, 2016 at 6:28 AM, ajrhacker notifications@github.com wrote:\n\nI have no idea as to what \"LLE keyboards\" are supposed to be in MAME. I\nguess I'll just have to forget about fixing issues like MT #6340 now and\ncontinue work on areas further removed from the so-called \"future of MAME\"\nPC and handheld emulation projects.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1213#issuecomment-238450318, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0i8RYQYTGYXpl6G4QJoegBbrbqsYHGks5qeAHUgaJpZM4JflCp\n.\n. From the floppy point of view, \"is_readonly\" is whether the \"write protect\"\ntab is set on the (emulated) floppy. It's not about the on-disk storage,\nwhich is transcient anyway.\n\nCurrently, even if the UI isn't there yet, the system is essentially\ndesigned to allow reading from one place and writing in another (e.g.\ninitialize from an image in a softlist then write to a \"diff\" file which\nactually includes the complete image), or to create a new disk in memory\nand decide later whether to write the current state somewhere.  Tape should\nhave the same capabilities, but I don't feel like pulling that particular\nstring right now.  CHDs have the issue of size (which is, OTOH, their\nreason for existing in the first place).\nMeh.  Right now \"image\" means too many things or not enough, depending on\nyour point of view (should nvram/flash be there?).\nOG.\nOn Tue, Aug 9, 2016 at 2:29 PM, npwoods notifications@github.com wrote:\n\nI'll also add that if we want a more sophisticated technique to determine\nif an image is read only, we'll be in a better position to implement it\nthan before. Before, it was up to whomever was setting up the image to set\nm_readonly correctly. Now such an improvement can be done by changing how\nis_readonly() is implemented.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1215#issuecomment-238537873, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0i8RTlzntaoKUQJe_BNCOdUUwhID0vks5qeHK1gaJpZM4JgAiP\n.\n. Are you the copyright owner for the new core (aka did you write it)?\n\nOG.\nOn Wed, Aug 17, 2016 at 10:07 AM, superctr notifications@github.com wrote:\n\n\nReplaced C352 core with new one used in VGMPlay\n  https://github.com/vgmrips/vgmplay. This fixes noise generation (ie\n  ncv1 Xevious explosion sounds) as well as sample interpolation.\nChange clock frequencies for sub CPU and sound chip for System 12/23\n  drivers. The new values are based on my research on the sound drivers,\n  including a comparison between the ND-1 and System 12 sound drivers. This\n  affects music timing as well as pitch.\nRemoved rear channels for systems that lack a second Sanyo LC78815M\n  stereo DAC.\n\n\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/1254\nCommit Summary\n- Merge pull request #3 from mamedev/master\n- update H8/3002 and C352 frequencies for namcos12, namcos23\n- Replace C352 core.\n- Rearrange C352 channels, remove rear channels for systems without\n  second\nFile Changes\n- M src/devices/sound/c352.cpp\n  https://github.com/mamedev/mame/pull/1254/files#diff-0 (576)\n- M src/devices/sound/c352.h\n  https://github.com/mamedev/mame/pull/1254/files#diff-1 (60)\n- M src/mame/drivers/namcofl.cpp\n  https://github.com/mamedev/mame/pull/1254/files#diff-2 (8)\n- M src/mame/drivers/namconb1.cpp\n  https://github.com/mamedev/mame/pull/1254/files#diff-3 (8)\n- M src/mame/drivers/namcond1.cpp\n  https://github.com/mamedev/mame/pull/1254/files#diff-4 (8)\n- M src/mame/drivers/namcos11.cpp\n  https://github.com/mamedev/mame/pull/1254/files#diff-5 (10)\n- M src/mame/drivers/namcos12.cpp\n  https://github.com/mamedev/mame/pull/1254/files#diff-6 (12)\n- M src/mame/drivers/namcos22.cpp\n  https://github.com/mamedev/mame/pull/1254/files#diff-7 (16)\n- M src/mame/drivers/namcos23.cpp\n  https://github.com/mamedev/mame/pull/1254/files#diff-8 (23)\nPatch Links:\n- https://github.com/mamedev/mame/pull/1254.patch\n- https://github.com/mamedev/mame/pull/1254.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1254, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AI0i8dJlx6JlXkNl0bky5WTjKAhkRha1ks5qgsFCgaJpZM4JmMd9\n.\n. They were calculated based on the standard 120Hz interrupt rate all namco\ngames use and computing the base frequency from the timer programming.  And\nthe change is within the precision range of the measurements.  So I think\nthey're good.\n\nTo do better, we'll have to find where the frequency generator (2061asc) is\nprogrammed.\nOG.\nOn Thu, Aug 18, 2016 at 6:09 PM, Jonathan Gevaryahu \nnotifications@github.com wrote:\n\nThe clock speed changes, have these been verified with a frequency counter\non the actual board? I'm guessing the original clock speed numbers in the\ndriver were measurements from who knows how long ago, but I could be\nwrong...\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1254#issuecomment-240773282, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0i8eFHinAJLP0RGY1YGoX7qeRnQjSTks5qhIOqgaJpZM4JmMd9\n.\n. And some people, like me, strongly support separating them :-)  Some FM\nchips are eventually going to be split among 4 or 5 devices.\n\nOG.\nOn Wed, Aug 17, 2016 at 6:50 PM, Vas Crabb notifications@github.com wrote:\n\nI was referring to previous PR adding the dependency. This one fixed it.\nAs for good drivers... I guess look at things that have been rewritten\nrecently is the best generic advice. Things get modernised slowly, and MAME\nstill has a lot of cruft.\nAs an aside, I'm not really sure moving GBA LCD to src/devices is the\nright thing to do. The intention is really to keep things that are common\ndevices in src/devices, and things that are only used for a single system\nin src/mame. I know this isn't always followed.\nThere's also some argument over what should be implemented as a device in\nMAME. The general consensus is that devices should represent actual\nphysical components or subsystems of a machine, like a sprite chip, a sound\nboard, or a keyboard. Some people strongly oppose separating different\nfunctions of a single SoC into different devices.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1256#issuecomment-240474085, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0i8T3z_gg_rbQRboOfuqVz_aipF-V6ks5qgzvGgaJpZM4JmZLc\n.\n. Right, so you're saying any tape file should be 450Megs.  Are you nuts?\n\nOG.\nOn Mon, Aug 22, 2016 at 12:08 PM, David Haywood notifications@github.com\nwrote:\n\nI think the idea of automatically creating a wav file with \"-cass\nnewfile.wav\" is flawed anyway tho\nTapes have sizes, fixed sizes, they're not (and should not be treated as)\nsome kind of expanding entity or something like that. You should have a\nfixed size tape, and be able to fast forward / rewind to any position it\nit, and start recording there.\nI don't see how \"-cass newfile.wav\" in any way allows you to specify a\nsize.\nIt just feels a bit hacky. In reality a cassette, a floppy, a hard drive,\nor a CD-RW aren't really too different and so should have a more\nstandardized way of being created.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1278#issuecomment-241369144, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0i8XYZ21OL790rfyQzlRGP081X1Ev_ks5qiXU4gaJpZM4JpNg7\n.\n. I definitively handle the pinball dmds as screens, with pwm too.  What\nthese look like?\n\nOG.\nOn Wed, Aug 24, 2016 at 3:23 PM, David Haywood notifications@github.com\nwrote:\n\nyeah, if that is accepted this one can be closed then (unless we WANT to\ntreat DMDs as a type of screen? it would save an awful lot of lines in the\nartwork files)\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1303#issuecomment-242061659, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0i8RKmBD_B-qCM0256NV6naVY5yIVLks5qjEXZgaJpZM4JrNqh\n.\n. That's a characteristic of dmds, they're scanned.  They're no more, but no\nless of a screen than svgs :-)\n\nOG.\nOn Wed, Aug 24, 2016 at 3:33 PM, David Haywood notifications@github.com\nwrote:\n\nhttps://youtu.be/LYyRQxqsop8?t=2m\nnear the bottom.\nthe 'problem' is they're driven more like lamps, the game code manually\nstrobes each line and writes the data.. so the 'refresh rate' is entirely\ndependant on the game code, and how often it writes. treating them as a\nscreen doesn't feel quite right.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1303#issuecomment-242064910, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0i8TiVlSAw7UkoyVz_C8BFAL976O03ks5qjEg4gaJpZM4JrNqh\n.\n. Have a look at attack from mars for instance is rendered, and check whether\nit matches the kind of stuff the fruit machine hardware needs.\n\nOG.\nOn Wed, Aug 24, 2016 at 3:40 PM, David Haywood notifications@github.com\nwrote:\n\nwell if we're ok with treating them as screens, then it's probably a lot\ntidier from a layout point of view, and for that reason I think I prefer it.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1303#issuecomment-242067253, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0i8aLKW7tKNyEZhBnRUQIOsxd9aqmEks5qjEnWgaJpZM4JrNqh\n.\n. Urgh, that's very much done halfways.  Do you plan to change the\ndisasm_disassemble signature in a followup pull request?\n\nOG.\nOn Thu, Aug 25, 2016 at 7:52 PM, npwoods notifications@github.com wrote:\n\nAlso consolidated dasm_override_delegates for CoCo and Dragon Beta\nFeel free to defer this until after the release\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/1317\nCommit Summary\n- Refactored device_disasm_interface::disassemble() and\n  dasm_override_delegate to take string buffers as std::string\nFile Changes\n- M src/emu/debug/debugcmd.cpp\n  https://github.com/mamedev/mame/pull/1317/files#diff-0 (6)\n- M src/emu/debug/debugcpu.cpp\n  https://github.com/mamedev/mame/pull/1317/files#diff-1 (8)\n- M src/emu/debug/dvdisasm.cpp\n  https://github.com/mamedev/mame/pull/1317/files#diff-2 (6)\n- M src/emu/didisasm.cpp\n  https://github.com/mamedev/mame/pull/1317/files#diff-3 (8)\n- M src/emu/didisasm.h\n  https://github.com/mamedev/mame/pull/1317/files#diff-4 (4)\n- M src/mame/drivers/palm.cpp\n  https://github.com/mamedev/mame/pull/1317/files#diff-5 (2)\n- M src/mame/drivers/palm_dbg.hxx\n  https://github.com/mamedev/mame/pull/1317/files#diff-6 (10)\n- M src/mame/includes/coco.h\n  https://github.com/mamedev/mame/pull/1317/files#diff-7 (3)\n- M src/mame/includes/dgn_beta.h\n  https://github.com/mamedev/mame/pull/1317/files#diff-8 (2)\n- M src/mame/includes/mac.h\n  https://github.com/mamedev/mame/pull/1317/files#diff-9 (2)\n- M src/mame/machine/apollo_dbg.cpp\n  https://github.com/mamedev/mame/pull/1317/files#diff-10 (6)\n- M src/mame/machine/coco.cpp\n  https://github.com/mamedev/mame/pull/1317/files#diff-11 (219)\n- M src/mame/machine/dgn_beta.cpp\n  https://github.com/mamedev/mame/pull/1317/files#diff-12 (168)\n- M src/mame/machine/mac.cpp\n  https://github.com/mamedev/mame/pull/1317/files#diff-13 (6)\nPatch Links:\n- https://github.com/mamedev/mame/pull/1317.patch\n- https://github.com/mamedev/mame/pull/1317.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1317, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AI0i8TSJ-hkaHOhB6MOBaX8x5lGjbaX5ks5qjdZWgaJpZM4JtVQ6\n.\n. Tried -oslog?  Sends all logerror to stderr.\n\nOG.\nOn Wed, Sep 7, 2016 at 4:28 PM, Joakim Larsson Edstr\u00f6m \nnotifications@github.com wrote:\n\nIntention is not to mess with logerror, is there a standard format? I\nredefine it as printf because there is more control in the console window\nthan in the debugger log window, like using 'less' and do cut & paste\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1373#issuecomment-245298105, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0i8c18yLecn87CVHWaPj70NACgqlfyks5qnsoPgaJpZM4J22MJ\n.\n. It can, but it's rare.  You can get the information by polling.  I think\neinstein does it?\n\nOG.\nOn Wed, Sep 14, 2016 at 2:15 PM, npwoods notifications@github.com wrote:\n\nNoticed that the INTRQ and DRQ callbacks are null on the FDC. I'm guessing\nthis can't be right.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/issues/1383#issuecomment-246994066, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0i8dIvIQO4uRKJmalmK6YBOln6yrDHks5qp-VHgaJpZM4J5FoD\n.\n. Why would you want to use set_input_line in the first place given the sync\nis problematic for you?\n\nI may agree with the trap_unmap concept, I won't agree with hardcoding it\nto call execute_input_line, expecially on something that's not necessarily\na cpu_device in the first place.  At a minimum turn the target into a\ndelegate or lambda so that the behaviour is decided by the driver.\nAnd I think it would be nice to put it in the address map, like the global\nmask.\nOG.\nOn Mon, Sep 12, 2016 at 9:31 AM, Sergey Svishchev notifications@github.com\nwrote:\n\nI'm working on drivers for DEC PDP-11 ISA-compatible machines -- not the\nactual PDP-11 or their clones, but desktops based on Soviet 1801 series\nhttps://en.wikipedia.org/wiki/1801_series_CPU microprocessors (f.e.\nuknc.cpp). Almost all original DEC processors (notable exception is T-11,\nthe only emulated by MAME) have bus timeout feature and software depends on\nit. Bus timeouts can happen at any time (instruction fetch, operand read or\nwrite, interrupt vector fetch...); set_input_line() is asynchronous and\nbreaks accuracy of emulation.\nThe diff below depends on execute_set_input being a public method, not\nsure how to make it cleaner:\ndiff --git a/src/emu/emumem.cpp b/src/emu/emumem.cpp\nindex b761409..8e9fc66 100644\n--- a/src/emu/emumem.cpp\n+++ b/src/emu/emumem.cpp\n@@ -724,6 +724,12 @@ private:\n                    m_space.addrchars(), m_space.byte_to_address(offset * sizeof(_UintType)),\n                    2 * sizeof(_UintType), mask);\n        }\n-       if (m_space.trap_unmap() && !m_space.debugger_access())\n-       {\n-           device_execute_interface executing = m_space.machine().scheduler().currently_executing();\n-           cpu_device cpu = dynamic_cast(&executing->device());\n-           cpu->execute_set_input(m_space.trap_line(), ASSERT_LINE);\n-       }\n      return m_space.unmap();\n  }\n@@ -796,6 +802,12 @@ private:\n                    2 * sizeof(_UintType), data,\n                    2 * sizeof(_UintType), mask);\n        }\n-       if (m_space.trap_unmap() && !m_space.debugger_access())\n-       {\n-           device_execute_interface executing = m_space.machine().scheduler().currently_executing();\n-           cpu_device cpu = dynamic_cast(&executing->device());\n-           cpu->execute_set_input(m_space.trap_line(), ASSERT_LINE);\n- }\n}\ntemplate\n  diff --git a/src/emu/emumem.h b/src/emu/emumem.h\n  index c5ed0c1..92b3598 100644\n  --- a/src/emu/emumem.h\n  +++ b/src/emu/emumem.h\n  @@ -294,6 +294,10 @@ public:\n  void set_debugger_access(bool debugger) { m_debugger_access = debugger; }\n  bool log_unmap() const { return m_log_unmap; }\n  void set_log_unmap(bool log) { m_log_unmap = log; }\n-   bool trap_unmap() const { return m_trap_unmap; }\n-   void set_trap_unmap(bool trap) { m_trap_unmap = trap; }\n-   int trap_line() { return m_trap_line; }\n-   void set_trap_line(int line) { m_trap_line = line; }\n  void dump_map(FILE *file, read_or_write readorwrite);\n// watchpoint enablers\n  @@ -464,6 +468,8 @@ protected:\n  address_spacenum        m_spacenum;         // address space index\n  bool                    m_debugger_access;  // treat accesses as coming from the debugger\n  bool                    m_log_unmap;        // log unmapped accesses in this space?\n-   bool                    m_trap_unmap;       // bus error on unmapped accesses in this space?\n-   int                     m_trap_line;        // input line to assert\n  std::unique_ptr m_direct;    // fast direct-access read info\n  const char *            m_name;             // friendly name of the address space\n  UINT8                   m_addrchars;        // number of characters to use for physical addresses\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/issues/1394, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AI0i8fXxTTekMm4cqdhP4tjhzWjX0Hg1ks5qpP_tgaJpZM4J6ThT\n.\n. I have three problems with that submission, which I think kill it.\n\nFirst, the tilemap viewer is the wrong place for the enable.  When you debug the tilemaps and need dynamic disable for that, you need to see the impact of the disable live.  You need one key per layer and you need it on the normal rendering screen.\nSecond, when you have a '!' in front of every damn use of a method, it means your logic is inverted.  It should have been debug_disable().\nAnd last, I don't like having stuff added in generic code for the use of one specific driver.  That's code you eventually have to remove, IME, and it usually festered by then.\n. In my experience, one key per layer and live update is really, really what\nyou need.\nOG.\nOn Fri, Sep 16, 2016 at 7:18 AM, ajrhacker notifications@github.com wrote:\n\nThis was intended as a general solution, not just for \"one specific\ndriver\" (video/seibuspi.cpp was specifically modified because it doesn't\nuse the normal draw routine). However, I don't intend to press this\nrequest, even though I dislike the ad-hoc way that drivers currently\nimplement \"one key per layer\" for disabling tilemap layers.\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1408#issuecomment-247520225, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0i8VaQ-OM6LBdAZdoLCy3zM1UTWW3wks5qqiaVgaJpZM4J-ktJ\n.\n. That's a very good question.  Do we have a \"standard\" way to store state\nthat should be preserved across sessions?\n\nOG.\nOn Fri, Sep 16, 2016 at 7:12 PM, Dankan1890 notifications@github.com\nwrote:\n\nI agree with you, but in what other way can you achieve this without using\nstatic members?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1410#issuecomment-247655626, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0i8fAx4g6CW4wX3WJgUliqE5iE8p8Hks5qqs3ogaJpZM4J_CWX\n.\n. Well, it changes the vertical alignment of 8-lines linescroll by one\nblock.  That's not something used often, so hard to tune.  I'd be inclined\nto accept it.\n\nOG.\nOn Sat, Sep 24, 2016 at 5:06 PM, R. Belmont notifications@github.com\nwrote:\n\nThis looks strongly likely to break other things, but @galibert\nhttps://github.com/galibert would probably know better.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1443#issuecomment-249369382, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0i8eGIjisYHt52XRL-RtqqJb82Vzonks5qtTyLgaJpZM4KFpOR\n.\n. Look at the commit list, cry a little, and try again.\n. Let's see if I can help you then...\n\nOG.\nOn Sat, Oct 1, 2016 at 6:35 PM, Bad-A-Billy notifications@github.com\nwrote:\n\nI've tried everything I can find to get rid of all the junk but nothing is\ngetting rid of it. Any ideas would be appreciated. If nothing else I will\nclose this out later today & submit a diff the old way.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1467#issuecomment-250922030, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0i8WaabhbuPanAlBuwmfzViA7JY9Zkks5qvovGgaJpZM4KLy74\n.\n. As far as I can tell, there's nothing in that pull request.  As in, if you\ngit diff with 0e2299e424d7da177a57bb530ae740c79a3c92a0 (Ivan's commit), you\nget nothing.  Dunno where your patch is, but it's not in there.\n\nOG.\nOn Sat, Oct 1, 2016 at 6:44 PM, Bad-A-Billy notifications@github.com\nwrote:\n\nok, thanks for the time OG.\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1467#issuecomment-250922584, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0i8c1ygORJwAJ2RXuaOHa2iDHroO3Pks5qvo3sgaJpZM4KLy74\n.\n. It seems to have been made explicitely correct since C++11, probably for\nthat use case.\n\nOG.\nOn Sat, Oct 1, 2016 at 8:56 PM, npwoods notifications@github.com wrote:\n\n[a|w|t|utf8]from[a|w|t|utf8_]string(xyz.c_str()) seems to be common\nenough to justify overloads. Also, I'm explicitly assuming that it is legal\nto override the NUL pointer within a C++ basic_string (e.g. - s[s.size()] =\n'\\0'). As far as I can tell, this seems to be legal - please don't shoot if\nI am wrong.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/1469\nCommit Summary\n- Adding new string conversion overloads\nFile Changes\n- M src/osd/modules/debugger/win/consolewininfo.cpp\n  https://github.com/mamedev/mame/pull/1469/files#diff-0 (8)\n- M src/osd/modules/file/windir.cpp\n  https://github.com/mamedev/mame/pull/1469/files#diff-1 (2)\n- M src/osd/modules/file/winfile.cpp\n  https://github.com/mamedev/mame/pull/1469/files#diff-2 (10)\n- M src/osd/modules/file/winptty.cpp\n  https://github.com/mamedev/mame/pull/1469/files#diff-3 (2)\n- M src/osd/modules/font/font_windows.cpp\n  https://github.com/mamedev/mame/pull/1469/files#diff-4 (2)\n- M src/osd/modules/lib/osdlib_win32.cpp\n  https://github.com/mamedev/mame/pull/1469/files#diff-5 (2)\n- M src/osd/strconv.cpp\n  https://github.com/mamedev/mame/pull/1469/files#diff-6 (132)\n- M src/osd/strconv.h\n  https://github.com/mamedev/mame/pull/1469/files#diff-7 (12)\n- M src/osd/windows/winutil.cpp\n  https://github.com/mamedev/mame/pull/1469/files#diff-8 (2)\nPatch Links:\n- https://github.com/mamedev/mame/pull/1469.patch\n- https://github.com/mamedev/mame/pull/1469.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1469, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AI0i8VxB0jtubOAPLaNzNTkngekD3xp1ks5qvqzJgaJpZM4KL1Mt\n.\n. It's invalid to modify it. Which is kinda ambiguous, since writing zero\nwhere it's supposed to be zero doesn't change much.  From what I'm reading\nof the changes between pre-11 and 11, it really looks like the idea was to\nallow C-style str* functions to write to the string, so it should be ok.\n\nOG.\nOn Sun, Oct 2, 2016 at 12:09 PM, Vas Crabb notifications@github.com wrote:\n\nIt's valid to dereference some_string[some_string.length()] in C++11 but\nis it actually valid to overwrite it?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1469#issuecomment-250963800, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0i8Q_MDXEg35tCYAdh411RaZQGAXtfks5qv4LPgaJpZM4KL1Mt\n.\n. Hmmm vas, not sure if you looked the -O9 asm, but it's not really nice.\nAnd for some reason the invocation is not inlined...\n\nOG.\nOn Tue, Oct 11, 2016 at 2:46 PM, Vas Crabb notifications@github.com wrote:\n\n*don't need to assign to the variable too often\nI accidentally a word again\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1494#issuecomment-252906471, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0i8ZVqN1SX5y6-an3-VWhU4SRBUKREks5qy4UngaJpZM4KSKIG\n.\n. That scc implementation has an issue with the indy (ip225015 in\nindy_indigo2.cpp).  Reproducer:\n- start ip225015 with no special parameters, you get a black screen (the\n  eeprom gets initialized in fact)\n- press F3, you see a boot screen\n- wait for the system to bitch (or press return to abort the failing boot),\n  it asks you to press a key to continue\n- you get a black screen\n\nWhat happens is that the firmware:\n1- initializes the channel A, activating TX\n2- resets channel A, disabling TX\n3- tries to write a console string to channel A by:\n3a- write a byte to send\n3b- wait until the TX fifo is empty\nIn the current code, if you write a byte to send with TX off, the fifo\nempty flag is cleared and nothing else happens.  That's where the firmware\nfreezes.  Not sure what should happen, but the current behaviour is\nsuboptimal.  Dunno if the reset is actually correct, hard to say (channel B\nis also reset all the time but is reprogrammed afterwards when needed...).\nNote that the initial black screen on eeprom reset may be due to the exact\nsame thing.\nOG.\nOn Tue, Oct 18, 2016 at 10:02 PM, Joakim Larsson Edstr\u00f6m \nnotifications@github.com wrote:\n\n\nAdded iack by reading rr2\nz80daisy_iack now returns -1 when no vector found or disabled\n  through the WR9 VIS\nRemoved z80daisy_reti code to match SCC documentation\nRemoved defacto reset values where possible and replaced them with\n  documented SCC reset values\n\n\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/1530\nCommit Summary\n- - Added iack by reading rr2\nFile Changes\n- M src/devices/machine/z80scc.cpp\n  https://github.com/mamedev/mame/pull/1530/files#diff-0 (145)\nPatch Links:\n- https://github.com/mamedev/mame/pull/1530.patch\n- https://github.com/mamedev/mame/pull/1530.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1530, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AI0i8QOnDKB2jIRgA2ZU75t8WXJzEdZMks5q1SW_gaJpZM4KaOdn\n.\n. Okay, if I read it right, you create objects for the different input\nsources, then layer adapters on them to decide how they'll be used\n(relative, absolute, etc).  The result looks rather clean.  I like it.\n\nOG.\nOn Fri, Oct 28, 2016 at 1:41 AM, ajrhacker notifications@github.com wrote:\n\nNow that 0.179 is out, I'm really hoping for at least some feedback here,\npreferably from devs concerned with the OSD layer.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1557#issuecomment-256800302, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0i8fqS7HSCg3lQvAz11aX5PiKMMnHAks5q4TaqgaJpZM4KfUKV\n.\n. Well, we merge and we go from there?\n\nOG.\nOn Sat, Oct 29, 2016 at 5:27 AM, ajrhacker notifications@github.com wrote:\n\nI worry somewhat that the new inheritance and construction schema here may\nnot be exactly right; with some tweaking, I think it could reach a\nconsiderably higher potential. Making input_class polymorphic will increase\nmodularity and prepare for a further overhaul of the input system that I\nhave planned. Note that the polymorphic input_device_item adapters already\nexisted.\nSplitting input.cpp does inflict quite a bit of churn on the codebase; as\nusual, I did it to liberate a lesser piece of the core from emu.h\ndependency, and in this case it fortunately turns out that neither the UI\nnor any devices require access to core inputs on a deeper level than the\nstandard input_seq codes and polling routines.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1557#issuecomment-257068084, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AI0i8ZTFfsjCapQ6dI4Y8ktAjQw5rU5Qks5q4r0_gaJpZM4KfUKV\n.\n. github is bitching that your patch is conflicting.  Wanna have a look ?\n\nOG.\nOn Tue, Oct 25, 2016 at 4:56 PM, Joakim Larsson Edstr\u00f6m \nnotifications@github.com wrote:\n\nThis fixes the SCC hookup for the indy_indigo2.cpp driver enough to boot\nto the graphical menu. There are more improvements needed for the serial\nport to work fully but I need to test that a bit more with other drivers\nbefore pushing it.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/1563\nCommit Summary\n- Fixed SCC hookup\nFile Changes\n- M src/mame/drivers/indy_indigo2.cpp\n  https://github.com/mamedev/mame/pull/1563/files#diff-0 (67)\nPatch Links:\n- https://github.com/mamedev/mame/pull/1563.patch\n- https://github.com/mamedev/mame/pull/1563.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1563, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AI0i8cdR2czIMlMCWdEgh3qcQOlsKLHKks5q3hiAgaJpZM4KgFsg\n.\n. That's part of what makes string concatenation kinda bad when translating.\n\nOG.\nOn Wed, Feb 24, 2016 at 1:57 PM, Guru notifications@github.com wrote:\n\nIn language/French/strings.po\nhttps://github.com/mamedev/mame/pull/648#discussion_r53933882:\n\n#: src/emu/ui/custui.cpp:592\n msgid \" to change the color value\"\n-msgstr \"\"\n+msgstr \"pour changer la valeur de la couleur\"\n\nTo avoid this in future, at the top of every .po file there should be\na comment telling anyone who edits it to translate the English text as-is\nand not to remove leading spaces or dashes etc. because they have been put\nthere on purpose and are needed when MAME selects a message and joins it\nwith another, as in the above example.\n\u2026 <#268967431_>\nOn Wed, Feb 24, 2016 at 7:50 PM, Vas Crabb notifications@github.com\nwrote: In language/French/strings.po <#648 (comment)\nhttps://github.com/mamedev/mame/pull/648#discussion_r53927818>: > > #:\nsrc/emu/ui/custui.cpp:592 > msgid \" to change the color value\" > -msgstr \"\"\n\n+msgstr \"pour changer la valeur de la couleur\" This is part of a\nconcatenation with the previous string - it needs the leading space \u2014 Reply\nto this email directly or view it on GitHub <\nhttps://github.com/mamedev/mame/pull/648/files#r53927818>.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/648/files#r53933882.\n. spacenum can only be EXPSPACE_OPCODE at that point, so that expression should be simplified.  Otherwise it looks buggy, since AS_DECRYPTED_OPCODES is 3, the maximum space index at that point (we have 4 total).\n\nShouldn't that be folded into a space number choice, something akin to auto space = memory->has_space(AS_DECRYPTED_OPCODES) ? AS_DECRYPTED_OPCODES : AS_PROGRAM; and then use space?. Same here.  Plus, in practice, the second parameter is unused, and the read path is broken.  Now that I read it more closely, this code is horrible (but not your fault).. Ditto.. Since it has nothing to do with improving audio play handling, could you remove it form that PR and fight it (or not) with ajr independently?. Don't do that.  Specialize the memory accessor instead and change read_sync/decrypt8.  See mame/machine/deco222. for an example.. Put that in mame/machine/ or directly in nes_vt.* please.  No sane reason to have it in devices/cpu/m6502. No, it's keyed on the palette.  Don't spend time on the graphics issues though, it's worked on in another branch.. You should turn that into one unique bitswap without masking. Also, can you prove it happens?  Case in point, in the atari st (wd1772, external motor control, so different...) if you deselect the drive with the motor running, the motor just keeps running until you re-select the drive and stop it.  Dunno what that chip does, but to you have good hints?. ",
    "james-wallace-ghub": "Not sure this compiles as written, I can look at it tonight, but someone may beat me to it.\nAs awpvid.c is written, it has no way of knowing which reel is where by design, hence the fact you probably won't be able to factor out the reel number.\n. If I've understood correctly, the 3D artwork is effectively a part of MAME itself, albeit a background task, as opposed to passing off to an external agent for rendering and input handling i.e. the synergy between Visual Pinball and the VPinMAME DLL build, or even the MAMEHooker DLL's connection to the output system. Anything that can facilitate the display of these non-video features to a good standard is a good idea IMHO, provided that the people who are good at making these kind of things aren't put off by the complexity of the system we end up using.\n. I'm not so much talking about the system, as the tools - if collaborating with someone like that is going to make the actual process of modelling easier, that's got to help, surely?\n. Am I being massively naive here, or does our OSI compliant status give us any pull with regard to the Blender toolbase. It's not easy to use by any stretch, but at least that is open.\n. Interesting, I'm surprised that such a format could be converted, but it helps part of the problem. I wonder if the same setup can be used ultimately to provide some sort of editor we can use directly, although I gather that MFME is basically restricted to Windows.\n. Well, if I can help on that front I will - anything to keep this going. There are things like the CFG files you need for dipswitches etc that I wonder might be something that can be served another way, particularly if the defaults are wrong.\n. Don't know enough about whether local cfgs is a maintainable case, but nice to see you're getting up and running. Not sure if this is the best place for discussing that specific point, given the main crux of this is more platform and system agnostic, but you know where to find me for any thing not on topic, and of course, there's the rest of the support setup.\n. Pro is a bit strong, think intermediate ;)\nI don't have much time to do things like this any more, but if I can pitch in, I will.\n. It's probably not going to support everything, it's a bit outmoded in many ways, but it's probably salvagabl for someone who wanted to. It never really did drag and drop IIRC.\n. Will close this because of the rogue commit at the top, but I can merge this in.\n. And all the FME stuff could really do with it too, for many reasons,\nparticularly a dimming and ultrabright effect known to be useful. I know\ntime based hysteresis is done by some non open tools that could be MAME\nfriendly if we want to go down that route, but I always wondered how\ncleanly that could be done.\nOn Saturday, 19 March 2016, R. Belmont notifications@github.com wrote:\n\nThis is a major issue for synths too.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/729#issuecomment-198697674\n\n\nSent from Gmail Mobile\n. Are you planning on doing anything with the configurations themselves, or is this all sorting/labelling? I have access to some of John's work with MFME configuration files, and plan to install the various setups as fragments as and when you're 'done' with a subdriver. Alternatively, I can pass the relevant bits on if that makes things easier, but I don't want to tread on what you're doing while adding stuff to make the games a bit more playable.\n. Well, what I have planned is to do this the simple way for now, and think\nabout whether this can be made modular at some stage.\nI've been toying with using lots of DRIVER_INIT_MEMBERS for the main\nfeatures (hoppers, reel setups, etc) - with the protection data being added\nto the ROMsets as fake ROMs (.CHR files, like MFME). Ever since the\ndiscussions regarding other elements, I've had a bit of a problem with\nadding protection related data to the main source, but this is something\nthat would definitely wait until a cleanup run, as I would be fooling\naround with the same code as you are.\nCHR data aside, I probably have enough data to take us from A to S from\nMFME2MAME in terms of the games that people have published layout code for\nfrom other emulators, aside from some potential use of special 7 segment\ndisplay controllers. I'm certain I'll expose weaknesses in my core\nemulation in the process, so hopefully everything can coexist without too\nmuch breakage, and by the end of it all will work a bit better for the\ncorner cases.\nOn 10 August 2016 at 17:16, R. Belmont notifications@github.com wrote:\n\nI will be working on the 68k-based SoCs this fall; I have specific Ensoniq\nuse cases for them, but helping fruit machines is a bonus too since they\nannoy all the right people :)\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1224#issuecomment-238919151, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AItbsJWZ5REei0AnfNH2vHZkX-Hr4G4Wks5qeflPgaJpZM4JhFYD\n.\n. The biggest problem with this is, aside from me, there doesn't seem to be much traction with this sort of thing, because it's such an onerous looking thing. If we went down the external CHR route, it would save a lot of source related headaches (because this data is going to be huge with per game CHR files otherwise).\nMy problem is that I have ridiculously little time to work with things like this, so I can never actually sit down and debug something this size anymore. With a combination of your relabelling and the MFME2MAME data from John, it should be possible to actually get testable games going (and since we have generated layouts too, anything that we can configure we can at least have a playable element for), and perhaps once it looks like something is actually happening, it might open things up a bit more., rather than seeming quite so abstract.\n. This is usually the point where I bring up the 3D artwork idea that's in the issues tracker, or the perhaps slightly more insane idea of Amber as a Visual Pinball-esque presentation layer allied to the MAME output system. Of course, it's nothing without a working system side, and without something a bit more hotpluggable in terms of the various expansion boards, it's down to DRIVER_INITs at the source level rather than a pure softlist.\n. If there's no objection, I'm going to merge this to get the descriptions into the codebase. I'm loathed to close the discussion however, but these threads have a tendency to get lost once everything is merged in.  There's the MAMEDEV forum I guess, but for now I'm going to merge the request and see if everything stays open.\nEDIT: It did, so I guess all is OK, IIRC the MAMEDEV forum has different forums accessible depending on which 'contributor' level you're at, so it might not be easy to run a thread there all could see.\n. RE Second i8279 - it appears to be on some of the parts lists, but the MCU seems to replace it. A lot of redesigns were done to save a bit of money, and I'm pretty sure that emulating the M1B is enough for everything, particularly as there's no real way of telling what was released on what version.\n. An element of the MCU use may be to just thwart bootlegging, like the CHR\nchip in MPU4. With disreputable types apparently hacking the percentages\nbelow legal minimum they had to be seen to act. Also, not surprised there's\nstuff wrong with the lamping, I think I wrote bits of that based on Turbo\nby Sega for the i8279 stuff.\n. If the MCU/ 8279 works, that may be what's needed - the original version of this from my perspective was a bit hacky as I mainly set it up to check that the sampled sound emulation was sufficient.\nAnyway, going to merge this in as it's already significantly improving stuff, and it'll make it easier for me to test some other stuff if it's in mainline.\n. Just a reminder that this stays open for comment if people want it to be, I remember driving myself slowly mad trying to work out why the inputs misbehaved, which it seems may have been fairly simple. As I recall we have an MCU dump somewhere which I presume we're using?\n. If MFME has a different opinion on banking to our driver, go with MFME's. We can probably work out when M1A was used from dates, but the green board/red board stuff is beyond me.\n. I'll take a look - I know that from the data you've supplied we're going to need more in terms of hopper emulation etc - but I'm not going to be able to catch that up for a while. Just wanted to let you know that there is something coming with that, as there's a lot of stubs in the MPU4 driver for it that need fleshing out.\n. Just a point RE: Layouts and parents, I've noticed that some of the things that were used to make layouts weren't the parents, just because the people designing them wouldn't care about the latest software. When I've been building the converted layouts into configurations, I've been applying the configurations to all sets rather than just the parent, but of course this is by ignoring the percentage keys and other inputs. It may be worth a discussion as to how we document this, as end users could easily get code running that doesn't match the layouts by using different settings etc so there may be a need to do something with views etc.\n. My hope is that, with the config data, we can put the basic classics in MAME (albeit with some of them using the wrong stake and prize info), with the image containing files or SVGs (still don't grasp how those work) used to flesh them out. \n. If everyone's happy with this, I'll merge it in tonight, just want to check the ROM names are OK.\nI did try to sort some of the M1 sets a while back using version IDs, but they don't necessarily coincide with age as different build paths have reset the version ID in some cases (so later titles in a series reuse the earlier numbers). With fewer titles though, should be easier to sort through.\n. I do wonder if 'D' sets came first because the initial sets might have to go somewhere to have the code logged to check for exploits etc?\n. It's the accuracy vs actuality argument, we used to have it as a screen\nbecause there was no alternative. If someone was willing to hook it up in\nrendlay it would be faster, but the caching of graphic states might be\nequally bad.\n. I'd also say that if we ever do proper dot matrix alphas (something I've been toying with for ages for SC4), those would be equally bad. I wonder if the best compromise is to set up a full 'row' as a mini screen, so you're sending one 32-bit state as opposed to lots of 1-bit ones.\n. Almost certainly, it would be nice to think MAME could cope with it per pixel, but clearly that doesn't work in terms of speed. My concern is how much texture memory would be used on a whole screen, given that allocations would be made for every possible combination of active elements (even if they aren't generated until called, last time I checked space was assigned for them)\n. \n",
    "Tarnyko": "Hi folks,\nThis patch is necessary to build the SDL OSD without OpenGL support (NO_OPENGL=1).\n. ",
    "plgDavid": "Forgot comment, this of course adds the driver to MESS\n. ",
    "wallyweek": "Done. Please see new request #107. Thank you!\n. ",
    "trap15": "Hello? Could I at least get a comment about my pull request? If you're not going to accept it, please just close it and tell me why, don't leave it hanging around.\n. The set 1 at the time of this push request was not that one. Look at the combined program binaries. Here's a breakdown I did in IRC of the changes and why I think they're not official:\n the vector table has been changed to make bus error and address error go somewhere other than a hard lock\n the new destination is a newly inserted RTE that's located at the first NOP in the code\n that would've affected nothing\n there's a change in a jumptable at $23A28 that pushes the destination PC into the original function, but not into a different one\n which would make no sense from an official build\n and at $23DF2 a large chunk of code has been rewritten, with a bunch of NOPs added for padding\n I don't think these seem very likely to have been official modifications\n and there are various changes around that change things like \"ADDI $20, D0\" to \"MOVE $7F, D0\"\nIf I removed the wrong one, I'll revise my pull request, but I'm quite sure I got the right one. \"set 1\" was from a few years ago and was somehow promoted to \"set 1\" instead of the other set, despite it being pretty obviously hacked.\n. No, that's correct. \"fg1-001.u3\" matches the naming scheme of the other files in the set anyways. daioha was the old daioh, which got renamed to daioha when the current \"set 1\" was added and promoted to set 1. Check the second and 3rd 32bit value in the combined ROM, if they're $400 that's correct, if it's $A10 that's wrong. I'm pretty certain I deleted the one with $A10.\n. Yeah, shortly after addition it was promoted to parent set. If you'd like to do a full ROM rename and keep the current \"set 1\" as \"bootleg?\" or \"hack?\" or just anything but the parent set, I'd be willing to compromise to that end.\n. I've re-added the questionable set as 'daioh1' to try to help avoid confusing it with the 'daioha' set.\n. Here are pictures of the PCB courtesy of CoolMod. http://daifukkat.su/files/daiohloc_pics.7z\nAs you can see, the PCB does not work :) He removed the ROMs for dumping, but everything is indeed EPROMs.\n. Brian took care of it, closing.\n. I'd like to put it in two different fields, so something like:\nGAME( 1992, wwmarine, 0, segac2, wwmarine, segac2_state, bloxeedc, ROT0, \"Sega\", \"Waku Waku Marine\", \"\u308f\u304f\u308f\u304f\u30de\u30ea\u30f3\", 0 )\nOr for fields where they're the same, maybe something like \nGAME( 1992, wwmarine, 0, segac2, wwmarine, segac2_state, bloxeedc, ROT0, \"Sega\", \"Waku Waku Marine\", \"\", 0 )\n. Could use compound literals?\nGAME_ADD((GameInfo){\n  .name=\"\u308f\u304f\u308f\u304f\u30de\u30ea\u30f3\"\n  .name_romanized=\"Waku Waku Marine\",\n  .year=1992,\n  [etc...]\n})\nIn which case defaults end up being 0/NULL. More readable than XML, and keeps it in the driver.\n. ",
    "0-wiz-0": "One could make this more fine-grained and link the executables only against the respective libraries they need, but this would have been a much bigger change to the main makefile. Let me know if that would be preferred.\n. Really lots of missing symbols in the linking steps, e.g. for deflate, crc32, flac*, ...\nwhen building the 0.158 release. Has it been fixed since?\n. This was already fixed by the previous pull request 122.\nThanks for clearing this up.\n. Sure, I can do that. But it probably still should have the same logic, Linux is the odd one out here.\nOn the other hand, I expected that you wouldn't want to diverge from upstream, and that's the diff that was applied there.\n. When you define XOPEN_SOURCE on NetBSD (and Solaris), you get _exactly what's in that namespace, nothing else.\nContrast that to Linux, which adds what's in that namespace to the other available functions.\nYou can get the NetBSD-6.1.5 headers at\nftp://ftp.netbsd.org/pub/NetBSD/NetBSD-6.1.5/amd64/binary/sets/comp.tgz\n. I think you misunderstood.\nTake a look at this:\n```\nROM_START( pangb )\n        ROM_REGION( 20x50000, \"maincpu\", 0 )\n        ROM_LOAD( \"pang_04.bin\",  0x50000, 0x08000, CRC(f68f88a5) SHA1(6f57891d399a46d8d5a531771129552ed420d10a) )   / Decrypted opcode + data /\n        ROM_CONTINUE(             0x00000, 0x08000 )\n        ROM_LOAD( \"pang_02.bin\",  0x60000, 0x20000, CRC(3f15bb61) SHA1(4f74ee25f32a201482840158b4d4c7aca1cda684) )   / Decrypted op codes /\n        ROM_LOAD( \"pang_03.bin\",  0x10000, 0x20000, CRC(0c8477ae) SHA1(a31a8c00407dfc3017d56e29fac6114b73248030) )   / Decrypted data */\n    ROM_REGION( 0x100000, \"gfx1\", ROMREGION_ERASEFF )\n    ROM_LOAD( \"bb9.bin\",      0x000000, 0x20000, CRC(3a5883f5) SHA1(a8a33071e10f5992e80afdb782c334829f9ae27f) ) /* chars */\n    ROM_LOAD( \"bb3.bin\",      0x020000, 0x20000, CRC(79a8ed08) SHA1(c1e43889e29b80c7fe2c09b11eecde24450a1ff5) )\n    /* 40000-7ffff empty */\n    ROM_LOAD( \"bb11.bin\",     0x080000, 0x20000, CRC(166a16ae) SHA1(7f907c78b7ac8c99e3d79761a6ae689c77e3a1f5) )\n    ROM_LOAD( \"bb5.bin\",      0x0a0000, 0x20000, CRC(2fb3db6c) SHA1(328814d28569fec763975a8ae4c2767517a680af) )\n    /* c0000-fffff empty */\n\n    ROM_REGION( 0x040000, \"gfx2\", 0 )\n    ROM_LOAD( \"bb10.bin\",     0x000000, 0x20000, CRC(fdba4f6e) SHA1(9a2412a97682bbd25b8942520a0c02616bd59353) ) /* sprites */\n    ROM_LOAD( \"bb9.bin\",      0x020000, 0x20000, CRC(39f47a63) SHA1(05675ad45909a7d723acaf4d53b4e588d4e048b9) )\n\n    ROM_REGION( 0x80000, \"oki\", 0 ) /* OKIM */\n    ROM_LOAD( \"bb1.bin\",      0x00000, 0x20000, CRC(c52e5b8e) SHA1(933b954bfdd2d67e28b032ffabde192531249c1f) )\n\nROM_END\n```\nand you see that there are two bb9.bin with different checksums in the same romset.\nOr am I misunderstanding? Please explain.\n. There is no change necessary for BGFX; the patch for that is pulled from upstream.\nThe patches to BX have been submitted as https://github.com/bkaradzic/bx/pull/61\n. I see a \"Travis CI build failed\" but when I click on Details I get \"This is not an active repository\". Can someone please point out what the problem is? Thanks.\n. Done: https://github.com/bkaradzic/bgfx/pull/571\n. This patch added two disks with the same checksum but different names:\n```\ngrep 5505a0105fa9abe32b3240bac1144555b22740ee fmtowns_cd.xml\n\n <disk name=\"Blandia Plus\" sha1=\"5505a0105fa9abe32b3240bac1144555b22740ee\"\n```\n. Hm, take one of the four then, please (scripts/src/ is your code, right?) and I'll try to feed back the others upstream.\n. Ok, filed upstream pull requests for all of them, please apply when you can. Thanks.\n. f311f5e818f539aa854b2f78b467a883c46b1fee fixed this.\n. Fixed in https://github.com/mamedev/mame/commit/a74e7b041e5d3231c10b244894e298aba710689d, thanks!\n. Thanks, fixed and another patch added to pull request.\n. Both elfish and elfishlt want to have a disk called \"elfish.chd\" in the file system, but with different checksums. That won't work, please rename one of them.\n. Please rename this one to \"[os] towns system software v1.1 l30\" to fix the naming conflict with tss1120. Thanks! \n. ",
    "MoochMcGee": "Oh, shit, whoops. But how else could we emulate the different rounding\nmodes?\nOn Sun, Feb 22, 2015 at 10:25 AM, S.Z. notifications@github.com wrote:\n\nThis patch seems to make assumptions about the host processor running the\nemulator.\nIf some exception flags were previously set not beacuse of the current sse\ninstruction, but because of something else inside the emulator, those flags\nwill be set even in the emulated processor where they souldn't be.\nThen there is the call to fesetround() that will effect all calculations,\neven those done outside the processor core. Consider also a system with two\nemulated processors with different rounding modes.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/125#issuecomment-75443291.\n. No it doesn't. Read it again.\n. This has been confirmed. Harmony of Dissonance's raster effects work just fine on my build.\n. This interface is incomplete for the purposes of at586, as there are devices required by at586 which need to be able to hook up custom registers in the configuration space. The new interface can't do this as far as I can tell.\n. @cuavas My previous PR didn't fully fix the problem. This one does.\n. @DopefishJustin That core uses a bunch of weird time-skip bullshit to kludge the timings into working right, according to byuu.\n\nMy suggestion is importing the PCI code from PCem!\n. @rb6502 Okay, what about the ATAPI code from PCem? After all, it does work a lot better than MAME's. :^)\n. @happppp Well, the PC drivers don't support modernized PCI. If this were fixed, I'd be happy to port my code over. @cuavas The s3virge does the same thing. It was only ever sold as PCI, but yet it's implemented as an ISA card in MAME.\n. You know I don't have the skills for that.\nOn Mon, May 9, 2016 at 2:28 PM, MooglyGuy notifications@github.com wrote:\n\nIn that case, you should concentrate on modernizing the PC drivers first.\nJust because something was done wrong in MAME before doesn't mean that they\nshould continue to be done wrong going forward.\nJust to inform the rest of the developers, MoochMcGee is an alternate\nnickname for Alegend45.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/857#issuecomment-217964201\n. I mean, even then, I tried that line of code there. While it DID compile, it segfaulted immediately upon startup. :/. I'm guessing it's undefined because it could hit line 289.. @smf- I mean, the cylinder counts were only 16 bits in the class itself anyway. And the abs was already there before this.. That's weird... I could've SWORN I needed both of those changes to get MS-DOS's Setup working. o.o. ah good point, thanks!. \n",
    "couriersud": "Instead of a \"#ifdef linux\" a \"#if !defined(SDLMAME_NETBSD)\" would be safer. \nSDLMAME_NETBSD is defined in sdlprefix.h along the following lines\nelif defined(FreeBSD)\ndefine SDLMAME_FREEBSD 1\nelif defined(DragonFly)\ndefine SDLMAME_DRAGONFLY 1\nelif defined(OpenBSD)\ndefine SDLMAME_OPENBSD 1\nelif defined(NetBSD)\ndefine SDLMAME_NETBSD 1\n. I assume you tested the patch on linux, windows and osx? The different OS provide different levels of information about depth. So while ignored on one OS it might be used on another.\nConcerning the mode switch patch. Mode switching is an issue in SDL and again the behaviour depends on the OS. What \"fixes\" an issue on one OS might cause significant grief on another.\n. Instead of dropping depth, shouldn't we just fix the parsing of the\nparameters?\nOn 06/14/2015 03:02 AM, R. Belmont wrote:\n\nNobody should be using -resolution on an LCD monitor for what I hope\nare obvious reasons, so if he's running on a CRT I'm gonna apply this.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/209#issuecomment-111766375.\n\n\nAndr\u00e9 Hufschmidt\nBerberitzenstr. 54\n80935 M\u00fcnchen\nM: +49 170 4570195\n. I'd prefer the additional code :-)\nIt should only be a couple of lines.\nx\nxx\nxx@\nx@\n. Hi thanks a lot for the fix. In the meantime I have fixed the warning in the source with pragmas.\nIf this causes issues with other compilers, I'll apply your patch.\nTherefore I still leave this open.\n. I will have a deeper look later this week if I don't track the issue in\nthe next 30 minutes.\nThanks for spotting this.\nOn 09/15/2015 06:05 PM, Scott Stone wrote:\n\n-listmedia/slot/device/software/xml (at least)\n-- memory leak warning --\nError message spam (nofree) pointing at:\n\"../../../../../src/emu/netlist/plib/plists.h\"\n\"../../../../../src/emu/netlist/plib/pstring.c\"\nAs show in http://pastebin.com/YRTd47zL\nAppears to have broken with this submit on August 27, 2015\nbce5387\nhttps://github.com/mamedev/mame/commit/bce5387096ff117dac9bc2409d77fb1ad77528c1\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/325.\n. Fixed\n. Just apply a low-pass filter of about 60Hz to 120Hz. That's what our\neyes effectively do:\n\nhttp://www.nature.com/nature/journal/v299/n5883/abs/299553a0.html\nhttps://en.wikipedia.org/wiki/Flicker_fusion_threshold\nFor incandescent lamps there are spice models:\nhttps://groups.google.com/forum/#!topic/sci.electronics.cad/I9QfewHAaSI\nThis one has nice graphs:\nwww.ee.bgu.ac.il/~pel/pdf-files/conf104.pdf\nHowever, these models are pretty complicated. The following link\ndiscusses a simpler model using two resistors and one capacitor.\nhttp://www.candlepowerforums.com/vb/showthread.php?117367-models-for-incandescent-bulbs\nThis could easily be done using netlist.Alternatively, one could model\nthe differential equations given e.g. in conf104.pdf in a time-stepping\napproach.\nOn 03/19/2016 09:01 AM, hap wrote:\n\nYes you are mostly right, I think in most cases (leds, not lamps!) the\ncapacitance is very small. But that means in practice we'd still need\nto filter from x KHz to typical 60Hz screen. I refuse to get rid of\nthe workaround in the meantime that would make all handheld drivers\nunusable.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/729#issuecomment-198663149\n. > How would that translate for a 12v 0.1W bulb being driven by 48v AC but multiplexed to give 12V rms voltage, rather than 12v DC.\n\nIf you model the bulb with netlist: perfectly.\n. It should be fixed now. SDL2 includes X library headers in it's headers.\nThat really hurts.\nOn 04/09/2016 10:17 PM, balr0g wrote:\n\n@popey https://github.com/popey this is a known issue. We are\nworking on resolving it within the next several hours.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/800#issuecomment-207848005\n\n\nEDIT [MooglyGuy, 5 December 2016, 18:15 GMT+01]: Removed name/address/tel# that were below this line, on the assumption that couriersud prefers to keep this information private.. ",
    "balr0g": "What other stuff is not provided by NetBSD if _XOPEN_SOURCE is defined to 600?\nIt appears that strtoll() is a C++11/C99 feature and should not be tied to _XOPEN_SOURCE at all. I don't have a full (installed) set of NetBSD headers handy, though, so it's not easy for me to check right now (if you can point me to one online I'd appreciate it).\n. I don't know if I would call \"publically\" legitimate. Most authoritative sources consider it at least nonstandard, and many consider it wrong.\n\"Third Millenium\" is correct as-is \u2014\u00a0see http://apple2info.net/index.php?title=The_Arcade_Board .\nAs for variable renames: I'm not sure how the developers other than @cuavas feel about this, but personally it really irks me if I'm working with code with such misspellings. And variable names change pretty-frequently as-is. Personally I'd rather have correctly spelled variable names over the temporary convenience of not having to refresh autocomplete data.\n. I'm not sure if there are particular guidelines but generally MAME code is periodically run through srcclean (one of the tools built with make TOOLS=1), which cleans up spaces/tabs and such.\nIt probably would be worthwhile to write up a document describing what srcclean does.\n. @cuavas: IMHO the very basic, most important things about source code formatting (such as that) should be in the top-level readme, in a section labeled \"Contributing\". I'm not sure what they are or I'd add them.\n@felipesanches: other than it being rather ugly (at least to me), I'm not sure. That missing mode probably should be implemented, but I'll let @cuavas answer your question.\n. @cuavas has updated the README to mention indentation standards (which should make it easier for contributors). Generally it's best to not muck too much with indentation; I usually do a git diff after making changes to ensure this is the case.\nAs for this? I'd just do the register enumeration and that's all.\n. Thanks! Nice work.\n. You can blame srcclean for making it fall out of sync. Anyway I'll handle this.\n. Merged. This one was again due to srcclean messing up whitespace.\n. @nitrofurano: instead of adding a comment to the code, which doesn't help anyone, you'd be better off posting at http://forums.bannister.org/ and explaining your reasoning for this and your test code.\nIf you have an actual code change to improve things (and can demonstrate that this is an improvement that makes emulation more correct \u2014 e.g. comparing to YouTube videos or photos of actual hardware output), then a pull request with the code changes is appropriate.\n. In addition we don't add copyright-holders tags for dipswitch or port name additions. You would still be credited in the whatsnew, though.\n. @RJRetro, I'm not sure why @p1pkin thought that was necessary. I was just trying to be informative regarding our practices, and hopefully I was clear.\nNaming improvements are useful for documentation purposes. However, I'll let the others decide on this. @mamehaze may be on the right track, but I'm not sufficiently familiar with current practices in this particular situation to really say.\n. Well, I'm of the opinion that more information is better, but noting in every instance whether or not they are labeled in the cab would likely bloat the source code...\n. @RJRetro, your mistake is understandable, as we don't list guidelines for this (yet).\n. Can you pull-request the BGFX fixes to https://github.com/bkaradzic/bgfx ?\n. @richard42: It seems the linker has been running out of memory on the Travis and AppVeyor services, probably due to the large binary size. I'm not sure if there's a good solution.\n. @mamehaze I agree; this one needs to be fixed up to work with the current MAME source though.\n. @aaronsgiles: https://github.com/mamedev/mame/blob/master/src/emu/sound/upd7759.c#L103 -- are you sure? I'm not sure who wrote this because this is pre-SVN, but it seems to imply that slave mode likely involves FIFOs. If this is not correct, it should be removed from the source file, as it misleads contributors into doing things incorrectly.\n. Probably a second-sourced MOS 6507 (smaller-package version of the 6502 also used in the Atari 2600)?\n. We had someone test this on hardware and the behavior @harbaum describes is observed.\n. Wouldn't this make more sense in the XML metadata...?\n. My only issue with SCAD is that it's difficult to export it from a parametric CAD program (e.g. Maya or Solidworks). It's a great source format, but I'm afraid not everyone will want to write out designs in OpenSCAD. Unfortunately it doesn't seem like OpenSCAD can export to COLLADA or WaveFront OBJ formats... so I'm not sure what's best here.\n. Let's also not forget pinball, and the concerns with simulating those. (I don't consider the current solutions all that viable in the long-term.)\n. Any reason you must use the reentrant version of ptsname? OS X does have plain old non-reentrant ptsname.\n. @fulivi: It looks like <stdlib.h> needs to be included on Mac OS X because that's where ptsname is defined (apparently that's where it's defined on Linux too, based on the man pages, so it probably would be a good idea to include <stdlib.h> for Linux as well).\n. This specific concern was the reasoning behind GPLv2-or-later, as opposed to GPLv2-only.\n. @osresearch I believe USB ACM devices require an .inf on Windows 8.1 and earlier \u2014\u00a0see https://msdn.microsoft.com/en-us/library/windows/hardware/ff538820. This is annoying, as an .inf-only driver needs to be signed on Windows 8.1. I'm not sure if there's any reasonable workaround here (other than avoiding that version of Windows). However, that's a fairly minor issue in the grand scheme of things. Just worth pointing out.\n. @MASHinfo's intent seems to be to speed things up, as strlen() is O(n) since it has to iterate over the string and find the null terminator. Unfortunately, the returned string could exist but be empty, in which case the code would print out tags like <device_ref name=\"\"/> (with an empty name entry), which we don't want.\nAs an empty C string will have a null as its first character, it should be faster (but less obvious) to do device->shortname()[0]!='\\0', and just as safe as using strlen().\n@MASHinfo, can you test that, and see if it also provides such a performance improvement?\n. In that case, can you update this PR or open a new one?\n. Rebased to remove the incorrect commit and merged in https://github.com/mamedev/mame/commit/e9648efd493069fd32a92febb3bc9a7d001ec0b9.\n. What's a bit confusing here is that the original poster seems to be indicating a potential regression? I'm not entirely certain......\n. @iori3000:\nCan you repeat/reword the problem you have in detail? It seems like with all the churn it got lost here.\n. This has been a problem on Travis CI (and is a reason why we're not using it at this time). Though link time has been a bigger issue there.\n. @dankan1890 Nice, they support cache too. I'll look into setting it up.\n. @rb6502 it looks like most of those patches seem pretty helpful as they improve minor build system problems. The compiler-support patches seem to be mainly an implementation of make_unique so that it can be used on pre-C++14 compilers. Of course, this will not work in the future when more C++14 features are added...\n. @u-man74 that's more of an issue on the frontend :-/ Don't forget that the lines between \"MAME\" and \"MESS\" machines are often arbitrary and blurred \u2014 e.g. there are arcade machines that use cartridges and whatnot.\nIf there's metadata we are lacking that would help frontends support machines better, it would be useful to know about it, but general machine-type classifications are arbitrary and problematic in the long term.\n. As @rb6502 says, this is more likely an issue on the side of the frontend developers not being interested in putting in the extra effort to properly support things they don't consider \"arcade\" \u2014\u00a0an arbitrary distinction.\n. @Agijnnuwy, what browser are you using? Does using a different browser make a difference?\n. Can you try QT_SELECT=5 make REGENIE=1, or make clean first?\n. @BenjaminSiskoo perhaps it would be better to start with a copy of the Belgian French translation and merge in the changes that are necessary for French.\n. @g4jc: The fact that the name is trademarked is not what prevents Firefox from being branded that way on Debian. Rather, it is the fact that the requirements for use of the trademarked name require use of the official Firefox artwork, which is not under a free and open source copyright license.\nThe second link you reference is irrelevant as the MAME project is not part of the GNU organization.\nPlease see https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=354622#25 and the rest of that thread for details regarding the Firefox/Iceweasel issue.\nWe are still in the process of creating an official trademark policy for derivative builds. Trademarks are an entirely separate legal issue than copyrights (except when they are linked by policy, as in the Firefox case).\n. In that case I will close this issue. If there are concerns with trademarks or licensing, feel free to contact us and we will work things out.\n. @sl1pkn07  The Python issue is hopefully fixed as of https://github.com/mamedev/mame/commit/9fbc9397817a3da58d7abf435e08a9573a9fc643.\n. @jmallach that's referring to the contents of the referenced program ROMs for beautyb which are not distributed with MAME.\nShould the comment be changed to state:\nThe below-referenced Program Roms contain...?\n. @sum2012 The Python issue is hopefully fixed in https://github.com/mamedev/mame/commit/9fbc9397817a3da58d7abf435e08a9573a9fc643 but I haven't tested on Windows.\n. As of 0.171 the changes to core are very minor (though this one https://github.com/Robbbert/mameui/commit/fe46d1cf323728f004826d44d064ec0ea3d33a16 is alarming because it means allocated memory is not initialized). I think MAMEUI should avoid any core changes, unless they are absolutely necessary, and bugs revealed by PRs like this one should be fixed rather than patched over.\n. @popey this is a known issue. We are working on resolving it within the next several hours.\n. @felipesanches I highly recommend splitting this into two separate branches / pull requests. Personally I prefer keeping things atomic since that makes tracking down problems much easier.\n. diff that was requested to make the changes to debugcpu.cpp clearer: https://gist.github.com/balr0g/7c26b6dff49ff1261791a4b6cac87bf9\n. @stevenc99, thanks! Could you PR the bx changes upstream?\n. @Risugami could you document this in code comments?\n. http://www.arcade-museum.com/manuals-videogames/C/Cruisn%20USA%20Single%20Sitdown.pdf seems to have a fairly detailed schematic of the hardware.\n. @ajrhacker software_name() appears to return an empty C-string in my testing using the MAME builtin UI (using gridlee). This means the code inside the if-statement will be executed. Probably a bug?\nhttps://github.com/mamedev/mame/pull/747 seems like it might have been a band-aid fix for this problem?\n. ",
    "RobertoFresca": "..\"preserve these decades of video-game history\"...\n Referent to \"these\" decades. Not a huge or infinite range. The text seems accurate.\n...and BTW, you still use uppercase with hexa offsets. It's ok in the comments, but should be lowercase in the code. \n. Is not your first pull request... It's just a ROM LOAD. You should know that the offsets must be lower case to be consistent with the project... \n. Thanks a lot for all your contribs... :) \n. Where is this dump coming from?...\nCould we have the bipolar PROM dumped?...\n. ",
    "hiroshica": "Because that is adapted FM writing begins when the address value is entered\n, it is rewritten by the value of dipSwitch.\nI tried to appropriately translate translator . Will communicate meaning ?\n2015-02-19 19:13 GMT+09:00 Olivier Galibert notifications@github.com:\n\nHi,\nYour code is a little strange, the write to de00 specifically. Could you\nexplain it?\nBest,\nOG.\nOn Thu, Feb 19, 2015 at 8:55 AM, Hiromitsu Shioya \nnotifications@github.com\nwrote:\n\nsound code == sega mark3.\nextend emu. YM2413.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/137\nCommit Summary\n- SEGA:System-E::fantzn2 extend YM2413.\nFile Changes\n- M src/mame/drivers/segae.c\n  https://github.com/mamedev/mame/pull/137/files#diff-0 (34)\nPatch Links:\n- https://github.com/mamedev/mame/pull/137.patch\n- https://github.com/mamedev/mame/pull/137.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/137.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/137#issuecomment-75027238.\n\n\n\n\u3057\u304a\u3061:hiroshica\n                                          hiroshica@gmail.com\n. Originally to mastersystem of Japan have been FM is equipped with\nI tried to hack to hear the rich sound in the game because the sound code\nhas been directly applied to SystemE\n2015-02-19 20:34 GMT+09:00 Olivier Galibert notifications@github.com:\n\nHi,\nThe translator is sufficient.\nYou say, if I understand correctly, that writing 1 to de00 makes the game\nuse the chip. Does that mean it never uses it normally?\nBest,\nOG.\nOn Thu, Feb 19, 2015 at 11:42 AM, Hiromitsu Shioya <\nnotifications@github.com\n\nwrote:\nBecause that is adapted FM writing begins when the address value is\nentered\n, it is rewritten by the value of dipSwitch.\nI tried to appropriately translate translator . Will communicate meaning\n?\n2015-02-19 19:13 GMT+09:00 Olivier Galibert notifications@github.com:\n\nHi,\nYour code is a little strange, the write to de00 specifically. Could\nyou\nexplain it?\nBest,\nOG.\nOn Thu, Feb 19, 2015 at 8:55 AM, Hiromitsu Shioya \nnotifications@github.com\nwrote:\n\nsound code == sega mark3.\nextend emu. YM2413.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/137\nCommit Summary\n- SEGA:System-E::fantzn2 extend YM2413.\nFile Changes\n- M src/mame/drivers/segae.c\n  https://github.com/mamedev/mame/pull/137/files#diff-0 (34)\nPatch Links:\n- https://github.com/mamedev/mame/pull/137.patch\n- https://github.com/mamedev/mame/pull/137.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/137.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/137#issuecomment-75027238.\n\n\n\n\u3057\u304a\u3061:hiroshica\nhiroshica@gmail.com\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/137#issuecomment-75031755.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/137#issuecomment-75037792.\n\n\n\n\u3057\u304a\u3061:hiroshica\n                                          hiroshica@gmail.com\n. gamecode of mastersystem is I've been notified that the FM-hard is\ninstalled in de00 to but System-E is\nOriginally it will not be notified because nothing is resting FM-hard.\n2015-02-19 20:34 GMT+09:00 Olivier Galibert notifications@github.com:\n\nHi,\nThe translator is sufficient.\nYou say, if I understand correctly, that writing 1 to de00 makes the game\nuse the chip. Does that mean it never uses it normally?\nBest,\nOG.\nOn Thu, Feb 19, 2015 at 11:42 AM, Hiromitsu Shioya <\nnotifications@github.com\n\nwrote:\nBecause that is adapted FM writing begins when the address value is\nentered\n, it is rewritten by the value of dipSwitch.\nI tried to appropriately translate translator . Will communicate meaning\n?\n2015-02-19 19:13 GMT+09:00 Olivier Galibert notifications@github.com:\n\nHi,\nYour code is a little strange, the write to de00 specifically. Could\nyou\nexplain it?\nBest,\nOG.\nOn Thu, Feb 19, 2015 at 8:55 AM, Hiromitsu Shioya \nnotifications@github.com\nwrote:\n\nsound code == sega mark3.\nextend emu. YM2413.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/137\nCommit Summary\n- SEGA:System-E::fantzn2 extend YM2413.\nFile Changes\n- M src/mame/drivers/segae.c\n  https://github.com/mamedev/mame/pull/137/files#diff-0 (34)\nPatch Links:\n- https://github.com/mamedev/mame/pull/137.patch\n- https://github.com/mamedev/mame/pull/137.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/137.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/137#issuecomment-75027238.\n\n\n\n\u3057\u304a\u3061:hiroshica\nhiroshica@gmail.com\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/137#issuecomment-75031755.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/137#issuecomment-75037792.\n\n\n\n\u3057\u304a\u3061:hiroshica\n                                          hiroshica@gmail.com\n. ",
    "andrew-gardner": "Thanks for the pointer, Reed.  I've merged as well as updated the bytes variable name.\n. A 3d MAME artwork system needs a number of things, but the data for each of these things should be generic enough to be loaded in as many editor programs as possible.  So, while OpenSCAD is a fine way to generate some of the data, the SCAD format isn't very portable.  Instead it's the results of the SCAD file that are interesting.\nMAME needs:\n- A way to represent surfaces in 3d - traditionally this is polygons, and unless someone would push for subdivision surfaces, there really isn't much of a reason to do differently.\n- A way to parameterize the surface of these objects - whether it be UVs or PTex'es, MAME will need to texture the objects (and potentially do other things with the parameterization like normal mapping).\n- A way to address each object individually - likely by name / tag.  This means that a single OBJ file for an entire artwork definition isn't sufficient since OBJ files don't really allow multiple, named objects in a single file.\n- A way to define an animation for each object.  This can be done on a per-vertex basis or rigidly.  It could be done with one of many curve types or just by storing keyframes.\n- Lighting information - note that there really is no standard file format for this.\n- Other stuff that hasn't been imagined yet (physics parameters?  smell? taste? shader types?).\nSince each game artwork is a collection of all of this information, a file format that can store collections of things is essential.  A common, effective way to do this is by using a tagged bbucket-style file format such as alembic (http://alembic.io/ - supported by Autodesk) where, like XML data files, any type of data you can imagine can be stuffed into the file and tagged appropriately.  Unfortunately, insuring the tags and data contained within are identical across different authoring programs is challenging.  Collada and FBX (Filmbox) are both attempts at files that can contain everything you could dream of, but really, are quite poor at adding things that the creators of the file format didn't already come up with - not to mention the version hell each have gone through.\nArchives containing all the data in single a file (ZIP), using traditional file formats, enhanced by our own meta information are likely the way to go to be the most general.  This way, any program that models can modify the meshes and parameterizations (likely OBJ files), any program that animates can create the animations, and whatever else is needed can be done by whatever program can do it.\nThis is, of course, open to further discussion - I'm just putting out the things I know to work well in situations like this.\n. As far as #1 goes, I'm a proponent of creating as few surprises as possible\nin a program's execution.  \"Explicit rather than implicit.\"\nA surprise in the case of #1 would be a person expecting a wav file to be\npresent, typing in a cassette name, misstyping it just a bit, and MAME\nhappily continuing to create its own wav file with that misstyped name\nwithout mentioning it to the user.  It's possible the user would use the\nmachine for a long time before s/he realized their mistake.  This would be\na surprise, and potentially an unpleasant one.  If there were an explicit\nflag that said something like -createtape, then there would be no surprises.\nApologies Fabio, but this is just something I've found over the years to be\na useful paradigm to follow.\n/Andrew\nOn Tue, Aug 23, 2016 at 1:26 AM, npwoods notifications@github.com wrote:\n\nI feel that there are two distinct issues here:\n1. Whether it is desirable to automatically create images from the command\nline when an image does not exist\n2. Whether load() really was load_and_create()\nI'm pretty much neutral on #1 https://github.com/mamedev/mame/pull/1,\nbut I have a very strong opinion on #2\nhttps://github.com/mamedev/mame/pull/2. Whether or not it was called\nload() or load_and_create(), the behavior in practice was a pretty bad\ndesign pattern. While the cassette behavior was \"load and create\", it was\ndone extremely inconsistently across MAME. It shouldn't be up to devices to\ndo something extremely arbitrary like checking checking to see if a file is\nzero length.\nWhat I'm trying to do is clean things up so that device code doesn't have\nto do sloppy things. You can see this in pull request 1290; the cassette\ncode did something very sloppy (and undefined according to the C++\nstandard) when softlists were involved. Better to fix the problem in the\ncore than leave it up to individual devices; I'm perfectly happy to clean\nup the fallout when the inevitable regressions happen.\nAgain while I'm neutral on #1 https://github.com/mamedev/mame/pull/1,\nif we do want the ability to create images from the command line, it really\nneeds to be done in a more consistent way. It would be quite easy to do so\nin fact; just detect file not found in image.cpp and invoke create()\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1278#issuecomment-241581757, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AH-_SH59DoGawwpoSyQRRz_oeT09bpanks5qijAQgaJpZM4JpNg7\n.\n. \n",
    "system11b": "I've sent them to TDU.\n. Hi, compiles now with the latest commit, one warning remains (used to be several):\nIn file included from ../../../../../src/emu/netlist/solver/nld_solver.c:37:0:\n../../../../../src/emu/netlist/solver/nld_ms_gmres.h: In member function \u2018int netlist::devices::matrix_solver_GMRES_t::solve_ilu_gmres(double_, double_, unsigned int, unsigned int, double) [with unsigned int m_N = 1u; unsigned int _storage_N = 1u]\u2019:\n../../../../../src/emu/netlist/solver/nld_ms_gmres.h:390:5: warning: \u2018m_y$\u2019 may be used uninitialized in this function [-Wmaybe-uninitialized]\n     tmp -= m_ht[i][j] * m_y[j];\n     ^\n. That's exactly the combination I'm using - Fedora 22 GCC 5.1.1-4.\nEverything was perfect until some change just /after/ the audio support for Horizon was added, it was still clean the first time I saw that code in there, then about a day and a half before I posted this merge request it stopped compiling with a screen+ full of maybe-uninitialised errors.  As of the latest commits it's throwing one warning still but not stopping the build (which is surprising since I'm not using NOWERROR=1).\n. Seems fine now so I'll close this.\n. I found the MT bugs and they were pulled from youtube videos and other publically posted photos, in particular the one identifying the area on the left as correct was a mistake due to the way most screens crush the edges of many Konami games due to width, appearing to make them brighter and/or solid. \nThis is based on new screens taken with the monitor specifically adjusted to move the far left and right of the screen into clear view:\nRight:\nhttp://www.andysarcade.net/pix/DSC_8727.JPG\nLeft:\nhttp://www.andysarcade.net/pix/DSC_8726(1).JPG\nAs you can see the grid pattern before this pull request is drawing 8 pixels on the left which the PCB doesn't.\n. Fixed\n. Not there at all, unpopulated.  The Home Data ones which have half the bank blanked out have 8 way dips but half of them arent actually connected by tracks to anything.  The Nichibutsu based ones lack the banks entirely.\n. Should also add - I have the manuals and PCBs for everything edited recently.\n. The manual has them in this order, shouldn't we be matching that as far as possible?\n. That's why I didn't completely remove them.  Hardly anyone even cares about Mahjong games - I think it's misleading to see a whole bunch of 'unknown' leading people to believe there's probably functionality behind them when in fact in most cases there isn't.  Otona is an interesting example however where the manual says bank B isn't used, yet there's a test function on it.  Nobody with the PCB can access that though because the dip switch isn't actually fitted to the PCB - arguably that should be removed as it was provably never available to begin with in the product as sold to operators.\n. Does the code make it clear off/off = easiest and on/on = hardest on those difficulty dips?  My PCB has them both turned off but it felt like the game got easier when I started messing around with them.  Of course it could just be luck since hands are \"random\".\n. Ok thanks, I'll do some more extensive play testing at some point in the future then to see if I can confirm either way.  Hopefully this one doesn't have a perpetual rank carried between credits like some of them seem to.\n. I believe the set in MAME came from a bootleg, they're actually clones aside from minor changes in the sound area, some start the numbering at 20, some are the same, some have no numbers etc.\nHere are some originals:\nWorld:\nhttp://v2.pxl.se/i/0sZ.jpg\nJapan:\nhttp://blog.system11.org/wp-content/uploads/2016/06/20160606_mutant_night.jpg\nAn example bootleg (this set matches Japan dump):\nhttp://blog.system11.org/wp-content/uploads/2016/03/mutant_night_bl_fix1.jpg\nThere are at least 3 different bootleg types out there.\n. That particular bootleg pictured did, I can't speak for the others.  In theory I should have added the Artic bootleg set as another driver entry, but it's not really of any value - same code, only difference would be removing one of the sound chips as that bootleg skipped one of them:\nhttp://blog.system11.org/?p=1917\nOwner of the world rev board dumped all the chips and only 13.b10 differed from the MAME set in terms of checksums. \n. It's going to be a factory error, either a mistake or they ran out of the right speed.  It's fairly common with Korean games, there's little value in trying to preserve factory batch/isolated defects because it's so varied and commonplace that you'll fill the code with rubbish.  For example, there are 3 revisions of Tourvision board each with a slightly different video output due to the types of transistor used in each batch, which can't be correlated with BIOS revision even.  \nIt's immediately obvious which one the wrong one is when playing the samples back, even without comparing to other games on the same boardset (I have several of those too, all 4.096).\nI can add another driver entry (I assume that's the only way?) if you want, but I don't think it's a good idea.  Please review and let me know.\n. It looks like they did it because most other games in the genre by other companies use button one for accelerator which isn't a very good reason.\n. Correction to previous response - I was looking at the wrong PCB, submitting further pull request.\n. I'd already removed the no longer used kaguya2 inputs, just that series of games used them.  Other corrections made as requested.  Might be able to source some extra manuals via someone in Japan to correct the others, could take a while.\n. ",
    "Happy-yappH": "\n\n\n\n\n. I am aware of the video resolution issue.  Interlaced video still needs to be fully implemented, but needs some revision in the RDP as well.  I decided that although neither one correct, a double height output that showed the entire frame in the top half and a black bottom half was more useful for observation, than the previous single height output with half a frame in the top half and a black bottom half.  The best example I saw for this was Killer Instinct Gold.\nI did not test any of the aleck sets, but I am not observing the issue shown for the timing issues in sm64u.  The issue may need further clarification, but I do not think the VI interrupt timing is correctly implemented for all cases.  Also the SI DMA timing is a guess at the correct interval.  The set I was testing / debugging gave an indication that the SI DMA should take between 1/1000th to 3/1000th of a second to complete, so I chose the value in the middle (2/1000th).  If anyone has more detailed information for calculating the SI DMA delay, they are welcome to contribute it. \nI also realized that I should set the SI DMA busy flag while the delay timer is running.  However, the software I am familiar with does not bother to check the busy flag.  It waits for the SI interrupt instead of polling.  So it is possible the aleck sets may have an issue with this, but unlikely.  I can submit a fix for this soon.\n. Just realized that most of what I have listed as unknown is for secondary cache.  Any MIPS experts can feel free to assign better labels.\n. The recompiler is not a direct copy of the interpreter.  It keeps track of branch delay slots in its own way and does not appear to require any additional correction.\n. This may not be the most elegant solution.  If anyone can suggest a better way to adjust the cycle count, I would be willing to adopt and test it.\n. http://imgur.com/a/EoLOZ\nAlso need to review the debugger display for the registers and see if mips DRC can be changed.\n. Changes to mips3drc and possibly r3000 still need to be made.\n. ",
    "LuigiBlood": "You can see as the screenshots shows that 64DD games are playable (you need to convert them to another format first), you also need the IPL ROM (NOT IPL4ROM!).\n. IPL4ROM is Development 64DD\nIPL ROM is Retail 64DD\nAnd the IPL4ROM that works with text on emulators is a hacked version. The true IPL4ROM can be found in the N64 SDK (and requires some kind of retail IPL ROM).\n. I didn't know about slot devices. And about the mouse input... it was a pain to do. I don't know how to do that without globals. I only looked at the Amiga files and Apple files.\n. ",
    "endrift": "@rb6502 Having a bit of trouble reading the code you wrote? That's odd. It looks pretty clear to me that the only things that happen in that block of code are triggering the VBlank IRQ and the DMAs. Where did you get the number 224, btw? It seems pretty arbitrarily chosen. No documentation seems to refer to your magic constant, but plenty corroborates the change that was made here is the correct number. Seeing as it's what literally every other GBA emulator on the planet uses. After all, 160 corresponds with the beginning of VBlank, and 227 is the end of VBlank. How would a game prepare for the next frame if they only get an interrupt as it starts?\nThe huge comment seems to indicate you did a lot of shotgun debugging of random games instead of stepping back for a moment and realizing that VBlank IRQs are called that because they happen when VBlanks occur, instead of some arbitrary amount of time before they end.\n. The last line of vblank does not have the vblank flag set, for reasons that I'm unaware of. There's been some speculation that it has to do with preparing for effects that occur on scanline 0, but scanline 227 is technically present and occurs one scanline before 0. I think there was some discussion on byuu's old forums about why the flag might not be set, before he moved to the new forums. I'll probably have some trouble digging them up, if they still exist.\nRegardless of if scanline 227 does indeed count as part of vblank, the IRQ and DMAs occur at the beginning.\n. Where in Harmony of Dissonance are things breaking? I'd imagine that if that's broken with a value of 160, it'd be broken in every other emulator. That seems like a bit of a high profile game to have that be broken in, say, VBA, and no one noticed. The GBA is pretty complex; bugs can happen that are masked by incorrect fixes.\n. I tried four different versions of VBA, all of which use a value of 160, and I'm really not sure what looks like corruption here. I took a quick screen recording of the title sequence in 1.7.2, even before VBA-M, and it looks like on console to me: https://www.youtube.com/watch?v=kRqR1dyQeQQ\nIt sounds like you've got other bugs and that change just masked the breakage.\n. After reviewing how Harmony of Dissonance manages the raster effects, I think the problem at fault here is that you're doing HBlank DMAs even when outside of the visible region. The GBA only does HBlank DMAs when the scanline is between 0 and 159. I don't recall if GBATEK mentions this, but I don't think it does. Although you have to be careful about whether or not the HBlank is the back porch of the front porch of a scanline\u2014I can't quite remember offhand, so you might get off-by-one errors if you get it wrong.\n. For reference, I think hblank IRQs do still happen, but I don't recall if I've verified this on hardware.\n. ",
    "einstein95": "@endrift \"160 corresponds with the beginning of VBlank, and 227 is the end of VBlank\" Where did you get 227 from?\nhttp://problemkaputt.de/gbatek.htm#lcdiointerruptsandstatus \"V-Blank flag   (Read only) (1=VBlank) (set in line 160..226; not 227)\"\n. Oh damn it, forgot to validate.\n. I've edited the files as per your suggestions. As for the nes_* sublists, that's why I removed them (and are doing so for the snes_bspack list).\n. Hasn't been merged and some software lists are now out of date\n. This should be \"Ginkou Goutou - Machinegun Joe vs. the Mafia\" to match the other descriptions.\n. Ah, yes. Fixed that.. ",
    "MooglyGuy": "Unfortunately, Pauline Edition will never be added to MAME, because it is a home-made game that was never sold and never actually put on location to make money. It is, however, supported by HBMAME, which is a parallel project that is designed specifically for homemade games.\nIncidentally, there are a number of women who are active contributors to MAME and MESS, though it wouldn't be immediately obvious, as they don't tend to use their contributions as a way of furthering political axes to be ground. Anyone is welcome to contribute to the project regardless of gender, race, sexuality, religion, wealth, differing physical abilities, or any of the other things that are more often used to drive people apart rather than encourage a rich group of people from all walks of life, all focusing on the goal of the project, which is historical preservation.\nBy the way, I'm not sure where that 1984 figure came from. Maybe Sophie Wilson being the linchpin of the development of the ARM chipset in 1985 and later was a fluke?\n. I agree, HBMAME is great! It fills a major niche that isn't necessarily covered by MAME and MESS. MAME and MESS tend to focus on documented commercial releases, but MESS can also be considered HBMESS since the loading of software isn't coupled to definitions in code. By contrast, in MAME there's a 1:1 mapping between a ROM definition in code and and a ROM archive, so HBMAME ensures that people who have taken the time to make modifications to arcade games, or even their own original arcade games, don't see their work lost to the ether.\nAs an aside, if you'd like any suggestions of other family-friendly puzzle games that your nieces might enjoy, I'm a huge fan of 2D puzzle games, so I can offer plenty of suggestions! You might consider giving Star Sweep a try, there isn't a weekend that goes by when I don't spend an evening trying to get through the whole puzzle progression in one coin. :)\n. I am already laying the groundwork for a modern rendering system via BGFX. The first step is to re-create the D3D HLSL shader system in a data-driven way in BGFX. For this, I'm using my own custom JSON format. You can view its current form in the \"bgfx_shaders\" branch, I believe it's a public branch.\nFrom there it's pretty much trivial to add 3D model support to the BGFX renderer. OpenSCAD seems esoteric, but if it's the format used by a lot of existing models, it's a good choice for an initial format. I would hope there would be a more open format that we could leverage. I plan on making it easy for people to add code-side loaders for various formats.\nI have to be honest, I think the posted screenshots look pretty ugly without textures. It gets the point across, but it would need better integration with a proper artwork library system which I also intend to write.\n. However, don't let me stop anyone from writing a capable, extensible system.\n. This will be fixed in 0.172. I have just pushed a commit to the master git branch that change the controls from this:\nLeft/Right: Decrement/increment by internal step value\nCtrl+Left/Right: Decrement/increment by 10x internal step value\nShift+Left/Right: Decrement/increment by 0.1x internal step value\nTo this:\nLeft/Right: Decrement/increment by internal step value\nCtrl+Left/Right: Decrement/increment by 10x internal step value\nShift+Left/Right: Decrement/increment by 0.1x internal step value\nAlt+Left/Right: Set slider to minimum/maximum value\nShift+Alt+Left/Right: Decrement/increment by minimum value (sometimes smaller than 'step')\n. Please let me know if this resolves your issue. If it does, please close the issue or let me know so that I can close it. Thanks!\n. @iori3000 I believe you misunderstand what these options do.\n\"Sync to monitor refresh\" tells MAME to synchronize the refresh rate of the game in MAME to the refresh rate of your monitor.\nSince you have set your monitor to 118.3712Hz, and you are telling MAME to match that refresh rate, then of course it will run at twice the speed.\nIn any case, I see you said the following:\n\"Vsync meant option of mameui\"\nI do not believe we accept bug reports for MAMEUI. If you can reproduce this behavior in command-line MAME as shipped on this github page, we will happily look into it. Otherwise, we may have to close this issue as it is not related to the official build of MAME.\n. Have an interface class called persistence_parameter that has an update() function taking a floating-point analog on/off value (1.0 being fully on, 0.0 being fully off)and an attotime_t time stamp for that particular update. The interface class's implementation will be pure virtual.\nThen for each type of on-screen item representing a physical element that needs some form of persistence (a specific type of LED, a specific model of incandescent bulb), the specific persistence_parameter subclass's implementation will implement a smooth() function that updates an internal floating-point value that contains a smoothed (i.e., a low-pass-filtered) representation of the updatable parameter since the last call to smooth(). If the parameter was 1.0 the whole time since the last call to tick(), the output value is 1.0, and correspondingly for 0.0. For anything in-between, the ramp-up and ramp-down are handled as necessary by the device.\nThe end result of a given persistence_parameter subclass's smooth() function would then be used as an alpha value when rendering the UI element, or could be additionally used by a BGFX shader eventually.\n. I think you're over-stating how important such a feature is, but having settings saved per-resolution rather than per-machine sounds like it could be a useful feature to have. I'll investigate adding such a feature to the BGFX backend.\n. Seems like it would be easy enough to do. And yes, I like the idea of the scale factor being parametric. I could also give it a cutoff limit so that it doesn't loop paste a given maximum. Thanks for the input!\n. In that case, you should concentrate on modernizing the PC drivers first. Just because something was done wrong in MAME before doesn't mean that they should continue to be done wrong going forward.\nJust to inform the rest of the developers, MoochMcGee is an alternate nickname for Alegend45.\n. Ideally this should be handled by the OSD. It should be able to take multiple video outputs from a driver and mix them onto one output.\nThere would be little to no performance loss if the superimposing was done on the GPU, and it would be as easy as just drawing two textured quads, so that could be a great test case for better MAME video <-> OSD video communications.\n. Plus we have literally zero documentation on how the DVC actually worked. I've heard rumors that some of them have a DSP56k to handle the MPEG audio decoding, but that still leaves a big black box where the MPEG video decoding is. It would also be nice to know how the presence of the DVC is detected, how the CD-i console itself sends data to the DVC to be decoded, and how the decoded results are then mixed with the output from the VDSC and such. Because all of that is a total unknown right now.\nWhile we're on the subject of the CD-i, it would be great if someone could reach out to Philips and ask them to see if they can dig up any documentation on the LEMM, CDIC, and any other CD-i related ASICs and DSPs that we currently black-box. Because as far as I know, they don't make CD-i players anymore, and that business is entirely dead, so they wouldn't be losing anything by sharing the documentation.\n. While it's great to have more lamps hooked up, the way it's done in this case seems like an ugly hack, just reading some arbitrary RAM location. I sincerely doubt the hardware actually worked that way.\nThe lamps were more likely driven off of some I/O port. If you can find how the lamps are actually hooked up on real hardware, that would be more likely to be included. As it's implemented, I'd be uncomfortable accepting this pull request.\n. Thanks for the fix, tabbycat12, and thanks for the background info, u-man.\nI've applied your fix as it appears to work, and credited you as [tabbycat12] in the commit log. If you'd like to be credited in some other way in the whatsnew.txt for the next version, please let me know.\nI figure it's less likely to be an issue since it's BGFX handling all of the nitty-gritty OpenGL work, rather than our code. And if it does end up being an issue, then we can fix it by making the shader apply a tiny epsilon to the slider value, so that the view still looks square-on by default but the bug is still avoided.\n. A dev tried it on his arch linux system:\n doesn't seem to work with sdl\n Input: Adding Mouse #0: System mouse\n Mouse: Registered System mouse\n Mouse: End initialization\n is all i get\n. Oversight, can you fix?. Any ALU opcode that fails to check check_delay_PC is oversight on my part and should be added in the relevant place (after any decode calls which increment PC).. bgfx usually integrates pretty cleanly. Just sling us an issue when it's updated upstream, and tag me in the filing, and I'll see about getting it merged in. Given the holidays and how close the upcoming code freeze is, it's unlikely to happen in time for 0.205, but 0.206 is a distinct possibility.. ",
    "fulivi": "I'm attaching the current state of ROM dumps. Hope this is ok.\nOn the previous merge request I mailed everything to mmicko.\nLet me know if you need anything else, please.\nThanks.\nF.Ulivi\n. Thanks to all of you. It seems to be ok now.\n-- F.Ulivi\n. Ok, changed ptsname_r into ptsname. Could you check if it compiles on OSX now, please?\nThanks.\n--F.Ulivi\n. Ok, removed conditional inclusion of stdlib.h: it should be present on every u*x system now.\n. Ah, forgot one thing: I changed the \"ready\" signal logic for floppy drives that always spin (motor_always_on = true, basically all 8\" drives). The drive is ready as soon as a floppy is loaded (no spin-up time). Without this change the imds2 system would not boot (it needs the boot floppy to be ready just after reset).\n--F.Ulivi\n. Ok, I see the reason of conflicts: driver source files were moved into mame directory after my branching point (mame0166). Is there a semi-official branching point where to rebase my changes? I mean, is the current \"master\" branch ok for rebasing for example? Is there a better one?\nThanks.\n. Thanks for your mail.\nI gave a quick look at the issue: it seems very simple to me. Before my\nchange to 8251 driver, the CTS signal was not being honored, whereas now it\nis taken in account to see if the USART can transmit or not. Note that the\nlatter is a more accurate reproduction of the real device behaviour (see,\nfor example, the intel datasheet). So, by default the driver sets the CTS\nsignal to 1 (not active) at reset time. If no one is setting it to 0 the\ntransmission will never start (as it would have done in the real device).\nWhat do you suggest to fix this regression, please?\n- We set the CTS signal to 0 at reset (every driver that relied on\n  transmission to be enabled by default will see no change), or\n- We change machine drivers to model the fact that in some hardware CTS was\n  permanently tied to 0.\nThanks.\n-- F.Ulivi\nOn Sun, Nov 1, 2015 at 6:40 PM, Scott Stone notifications@github.com\nwrote:\n\nI noticed some regression which seem tied to the i8251 device changes. It\nis important to at least give cursory checks to associated drivers which\nuse a device you are working on for a current one.\nIn this case, these sets seem to have regressed and no longer show any\ntext. There may be more but this is based on screen comparisons of a 10\nsecond test run for each.\nsage2 - sage2.c\nsdk80 - sdk80.c\nsoftbox - softbox.c\nxor100 - xor100.c\nIf you could please look at these, perhaps something driver level for each\nneeds to be adjusted.\nThanks!\nTafoid\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/448#issuecomment-152848034.\n. Sorry for late reply. If I understand the question correctly, the right\nsolution would be to add CTS=0 in the machine drivers needing it. This is\nthe reason I didn't do it myself, because I'm not an expert (nor have the\nrelevant documentation) of the affected machines.\n\nOn Tue, Nov 24, 2015 at 8:46 PM, Scott Stone notifications@github.com\nwrote:\n\nAny movement on this before we go to release tomorrow? We have about 12\nhours to come up with a solution or it gets marked in an MT bug upon\nrelease..\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/448#issuecomment-159385285.\n. Hi, I've just pushed the missing overrides. Should I open a new pull\nrequest for this? Branch is the same (hp9845_dev).\nThanks.\n-- F.Ulivi\n\nOn Wed, Dec 16, 2015 at 3:42 PM, Scott Stone notifications@github.com\nwrote:\n\nThis looks to be the cause of compile issues - Windows - GCC 5.2.0\nhttp://pastebin.com/q58y73Dy\nOn Tue, Dec 15, 2015 at 1:13 PM, fulivi notifications@github.com wrote:\n\nHi,\nI've just pushed the first version of the hp9845b driver I'm working on.\nIt's still WIP but it's usable.\nLet me know where I should send the zip file with rom images, please.\nThanks.\n-- F.Ulivi\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/502\nCommit Summary\n- hphybrid: first draft of HP-5061-3001 CPU driver\n- hphybrid: access to top half of base page fixed\n- hphybrid: register W added (it's needed by 9845 test ROM)\n- hphybrid: implemented all EMC instructions, seem ok\n- hp9845b: first version (implemented devices: 2 CPUs, RAMs, test ROM,\n  text mode video)\n- hphybrid: added selection of boot mode for 5061-3001\n- hphybrid: fixed MAE bug, added \"PA changed\" callback\n- hp9845b: first release (to be completed)\nFile Changes\n- M src/devices/cpu/hphybrid/hphybrid.cpp\n  https://github.com/mamedev/mame/pull/502/files#diff-0 (985)\n- M src/devices/cpu/hphybrid/hphybrid.h\n  https://github.com/mamedev/mame/pull/502/files#diff-1 (236)\n- M src/devices/cpu/hphybrid/hphybrid_dasm.cpp\n  https://github.com/mamedev/mame/pull/502/files#diff-2 (308)\n- M src/mame/drivers/hp9845.cpp\n  https://github.com/mamedev/mame/pull/502/files#diff-3 (629)\nPatch Links:\n- https://github.com/mamedev/mame/pull/502.patch\n- https://github.com/mamedev/mame/pull/502.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/502.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/502#issuecomment-165129291.\n. Better like this? I hope I got your comment right.\nBy the way, is there a function somewhere in the code that parses (hexa)decimal integers from XML attributes? I couldn't find one, that's why I used sscanf.\nThanks.\n-- F.Ulivi\n. Do you see other problems with my PR? Should I open a new PR to have\neverything merged in? (This is one of my recurring doubts...)\nThanks.\n-- F.Ulivi\n. In my opinion it doesn't conflict, if I understand the nature of changes\nin 1388 correctly.\nIt seems to me that 1388 attempts to change the module library but not\nthe interface to the modules themselves. So it shouldn't conflict\nbecause all my PR did was introducing a new module that conforms to the\nstandard (and unchanged) module interface.\nI'd like to point out, as a further proof of this, that 1388 doesn't\nchange any of the modules.\n--F.Ulivi\n. As far as I understand LIST_PARTITIONS is now needed because without it imgtool uses \"unknown_partition_get_info\" for partitions. But this get_info is completely empty (no functions in it) so any operation on partitions will fail (for example: begin enumeration of dir. entries).\nI'm attaching a test image. You could try listing its directory content (a single file named \"IMGTST.DATA\"). Without my patch, this operation fails with \"unimplemented\" error.\nThanks.\n--F.Ulivi\nimgtool_test.zip\n. On 08/17/2015 05:49 PM, Jonathan Gevaryahu wrote:\nIn src/mess/drivers/hp64k.c\nhttps://github.com/mamedev/mame/pull/286#discussion_r37202087:\n\n@@ -349,6 +385,26 @@ void hp64k_state::video_start()\n        m_chargen = memregion(\"chargen\")->base();\n }\n+// Divisors of K1135 baud rate generator\n\nI think we already have a device for this type of baud divider, in\nmachine/com8116.h\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/286/files#r37202087.\nThanks for your suggestion, I completely missed that out. When time\nallows I'll refactor the code to use com8116. At a closer look, this\ncomponent looks like a close relative of K1135 that HP 64000 used.\n\n-- F.Ulivi\n. See my comment below. The recv_update function processes at most 1 incoming msg. Usually a msg is composed of 5 characters, so 8 is used here to have some margin. Also, the protocol relies on the buffers on both sides of the socket. When a msg cannot be processed, the device doesn't read from socket (and incoming msgs are left in the input buffer).\nAlternatively, we could try a different buffering strategy. We could always consume whatever comes in and buffer the parsed messages instead (in a vector or similar). I don't know if it's really worth the trouble.. Yes, I know, I don't like it very much either. I started in the canonical way (resolve_safe etc) but then I noticed it has some speed penalty on 9845 emulation (two hybrid processors there). A rough benchmark shows that resolve_safe has the emulation running at 800/900% at maximum speed (PgDown pressed) whereas the bool cache gets to around 1000/1100%.\nShould I return to resolve_safe in your opinion?\n. ",
    "ImJezze": "As Cuavas said. :)\nBut in addition and for documentation I could show you some before and after results of changes that are described too briefly.\n. I'm not quite familiar with all the difference between those licenses, but I want that source changes will be reflected back to MAME. I think the GPL ensures that.\n. linux_x64: \"ld terminated with signal 9\"\nIt seems the linker was terminated due to low amount of memory on the build system.\n. Were there any problems with your changes or why did you cancelled your pull request?\n. The added INI files should be included in the binary bundle. But you're right, the new files might override existing files of the user. I think it will be fine if they are moved to a sub-folder like ./ini/presets/ So people can copy and modify them without fear of losing their changes during an update.\n. I don't like the idea of resolution specific configurations for the host system. For HLSL all shader passes should be aware of the resolution of your monitor and I think it's the same for BGFX. Do you have any comparisons between different resolutions you can show us, to better understand your request?\n. Quick note: Since 0.172 the scale factor of the bloom targets is 0.75 instead of 0.5. As it turned out, this scale factor makes the bloom look much less blocky, especially for vector screens. So maybe the scale factor should be a parameter. Furthermore the maximum number of down-scaled targets was decreased to 8 for raster screens, but increased to 15 for vector screens. Another parameter which might also be considered.\n. Yes, the 4 chunks were created because older graphics cards had a more limited maximum texture size of e.g. 2048x2048 (SM 2.0 spec.) or 4096x4096 (SM 3.0 spec.). Modern graphics cards - that are capable to perform the post-processing fluent - support textures up to 16384x16384, which is more than twice 8K.\n. The issue you describe was fixed in 172. I just tested Pac-Man with bezel and screen distortion in the latest release 176 and it works fine. Can you give some more details, please?\n. I close this as not reproducible.\n. These changes are not against the vector core, they are on top and part of the post processing. The only reason why it is not available for BGFX is that the post processing for vectors has just not been implemented yet. The HLSL shader can easily be adapted to BGFX, but at the moment I have no time to implement the vector post processing first.\nAnyway, I would not prefer an implementation of vector points and rounded vector line-ends as geometry, which is what you have to do if you want to draw a circle without a texture in DirectX/OpenGL. It would require an excessive high number of triangle-fans or -stripes (especially for a smoothed circle) instead of a simple rectangle with a procedural generated texture. Furthermore a shader implementation can apply a much more complex shape than a simple circle, that vector points actually are not.\nBy the way, if you are interested to improve the vector core you might want to take a look at the enhancement issue #399 from Ryan.\n. ",
    "Lord-Nightmare": "There's definitely still a few HLSL issues, even with this patch. ~~For instance, adjusting the screen curvature causes the scanlines to diverge at the screen edges rather than converge, which looks very weird and unrealistic; the scanlines should follow the screen curvature and the input pixel lines exactly.~~\nEDIT: The above is actually NOT true, this is an extremely unfortunate case of moire effects on the scanlines, which i'm unsure the best way to get rid of (supersampling of the post-scanline texture?)\n(I used the canon cat 'cat' MESS driver as an example, as that driver would benefit greatly from HLSL due to its prominent scanlines and extremely long phosphor persistence in real life)\nAlso (and this may be unrelated to this patch in particular), resizing the window in windowed mode seems to cause the hlsl slider settings as set in the tab menu to reset themselves to whatever was loaded from the .ini (or whatever was default); the changed slider settings don't seem save at all even within a single mame/mess session.\n. Yes, the cause of the resize error existed prior to this; I edited my report above (you can see it on the github page); The cause of the \"diverging\" lines is not caused by your patch, it is a moire artifact caused by scanlines being so thin that whatever the next texture is which samples the scanline-applied texture in the hlsl 'stack' causes pseudo-scanlines to appear in a moire pattern. I'm not sure the best way to fix this.\n. Hmm. does newrisingsun have any issue with his patch being licensed as \n3BSD? I'd rather not start relicensing bsd code as gpl just for a patch \nif we can't help it.\nOn 6/29/2015 6:38 PM, mixxmaster wrote:\n\nNOTE: Redo from old pull request because failure.\n1. Clock fix patch from NewRisingSun of VOGONS. Previously, the SAA\n   frequency/noise value calculations were always using predefined\n   ones taken from an 8mhz SAA. They have been replaced with divisors\n   to make the emulation take advantage of it's assigned clock. This\n   should correct Game Blaster/CMS emulation and Master Boy, as both\n   use different SAA1099 clocks.\nhttp://www.vogons.org/viewtopic.php?f=41&t=38350\nNOTE: The patch was meant for DOSBOX SVN, which is GPL and compatible \nwith BSD-3 Clause, the current license of the SAA1099 driver.\n1. Changed Game Blaster and Sound Blaster 1.0 SAA clocks from 4.77mhz\n   to 7.159mhz for correction.\n\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/232\nCommit Summary\n- fixed SAA1099 to actually use clock (nw); corrected Game\n  Blaster/SB1.0 clock to 7.159mhz\n- corrected version history*\nFile Changes\n- M src/emu/bus/isa/gblaster.c\n  https://github.com/mamedev/mame/pull/232/files#diff-0 (4)\n- M src/emu/bus/isa/sblaster.c\n  https://github.com/mamedev/mame/pull/232/files#diff-1 (4)\n- M src/emu/sound/saa1099.c\n  https://github.com/mamedev/mame/pull/232/files#diff-2 (48)\n- M src/emu/sound/saa1099.h\n  https://github.com/mamedev/mame/pull/232/files#diff-3 (1)\nPatch Links:\n- https://github.com/mamedev/mame/pull/232.patch\n- https://github.com/mamedev/mame/pull/232.diff\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/mamedev/mame/pull/232.\n\n\nJonathan Gevaryahu\njgevaryahu@gmail.com\njgevaryahu@hotmail.com\n. guru: \"personally I think you should voice your concerns directly to the team\" is exactly what nitrofurano did with this pull request. Why are you snapping at him over this?\n. @mr-t-guru Ok, fair enough. I misunderstood your comment/reason for closing, but I understand the problem now. It sounds like an issue of per-pixel aspect ratio being different between the overlay and the laserdisc video.\n. @nitrofurano Did you run this test program (written in zxbasic) on the real hardware which the laserdisc game runs on, to show the pixel aspect ratio of the laserdisc video vs the overlay screen? If so, can you provide pictures of this?\n. The compile problem has nothing to do with your code.\n. You sure it doesn't have a fifo? The decap shows it has a lot of crap on die one of which could be a fifo of some sort...\nhttp://siliconpr0n.org/map/nec/d7759c/mz_mit20x/\n...although i was under the impression that the two dark areas were roms of some sort?\n. On 9/10/2015 10:41 PM, Guru wrote:\n\nI'm fully aware bootleg PCBs have different locations.\nin hundreds of other drivers there are bootlegs using the parent rom \nnames with comments showing the bootleg name/location. should we fix \nall of those possibly 1000 items too?\nwhat about rom merging? 2 roms with the same CRC32....\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/mamedev/mame/pull/317#issuecomment-139433363.\nIn most drivers i've seen, the bootleg rom shows its own name and \nlocation and shows the parent rom name in the comments. I believe that \nshould be the standard.\n\n\nJonathan Gevaryahu\njgevaryahu@gmail.com\njgevaryahu@hotmail.com\n. etabeta: That does make sense, except in the case where bootleg roms are made of one or more of the parent roms combined onto one chip or split to multiple chips. In those cases, I would definitely add comments explaining.\n. Can you take a closer/higher resolution picture at the front of the two drives?\nThey look like TEAC FD55B drives with black bezels, but there are several similar-looking drives that existed as well. (Also, if they are TEAC FD55BV drives, they have a head load solenoid, which makes a 'clunk' sound when the head is loaded. Normal TEAC FD55B drives the heads are loaded via the lever on the front.) They do not look like Tandon or Y-E Data drives, which had the lever on the opposite side of the front of the drive, Nor do they match Epson drives. Not sure about other manufacturers (Panasonic, Canon, etc)\n. Ok, the question left is what type of TEAC FD55 series drives are they?\nTEAC made the FD55 with a black bezel for multiple drive types.\nFD55A is Single Sided, Double Density, 48tpi (40 tracks/side) (180K/disk)\nFD55B is Double Sided, Double Density, 48tpi (40 tracks/side) (360K/disk)\nFD55E is Single Sided, Double Density(Quad Density?), 96tpi (80 tracks/side) (360K/disk)\nFD55F is Double Sided, Double Density(Quad Density?), 96tpi (80 tracks/side) (720K/disk)\nFD55G (aka FD55GFR) is Double Sided, High Density, 96tpi (80 tracks/side) (1.2MB/disk)\nDo you know offhand which of these the drives are? (How much data is stored per disk?)\n. The MikroMikko drives here would have to be TEAC FD55FV, since they don't do 1.2MB disks (or do they?), but they do DD, 80 tracks, 2 sided (160 tracks total), and have a head load solenoid (V suffix for TEAC model number).\nThe difference between TEAC FD55GFR and FD55G, by the way, is that the former does both DD and HD disks (720k and 1.2MB, and both 300rpm and 360rpm, selected by jumpers or one of the shugart pins, see http://maben.homeip.net/static/S100/teac/diskette/Teac%20FD-55GFR%201.2MB%20floppy.pdf ) while the latter does ONLY HD 1.2MB disks (360rpm only; it might be able to read 720k disks but not reliably write them?)\nSee http://maben.homeip.net/static/s100/teac/brochure/Teac%20FD55%20summary%20specs.jpg\n. Please provide PCB pictures to back up your comment.\n. So basically, it is a \"1.5bpp\" system (i.e. off, on, bright, per pixel, like the vt100), but uses a green phosphor crt, and our current green phosphor crt emulation colors are not extremely accurate (or are adjusted for the wrong gamma) ?\n. We might also consider the 16 bit 'half' value, but only newer nvidia cards (newer than the one in xbox?) do that, so it may be totally useless. The 24 bit floats in the namco stuff could also be handy, unless they never appear in registers directly?\n. The liberatr earom interface is the 'new' one Aaron Giles wrote a while back. (src/devices/machine/er2055.cpp)\nRecently (and not realizing Aaron had rewritten it) I rewrote the 'old' earom interface (src/mame/machine/atari_vg.cpp)\nBoth of these files effectively do the same thing, there are some advantages and disadvantages to each (atari_vg.cpp keeps track of the device bus state, while er2055.cpp uses separate input lines for the 5 control bits so it doesn't require a hack to make the two different wirings atari used work both at once)\nNote: Neither of the ER2055 emulations above 'correctly' emulate the earom erased status. The real way the chip works is it stores two bits per bit of stored data, A and B; If A=0 and B=1, the bit reads as 0; if A=1 and B=0, the bit reads as 1. If A=B=0 or A=B=1 the bit reads randomly. Erasing a location sets both A and B bits to 0 (I think, I might have the polarity backwards). Programming a location sets one of the bits to 1, depending on the value programmed. Programming a location twice without erasing in between can set both A and B bits to 1.\nNeither of the two emulation cores respect this, though it would be fairly easy to implement.\n. LN isn't dead, he's working on other things, sorry.\nWe can merge this in and fix the duplicated er2055 stuff later. Both implementations happen to work fine.\nIf you'd like you can move the \"atarigen\" implementation to er2055alt.cpp in same directory as er2055.cpp or something and add a comment that it is a redundant implementation and needs to be merged with the other one.\n. The unused slapstic chips should not be removed, as they document chips which really did exist and may have been used on unusual versions and prototype sets which are not dumped yet.\n. Wait, never mind. the unused/unknown slapstic chips are still documented in /src/mame/machine/slapstic.cpp. disregard previous message.\n. I think MAYBE (this is worth further research on bitsavers in the shugart/qume documentation) that at least 8\" drives can be jumpered to use common head load (though the solenoid isn't supposed to fire unless a disk is inserted) or only load the drive which is currently selected. So whatever solution we come up with should be able to handle all of the different 'drive jumpering' cases.\n. This is actually useful for VFD DMD displays on arcade and pinball games as well.\nAs a friend and I discovered when looking at someone's 'Checkpoint' machine ( http://www.ipdb.org/machine.cgi?id=498 ) the DMD needs persistence or it doesn't look right. This is plainly evident on the machine we looked at since the machine used a poorly designed repro LED-based DMD replacement which uses the original display Z80 and ROM, and does NOT emulate the original VFD persistence properly, so the LED-DMD flickers like hell.\nA proper DMD replacement would use an FPGA or similar to 'fake' (using pwm) the VFD persistence on each LED. Can use the original z80 code too.\n. Personally, I'd go for 0o as the octal prefix; most new languages are switching to that for octal, and even C and C++ standards committees are proposing deprecating the old 0 prefix in favor of 0o as it makes code more readable at a glance.\n. This needs to be merged to fix the mac build.\n. The clock speed changes, have these been verified with a frequency counter on the actual board? I'm guessing the original clock speed numbers in the driver were measurements from who knows how long ago, but I could be wrong...\n. IIRC dc42 uses .image as its standard extension, but this could be erased by the user in the dialog box and stuff would still work, also if the user typed a name longer than 28 characters the end of .image would be chopped away, so .imag etc.\ndc42 files have a 'strange' magic number which can be verified as the first part of an 'identify' function, though: bytes 0x52 and 0x53 are always 0x01 0x00\nI suppose if those bytes match that, the second stage of verification is to make sure the file isn't corrupt, sanity check the data size field(0x40-0x43)+tag size field(0x44-0x47)+header size(0x54 bytes) vs the image file's size, then optionally check that the data and tag checksums are valid. I believe DART is similar.\n. superctr and I are working (on and off) on exactly that, actually. Closing is fine for now.\n. I was under the impression that modernizr.js was under the MIT license, not GPL...\nhttps://github.com/Modernizr/Modernizr\n. I think we already have a device for this type of baud divider, in machine/com8116.h\n. Oops. That's an unused leftover from an earlier attempt to merge the bankswitch registers for tokio and bubble bobble, which I realized was a terrible idea halfway through doing. I'll nuke that.. m_sound_nmi_enable is a pre-existing variable name from before I started messing around, but I'll make it consistent with the others.. I originally did this with the intention to eventually merge missb2 and bublbobl.cpp into one driver, but I can undo it to reduce churn and unnecessary descriptiveness. Was done in missb2.cpp to be consistent with the region names in bublbobl.cpp, which changed due to the schematics. Since missb2 inherits a lot of stuff from bublbobl.cpp, I wasn't sure if it was necessary or not to make the region names the same, so I did it out of abundance of caution.. The header doesn't directly use these, but both missb2.cpp and bublbobl.cpp do, both of which include said header.. This was an oversight, fixing.. I didn't realize there was a significance to it (I had thought it was an old c/p error from years ago), I'll put it back.. bublbobl.cpp already does it the 'call each other' way, I was following the convention there.. No, I actually left that in by accident. Until we find tokio schematics or someone traces the pcb out, the meaning of the bits isn't known. However, m_video_enable is strongly suspected as it gets set seemingly the same time the bublbobl code sets it in the later hw.. I'm not quite sure I understand you here, so I should put AM_MIRROR(...) before the AM_DEVREAD(...) etc directives, instead of after?. so \"ret |= m_main_to_sound->pending_r() ? 0x2 : 0x0;\" instead?. The reason I used the ternary operator in the first place is because pending_r() is a boolean, so it needs to be cast somehow to a uint8_t. I could do \"if (m_main_to_sound->pending_r()) ret |= 0x2;\" instead, if that's better.... ...Actually, AM_MIRROR on that line was a c/p error, shouldn't have been there in the first place.. will do. I'll also make \"FIFO\" consistently capitalized in comments and logs since it is currently very inconsistent in tms5220.cpp. ",
    "u-man74": "off course there are still HLSL issues... but this patch correct and improve many things, that existed in prior versions and is an overall improvement and not the opposite. i got moire effects either with low prescale settings or extreme settings with HLSL, so my advice is to find good average settings.\nyou cant \"save\" slider settings, that feature was removed long time ago. the only way to keep your settings persistent, is to change them in your .ini settings. see the slider-function as a preview for changes that you do later in the .ini settings or a quick way to change HLSL for your current game that you play. I have not the problems you describe, if i switch from windowed to fullscreen and/or back again, but i must admit that I didnt try the \"resize\" function.\ndid the resizing error exist prior this patch?\n. i just want to clarify... its not my patch... its Jezze\u00b4s one. He has done all the work and it is his effort. \nI am just a fanboy, nothing more ;) .\n. OK ... just some questions, because it is not clear enough for me:\nthe 3D artwork would be a visual 3D presentation of mechanical devices, correct?\nIf so, I totally agree with all aspects andrew-gardner wrote. Especially the used 3D format (.obj, .dxf etc.) needs to be choosen wisely. The GameEx front-end for example, has a wide range of 3D cabinets (over 400 cabs) which is fine, but the supported 3D .x file is a pain, if changes are needed you are basically screwed.\nAlso why starting from scratch? Why not looking for a good cooperation/synergy with allready existing projects like http://www.digitalcybercherries.com/  ??? \nIn my eyes, the most advanced project to that matter. This would not only be just a presentation, you would actually even play the machines and looking into the future, we would also support VR/AR. \nThe same goes for V-pinballs, because there are allready hundreds of pinball-machines emulated.\n. but thats the whole point.... why would be someone skilled in 3D modeling be interested to create \"dead\" things, if he can do the same for a vivid system, where the model has a higher meaning.\nDont get me wrong, i like the idea too and you are right with anything that can facilitate the display of these non-video features to a good standard is a good idea, but teamworking with other people that do exactly this thing for years, cant be wrong. At least we should look, to support a standard, that others are also doing, so we can benefit of each other and i think they are also maked up their minds about which 3D format is the best. Even if we have our own, it can be considered that it would not be bad, to ask the others, how they would approach a task like ours ;) .\n. I have two ideas for the vector renderer, that may be interesting for this project:\n- a shake/jiggle filter that operate on vertices level, to simulate the \"stable\" screen of vector games, especially true for the Vectrex system and the cheap hardware used (comparing to arcade vector games).\n- due to the nature of the vector renderer, assuming that everything being drawn is a line, a filter would be needed, that treats \"true\" points (i.e. Stars, Bullets etc) like a special case. So that a point case could be passed to exclusive point fx, like bloom/glow, shading etc.\nIMHO these two things alone, would vastly improve the vector renderer and the appearance of vector-games, without being maybe to complex to realize... sadly, i have no skills for that :( .\nPS: excellent issue description.\n. No doubt, that this proposal from MooglyGuy here, is about to improve the actual emulation. I just thought that my two arguments posted before, still belong to the vector renderer, than anywhere else (HLSL/GLSL/BGFX shaders) ,are also improving the actual emulation and would be also available for all drivers simultaneosly. The two arguments can only be solved (in a good way) through the vector renderer itself. They dont belong to any shader section, thats why i believe that no BGFX/HLSL/GLSL is of any help here.\nIn the case of vector games and for \"true\" emulation, we will not only be confronted, by the software itself, but rather with the hardware that created the fascination that everyone shares with vector games. I think we can agree that vector games are a special case in the world of emulation. \nMaybe i am completely wrong (and if so, i apologize), but i think that even the most accurate software emulation will reach a limit and i count my two arguments into it. Or in other words, i dont think you can reach better results, regarding \"shakiness\" and \"point shading\" through more accurate emulation. Again, i apologize, if i am wrong. \nI see \"shakiness\" and \"point shading\" a lot more defining vector-games, then the 50/60 Hz humming or contamination of audio cirtcuitry, which is more a obscure thing and only happening under some circumstances.\n. \"...Not sure how much of that is bad caps versus the original low-cost design.\"\n:D  ... i would say, blame the low-cost design.... still nice, to see star wars on a vectrex ;) .\n. this looks like a awesome project... but noob as i am, i have to ask, how you would connect a Vectrex to a serial port? do i need a Zector ZVG card for this?\n. hahaha... deleted my posts... WTF? basically i have said all this already yesterday, but it seems that mr-t-guru is too sensitive :D . \nhttp://www.blurbusters.com/gsync/preview/\nhttp://www.blurbusters.com/zero-motion-blur/video/\nhttp://forum.arcadecontrols.com/index.php/topic,135823.0.html\n. From what i know and read about in the GroovyMAME forum regarding OpenGL, is that OpenGL dont accept the v-sync switch correctly from MAME. Instead you should use system/ATI control panel to achieve correct v-sync.\nAs previous posts already wrote, i suggest to use GroovyMAME, because it has black-frame insertion support and should handle the 120hz properly.\nYour case can be also special, because you wrote: \n\"I have actually 144hz benQ panel monitor, and I normally use it as 120hz setting or sometimes I set it more exact double refresh hz of real acade machine for mame.\nBecause my monitor is not freesync or Gsync, I use CRU util for exact double refresh setting, it is quite good.\"\nSo i assume that the handling is not the same, like with Gsync or freesync and maybe is the cause for your problems. Even Gsync or freesync is barely tested and i guess it gets worse with a benQ exclusive feature, as it is a far less common setup. \n. @Belmont: I totally agree with you, that noone should disrespect the tremendous work on former MESS drivers, but i dont think that people deny the hard work, it is more that supporting MESS, can also considered as hard work on the frontend developer side and please dont come with qmc2. \nIn particular i dont like that frontend devs are forced to support it and this is a wrong approach in my eyes. It looks more like a personal dispute rather than a logical step. More meta-data would eventually help frontend devs to fully support MAME. If i look at GameEx for example, it supports the MESS side of MAME now, but it is still very time-consuming to configure a meaningful setup, as a user needs to setup each machine individually and even if this is done, you would need mapfiles for each machine for proper name-handling.\nI think it would be much better, to invest more time and work to make it easier for 3rd party devs, as doing exactly the opposite. Doing steps together to reach the goal, you know.\nI am really scared to write this, as i dont want to upset you or others here, risking to be not heard anymore. I just want to tell my thoughts and i am open to hear your opinions.\n. @mr-t-guru: i dont know who the real moron is here :) , but you wrote false arguments in the other thread, then you have deleted nearly all posts and claiming now, what a moron i am and what a expert you are.... truly professional... good job.\n@galibert: you didnt understand my last post. it seems that you dont realize that most frontends where written at a time where only MAME existed and they struggle right now, to make it as useful and easy as it was before and i dont mean any input-stuff with this (you would do this externally with MAME anyway).\nIts easy to say bullshit, but it seems you never looked into a frontend lke GameEx, because you would know then what i really meant. You only focus on this filtering mame vs. mess thing and i just wanted to show what kind of problems other 3rd party devs have with current MAME. \n. As i told before, there is no problem to get machines running. The problem is to set them up. Nearly all frontends start emulators via a commandline and in case of GameEx, you would need many different commandlines to start the machines, but you can only have one commandline per emulator. \nSo a user need to setup each machine as a seperate emulator, even if it is just one MAME. It becomes more complicated, if you want artwork support for the machines. \nPrior GameEx had total control of MAME and was a rich featured frontend for it (it is still, at least for the arcade part) but these features are gone in the case of MESS. I am sure, that Tom Speirs and Headkaze will find a solution, but thats the current state.\n. And i am not stupid too :)  annoying yes :( but thats just a pov nothing else.\n@Belmont: GameEx is non-profit and you can always use a free version, for extra features that are mostly media center related (that are in no way including MAME) you would need to buy a license.\nQMC2 is the worst example you can bring in here, especially comparing vs. GameEx, which is way older and that is the crux of matter.\nIt is absolutely not true, that GameEx didnt support MESS... it did since UME, merely not as rich featured as MAME, just FYI and as described previously.\nTom Speirs and the team, is willing to support MAME, more than you all are aware of ;) .\n@balr0g: \nI will try my best, to exactly find out, how you all could help them and will speak to them tonight. Who would they need to contact, if they have collect all the answers? So that Tom itself can contact the person, as i have learned my lesson from the past :) .\nBelieve me, i am very glad to hear, that we can discuss things, like nomal people here.\nThank you so far, as this is the right approach and everyone will benefit from it.\n. Finde die \u00dcbersetzung ziemlich gelungen, manche Stellen wirken unfreiwillig komisch, wie z.b. Lichtpistole. H\u00e4tte meiner Meinung nach nicht sein m\u00fcssen, da z.b. Trackball, immer noch Trackball heisst oder Sound auch Sound geblieben ist.\nIch habe noch ein paar \u00c4nderungsvorschl\u00e4ge bzw. Notizen hinzugef\u00fcgt. Falls ihr noch Hilfe braucht, bei den HLSL Schiebereglern, kann ich euch gerne noch weiterhelfen, da ich im Kontakt mit Jezze bin, der auch aus Deutschland kommt ;) .\nAnsonsten gutes Ding :) .\n. @rootfather : Klingt vern\u00fcnftig und plausibel... erstmal grob fertig werden. HLSL Hilfe jederzeit ;) .\n. #line 103: msgstr \"Lichtpistolen-Zuordnung\"\n\u00c4ndert Lichtpistole in Lightgun, das klingt einfach nicht gut. Wie gesagt Sound ist auch Sound geblieben und nicht \"Ton\" etc.\n. #line 942 msgstr \"Geld %1$c: NA%3$s\\n\"\nline 947 msgstr \"Geld %1$c: %2$d%3$s\\n\"\nIch w\u00fcrde hier eher M\u00fcnzen nehmen\nline 1104 msgstr \"Zum Ausw\u00e4hlen, doppelklicken Sie oder dr\u00fccken Sie %1$s\"\nauch hier, ein \"Sie\" langt.\nline 1186 msgstr \"Treiber ist \\\"Eltern\\\"-Treiber\\n\"\nline 1235 msgstr \"Programm ist \\\"Eltern\\\"-Programm\"\nline 1281 msgstr \"Treiber ist \\\"Eltern\\\"-Treiber\\n\"\nIch finde Ursprung/ Original besser. Eltern klingt doof.\n. I just want to throw in, that we are talking about three .ini files and even if they would overwrite old files, people would need to adjust these old files anyway, as they are some changes in HLSL again that would make the old files looking odd. The benefit of having initial presets is more worth, then dropping them entirely, IMHO.  If people are losing their ini-files, because they didnt do a clean install of MAME, this generaly cant be considered the fault of Jezze or the MAME dev team.\n. I dont need CFG files at all, as long as this inconsistence is still present: http://mametesters.org/view.php?id=6068\nThey are only trouble making, while creating game.ini\u00b4s for vector games, as the core video options are a important part while creating them.\n. This is not true, i would welcome this feature, but as long as the CFG files are creating trouble with .ini files, i am not happy with it. This is not orthogonal to this issue here from my POV, because before such a feature is implemented everywhere, it should get rid of my described problem, which would in turn just become bigger and heavier to solve. You may think that i have a negative attitude, but I just see this issue here, as a justified argument to bring back the described bug from MT.\n. yes, indeed it is a useful feature. maybe could be used even for \"converting\" older .ini files to newer .ini standards.\n. I tried this feature lately, but it didnt worked. I can record a AVI, but without HLSL effects :( . Maybe i am just to dumb :) .\n. From my experience with the CRT-geom shader and the tilt function, there are scenarios, where a 0.0 default could lead to a black screen with some graphics cards. There a threads about it at MW and we found out, that changing the tilt value to this, solved the popblem. Sadly, I cant tell which kind of setups lead to these problems, but they existed at least in the OpenGL version (the old one, not BGFX). So probably this leftover is a save default from the past. I cant speak for BGFX, maybe the problems are non existent there.\n. Ich w\u00fcrde das eher so beschreiben, da der Parameter nicht wirklich die Strahlintensit\u00e4t beschreibt:\nmsgstr \"Strahlintensit\u00e4t Gewichtung\"\n.  msgstr \"Vektor-flimmern\" ist eine bessere Beschreibung.\n.  msgstr \"Dauerfeuer kann nicht aktiviert werden\"\nIch denke so werden es alle in erinnerung haben.\n. \"Tippen Sie OK oder bewegen Sie den Joystick nach links und dann nach rechts, um fortzufahren\"\n\"Geben Sie OK ein oder bewegen Sie den Joystick nach links und dann nach rechts, um fortzufahren\"\nEs gibt nichts (keine Taste), wo man OK dr\u00fccken kann. Wurde vorher schon richtig gemacht, Konsistenz?\n. +\"Dr\u00fccken Sie eine beliebige Taste (au\u00dfer ESC) zum Fortfahren.\"\nMan k\u00f6nnte sonst den Eindruck gewinnen, jede Taste einmal zu dr\u00fccken.\n. msgstr \"Verz\u00f6gerung f\u00fcr Dauerfeuer\"\n. Bitte vermeidet begriffe wie \"konsultieren\". Ich habe schon vorher erw\u00e4hnt, das manche beschreibungen unfreiwillig komisch wirken. Da es hiess, ihr wollt \u00fcberhaupt erstmal die deutsche \u00fcbersetzung hochladen, sammel ich im moment nur verbesserungs-vorschl\u00e4ge meinerseits, w\u00fcrde sie aber gerne mit euch diskutieren, sobald ihr eben lust und laune dazu habt.\n. wenn es auf das bild bezogen ist: Bildwiederholungsrate\n. ich glaube genau umgekehrt, aber sonst wie du geschrieben hast\n. ich w\u00fcrde eher \"\u00fcberspringen\" w\u00e4hlen, als auslassen\n. \"Verwende Hintergr\u00fcnde\" , damit es mit dem rest stimmiger ist.\n. Das finde ich ja ganz ungl\u00fccklich gew\u00e4hlt, aber mir f\u00e4llt gerade auch nichts besseres ein. Leuchtreklame??\n. Bildschirm Einbrennungen\n. Multi-funktions-Tastatur evtl.?\n. aktive Benutzeroberfl\u00e4che\n. Dreifache Zwischenspeicherung oder Pufferung. Finde ersteres besser.\n. Ger\u00e4te Zuordnung\n. Drosselung oder drosseln\n. dann lieber so wie du sagst :) .\n. \"Bildschirm eingebrannt\" finde ich auch in ordnung und Einbrennung/en gibt es tats\u00e4chlich nicht ;) .\n. ist wohl die beste L\u00f6sung ;) .\n. ",
    "Badabilly": "Sorry about the foul up. Please ignore the first 8.\n. Not sure why it won't let me close or remove those. I'll try that tomorrow. Sorry about the hassle.\n. ",
    "Tauwasser": "Just added another fix to MBC1 (default statement in switch not covering all possibilities).\nMBC2 register map was implemented from false documentation, likely no change in any games though, because Nintendo still recommended using 0x0000 range for RAM enable, 0x2000 range for ROM enable.\n. Err, why the manual merge? The pull request was fast-forwardable till yesterday at least. I'm confused?\n. Not an inconvenience -- I rebase to current master before pull request anyway -- as much as a documentation issue because the original commit messages are lost.\nIMHO, applying fast-forwarding patches and only merging single patches when necessary to keep commit messages is preferable to one big merge that squashes the history :)\n. So 0x14U then? Or drop the u? Because honestly, I've been told the latter before, but I personally think the u is more proper.. It is supposed to persist across loop iterations?. It's not a unary *, because it's not an operator... I'd dispute if this is closer to the parser, but I can see the consistency.. const-correctness aside there are only 48places inside the current source code where const-ness of pointers is enforced and none of them are inside functions. This is pedantry.\nEDIT 45 uint8_t, 3 uint16_t occurrences.. ",
    "k2-git": "Hello balr0g.\nMy pleasure.\nBut, your work is great than my little work.\nThank you. :)\n. ",
    "f205v": "Hi OG.\nI changed it after checking pictures of the cart.\nhere is the picture:\nhttp://www.citylan.it/wiki/images/2/26/848_PCB_component_side.jpg\nand here is the reference page on my website:\nhttp://www.citylan.it/wiki/index.php/Crazy_Taxi\nAs you can see the X76F100 at IC37 is present.\nBTW I'm re-checking everything on NAOMI-CHIHIRO-TRIFORCE, and updating my table \nhere:\nhttp://www.citylan.it/wiki/index.php/Naomi_-Chihiro-_Triforce\nThat was the only difference I found up to now.\nCiao\nAntonio (f205v)\nwww.citylan.it\nOn 01/06/2015 08:32, Olivier Galibert wrote:\n\nYou changed the X76F100 for Crazy Taxi from not present to present, why?\nOG.\nOn Mon, Jun 1, 2015 at 12:37 AM, f205v notifications@github.com wrote:\n\nadded description for newly discovered game + a few cosmetic changes\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/196\nCommit Summary\n- Update arcade.lst\n- Update naomi.c\nFile Changes\n- *M* src/mame/arcade.lst\n<https://github.com/mamedev/mame/pull/196/files#diff-0> (2)\n- *M* src/mame/drivers/naomi.c\n<https://github.com/mamedev/mame/pull/196/files#diff-1> (11)\nPatch Links:\n- https://github.com/mamedev/mame/pull/196.patch\n- https://github.com/mamedev/mame/pull/196.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/196.\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/mamedev/mame/pull/196#issuecomment-107321766\n. On 01/06/2015 16:02, MetalliC wrote:\nf205v, ughh, you must be did this changes in a big hurry -\n- \"new finding\" game name is wrong, you probably copy/pasted my typo from DU mail subject, also I strongly thinking there not needed any unwanted attention to this game, until it will be preserved (or lost).\n  yes, I used your name as stated on the DU list, before we had the correct \n  translation (Tokio Bus Guide) from Eric.\n  I do also fully understand your concern about publicity.\n- Crazy Taxi PCB doesnt have X76F100 eeprom\n  I have shown pics from ANY as a proof of the fact that X76F100 at IC37 is present.\n  What is the reason why you say it is NOT present?\n- Alien Front not require Comm.Board (but supports it)\n  Ok, thank you for this information\n- you missed CR in GAME macro part.\n  LOL\nsorry, but I reject this\nYes, agreed.\nI will re-update it at a later stage, avoiding all the errors you mentioned.\n\nCiao\nAntonio (f205v)\nwww.citylan.it\n. OK, great.\nAt least this point has been clarified.\n. Thank you very much!\nIt was the first time I tried messing around with github.\nHope everything was OK.\nCiao\nAntonio (f205v)\nwww.citylan.it\nOn 12/04/2016 14:49, R. Belmont wrote:\n\nMerged #759.\n\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub:\nhttps://github.com/mamedev/mame/pull/759#event-624074343\n. I'm sorry about this,  but I didn't change it because I thought that\nmame.lst is now automatically generated and should not be touched by hand.\nMy fault.\nIl 12/Apr/2016 15:35, \"etabeta78\" notifications@github.com ha scritto:\nIn fact, you forgot to change names in mame.lst so that current tree does\nnot compile.\nBut I'm not on my working machine right now...\nf.\nOn Tue, Apr 12, 2016 at 3:27 PM, f205v notifications@github.com wrote:\n\nThank you very much!\nIt was the first time I tried messing around with github.\nHope everything was OK.\nCiao\nAntonio (f205v)\nwww.citylan.it\nOn 12/04/2016 14:49, R. Belmont wrote:\n\nMerged #759.\n\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub:\nhttps://github.com/mamedev/mame/pull/759#event-624074343\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/759#issuecomment-208904284\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/759#issuecomment-208907879\n. Ah! OK, thank you for explanation.\n\nCiao\nAntonio (f205v)\nwww.citylan.it\nOn 12/04/2016 17:34, MetalliC wrote:\n\n@f205v at this moment mame.lst must be updated manually if set(s) was added or renamed.\nhowever, this is not place for some documentation in comments anymore, because this comments can be wiped out during some auto-regeneration in future.\n\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub:\nhttps://github.com/mamedev/mame/pull/759#issuecomment-208964604\n. \n",
    "stilett0": "\nthe emulation does not work, as the MB89374 DLC is not yet emulated - I have a datasheet, but not the programing manual.\n\nI've done some looking around for this myself last year, and it didn't leap out at me. It would be useful to know the actual name of its manual.\n. 0-wiz-0: Probably nothing to worry about, although we need to fix it with Travis-CI somehow. See:\nhttps://github.com/mamedev/mame/pull/262#issuecomment-129840191\nhttps://github.com/mamedev/mame/pull/280#issuecomment-129078321\n. For some reason I have a memory of this being an intentional choice by Aaron long long ago.\n. Let's not forget the smf idea for the fully virtual 3D MESS frontend. Need a graphics card? Slot it in. Type on your virtual keyboard and mouse. Plug in peripherals, then unplug them.\n...\nI could never quite figure out if he was yanking our chain :-)\n. Well the problem with such a proposal is traditionally we've attempted to stay out of the \"fancy fancy frontend\" business, so a lot of the \"3D MESS frontend\" idea is more at home in a spinoff or side project. So I don't want to spend long in this thread about it. What Andrew proposed however is fine.\nI don't know a lot about 3D scanning but I think Lord Nightmare or balrog know a smattering about it IIRC.\n. Prior work in this area is mostly closed-source, with a few exceptions:\nhttp://www.digitalcybercherries.com/\nhttp://www.mameworld.info/3darcade/index.html\nhttp://www.futurepinball.com/\nhttps://sourceforge.net/projects/vpinball/\nhttp://www.unit3dpinball.net/\n. Out of curiosity, does the AGEMAME layout editor written in Java still function at all, or has it all moved on since 2008?\n. okay. I found it over here and could probably get it to work with a 32-bit java runtime installed I expect: http://www.pembo.co.uk/2008/08/08/agemame-layout-editor-ale-v084a/\nThink that's the final version.\n. Once again, @u-man74 please stop being the go-between between MAMEDev and other teams. Just... stop. The outside teams will reach out to us if they feel the need, or if MAMEDev feels the need, MAMEDev will reach out to them. Your trying to \"interpret their wishes\" in particular seems to specifically be problematic, this isn't the first time. If you feel that it's such an issue that, say, GameEx improves their MESS handling, and communication with MAMEDev proper the only way, then it's up to users like you to impress upon an external developer or team the need to communicate with MAMEDev - it's not up to you to communicate on their behalf. If they don't want to communicate, then we can't do anything about it and neither can you. It will be up to them to do so, you simply can't force the matter.\n. Fact of the matter:\n- MESS is part of MAME now\n- any frontend not capable of handling all of the needs of console/computer emulation and configuration is now considered by MAMEDev to be poorly designed and outdated.\n- if a frontend wants to be arcade-specific, then that's up to them - they just need to stop saying that they fully support MAME or describe themselves as a MAME frontend.\n- if a frontend developer can't handle the updating this requires upon their frontend, then they've become used to the relative stability of the MAME command-line and INI settings over the last decade or so and have forgotten the churn of the early days as new features winked in and out.\n- the general plan requires, at least over the next few years, new INI settings and command-line settings disappearing and reappearing and adding and modifying much more rapidly then they used to.\n- So, as a frontend developer, get back used to the old days of churn. Monitor MAME closely - this isn't necessarily a MESS thing. If a frontend developer can't deal with the game of updates, then they may as well quit development now.\n- if a frontend developer has any problems with specifics (lack of exposed functionality) they need to reach out to us.\nGet with the program. :)\n. Coincidentally I've been investigating the history of this very option.\nIt appears that the development of the option was developed by MAMEPlus team in some of the following commits to their code, then submitted and added to MAME itself.\nhttp://mameplus.svn.sourceforge.net/viewvc/mameplus?view=revision&revision=264\nhttp://mameplus.svn.sourceforge.net/viewvc/mameplus?view=revision&revision=271\nhttp://mameplus.svn.sourceforge.net/viewvc/mameplus?view=revision&revision=272\nhttp://mameplus.svn.sourceforge.net/viewvc/mameplus?view=revision&revision=950\n... eventually crediting \"MAMEPlus Team\" (as well as MameSick of MAMEUIFX) in our changelog. Since that's a bit generic, (in our zeal for finding all major and minor contributors ever) I wanted to see who actually was responsible. I can't find the history of the option prior to MAMEPlus rev. 264, but it looks like I have some candidates for developers within their team\nAnyhow, that's all sidebar: if the feature has been removed, it's news to me. Possibly a casualty of the MEWUI merge, which as Arbee said is very WIP so we aren't accepting bugs on that yet.\n. Okay thanks eta. ;)\n. This is a little tricky because \"The Golden Age Arcade Historian\" saw it advertised in a September 1975 DRA Price Guide. However, most other advertising sources show it as being advertised in November 1976. I suspect it was actually released in 1976 and advertised as early as late 1975, but this is why I had it as 197? for now. http://mamedev.emulab.it/undumped/index.php?title=Meadows_4_in_1\nHowever, I guess I'll allow it. \n. For the record single commits for what is effectively a tiny typo fix are generally frowned on (though I have been violating this often enough), please try to batch these in larger groups as often as you can.\n. My major annoyance is there's no citations given at history.dat for things like release date, they don't list their sources.\n. @wilbertpol re: Neo Geo Pocket? :smile: \n. The code in question (mos6566.cpp) with that source header had modifications based off Frodo 4.1b source package as available from http://frodo.cebix.net as of 2002/01/02 - http://frodo.cebix.net/downloads/FrodoV4_1b.Src.tar.gz\nWe can determine this based on the comment of the original author (in MAME/MESS) robiza, who given those licensing restrictions decided to ask for special permission from Christian Bauer (cebix) to distribute code alterations based on Frodo under the MAME/MESS license of 2009: You can see permission asked and granted here in 2009 to distribute under MAME license: http://forums.bannister.org/ubbthreads.php?ubb=showflat&Number=53101\nrobiza's contribution was later rewritten by @curt-coder as of here in 2012:\nhttps://github.com/mamedev/mess-svn/commit/79997501592dd7f461d6632e29bd94aca1acc396\nmirror: http://git.redump.net/mess/commit/?id=516960a313b851d1931c40086f34010eba04bf20\nbut the credit to Christian Bauer remained.\nHowever, what @DopefishJustin is referring to - it seems what robiza didn't know is that in Frodo's CVS, Christian Bauer/cebix had relicensed Frodo to GPL 2.0+. This occurred on 2003/07/01: http://www.cebix.net/viewvc/cebix/Frodo4/Docs/legalmush.html?r1=1.1&r2=1.2\nsource: http://www.cebix.net/viewvc/cebix/Frodo4/Src/VIC.cpp?view=log\nor in other words Frodo 4.2, which is on the cebix.net CVS.\nSo all that needs to happen is a final review and sign-off by @curt-coder or someone prior to MAME 0.172 that the information gleaned from the Frodo 4.1b source is identical (or enhanced) in the Frodo 4.2 source that exists on the cebix.net CVS. (And maybe someday, cebix will officially release Frodo 4.2 in a package) - and then update the header in mos6566.cpp to reflect this by saying \"// license:GPL-2.0+\" and \"// copyright-holders:Curt Coder, Christian Bauer\" or something along those lines. And then legally, this code should be fine. \n\nAs Justin said, MAME 0.172 is intended to be the \"official relicense\", which of course has not yet been released. MAME 0.171 of course is still all under the \"original\" custom MAME license (in use from 2005-2016) So please don't upload MAME 0.171. As Justin says, current GIT is \"probably safe\" or (preferably) wait for 0.172, which is only another week away.\n@jmallach  you say there is other code with similar license situations? Can you point it out? Perhaps it was inadvertently missed, or there are similar situations. Please post any you've seen, thanks.\n. No problem, @jmallach . Thanks for the \"alley-oop\", @mmicko ! :smile: \n. It's far more likely we'll redirect this to a spin-off project called HBMAME. For now, regarding homebrew and hacks, MAME only focuses those that actually lived a life in the arcades. This fails to qualify.\nAttention @Robbbert :smiley:\nhttp://hbmame.1emulation.com/\n. So you've deleted \"megaduck\" from mame.list, ran \"make\" and it collapses in compile errors?\n. I never thought I'd see the day. Finally, someone willing to tackle typos and misspellings! My advice: start with targeting sourcecode comments first and foremost. Software lists and arcade game titles in the ROM definitions are far more frequently intentional.\n. @ajrhacker for future reference we're releasing on the last Wednesday of the month, with a feature-lock freeze for the preceding 48-72 hours\n. No one is saying you can't work on it, just that for now you can work on it and host it with someone like ProgettoSnaps.net :smiley: \n. > MAMEUI cannot be used as a basis for reporting bugs with MAME.\n\nThe problem must occur in normal MAME for this report to be considered possibly valid.\n\nThank you, Robbbert. :smiley: \n. Sure.\n. so who wins the $20? :smiley: (man, that was totally random...)\n. > While we're on the subject of the CD-i, it would be great if someone could reach out to Philips and ask them to see if they can dig up any documentation on the LEMM, CDIC, and any other CD-i related ASICs and DSPs that we currently black-box.\n... I thought you were going to try that.\n. if memory serves he's on VoidLinux and the only gcc packages it has right now are 4.9.3-4.9.4 based. Its clang is 3.8.1, dunno if that's any better.\n. @happppp as he said, he's using github.com, not a git client.\n. Google Translate suggests for Portuguese: \"Nenhum arquivo INI de categoria foi encontrado\" for \"No category INI files were found\" (yes, I know I added the \"were\"). Yes, I know it's not always a great translator. But just as a suggestion. So perhaps \"Nenhum arquivo INI de categoria encontrado\"?. Perhaps \"Recordes de MARP\" in that case?. ",
    "superctr": "You may be right. Upon investigating further, I found out that Downtown writes bit 7 to the channel status registers, which the other games do not seem to do. Going to do some more testing, and if it works, I will add the commits\n. After discovering bit 7 in the status register, I implemented it. This fixes the pitch in Downtown, and it did not seem to affect any other game I've tested so far.\n. I'm not sure exactly what you're suggesting. My intention is not to use as little hard drive space as possible, it is just to make it as easy as possible to change a value (all the values are in one file now and only one line needs to be changed)\nSo do you want me to either\n- Get rid of the enums and define the constants in the driver file instead\n- Go back to putting the divider value inside the enum (this would require a change in every source file whenever a value needs to be changed)\nI'm not concerned about the clock rates, they have been measured directly from the board from what I know. The clock dividers is what I'm talking about, the only way to measure themis though audio comparison.\n. Ah. I didn't mean to obfuscate anything. I can get rid of the enums and define the dividers inside each drivers' source file instead.\nThe internal divider was previously thought to be 288 but this is not the case, since using this divider value with the measured clock speeds causes incorrect pitch in the games that used a different value. My hypothesis is that there's a base divider that can be adjusted (increased), probably through pin configuration. As I wrote earlier I haven't found a register that controls it.\n. It does, and it has been measured. Part of the pull request I sent a few weeks ago involved using the measured clock frequency from the clock generator instead of using a multiple of the MCU or CPU frequency that was incorrect but happened to sound OK.\nI guess it could always be worth it to try measuring it again, in case no divider pins are found.\n. The effects from this commit are separate from the effect of improving\nthe sound.cpp resampler. Both when together will have the best output.\nOn Mon, Aug 22, 2016 at 5:15 PM, hap notifications@github.com wrote:\n\nI think interpolation belongs in MAME's sound core. Sarayan(OG) has it on\nhis evergrowing TODO :)\nOn Mon, Aug 22, 2016 at 4:39 PM, superctr notifications@github.com wrote:\n\nThis should improve the current HLE sound emulation a bit until the DSP is\nfinally hooked up... I'm still not that sure about the chip frequency\n(sample rate), it seems a little too low for a DSP but I won't touch that\nwithout more knowledge.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/1291\nCommit Summary\n- qsound: add sample interpolation\n- (nw)\nFile Changes\n- M src/devices/sound/qsound.cpp\n  https://github.com/mamedev/mame/pull/1291/files#diff-0 (52)\n- M src/devices/sound/qsound.h\n  https://github.com/mamedev/mame/pull/1291/files#diff-1 (3)\nPatch Links:\n- https://github.com/mamedev/mame/pull/1291.patch\n- https://github.com/mamedev/mame/pull/1291.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1291, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AI11VRwTnI4pCxsoq7WYkvtPnxJmaR-2ks5qibSSgaJpZM4Jp8Hz\n.\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Well the interpolation is done to prevent aliasing by the resampling done\nby the chip itself (like playing voices at different frequencies). If all\nsound chips only played voices at a single frequency, this would be the\ncase.\n\nOn Mon, Aug 22, 2016 at 6:18 PM, hap notifications@github.com wrote:\n\nA good resampler will interpolate the stream(waveform). If you think about\nit, interpolating twice (before mixing channels and after) doesn't have a\ndifference in the end.\nOn Mon, Aug 22, 2016 at 5:49 PM, superctr notifications@github.com\nwrote:\n\nThe effects from this commit are separate from the effect of improving\nthe sound.cpp resampler. Both when together will have the best output.\nOn Mon, Aug 22, 2016 at 5:15 PM, hap notifications@github.com wrote:\n\nI think interpolation belongs in MAME's sound core. Sarayan(OG) has it\non\nhis evergrowing TODO :)\nOn Mon, Aug 22, 2016 at 4:39 PM, superctr notifications@github.com\nwrote:\n\nThis should improve the current HLE sound emulation a bit until the\nDSP is\nfinally hooked up... I'm still not that sure about the chip frequency\n(sample rate), it seems a little too low for a DSP but I won't touch\nthat\nwithout more knowledge.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/1291\nCommit Summary\n- qsound: add sample interpolation\n- (nw)\nFile Changes\n- M src/devices/sound/qsound.cpp\n  https://github.com/mamedev/mame/pull/1291/files#diff-0 (52)\n- M src/devices/sound/qsound.h\n  https://github.com/mamedev/mame/pull/1291/files#diff-1 (3)\nPatch Links:\n- https://github.com/mamedev/mame/pull/1291.patch\n- https://github.com/mamedev/mame/pull/1291.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1291, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/\nAI11VRwTnI4pCxsoq7WYkvtPnxJmaR-2ks5qibSSgaJpZM4Jp8Hz\n.\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1291#issuecomment-241457249, or\nmute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/\nAI11VcLzSULCEAL43pDDocKMVUpmKpNNks5qicT-gaJpZM4Jp8Hz\n.\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1291#issuecomment-241466569, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABGw8TR69sYuX6hG4yuynUs4MXiWs6mOks5qicvkgaJpZM4Jp8Hz\n.\n. I did a small comparison using the Tetris The Grand Master soundtrack (only one I had at hand that sounds like it's taken straight from the PCB), and to be honest, the difference actually seems rather small between the OST, current MAME and my PR (that order in the recording below). The 'QSound' effect is rather noticeable though.\n\nhttps://dl.dropboxusercontent.com/u/25073603/tgm%20comparison.ogg\n. ",
    "dnlopez": "I am running on a CRT, yep. (But even on an LCD, might it still make sense to use -resolution to choose between different refresh rates, albeit all at the panel's native resolution? I had a little go with an LCD panel once and I think I remember changing it between 50 and 60 Hz).\nI've tested this on Linux (Arch, 64 bit) only.\nDon't have a Mac unfortunately, if someone else could test there I'd be very grateful.\nOn Windows (7, 64-bit) I've just tried to build it and hit a snag during linking, though I'm not too concerned about that just now (\"undefined reference to `memory_array::memory_array()'\" just in case anyone has an offhand idea). However, looking at the object files I've ended up with I strongly suspect it was building the native Windows OSD, instead of the SDL one. I did use the buildtools.7z command environment from mamedev.org, a fresh Github checkout, and uncommented \"OSD = sdl\" and \"USE_SDL = 1\" in the makefile. Is there any particular guidance around for building the SDL version on Windows nowadays? I expect the vast majority of people use the native Windows build don't they. However I did just find a Windows sdlmame 0.160 on an emulation website and it behaves exactly the same in its 'unfixed' way to what I was getting on Linux (with respect to the modes and scores listed in the console and then the eventual refresh rate I get, though that's a seperate issue).\nI came to the reckoning that depth isn't used by grepping the source tree for \".depth\" and \"->depth\" and finding nothing that looks like it is reading the value back out (there's maybe 20 matches, mostly referring to \"depth\" members in other structures than the 'osd_window_config' where this one is).\nI understand that the SDL stuff is treacherous to touch, and save that discussion for the other PR though I'll try and get this sdlmame building on Windows first.\n. I've built sdlmame on Windows now, so ignore all that stuff about build problems above. (Unless you were going to say, are you sure you're changing the right copy of the makefile, not the wrong one - the Linux one actually - in an adjacent directory. God, I think the rays from this monitor are affecting my mind, you know.)\n. Yeah that would also make sense. I could add a bit more code so it's able to deal with any of these:\nx\nxx\nxx@\nx@\nIn which case I should do the same in the Windows OSD code as well (the function I've changed already is get_resolution() in src/osd/sdl/video.c, but there's a practically identical function for Windows in src/osd/windows/video.c). Now the commit is getting bigger though and the Windows version definitely doesn't do anything with a depth value.\nUltimately it should be compatible with the -showusage text, which says\n\"format is x[@] or 'auto'\"\n. OK, I've added another commit.\nIn both Windows and SDL builds, any of those 4 formats are parsed and any given values are stored into the corresponding osd_window_config fields. Any omitted values default to 0 (as happened before. Presumably other code later on does whatever's reasonable in the face of these zeroes).\nTested on Arch Linux (SDL Mame), Windows 7 (SDL Mame) and Windows 7 (Windows Mame), by manually launching it with various different command lines. (On the SDL versions you still don't actually get the refresh rate you asked for but that's due to the SDL thing I'll come back to. You can still get some indication that it's read your input correctly by looking at the stuff that's printed up by -verbose.)\n. Ah, that's a shame. I normally use Xfce 4 myself. I just installed KDE to have a look and I see the problem. Using -switchres fixes it. But worse - if you actually change the video mode as well by passing -resolution then on returning to the desktop the display totally craps out, resembling a broken mirror (not my pic), and that is fixed only by toggling the compositor off and on (Alt+Shift+F12). Good thing you reverted that.\nI also found this discussion amongst the SDL folks which acknowledges that \"proper fullscreen on Linux is broken except when the resolution is unchanged\", and feel like it's a lost cause.\nI think I'll try and write a generic utility instead to change the desktop video mode, run a program, maximize its window with the appropriate WM hints and all that, then change everything back at the end.\n. ",
    "andrea-petrucci-1975": "ok, close it, i'll try to do a new correct pull request\n. ",
    "meesokim": "I've made another a PR based on startaq's comment. so I'd like to close it.\n. Yes, I've made an issue with ROM binaries and the driver source code with some modified files.\n. I will close this merge request.\n. I already made a issue about this issue but I will make new clean request for your convenience. Also I will send the ROMs and some tap files.\n. Already merged.\n. It seems to be reasonable to change the code.\n. I strongly support MAME team's decision.\n. It's done. Thank you.\n. Yes, you are right. it can be removed.\n. It works fine. we don't need m_strobe variable any more.\n. This line should be removed.\n. Good comment!. Absolutely works. Removing slash is much better in my test. I will change it. Thank you.. ",
    "SailorSat": "\n\n\n. try again please.\n. Just tested the jaleco games - they work fine without the custom handlers.\nI even managed to link both OverRev and SuperGT 24h up.\n. oops :). ",
    "Cowering": "same on windows gcc 5.1\nOn 6/27/2015 5:39 AM, system11b wrote:\n\nHi, compiles now with the latest commit, one warning remains:\nIn file included from \n../../../../../src/emu/netlist/solver/nld_solver.c:37:0:\n../../../../../src/emu/netlist/solver/nld_ms_gmres.h: In member \nfunction \u2018int \nnetlist::devices::matrix_solver_GMRES_t::solve_ilu_gmres(double/, \ndouble/, unsigned int, unsigned int, double) [with unsigned int m_N = \n1u; unsigned int _storage_N = 1u]\u2019:\n../../../../../src/emu/netlist/solver/nld_ms_gmres.h:390:5: warning: \n\u2018m_y$\u2019 may be used uninitialized in this function [-Wmaybe-uninitialized]\ntmp -= m_ht[i][j] * m_y[j];\n^\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/mamedev/mame/pull/228#issuecomment-116002722.\n. My fedora22 5.1 is about two weeks old.. time for an update...\n\nOn 6/27/2015 12:03 PM, R. Belmont wrote:\n\nInterestingly this is fine on latest Fedora 22 GCC, which is 5.1.1 \nfrom about a week ago off the branch.\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/mamedev/mame/pull/228#issuecomment-116101026.\n. PCM sound in the PICO is 'custom'. Steve Snake told me so many years ago \nwhen he added PICO to Fusion.  IIRC from our talks, the PCM is tested \nbest by playing title and startup music for the Mickey Mouse game. \nMickey sound used to be horrid in MESS, but Steve finally got it right \nin Fusion. He would never tell me the 'fix'. I think he ended up selling \nFusion core to someone else to be used in a commercial emulator and it \nwent under NDA.\n\nCow\nOn 8/20/2015 4:44 PM, Jonathan Gevaryahu wrote:\n\nYou sure it doesn't have a fifo? The decap shows it has a lot of crap \non die one of which could be a fifo of some sort...\nhttp://siliconpr0n.org/map/nec/d7759c/mz_mit20x/\n...although i was under the impression that the two dark areas were \nroms of some sort?\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/mamedev/mame/pull/288#issuecomment-133187162.\n. On 8/21/2015 3:51 PM, ValleyBell wrote:\nMy current implementation \nhttp://vgm.mdscene.net/programs/creators/MAME0164_bin64_2015-08-14.7z works \npretty well with Mickey no Boku wa Meitantei and Sonic's Gameworld (J).\nI can split the changes to the uPD7759 and put them into a separate \ndevice/file. Or I could integrate them into segapico.c, that's what I \noriginally did. (before I read the comment about the FIFO in the 7759 \ndriver)\nYou really should remove those misleading comments ASAP to avoid \nfuture confusion.\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/mamedev/mame/pull/288#issuecomment-133560932.\n\nWhy is it segapico.c and not just pico.c ?\nI guess Mickey no... is same as Mickey's Blast Into the Past (U), as \nthat is the one I was talking about.\nCow\n. ASCII porn FTW...\nOn 9/19/2015 2:13 PM, Ramiro Polla wrote:\n\nResult from the printer's self-test can be seen here: \nhttps://youtu.be/l20V7f2sM8c\nNow someone needs to implement the noise from the stepper motors and \nthe printhead so that we can get a full dot-matrix-printing experience! =)\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/mamedev/mame/pull/335#issuecomment-141699903.\n. Steve is still around.  He recently bought the rights to Circuit Cellar \nback from some place in the Netherlands.  He seemed friendly enough when \nI chatted with him in the early 80s at some conventions.  He has made \nthe book available at \nhttp://www.scribd.com/doc/13388965/Build-Your-Own-Z80-Computer and I'd \nbet he would gladly give up the original and/or updated ROM. Back in the \nearly 90s, BYTE subscribers got an offer for a CD with the complete BYTE \nindex up to that time (1992-3).  IIRC it had notes about the original \narticle, and any 'important' followups such as a revised review of a \nproduct. I don't know if the index had updates to previous projects (or \nthis separate book). I do know that Steve would do updates if you msged \nhim on BIX with a bug.\n\nJust my remembrances, hope it helps someone\nCow\n. Seeing this reminded me of something I saw while playing with GCC flags \nbefore we switched to 5.2.   I am looking at my (gasp) paper copy of the \n6809 user manual I used in college and there is no ASL16 (among others) \nin the manual. ASL16 is in 6809 baseops file though.  It is the reason \nthe GCC pragma override is in those files. Shouldn't the extra opcodes \nbe broken out into whatever CPU variation has them (konami?)?\nCow\nOn 12/20/2015 1:59 PM, Jean-Fran\u00e7ois DEL NERO wrote:\n\nHi,\nThere is something strange with the clock setting into the 6809 \nemulation :\nThe MC6809 chip have an on chip oscillator to generate the E & Q \nclocks E & Q frequency = Crystal Freq / 4 (Into the MC6809 / EF6809 \ndatasheet : \" On-chip Oscillator (Crystal Frequency = 4 * E) \"\nThe MC6809E doesn't have this on-chip oscillator and the E & Q clocks \nneed to be provided from an external circuit There is no internal \nclock divider in this case\nThe problem is that the clock divider is set to 4 for the MC6809E and \nto 1 for the MC6809 into m6809cpp (see the m6809_device and \nm6809e_device constructors) For me the MC6809 divider should be set to \n4 and the MC6809E divider to 1\nTo have the correct software speed execution into the Squale driver, i \nhave to choose the MC6809E CPU But the Squale use a 6809 CPU with an \ninternal oscillator (EF6809P) The 35Mhz clock input was checked on the pcb\nWhat do you think about this ? Am i missing something ?\nBest Regards,\nJean-Fran\u00e7ois DEL NERO\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/mamedev/mame/issues/513.\n. On 8/5/2016 9:16 PM, J\u00fcrgen Buchm\u00fcller wrote:\n@cuavas https://github.com/cuavas I'm pretty happy with patching \naround to have mame compile in my work environtment.\nI didn't know that templates would be evaluated twice, as macros did.\nI'll close this PR because it really doesn't matter to me if I have to \npatch around gcc shortcomings or not.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub \nhttps://github.com/mamedev/mame/pull/1189#issuecomment-238000761, or \nmute the thread \nhttps://github.com/notifications/unsubscribe-auth/AI0tT22hsl6DweCtH5TF40bYCH87VCNxks5qc-5mgaJpZM4Jc7tE.\nI guess I'm missing something.. who cares if templates are evaluated \ntwice? I'm assuming you mean during compile time! What would be the use \nof having the feature if you had to make a decision at runtime?\n\nCow\n. I'm not looking at the dumps right now, but someone on the list dumped \nit using an expansion bay with the \"cart start\" line taped over (same \nguy did Alphabet Zoo too). I did the same thing with my coco3 with tape \non the cart itself. They matched, so it got the [!].   The 32K dumps \nthat are 32K-256bytes are the only ones  that still need checking AFAIK \nand even those might be clean now as I have not updated GoodCoCo in many \nyears.\nCow\nOn 8/22/2016 6:47 AM, npwoods wrote:\n\nIn the interests of full disclosure, while I have a Canyon Climber ROM \n(called a \"program pak\" in the CoCo) world packed away in my basement, \nI did not dump the ROM.\nThe difference between the old dump and the (so-called) alt dump is \nthat the alt one worked and the old one didn't. Running them side by \nside, the old dump ran some code that jumped into never-never land and \nthe alt one didn't. Generally the 8k CoCo program paks were free of \nthe funny business about protection or even things like mirroring.\nThat is why I raised this disclaimer on this pull request - truthfully \nI'm highly skeptical about whether the old dump was really verified \nfrom multiple sources, but someone out there made that assertion.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub \nhttps://github.com/mamedev/mame/pull/1285#issuecomment-241389438, or \nmute the thread \nhttps://github.com/notifications/unsubscribe-auth/AI0tT-O795LX70AMRfC5opScLrfcINE_ks5qiYxqgaJpZM4JpUKj.\n. Occam says Tandy did a bad batch of carts because I seriously doubt I \ndumped the exact same bad cart as the other guy (who name I just can't \nremember).\n\nCow\nOn 8/22/2016 7:13 PM, npwoods wrote:\n\nThe technique that Cowering describes is exactly how these sort of \ndumps were traditionally done on the CoCo, so it sounds like what you \ndid makes sense. That said, it is hard to reconcile this with the fact \nthat the old code seemed to be nonsense. Here is a MAME trace from \nwhere the old dump crashes:\n|C0A4: LDX $2,U\nC0A6: LEAX D,X\nC0A8: STX $2,U\nC0AA: LEAU [$15,U]\nC0AD: ORCC #$9D\nC0AF: PSHU PC,S,Y,X,A,CC\nC0B1: ADDD $11\nC0B3: SUBA $DD\nC0B5: CMPA $8E\nC0B7: STU $E2\nC0B9: STX $010D\nC0BC: ANDCC #$EF\n010C: JMP $0307\n0307: NEG $00\n0309: NEG $00\n030B: NEG $00\n030D: NEG $00|\nThe ORCC and the PSHU are fishy; #$9D is a weird value to OR to the CC \nregister, and the user stack is rarely used.\nHere is a dump from the \"alt\" dump (which doesn't crash):\n`C0AA: LEAU $15,U\nC0AD: DEC $8D\nC0AF: BNE $C0A4\nC0A4: LDX $2,U\nC0A6: LEAX D,X\nC0A8: STX $2,U\nC0AA: LEAU $15,U\nC0AD: DEC $8D\nC0AF: BNE $C0A4\n(loops for 90 instructions)\nC0B1: ADDD #$0180\nC0B4: STD $91\nC0B6: LDX #$DFE2\nC0B9: STX $010D\nC0BC: ANDCC #$EF\n010C: JMP $DFE2\nDFE2: JSR $C411\nC411: PSHS U,B\nC413: LDD $99\nC415: ADDD #$0015`\nThe only difference is that the LEAU $15,U is no longer indirect.\nWhile I don't doubt Cowering, everything points to the old dump being bad.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub \nhttps://github.com/mamedev/mame/pull/1285#issuecomment-241589643, or \nmute the thread \nhttps://github.com/notifications/unsubscribe-auth/AI0tTyy_bMNlzzCEQBElwgbc5v97DCBWks5qijsOgaJpZM4JpUKj.\n. Yay, that will get rid of several more ODR errors that LTO throws.\n\nOn 10/10/2016 4:45 AM, npwoods wrote:\n\nAlso a note - in a separate branch, I've prepared changes that merge \nthe 6809/6309/Konami disassemblers into a single module. I'm keeping \nthat separate from this branch because I don't want to increase the \nfootprint of this changeset, and on top of that I want to keep the \nKonami changes (which actually alter the behavior of the disassembler \nwith some bug fixes) distinct.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub \nhttps://github.com/mamedev/mame/pull/1317#issuecomment-252584633, or \nmute the thread \nhttps://github.com/notifications/unsubscribe-auth/AI0tT5vcyUJtvlnpaNpapUK3U98oU-Zyks5qyhcxgaJpZM4JtVQ6.\n. On 10/22/2016 2:33 PM, Scott Stone wrote:\nI request that we please wait until Fabio gets a chance to look this \nover and until after release coming up.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub \nhttps://github.com/mamedev/mame/pull/1544#issuecomment-255552285, or \nmute the thread \nhttps://github.com/notifications/unsubscribe-auth/AI0tTyTcDme2VwcD6a6WnBDRSU3HzSKHks5q2nMwgaJpZM4Kd9mz.\nThe V.Baby should be split out regardless of anything else. It is a \ncompletely separate console. I think when I was first entering all the \nserial/model#s, I kept the files together so I could cross ref things a \nlittle easier, but splitting it is 100% needed.  BTW, the vsmile xml has \nthe lines\n\n V.Smile Motion \n To be split into a separate list \nAll motion carts will run fine on the original, but perhaps a few \nfunctions will be shown on screen differently without telling the kid to \n'move' or 'jump'. The motion carts can just read the 'extra' data from \nthe wireless controllers, kind of like a wiimote. I have all my V.Smile \nin storage right now, but IIRC there is a list of things 'taught' and/or \n'supported' on the back label of each game. If you see things like the \nV.link symbol, the game can work with the V.Link USB stick, but does not \nrequire it.\nCow\n. ",
    "angelosa": "256x256 definitely doesn't make sense as far as NTSC screen resolutions are concerned. But I don't understand either why you bothered in adding the comment instead of changing the affected line.\nIMHO it's probably just 256x240.\n. As things stands, I'm prone to think that the current MAME categorization system isn't in any way adeguate for 2016 standards.\nRandom examples:\n- There's no way to tell that sf2j is a Japanese version and sf2u is US other than the description tag. Might be a decent option for front-ends: \"show European released games only\" for example.\n- The parenthesis field can be automated, instead of having \"Set 4\", \"Hong Kong bootleg\" or \"931101\".\n- How many macros do we have for building systems anyway? Adding yet another optional field just for localized name and you'll get an even fancier macro-hell-scheme, which makes managing even harder.\nBottom line: I don't like software list / XML system either for personal tastes (namely being unreadable by human eye in raw format), but it certainly treats these \"optional\"  things like non-romaji alphabets just well. \n. Best idea I could come up with this is to make a delegate for ESC input pressed, just like F3 actually calls machine_reset. \nAssuming that an output is sent to a port you would join the two events together (so you shut-off MAME after the event is actually triggered). \nOh, and I guess you need a \"panic\" button mechanism (another ESC button press?), in case that machine fails to actually shut off!\n. Any kind of open source & loseless video codec, that is better than our current heavyweight raw codec as option for -aviwrite or video playback.\n. Going the other way around, i.e. improve the artwork system then merge into master\n. Dagarman: Do another commit in the pull request, it'll give a \"stash\" pull request option where the merger can edit the commit message itself.\n. imho these should be proper devices, with own memory maps, instead of being glued into Seibu SPI address space. \n. Oh, that's not a novelty with Seibu.\nThey did with Metal Freezer / Dark Mist, same deal with the SEI300 a.k.a. the CRT Controller. \nI've resolved back then by giving custom write member interfaces (write_alt / write_xor iirc), since it's the best place portability-wise.\n. IPT_SLOT_STOP1 thru 3 and IPT_GAMBLE_BET should have their own default in MAME, no need to remap (iirc will also cause override if user mapped them thru the global UI input setting, will find them remapped to these defaults).\nAnd if the unmapped buttons doesn't do anything might as well be marked as IPT_UNUSED.\n. fyi Seibu COP is suspected to have ROM overlays, i.e. data that magically changes via an unknown feature of the COP.\nAt least Seibu Cup Soccer do it (i.e. trying to enable Debug Mode on real HW via editing the ROM itself is known to fail)\n. imho a design flaw tho: if you set a button with a xbox 360 / one controller, by unplugging the given pad then trying to run MAME it first gives \"n/a\" in the global settings then resets to default automatically when emulator is closed for whatever reason. \n. Arbee, happens with laptops, you don't have the need to have a joypad attached all the time. \nimho it just feels to be an option declared in mame.ini\n. Heated Barrel uses bits 0-2? In what context?\n. Ok, fair enough.\n. Only English please.\n. jalmah.cpp also uses the same chip apparently (one with scrolls and paging)\nMaybe acommand.cpp/cischeat.cpp too?\n. I guess I'll just apply this one in about 10 hours from now, if nobody has any objection.\n. I guess they made text editing stuff and the like, so why not?. You can apply this patch and remove the IVS part I don't care.. There are diagrams in the uPD7810 manual which shows that the CRx registers are 8-bit wide.\nMaybe m_tmpcr is supposed to contain an aggregated result at this point?. This needs to be flagged with a TODO at very least, smells highly unlikely bitwise (also because it's not following the player 1 defs). ```\nMCFG_SCREEN_SIZE(320, 256)\nMCFG_SCREEN_VISIBLE_AREA(0, 319, 8, 247)\n```\nvblank definitely can't be triggered at 224, should rather be at 248 according to the screen def. And c-chip is probably in between 248 and 8 and assuming there isn't a clear irq signal sent from one of the command latches.. This is called superimposition effect, something that MAME barely supports for laserdisc games.. range3 is an intentional naming: it follows up what was this function name before tilemap rewrite, it's not referred to the layer name itself.. This is a change in functionality, do you have proof about this?. This was left intentionally. \nWhat's the MACHINE_UNEMULATED_PROTECTION part you don't understand?. This is 0x400 not 0x800 (also can be safely allocated as shared pointer I guess). Care to give an explaination of this?\nIf it's optimization then mem_mask is completely pointless because this is a 8-bit handler.. I thought the whole point of templatizing stuff is to avoid calling switch-cases like this.\nIn a nutshell this is ugly spaghetti code.. If it controls priority then it's not flip :). This one now actively changes implementation as stated before.\nAre you sure it's like this?. Overlooked it, github sucks lol. Colors negatively affects gameplay, like some tiles are shown as white dragon but they aren't.\nThis should be marked MNW.. http://mamedev.emulab.it/kale/fast/files/0001_6987612186.png. Additionally this stuff should be internalized and optimized from c116 itself, we currently have 5 different implementations of the same identical code. . ",
    "RJRetro": "p1pkin, I find that insulting.  I simply saw every other person who'd added something to the code also add their name.  I only did what I thought was customary in that regard and meant no disrespect.\nThe goal of this contribution was convenience.  The layout of the buttons is not always so obvious and in some cases, even confusing.  Hope to see something implemented soon.  Love the xml idea.  For now, I'll consider maintaining my own branch.\n. @balr0g I thank you for your information and am I happy to have had my submission even considered.  I like what @mamehaze proposed and in the future, would love to possibly help with the creation of some xml configs.\n. @mr-t-guru yeah, I feel a bit embarrassed about putting my name in now lol I apologize to all for my arrogant assumption.  A quick google search shows labeled buttons for Double Dragon 1 and 2.  Double Dragon 3 did as well, shown on the Bezel.  Combatribes, some did, some didn't.  Wrestlefest is the only exception it seems.  It had very detailed instructions that are not practical to include.  I haven't included the images since this has been closed.\n@balr0g I wouldn't think a notation of whether or not they are labeled would be necessary.  Just have the labels if they exist and don't otherwise.\nEdit:  The Mortal Kombat and Street Fighter drivers have the buttons labeled.  Granted, these are five-six button games.  So games with less buttons aren't as annoying to setup without the labels but it can still be an obnoxious guessing game.\n. @mr-t-guru nice compromise.  I wonder tho, would it work if the order of the buttons was different per-machine?\nEdit: I've also removed my name from copyrights and removed definitions for Wrestlefest in case it's decided to reopen this.\n. I see, that makes sense\n. ",
    "ensjo": "Hello, @mixxmaster, is there something I should do? Is the non compilation due to my code? I can't see anything wrong in it.\n. ",
    "JoakimLarsson": "Glad to hear that! :) I realized that a few other feature hashes slipped in the request unintended so I will need to figure out a way to modify the Git Hub pull  request and remove those and fix the build issues. Or is it simpler to make a new pull request?  I can provide the ROM:s by mail, they are probably copyrighted by Emerson now since they acquired Force Computers at some point.\n. Here is the ROM set in a .zip file password protected with 'xyzzy':\nhttps://drive.google.com/file/d/0B685nj_1DkduM3VUb3pDQ055Q3M/view?usp=sharing\nLet me know how/if it works\n. Yeahh, I'll read it thoroughly at all times but the first, maybe I ended up on a blacklist with that user name Bouncer?! We'll see.\n. I just include this in the main pull request for the driver. I haven't been approved at the forum yet to discuss the distribution of layout and the board in general but as soon as I can I open a thread there \n. I probably did this wrong, I got some other peoples commits in when I rebased the pull request, maybe I should make a new clean one?\n. I fix this and re-issue the pull request once I got qt5 to build from HEAD\n. The upd7201 that is already somewhat supported in z80dart.c supports some of the synchronous features of SCC and is register compatible with SCC rather than the DART. I have two upd7201 on a Mizar VME board I am looking at right now and will add more missing features, this time for upd7102, to z80dart.c unless someone objects really soon. :)\nBtw, should I do something about the failing AppVeyor? Where do I find info on the problem?\n. No problem, I'll split out the SCC and UPD7201 parts in a new driver. \nBtw the Mizar board doesn't seem to need new 7201 code, it just setup some synchrounous registers while at it which the current emulator code ignores and then open up a prompt asynchronously. So I can submit the Mizar board driver independently.\n. I have looked around a bit for other devices supporting synchronous modes and I found 8530, 7201, 68561 and 6854. There are probably more. The mc6854.c seems to have an SDLC like implementation so maybe we can move that up to a generic place like diserial.c and derive it from there? I am not suggesting doing it right now but just outlining the code structure a bit of the new driver\n. ok. I am working on the z80scc support right now as separate device driver. I am thinking of splittin out the z80sio aswell so both z80dart and z80scc can inherit it avoiding all that cut and pasting which is always a problem in the end. Should have something in a few days, unless distracted by realities\n. Created tow new devices for z80sio and z80scc and used them instead of the z80dart. Also reverted the z80dart. Please review.\n. No problem but it didn't build for me for some other reason I think so I hope I got it right. Got this message:   File \"/home/joakim/work/mame/src/build/makedep.py\", line 290\n    sys.stdout.write('      MAME_DIR .. \"src/devices\",\\n')\n    ^\nIndentationError: unexpected indent\n  File \"/home/joakim/work/mame/src/build/makedep.py\", line 290\n    sys.stdout.write('      MAME_DIR .. \"src/devices\",\\n')\n    ^\nIndentationError: unexpected indent\n/home/joakim/work/mame/scripts/genie.lua:1311: attempt to call a nil value\nstack traceback:\n    /home/joakim/work/mame/scripts/genie.lua:1311: in main chunk\n    [C]: in upvalue 'builtin_dofile'\n    [string \"premake = { }...\"]:74: in function 'dofile'\n    [string \"_WORKING_DIR        = os.getcwd()...\"]:41: in function '_premake_main'\n. ok, I think I figured it out and moved the devices to the right place. \n. Ahh, multiple definitions of SCC8530, I will fix this, just a moment\n. Should be ok now \n. I hope I did what you asked for?\n. Thanks both if you, I never got my Mingw compiler to install properly, but I will give it another try.\n. u-man, I think you are talking about \"fixing\", or hiding, the lack of proper emulation with graphic post processing, eg shaders/filters, and that is fine. I believe that this proposal is about to improve the actual emulation, not hide the short commings of the current. For instance the vobblyness of vectrex is due to the game code is not zeroing the deflectors often enough and is very game specific. Also there are other shortcomings of the Vectrex you simply can't fix in postprocessing, like the contamination of audio cirtcuitry by leaking frequencies from the deflector DACs as demonstrated in the Bad Apple demo for instance, and the 50/60 Hz humming etc. \nNow imho, this will take longer time than adding a couple of filter/shaders/wav files but will be available for all drivers simultaneosly in a cleaner generic way. In the meantime I believe that what RB proposed in https://github.com/mamedev/mame/issues/389 would work also for vector machines so you can have driver specific shaders instead of driver specific cover-up code in the core.\n. No need to apologize, it's merrily my opinion, MAMEdevs might decide that the right thing to do is to draw a line in the sand and say that this is the best we do right now awaiting Moore's law to allow for improved accuracy. Your proposals regards filters/shaders which in my mind belongs to the frontend while this is a core issue and the Vector renderer is in between I believe. Ideally the post processing is done on top of the vector renderer so it can be clean from filter/shader code so you can add your driver specifics separately. \nThe buzzing (30Hz as base actually) is available on all first generation Vectrex as soon as you turn them on, it is a PCB design flaw that is well known: https://en.wikipedia.org/wiki/Vectrex#Sound. All I am saying is that it is not something you add statically since the buzzing frequency follows the graphics rendering.\n. > :) From quick glance, some positive criticism \n\n1) Please add proposed open source license on top of the file, like how other drivers have it. \n\nAhh, yes, will do, just forgot\n\n2) what is the MSC exception for? +#define FUNCNAME PRETTY_FUNCTION \n\nIt is a GCC extension that also shows the class part of the method name, convinient when same method exists in a number of classes. I believe it doesn't exist in VC++, but  I dont know. \n\n3) If hardware is very similar to eachother, you may put them all in the same class, no need for 3 separate classes. If one machine has a device the other one has not, you may use optional_device\n\nThey are actually quite different in the details, they use different CPU types, 6802 for these later ones, and different memory mappings, different display mapping and CRT, different keyboard hookup and full keyboard. The last one not included yet is based on 6809 and boots OS9. The similarities are only the PIA:s and the 6800/6802. However I am no C++ guru so I also try to stay away from comlexity and focus on functionality, but by all means hint me down :) \n\n4) No need for empty driver inits/machine reset/start\n\nWill take those away until needed, they just followed from the previous driver I wrote.\n. Will cleanup the scc driver and add some more support later when I submit the new MVME147 driver I am currently working on. It requires BRG support and I know it also wanted for some Apple and Sun-3 drivers.\n. ahh, ok I'll map it in. I think the 5386 will be more of a headache since it is less automated than the 5390, the old ads talks about 4000 vs 2500 lines of code for a driver which is a funny comparison but make me thinks that the device is bit hairy\n. You are right I realized that after I wrote my comment, I'll take a look at some point, now I am first going to figure out how to hook in the DMA controller, looks a bit intriguing with all the clocks in burst and normal mode, I think after checking out the esq5505 driver, but certainly doable once I figure where to get those values.\n. One step closer to becoming testable. \n. I will not have time to write the SCSI controller device at the moment but the board should be complete as to interface through the floppy interface. I can provide ROM:s for anyone that have time to test it or I can remove the pull request, just let me know.\n. U got mail :)\n. There are still plenty of stuff to add to the board but the terminal works and it is useful.\n. Ahh, I didn't do the full build this time, will do that forwards :)\n. I have another second rom set for another board cooking that I can add to this request shortly\n. Damn, I just saw that the starfall behind the space ship disappeared and it was there in 174, let me check it out\n. Plan is I'll go over the  SCC driver once more when I have finished the DUSCC driver with interrupts and DMA support. The fix i  did still has a problem if the baudrate is changed mid-bitstream accoring to spec so I need to figure out a good way how to postpone the change until the next *_complete call\n. Thanks, I'll take a look\n. Related to this regression http://mameload.mameworld.info/hk68v10-diff.png for this pull request https://github.com/mamedev/mame/pull/1128 \n. There are two modes for upper only and lower/upper case. Normally there is just upper case regardless of SHIFT but by pressing Ctl-P you enter lower/upper case mode and then you get all lower case unless you press SHIFT then you get upper case. Pressing Ctl-P again gets you back to upper case only. It seems to work as expected but maybe the configuration could be improved?\n. Ahh, ok, let me swap them and get some improved support for the natural mode\n. There are all good intentions I think just a bit undocumented and it is really hard to know which drivers are good and which are bad when I look for examples. \nI think a list of role model drivers would help contributors, a tag in the header maybe which states in what respect a driver is 10/10, because I don't think there is a golden one that is great in every aspect and also is using all interfaces. Then it would be easy to grep for \"TAG:KEYBOARD\" or something. Just an idea.\n. Wikipedia uses tagging to flag pages which is good or needs attention btw\n. True, there could also be only one role model driver for each interface or something, but I get your point\n. The Natural Keyboard is very sluggish, I need to press a key several seconds to get a response. I can't use Ctl-P to go between upper and lower/upper case modes either. Hope the configuration is correct though \n. Intention is not to mess with logerror, is there a standard format? I redefine it as printf because there is more control in the console window than in the debugger log window, like using 'less' and do cut & paste\n. I'll try it OG and see if it is as useful, thx \n. Right, but also for skeletons?  I just wanted it in so it will follow the flow of core changes not be a part of main build yet, but it might have to then. I will add it\n. Reason was that I need to write the Rockwell device or at least mock it and it will take a while longer\n. I had no timekeeper image so I disabled that and compiled sun2, sun3 and sun4 drivers and tested it on several variants in these drivers without noticing any problem. However I have no access to a bootable disk. My feeling is that it may even work better though, I'll fix whatever problems arises, guess tafoid has set up the regression tests for these?! I could see some changes in the way the internal BRG was set up, it got baud rate values now in places that before was 0, can only interpret that as good...\n. And of course the hk6810 and mvme147 boards were tested and still works\n. I checked again and sun2_120, sun3_50, sun3_80 and sun4_75 all can detect their keyboards\n. I am more curious over extensive use of interrupts once the OS is up and running :)\n. Fifos are not fully studied and implemented yet, this will follow next. Is the Indy roms same as for Mame 149? Or I might not have it, but I'll do a write up on the fifo's anyway and will look at the Indy driver\n. It may also be that FIFO interrupts are not there, I'll check later this week, travelling until friday atm\n. I had a quick check and this is definitely something that the tx fifo will fix, I add it in same fashion as in the scnxx562.cpp. There is a dependency on the variant also, the NMOS, CMOS has only 1 Tx slot but the ESCC has 4 tx slots, it is not what is the bug but the tx fifo will fix it\n. I think JD did and fixed an issue as well. I also learnt about the --rebase switch in GIT I will try next time :)\n. It passed, must be something wrong in my setup then. maybe the GCC 6.x linker...?\n. I did the REGENIE=1 and it worked, but failed on ming32 in the full build. So maybe it does still fail if autochecker doesn't do a full build. I will try on my linux machine too.\n. removing the build catalog completely solved it, so I am fine with it now :) \n. With the LS145 between the PIA and the matrix it is impossible to drive more than one row at a time, it is by hardware design. So the rows are scanned one by one and combines by the ROM software\n. ok\n. I will clean it up. I have/There is an issue with some keys that are either not available or divided on two keys (shifted and not) on either the natural keyboard or the target keyboard.\n. BTW, is there a way I can map a shift/cntrl/alt/alt-gr keycode to a target key? There are some special keys on this system that I'd like to put somehere, eg on keycodes for '\\', '~' or '\u00a3'\n. For instance, the right/down arrows are on the same key on the target system where the latter is shifted. I'd like to map the shifted to the down key instead of to the shift-right keycode, is that possible?\n. Ahh, \"natural keyboard\", didn't know what it was but found it now in the TAB menu and it works with the  arrow keys, very nice!\n. I was a bit too hasty and got even the name wrong, it is Aceex, I just had the pcb in front of me and it is highly unmarked. Now I found the box and can trace the model down, stay tuned\n. After 30 years of programming it's not invention, rather lazynes from my side, I have a pattern I use when I develop stuff but I'd be more than happy to convert if we agree on something useful. These LOG printouts are part needed developing the device and part needed when using the device in a board driver as I try to hint about misuse etc. So once the device is complete many of the printout can be removed completely and once we get logerror to work onto something that can be copied and paste on all platforms I'd be glad to remove the redefinition to printf\nThe extra curly brackets is just a precaution in the case where a LOG is at an unbracketed  else clause as the original has no semicolon. I can of course add the semicolon instead.\nI have 29 source files submitted so far and most of them uses this scheme, I suggest that I wait until we have an improved and agreed upon LOG print scheme before I convert and then that I do all of them, what do you think?. Roger that! I know that can be a problem, more exercise is good my doctor said and indeed :). Yeah, its wip and wrong I know, but will fix it, stay tuned.. yes. I haven't done it since our last conversation about it, this is a cut and paste mistake I'll fix it.. ok. Ah you didn't mean the curly brackets, I'll see what you mean and yes your idea is better, I just didn't take the time to fight the syntax at the time of writing the first one.. Yep, that's why I added the extra curly brackets which disabled the semicolon check as discussed previously. What I wanted to start with is to distinguish debug statements from plain code by putting them in a macro. In some places this hasn't been enough as I also needed some variables to keep values between calls to avoid flooding the debug console etc. \nI have now accepted that the compiler actually remove code in the body of\nif (LOGME) {.....}\ninstead of \nLOGME(.....)\nSo I can clean up a lot if this and will take some time to do that at some point.\n. ahh, ok, I'll fix. intuition is subjective I guess :) I'll go over it and see if can improve the intuitiveness here, like remove the brackets and such. Will this work?. Applying the same template pattern for the SCC causes a segfault. For the BIM I have not yet tested the channel callbacks because there is no use yet but I can fake one to verify.. Yeah this is so wrong, BIM segafaults too when the templates are used, and there are some syntax errors in the template that I had to fix as well so push that first in order to figure out how to do this properly. Yeah, I figured that out late. I checked the subdevice template and it seems to work differently and I can't see that it allows for setting the callback in a subdevice from one of those neat templated MCFG macros. ok, I will remove it when not printing attotimes to the console. LOG_GENERAL is predefined in logmacro.h so no need to duplicate. LOG_PRINTF is not needed as we got the new LOG_OUTPUT_STREAM which you can simply define as std::cout. just include logmacro.h instead of defining LOGMASK and LOGLEVEL. LOG is defined in logmacro.h already. definition of LOGSETUP & co should use LOGMASKED, defined in logmacro.h, instead of LOGMASK   . No need to redefine logerror if you use LOG_OUTPUT_STREAM, you can remove this clause altogether. Yes, I know I should revisit this and change it to the new logmacro.h :). no idea, will check required_ioport_array out, the refactoring I am planning to do will make it a 2x10 matrix as the keypad is wired that way which I didn't know when starting out.. Oops I missed that, the driver has been lying around in my repo for a long time, just wanted to get into mainstream, that override is a remain from some experiments I suspect. Will fix.. I was thinking keeping it as a reference as the ROM hit distributions already but I will remove the reference and rely on source control for that.. ok, I'll add it to the upcoming update of Mybrain 3000 . ok, I'll fix. By the way @cuavas , as you can see the classes for the two ISA card in this file are 99% the same code, only the fdc device type and the number of floppies differ. I could use some C++ hints how to create a base class with all the methods and only keep the last 1% in the derived classes, I tried but the exercise is giving me grave headaches. I will add the 8\" fdc as well when I get hands on one and I would hate to tripple the code...\nI figure the memory map, the fdc device and the floppy configuration will differ. ok, I'll fix. There is a tool fixing this if you compile MAME with TOOLS=1 and you then get a number of handy tools. The one to use is called srcclean, I think it has a prepended 't', so 'tsrcclean'. Just use it on your files and they will be fine I think. I've just learnt this myself.. Fixed. Fixed. Fixed. Ok, I am looking for a newer rom, but I can't tell when it pops up, I would think the ews286 works but I want to get it from an actual Nokia branded machine to be authentic, I'll comment it out for now.. And I tried to use ews286 as parent but that didn't validate. yeah, thx I'll fix. Simply because it is not functional yet, the software required to do progress is on floppies and the abc80 floppy support is currently kaput it seems. Can I mark the device as NOT_WORKING somehow until it is all in a good state again? . Ok, I'll move them. The product was called ABC-CAD and it is not only a simple mouse it is also a \"hi-res\" video device, so I thought abccad would be better.. Got it, intention is to hook it up fully after I have the floppy support fixed so I can test it with the actual software package which is available for download from one of the abc archives.. Actually, the product was called CAD ABC, not ABC CAD as it was named in a news article I referred to. The name can be found in the rom image, I change the short name accordingly.. Sure, do you want me to sort all of the ISA cards? It looked very unsorted to me so I couldn't find a good spot to add new entries. Or enums rather, I am sure :). You are essentially doubling the time it takes for the shifter to shift something out, are you sure this is the right thing to do? Is there is a bug in the via6522 device code or are you just compensating for a bug in the Vectrex driver? Remember that many other machine drivers uses the via6522 device also, not just the Vectrex.. Also, you are talking about CB1, which is the shift clock, but as far as I can see on this schematic CB1 of the VIA6522 is not connected anywhere: https://console5.com/techwiki/images/c/cb/Vectrex---Logic-Board.png CB2 outputs the data from the shifter and the CB2 sub-controls the *BLANK signal which is used to generate the raster effect for characters so that is why the change of the shift rate affect the text width. I think there is  a bug in the Vectrex driver, I'll have a look.. Usually the via6522 shifter drives another device with the CB1 clock so the data rate doesn't matter unless there is a device that times out when the data hasn't arrived in time so slowing the shift circuit will break some devices. @cuavas can you determine weather this is corrected with your via6522 remake? In which case this will regress again and also for the Macs I suppose? . I get it, CB1 was not part of the fix I did for flanks required for the prodigy driver, I missed that. Will issue PR for that once I understand the implications for the Vectrex driver.\nSo with my previous fix the shift timer is called once for each flank (twice per clock cycle) in order to get 50/50 duty cycle and to be able to trigger both on raising and falling flanks with the correct timing. The CB1 should toggle and the handler should be called only on raising O2 system clock flanks resulting in a division with 2. \nHowever, I can't see that vectrex driver uses CB1. The shift_out() function shifts out only on raising CB1 flanks already but CB1 toggles on every O2 flank which is wrong. So this probably explain some regression we have seen but not why the Vectrex driver is fixed for those games with this PR.. Sure, it wasn't an easy fix admittedly and the original driver didn't give much room for flanks as they were both triggered at the same point of each clock cycle. Still having drivers depend on faulty timing is not great either. If you have a new refactored device I'd be happy to test it out. . ",
    "Robbbert": "After registering, go to the exact link Haze posted, and read carefully the text at the top of the screen. You have to follow the instructions exactly, to have any chance of getting approved.\n. Sorry about the email earlier, I had made a mistake.\nIt sounds like this latest rom should be the one to use. BF is most certainly a mistake, FE 0D is what I would expect to see there.\n. This has now been fixed. Thanks Tafoid for finding it.\n  -----Original Message-----\n  From: Scott Stone [mailto:notifications@github.com]\n  Sent: Monday, 2 November 2015 04:40\n  To: mamedev/mame\n  Subject: Re: [mame] Fix for i8251 device driver (#448)\nI noticed some regression which seem tied to the i8251 device changes. It is important to at least give cursory checks to associated drivers which use a device you are working on for a current one.\nIn this case, these sets seem to have regressed and no longer show any text. There may be more but this is based on screen comparisons of a 10 second test run for each.\nsage2 - sage2.c\n  sdk80 - sdk80.c\n  softbox - softbox.c\n  xor100 - xor100.c\nIf you could please look at these, perhaps something driver level for each needs to be adjusted.\n  Thanks!\n  Tafoid\n\u2014\n  Reply to this email directly or view it on GitHub.\n. I've checked out what the 2 MAMEUI options do.\n- Sync to Monitor Refresh --> syncrefresh\n- Wait for Vertical Sync --> waitsync\nWhen these options are adjusted, MAMEUI writes 0 or 1 to the option in the game's ini file. Then, when the game is started, the core reads the options and applies them in the expected way. However, as a matter of policy, bugs based on what happens in MAMEUI are not accepted.\nYou (iori3000) will need to verify that the same problem occurs with MAME downloaded from http://mamedev.org/release.html . If it cannot be reproduced, this issue will be closed.\nThank you.\n. Alright, FINE... I won't talk to anyone, internal or external, about it in future.\najrhacker, I apologise.\n. 2011: It can be added to HBMAME if you want. If you are a member at mameworld.info you need to PM me there privately for further instructions.\n. Nothing further heard, closing.\n. Nothing heard, closing.\n. MAMEUI cannot be used as a basis for reporting bugs with MAME.\nThe problem must occur in normal MAME for this report to be considered possibly valid.\nPlease see if the trouble happens in the latest version of standard MAME.\n. Can this wait until after the release?\n. Using the same MAMEUI64 as before won't solve anything. You can either try MAMEUI32 (should at least solve the disappearing box problem), or get a daily build from the site mamehaze suggested earlier.\n. Need to update scripts/target/mame/mess.lua, and src/mame/mess.flt\n. ",
    "richard42": "I don't understand why the Travis and AppVeyor builds failed.  I built in on my machine with \"SUBTARGET=arcade MAME=mamearcade64\" using gcc and it builds fine:\n<lots of stuff...>\nCompiling src/mame/video/xyonix.c...\nArchiving libmisc.a...\nCompiling src/version.c...\nBuilding driver list...\nCompiling src/mame/mame.c...\n30139 drivers found\nCompiling generated/mame/arcade/drivlist.c...\nLinking mamearcade64...\npyro@DualCore64 ~/projects/coco3-game/mame-git $\n. ",
    "Pernod70": "any way around that? I did have to change the file encoding for the name to show correctly in MAME UI.\n. Thanks for the tip, will make the change and re-submit.\n. I changed the character to a literal a few days ago, any other reason it's not been merged yet?\n. How can I remove this double commit?\n. I'll close it when I know how to submit without causing this mess.\nUsing SourceTree I commited my changes locally, then synced to my origin (which was a month behind mamedev), then created the pull request.\nThen rebased my local with mamedev and synced that to my origin.\nWhat is the correct order or push, pull, rebase, sync?\n. Think I've now used rebase correctly. ROMs and software were sent to mamedev yesterday.\n. Thanks, new pull request #313 with fixes.\n. Just sent the missing roms. The pro128_cart list was not intended for this commit (as it's not bbc related) but is harmless. It's also not yet hooked up in thomson.c as mo6 and pro128 cartridge loading does not work, I will look into it though.\n. In the BBC the 16 MHz clock line is supplied to the ULA via pin 8. The clock is divided via a chain of flip-flops into clocks of 8 MHz, 4 MHz, 2 MHz and 1 MHz, which are output on pins 7, 6, 5 and 4 respectively. The 4 MHz output is used by the SN76489.\n. ROMs and software have been emailed. Let me know if I missed anything.\n. I'm aware of the issue, also affects p2000t, currently looking into it.\n. What format are they in, non of the files have extensions.\n. Is there any way of identifying Travis issues before I push to my remote? Even though everything builds and runs fine it's a trial and error process of amending the pull request until it succeeds.\n. I wasn't aware of -validate, so that will definitely help. There'll be another commit in this pull to fix the softlists, so is it possible to rebase my commits even after I've pushed them to my remote?\n. It's like the z80 and 32016 lists, they all require additional hardware emulating to test. The images are not that easy to find so wanted them included for my future emulation targets. I'll submit a pull that includes them in bbcb like the others.\n. Looking forward to trying this, I still used them at work in the 90's. Shame I didn't get to keep any software when the 8\" drives eventually failed.\n. It didn't need to happen, a personal preference. I use QMC2 and when ordering softlists by List can keep all flop together. These lists are for specific devices (not yet emulated) attached to the bbc, so my naming is machine_mediatype_device.\n. All software was uploaded to ftp. Atom cassettes do not load yet, require uef chunk 0104 to be implemented which is WIP.\n. Those two machines only have a single floppy drive but motor_w and side_w wrongly assume two drives are connected. I'll try to get a fix in later today. Thanks.\n. Looking at other drivers all similar head load callbacks always act on all possible drives, regardless of which the fdc currently has selected. In this case I can add a check to see if the drive is actually connected before changing its state in the callback, this fixes the issue. But wouldn't it make more sense to expose the SELECT0, SELECT1 lines of the 8271 so that the callback only takes action on the currently selected drive?\n. Personally I'd prefer softlists attached to slot devices. In the bbc driver I have various softlists which will only work when various 2nd processor slot devices are emulated, at which point I'd move the softlists to the devices. ie. attach z80 co-processor and it'll add the CP/M software, attached 32016 co-processor (anyone want to develop 32016 core?) and it'll add PanOS installation discs.\nAt the moment these lists are tagged as not supported, as they'll all fail to load due to missing hardware.\nHow is the compatibility value currently used in software items? Could it contain required slot devices, and if not present pop a message to attach device?\n. No objections here, I know nothing about this system but glad it's removed from acorn library as it is completely unrelated.\n. apologies, my mistake.\n. BIOS selection in bus devices is also broken, it crashes debug builds in miscmenu.cpp.\n. Retested today as of https://github.com/mamedev/mame/commit/88779c9b105dae73dfd098269e3a70540da88fcc and Bios Selection menu still contains all devices related to machine, should only contain devices with a rom region.\n. I'm with haze and eta on this in that for floppies and cassettes in softlists the file extension should be trusted to determine format. The vast majority of legacy cassette formats have no checks in their identify, always returning cassette_legacy_identify with success. So for bbcb which has two legacy formats csw and uef the first checked format will succeed, then fail trying to load a uef as a csw.\nFor uef and csw I can add additional checks in their identify to fix cassette loading in bbcb, but overall I'd prefer if the extension was actually checked to be valid before proceeding to identify.\nThe bbc driver supports many floppy formats so when loading a ssd image why should it have to be checked against 6 other formats that don't have ssd in their extensions(). In acorn_dsk the identify for each format is quite complex simply due to not having access to the file extension. Why even define valid extensions if they are not used to check validity.\n. I suspect the main issue here is that all ports that were named KBD#, TERM_LINE#, MD# have been renamed to KEY#.\n. Looks like motor control (bit 2) is missing in dragon_fdc_device::dskreg_w.\nThis machine would really appreciate a softlist from someone that knows it.\n. These are for any Acorn machine with a 32106 co-processor attached, not just the Acorn ABC range.. Not specifically for BBC Master.. Not specifically for BBC Master.. The BBC Bridge Companion has nothing to do with Acorn.. Apart from lowercase 'discs' I'd prefer you didn't touch them. Adding 'Acorn' doesn't really add anything, I prefer concise for selection in internal UI.. Not specifically for BBC Master.. This implies that Acorn made the Casper 68000 boards, they didn't, it's misleading.. These are intended for use with Torch computers, though can also be used with BBC Micro with Torch board fitted. Adding Acorn for the sake of ordering and demoting Torch to brackets is not needed.\nPlease leave my softlists alone.. By that logic I should rename bbc_flop_z80 to bbc_flop_acorn_z80, and many others, no! The torch list is a little different as Torch made a combined Z80/68000 board (not yet emulated), so contains software for Torch machines with both co-processors.. Lowercase discs to be consistent.. ",
    "mahlemiut": "You can use \\xnn escape sequences.  Look at src/mess/machine/x68k_kbd.c for examples.\n. From a quick look through, I don't see much issue with this, it certainly doesn't appear to interfere with INP usage at all.\nCouple suggestions I'd give though:\n1) Would probably be more useful if it is enabled by an option (something like a -record_timecode/-norecord_timecode option).\n2) Exiting after INP playback ends would be highly annoying if you're trying to check scores (which I do regularly).  Should also really be enabled by an option.\n3) Any reason to use/switch to the attotime member variables instead of the member functions?\n. 1) I was thinking of a boolean-type option, so -record_timecode to enable, -norecord_timecode to disable.  (You'll just have to provide -record_timecode, -no is automatic with boolean options)\n2) -(no)exit_after_playback is fine\n. You select the system first (snes or snespal) then the software you wish to use it with.\n./mame snes -cart softlist name or full path to (optionally) zipped ROM\nThrough the GUI (0.171 or later) you select the system, then if needed it will let you select a game from the softlist.\n. The X68000 would benefit from this sort of option, too.  Its power switch generates an interrupt so that the system can clean things up before shutting down.  Probably not as critical as what you've described though.\nAnother useful, related idea, would be to support auto-shutdown, for those various PC (and similar) systems that have OSes that will switch the system off for you after logging out.\n. Yes, it does.\n. This fixes the X68000 mouse, also.  Thanks very much!\n. Wasn't even aware that there were multiple SCC versions. :)  Will take a look at some point.\n. ",
    "aaronsgiles": "Upd7759 doesn't have a fifo, so adding one is a hack that should be kept driver local. Ideally you should find a way to make it work workout a fifo.\nAaron\nSent from my Windows Phone\n\nFrom: ValleyBellmailto:notifications@github.com\nSent: \u200e8/\u200e20/\u200e2015 12:37 PM\nTo: mamedev/mamemailto:mame@noreply.github.com\nSubject: [mame] Sega Pico PCM support, fix for FM-Towns clock, minor fixes (#288)\nWhile working on my VGM logging mod for MAME, I did a few bug fixes.\n-   I added a FIFO to the uPD7759 in order to properly support Sega Pico PCM. The additions shouldn't break anything. I tested them against only a few Sega System 16B games though.\n-   There is a small fix for the FM-Towns clock posted by the people on the vgmrips forum. (The original code used the Sega MegaCD clocks.)\n-   The interrupts for Xor World are pure guesswork, but it makes the game run at a playable speed (instead of insanely fast) and the music/sfx aren't way too slow anymore.\n-   I added a few checks to prevent MAME's main menu from overwriting wavelog + error.log.\n\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/288\nCommit Summary\n-   fix FM-Towns RF5C68 clock, fix game/music speed of Xor World\n-   add Slave Mode FIFO to uPD7759, fix Sega Pico PCM\n-   prevent main menu from overwriting error.log and wavelog\nFile Changes\n-   M src/emu/machine.chttps://github.com/mamedev/mame/pull/288/files#diff-0 (2)\n-   M src/emu/sound.chttps://github.com/mamedev/mame/pull/288/files#diff-1 (2)\n-   M src/emu/sound/upd7759.chttps://github.com/mamedev/mame/pull/288/files#diff-2 (41)\n-   M src/emu/sound/upd7759.hhttps://github.com/mamedev/mame/pull/288/files#diff-3 (5)\n-   M src/mame/drivers/xorworld.chttps://github.com/mamedev/mame/pull/288/files#diff-4 (7)\n-   M src/mess/drivers/fmtowns.chttps://github.com/mamedev/mame/pull/288/files#diff-5 (4)\n-   M src/mess/drivers/segapico.chttps://github.com/mamedev/mame/pull/288/files#diff-6 (63)\nPatch Links:\n-   https://github.com/mamedev/mame/pull/288.patch\n-   https://github.com/mamedev/mame/pull/288.diff\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/mamedev/mame/pull/288.\n. I studied this chip extensively when I rewrote it. It is explicitly documented that it has one byte input latch and you have to feed it carefully. Timing is everything and you have to get it just right.\nI'm vague on the details (it's been a good 10 years, I'm guessing), but I will NAK any attempt to add FIFOs on top of it without demonstrable proof that the documentation was all wrong.\nAaron\n\nFrom: Jonathan Gevaryahu notifications@github.com\nSent: Thursday, August 20, 2015 2:44 PM\nTo: mamedev/mame\nCc: Aaron Giles\nSubject: Re: [mame] Sega Pico PCM support, fix for FM-Towns clock, minor fixes (#288)\nYou sure it doesn't have a fifo? The decap shows it has a lot of crap on die one of which could be a fifo of some sort...\nhttp://siliconpr0n.org/map/nec/d7759c/mz_mit20x/\n...although i was under the impression that the two dark areas were roms of some sort?\n\nReply to this email directly or view it on GitHubhttps://github.com/mamedev/mame/pull/288#issuecomment-133187162.\n. Heh, I must have never removed those comments when I rewrote it. Much of that \"information\" is bogus and misleading.\nAaron\n\nFrom: balr0g notifications@github.com\nSent: Thursday, August 20, 2015 4:04 PM\nTo: mamedev/mame\nCc: Aaron Giles\nSubject: Re: [mame] Sega Pico PCM support, fix for FM-Towns clock, minor fixes (#288)\n@aaronsgileshttps://github.com/aaronsgiles: https://github.com/mamedev/mame/blob/master/src/emu/sound/upd7759.c#L103 -- are you sure? I'm not sure who wrote this because this is pre-SVN, but it seems to imply that slave mode involves FIFOs. If this is not correct, it should be removed from the source file, as it misleads contributors into doing things incorrectly.\n\nReply to this email directly or view it on GitHubhttps://github.com/mamedev/mame/pull/288#issuecomment-133207388.\n. Might consider moving the whole cheat engine out into a lua script, honestly. If hiscore.dat can be done in lua, there's almost certainly enough support for cheats.\n\nFrom: Jeffrey Clark notifications@github.com\nSent: Monday, March 21, 2016 4:48 PM\nTo: mamedev/mame\nSubject: Re: [mame] Add an option to pre-enable cheats (#678)\n@Saudrathhttps://github.com/Saudrath In addition to what @rb6502https://github.com/rb6502 said, the lua engine was extended recently to include cheat support. Although there is no documentation (yet), you can fairly easily write a script to enable specific cheats when the emulator starts.I will update the documentation with an example \"soon\".\n\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHubhttps://github.com/mamedev/mame/issues/678#issuecomment-199540258\n. For platforms with a single instruction popcount, it would probably be faster to do popcount & 1.. Honestly just pre-caching the 32*32 different values of cos in a table would probably make a noticeable speedup for the slow version.. ",
    "ValleyBell": "My current implementation works pretty well with Mickey no Boku wa Meitantei and Sonic's Gameworld (J).\nI can split the changes to the uPD7759 and put them into a separate device/file. Or I could integrate them into segapico.c, that's what I originally did. (before I read the comment about the FIFO in the 7759 driver)\nYou really should remove those misleading comments ASAP to avoid future confusion.\n. ",
    "peterferrie": "I'm not certain that VirtualQuery will work correctly for a data element to\nfind the image start.  It should really be querying against part of the\ncode itself.\nOn Tuesday, August 25, 2015, Vladimir Kryvian notifications@github.com\nwrote:\n\nGetModuleHandle(NULL) is not an universal way to get HInstance of the\nprogram.\nIf you will try to use MAME in dynamic loadable libraries, you will fall\nwith creating windows, and some other troubles.\nThis commit should fix it.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/289\nCommit Summary\n- Fixed GetModuleHandle to be universal.\nFile Changes\n- M src/osd/modules/debugger/win/debugviewinfo.c\n  https://github.com/mamedev/mame/pull/289/files#diff-0 (12)\n- M src/osd/modules/debugger/win/debugwininfo.c\n  https://github.com/mamedev/mame/pull/289/files#diff-1 (6)\n- M src/osd/modules/debugger/win/editwininfo.c\n  https://github.com/mamedev/mame/pull/289/files#diff-2 (4)\n- M src/osd/windows/input.c\n  https://github.com/mamedev/mame/pull/289/files#diff-3 (10)\n- M src/osd/windows/output.c\n  https://github.com/mamedev/mame/pull/289/files#diff-4 (6)\n- M src/osd/windows/window.c\n  https://github.com/mamedev/mame/pull/289/files#diff-5 (6)\n- M src/osd/windows/winmain.c\n  https://github.com/mamedev/mame/pull/289/files#diff-6 (2)\n- M src/osd/windows/winutil.c\n  https://github.com/mamedev/mame/pull/289/files#diff-7 (14)\n- M src/osd/windows/winutil.h\n  https://github.com/mamedev/mame/pull/289/files#diff-8 (1)\nPatch Links:\n- https://github.com/mamedev/mame/pull/289.patch\n- https://github.com/mamedev/mame/pull/289.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/289.\n. Yes, that should do it.\n\nOn Wednesday, August 26, 2015, Vladimir Kryvian notifications@github.com\nwrote:\n\nFixed GetModuleHandleUni. Please, review.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/289#issuecomment-134871745.\n. > Hi!  Do you have any kind of test binary, or even a few raw opcodes?  Also,\nhas this been checked against a real hardware m68k?\n\nIs this it?\nEE D0 01 00    bfset   (a0){1:32}\nIf so, then the Interactive Disassembler has a bug, too.\n. ",
    "lab313ru": "Fixed GetModuleHandleUni. Please, review.\n. Some updates with class unregistering. Should fix using MESS in shared libraries.\n. I've never tried to implement my own gdb stub.\nBut I found some good example of implementing GDB stub in emulator:\nhttps://github.com/Yabause/yabause/tree/master/yabause/src/gdb\n. It would be great to have such functionality. But... LUA scripts... They don't allow to use some GUI subsystem. So, if I want to show some dialog, or use some shared library it won't be able.\n. Works in f9353d4. Closed.\n. I'm trying to read memory after this:\nc++\n// disallow save state registrations starting here.\n// Don't do it earlier, config load can create network\n// devices with timers.\nm_save.allow_registration(false);\nAnd it gives me this error.\n. I'm not calling save_item function directly. It callable by device_start(). By some strange thing, read_byte() calls device initialization. I can't understand that.\n. ",
    "rzero9": "@einstein95 True, didn't notice that. Fixed.\n. Your PM inbox seems to be full, so I've submitted it to the mamedev.org address. The DAT includes everything in the collection,not just CDs (floppies, BIOS files, etc.) but everything needed should be there.\n. Hi,\nSadly I've found no easy way to convert CloneCD metadata to cuesheets while preserving track pregaps, so I had to use a bit of a convoluted method. I'll describe it so other people can replicate it:\n- Mount the CCD image as a virtual drive (I used Daemon Tools since it preserves the track pregaps)\n- With Exact Audio Copy: configure gap detection as \"Method C / secure\", and select \"action / detect gaps\".\n- Select \"Action / Append gaps to next track\".\n- Select \"Action / Create CUE Sheet / Current Settings\" and save the CUE file.\n- Dump all audio tracks with EAC.\n- With Isobuster, open the CCD file and extract the data track as raw data (2352 bytes/sector).\n- With your favorite tool, remove as many sectors from the end of the data track as there are in the track 2 pregap (for example, 2 seconds pregap = 150 sectors = 3252800 bytes removed from the end of track 1).\n- Edit the CUE with the track 1 file name and MODE1/2352.\n- Feed the CUE file to CHDMAN.\nIf no one is able to do it, maybe I did something wrong. In that case we may have to remove those entries and try again later with a more straightforward method...\n. Thanks, I will fix it in the next update.\n. Yeah, that was a mistake. I see it's already been fixed, though.\n. Done.. Yeah, you're right, I was just copying Barry's code there but it makes more sense to pass the attributes as boolean. Changed.. I have rewritten the checks using lambda expressions. The original code is already quite repetitive (it has one \"if\" block for each zoom level) but at least this shouldn't add too much fuel to the fire.. No particular reason, as I said the code that checks for the position is basically the same as the existing one for a different I/O port, so I did it the same way for consistency. The driver only supports one screen anyway, so if m_screen is preferable I have no problem with changing it.. ",
    "ricardocontieri": "Hi there,\nThis board is closer to this Videx Keyboard enhancer:\nhttp://apple2online.com/web_documents/videx_enhancer_ii_installation___operation_manual.pdf\nUnitron changed the roms so that PT-BR characters  were made available.\nOn the Apple II \"red book\" the connector is reasonably documented.\nAnd yes, it runs a 6507, close by to an Atari processor.\nLet me know if I can help any further.\nThanks,\nRicardo\n. ",
    "mnaberez": "\nThe CPU is labeled 8404 (presumably yymm timestamp) and SYE6507.\n\n...\n\nYup, likely a Synertek second-sourced MOS 6507.\n\nOn the Synertek datasheets page, you can download the 1981-1982 Data Catalog.  The SYE family is covered on page 3-65 in the catalog.  The E means extended temperature range.  The specs otherwise look the same as the MOS 6507.\n. I sent an email to GitHub support with a link to this issue and asked if GitHub could show the full file history like git log --follow does.  This is the reply I received:\n\nFrom: James Dennes (GitHub Staff)\nDate: Thu, 01 Oct 2015 01:56:14 -0700\nSubject: Re: Web interface doesn't show file history with --follow\nHi,\nI'll add a note to this suggestion on our internal Feature Request List. We don't make promises about if/when we may add features, but we appreciate the feedback.\nThanks,\nJames\n\nSince there's nothing else we can do about this for now, I'll close this issue.\n. I'm going to close this issue since there isn't anything specific to address here.  Efforts are always being made to improve emulation generally.\n. Thanks for letting us know about this and for your pull request.  I've committed a slightly different fix for this in b4408c290604dca7f831c2652435932f80fe46c6 that will allow this code to run on Python 2 and 3 without sniffing the Python version.\n. The modernizer.min.js file discussed here is part of the package sphinx_rtd_theme.  As far as I know, we are including sphinx_rtd_theme without changes or additions.  In the past, we have generally avoided changing things in third party dependencies unless it is necessary for the build.  I suggest submitting this patch to sphinx_rtd_theme directly, and if they include it, we would pull it in.\n. ",
    "DopefishJustin": "Looks like a real error from Travis:\nCompiling src/emu/bus/isa/pgc.c...\n../../../../../src/emu/bus/isa/pgc.c: In member function \u2018virtual void isa8_pgc_device::device_reset()\u2019:\n../../../../../src/emu/bus/isa/pgc.c:262:17: error: unused variable \u2018space\u2019 [-Werror=unused-variable]\ncc1plus: all warnings being treated as errors\n. Is it possible to also implement this in the recompiler?\n. http://mametesters.org/view.php?id=4949\n. http://mametesters.org/view.php?id=5411\n. The machine definition defines a software list with MCFG_SOFTWARE_LIST_ADD but I don't see any software list xml included in the patch?\n. Please try again with 7346a874a3a6e6610991bdce9fb10ba645d63816\n. cc @curt-coder \nFrodo itself has been GPL2 for some time now so this particular case shouldn't be too big a deal to sort out.\nThe intention was for 0.172 to be the first GPL release, and for current git to already be ready to go in that respect but it's always possible we missed something here or there.\n. Does this improve the emulation of any piece of software in particular? It's good to document that even if only here on the PR.\n. - Our Game Boy sound emulation is not very good. blargg has an LGPL library at http://www.slack.net/~ant/libs/audio.html#Gb_Snd_Emu and the Mednafen tree has what looks like a more updated version. It's tied into his whole band-limited synthesis thing which could be hard to untangle and/or at odds with OG's plans for a general-purpose resampler. Judge or Lord_Nightmare may also have some WIP in this area.\n. If the game doesn't work, it should be marked as supported=\"no\" in the <software> tag.. prototyp was already added in one of your previous pull requests so this is a duplicate and causes a mame -valid failure. you have two parts both called \"cdrom\" here which causes a mame -valid failure. Don't include .chd in the disk name, that makes it look for rise 2 resurrection - director's cut (disc 1).chd.chd. As per your previous comment, the game doesn't work in MAME so mark it supported=\"no\". Please remove stuff like this before committing.. If there are no dumps at all for this machine then it should not be added as a driver. Add the information in comments instead.. What is bad about the dump? Comments are helpful.\nSame for mforsta below.. ",
    "LnmVolbo": "Trying out a number of different games with the -listxml command, only a few show the memory leak.  So far, I have found four source files that cause the error:\n1942.c (1942 and clones)\nm62.c (battroad, etc.)\npong.c (breakout, pong & clones)\ncocoloco.c (cocoloco)\nI'm still parsing the list of games, only completed from numbers to the end of letter C.  I will update this list after checking the rest of the games from the -listfull command.\nTo quickly see the affected items, without going through the entire list, you can type \nmame -listxml <game name>\nwhere <game name> is one of the affected games listed above.\n. I noticed that not all the netlist games have the issue.\nHere is a link to a spreadsheet with all the netlist games listed with a tally of their device_ref names:\nhttps://www.sendspace.com/file/w08qh4 (14 KB)\nIt appears that the games only using netlist_cpu (by itself) are unaffected.\nThe games that are leaking use three or more of the following device_ref names:\nnetlist_sound\nnetlist_stream_input\nnetlist_stream_output\nnetlist_logic_input\nnetlist_analog_input\nnetlist_analog_output\nApparently netlist_cpu doesn't utilize any pstrings, or else it uses pstrings but doesn't misuse them so that they leak.\nAll the leaky netlist games have an input and an output specified.  Is it possible that once committed to an input or output operation, the pstring cannot be disposed of in the expected way, and it leaks (stays in memory) instead?\nWould the pstring need to be copied to a temporary value, and that temporary value committed to the I/O operation, allowing the original pstring to be discarded properly?\nThat sounds kind of complicated.  I gather the pstrings were added to speed up string operations.  Duplicating them for I/O might negate the speed increase.\nThe pstring code pertaining to allocation and freeing is a bit terse for me to follow, so I am unable to make any more specific suggestions about solving this issue.\n-- I could probably come up with some more goofy questions tho.\n. Once the ROM dump of \"zap.rom\" became available, I found that there seems to be two errors in the transcription from the source code listed in the published book referenced above.\nThe first one seems to be a typo caused by poorly placed speck on the photocopier on the character \"C\", making it appear to be a \"G\", which the transcriber must have thought was a \"6\", as the value in the ROM dump is 0x62.  This is at location 0x245.  If one looks a the assembly code for that line, it is \"JP   NZ,WARM2\".  Fortunately there is another assembly line with the same code (\"JP   NZ,WARM2\") at location 0x253.  The values for this line are 0xC2 0x89 0x00.  So the value for location 0x245 should be a 0xC2, not 0x62.\nThe second problem is at location 0x375.  The book indicates that the value should be 0xBF, while the ROM dump indicates that it is 0xFE.  The value of the next location in the ROM dump is 0x0D, which seems to be an accidentally inserted value.  The values indicated by the book from location 0x376 and forward match the ROM dump starting at location 0x377.\nI am also wondering about the choice of 0x00 to fill the not-specified bytes in the DS statements and the ST statement at the end of the code of the assembly listing.  It is my understanding that unprogrammed areas of ROMs from this era were left at the default erased value of 0xFF.\nPosting this info in case there was a transcription error.\nHere is a link to what I consider to be a more accurate transcription of the source code from the book.  I have included both 0x00 fill and 0xff fill versions.\nhttps://www.sendspace.com/file/yqoo6n\n. Thank you for responding.  I did not realize your source was a different publication.  The publication I am referencing is here: https://www.modmypi.com/download/BuildYourOwnZ80.pdf\nHere are the lines around 0x375 from this version of the book:\n0372\u00a0DB\u00a002\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a05570\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0IN\u00a0\u00a0\u00a0\u00a0UARTIO\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0@GET\u00a0INPUT\u00a0CHARACTER\n0374\u00a077\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a05580\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0LD\u00a0\u00a0\u00a0\u00a0(HL),A\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0@SAFE\u00a0CHARACTER\u00a0IN\u00a0USERS\u00a0BUF\n0375\u00a0BF\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a05590\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0CP\u00a0\u00a0\u00a0\u00a0A,0DH\n0376\u00a0CA\u00a091\u00a003\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a05600\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0JP\u00a0\u00a0\u00a0\u00a0Z,TTYIN2\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0@JUMP\u00a0IF\u00a0CARRIAGE\u00a0RETURN\n0379\u00a03E\u00a001\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a05610\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0LD\u00a0\u00a0\u00a0\u00a0A,ONE\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0@SET\u00a0OUTPUT\u00a0CHARACTER\u00a0COUNT\n037B\u00a022\u00a0FB\u00a007\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a05620\u00a0\u00a0TTYIN3\u00a0LD\u00a0\u00a0\u00a0\u00a0(TTYOBF),HL\u00a0\u00a0\u00a0@SET\u00a0OUTPUT\u00a0BUFFE\u00a0ADDRESS\n(I had to place @ for the * in the comments, due to the automatic markdown here on GIT)\nAs you can see, assembly code and comments matches your version, and the value at the location 0x375 does not.\nNow that I look closer, I agree with you on the second apparent error I mentioned in my first message.  It looks like the version you are working from has been corrected from the version I was looking at.  Your analysis of the \"off by 1\" block seem correct to me.\nI would not be surprised at all if the first edition publication was incorrect.  Reading BYTE Magazine all those years ago, I found that it was not unusual that program listings were published in their preliminary state, rather than a final confirmed version.  And a future issue may print a correction.\n. I was able to follow the examples in the book using this image:\nhttps://www.sendspace.com/file/bx2n8m\nAnd this checksum info:\n<rom name=\"zap.rom\" size=\"1024\" crc=\"669b5f13\" sha1=\"545184c720dceccbda4829bd1596262a277929e0\"/>\nIt is the image with the first typo corrected, and the second typo left as-is with the extra 0x0D character inserted at 0x376. (and 0xFF filling the undesignated memory locations)\nNot all the examples were verbatim, but nothing locked up. When storing data, it always read back properly on the read.  The things that weren't identical to the examples in the book were things like reading uninitialized memory locations.\nIt looks like shift-1 is only supposed to enter a single digit, then the \"next\" (right arrow) button is to be pushed a couple of times to see any changes on the display.\nThe ROM image may still be incorrect, the questionable area is in the TTY routines, which are not tested by the examples in the book.\n. Robbbert, I think what crossed you up was the first typo at 0x245.  That one looks like it could cause a hang because it would interfere with execution getting back to the top.  I don't think we are testing the  area of the 2nd typo because it is in the middle of the TTY routines, and not in the entry routines that are tested by the examples in the book.\nThank you for suggesting to test by the examples.  I was dimly aware they were there, but had pretty much forgotten about them.  I hadn't tested them myself until after you mentioned it.\n. If anyone is curious how this issue was resolved, see this:\nhttps://github.com/mamedev/mame/commit/e1cad4365afe0f75f50e0a53215af7805fa28f4f\nApparently the corrected assembly listing would be something like this:\n0372\u00a0DB\u00a002\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a05570\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0IN\u00a0\u00a0\u00a0\u00a0UARTIO\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0@GET\u00a0INPUT\u00a0CHARACTER\n0374\u00a077\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a05580\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0LD\u00a0\u00a0\u00a0\u00a0(HL),A\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0@SAFE\u00a0CHARACTER\u00a0IN\u00a0USERS\u00a0BUF\n0375\u00a0FE OD\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a05590\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0CP\u00a0\u00a0\u00a0\u00a0A,0DH\n0376\u00a028 18\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a05600\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0JR\u00a0\u00a0\u00a0\u00a0Z,TTYIN2\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0@JUMP\u00a0IF\u00a0CARRIAGE\u00a0RETURN\n0379\u00a03E\u00a001\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a05610\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0LD\u00a0\u00a0\u00a0\u00a0A,ONE\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0@SET\u00a0OUTPUT\u00a0CHARACTER\u00a0COUNT\n037B\u00a022\u00a0FB\u00a007\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a05620\u00a0\u00a0TTYIN3\u00a0LD\u00a0\u00a0\u00a0\u00a0(TTYOBF),HL\u00a0\u00a0\u00a0@SET\u00a0OUTPUT\u00a0BUFFE\u00a0ADDRESS\n. Has anyone else had any issues with compiling since this was commited to the master?\nI am getting numerous compiler errors on z80scc.c, most if not all related to passing of arguments through the LOG macro.  The first of these occurs on line 778.\nI've temporarily fixed the compile on my local copy by short-circuiting the LOG macro in z80scc.c.  \nAlso found that src\\mess\\drivers\\hk68v10.c had the same issue, breaking compilation due to arguments passed through the LOG macro.  Took that one out too, compiling works on everything else.\n. Thanks for fixing it, and thanks for letting me know.\n. Nearly all the software lists have the same \"sofwarelist\" name as software list .xml output file name.  If anyone is going to change the internal \"softwarelist\" name, please see that the .xml file name for that software list is the same.\nFor a long time the \"specpls3_flop.xml\" .xml output file has had the internal software list name of \"spectrum_flop\".  It would be better if either the .xml file name were to be \"spectrum_flop.xml\", or the internal software list name be \"specpls3_flop\".\nWith several hundred software lists now included, it's much easier to organize them if they all follow the same convention.  I'm not trying to say how any particular software list should be named, just that the names ought to be consistent between the internal name and the .xml file produced..\n. @sparrowred,\nOf the 394 current software lists, only the ZX Spectrum disk images (spectrum_flop/specpls3_flop) list has the mismatch between the internal name and the .xml file name.\nYour revisions to the src/mame/drivers/specpls3.c file may address that issue, but Haze knows better than I whether that will disconnect the list.\nYour revisions to the hash/exl100.xml file look like they will create a new mismatch between the internal name and the .xml file name.  Is this intentional?\n. @ Tafoid, thanks for the quick fix, compiling properly again.\n. No need to make local changes now, it's been corrected properly: https://github.com/mamedev/mame/commit/cc2330d739ab68afed3b6725b7d2f80bb582ef50\n. That's one way, but the conventional way is to make a pull request.\n. Isn't mame.lst supposed to associate all machines with their source code files?  What purpose is served by culling entries?\nIsn't your \"issue\" caused by some machine names appearing in both arcade.flt and mess.flt?  As well as the appearance of both GAME and CONS macros appearing in the source (*.cpp) files that those machines belong to?\nI'm not sure getting your clrmamepro audits straightened out is a compelling enough reason for editing the mame.lst file.\nIt's not up to me to approve your changes or not.  Just curious about where you are trying to take this.\nYou seem to be concerned whether certain machines show up in the arcade-game only subtarget build.  Have you tested the mess only subtarget build with your proposed changes to see if it has any undesired effects on it?  You may not care, but someone using the mess only subtarget build may care very much.\n. Perhaps there is a misunderstanding.  None of the individual files exceeds 4GB.  The whole archive exceeds 4GB because there are enough smaller files in it.\nWhen a .zip file grows beyond 4GB, a pointer in the central directory structure needs more than 4 bytes to \"point\" to the offset to where the data starts for each file.  When this happens, the pointer is set to 0xFFFFFFFF, and another field is used, called the \"extra field\" to hold 8 bytes for the offset location pointer.\nUnsophisticated .zip libraries are ignorant of this and fail to retrieve any files from the archive that use the \"extra field\" for the offset location pointer.\nNot insisting that this be looked at, just trying to explain in more detail what the issue is.\n\nSome editorial content follows.\nSince MAME is expressing this (feature of ignoring files from zip archives over 4GB), one can conclude it is not a fully compliant 64-bit application.  Not ironic that legacy (such as WinXP and/or others) support is dropped, yet the zip subsystem keeps one foot firmly planted int he 32 bit world?\nOf course MAME doesn't need to handle this (right?).  There are already some front ends that can handle this issue (because they utilize zip libraries that work with 4 GB+ archives).  What was the point of absorbing MEWUI into the collective when users chose another front end to handle this issue?\nAnd what's the point of support reading these 64-bit zips?  There is never going to be a ROM over 4 GB, right?  Didn't Haze recently construct a special CHD for a 8GB encryption table for that snowboarding game back in January?  Now that was a single big file over 4GB.  Maybe that recollection is confusing the issue.\nOf what possible use could a fully compliant 64-bit zip subsystem be to MAME in the future?  No one can say, if there isn't one, then no one will know.  Perhaps it is a poor utilization of resources to add it now.  Not adding it will not cripple the MAME project. But adding it will make MAME a tiny bit more flexible.\n. Thanks for reconsidering.  I don't have a pull request ready right now.  I'll see what I can come up with.  If anyone already has something in mind, please feel free to submit it.\n. I found the code that cuavas pointed out, thanks.  It seems to me that the correct routine to modify is \"get_compressed_data_offset\" at src/lib/util/unzip.cpp, starting at line 607.\nI've come up with some pseudo code.  If anyone is so motivated, please provide critique.  Not requesting someone to finish it, I'll figure out the c++ syntax eventually.\nc++\n//  make a new 8 byte pointer, set it to the current 4 byte pointer \"m_header.local_header_offset\"\n//  test to see if the 4 byte pointer is 0xffffffff and that the extra field length is not zero\n//      allocate a temporary buffer for the extra field and load it\n//      check the \"header\" of the extra field to see that it has one 8 byte entry\n//          load the 8 byte pointer with the 8 byte payload of the extra field\n//      dispose of the temporary buffer\n//  continue the execution of the existing routine with the new 8-byte pointer.\n. Making progress, I've got some code written that compiles w/o errors, just needed a 6GB file to test it on...\nHmm... tried the revised MAME with the new code, but it doesn't seem to work.  By that I mean it does work (the gui displays .png files from the .zip file) for 4GB- files but not 4GB+ files.\nIf anyone wants to see the code: https://gist.github.com/LnmVolbo/eeea541d8ec0266d25e97f79d0a6eb8f\nI found a way (I think) to extend the existing data structure to avoid creating a temporary buffer as I outlined in the above pseudocode.  Perhaps my assumptions are erroneous, since it doesn't work.\nUnfortunately I am not well acquainted with MAME's debugger, so progress may be slow from here on.  If any interested parties have any ideas, I'm all ears.\nBe forewarned, the code is experimental and has not been tested extensively.\n. I just noticed that the routine that finds the central directory uses a 4 byte offset to search.  I will amend the code to use an 8 byte offset and report back.\nNah, that's not it, the routine returns a structure, not an offset.  And the internal reads of the file do use an 8 byte offset.\n. ajrhacker, thanks for the input.\nWell, to get started with this, I'm not trying to support individual archive content files that are 4GB+, just an entire archive length of 4GB+.  I am not attempting to support the fields compressed_length or uncompressed_length at this time.  Once the basic functionality is established, it can be expanded.  There are all sorts of things that can go into the extra field.  That's why I am screening for the header with the id of \"1\" and size \"8\".  Because the 4GB+ .zip file I am working with has only that configuration in the archived entries beyond the point where the local_header_offset overflows past 0x0ffffffff.\nOr are you talking about some other fields I have overlooked? if so, please elaborate.\nBy the way, it is possible to place comments right on the gist page (scroll down to the bottom to see it).  This avoids clutter on the master announce page.\nEDIT:\nPerhaps this isn't working because I am not considering that the .zip file may have a zip-64 end of central directory record.  I am relying on the existing data structure (plain) end of central directory record, which has the limitation of pointing to the start of the central directory with only a 4 byte pointer.  I will look further into this, and attempt to create the data structure for the zip-64 end of central directory record.\nThanks for the idea, ajrhacker.\nEDIT2:\nUnfortunately I haven't been able to use MAME's debugger to troubleshoot this.  I have made an another program to test the sequence of central directory reading.  Fortunately I have gained some insight into how the central directory can be read.\nPseudocode:\nFind the block at the end that has the signature \"PK56\" (0x06054b50)\n  In that, check that the 4 byte offset to the central directory is \"0xffffffff\"\n    find the block immediately preceding that has the signature \"PK66\" (0x06064b50)\n      in that, get the offset of the zip64 end of central directory record, load that block\n        in that, get the 8 byte offset of start of central directory\nThis is why MAME currently can't read the 4GB+ zip files, it finds that the 4 byte offset to the central directory is 0xffffffff, and stops there, instead of continuing hunting for a valid 8 byte offset.\n~~Next step, extend the search.~~\nAnother Edit:\n~~I've put some more code up.  Still not working.  I'm trying to debug, but I am rather rusty in converting the variables I want to see to valid printf() statements.~~\nLast edit:\nI've got it working now.  Just have to set this as a pull request.  Any changes to the \"style\" needed?\nhttps://gist.github.com/LnmVolbo/eeea541d8ec0266d25e97f79d0a6eb8f\n. Sorry, I am not familiar enough with github to tell if my pull request registered properly.\nAny assistance is appreciated.  (sorry about the clutter.)\n. Another stab at this.\nI feel bad about wasting your time with my previous pull requests.\nHopefully this one is more worthy?\nhttps://github.com/mamedev/mame/pull/793/files\n. Not sure why 2 commits are showing.\nFor some odd reason it looks like an older version of unzip.c is being updated.\nFeel free to delete anything extraneous.\nOdd, code not working now.  Please wait until I figure out what went wrong.\nI must have been over anxious to make that pull request.  Doing a clean make now, will take a while.\n. I will try to do that.  Sorry for the trouble.\n. Thanks for the feedback, I will revise.\nYes I was alarmed, I thought the way read_ecd() did it was because of the necessity finding a signature at the head of a variable sized block, so I duplicated the functionality to find the \"PK67\" block.  Since you indicate it is unnecessary to scan for that, I will eliminate the 2nd scan.\nMy understanding of your directive to use C++ function style casts is this:\nreplace C-style casts, such as: (UINT64)var_name;\nwith C++-style cast, such as: static_cast<std::uint64_t>(var_name);\nEdit: ha, formatting ate the angle brackets, had to tag those lines as code to get the angle brackets to reappear.\n. Thanks for the tips, updated code ready for review.  I've updated the summary of changes in the first post of this thread.\n. I must be doing it wrong.  When I saw this link:\nhttps://github.com/mamedev/mame/pull/790/commits/09282f196a26de70056336857299d7a13ac96582\nI thought the changes were in place.  Sorry to be a pain, do I have to close this and make a new pull request to register the changes properly?\nMaybe I have to squash the two commits together?  Not sure how to do that either.\nThis link looks like it has the changes:\nhttps://github.com/mamedev/mame/pull/790/files\nI didn't update the code on the gist.  Perhaps you are still looking at that by accident?\n. I removed the loop.  Not sure what you are looking at.  Can you post the link to the code that you are using?\n. Thanks for the critique.\nThe complexity is inhibiting the looking for ZIP64 extra fields when the zip64 signature is not found.  I thought that was a requirement.\nI am using a small buffer on the \"locator\" block because I want to check it's signature and then grab the pointer in it.  I use the pointer to load another small block that has the ultimate 8 byte pointer in it.  Again I load the whole block to verify the proper block header signature is present before continuing.\nAnother issue is the ECD structure has only a 4 byte offset.  It can't return an 8 byte value unless it is modified severely which could make it confusing or incompatible with the standard ECD structure.  The ECD structure does not return any info about the block immediately before it, or it's own location in the file.  Not clear to me how to get the block immediately previous to the ECD.  And that (locator) block does not have the required info.  All it has is a pointer to another block that has the needed info.\nThe initialize() routine has to be modified because the ECD only provides a 4 byte offset in it's structure.  I don't see any other way with out making severe changes to the ECD structure.  Is this what is desired?\nI can understand if you are tired about corresponding about this.  I would appreciate it if you could provide more feedback about how to improve this pull request, or invite someone else to reply to my queries.\nI would be interested in finding out how to make a more complete implementation of ZIP64.\n. Just pondering here, about changes which would make this a better submission.\nInstead of using a buffer to read parts of the file, (as the read_ecd() routine does), I should just read dwords and qwords at specific points of the file to make sanity checks and follow the chain of indirection.\nI had added a 4 byte field to the ECD structure to pass back the location of the \"locator\" block.  I then processed the \"locator\" block info in the initialize() routine to \"correct\" the bad 4 byte offset into the valid 8 byte offset.  This was only done when the 4 byte offset was determined to be overflowed.\nI didn't want to replace the existing 4 byte offset field in the ECD with an 8 byte offset field because it would damage the monolithic structure that matches the zip specification.\nIt should be possible to tack on the 8 byte replacement offset value to the ECD structure.  But the initialize() function will have to be modified to choose either the 4 byte or 8 byte offset, depending on the value of the 4 byte offset.  The existing initialize() function is hard wired to only use the 4 byte offset.  As it is presently, it cannot use an 8 byte offset.  This is why it needs some kind of re-write. \n. Thank you for the feedback.  \nI appreciate the time you are taking to evaluate my pull request.\nI will address these four points and rewrite the code.\nThe following is not intended to be excuses, but points of discussion.\nI saw the potential flaw in point 1, but was afraid to make it too complex by checking that the two buffer reads would fall outside the buffer, and then re-loading the buffer at the appropriate point.  I will re-write it that way.  If you do not consider that a viable option, kindly let me know, please.\nThe other way I was thinking about was to inhibit the return of \"error:NONE\" on line 654, and cause the while loop to go around one more time, which would double the buffer size and therefore cause the buffer to cover the 20 bytes needed for the locator block.  That is a bit hack-ish, I prefer the former method I mentioned.\nFor point 2, I was concerned that it would get overly complicated.  I will check those those zip64 fields, and return an error if there is a problem there.\nPoint 3 I did not consider, thank you for pointing that out.  I will accommodate that the best I can.  Unfortunately I was focused on a specific test case.\nOn point 4, I'm not quite sure what you mean.  On line 687 I check for the length of the extra field, and for 32-bit saturation before accessing the extra field itself.  The two things I check are always present in either regular zip or zip64.  Are you requesting that I set some sort of \"zip64 present\" flag elsewhere and testing for that as an extra precaution?\nI suppose I am depending on the presence of 32-bit saturation to indicate whether the file was zip64 or not.  I found that in a 4GB+ file, not all the central directory file headers (the ones processed by get_compressed_data_offset() ) have 32-bit saturation.  Only the ones that point to data past the 4GB point in the file are 32-bit saturated.  But my observations are based on well-formed files.  I will try to anticipate other situations and write code to handle that.\nIn get_compressed_data_offset(), I have checking on the extra field itself before attempting the parsing the value in the field. I can add one more check, which would be to check that the offset created at line 695 points at a valid local header signature, and return an error if it does not.\nOr maybe you are trying to direct my attention to \"still hunting\" in the read_ecd() function?  When I fail to find the expected signatures in sequence, I return the error \"bad signature\".  Perhaps I misunderstand.  Does more need to be done in read_ecd() regarding the cessation of hunting? \nPerhaps when I address point 3 properly, point 4 will have taken care of itself.\n. Line 1265 has a forward slash in the CHD filename that may cause unintended results in some operating systems.  Perhaps it was intended to use a space dash space there instead?\n<disk name=\"free will / knight of argent\" sha1=\"ad5646cf46d8b0243220dd783e96f556e9a85467\" />\nProposed change:\n<disk name=\"free will - knight of argent\" sha1=\"ad5646cf46d8b0243220dd783e96f556e9a85467\" />\n. Well spotted, but you may have put one too many zeros.\nThe enclosing dataarea size is 65536 (0x10000), so the correct offset may be 0x4000, rather than 0x40000.\nOnly one item on this softlist has an offset of 0x40000, and it's enclosing dataarea size is 524288 (0x80000).\nThere are numerous other offsets of 0x4000 on this softlist, and all their enclosing dataarea sizes are 65536.\n. @ FakeShemp, thanks for spending the time to overhaul this softlist.\nRegarding the conversion issue, please consider indicating what version of CHDMAN.EXE you used for your conversions.  Older versions may not behave the same as the latest version.\n. @ FakeShemp, thanks for responding.\nCould any of the conversions have been performed with CHDMAN.EXE from MAME v0.174?\nThere have been reports of issues with that older version.\n. @ FakeShemp and oddi5593, thanks for sorting this.\n. It appears that Road Rash (USA, Prototype, Beta 3 - 19950211) was \"fixed\" by ignoring the track 02 information, because when that information is in the .cue file, chdman.exe fails to complete the conversion successfully.\nI looked into that a little and found that the index 01 information for track 02 was too large.  If it is recuduced, chdman completes the conversion without errors.  The time (61:01:71) does not correspond to the file length of 625,857,792 bytes.\nIt is my understanding that if the existing track 02, index 01 line:\nINDEX 01 61:01:71\nis reduced, a successful chdman conversion can be accomplished.\nI have find that the largest value for index 01 that allows chdman to complete is:\nINDEX 01 59:05:73\nAnd the corresponding sha-1 for that conversion is:\n4213754f77d1b510c1259a54e4528499ef479421\nEntire .cue file:\nFILE \"Road Rash CD (Beta 3 - Feb 11, 1995) (hidden-palace.org).bin\" BINARY\n  TRACK 01 MODE1/2352\n    INDEX 01 00:00:00\n  TRACK 02 AUDIO\n    PREGAP 00:02:00\n    INDEX 01 59:05:73\nEven with these changes, it is still likely to be considered a bad dump, unless someone has some better evidence that it is OK.\n. @ FakeShemp, you're welcome.\nRegarding cutting of second track.\nIn your absence, Tafoid cut it: https://github.com/mamedev/mame/commit/ff414f1a89327236d074187db6585a2820d4a5db\nWhen you are able to locate your .cue file, chances are it won't match the new sha-1 from that commit.\n. @ FakeShemp,  Thanks for those revised sha-1 hashes.\nI have a question about the TruRip source info on 23 of the CHD definitions.\nIn the area of the extensive comment section of this file, it is indicated that the softlist is currently divided into three parts. and that the CCD info from the TruRip dumps is not directly supported by chdman.\nAnd down in the section where the no better dumps are known to exist, are the TruRip dumps, with the commented source information indicating the relevant .ccd file, but no .cue file.  \nMy question is, if these CHDs from TruRip must be created with the \nchdman -i \"blahblah.cue\" -o \"blahblah.chd\"\ncommand, why not list the best available .cue file in the commented source?  At least for the present, until the time that chdman can handle the CCD info.\nThis is the list of 23 software items I am curious about:\n- bcracers\n- champs94\n- comptons201s\n- cpatrol\n- demoman\n- ejimse\n- espnnba\n- fatfursp\n- flink\n- karaoke\n- keio\n- maddog2\n- mypaint\n- nfltriv\n- ntrap (two discs)\n- panic\n- revoveng\n- roboales\n- rockpint\n- beast2\n- cobra\n- wolfchld\n. @ FakeShemp,  Thanks for answering.\nI thought it might be useful for anyone doing their own conversions from the source dumps to be able to see if their .cue file matched the one used to do the original conversion.\nIf such utility is unimportant, I understand.\n. ",
    "harbaum": "In my testcase it's\n  ee f9 00 40 55 aa 00 04\nwhich is\n  bfset   $55aa0004{1:32}\nas 55aa0000 is where ram is in my test setup. When running this the following functions from Musashi are called;\nm68k_write_memory_32(55aa0004, 7fffffff)\nm68k_write_memory_8(55aa0008, ff)\nYou can see how it writes 7fffffff to 55aa0004, ..5, ..6, and ..7 and then one more ff to 55aa0008.\nThis has been assembled using vasm_mot\nI don't have complete examples. But it seems i need to reconsider my entire test setup and might have complete test programs, soon. I'll also try to compile them into Atari ST or Amiga programs to be able to test against real hardware.\n. The fix:\n            mask_byte = MASK_OUT_ABOVE_8(mask_base) << (8-offset);\nfixes all of own my own cases. This fix is needed in all bitfield instructions.\n. This time ram is at $10100++, hence:\n00000156   207c00010102                 MOVEA.L #65794,A0\n0000015c   227c00010105                 MOVEA.L #65797,A1\n00000162   33fc010200010100             MOVE.W  #258,$00010100.L\n0000016a   83480000                     PACK    -(A0),-(A1),#0\n0000016e   207c00010105                 MOVEA.L #65797,A0\n00000174   227c00010102                 MOVEA.L #65794,A1\n0000017a   83880000                     UNPK    -(A0),-(A1),#0\n. Cool! Thanks for the feedback.\n. ",
    "gyunt": "Wrong tab size.\n. ",
    "kara1001000": "All right, I'll look into both of these suggestions.\n. startaq: video and audio changes are now separated, branches fix_mm1_video and add_mm1_sounds coming up as pull requests soon.\n. cracyc: Sorry for breaking pc9801 functionality, m_vbp is back there again. I was also a bit ashamed about the hard-coded magic numbers I added to visarea.max_y, but MikroMikko 1 needs that stuff. So, to serve both needs, I returned first the old implementation, and then added interface macro MCFG_UPD7220_VISIBLE_AREA_OFFSET to adjust those values as needed by various devices. Just pull my branches fix_mm1_video and add_mm1_sounds or wait until they are released.\n. Well, that's a simpler solution, and it also works IF you take also away the lines\n    if(y >= 25)\n        y -= 25;\nthat you added in UPD7220_DISPLAY_PIXELS_MEMBER in mame/video/mikromik.c\nHowever, if you leave out my changes in upd7220.c, visarea calculations there are wrong for MikroMikko 1. The reason for things working is that by leaving out my changes, also the call\n        m_screen->configure(horiz_pix_total, vert_pix_total, visarea, refresh);\nwas moved back under \"if (m_m)\" condition branch in recompute_parameters().\nThe result is that m_screen->configure() is now never called for MikroMikko 1, as m_m is never != 0 as far as my testing so far has revealed.\nI moved the m_screen->configure() -call under the else -branch during my testing at some point to see if things would still work if m_m  == 0, and forgot it there. So, now the hesitation remains that if m_m == 0 at some point, graphics will be offset and stretched in MM1 emulation.\nDo you know what the m_m (VSYNC mode?) values can be, what they mean, and if it's assumable that the mode remains unchanged in all situations with a specific device such as MikroMikko 1? If there is any doubt that value of m_m can vary (depending on some draw mode or other dynamic configuration), I suggest taking in the MCFG_UPD7220_VISIBLE_AREA_OFFSET configuration macro implementation to enable calculating correct visarea values for any device and ensuring correct graphics positioning regardless of the value of m_m.\n. I think my testing last night revealed an issue with upd7220 emulation regarding read access of the display memory. When calling CDOT function for reading the color of a given pixel, MikroMikko 1 emulation freezes in all othe cases but the simplest one where we read the color of a pixel we just set (and do not change the coordinate meanwhile or do pretty much anything).\nWho would understand the upd7220 enough to implement the FIFO timings and read-modify-write cycle properly? I think this issue may well have something to do with that, but the implementation part seems pretty tricky and I find it hard to understand.\n. Ok, thanks for clarifying that, M for master makes sense (as does your explanation). Sorry for breaking things, my bad for not remembering to return stuff to where I took it from after playing with it. :) \nKudos for the research with CDOT, let's hope the root issue gets revealed and fixed!\n. Indeed it works. Well done!\n. I agree, and I wouldn't mind having own sound set even for each emulated machine, as the chassis construction can affect the sound pretty much. MikroMikko 1 has two 5,25\", 640 kt floppy drives (quad density), driven by the NEC uPD765 controller. That's all the info I have without doing some intrusive exploration inside the chassis. Well, I know also that they are black, with red lights indicating motor/step action. :) Take a look: http://koti.mbnet.fi/~oju/retro/MikkoSystemFront.jpg\n. Lord-Nightmare sir, you seem to be quite an expert recognizing old hardware: those drives are indeed TEAC FD-55's (and they do have a head load solenoid). I browsed my archives and found the schematics that were used when building my machine.\nMaybe we should have also the \"disk insertion\" sound implemented in MAME. :)\nFor your entertainment, here's one more pic where you can see inside the FDD: http://koti.mbnet.fi/~oju/retro/MikkoInside.jpg\n. This stores 640 kb of data / disk, after system tracks there is 628kb free for max. 127 files on an empty disk. Disk definition for cpmtools looks like this:\ndiskdef mm1dsdd\n  seclen 512\n  tracks 160\n  sectrk 8\n  blocksize 2048\n  maxdir 127\n  skew 3\n  boottrk 2\n  os 2.2\nend\n. Yes mr-t-guru, I've already imaged all my 24 MM1 floppies, including many games and graphics programs that I wrote back in the days. Mandelbrot fractals with 8085, anyone? :)\nhttp://www.ferrit.fi/images/MikroMikko%201/fract1%20full.jpg\nhttp://www.ferrit.fi/images/MikroMikko%201/fract2%20full.jpg\n(these took I think a day or two to calculate, each)\nIt's so cool to see all that old SW running emulated. I first used ImageDisk .IMD format, but then made .MFI (MESS image format) replicas out of them with MAME's File Manager and now use .MFI images only because they are R/W instead of read-only .IMDs.\nMikroMikko 1 emulation is now very close to complete. Only issue seems to be with upd7220, reading pixels from display memory (CDOT call) freezes the system (unless it's a pixel that was just written to and we're not trying to read pixels from other places, too). May have something to do with FIFO timings.\n. You are absolutely right, working long night here... canceling this now.\n. Apart from the RGB values in the median-filtered \"screenshots\", the colors I defined are also based on one-to-one comparison with the screen of a working MikroMikko 1. I don't have calibrated color measurement device, but I do have good eye for color, and these values are very close to the shade of the phosphor that is used in the MM1 display. I'm looking forward to implement the (long) afterglow effect later on as well with hlsl.\nAnyway, at least these colors are way better than the default MONOCHROME_GREEN_HIGHLIGHT palette (which has too little separation between light and dark shades of green), and the implementation also serves as placeholder for better values if someone ever does the measurements. So, I'm hoping you would reconsider merging this.\n. I don't think I have such schemas at hand, and even if I did, those would not reveal any RGB values as we are talking about a monochrome CRT display with green phosphor as the origin of the color. I did some googling, and through\nhttps://en.wikipedia.org/wiki/Monochrome_monitor\nfound a nice wiki about phosphors:\nhttps://en.wikipedia.org/wiki/Phosphor#Standard_phosphor_types\nThere we have the wavelength for various green phosphors used in CRT's. Those can be used for heuristically estimating RGB values of the color. For example, from the table we can see that wavelength of P1 (commonly used in green CRTs) is 528 nm. However, we also see that the persistence of P1 is 1-100ms, which immediately excludes it from possibilities regarding MM1, as the phosphor in its display has very long persistence (around 2 seconds on medium brightness!). That fact would make P39 (Zn2SiO4:Mn,As) a good candidate with its 525 nm emission, as it's the only phosphor that is stated to have \"long\" persistence in the wiki, and also because the color is on the lower end of green wavelengths - also characteristic for MM1 display that could be described to have a very slightly blueish shade of green.\nThat said, we need to remember that also other matters come into play here, such as the properties of the glass of the display. However, most significant challenge is definitely the fact that there is no way to display a monochromatic light accurately on a modern RGB monitor (unless one of the RGB light sources happens to have exactly right wavelength). Green shades around 520 nm are especially problematic; have a look at the CIE 1931 chromaticity diagram:\nhttps://upload.wikimedia.org/wikipedia/commons/thumb/1/1e/CIE1931xy_gamut_comparison.svg/400px-CIE1931xy_gamut_comparison.svg.png\nThus, the bottom line is that exact modeling of what we see on those green monochrome screens is pretty much impossible with today's display technology, and trying to do so may even lead to inferior results regardless of good intentions. As much as I like the idea here that we're trying to emulate hardware (not simulate), sometimes it's better to draw the line and use, for example, recorded samples for sounds or best RGB estimates for colors. In fact, when it comes to monochrome displays, I think a photo of the monochrome screen with a good camera might be a very practical way to capture a good estimate for the color: the RGB sensor of the camera (plus camera's firmware) does the estimate for us in a way that's designed to produce as close-to-reality images on modern RGB computer screens of whatever it is that is photographed.\nSorry for the wall of text, this is a fascinating subject and I couldn't help myself. :)\n. I don't have a reference to say anything about other systems that are using color definitions under MCFG_PALETTE_ADD_MONOCHROME_GREEN_HIGHLIGHT, but at least for MikroMikko 1 display they are wrong; not only the hues, but also the lightness difference between bright and dark green is too small. Both issues are fixed in this branch.\nNote that a single definition for \"green phosphor CRT\" colors is not enough, there are more than one green phosphor types in use, and the brightness setting varies also. In MikroMikko 1, there is a knob in the display for adjusting the brightness, so that should also be somehow implemented in the emulation (together with heuristic rules for RGB mapping) if we want to do it as well as it can be done. Meanwhile, in this branch, colors approximate the middle brightness setting.\n. Rebased, please consider merging. Travis checks pass partially, failures are due to build timeouts.\n. ",
    "ajrhacker": "Not driver-specific (though the esb driver uses something very similar), but the slapstic direct-update handler in mame/machine/atarigen.cpp is one of the ugliest bits of legacy code wedged into that source file. This looks like a job for a setoffset delegate.\n. liberatr seems to use basically nothing from atarigen but the EAROM interface, and it's the only driver to use it now. (liberatr_state::update_interrupts is just a dummy callback for a feature it doesn't use at all.)\n. These two ER2055 implementations should ultimately be merged. But seeing as the merger would need extensive testing to safeguard against regressions, I think it would be better for now to keep them separate both from each other and from atarigen_state (which some other things, particularly the slapstic handling, really ought to be divorced from as well).\n. Those specifications are close to what I've been using. I haven't actually noticed clang choking on those source files lately, but I'm sure that the problem has the potential to recur.\n. Having been bitten by this bug again recently, I think it's being triggered by my various attempts to introduce alias templates into the core. clang still does manage to compile saturn.cpp, though it takes several minutes to do so; other drivers and devices also seem to take somewhat longer to compile (perhaps two or three times, though still only a few seconds each).\n. These changes occured to me during an incredibly ambitious rewrite in which, among other things, I started rewriting every device in sight to use auto-finders to fetch devices and memory regions. This also involved some rather drastic changes to devfind itself that most definitely did affect validation, one of which allowed sibling devices to be specified in configuration without macro-mangling the tags (or falsifying the auto-finder registration, a stupidly obvious idea that causes undetectable memory corruption), another of which allowed devices like the TMSPROM that bagman uses to require memory regions to be of an exact length (I had already been testing this in an earlier WIP that I never committed anywhere). I started to lose interest in the rewrite around the time that I became obsessed with tracking down leading carets in auto-finder tags and making Elmer Fudd jokes about it.\n. This is actually one of several spinoffs from a much more ambitious project that has now foundered for the third time. This particular commit, despite its very small size, is to me the most important of what hasn't been merged yet. Others can wait a little.\n. Actually, I just noticed that Haze already fixed these in a different way a few hours ago. Still, DEVICE_SELF is so useful that it maybe doesn't deserve its spot dangling at the end of addrmap.h; in fact, I had assumed it was being used in the region_ptr auto-finder because I had done just that in one of my uncommitted projects.\nThe width difference was something I hadn't been looking out for; as with atomicp, I think a sprite-devicectomy is appropriate for that config.\n. The debugger also lacks save/load/dump commands for the decrypted opcode space, though this seems like a minor oversight.\n. The worst thing about breaking winui is that I have no idea how winui could have triggered a bug in the merged code; not having a Windows computer to compile and run MAME on, I can't possibly test it myself. My suspicion is that the actual problem may be dereferencing null pointers in set_system_name; some simple defensive programming will fix that.\n. GCC 4.9, according to its release notes, should support auto return type deduction, but I don't have it for testing, and other compilers might not support that C++14 feature. I've decided to edit them out, and will commit this update once it successfully compiles.\nThe few first_xxx accessors I decided to retain are debug_view::first_source (used in OSD modules), software_info::first_part (used in the UI) and render_manager::first_target (used in a few drivers); these are redundant with the first() getters that all the iterator-savvy lists also provide. I do foresee all uses of these being rewritten later, but am a bit worried about breaking some WIPs; perhaps some of these cases should really be examining the whole list and not just the first entry.\n. \"Standart\" is not the common Hungarian spelling of \"standard\"; it's not even the less common spelling (which is \"sztandard\").\n. The slot_default feature is not just for input devices. In theory, adding something like <sharedfeat name=\"tube_default\" value=\"z80\"/> to the bbc_flop_z80.xml entries would suffice to automatically install the Z80 into the second processor slot. (It does absolutely nothing now because no such slot has been implemented in the driver.) This feature is not designed to work if an image device designed to load the software itself is not present on the machine as configured; startaq's svi328 floppy example shows how they can be doubly hidden.\nThe \"compatibility\" feature of software items really just matches against the filter configured for the softlist device. A slot device could potentially modify the filter even if the list isn't its own subdevice, but I can't think of a good reason why.\nIt seems to me that trying to load software lists from slot devices is going at it the wrong way around, especially since machines will often have more than one device that can load a given category of software. If the software media wouldn't even fit into the actual hardware that the stock configuration represents (like a Game Boy cartridge and a SNES without a Super Game Boy), I don't think it would be logically sound for MAME to automagically attach slot option on top of slot option in order to get it to load.\n. Volbo, it seems that a number of substructure fields in the code you linked still need to be expanded from 32 bits to 64 bits and initialized accordingly. Otherwise it does no good to return a 64-bit value from current_uncompressed_length, for instance.\n. One could argue that, in principle, the Lua engine shouldn't have direct access to OS input. But, in practice, a lot of drivers are abusing the input module for debugging hacks, and I don't see why the Lua engine shouldn't be able to do likewise.\nHowever, I think that board layouts with movable pieces really deserve a core implementation of a drag-and-drop interface, as a complement to clickable artwork. Ideally, the variously defined pieces ought to be able to snap into close-enough holes which fit their bases in a manner similar to MacOS 7.5's Jigsaw Puzzle (which, by the way, is still not working in MAME if MT 05411 is to be believed).\n. Sorry--I didn't quite get the warning that a large release \"MAME 0.173\" was approaching fast. Since rebasing a pull request is apparently considered harmful, I've done a merge for the sake of conflict resolution.\n. I previously suggested, and this time nearly implemented, a command-line option to disable software compatibility checking from the command line. However, I realized that explicitly specifying an image device by interface name already allowed incompatible software to be loaded, so all that I changed regarding that feature is how the warning message for incompatible software gets displayed. (The message also now slightly differs depending on whether it was the check against the \"compatibility\" feature or the check against the \"incompatibility\" feature that failed; the latter takes precedence, of course.)\n. The rationale is that some machines test certain inputs immediately after booting and jump into a service mode or something if those inputs are active. The problem is that they only give the user a very short time frame in which to enter these inputs, and the frontend interfaces and inevitable OS dependencies of MAME make that more of a challenge than it is on actual hardware.\nThere's also the pathological case of r2dx_v33, where inputting four joystick directions at once plus another button before the V33 gets too far is pretty much impossible to do (-joystick_contradictory is not enough for some keyboards) without -boot_pressed or modifying the driver. On actual hardware it probably involves temporarily uncoupling the joystick, but emulating precisely that in MAME would be even uglier. However, I see splitting that game into two sets and calling the feature an \"undocumented secret\" as a weak excuse to avoid making it user-accessible.\n. In theory, yes, Lua could probably be used to implement features like this. However, the Lua engine doesn't grant access to the ioport structures on a level quite deep enough for the functionality of -boot_pressed, let alone the autofire cheat added a few months ago. Also, Lua scripts can't be configured through the command line except through autoboot commands, which as currently implemented wouldn't execute soon enough for this purpose.\n. All right, I'll retreat, regroup and resubmit the fixes as a new request.\n. When the old way now gives out fatal errors, leaving that untouched seems like the greater of two evils. The only pathological cases are various areas of color RAM in 8080bw.cpp and unkhorse.cpp, where the specified address mirroring for shared memory consists of bits in the middle of the offset range.\n. That's exactly how I just fixed 8080bw.cpp. I also undid the unnecessary handler split in timeplt.cpp.\n. In recent versions of MAME, the device tag is included when using device_t::logerror. The inefficiency comes from using string_format to prepend it to the given format before even checking if logging should be done at all.\n. I thought the standard Intel letter suffixes (h for hexadecimals, o or q for octals) might be a more appropriate syntax to implement in the MAME debugger. I don't know, though; perhaps it's more important to maintain bug-compatibility with C++ and the many other descendants of the typeless language Ken Thompson and Dennis Ritchie implemented on the 18-bit PDP-7.\n. Another idea I had was that commands that take a CPU space as a parameter could set the default number base to 8 if is_octal() holds true.\n. That commit wasn't enough to fix it, but the \"better fix\" worked. I'll close this.\n. Given that all the existing overrides depend only on lookup tables of system calls, even using device delegates (which other MAME interfaces use instead of std::function) seems superfluous now.\nAfter all, most CPU disassembly methods, after passing through the interface wrapper, are non-member functions that can't consult the running state or even the configured state themselves because unidasm doesn't want to configure no stinking devices.\n. I've decided to rethink the commands once again. I'll withdraw this for now.\n. menu::m_pool is still used in a fair number of places to allocate the various structures that get shoved into menu_item::ref.\n. Yes, this is a preliminary step towards making SEI251/SEI252 and RISE10/RISE11 into first-class devices, and the submaps can go away when that happens. However, the SPI system will still need different memory maps for the two device classes, because one of the address lines going to the SEI252 is inverted, which is never done with the RISE10 or RISE11.\n. The driver says that \"the data is stored in the upper half of the eprom.\" I will update after testing this.\n. The test mode explicitly labels the inputs as BTN1 through BTN7, and pairs BTN3 and BTN4 for setting values.\nThe function of buttons 5-7 is currently unknown. They don't seem to have any effect in game now besides crashing the SH2 program due to lack of hopper emulation.\n. Is a1f9b62dd0a491d6b26291837d43181c0e9e66fa enough to fix this?\n. The single-driver library is following the MESS convention for non-arcade machines, where only skeleton drivers are grouped together without regard to manufacturer. The BBC Bridge Companion and BBC Micro have basically no relation to each other aside from using the BBC name under license.\n. Ah, but a single-file patch wouldn't quite compile on its own, for the subtle reason that debugger_cpu::m_debugger_access has no declared public accessor. The lack of a definition for debugger_cpu::watchpoint_check could also give rise to a linking error.\nIn any case, I think my commit message should make the secondary change clear enough.\n. In case the devs have forgotten about this, I rebased this feature branch a few days ago to put the major change into a separate commit from the related minor change.\n. Updated this to 0.176, whose last-minute automatic cleanups caused a conflict. I'd like at least a response if this still can't be accepted for some reason.\n. The thing about debugger_cpu is that it's a bit misnamed, since it's not a per-CPU structure at all. The vast majority of the interface between device_execute_interface and the debugger is handled by the device-owned device_debug class. The majority of debugger_cpu actually has to do with handling memory accesses for debugger expressions, though it also manages things like which CPU is currently executing.\n. \"As far as I can tell\" wasn't good enough; empty value strings occur in info and feature tags by the dozen. In fact, one previous feature I implemented was deliberately designed to take advantage of sharedfeat tags allowing the value string to be empty.\n. What I am specifically referring to are the info, sharedfeat and feature tags, each of which is supposed to take a pair of name and value entries. The MAME softlists often set up info and feature tags with value=\"\" for various reasons, some of them probably more legitimate than others. The software slot-default mechanism that I implemented (which apparently doesn't work; I didn't test it rigorously) is intended to accept a sharedfeat with value=\"\" to mean \"remove the default slot option and don't try to replace it with anything else.\"\nThus my latest pull request incorporates a custom variant of softlist_parser::parse_attributes specifically designed to accept value=\"\" for these tags rather than treat it as absent and therefore invalid. The only other problems I noticed, after reducing the total number of validation errors from 773323 to 302 by fixing a couple of logic errors, were two sketchy entries in one software list that failed to name a publisher (for which I inserted <unknown>).\n. I'm beginning to see more minuses than pluses. The structure of software lists, especially as parsed, depends heavily on core semantics and information models, and I think those dependencies could easily be increased in the future. And since XML isn't some arcane format devised for MAME, I don't think outside applications would really need access to MAME's own parsing methods.\n. You're right that rom_entry is the only explicit dependency of the existing parsed softlist format, and that it ought to be replaced some day by something that works better with C++ dynamic allocation and iteration. (I see util::software_rom_entry being a non-core class as a potential hindrance to that effort.) However, even though the tags are parsed as strings, their resolution depends heavily on the core structures of devices, image interfaces and memory regions, and one of my personal plans would involve entries referencing I/O port types, and that would really benefit from having access to enum ioport_type.\nI do see some advantage in managing parsed software lists separately from devices configured for a particular machine. Maybe this patch is a step in the right general direction, but it doesn't really get there, and I don't think it's the best route to take. I think a better approach would begin with creating a device-independent class for parsed software lists, but keeping it within the core along with such machine-independent modules as drivenum.cpp and validity.cpp.\n. I actually now have a working implementation of custom softlists which can be placed inside ZIP archives, with parts selectable from the command line. (Loading softlists from ZIP files took no implementation effort at all, since emu_file handles that generically enough.) Of course it won't be in 0.176, but it goes to show that the software list device shouldn't take over software loading if the list may not even be attached to a device.\n. It goes without saying that #1151 is wholly incompatible with this, even though it also separates the parsing routines from the device structure. Besides introducing a new feature and keeping the parsing code within the core, it has the benefits of maintaining the parsed software list as a unique_ptr and removing the stealth include of softlist.h in emu.h that was introduced a few requests ago.\n. I don't think the software_list_loader class is quite the right solution for the conceptual problem. Even in its current stubby state, it and device_image_interface depend too much on each other.\n. It only ever tests bit 15, but that wasn't getting cleared.\n. Constexpr floor works on certain versions of GCC. It doesn't here with clang.\n. This admittedly does need substantial refactoring now to resolve conflicts on other changes @npwoods has been pushing. I think the criticisms against overloading diimage with software list stuff is justified, though only in part (since non-device software lists will have to be held by some device-related structure). I'll get around to this when I have time.\n. My biggest problem with the mechanism implemented in e45d316bc9683d46c5a0414e57f9ec1b99d64d05 is that it tightly couples software loading to emu.h. I'm trying to mitigate this by removing the stealth include and moving software_list_loader, this time into romload.cpp/h (which already handles one of the two important cases).\n. The software_list_loader situation can't be solved simply by forward declarations, as every definition of get_software_list_loader requires full access to one of its subclasses.\n. Yes, you can forward-declare software_list_loader in diimage.h (in fact, the rebased version I've pushed does precisely that), but that isn't enough to compile any definition of get_software_list_loader, which would require either including a header file providing the superclass and subclass within each device header (or within diimage.h, which as I've said is bad form), or transferring the definition to a source file including the same. The latter would be more consistent with MAME's general coding style of not inlining definitions of common virtual functions, and is also what I've done with the default implementation of get_software_list_loader (whose source file also localizes false_software_list_loader, which, as a dummy class used only here, needs no further exposure).\n. I'll close this for now; even if there is demand for this new feature, I see little point in this specific pull request remaining on the list indefinitely since my code will need a lot of refactoring to keep up with the current codebase.\n. device_image_interface already has a method named load_software; having the new function indirectly call the old one with the same name is a bit confusing.\n. All object finder types already have an implicit pointer conversion operator built in (as well as an explicit one). I see this as a misfeature born of convenience, but getting rid of it will require considerably more invasive work. Device delegate constructors want pointers, and doing away with operator* as well in my earliest devfind WIP required too much syntactical torture to keep them happy. The reference conversions are less essential, and run somewhat contrary to the concept of device object finders as application-specific smart pointer types.\nI see a fairer complaint about having to force input names\u00a0to conform with legacy I/O port array structures. I haven't paid much attention to keyboard modernization efforts and don't really know what their focus is (it really doesn't help that keyboard layouts could be in any of several dozen directories in the MAME source, depending on whether they're separate devices or not). If you're alluding to std::initializer_list, one WIP of mine did in fact accept them for initializing finder arrays. I'll rework this branch along that line and resubmit it.\n. On a related note, Pooyan and Roc'n Rope could probably be merged; they run on almost identical hardware except for the CPU.\n. What is the perceived utility of this? These video boards aren't common in any way. Sure, airraid and cshootert both have the awful unreadable gfx blobs, but they aren't hooked up in quite the same way.\nI think it's better to break the code up into things resembling devices more than boards. I have been working on a common background tilemap device that so far is usable by darkmist, airraid, cshootert, deadang, cabal, dynduke, toki and raiden.\n. Yes, games may have different reset behaviors, and that's an unavoidable fact. I haven't closely studied the games that have \"Credit Reset\" or \"Clear Credits\" inputs, but they seem to represent a distinct input type with more specialized usage... at least in some cases; I think a few might be key-out switches that have been misidentified because the coin/ticket dispensers aren't emulated.\n. A conflict has already arisen, and I have an explanation. It seems some gambling drivers are rebinding the IPT_SERVICE \"Test\" input to F1 so as not to conflict with the service mode DIP switch which is assigned the same binding by the PORT_SERVICE and PORT_SPECIAL_ONOFF macros. In such cases, I think a better workaround is to unbind the DIP switch, as it's likely to be redundant with the non-toggle input (totally so in the case of Fever Soccer) and still can be toggled itself through the UI's DIP settings menu.\n. The reason for taking natural keyboard handling out of ui.cpp is not because the core needs access to it (the core barely accesses ui_input at all now) but to have it be with related input routines, not buried in a master module that handles too many unrelated things. The UI input module deserves a wholesale reimplementation anyway, but I'd rather leave that to a developer who knows a more efficient way for the OSD layer to communicate with the frontend.\n. I have no idea as to what \"LLE keyboards\" are supposed to be in MAME. I guess I'll just have to forget about fixing issues like MT #6340 now and continue work on areas further removed from the so-called \"future of MAME\" PC and handheld emulation projects.\n. Yes, only the opcodes in the program ROM (a lot of NOP fill included) have the D7 bit inverted. The non-opcode data isn't encrypted.\n(bdream97 never attempts to write into the ROM, though the same couldn't be said of mbutrfly when it was still failing a protection check and putting the SP in the middle of ROM, which tended to run the Z80 off the rails in short time.)\n. > What if the CPU does an M1 fetch from RAM?\nThat doesn't happen with most arcade games, and certainly not here.\n\nPerhaps it would be better to use a single handler for the entire decrypted opcodes space that reads from the program space and does the necessary transform rather than a fake ROM region.\n\nAll right, but there are dozens of existing drivers that use the \"fake ROM region\" method (or a memory share, which would get included in the savestate unnecessarily).\n\nThat would better represent the hardware if it's doing something simple like XOR M1 with a data line.\n\nI don't think you have any better idea than I do as to what the hardware actually does. Even the button lamps in mbutrfly are just an educated guess based on what causes those I/O lines to be set.\n. I thought I removed the \"opcodes\" region with my last rebase, but the dummy region was still in the ROM definition. Now it's gone for good.\n. The sort of code introduced in bb6369ab0d91a92f4942732f8155ac0e087b6d07 I see as too ugly to demand for widespread use. It's an overly complicated solution for a problem that seems of negligible importance when the target space has purely functional read handlers.\n. I'd really like for this pull request to be accepted for 0.177. The solution to the debug access issue I implemented should be good enough for more general use, though I've refrained for the moment from applying it to fix what wasn't broken in other drivers. (It wasn't really broken here either, but...)\n. That's fair enough. That value would only have to be always true in the debug memory access routines themselves.\n. Those are commands for Galil motion controllers. The schematics show a connection from a \"GALIL\" PAL on the wheel driver board to a \"Galil Board.\"\n. @mmicko was doing a lot of crazy modernization that day, including converting the output module to C++. The new implementation of output_manager::find_item might be the cause of the inefficiency here, since it iterates over all the pairs instead of using std::unordered_map::find.\n. #1307 makes sc2prem run over sixteen times faster, which should be nearly as fast as it was before f9f908d48bd3607f8ddf529eb6b83c2b4b0b9790.\n. Looks like cdb531e83defeb87fe131c37ca4ff3d28fc3f3df has already fixed this.\n. > What's the use case where this is better than moving the flip screen attributes onto the tilemaps themselves?\nBesides needing to be copied to the tilemaps, flip screen bits often need to be read by sprite drawing routines as well.\n\nThe gfxdecode device isn't even a real \"device\" as such, it's a kind of HLE of the concept of mapping memory layout to bitmaps. It shouldn't be holding machine state.\n\nWell, it's an unavoidable fact that many devices aren't \"real devices\" that you'd find on an actual PCB but abstractions created for the sake of emulation, and they're fully capable of holding HLE machine state if they need to. MAME's video device emulation has a particularly poor correspondence with actual ICs (though that can be a bit difficult to work out in the case of undocumented customs) and is generally a bunch of concepts (some very legacy-ish) thrown together in a way that sort of works. The screen_device still manages a whole bunch of somewhat to barely related things like a priority bitmap. device_video_interface ought to be the sort of structure to hold screen-flipping information, but device_video_interface as it exists is a conceptual abortion that provides nothing particularly useful, just the screen that also gets passed as a parameter in the update function. I see device_gfx_interface as better realized and think more devices should use it--but provide their own flipscreen functionality if they require it. (It's possible that many arcade boards that use custom graphics ICs have to write the flipscreen status to control registers on each graphics device; at least, this seems to be the case with later Seibu games.)\n\nAlso, looking to eliminate the dependency of tilemaps on the tilemap manager, and holding them with unique_ptr rather than naked pointers that magically get cleaned up when it feels like it could make sense.\n\nEliminating the global tilemap manipulation functions and making tilemaps more dependent on device_gfx_interface is actually a step in the direction of having them owned by it. However, it would likely double the code churn here, and I still can't figure out how to replace tilemap_manager::create while keeping its syntax from becoming even uglier than it is.\n\nThis is another good example of why it's worth discussing stuff with the team before embarking on a major change.\n\nI'm willing to discuss things here or on the list, but so far the other participants in this thread have been you and yourself.\n. > machine state that has nothing to do with decoding graphics definitely shouldn't be moved into gfxdecode\nWell, flipping tiles does qualify as decoding graphics in a way.\n\nThere are also systems where some layers are magically flipped by setting a bit in a control register while other layers need the software to set the flip bits on the individual elements in the layer and adjust positions accordingly.\n\nI don't know about those systems, but they should in no way be forced to use the generic flipscreen routines in gfxdecode_device.\n\nGlobal flip screen bits are really only good for games like Space Invaders and Laser Battle that have a single monitor and use relays to flip the polarity of the deflection coils.\n\nActually, it extends to hardware quite a bit later and more advanced. Take a look at the previous generation of Psikyo hardware (1993-1996), and you'll find a global flip bit hardwired to a DIP setting! (Space Invaders, being framebuffer-based, doesn't use or need the generic flipscreen routines.)\n. The inclusion of flip screen latches in gfxdecode_device seems to be the main point of contention. Not long after I posted my last message, I came to the late-night conclusion that it would be better to eliminate them from generic devices and add them to specific drivers as needed, much as was done with such odds and ends as generic palette RAM. If there are no objections, I'll have that semi-major change included in this pull request.\n. Well, it turns out \"semi-major\" rather understates the code churn here.\nI had a belated second thought that the generic flip screen latches could be separated as a device interface which drivers could use directly, thus making most of my laborious work here pointless. However, making them driver-specific, however monstrous the change may be, could make it easier to separate out graphics devices in the future. What do other devs have to say on this point?\n. machine().rand() seems to be used in drivers mainly as a crutch when some bit needs to vary in a way that the coder hasn't figured out. It's also used by the core's ROM loader to random-fill NO_DUMP regions in a way that doesn't break savestates.\n. I just rebased this branch to resolve a few conflicts. I'd like to have some general feedback on this as it stands now; I'm inclined to withdraw this pull request unless there's a consensus that it really represents the right approach, not just an overambitious mass of code churn.\n. I'd update this to resolve the conflict with my own changes if I was still confident in this approach. I now think this may not be quite the right approach, which perhaps could lie in improving device_video_interface to make it do something actually useful.\n. It sounds like adding a command line switch to allow automatic image creation would be the sensible thing to do.\n. One remaining bug is the use of m_ptr (which no longer exists) in operator[]. RandomAccessIterator traits are already assumed by the code, so return m_begin[n] will suffice here.\n(The filename also seems a bit long now, but that may just be me. Using the full name of the class seems like a Javaism.)\n. > I've never seen these games with 4-way sticks so I don't believe this to be correct.\nThis sort of statement is subjective, but I think it's fairly likely that 8-way joysticks were installed in practice. Still, both the game design and the official documentation provide evidence that reality, in this regard, may have been frequently inaccurate.\n\nWe need a level of abstraction for control panels rather than the input ports and control types being mushed together.\n\nI think MAME would do well to implement something vaguely along those lines. It's well out of the scope of this pull request, though, so I don't want to discuss it further here.\n. This was intended as a general solution, not just for \"one specific driver\" (video/seibuspi.cpp was specifically modified because it doesn't use the normal draw routine). However, I don't intend to press this request, even though I dislike the ad-hoc way that drivers currently implement \"one key per layer\" for disabling tilemap layers.\n. Shouldn't this makeshift ROM be marked as BAD_DUMP?\n. I know that some manufacturers used multi-tilemap chips in their later games, including Seibu Kaihatsu (the post-Raiden games with the \"CRTC\" control registers) and Dooyong (whose DY-PL-1 chip appears to provide exactly two ROM-based tilemaps; Vas Crabb's recent work doesn't account for this). However, NMK doesn't appear to have made this switch on their own games, and it doesn't appear to have happened with these tilemaps either.\nWhen it comes to tilemap ASICs, it's very hard to tell which chips provide what functionality, in large part since official documentation is often totally nonexistent. In many cases (including this one) there's good evidence that each tilemap has its own ICs, but uses several different ones for each or several of the same kind (and might even be using some of them for sprites as well). I don't think it would make any practical sense to insist on mapping each of Seibu's earlier tilemap ICs onto a single MAME device.\nFinding good references on the Internet for Jaleco PCBs of this era is almost impossible, since most of them are multiboard stacks. Stefan Lindberg's photo of Legend of Makai is by far the best, showing NEC-made \"VCTR\" and \"SCTP\" chips in proximity to each tilemap ROM. Peek-a-Boo, a late-generation single-board game, also has the 4 and 5 tilemap ROMs surrounded by multiple ICs (but not the same ones?). In conclusion, I really doubt that writes to one tilemap register are affecting other tilemaps here.\nI've tried not to make gratuitous changes to the tilemap implementation (but oops, it seems that I may have messed up the scrolling somewhat). The soldam tweak is thus faithfully reproduced, though with a derived MCFG rather than with the evil use of strcmp on the machine name.\nI do plan for this device to be hooked up in cischeat.cpp and jalmah.cpp, but disentangling the vregs   folderol in megasys1.cpp took so much effort that I decided to commit while I was still ahead.\n. The trick of sending audio output through the cassette adapter on a system incapable of generating sounds on its own was also used by TRS-80 games.\n. All I really know at this point is that the 0-3 value from the DSW gets added to a value pulled from this table:\n1436:  00 FF FF FF FF FF\n143C:  01 01 FF FF FF FF\n1442:  01 01 02 FF FF FF\n1448:  01 02 02 02 FF FF\n144E:  02 02 02 03 03 FF\n1454:  02 02 03 03 03 03\n145A:  02 03 03 03 03 03\n1460:  03 03 03 03 03 04\n1466:  03 03 03 03 04 04\n146C:  03 03 03 04 04 04\n1472:  03 03 04 04 04 04\n1478:  03 04 04 04 04 04\n147E:  04 04 04 04 04 04\nThe row index is $7C0C (capped at $0D-1), the column index is $7B3C (not bounds-checked) and the result (capped at $04) is stored in $7C09, whose value is then used as an index into two other tables. This seems as if it could plausibly be a difficulty selector based primarily on rounds played and player wins.\n. You should use IPT_GAMBLE_BOOK and IPT_MEMORY_RESET instead of renaming IPT_SERVICE1 and IPT_SERVICE2.\nThe ticket dispenser device also doesn't seem to be quite hooked up properly, since the WRITE8 handler uses bit 7 as the active bit (it isn't a hardcoded constant but might as well be, since there's no method to change it). This nonsensical implementation deserves a proper rewrite.\n. It's not so surprising that usage of IPT_MEMORY_RESET is still relatively low; I added it to MAME only fairly recently, and since then have been going through gambling drivers to increase its usage, hooking up dispensers to most of those as well. (The reason I didn't use IPT_MEMORY_RESET in mjsister was that it actually has two \"M. Reset\" inputs, and neither is actually functional.)\nThe ticket_dispenser_device issue obviously can only be fully resolved by a larger-scale cleanup which I intend to do when I find the time for it.\n. Well, the new ticket_dispenser_device::motor_w method is meant to replace the old WRITE8 method in drivers, since of course that device doesn't need 8 lines of communication when it only reads one and writes one. I admit that motor_w's current implementation is a crudely hacked-in wrapper, and the device needs a more thorough rewrite in general.\n. Does \"row size\" sound better?\n. Rebased and amended.\n. I've had the idea of creating selectable XML \"overlay\" files for the purpose of renaming inputs, analogous to the plastic overlay cards that many console games were distributed with. It's a bit low on my list of personal coding priorities, though.\n. Perhaps the frontend needs a command to validate a software list independently of driver configuration. This may become more useful if my old proposal to allow software images to supply their own lists is considered again.\n. Vas, what you don't mention is that int is anything but an \"obvious\" representation of line state.\nI do think that making the parameters to memory handlers explicit is a good idea (because it's easy to forget what the parameters are named when so many handlers don't use the mask or even the offset), but in some other cases I don't think the signatures have been so well thought out; for instance, modern C++ code shouldn't have to pass around random chunks of optional data as void * pointers.\n. Now that 0.179 is out, I'm really hoping for at least some feedback here, preferably from devs concerned with the OSD layer.\n. I worry somewhat that the new inheritance and construction schema here may not be exactly right; with some tweaking, I think it could reach a considerably higher potential. Making input_class polymorphic will increase modularity and prepare for a further overhaul of the input system that I have planned. Note that the polymorphic input_device_item adapters already existed.\nSplitting input.cpp does inflict quite a bit of churn on the codebase; as usual, I did it to liberate a lesser piece of the core from emu.h dependency, and in this case it fortunately turns out that neither the UI nor any devices require access to core inputs on a deeper level than the standard input_seq codes and polling routines.\n. > Well, we merge and we go from there?\nAt this stage, I don't see why not.\n. Why not also add this to neogeo.xml?\n. MAME's irregular mouse button assignment may be longstanding, but is there an actual case in favor of it?\n. I admit this doesn't feel exactly right to me either, but neither do many things about the UI's \"in-game\" input handling, though that does happen to work well enough for the average user. Perhaps the debugger break really should be a UI function, but the UI module has had basically nothing to do with the debugger since Micko killed the \"internal debugger\" six months ago.\n. Yes, it's big; the sheer size of this pull request is why it's been split into three commits. The first commit (separating the default sequences by input type) preceded the other two in my plans; I only realized the full potential of separating out the inpttype structure later. What inspired me to move the input names to where the frontend can translate them was disassembling German poker games that have multi-language support in their service modes.\nI still have considerable doubts about the appropriateness of some of the standard input names; for instance, I'd prefer \"Mahjong Take Score\" to \"Mahjong Score,\" and \"Book-Keeping\" could at least lose the unnecessary hyphenation. Also, changing the structure of the input type list itself to something like std::unordered_map would probably make some aspects of this cleaner.\nCustomizing the input names in mame_machine_manager::create_custom is admittedly more of an opportunistic implementation than an elegant one. However, the most obvious point of failure has been taken into account: if some future frontend neglects to name the inputs itself, MAME will use the configuration tokens as a fallback, which won't look so nice but at least make it possible to tell them apart.\nOf course there's no way to localize driver-supplied PORT_NAMEs, which MAMEdevs have started to look upon as vaguely deprecated (#1513). My own plan for that is to introduce the concept of an \"overlay\" file, loosely analogous to the physical overlay cards supplied with many game cartridges, that when loaded will rename generic input fields to indicate their game-specific functions.\n. > I'd rather the error sink be passed around.\nWhy? It's a cumbersome extra parameter and seems hardly necessary in an environment where osd_printf_error can be captured (as is already being done by the validity checker).\n. The implicit cast operator also appears to be the cause of the \"ambiguous conversion\" error in the tea-ci build.\n. This Microsoft page suggests that TCHAR is just an outdated compatibility macro:\nhttps://msdn.microsoft.com/en-us/library/windows/desktop/ff381407(v=vs.85).aspx\n. The MAME coding style guidelines don't actually state what indentation level case labels use, and there remains no general consensus on this point in the wider world of programming, let alone other extant parts of the MAME codebase. Nevertheless, I'll move the indentation back here.\n. The segfaults are because required_device finders can't be accessed before device_start (except by the validity checker). Try using subdevice instead.. The shifted version looks like the degree symbol (0xb0).. It doesn't seem clear why this dependency should be necessary when the driver has been split and agat_state doesn't inherit from the apple2 driver class.. Why does it not belong in the class? It's an optional feature.. It's a subclass of device_nvram_interface, so not really separate except for configuration purposes. Perhaps it should be merged, though.... error_string no longer does anything here. The variable should be eliminated.. As I recall, it's for drag-and-drop on Windows, which makes the whole file path into a command-line parameter.. IVS is the Japanese television company that produced the Kokology show. Leave them out of this, please.. Can you spot the typo here?. Perhaps, but I'm more inclined to believe that the address map is the proper place for specifying whatever the interface between an address-data bus and a device happens to be.. As you might be able to tell, I started working on this device before the great device type encapsulation.. \"YM devices\" is a fairly vast category; I'll remark that MAME's OPN emulation is a big ugly heap of legacy C code whose modernization would be a fairly Herculean coding task. Speaking only of those at hand, as my comment states, there are actually two devices being reset here, even though the emulation reasonably treats them as a single unit.. They're really separate sound boards, so it's probably worth making them into individual devices. I don't think that that sort of architectural change belongs in this PR, though.. I think this might be better described as \"hack\" than \"bootleg.\". That's definitely not the right class name.. There are too many tag lookups here. Please revise this and the other drivers using banked MultiPCM to use required_memory_bank finders and configured banking.. Configured banking and required_memory_bank should also be used here.. You should at least be trying to compile your own changes before submitting pull requests filled with obvious compilation errors like this typo.. \"Pupplemental\" is a typo, right?. This will produce compilation errors when seta_vram_w doesn't come before this in the same file.. What you've come across here is known as \"byte smearing.\" Basically, when the MC68000 writes data to the chip with move.b or some other instruction, it will be present on both halves of the data bus. It's up to the address decoding circuit to only select writes directed to one half, but it's often easier for hardware to just ignore the extra control signals and allow writes to either byte to affect the peripheral.\nI've implemented a standard way for specifying byte-smeared accesses in 16-bit address maps: just add .cswidth(16) to the entry. See cyclwarr in tatsumi.cpp for an example of this.. It's what's printed on the PCB, but that's not necessary here.. This likely should be m_beastlatch->pending_r() rather than the old  m_z80_to_beast_full variable, which the code no longer clears and is probably redundant now.. T0 and T1 shouldn't really be READ8 anyway, since they're individual lines.. It's also possible that the 87072's motor enable signal (which doesn't exist on the 8272) isn't demultiplexed in the InterPro's single-drive case. Intel's datasheet also suggests using open-collector NAND gates to demultiplex the signal in a two-drive configuration, which would cause deselecting a drive to turn its motor off.. The register_postload API is deprecated now. Please use device_post_load instead.. Is 1820-4784_2.bin a legitimate alternate 8042 program? If so, it should be kept as an alternate BIOS for the human_interface device, not simply removed from MAME.. As noted in ccb1f70feaffcf4edc40ae7c4e4c71627ee43eda, I don't think the M72 driver's Z80 NMI handling is technically correct. P1 is just a quasi-bidirectional parallel port (with no built-in strobes) on the 8751, so the hardware can't possibly be producing the NMI the way MAME does now. What I think would be enough to correct this, though it would entail considerable refactoring, is modifying the data flow of sound commands and sample data to go from V30 to Z80 to 8751 to DAC instead of from V30 to 8751 to Z80 to DAC, since the Z80 NMI routine mostly just passes data through and the DAC doesn't require a write strobe.. I would say \"almost certainly\" instead of \"maybe.\" Automatically copying ROM to RAM on reset is an emulation kludge that wouldn't make sense from a hardware perspective (though quite a number of computers have bootstrap code programmed to copy itself into RAM and continue executing from there).\nThe exact method used to remove ROM from low memory on CPU architectures that need it there after a reset varies widely. Sometimes there's a memory address or GPIO bit dedicated to it; sometimes it's just any access to the boot ROM at its proper location; sometimes it's after the first write to a certain part of memory (e.g. sdk51). There are even some 8080 and Z80 boards which don't even map their boot ROMs at 0 for a moment, instead gating a JMP instruction onto the data bus during the first three read cycles.\nUnfortunately, MAME's M68000 core is currently set up to read the initial SP and PC values at device_reset time, which makes proper emulation of boot ROM overlays even more awkward than it is with other CPU types.. A more modern implementation would use a custom constructor for this device class. MCFG_ macros are considered obsolete now.. No, the handlers will see the right-justified hardware address, since the emumem core applies the address shift first. If the software address were provided instead, it would cause unnecessary complications for hooking up generic devices to CPUs like the TMS34010.\nIt's similar to how emumem shifts the address right by 1 when reading or writing a 16-bit word on the TMS9900 or MC68000.. Perhaps the emulation of the various CRU buses should switch to using the hardware address, since that's what both read and write handlers will see now.. The address shift parameter means using the software address within address maps and the CPU core itself, for TMS34010 and other CPUs as well as the TMS99xx. Addresses are shifted before passing them to the peripheral handlers because most of those need only use a few low-order bits anyway. So just like your average 16-bit bus peripheral or 8-bit peripheral mapped to even/odd bytes on a 16-bit bus, a LS259 or something mapped to CRU space at 400 to 40F will only see addresses between 0 and 7.\nYou'll see a few 16-bit handlers in MAME that run tests on offset << 1 because they're trying to trap some specific accesses to hack around an emulation problem. Handlers ordinarily shouldn't need to shift addresses like that, though.. I added some comments to cpu/tms9900/tms9900.cpp regarding the \"hidden magic\" of address shifting and other considerations which CRU handlers need to take into account.. ",
    "retro27": "Im interested in your 3d Mame Project, Great Idea, how do I get this work? what build of mame do you use? Ive been looking around and found this (https://3dwarehouse.sketchup.com/user.html?id=0098879480321870168359978) Gozer has created hunderds of 3d cabinets using Sketch Up, They are all free to use. Are they any help?\nCheers\nRetro27\n. ",
    "bradhugh": "mmicko, I already have some code for this.  I'll get it in and send a pull request.\n. This is in now, feel free to close.\n. I've got a good start on this work, but to port properly, need to refactor and modularize existing windows input methods RawInput, DirectInput, and Win32.  If you want me to take this on, I can work on it.\n. @mmicko this is the xaudio2 support I mentioned on the issue tracker.\n. Good call. Underflows were simply ignored. Overflows weren't handled and as you mentioned could cause unbounded memory growth.  I'm updating the code to account for this. Do you know how to force these conditions (running faster than real time or pausing)?\n. @mmicko - thanks, that's very kind. I haven't done a lot of C++ code, more C# but I've debugged enough C++ to know many mistakes to avoid - lol.  I've updated the pull with some fixes for the buffer overflows/underflows, etc.  Please let me know if you have any other feedback.\n. Thanks, I'll send a new pull once I've worked through this.\n. Please check this out and comment. Not sure if we want to take before release or wait till after.\n. I looked at this today and may have a fix. I'll work on getting it in sometime tonight.\n. Should be fixed.  I could repro on my mac, now it works for me.  Let me know if it works for you.\n. I figured you'd build it, but I posted a 64-bit version for Mac here just in case https://1drv.ms/u/s!AohIe_qtFjndo7MjT3-tQQn3tEsVBQ\nIgnore the fact that the folder I put it in is called mac keyboard fix. I'm doing too many things at once and misnamed it.\n. Any luck?\n. https://1drv.ms/u/s!AohIe_qtFjndo7MjT3-tQQn3tEsVBQ\n. Awesome fixed by commit eb97703a4cadfca16c61553f382b5b44c173d6cd \n. Please revise - most of this stuff is good.\nWe still need DirectInput 7 support not for old OS's but a few old devices don't support DirectInput 8.\n. All my testing has checked out. Please feel free to give it a try. I'll merge tomorrow if no problems.\n. That's a good idea. I'll move the window list to a static inside osd_interface.\n. What OS?\n. Hmm, I'm not able to repro. Are you running in Window mode or fullscreen mode?  Can anyone else out there repro or have any ideas how to?\n. Have you tried a clean ini file?  If that were the problem, I'm not thinking the UI events would work if the keyboard device wasn't working though.  If I put together a build with a ton of tracing in it would you be able to clone, compile and run to help debug this?\n. I've added some additional traces (and fixed a minor bug where exit() was getting called twice).  The fix is available in https://github.com/bradhugh/mame/tree/sdlinput_trace.  Please build this and repro the issue with -verbose enabled.\ngit clone https://github.com/bradhugh/mame.git input_test\ncd input_test\ngit checkout sdlinput_trace\nmake <options you prefer, SOURCES= or SUBTARGET=>\nrepro while running with -verbose\n. Ok, this is helpful. Are you running 32-bit Ubuntu Mate? (The size of the pointer traces seem to say yes).  If so, maybe I can try that to get a repro.  It looks like SDL is truly just giving us no events for your keyboard.\n. I can try Ubuntu Mate 32-bit and see if I repro. Hopefully i386 won't make a difference versus PowerPC.\n. Actually, I just updated this branch with another trace and a potential fix. I saw that I was assuming the SDL_EventType enum was the same size as int on all platforms and that may not be true.  Can you do a git pull to grab the lastest, compile and test again?  In the meantime, I'll be working on an Ubuntu 32-bit repro.\n. Sure, yes, has one extra trace that will help confirm.\n. It looks like on Ubuntu Mate 32-bit for i386 I cannot repro. I'm guessing this must be some bug that really only manifests on PowerPC. I guess I need to buy one :)\n. I integrated some fixes into the main repo, but I suppose they don't fix your issue. I will update that same branch you previously synced with one more round of tracing.  After knowing whether we do or don't get events directly from SDL, I'm not sure there's much else we can do.  I'll work on this tracing tonight and let you know when it's in so you can try one last round.\n. I updated the sdinput_trace branch on my repository with traces that are as close to SDL as we can get.  If you've still got the previous copy of this branch, the build should be quick if you just do \"git pull\" to grab the latest changes, then build.  This one will be very noisy but if it doesn't show events coming from SDL, I'll have to assume it's some sort of SDL bug.\n. Cool, I was able to actually get access to a Mac G5 where I was able to install Ubuntu Mate PowerPC.  It appears based on my build that it's building ppc64 - is that what yours is doing too?  Sorry, I've never compiled Linux/PowerPC before - do you have to specify any special parameters on MAME to make it build, or is it just \"make\"?\n. Ok, good news. I can repro on the PowerPC build. I will investigate on my end and work on a fix.  Thanks for helping narrow this down.\n. Ok, I've got the fix.  I'll be working on it but it likely won't make the build we're about to ship.  I'll get it in before the next one.\n. Bug in mame code that only manifested on big endian. Working on it now.\n. This should be fixed now in the main mame repo. Feel free to pull the latest and test.\n. I was under the impression this was a problem with all controllers / gamepads. Is this a problem exclusive to Xbox controllers?\n. I wondering why your experience is different than others.  Some of the fixes so far were specific to mouse input and implementing a workaround for a specific SDL bug on OSX.  I am not aware of any other folks experiencing this (other please chime in if I'm wrong).  Do you have any idea what might be unique about your configuration?\n. I believe I was able to reproduce this. I can make it happen as stated with the Visual Studio 32-bit SDL debug build (because it's slow to execute the decompression routines I think).  My repro is with a large snapshots file (because it attempts to load as part of the UI changing games).  When this part is super slow, it can make the auto-repeat detection for the UI keypress fire.  I can \"fix\" it easily by just turning of auto-repeat entirely in the UI code by changing the line:\nif (exclusive_input_pressed(iptkey, IPT_UI_DOWN, 6)) // Around line 846 in selmenu.cpp\nChange the 6 to 0 which disables auto-repeat entirely. This probably isn't a true fix, but I'd love confirmation from someone that this is in fact related to auto-repeat and that I have a true repro.\n. Awesome, this confirms I have a repro also. I'll take a look at how to fix it.\n. @cuavas just checked in a change to properly initialize members as he mentioned in commit a2b99f81.  can you check if this helped?\n. Ok, nevermind - sorry I'm just catching up.  I see this did fix most of your strange inconsistencies, but you now don't have the any pointer at all when staring up.  I'll see if I can repro this and if so, track it down for you unless @cuavas is already working on it.\n. I couldn't repro this at all.  It's working consistently for me.  Are you running full screen or windowed?  What OS and compiler version for OSX?\n. Thanks for the information. I think this has to have something to do with the code in the UI layer that determines whether or not it should show the UI mouse cursor.  There is code that checks whether the handler is a menu to determine whether to show the mouse.\nCan you clone, build, and run a test from my repo?  I added some tracing in the branch \"ui_mouse_debug\" below:\nhttps://github.com/bradhugh/mame/tree/ui_mouse_debug\nIf you can run this with -verbose, I think it should show what is actually going on. Let me know if you can do this.\n. I looked at this and can't seem to see any difference in the tracing between yours and mine with the added lines.  I did however see one line in your verbose output that's not in mine and I can't explain.  In your output there is this sequence:\nStarting No Driver Loaded ':'\nChanging callback type: GENERAL -> MENU\nChanging callback type: MENU -> GENERAL\nChanging callback type: GENERAL -> MENU\nStarting No Driver Loaded\nDetected is_menu_active change to: active\nDetected UI Mouse render choice change to: true\nThe second \"starting\" message there is coming from something that I'm clearly not running and I could not find it in source.  Do you have any cheats or LUA add-ins enabled?\n. That was it.  The version of SDL!  I can repro now with the \"public\" version from their web site.  I had downloaded and built a recent version from their mercurial repository a month or two ago and I bet it has fixes for this.  Let me see what I can figure out now that I repro.\n. Ok, I've pushed a test fix for you to this same repo.  Can you pull the latest from my repo ui_mouse_debug branch, build, and see if it's fixed?\n. Ok, great catch. I'll take a look and see what I can figure out.\n. I'm having trouble finding a workaround. I just tested again with my newer build of SDL against the released version of MAME and not only does the UI work well, but the operation wolf issue isn't able to be reproduced either.  What are your thoughts on just recommending Mac users build a newer version of SDL if they have this problem?  I'll continue to look for a workaround, but no luck yet.\n. SDL2.framework.zip\nSure, I just built this which is from the latest unmodified source from SDL mercurial. Can one of you guys validate that it resolves it?\n. I know what you mean regarding the mouse in the quarter.  It does expand, but never fully.  I was never able to get it to go the full vertical height of the screen even once the movable area expanded.\n. I just tried your DMG with the latest MAME git sources and I can't repro the problem.  It's fixed - same as with mine.  If you can still repro, make sure you're using the mame build off of master, not the one where I attempted to fix it.\n. Yes, that's my experience as well.  For now, I would like to leave the code as-is since it appears to be an SDL bug and updating SDL fixes it.  If I can find a perfect workaround, I'll implement it, but for now leaving it as-is and recommend mac users use an updated SDL.\n. I tested the same scenarios on Ubuntu 16.04 LTS with whatever version of SDL you normally get through apt-get and didn't have any issues.\n. So I've got a code workaround that is working for me. Can you try out the latest from my repo's ui_mouse_debug branch?  I found a few things. 1) the problem only manifests on 2.0.4. It's not there in 2.0.2 or 2.0.3.  2) If I pass the SDL hint to use relative mouse in warp mode, it fixes it.\nSo the code fix is that if we detect the buggy SDL version, we use warp mode instead of the raw-event based relative mode.  Please let me know if it works for you.\nYou can throw any SDL version at it you like. It should only use warp mode on 2.0.4 rev 10001 (the public release from SDL site).\n. This member init probably helps significantly, but this latest part will have no effect as its scoped to mac.\n. I'll investigate the feasibility.\n. So right now, the mame input core (not just the OSD layer) doesn't support after-plugging.  I basically implemented it for the OSD layer but hit the following assert in input_class::add_device:\nassert_always(machine().phase() == MACHINE_PHASE_INIT, \"Can only call input_class::add_device at init time!\");\nIt appears there is more core input work that'd need to be done to support this functionality using any input API.  XInput doesn't really buy us much in this scenario.\n. Ok, that being said, I just commented out the two asserts and it actually worked.  There's a bunch more investigation for me to do though to see if it's safe.\n. I think this is good and safe but since we are close to release I wanted to send it as a pull in case we wanted to wait till after the release.\n. I'll work on this.\n. I have a fix I'll push after the release. After this fix, SDL joysticks with the same name will no longer collapse onto a single input. However since SDL gives no way to uniquely identify joysticks so we can persist them across initializations, if they are enumerated in a different order in subsequent initializations by SDL, they will get swapped (player 1 vs player 2), etc. In other words, you and your buddy might have to switch controllers after starting the game.\n. The SDL OSD has its own name-based mapping for joysticks.  How is this different from that?  Ultimately, we need to decide if this needs to be handled at the OSD layer or core input system.\n. I will work on testing this today. Will let you know if I see any issues on Linux or OSX.\n. So I was trying to test this. It seems to work ok without any config.  I tried however to enter the mapping in the config file. Yes, I was kind of trying to break it, but it seems a reasonable scenario.  I tried plug in a single joystick and yet map it to JOYCODE_2 (Player 2).  In this scenario it crashes in m_device[newindex]->set_devindex(newindex);\nCan you take a look?\n. Also, as @cuavas mentioned, if you go into the UI and choose \"Save configuration\" it overwrites any controller mappings which is not desired.  Please see if you can work that out as well.\n. Ok, everything is working as I'd expect. I think this is fine for this layer and I think we may be able to do away with the SDL OSD mapping feature since this one could be universal.\nOne nagging issue I have is one that is causing some pain in other scenarios.  Right now, Mame uniquely identifies controllers and input devices by names that aren't necessarily unique.  As you had to hack out the improve name functionality in rawinput, we may have to do something similar in other areas.  What I'd propose is that we add a new property on input_device called something like \"unique_id()\", \"immutable_id()\" or simply \"id()\" which would allow the osd layer when creating a device to pass a friendly display name along with a unique identifier.  You could then use this property for mapping devices instead of the display name.  I feel like \"name\" isn't descriptive enough to indicate that it needs to be unique.\nI'm ok with taking this as is if you're ok with me changing it later to use some unique id for the mapping.\n. Yes, by all means - add it if you've already done the work :)\n. Looks good. I'll double-check on Linux and OSX which I expect to be fine - then merge.\n. Hmm.  I will take a look.\n. I think this is unrelated to this change.  The backtrace provided seems believable. It means that somewhere during windows_osd_interface::update we processed more random window messages (winwindow_process_events).  One of those window messages was destined for the output window (output_window_proc) and the message was om_mame_get_id_string.  We crash in output_win32::send_id_string but I'm unable to readily resolve the offset to see where we are dereferencing the value 00000030.\n. ",
    "osresearch": "I've just submitted pull request #483 to output the game display to actual vector hardware and can confirm that the Vectrex sitting next to me demonstrates quite a bit of buzz based on what is on screen, as well as lots of wobble and shimmy.  Not sure how much of that is bad caps versus the original low-cost design.\n\n. Yes, updating the version test fixes these warnings.\n. Also src/devices/sound/samples.cpp:\nCompiling src/devices/sound/samples.cpp...\nclang++    -MMD -MP -Dnullptr=NULL -DPTR64=1 -DNDEBUG -DCRLF=2 -DLSB_FIRST -DFLAC__NO_DLL -DNATIVE_DRC=drcbe_x64 -DLUA_COMPAT_APIINTCASTS -I../../../../../src/osd -I../../../../../src/emu -I../../../../../src/devices -I../../../../../src/lib -I../../../../../src/lib/util -I../../../../../3rdparty -I../../../../generated/emu -I../../../../generated/emu/layout -I../../../../../3rdparty/expat/lib -I../../../../../3rdparty/lua/src  -m64 -arch x86_64 --pipe -Wno-deprecated-declarations -O3 -fno-strict-aliasing -Werror -Wno-unknown-pragmas -Wall -Wcast-align -Wundef -Wformat-security -Wwrite-strings -Wno-sign-compare -Wno-conversion -Wno-cast-align -Wno-tautological-compare -Wno-dynamic-class-memaccess -m64 -DINLINE=\"static inline\" -x c++ -std=gnu++98 -Wno-variadic-macros -Wno-long-long -Woverloaded-virtual  -o \"../../../../osx_clang/obj/x64/Release/src/devices/sound/samples.o\" -MF ../../../../osx_clang/obj/x64/Release/src/devices/sound/samples.d -c \"../../../../../src/devices/sound/samples.cpp\"\n../../../../../src/devices/sound/samples.cpp:574:15: error: no matching\n      constructor for initialization of 'flac_decoder'\n        flac_decoder decoder(file);\n                     ^       ~~~~\n../../../../../src/lib/util/flac.h:90:7: note: candidate constructor (the\n      implicit copy constructor) not viable: no known conversion from 'emu_file'\n      to 'const flac_decoder' for 1st argument\nclass flac_decoder\n      ^\n../../../../../src/lib/util/flac.h:96:2: note: candidate constructor not viable:\n      no known conversion from 'emu_file' to 'core_file &' for 1st argument\n        flac_decoder(core_file &file);\n        ^\n../../../../../src/lib/util/flac.h:94:2: note: candidate constructor not viable:\n      requires 0 arguments, but 1 was provided\n        flac_decoder();\n        ^\n../../../../../src/lib/util/flac.h:95:2: note: candidate constructor not viable:\n      requires at least 2 arguments, but 1 was provided\n        flac_decoder(const void *buffer, UINT32 length, const void ...\n        ^\n1 error generated.\nmake[2]: *** [../../../../osx_clang/obj/x64/Release/src/devices/sound/samples.o] Error 1\nmake[1]: *** [emu] Error 2\nmake: *** [macosx_x64_clang] Error 2\n. @cuavas: Can you point me at the file/function where the vectors are received by OSD? It's not clear to me what happens to the lines after they are added to the container.\n. Is there an guide to how to add a new renderer? The drawnone.cpp doesn't seem to be built on OSX and adding src/osd/modules/render/drawvector.cpp doesn't seem to update the list of available renderers.  The -renderdriver option also silently ignores unknown values.\nI don't want to abandon SDL for joystick and other support, plus it is helpful during debugging to have the mirrored display on the (raster) screen.  Looking through osdmini and some of the other parallel OSD interfaces it seems like this is quite a rabbithole of stuff that has to be reimplemented. Surely there is a better place to insert this sort of hook that doesn't require so much new code.\n. @u-man74 these patches are for a more modern open-source hardware vector board that I've designed with a USB interface and that works with the current release.  The ZVG used the parallel port and required booting to DOS to run MAME 0.96 (circa 2005).\n. If you follow the \"More info\" link on the v.st page to https://trmm.net/V.st you'll find all of the documentation, schematics, and firmware. There are no drivers necessary since it enumerates as a USB ACM device.\nIt would still be nice if there were an easy way to hook into the vector logic that doesn't require such a detailed understanding of the MAME tree. Figuring out how to add a new target in src/osd/modules/render/ is really non-trivial and I've given up on it for now.\n. ",
    "Luke-Nukem": "Hi all. I'm going to have a go at this as a way to learn more C/C++ and exercise what I'm learning at university. I'll be using the advice given above, and the work @osresearch has done, as a starting point and also working from a very old version of MAME (v0144) to which I had ported a very old vector patch.\nMAME Vector mod - software rendering only, I'd forgotten I did this.\nBetween all this, hopefully I should get somewhere.\n. Just an update. I've been going through the code and taking copious notes; getting things started.\nEdit: I've basically done just as was suggested by @MooglyGuy and have it compiling. I'll start extending things soon.\nI haven't got too much to show yet as I'm doing this between study (Comp Sci).\n. A quick question about this. If Vulkan is implemented, how hard/easy would it be to then get a shader system much like the current HLSL system set up, using Vulkan's SPIR-V shader language? (Including for Vectors).\nMy only experience with MAME so far is reimplementing some old patches for Vectors on a slightly older version of MAME; so my knowledge is limited.\n. Ah, I think I misunderstood what BGFX actually was.\nI do have another question though, how hard would it be to use BGFX for vector games? I haven't had much time to look further in to it due to study, but it's something I could be interested in trying if I can get a few pointers on where to start and what is relevant.\n. I'm currently digging through code and getting a feel for how such things as render_bounds work, and seeing if perhaps I could write something that renders a circle instead of a rectangle. My thinking is that if it draws a circle instead of a rectangle then there would be less need to add complexity such as smoothing the corners (in a shader for ex).\nAgain, I lack a deep understanding of MAME, so input and/or guidance would be great (if anyone has time).\n. @ImJezze thanks for the response, that clears up quite a few things for me. The link to #399 is very helpful and contains a decent amount of information to help me along.\nI don't think there is anything else I need to ask for the time being so I'll close this. \n. ",
    "Shideravan": "Digimon World 2 video now runs fine too.\nValeu, Juca!\n. N\u00e3o o conhe\u00e7o pessoalmente, mas um dia ainda quero ter o prazer de conhecer o Garoa Hacker Clube a\u00ed em S\u00e3o Paulo, hahaha\nAnd I have to say, I tested some other games which used to have graphical problems and the fix even made Heart of Darkness finally playable ;)\nOther fixes include Final Fantasy 8 and 9, Gex videos, Iron Man - X-O Manowar in Heavy Metal, MK Trilogy intro, etc :)\n. Well, in this case... I'm closing this pull request for now...\n. Ok, but other consoles drivers, such those for Playstation, Genesis, Game Gear, Nintendo 64, Saturn, etc etc etc... all use START, not START1 (which is used normally for arcade machines as \"enter new player 1 button\"). \nI think that a standardization is necessary so that the configuration is more intuitive for the user.\n. Also, I edited the title and the description of the pull request.\nI didn't put much effort on what to write, then maybe the old description didn't fit very well for what this update is intended to do.\n. @Pernod70 CHD of course.\nIn what other format would they be?\n. Hello, @Tafoid\nWell, thanks for the explanation, I really didn't knew what I had to do to share these files.\nI had some trouble to send these files to mediafire before (my internet upload bandwith is way to slow for send the files there). I'm trying now to send to a private ftp.\nAlso, I'll send you a email with details about these files, just after I finish this (could you please send me an active email which you are using?).\nBut in general, they are know community dumps, converted using default qchdman options.\n. @Tafoid and @mamehaze \nI send you a PM in the emuversal boards, with all the details about these files and also a link for MEGA for you to download them. If there's any question, please ask me.\nBest regards ;)\n. I submitted a fix for the wrong checksums.\nhttps://github.com/mamedev/mame/pull/471\n. Seems that Squaresoft was the publisher ONLY for the Japanese version. \nSCEA was really the publisher for Tobal No.1 + Interactive demo in North America, then I'll do a better documenting of this in a later pull request. That's why I'm closing this one for now...\n. \n\n. Thanks Oddi, I fixed everything :)\n. Oops, fixed ;)\n. I think that the best thing to do before work on a big change is to send just a small part of it, to see if it can be merged or have any problem with (or it will be a \"reinventing of the wheel\" for something yet to be merged by another dev)\nIn another words, you did it right ;)\n. 1-Fixed error in description for line 5230\n2-I'm updating the e-reader .xml little by little, I not forgetting about the promotional domo-kun card, I'll just add it later ;)\n. Ok, I can change. No problem :). ",
    "kamilmaj94": "\"PSX GPU: Fix the 24bit rendering of video sequences on games such as GranTurismo and Digimon World 3\" when had mame started to run games from PS1? ROMs based on ps1 hardware such as namcos12/11/22 etc but Gran Turismo? what?\n. ",
    "smf-": "I know this is an old thread, but I wasn't around at the time and just \nin case someone cares.....\nThe dumps you get from the internal test are hex dumps (srec? format or \nsomething) of the entire memory map including ram and the boot rom. The \nboot rom on eprom parts allows you to program and test it, on the mask \nrom parts (I think) it just allows you to test it.\nSo those should be separate and the ram shouldn't be included, which is \nhow I started adding them. No idea why anyone would undo that, but cest \nla vie.\nOn 24/10/2015 20:45, R. Belmont wrote:\n\nMCUs are 6805s that were dumped via test mode. The specific model is \nknown and has a non-power-of-2 ROM size, same as the Egret/Cuda 6805s \nin the Macs.\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/mamedev/mame/pull/421#issuecomment-150843384.\n. It's pointless as we only support 28 bit LBA anyway. So the lba address can't cause a problem for unsigned maths.\n\nTruncating the cylinder to 16 bit is a huge problem.\n. @MoochMcGee \"I mean, the cylinder counts were only 16 bits in the class itself anyway. And the abs was already there before this.\"\nWhat do you mean? They were int before you changed them to uint16_t.\nint new_lba = lba_address();\nint old_cylinder = m_cur_lba / sectors_per_cylinder;\nint new_cylinder = new_lba / sectors_per_cylinder;\nint diff = abs(old_cylinder - new_cylinder);\n\n31 bits is enough for the lba as we only support lba28 (up to 0xFFFFFFF blocks). When we go to lba48 then it will need to be an int64.\n. ",
    "sparrowred": "Sorry, this is a mistake from my side.\nI tried to connect the softwarelist names from the drivers with the internal names of the xml file but of course instead the drivers softwarelist names represent the filename.\nI promise to do better research next time before wasting your time again.\n. ",
    "ldesnogu": "LLVM is considering switching to Apache 2.0 license and it seems that license isn't compatible with GPL v2.  This should be checked by someone knowledgeable in that field before starting work with LLVM.\nhttp://www.apache.org/licenses/GPL-compatibility.html\n. ",
    "johnparker007": "I have made progress on the FME side by converting mfme layouts - please see http://mfme2mame.org for more info :)\n. Hey James :)\nYeah, converting it is a real headache!  But I could see it was doable, and got sucked in ;)  ...In theory you could use MFME to make layouts for non-fruit machines, in conjunction with the converter - though it's certainly not an ideal solution.\nDefinitely needs someone to write a cross-platform editor from scratch - maybe a university student could do it for their final year project - would look good on a CV.\nThe guys who make the fruit machine layouts are going to use to it make the new layouts (for new hardware platforms, like Scorpion 5) in MFME and then convert to MAME to test/play/release.  And I'll ask them to do us a \"Classic\" one for each new machine too (without any bitmapped graphics), so that MAME gets internal layouts for all the new fruit machines.\nI'm currently finishing up making the Classic mode... then I am going to start adding quite a few internal layouts to MAME... also, I will then create the \"DX\" (bitmapped graphics) layouts from the vast collection of MFME layouts, and host them on my mfme2mame website.\nI'm hoping I can tempt you skilled emulator coders in with all these layouts for some fruit machine bugfixing, as I'm not really a low-level hardware emulation coder type, it's out of my comfort zone! ;)\n. Yes I did start looking into that cfg file area and made some progress:\nhttp://mfme2mame.org/index.php?action=downloads;cat=4\nSo there are a few (converter-generated) MAME cfg files - they read the\nkeyboard shortcuts assigned to buttons in MFME and map them to MAME.\nBut I guess they ideally need to go in the MAME drivers?  As in there I\nbelieve you can set default dip settings... some machines don't even boot\n(or have wrong stakes etc) if the dips are wrong!\nPerhaps a system like the .lay files, where there is a MAME 'internal'\nversion, but it is overridden if there is an 'external' cfg file present...\nI'm open to ideas, I could certainly generate .h source files from the\nconverter the same way I'm generating the default.lay and .cfg files...\nperhaps these could have the default dips in...?  All seems doable anyway,\njust how to go about doing it, MAME source is a bit of a beast, can't\nbelieve how long it took to compile the first time! :)\nOn Fri, Mar 4, 2016 at 3:05 PM, James Wallace notifications@github.com\nwrote:\n\nWell, if I can help on that front I will - anything to keep this going.\nThere are things like the CFG files you need for dipswitches etc that I\nwonder might be something that can be served another way, particularly if\nthe defaults are wrong.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/443#issuecomment-192314299.\n. Yes - ideally I'd like to ditch the local cfgs - was just experimenting at\nfirst :)  I didn't realise I'd get a MAME/FME pro on board!  As you are\ninterested then yes, I'd much rather get as much into the MAME drivers as\npossible.\n\nMy best case scenario is the machines fully playable with correct DIPs and\n'nice' keyboard shortcuts, and internal layout.\nIf the end user wants the nice graphics, they just install the artwork\nfolder/zip and they're all set :)\nOn Fri, Mar 4, 2016 at 3:41 PM, James Wallace notifications@github.com\nwrote:\n\nDon't know enough about whether local cfgs is a maintainable case, but\nnice to see you're getting up and running. Not sure if this is the best\nplace for discussing that specific point, given the main crux of this is\nmore platform and system agnostic, but you know where to find me for any\nthing not on topic, and of course, there's the rest of the support setup.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/443#issuecomment-192327216.\n. Hey thanks guys! :)  I have some more free time over the weekend, will make the local changes and build again - cheers John :)\n. Thanks for this fix!  Having resynced to latest - it then failed during linking:\n\n\nBuilding driver list...\n33050 driver(s) found\nCompiling generated/mame/mame/drivlist.cpp...\nEmitting mamevers.rc...\nCompiling resources src/mame/osd/windows/mame/mame.rc...\nLinking mame64.exe...\n../../../../mingw-gcc/bin/x64/Release/mame_mame/libsvi.a(svi318.o):svi318.cpp:(.\nrdata$.refptr._ZTV12svi318_state[.refptr._ZTV12svi318_state]+0x0): undefined ref\nerence to `vtable for svi318_state'\ncollect2.exe: error: ld returned 1 exit status\nmame.make:228: recipe for target '../../../../../mame64.exe' failed\nmake[2]: * [../../../../../mame64.exe] Error 1\nmakefile:952: recipe for target 'mame' failed\nmake[1]: * [mame] Error 2\nmakefile:851: recipe for target 'windows_x64' failed\nmake: *** [windows_x64] Error 2\n[MINGW64] C:\\msys64\\src\\mame>\nThough I've not compiled MAME before so I could be being a noob ;)  - suspect it's related to the svi318 driver?\nCheers,\nJohn :)\n. Awesome thanks :)  I have resynced and successfully compiled MAME - some of\nmy commits will be on the way in a few weeks! ;)\nOn Fri, Mar 4, 2016 at 11:50 AM, Vas Crabb notifications@github.com wrote:\n\nThat's been fixed since\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/673#issuecomment-192252159.\n. Hey LnmVolbo :)\n\nSo, I am using a visual client - I can make a pull request into one of the existing branches, but not Master.\nI am unable to create a new branch of my own online (the \"fruit_machine_layouts\" branch is one I created locally.\nI can create a Pull request where I commit my changes into say \"bgfx_shader\" branch, however that seems bad since my changes have nothing to do with background effects shaders ;)\nSo - should I be able to make a branch online called \"fruit_machine_layouts\"?  Or do I need permissions setting up?\nCheers for the help :)  John\n. Realised a screenshot might be clearer  :)\nhttps://dl.dropboxusercontent.com/u/15679918/Github_permissions.png\nSo I can commit to \"origin\\bgfx_shader\", but not to \"master\".  I am unable to create a new branch online via the web interface.\n. Thanks for the advice, much appreciated - am trying to get this going\nnow... :)\nOn Sat, Mar 5, 2016 at 3:15 PM, Arnaud Rinquin notifications@github.com\nwrote:\n\n@johnparker007 https://github.com/johnparker007 You need to first clone\nthe repository to your own account. Then create a branch, push your changes\nto that branch, then create a pull request (via github website) to merge\nyour changes into official mamedev/mame repo.\nHere is a guide https://yangsu.github.io/pull-request-tutorial/ for you\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/issues/679#issuecomment-192670526.\n. Am new to github, this should:\n- ADD \"sc4fd7tha.lay\"\n- REVISE \"bfm_sc4.cpp\"\n. lol fair dos :)  I have got some advice from a guy on here, and I think I've got it sussed now!\n. Great thanks James :)  I am new to using git and couldn't figure out how to get rid of those earlier test commits that were wrong - I think I've got it sussed now! ;)\n. Ah ok - we were attempting to improve the appearance of layouts for fruit machines.  Perhaps I could make a custom element that is fruit machine layout specific? \n. Ah excellent idea, thanks :)  I can add this into my tool (it generates fruit machine MAME layouts from \"MFME\" layouts).\n\nCheers\nJohn :)\n. Hey guys - only just seen these comments, thought I should chime in too, I'm the MFME2MAME guy (as Haze/agemame know)...\nSo, the Converter is already in a pretty good state, I can make Internal and External (the DX) layouts for all the techs.  I have a few techs batched up - the Internal ones do take me longer (I have to manually transcribe the reels to a text format).  But I really don't mind - so far I have focused on MPU4/Scorpion 1+2+4 as that hardware works pretty well.\nAt some point I can maybe write the Scorpion 4 hoppers, though the ccTalk stuff is beyond my knowledge at the moment (a guy has had a check, and it looked like the comms may be unencrypted).\nI do think for now, my time is best spent generating layouts, and I am happy to automate/provide anything I can help with, in terms of config data, CHR data, DIP switch data etc... Even default keys could be a thing, I did experiment with it, but it only worked well on a couple of the hardware platforms.\nWe probably have like 500+ internal MAME layouts for machines spread across all the \"techs\" that MFME supports.  And more when you then include the external DX ones.  Also, I was toying with a way to generate Internal layouts from MFME DX layouts (will just require a little more manual transcribing than I do already), so that would take the number even higher (some machines went 'straight to DX', bypassing the Classic stage).\nAnyway - whatever I can do to help, please let me know, and I will try my best to get it done! :)\n. Also, just want to add - the layout authors can use MFME to make MAME fruit machine layouts for any Fruit hardware platform (I've provided an early Alpha to a friend over on dadsfme, he's currently making a Scorpion 4 \"Deal Or No Deal - Break The Bank\" layout, which has never been emulated before with a layout).\nSo if say Scorpion 5 were gotten working, the brand new layouts would start to trickle through in MAME format (Internal plus DX per machine), certainly for the more popular machines on that platform :)\n. > The protection stuff, yeah, might as well handle it with the existing chr files, even if ultimately they're pals and somebody should send one or more to Charles MacDonald to see if we can get the proper dumps and equations out of them rather than the fake files.\nI will look at adding automated saving of the .CHR files per machine/layout this weekend when I should have some dev time  :)\n\nI'm really surprised nobody has put in a bit more effort with these, I imagine progress with some of them would be trivial even if some might use MCUs for reel control etc. it can be simulated.\n\nI will get back on this a bit, starting next week, on the evenings - as I'm sure it's slightly more tempting to work on this with the layouts too, so you end up with fully playable machines!\n. > The Epoch stuff is still a nice big challenging H8 reverse engineering and simulating of devices case...\nIn terms of Epoch, there's another FME coder called Guitar who has very recently released his Amber2 emulator.  It's a beta, but it emulates the Maygay Epoch platform very well... Hopefully he'd be up for sharing some of his emulation core code for someone who wanted to implement that hardware in MAME... save reverse-engineering the same thing twice... ;)\n. I think that yes, while the presentation layer is a tad limited, the \"DX\" versions look good enough for the moment, just to be working with:\nhttps://dl.dropboxusercontent.com/u/15679918/converter/screenshots/DOND_BTB/ReelsBehindGlass.png\nhttps://dl.dropboxusercontent.com/u/15679918/converter/screenshots/NewMPU4/FlashCash.png\n...obviously the internal MAME ones (like the sample Frankie Dettori one I put in) look very basic, but with no bitmaps to make textures, I guess they'll always look pretty much like that.\nIf the emulation were more sorted across techs, it'd be worthwhile for me to 'derive' a 3d model per layout from these, so you'd have cylinders for the reels, couple of quads for the top/bottom glass with the 3d reels visible through the reel windows (alpha texture), generic fruit cabinet model scaled/wrapped around the top/sides/back/base... plus the lighting could be reverse-engineered so you just have the large dark 'off-image' for the glass, then use a shader to apply the lights (like how Amber2 does it) to allow for glow/flicker effects etc, and I'd provide the shader coordinates/parameters per lamp via the Converter.  So I could see a route to generating many hundreds of 3D model fruit machines automatically, from these original MFME layouts.  But I wouldn't wanna get involved with that crazy level of new work unless the MAME emulation side was pretty solid across the techs.\nI do have MFME in a ~4gb Virtual Machine image (for VirtualBox), so you can fire that up, run MFME from source in the IDE (it works straight out of the box, fully configured environment), then add breakpoints, step through the emulation cores while machines are running etc.  It runs a wide variety of \"techs\" pretty well, I guess that could be useful to help with debugging...?  It may be the closest thing to documentation for those old techs there is.  Though I'll warn you, be prepared for the joys of using Borland C Builder on Windows XP again!  :)   But it works fine for stepping thru code, hovering, breakpoints etc.\n. Yeah it would be cool if we could keep this thread going - still working on the expanded config generator at this end currently.  MPU4 seems to have by far the most options, though I think some of this may be of use on some of the other platforms too (DIPs/Hoppers/Stake/Percent/Jackpot/Reels)...\n. crosses fingers ... as there's plenty of documentation out there on ccTalk, in terms of how to construct messages and what response formats are expected - so as Keith said before (over on dadsfme), if someone with the necessary time/skills were to write a working skeleton device with one or two working commands (so perhaps correctly responding to the initial Request Product Code commands on sc4dnd) - it should (in theory!) be relatively straight-forward for someone else to then flesh it out with all the other commands/responses (provided it doesn't encrypt comms later on).\n. Have just checked the MFME source (as that has fully working lamps on Maygay M1A/B) - MFME also treats them both as 8279s... from m1a.h:\nI8279    io1;\nI8279    io2; \nPerhaps not correct but does seem to work as a stand-in :)\n. Ah I see - good to know.  I don't want to get caught up in the low level\nemulation work at this stage, as it's really not my forte :)\nIf it's still an issue in a year or so when I finally finished doing stuff\non the whole layout side of things, I'll come back to it and see if I can\nwrite then new chip.\nOn Sun, Aug 14, 2016 at 6:16 PM, David Haywood notifications@github.com\nwrote:\n\nthe difference is probably that MFME doesn't attempt to emulate the 8279\nproperly and we do, meaning the MFME implementation of it works for this\ncase because it's less fussy?\nM1A board pics are here FWIW\nhttp://www.citylan.it/wiki/index.php/Gladiators_(Maygay)_(M1A/B)\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1240#issuecomment-239685024, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AQzsYRblK2NnLsAzmF7JqmCCJV6eXIONks5qf01mgaJpZM4JjrlX\n.\n. Some Maygay M1A DX (A-H) MAME layouts in the Downloads section of the\nMFME2MAME website (sorry you do have to register to get to see that\nsection), if you want to check lamps are mapped correctly - thanks for\ntaking a look, very much appreciated :)\n\nhttp://mfme2mame.org/\nOn Mon, Aug 15, 2016 at 12:22 PM, Miodrag Milanovi\u0107 \nnotifications@github.com wrote:\n\nMerged #1240 https://github.com/mamedev/mame/pull/1240.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1240#event-755538062, or mute the\nthread\nhttps://github.com/notifications/unsubscribe-auth/AQzsYYK6oL685iMsVoodHDMWsFlGOnUjks5qgEv0gaJpZM4JjrlX\n.\n. This all sounds promising :)\n\nI won't have a chance to properly look until tonight or potentially tomorrow night... bear with me :)\nActually I've still been getting side-tracked with this Maygay driver myself, trying to get the inputs matched up to the input map in the driver:\n```\nREAD8_MEMBER( maygay1b_state::kbd_r )\n{\n    ioport_port * portnames[] = { m_sw1_port, m_s2_port, m_s3_port, m_s4_port, m_s5_port, m_s6_port, m_s7_port, m_sw2_port };\nUINT8 data = (portnames[(m_lamp_strobe + 2) & 0x07])->read();\nUINT8 swapped_data = BITSWAP8(data, 7, 1, 0, 6, 5, 4, 3, 2 );\n\nreturn swapped_data;\n\n}\n```\nSo with that code above, if you define input \"59\" as a key (from the MAME UI while game is running), that input puts in 8 test credits (have to reset machine each time you want to add another 8).  Then some of the main inputs are actually correct (Cancel, Hold 1, Hold 2, Hold 3, Hold 4 (probably), and Start).\nSo is that ok in terms of how this should be done in MAME?  As if so, I could perhaps figure out getting the rest of the inputs mapped at the weekend.\nAlso - I'll generate a bunch of internal layouts for Maygay, and see if I can figure out adding them in (GAMEL macro rather than GAME if memory serves correctly)...\n. I've no idea unfortunately, I could just see that the inputs are all there, just arranged differently to the input map (both in terms of the bits and the strobe channel).  The mapping is the same across all the working Maygay machines that I tried.\nI have also twiddled the bits for remapping lamps on Maygay (fixes the lamp mapping, however - they may also be a case of me compensating for incorrect emulation at a lower level).\nI can undo the committed lamp changes in the next couple of days, and just leave a comment instead explaining how they should be mapped?  It's a shame, but I understand it needs to be fundamentally correct to match the real hardware, rather than just working via what might be hacks :)\n. I can check more later, I'm sure it would be possible to reverse-engineer\nthe mapping to get them all working, as I was getting access to the various\n(currently missing) inputs such as the coins etc when I was doing some very\nquick experimenting this morning before work - I'd need to remap the\nstrobes as well as the bits though, the current order is wrong I think...\nI will initially generate a selection of starter Maygay internal layouts\n(of machines that are playable) and try get those into the driver with the\nGAMEL macro... with a couple of adjustments to the converter it will then\nbe outputting clickable buttons/coinslots for the Maygay platform (provided\nthey're fixed MAME-side by the remapping approach, or some other way at a\nlower level).\nOn Tue, Aug 16, 2016 at 1:41 PM, David Haywood notifications@github.com\nwrote:\n\nI guess the easiest way to tell with the bitswap might be (assuming it\napplies to them) how the dipswitches hook up, if we know which dip is which\non the physical board, and they too need the lineswap to be in the right\norder, then the lineswap is almost certainly correct. for lack of better\nknowledge it might just be best to go with 'whatever is compatible with\nexisting layouts'\nre: mcu, we load the mcu, and I now run it as a CPU, however I couldn't\nget it working properly, so currently we still use the extra i8279. Looking\nat the MCU code it has nothing to do with inputs, it looks like it really\nwas intended to act as a write-only i8279, it polls some lines in the main\nloop to make sure they're stable (probably the strobe) and in the\ninterrupt(s) it reads in from another port, using the value on one read as\nan index, and the value on another as a value to store.\nI'm a little surprised my hookup didn't work, but maybe i've misread /\nmisunderstood something with the 8051 code, either way, since it exists\nonly to implement a subset of the i8279, the 2nd i8279 works just fine.\nour rom banking seems incorrect btw, at least if MFME is correct, in MFME\n0x2800 - 0xd0ff (very weird range) is banked (either showing the upper or\nlower half of the rom) while 0xd100 - 0xffff always comes from the lower\nrom. those ranges seem a bit arbitary to me (0x2800 makes sense, area below\nthat is RAM, but 0xd100 as a banked ROM / fixed ROM split point is just\nplain weird, 0xd000 might make more sense, but I guess there must be a game\nthat expects 0xd000 - 0xd0ff to bank or it wouldn't have been set up that\nway.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1250#issuecomment-240089784, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AQzsYRSLAUre7OaU69dTCwLbcWSWH0dbks5qgbAQgaJpZM4Jk5fz\n.\n. Incidentally a dadsfme member (wolf676) has been following these discussions on here, and helpfully posted these Maygay schematics for this hardware, if they are of any interest guys :)\n\nhttps://dl.dropboxusercontent.com/u/15679918/converter/Maygay%20M1A%20Schematics.zip\n. This was from the original thread from 2008:\nhttp://www.fruitemu.co.uk/ib/index.php?/topic/3066-maygay-m1a-coincell-mod/\nWhat is perhaps a key comment:\n\n\"m1b has 2 8279 keyscan/matrix chips, m1a uses the 80c51 to replace one of\nthem.\"\n\n... and also:\n\n\"check u35 on them, if it's an rtc (mc146818a) then it's m1b, if it's a\nlevel shifter for the comport (mc1488p) then it's m1a.\"\n\n.\nOn Wed, Aug 17, 2016 at 10:15 AM, David Haywood notifications@github.com\nwrote:\n\nbtw the IC positions don't quite match up with the PCB pictures we've got,\nso I guess the schematics are for a different PCB revision (1B?) however,\nstill handy to have :)\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1250#issuecomment-240357987, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AQzsYWununBmBzKAKLFsNhVdCg-BI456ks5qgtFDgaJpZM4Jk5fz\n.\n. Hey guys, I have just added 56 provisional layouts to the Maygay driver.  The reels are not yet transcribed, and there are some other issues, but I thought I'd get them in as a starting point.  It's easy for me to update them now they're in as I bugfix the converter, add reel symbol descriptions etc...\n. Ok - I thought the parent sets were perhaps at some point chosen to be the 'main' set for some reason/criteria?\n\nThe converter reads whichever MFME ROM the MFME layout points at, then uses a modified MAME to identify that MFME ROM as part of a MAME set, then that's how the layout is named.\nOr are you thinking that because someone has chosen that MFME ROM when they made the layout, that ROM is more likely to be representative of a 'good' example of the ROM revision, so a good candidate for the parent?\nAs an alternative, I could make these layouts have the name of the current parent set as they are allocated in the driver, so I'd change m1albsqp.lay to be m1albsq.lay etc., preserving the current allocation of parent/children in MAME.\nHonestly, I got a big dump of MFME layouts, and a big dump of ROMs, and they sometimes don't match up, so I pick a ROM myself that is the correct filesize, that MAME recognises... so it just seems a bit bad for me to start rearranging the sets based on my random choice of binary file (5-10% of layouts have this issue I'd say)\nI could make it a feature of the Converter process to always derive the parent name for the layouts, even if it gets a child name from matching the MFME rom that is pointed at by the layout.\nAlternatively I don't mind doing the parent/child shuffling, if you think it's a good course of action anyway, based on what the majority of the MFME layouts were pointing at when I matched them up.\nAlso, one other thing to consider is that some ROMs are hardcoded to \u00a35 jackpot, 5p a go... or \u00a315 jackpot, 20p a go etc...  So the cash values on the layout will match up to the identified ROM in ~90% of cases... but will be wrong on many of the other ROMs in the set depending on how many stake/jackpot combos there were for that machine (in the much longer term, we could perhaps expand the layout format to support something dynamic for this, though it's very FME-specific)\nAll good with me either way, lemme know what you think's best, and I will get it sorted hopefully on Fri/Sat :)\n. Currently in this commit, for the layouts I added, I added them to all sets for that game, so here for example:\nGAMEL( 199?, m1calyps  ,0        ,maygay_m1,maygay_m1, maygay1b_state,m1, ROT0, \"Maygay\", \"Calypso (Maygay) (M1A/B) (set 1)\",GAME_FLAGS, layout_m1calypsa)\nGAMEL( 199?, m1calypsa ,m1calyps ,maygay_m1,maygay_m1, maygay1b_state,m1, ROT0, \"Maygay\", \"Calypso (Maygay) (M1A/B) (set 2)\",GAME_FLAGS, layout_m1calypsa)\nGAMEL( 199?, m1calypsb ,m1calyps ,maygay_m1,maygay_m1, maygay1b_state,m1, ROT0, \"Maygay\", \"Calypso (Maygay) (M1A/B) (set 3)\",GAME_FLAGS, layout_m1calypsa)\n...whichever set you run, you get the layout (even though the layout is for the ROM set 2).\nI think that some of the games are generated, but some have been done by hand, as there are comments on the right, showing the ROM versions, and using the 'newest' as the parent set.  For example, I'd be changing the parent set here from 3.1 to 1.1 to match the layout:\nROM_START( m1cluecb )   ROM_REGION( 0x10000, \"maincpu\", ROMREGION_ERASE00  )    ROM_LOAD( \"sc5-437\", 0x0000, 0x010000, CRC(0282878c) SHA1(90624916699e5866678b02260e0b0502041f32bf) )   m1_cluecb_sound ROM_END_M1A_MCU //nhq 3.1\nROM_START( m1cluecbp )  ROM_REGION( 0x10000, \"maincpu\", ROMREGION_ERASE00  )    ROM_LOAD( \"sc5-438\", 0x0000, 0x010000, CRC(26f6d094) SHA1(31fa78db1a581c00b39d4f6f64d8f08786dec97a) )   m1_cluecb_sound     ROM_END_M1A_MCU //phq 3.1 (typo?)\nROM_START( m1cluecb2 )  ROM_REGION( 0x10000, \"maincpu\", ROMREGION_ERASE00  )    ROM_LOAD( \"sc5-435\", 0x0000, 0x010000, CRC(84095d36) SHA1(f86f7f25fa25eb2731d81a23aafaf5e4c8aa976b) )   m1_cluecb_sound ROM_END_M1A_MCU //nhq 2.1\nROM_START( m1cluecb2p ) ROM_REGION( 0x10000, \"maincpu\", ROMREGION_ERASE00  )    ROM_LOAD( \"sc5-436\", 0x0000, 0x010000, CRC(3b277a98) SHA1(cab3b277bec84056f6a97a87d97bbd86f80a1c8c) )   m1_cluecb_sound ROM_END_M1A_MCU //phq 2.1\nROM_START( m1cluecb1 )  ROM_REGION( 0x10000, \"maincpu\", ROMREGION_ERASE00  )    ROM_LOAD( \"sc5-433\", 0x0000, 0x010000, CRC(27254937) SHA1(b75f4a7e66f625c0db7d658f0427c8c1893a3d10) )   m1_cluecb_sound ROM_END_M1A_MCU //nhq 1.1\nROM_START( m1cluecb1p ) ROM_REGION( 0x10000, \"maincpu\", ROMREGION_ERASE00  )    ROM_LOAD( \"sc5-434\", 0x0000, 0x010000, CRC(6185ea69) SHA1(a20bccb86cfcd929908974500186e9ecf2cdc55b) )   m1_cluecb_sound ROM_END_M1A_MCU //phq 1.1\nGAMEL( 1993, m1cluecb    ,0          ,maygay_m1,maygay_m1, maygay1b_state,m1, ROT0, \"Maygay\", \"Cluedo Club (Maygay) v3.1 (M1A/B)\",GAME_FLAGS,layout_m1cluecb1)\nGAMEL( 1993, m1cluecbp   ,m1cluecb   ,maygay_m1,maygay_m1, maygay1b_state,m1, ROT0, \"Maygay\", \"Cluedo Club (Maygay) v3.1 (Protocol) (M1A/B)\",GAME_FLAGS,layout_m1cluecb1)\nGAMEL( 1993, m1cluecb2   ,m1cluecb   ,maygay_m1,maygay_m1, maygay1b_state,m1, ROT0, \"Maygay\", \"Cluedo Club (Maygay) v2.1 (M1A/B)\",GAME_FLAGS,layout_m1cluecb1)\nGAMEL( 1993, m1cluecb2p  ,m1cluecb   ,maygay_m1,maygay_m1, maygay1b_state,m1, ROT0, \"Maygay\", \"Cluedo Club (Maygay) v2.1 (Protocol) (M1A/B)\",GAME_FLAGS,layout_m1cluecb1)\nGAMEL( 1993, m1cluecb1   ,m1cluecb   ,maygay_m1,maygay_m1, maygay1b_state,m1, ROT0, \"Maygay\", \"Cluedo Club (Maygay) v1.1 (M1A/B)\",GAME_FLAGS,layout_m1cluecb1)\nGAMEL( 1993, m1cluecb1p  ,m1cluecb   ,maygay_m1,maygay_m1, maygay1b_state,m1, ROT0, \"Maygay\", \"Cluedo Club (Maygay) v1.1 (Protocol) (M1A/B)\",GAME_FLAGS,layout_m1cluecb1)\nSo - if I'm definitely reorganising the parent sets by layout, how does that work - as then everyone else's ROMs will be invalid (including mine, so I'd have to manually swap their contents around to match the CRCs)?  Or is there another tool over at MAME HQ that somehow recompiles the official ROM sets as zips, based on the definitions in here?  \nAlso the parent set usually contains sound ROMs and an MCU rom... can they happily live in a child set, or do they need to be transferred?\nI have a strong feeling I'm completely misunderstanding the process by which I swap a child set and a parent set, and it's hopefully less involved lol - otherwise I'm going to have to write some kind of tool myself to deal with all this :)\nI think perhaps at the weekend, I should try swapping a single set around (so a child becomes the parent), and commit for review.  Seems like I'd have to change the contents of the ROM zipfiles?  Or am I completely not getting it lol ;)\n. Oh god sorry - ok I think I see now haha - so do you mean I just change from this:\n\nGAMEL( 1993, m1cluecb    ,0          ,maygay_m1,maygay_m1, maygay1b_state,m1, ROT0, \"Maygay\", \"Cluedo Club (Maygay) v3.1 (M1A/B)\",GAME_FLAGS,layout_m1cluecb1)\nGAMEL( 1993, m1cluecbp   ,m1cluecb   ,maygay_m1,maygay_m1, maygay1b_state,m1, ROT0, \"Maygay\", \"Cluedo Club (Maygay) v3.1 (Protocol) (M1A/B)\",GAME_FLAGS,layout_m1cluecb1)\nGAMEL( 1993, m1cluecb2   ,m1cluecb   ,maygay_m1,maygay_m1, maygay1b_state,m1, ROT0, \"Maygay\", \"Cluedo Club (Maygay) v2.1 (M1A/B)\",GAME_FLAGS,layout_m1cluecb1)\nGAMEL( 1993, m1cluecb2p  ,m1cluecb   ,maygay_m1,maygay_m1, maygay1b_state,m1, ROT0, \"Maygay\", \"Cluedo Club (Maygay) v2.1 (Protocol) (M1A/B)\",GAME_FLAGS,layout_m1cluecb1)\nGAMEL( 1993, m1cluecb1   ,m1cluecb   ,maygay_m1,maygay_m1, maygay1b_state,m1, ROT0, \"Maygay\", \"Cluedo Club (Maygay) v1.1 (M1A/B)\",GAME_FLAGS,layout_m1cluecb1)\nGAMEL( 1993, m1cluecb1p  ,m1cluecb   ,maygay_m1,maygay_m1, maygay1b_state,m1, ROT0, \"Maygay\", \"Cluedo Club (Maygay) v1.1 (Protocol) (M1A/B)\",GAME_FLAGS,layout_m1cluecb1)\n\nto this:\n\nGAMEL( 1993, m1cluecb    ,m1cluecb1   ,maygay_m1,maygay_m1, maygay1b_state,m1, ROT0, \"Maygay\", \"Cluedo Club (Maygay) v3.1 (M1A/B)\",GAME_FLAGS,layout_m1cluecb1)\nGAMEL( 1993, m1cluecbp   ,m1cluecb1   ,maygay_m1,maygay_m1, maygay1b_state,m1, ROT0, \"Maygay\", \"Cluedo Club (Maygay) v3.1 (Protocol) (M1A/B)\",GAME_FLAGS,layout_m1cluecb1)\nGAMEL( 1993, m1cluecb2   ,m1cluecb1   ,maygay_m1,maygay_m1, maygay1b_state,m1, ROT0, \"Maygay\", \"Cluedo Club (Maygay) v2.1 (M1A/B)\",GAME_FLAGS,layout_m1cluecb1)\nGAMEL( 1993, m1cluecb2p  ,m1cluecb1   ,maygay_m1,maygay_m1, maygay1b_state,m1, ROT0, \"Maygay\", \"Cluedo Club (Maygay) v2.1 (Protocol) (M1A/B)\",GAME_FLAGS,layout_m1cluecb1)\nGAMEL( 1993, m1cluecb1   ,0             ,maygay_m1,maygay_m1, maygay1b_state,m1, ROT0, \"Maygay\", \"Cluedo Club (Maygay) v1.1 (M1A/B)\",GAME_FLAGS,layout_m1cluecb1)\nGAMEL( 1993, m1cluecb1p  ,m1cluecb1   ,maygay_m1,maygay_m1, maygay1b_state,m1, ROT0, \"Maygay\", \"Cluedo Club (Maygay) v1.1 (Protocol) (M1A/B)\",GAME_FLAGS,layout_m1cluecb1)\n\n... and that takes care of everything? :)\n. Ok, I'm cool with that, as I'm still a bit mystified how I don't end up breaking everyone else's ROM set, I'm guessing perhaps there's a server that rebuilds the named ROM sets from the driver definitions for each new MAME version or some kind of magic lol :)\nRight I will keep focused now mainly on MAME Internal layouts... so do you want me to continue add them to drivers using the GAMEL macro and ensure all the alternative romsets per game also point at them too, like I've done in this Maygay one?\nAnd one last thing, as I want to check I did all this ok - is this commit good to go, and the Travis builder itself has gone wrong, or is something amiss with my commit?\n$ if [ ${TRAVIS_OS_NAME:-'linux'} = 'linux' ]; then sudo add-apt-repository ppa:zoogie/sdl2-snapshots -y; fi\nbefore_install.2\n0.00s$ if [ ${TRAVIS_OS_NAME:-'linux'} = 'linux' ]; then sudo add-apt-repository ppa:beineri/opt-qt551 -y; fi\nbefore_install.3\n0.00s$ if [ ${TRAVIS_OS_NAME:-'linux'} = 'linux' ]; then sudo apt-get update -qq; fi\nbefore_install.4\n0.00s$ if [ ${TRAVIS_OS_NAME:-'linux'} = 'linux' ]; then sudo apt-get install -y --force-yes libsdl2-dev libsdl2-ttf-dev libasound2-dev qt55base qt55quickcontrols qt55declarative qt55tools qt55svg; fi\nbefore_install.5\n0.00s$ if [ ${TRAVIS_OS_NAME:-'linux'} = 'linux' ]; then source /opt/qt55/bin/qt55-env.sh; fi\n133.00s$ if [ ${TRAVIS_OS_NAME:-'linux'} = 'osx' ]; then brew update; fi\nerror: RPC failed; result=35, HTTP code = 0\nfatal: The remote end hung up unexpectedly\nError: Failure while executing: git pull -q origin refs/heads/master:refs/remotes/origin/master\nThe command \"if [ ${TRAVIS_OS_NAME:-'linux'} = 'osx' ]; then brew update; fi\" failed and exited with 1 during .\nYour build has been stopped.\n. > some of the 'handheld electronic game' emulation we do actually includes the 'deluxe' layouts in the romsets with SVG graphics (which can be generated in your favourite SVG editors) however that style of artwork really only supports simple 'on/off' graphics, not something like the fruit machine reels.\nYeah, I was hoping long term if we can get tons of FME compatibillity in MAME, to add more to the converter process and the mame layout renderer, so it could 'illuminate' with a shader... so you just have a single main image that is a bright fruit machine as cleaned up and hig res that we have.  Then the shader darkens it all, but allows the light through where the bulbs are... would allow for a more compact lamping system, overlapping lamp effects, be a bit more 3d-friendly (no risk of z-fighting, better scaling up), user can tune bulb brightness, can add nice effects like true filament decay, flicker from the mains/matrix... Guitar has already achieved a lot of this in Amber2.  Perhaps then we'd be ok to have that one single large \"on image\", plus the unique reel symbols stored in the parent ROM set?  If MAME played the full \"deluxe\" layouts, straight out of the box, that'd be pretty cool  :)  \n...but I totally understand all that is all scope creep, since a ROM isn't really a ROM once it's got a backglass image and some reel images and a layout XML in there too ;) \nI will keep focused on improving/adding Internal layouts.  I'll also ensure all parent/child sets for a game point at the layout (like I've done in the Maygay driver), rather than just the one ROM the layout was for, so there's no need to go hunting for the specific set that has the layout... plus I have more to do for James with the MPU4 configs (and layouts).\n. > actually they reference quite a few elements that don't exist..\n\nlamp_134_1\nand\nlamp_130_1_border\nprobably others...\n\nI will check into this next chance I get, hopefully this weekend - good news on the lamps :)\n. > while the game lamps look pretty good in general now, the reel lamps don't seem quite right for a number of the games, I suspect that's a mapping problem with the converter program.\nYes it is very possible it's a mapping issue from my side, I am aware that some MPU4 reel lamps are mapped wrong, and I know how to fix those ones.  The M1A/B ones will require further investigation, to see if MFME has any code to move them (like it does with MPU4).\n\nm1coro21n throws a slightly different error, which I'm guessing is the converter too, or an error in the original layout?\nError in XML string: Illegal bounds value in XML: (577.000000-575.000000)-(142.000000-141.000000)\n\nI got some free time today, and have got James set up with more MPU4 stuff - so I'll look at these layout bugs and this new lamp/switch Debug view next... I'll update the layouts on git once they're sorted with the new stuff :)\n. I have committed the layouts, I checked each one, all 56 initialise now :)\nIt was a very recent Converter bug (it honestly used to work pretty reliably!), as I'd added a special lamp support for someone who is currently making a DX Deal Or No Deal layout, and I forgot to update the related areas for the 'no graphics' mode which makes these Internal layouts.  The bug with m1coro21n was a new one I'd not seen before.\nI will get the Debug view implemented as my next task.  I was thinking it'd be useful to also have a complete input matrix on the screen as well as this enhanced lamp matrix?  So you can click on a cell in the input matrix and it'll press that button... I could also do the colouring scheme, so the buttons that are used by the layout are a different colour to the unused buttons (though all 256 inputtag/inputmask combinations would be functional).\n. Well that took longer than I thought it would, probably due to a big hangover lol ;)  I'll not submit updated layouts yet, as I have more info to add to the reels, but it's already looking like it'll be quite handy :)\n\nOn the left is the lamp matrix, the colours mean:\n- Blue is a reel lamp referenced in the layout\n- Red is a segment-driving lamp in the layout\n- Green is a standard lamp in the layout\n- White is a lamp not referenced in the layout\nOn the bottom-right is the input matrix, the colours mean:\n- Yellow is an input referenced in the layout\n- White is an input not referenced in the layout\nThe 'buttons' can be clicked, and will send the relevant inputtag/inputmask for that tech to MAME.\nThe area at the top-right is for the reels and can accommodate up to 10x reels for those crazy machines that have that lots.\nThere will be some tweaking required per tech, this is just developed for Maygay for the moment, but it's not much work for it to support the other techs and their unique elements (Dot Matrix Displays etc).\nWill update the Maygay layout set when I've finished it, hopefully tomorrow :)\nEdit: Also thought of some more handy additions :)\nI'll colour the lamps that illuminate pressable buttons magenta, and dedicated coinslot lamps I could do yellow.  Then I can also link the input matrix, so that referenced buttons are magenta, referenced coinslots are yellow, and have them illuminate to full brightness in sync with their first (or multiple) connected lamp(s).  So then, when the 3x hold lamps flash, the related 3x hold inputs will flash etc.\n. Ok have got the new Debug View in - it's very handy, glad you prompted me and suggested colour-coding etc, I'd been thinking of doing something very basic just so I could click buttons, but getting all the extra colour-coding stuff, and flashing links lamps on the input matrix makes it really useful :)\nI've fixed the inputs, it was a bug, once I could see clearly in the debug view it was a straightforward fix :)\nThe layouts have been updated with the Debug View, they're here:\nhttps://github.com/mamedev/mame/pull/1286\n...and here's a screenshot of the Debug View as it stands:\nhttps://dl.dropboxusercontent.com/u/15679918/converter/screenshots/maygay/HotPotsMameInternal-DebugViewV2.png\nI'll get it into the new techs as I batch them up and commit them :)\n. Ah I did wonder why the emulation for these Scorpion 2 DMD games had slowed to a crawl ;)\nInterestingly, when I started doing this, and was using and older version of MAME (from around July 2014 I think it was, I will test when I next get chance), the emulation was running at a perfect 100% on sc2 DMD games.  Then I updated to a recent version of MAME (from 2016), and all the sc2 DMD games ran like treacle!\nSo I guess it's possible to have them running much faster, and somethings changed in the renderer which makes things slower, so could potentially be fixed without having to write the new 'DMD screen' control... though I totally agree it does seem a little messy/inefficient having all those individual DMD dots declared in the XML file :)\n. I just did a quick check, on Mame 0.166, the game \"sc2prem\" runs at ~600% unthrottled at the Set Pot Values screen on the DMD.  On Mame 0.173, the same game runs at ~50% unthrottled at the same point.\nSo something between those two versions has changed, that affects the speed significantly, this test was done using the original MAME Internal layouts, none of my new ones involved.\n. If this is just a performance concern, the dot matrix display sc2 games used to run 12x faster in MAME 0.166 compared to MAME 0.173.  The current slowdown is due to a change that has been introduced somewhere between those two versions, not to do with how the DMDs are set up.  \nNot saying that it's not inefficient how it's currently done, just that using the current system can work (on my old Core2Duo rig) at 6x the speed of the original game, as shown by the 0.166 performance.\n. Great stuff guys this all sounds good to me :)\nI did hold off on putting a DMD on the new 'MFME2MAME Debug' View for precisely that reason (massive layout files), some of the XML layout files for DMD games would then have been over 20,000 lines, which did kinda seem like a lot ;) \nI should get some time on Fri/Sat, so I will update the Converter to generate these new DMDs from now on (and add the DMD to the new View).\n. Ugh - ok just checked, have I done something wrong here (I really don't seem to do well with git!)...\nSo it is showing a previous commit as well (Scorpion 2: add 12x internal layouts) which has already been merged into mamedev:master.  \nWill close and try to commit again next time I get some free time to wrestle with the joys of git.\n. Closed due to (another) problem with git - sigh...\n. Haha cheers! :)  \nI'm trying to get as many fruit machine layouts into MAME as I can.  I've also fixed some simple emulation issues, but the low level stuff is waaay out of my abilities... so I'm hoping with these layouts I can lure some of the more knowledgeable emulation coders over to fix/finish the fruit machine drivers :)\n. haha I've only just spotted that this is in fact pull request #1337 - I thought I was getting kudos for committing over half a million lines of XML! :)\n. I was just getting ready to commit another 21 layouts for a different hardware platform, I will update the converter and regenerate them, with a newline on the end.  \nAll these other layouts that I've already committed will be getting updated periodically, as I make improvements/bugfixes to the converter... so they'll all have newlines on the end in a month or two :)\n. Thanks for the merges :)  And thanks for the heads up, if my commits stay open for a week or so, now I know why!\nI have implemented the newline on the end of these 21 layouts btw.\n. Thanks for the heads-up, will do a pull request with the fixed layouts shortly :)\n. Thanks again for letting me know @Tafoid, have fixed it along with other issues/improvements in #1363 :)\n. There are some errors with these new Jackpot keys, reverting to recommit later when corrected.\n. ",
    "MisterTea": "@Tafoid It's possible to map the keyboard keys to inputs in a way that makes sense, even with my change.\n. @cuavas how so?  I can make the shoulder/hat buttons map to keys on the keyboard by default.  The shoulder/hat buttons are only enabled on console machines, so people using arcade-style controls won't be affected unless they want to play SNES games, in which case they will need to think of a mapping that fits anyways.\n. Just to be clear:  This change doesn't change the default mappings (although it might make sense to change them as a result), it adds new inputs to capture buttons that are fundamentally different in nature, such as hat switches and shoulder buttons.\n. Adding default key bindings to the shoulder buttons is a simple addition to\nthe PR that I can make.\nI disagree that the emulator offers a reasonable default mapping, because\nthe shoulder buttons map to different keys for each system. With a small\nchange to this patch, all system shoulder buttons could map to (for\nexample) 'q' and 'w'.\nIf the community doesn't like the way I remapped the cps machines, I can\nremove that part of the commit and just leave it in MAMEHub.\nOn Sat, Nov 7, 2015 at 1:15 AM etabeta78 notifications@github.com wrote:\n\nTypically, new input types got added to MAME/MESS when dozens, if not\nhundreds, of supported machines require them (e.g. mahjong inputs, and\nlater gambling inputs) so that the default mappings can be applied at once\nto them all.\nAlso, this way the emulator offers a reasonable default mapping to users,\nmaking emulation user friendly out-of-the-box.\nBased on these considerations, while the addition of the shoulder buttons\nand hat inputs might make sense (despite having only a bunch of systems\nusing them), most of the patch is not really ok because\n- by changing the geometry mapping of 6 button games, you make uneasy the\n  usage with controllers which are not joypads\n- the new inputs have no default mappings, so that when you launch e.g. gba\n  emulation, the shoulder buttons have to be manually configured\n- the meaning of JOYSTICK_BUTTON1 & 2 is definitely unclear\nIn conclusion, I think that having default mappings to standard buttons and\nallowing users to remap those to different choices when they have an\nappropriate controller capable to better handling hat & shoulder buttons is\nway friendlier than the solution proposed by this patch.\nOn Sat, Nov 7, 2015 at 8:41 AM, Jason Gauci notifications@github.com\nwrote:\n\nJust to be clear: This change doesn't change the default mappings\n(although it might make sense to change them as a result), it adds new\ninputs to capture buttons that are fundamentally different in nature,\nsuch\nas hat switches and shoulder buttons.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/458#issuecomment-154650716.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/458#issuecomment-154666615.\n. Mame already treats different buttons as different inputs (notice IPT_START\nAND IPT_SELECT). If IPT_START was really a different IPT_BUTTON for each\nsystem, it would be very confusing. Shoulder buttons are currently\nconfusing for new users.\n\nOn Sat, Nov 7, 2015 at 9:50 PM Vas Crabb notifications@github.com wrote:\n\nI still don't buy it for shoulder buttons. They aren't an inherently\ndifferent kind of input, they're just another button. For the same reason\non arcade games we don't treat panel-mounted buttons a la Street Fighter as\na different input type to joystick triggers like the vulcan gun button in\nAfter Burner.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/458#issuecomment-154777109.\n. Alright so it sounds like shoulder buttons are debatable, and the other changes are out.  This is fine: I can leave them in MAMEHub and remove them from this patch.\n\nWhen you guys/gals come to a consensus about shoulder/trigger buttons, let me know.\nJason G.\n. ",
    "jfdelnero": "m_floppy is now \"used\".\n. fyi i got the machine this WE. After some fix, i finally got it working :\nHere some pictures :\nhttp://hxc2001.free.fr/Squale/photos/Working_Squale_1.jpg\nhttp://hxc2001.free.fr/Squale/photos/Working_Squale_2.jpg\nhttp://hxc2001.free.fr/Squale/photos/Working_Squale_3.jpg\nhttp://hxc2001.free.fr/Squale/photos/Working_Squale_4.jpg\n;)\n----- Original Message ----- \n  From: Miodrag Milanovi\u0107 \n  To: mamedev/mame \n  Cc: Jean-Fran\u00e7ois DEL NERO \n  Sent: Sunday, December 06, 2015 12:26 PM\n  Subject: Re: [mame] Squale keyboard added, Squale FDC added (WIP), EF9365 emulation improved. (#488)\nError on clang:\n../../../../../src/mame/drivers/squale.cpp:125:23: error: private\n  field 'm_floppy' is not used [-Werror,-Wunused-private-field]\nfloppy_image_device *m_floppy;\n^\nOn Sun, Dec 6, 2015 at 11:26 AM, Jean-Fran\u00e7ois DEL NERO <\n  notifications@github.com> wrote:\n\nSquale keyboard added : The user can now have some interactions with the\nmachine.\nWD1770 FDC added.\nEF9365 emulation improved : 5x8 and 4x4 Blocks drawing support added.\nSquale machine turned as working.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/488\nCommit Summary\n- Keyboard support added !\n- block drawing support added.\n- WD1770 FDC support added (Work In Progress).\n- Change the machine tags as working :).\nFile Changes\n- M src/devices/video/ef9365.cpp\n  https://github.com/mamedev/mame/pull/488/files#diff-0 (56)\n- M src/devices/video/ef9365.h\n  https://github.com/mamedev/mame/pull/488/files#diff-1 (2)\n- M src/mame/drivers/squale.cpp\n  https://github.com/mamedev/mame/pull/488/files#diff-2 (336)\nPatch Links:\n- https://github.com/mamedev/mame/pull/488.patch\n- https://github.com/mamedev/mame/pull/488.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/488.\n\n\u2014\n  Reply to this email directly or view it on GitHub.\n. What is the problem with auto merge ?\n. Rebase done.\n. Fixed.\n. Fixed.. Fixed.\n. Fixed.. Fixed.. Fixed.. Fixed.. Fixed.\n. Fixed.\n. Fixed.. Fixed\n. Fixed.\n. Fixed. Which keyboard layout use mame ? UK ?. Is there something similar into another driver ? just to have an example. . Done.. Done.\n. Done.\n. Done.. Done.. done.\n. fixed.. done in the new PR.. Done in the new PR. I wasn't using logerror and the \\r\\n was needed with the output i used. I just forgot to revert to \\n before the pull request.. Done in the new PR.. Done in the new PR.. Done in the new PR. Same root cause as the \\r\\n problem. Just forgot to revert to the std::string type.. Done in the new PR.. ",
    "wescopeland": "Gotcha, sorry about that.\n. ",
    "MASHinfo": "\nBut what's with the extra parentheses?\nCan be deleted! It compiles and works without them :)\n. ... with device->shortname()[0]!='\\0' it is also ~18%.\n. No! Vas has closed this report.\n. It's up. Thx!\n. @hap\nNobody told me to stop device renaming.\nWho said this? And why did you reverted it?\n. The new names are good. What are you doing there?\n. Issue has been fixed by Miodrag Milanovic:\nhttps://github.com/mamedev/mame/commit/c66ddfc1db547521e62d49edb6fba70a3861b718\n. Fixed by Nathan Woods\nhttp://git.redump.net/mame/commit/?id=b64b470c3266835d3a0e6a7c7cc20f8b88f48d8b\n. Yes. I forgot to add the new mame.lst here!\nSimply add after\ndesterth                        // bootleg\nthis\nescmars                         // bootleg\n. Many thanks for the quick fix!\n. Just fixed it.\nhttps://github.com/mamedev/mame/pull/1379\nMany thanks!\n. Download it years ago from from ftp.emulition.com/misc/Unknown.zip.\nI have no more informations.\n. Ok. I will add some test next time. But is there a way to merged all in one\nfor a 'Pull requests' viva WEB base edit?\n. Sorry with Github.com i cannot do this. I tried GIT under Linux Mint with\n\nsudo apt-get install git\nmkdir mame\ncd mame\ngit init\ngit clone https://github.com/mamedev/mame.git\n* Edit files *\ngit status\ngit add edit files\ngit commit -m \"New Crush Roller clone\"\ngit remote add origin https://github.com/mamedev/mame.git\ngit push -u origin master\nBut i get the 403 error. Please help with this!\n. @rootfather \nI can't reproduced it. First i am at https://github.com/mamedev/mame\n2. Press the \"Fork\" button at the top right\n3. Edit the files in my repository.\n4. Press \"New pull request\" button next \"Branch: master\"\n5. ??? How to push the changes to your my repository and open a pull request.\nCan you tell me which button i must press/select?\n. This works. Many thanks.\n. - Dump contents do not have an SP0256 populated, yet you have added an image of one\n  to the romset.\n  I overlooked ROM_LOAD( \"sp0256-al2.bin\",...). Was copied from parent.\n- You have not documented the rom locations from the filenames of this particular romset dump -\n  those roms which share 100% data with the parent This also doesn't mean you change the parent\n  also as you have to verify via actual PCB pictures if locations were not provided with the files.\n  In the romset are only sauro01.6c, sauro02.7c and sauro03.16e and the readme.txt has\n  also no extra information. You must asked Guru for the other rom locations.\n- There is an extra PROM which you have entirely ignored and not added to source\n  Nope. PROM sauropr4.16h was not in the zip file.\nMany thanks\n. - Your sourced romset may have come from another fork or arcade emulation project\nDownload it years ago from ftp.emulition.com/tecfri/sauro_bootleg.zip\n. Did not know what I should enter as. In MAME there are:\nGame                          | Manufacturer\nBorderline (Karateco bootleg) | bootleg (Karateco)\nMoon Alien                    | Namco / Nichibutsu (Karateco license?)\nSpace Bird (bootleg)          | bootleg (Karateco)\nSuper Double (French)         | Karateco\nVan-Van Car (Karateco set 2)  | Sanritsu (Karateco license?)\nVan-Van Car (Karateco set 1)  | Sanritsu (Karateco license?)\n. @hap\nI didn't found any informations about the RIGHT of DOUBLE, DOUBLE SYSTEM and\n4 COIN COUNTERS button. So i decided to add them as keys.\n\nDon't implement them like this, but as a read function.\nDon't know how? Can you please do it!\n. \n",
    "milliluk": "@Cowering The base file is base6x09.ops (note the 'x') and is shared by the family (6809, 6309, Konami). m6809.ops does not have a mapping for ASL16. The Hitachi 6309 and Konami variants do. Looks right.\n. @npwoods Thank you for all your work on the 8 bit micros over the years. It was your recent changes to the 6883 that got some people excited about this again.\nHere are some test disk images. Just mount and type \"DIR\".\nhttps://github.com/milliluk/emulator-test-disks/tree/master/dragon64\n. I added additional test images:\nhttps://github.com/milliluk/emulator-test-disks/tree/master/dragon64\ndfe6e36c4911b0190b7751377614e212 D1.DSK\n4c9f328e2028d01a595dc5fbf839196d D1.VDK\n38ce4b341e663a9c833d8b92500cac7c D2.DSK\n846e9846abb57088b9a165ec9e7394e8 D2.VDK\n. Testing with the D1.VDK image \"DIR\" works in mess0153b but not mess0154b. \n@npwoods Unfortunately I cannot find anything for Dragon like the unraveled series. I did locate nicely commented assembly for a ROM called SuperDOS. It conditionally assembles for Dragon or CoCo using some simple flags. In a pinch maybe that provides a Rosetta stone. http://geneslinuxbox.net:6309/gene/toolshed/superdos/superdos-e6-03.asm\n. RT is \"Record Type\" -- probably bad data/geometry reading the directory entries\nSee page 60: http://dragondata.worldofdragon.org/Publications/IntroDOS/Intro-DragDOS-v1.pdf\n. It is unnecessarily fragile. Also, there's some real time clock stuff in there that doesn't belong. That is all aftermarket hardware and, while it sometimes shipped as part of a disk cartridge, probably should live in a separate file.\nThere's also the issue of disk ROMs. Many existed commercially and even these were commonly modified by users to set disk parameters. If you specify the ROM it as a -cart it conflicts with the Multi-Pak. If you specify it as a -slot it conflicts with the FDC. They don't save/restore correctly. And there's no way to turn off the ROM checksum warning from the command line any more (?). Also at least one \"machine\" (coco3dw1) exists just to enable someone's pet ROM -- and even that ROM is no longer in common use.\n. Thanks for the pointer to that thread. The specific extensions I'm having problems with (see coco_fdc.cpp) require opening the file to determine the geometry. It can't be handled just by extension. I'm against that merge in its current state.\n. ",
    "SuperV1234": "Any compilation log? It compiles on my machine.\n. I see. Would it be acceptable to move the struct definitions of log_comment, data_range_t, x86log_context to the x86_log.h header file from the x86_log.cpp source file?\n. You're right - I was compiling with SUBTARGET=tiny. This commit fixes the compilation errors on my machine.\nAlso, continuous integration would greatly help - is there any plan of using it?\n. I'm still looking into any possible mistake - is it possible that simple_list was being used polymorphically somewhere? \nIt had a virtual destructor that I changed into a non-virtual destructor in aa6d4d0b882c86dc5e55e0dcf68884c6a588797b, because I could not find any polymorphically usage of simple_list in the codebase.\nAssuming I missed such usages: could you try if reintroducing virtual in ~simple_list \nvirtual ~simple_list() noexcept { reset(); }\nand check if the crash still occurs?\n. ",
    "h0tw1r3": "https://github.com/meganz/mingw-std-threads works well for those situations.\n. A hack like this would ideally be a lua plugin. Would just need to extend lua with crosshair_position on the ioport:field table.\n. @KipourosV Compile gcc 4.9+ yourself or try my completely unsupported - figure it out yourself - you break it you buy it - patches. (Hint: you'll need to enable backports). That said, I did try building on Wheezy with the patches below. Worked just fine.\nhttps://github.com/zaplabs/buildsupport/tree/sdlmame\n. @balr0g @rb6502  Most of the patches came out of building everything cross platform (linux host, macosx and windows targets). I'd be happy to submit some PR's if you think they would be useful.\n. > 0003-allow-libs-to-be-linked-multiple-times.patch - Need to go upstream\nDone\n\n\n0009-make-sdl-osd-the-same-size-as-directx.patch - ??? PLEASE CHECK RB\nOk. That should be fine then if it's been tested.\n\n\nIt works quite well for me, I have noticed the aspect appears to be wrong before the machine starts (Initializing message). Could just be SDL trying to be smart, but I will do more testing before I submit a PR.\n. @Saudrath In addition to what @rb6502 said, the lua engine was extended recently to include cheat support. Although there is no documentation (yet), you can fairly easily write a script to enable specific cheats when the emulator starts.I will update the documentation with an example \"soon\".\n. I think the only blocker is adding support for create/attach menus/options and bind inputs to callbacks.\n. @jmallach Can you point me to Debian's lsqlite3 package? (http://lua.sqlite.org/index.cgi/index)\n. @jmallach I think that is where the confusion is. lsqlite3 is completely different than lua-sql (and lua-sql-sqlite).\n. Yes, it works that way right now.\n. Mame's build system doesn't do much for you when you tell it to use system libraries. It tries to include the standard locations for headers, and that's it. You need to do the rest of the work yourself.\nThat said, set OPT_FLAGS = -I/usr/include/lua5.2 in the makefile.\nAfter that you'll run into another problem. Looks like mame doesn't support lua 5.2 :8ball: So to compile on Debian Jessie, you'll need to use backports, stick with the 3rdparty supplied library, or create a patch for backwards compatibility (might be as simple as a header with some ifdefs).\n. Python3 is not fully supported yet. See issue #706\n. Tested on debian and arch: gcc 5.3.1, clang 3.6, and mingw64 5.3.0 (mxe).\n. Tested on clean msys2 gcc 5.3.0 x86_64 (windows 10 ent).\n. What version of kFreeBSD?\n. Following up. I was able to build mame HEAD on jessie-kFreeBSD with a number small build patches, mostly to uv.\n. @jmallach @mmicko UV upstream PR for GNU/kFreeBSD support https://github.com/libuv/libuv/pull/959\n. Unable to reproduce, but your g++ line should contain -DNO_USE_MIDI which is the reason for the compile errors.\nTry make REGENIE=1 NO_USE_MIDI=1\n. @mmicko handles the releases. I don't speak for the team in any way, but it looks like those few commits addressed compile errors. Tagged releases are intended to compile error free on all supported platforms. Therefor I would assume that the moved tag was in fact intended.\n. ",
    "vgturtle127": "Did somebody delete my comment? Oh well.\n@mamehaze Wouldn't that be horrendous? :laughing: \n. @mamehaze Is there some sort of dynamic solution? Like a way to make it work with any refresh rate below 120Hz? I mean, technically there are 240Hz displays, but they are somewhat rare nowadays...\n@rb6502 When you say 120.Hz only, you mean they will only run at 120Hz? I always thought most monitors supported multiple refresh rates (for example, I know of a monitor that is 120Hz that also supports 100Hz, 80Hz, 75Hz, 70Hz, and 60Hz.)\n@balr0g Yeah, I was wondering about that too...\nAnother thing is that none of these games are meant to run at a refresh rate faster than the arcade cabinets monitors were normally set at (60Hz in the US, I guess? I actually never though about it or have done any research), and also the games should still run fine at the default refresh rate of the monitor, it doesn't cut down on the amount of frames if you run it at a different refresh rate on another monitor, it just means the game won't run as fast as your monitor can handle. Maybe I am missing something? Does anybody else get what I'm saying? :laughing: \nI feel like there is something wrong with the way this is working in my head. :laughing: \n. @rb6502 That's one of the things I was trying to say, I suppose. It may not necessarily be a regression so much as it actually working correctly.\n@galibert OK, that makes more sense I suppose.\n. @iori3000 It seems there are several layers of potential issues here, but none of them seem to be caused by vanilla MAME, as far as I can tell.\nMaybe sombody else can confirm or deny that, but I suspect there could be issues caused by the software you are using, MAMEUI, drivers, or maybe even the panel settings? I am by no means assuming I am correct in this, and is mostly wild speculation since I am not sitting right next to you, but I have a feeling some tweaking may alleviate your issue.\n. :+1: \nThis is a great idea, and I think this will make it more comfortable for people to contribute to MAME, and to write frontends and GUI's for MAME.\nI have always been a little apprehensive due to the license, so I think I can speak from experience.\nExciting times to be a part of the emulation community. :smile: \n. ",
    "iori3000": "Sorry, it was some wrong and very poor discription and now I am so late for reading replys.\nVsync meant option of mameui\nProperties - Advanced - [Sync to monitor refresh]\nNot [Wait for vertical sync] option\nI have actually 144hz benQ panel monitor, and I normally use it as 120hz setting\nor sometimes I set it more exact double refresh hz of real acade machine for mame.\nBecause my monitor is not freesync or Gsync,\nI use CRU util for exact double refresh setting, it is quite good.\nFor example, in neogeo 59.185606hz, I set monitor proximately 118.3712hz which is double of origin. \nAnyway, [Sync to monitor refresh] mame option make 2x boost run exceeding the normal speed.\nThis option didn't make 2x boost speed in old past version of mame with same monitor and setting.\nI don't know whether this is potential regression or not,\nbut I can know that there was change by my testing old and new version.\nI just wish it work properly with [Sync to monitor refresh] option in (static) around 120hz monitors.\nI did like [Sync to monitor refresh] option because lower lag than Wait for vertical sync.\n. Sorry, I didn't know matter of policy.\nNow, tried to test in mame0171b_64bit.exe\nwin7 64bit\ngpu: hd4770 dx10.1\n144hz monitor @120hz\nDisplay Options Video Mode:\nGDI and OpenGL has 100% speed no problem.\nAuto and Direct3D has fixed 50% speed, no matter what the other options are, even with @60hz monitor refresh.\n[[ writing after more testing ]]\n50% speed was because I had limited window frame to 60 frame.\nWhen I release to 120 frame 100% speed and no problem.\nSo, It seems that Actually there is no problem in official origin mame.\nIt seems that 2x speed probem is only in MameuiFX.\nSo, I think also this issue written by me should be deleted \nthough 60frame limited direc3d mode has 50% speed, this is the other problem and not actually 2x speed problem.\nI was sorry and,\nEverybody\nThank you.\n. ",
    "StefanJokisch": "Miodrag, I'm fine with changing the license for my MAME contributions to \nBSD3.\nBest wishes\n. ",
    "dankan1890": "I suggested to Micko to use Semaphore CI for now, at least until Travis CI\nisn't able to compile the full MAME.\nhttps://semaphoreci.com/dankan1890/mame/branches/master/builds/60\n. Fixed.\n. None.\n. Fixed.\n. I agree with you, but in what other way can you achieve this without using static members?\n. Great tip, thanks ;)\n. Okay, thanks.\nFor some strange reason VS displays everything correctly :(\n. ",
    "bmunger": "I will fix that.  Thanks.\n. I'll fix that.. In this instance it's not necessary to save that state.  It's also a temporary solution to help understand the underlying command logic between the main cpu board and the smioc board.  Once enough of the structure is understood through testing in emulation it can be handled by the smioc's cpu.  This is the current focus right now, and much of it is embedded in custom undocumented chips and PALs.. Understood, will do.. ",
    "vasilvv": "Bug 1 fixed in this PR, steps to reproduce:\n1. Bind \"save state\" to Z\n2. Press Z.\n3. Now whenever you press Z, it will just save it to state Z instead of letting you pick one.  This is not triggered reliably, but it does occasionally happen.\nBug 2 fixed in this PR, steps to reproduce:\n1. Bind \"pause\" to P.\n2. Try saving a state to P.  It will save it to P, and subsequently pause the game.\nThat does not seem horrible, but if the key in question is, say, \"throttle\", the results are much worse.\nThe added code is somewhat hacky (despite my best effort to make it not so), but the situation here is complicated because there are two input mechanisms involved (UI input for remappable keys and raw input for save state name), and only one of them actually keeps track of whether the button press has been already handled.  I've thought for quite a while about how to solve that issue, and this is the best I could come up with.\n. >  I believe this is the intended behavior: you shall not bind Save State to\n\nanother UI key. If you add a special case handling for save states one wonders why there\nshouldn't be other special cases for all conflicts, etc.\n\nOther cases do not require special handling because they read all inputs they receive via ui_input_manager, and it handles those cases for them.  Save state UI has to read keyboard directly because it wants raw input (ui_input_manager only handles mapped keys as I understand it);  this naturally means that ui_input_manager does not know about save state UI already having handled the input.\n. ",
    "KipourosV": "Thanx very much for the link and info :)...\nbut...\nroot@homeVault:~/mame# make -j5 SUBTARGET=mess\nGCC 4.7 detected\nGCC version 4.9 or later needed\nmake: *** [build/projects/sdl/mamemess/gmake-linux/Makefile] Error 255\n. ",
    "motoschifo": "1) I ca use a command line option -record_timecode. Is it really necessary the -norecord_timecode option? Because with no additional params this file will never written on disk.\n2) I can use the same option to exit playback or add another option -exit_after_playback/-noexit_after_playback (default).\n3) No reason to use variables instead of functions, probably is an old code (I patched Mame since version 153 and I have changed code during this time). It's right to use use member functions.\nI will make the changes, please tell me the name of these command lines options.\n. I changed source code by adding the two options:\n -[no]exit_after_playback (default=no)\n -[no]record_timecode (default=no)\nand added a new UI item to customize shortcut key (default is F12).\nTranslated also variable names and comments from italian to english language.\nDo I need to create a new request and close this one?\n. Thanks!\n. Screenshots of the new menu.\n\n\n. Mamesick has written initial code, then I changed a lot of things:\n- added command line option checking\n- moved submenu to cheat menu (it's a cheat...)\n- redrawn the menu if options changed (for example with shortcut toggle)\n- added gui toggle item\n- added enabled/disabled layout with colored or grayed text, grouped players buttons\n- optimize source code and variables\n- changed a bit of existing cheat code (i.e. I used const instead of numbers 1 and 2)\n- other minor changes\nBefore starting this work I asked permission to Mamesick to extend and change his code.\nIf this request will be accepted, his name should be present in credits.\n. Thanks!\n. Checked and fixed.\nHow can I send the patched version of cheatopt.cpp?\nThese are the changes: https://github.com/motoschifo/mame/commit/118abc08ef84d6a15e9019bacbc873dc4b3ccee4\n. The autofire settings are not saved intentionally.\nI don't know how to write these infos on cfg file, but I will create a pull request if I will do it.\n. What is the best choice with a multi-value return on this situation?\n1) single method l_rotate, 1 packed push as string: \"270,flipx,flipy\" or \"90,flipy\"\n2) single method l_rotate, 3 separated pushes: rotation angle (int), flipx (bool), flipy (bool)\n3) 3 methods: l_rotation_angle (int), l_flipy (bool), l_flipx (bool)\n. IMHO the use of singular and plural form is not a good thing, because in the future a parameter could be extended and this breaks backward compatibility.\nSo the parameters should be [whatever]_directory or [whatever]_path. If multiple values are accepted, simply use semicolons to separate each entry.\nMost existing parameters are singular (ex. artwork_crop and not artworks_crop or artworks_crops).\nThe old parameter should always be supported because a huge number of programs are using them (front-end, utility, scripts, etc).\nI prefer singular for new parameter names because it's a much cleaner form.\nFor example: artwork_path or artwork_dir.\nLast consideration: the \"dir\" or \"path\" is the type of data used by parameter. This should be used as suffix and not as a prefix.\nFor example:\n-artwork_path and -artwork_crop is ok\n-path_artworks and -artwork_crop is not very clear\nFurther using it as a suffix all artworks parameters can be logically grouped.\n. > I always believe change is a way to evolve and \"clean up the dirt\". In other words if some change \"kills\" a program that is not developed any more (for years sometimes), then so be it. It's evolution.\nThis is evolution but most utilities and tools can be configured to use every release of Mame. The developers (and the users) can't \"continuosly\" change command options because it's not easily for everyone. If you remove important parameters you need to change every program, front-end, ini file, cfg file and scripts previously saved or compiled.\nAnd if you copy an older release, you can't simply execute it because of different syntax.\nThis is a decision taken by Mame team, I do not deny this practice but usually parameters are not changed often for this reason.\nThe change of xml entity was a basic makeup (different node name).\nIf this kind of changes will be made, please write it on changelog on top position because it's an important backward compatibility break.\nI manage node values (game/machine) and new parameters added (ex. from 0.171 there is \"-exit_after_playback\"), so I can use every release of Mame since the beginning. But a rompath parameter change will do a lot more confusion :)\n. The ini values are the same parameters used in command line, and so \"-rompath\" is a fixed text inside every configuration setup of front-ends and other tools that executes Mame binaries.\nMy utilities for example has a lots of parameters to \"hide\" the complexity of process. The user selects the path, not the \"-rompath\" text. Programs call other programs by name and parameters: if you change parameters regarding of Mame exe you have on disk, the chain will break. You can have multiple Mame installed, then you need to do a lot of work. Personally I have more than an hundred Mame configured and running to manage site, utilities and various tests.\nThen, if this will happens, the user need to know it.\n. ",
    "dlabi": "Yes I know about it, I already fixed and I'm going to pull changes soon\nwith this fix. Thank you for letting me know.\nIt is caused in line if (m_ram_cart->exists()) there is NULL pointer if no\nram card attached. to fix change it to if(m_ram_cart).\nDlabi\nOn Mon, Feb 15, 2016 at 2:48 AM, Scott Stone notifications@github.com\nwrote:\n\nIssues with cart loading causing crash: m5, m5p - m5.cpp\nNot certain if it is this submit of something that happened when it was\nmade to compile for all targets: ae55e9f\nhttps://github.com/mamedev/mame/commit/ae55e9ffcba46faa090121ee56c4f8f0f7a69133\nExamples: mame m5 -cart1 scobra / mame m5 scobra\nException at EIP=01407D41 (m5_state::machine_reset()+0x0081): ACCESS\nVIOLATION\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/612#issuecomment-184022478.\n. I'm little bit confused about those \"Merge remote-tracking...\" I don't know why they are present here as I'm unexperienced github repository user. If I did something really bad I'm sorry :-( I meant I will pull only the last commit\n. \n",
    "AntoPISA": "Excuse me but I have not figured out if your comment is positive or negative ...\n. In my opinion are more pros than cons.\nMore information (or more details) is always positive. I do not understand this ostracism.\n@galibert: Can you explain it better?\n. I fully understand your point of view (I love the MESS, I consider it interesting). In fact I try in my small way, to contribute as much as possible (unfortunately I'm not a programmer).\nI was only useful, before eliminating the ability to compile MAME without MESS, they can at least distinguish them in the new UI. Just this.\nAnyway thanks.\n. Forget...\nThanks for your answers.\n. I would say that Stiletto has closed permanently this discussion.\nThank you all!\n. msgstr \"Conferma uscita\"\n. ",
    "felixlang": "Can you make a change that allows the autofire setting to persist after powering off and back on? As it is now it looks like it needs to be re-enabled (and the delay reset) after each boot.\n. ",
    "Augusto7743": "Thanks motoschifo for add autofire in MAME.\nPlease see the link below\nhttp://forum.mamedev.org/viewtopic.php?f=14&t=107&p=365#p365\nOverclocking and autofire not are the same feature. Overclocking is for devs. Saving in cfg is wrong.\nAutofire saving in cfg not will create problems.\nEnabling autofire some games need two buttons for the same arcade button because of charge buttons. Shooters are one good example.\nI all time need to enable autofire when starting. Is an few annoying.\nOther emulators have the feature above and save the autofire status.\nMAME Plus 0.168 source code have details about saving autofire in cfg.\nIf add autofire for an separate button and saving in cfg much users will use just the official version having just one only current version of MAME.\nThanks for read my post and have a good night.\n. ",
    "howprice": "The gfx memory region in cps1 game sf2hfj is composed by taking the roms in sets of 4 and interleaving them a word at a time.\n```\n    ROM_START( sf2hfj )\n    ROM_REGION( CODE_SIZE, \"maincpu\", 0 )      / 68000 code /\n    ROM_LOAD16_WORD_SWAP( \"s2tj_23.8f\", 0x000000, 0x80000, CRC(ea73b4dc) SHA1(efbc73277d00bac86505755db35225e14ea25a36) )\n    ROM_LOAD16_WORD_SWAP( \"s2tj_22.7f\", 0x080000, 0x80000, CRC(aea6e035) SHA1(ce5fe961b2c1c95d231d1235bfc03b47de489f2a) )   // == s2te_22.7f\n    ROM_LOAD16_WORD_SWAP( \"s2tj_21.6f\", 0x100000, 0x80000, CRC(fd200288) SHA1(3817b67ab77c7b3d4a573a63f18671bea6905e26) )   // == s2te_21.6f\nROM_REGION( 0x600000, \"gfx\", 0 )\nROMX_LOAD( \"s92_01.3a\",  0x000000, 0x80000, CRC(03b0d852) SHA1(f370f25c96ad2b94f8c53d6b7139100285a25bef) , ROM_GROUPWORD | ROM_SKIP(6) )    // == s92-1m.3a\nROMX_LOAD( \"s92_02.4a\",  0x000002, 0x80000, CRC(840289ec) SHA1(2fb42a242f60ba7e74009b5a90eb26e035ba1e82) , ROM_GROUPWORD | ROM_SKIP(6) )    // == s92-3m.5a\nROMX_LOAD( \"s92_03.5a\",  0x000004, 0x80000, CRC(cdb5f027) SHA1(4c7d944fef200fdfcaf57758b901b5511188ed2e) , ROM_GROUPWORD | ROM_SKIP(6) )    // == s92-2m.4a\nROMX_LOAD( \"s92_04.6a\",  0x000006, 0x80000, CRC(e2799472) SHA1(27d3796429338d82a8de246a0ea06dd487a87768) , ROM_GROUPWORD | ROM_SKIP(6) )    // == s92-4m.6a\nROMX_LOAD( \"s92_05.7a\",  0x200000, 0x80000, CRC(ba8a2761) SHA1(4b696d66c51611e43522bed752654314e76d33b6) , ROM_GROUPWORD | ROM_SKIP(6) )    // == s92-5m.7a\nROMX_LOAD( \"s92_06.8a\",  0x200002, 0x80000, CRC(e584bfb5) SHA1(ebdf1f5e2638eed3a65dda82b1ed9151a355f4c9) , ROM_GROUPWORD | ROM_SKIP(6) )    // == s92-7m.9a\nROMX_LOAD( \"s92_07.9a\",  0x200004, 0x80000, CRC(21e3f87d) SHA1(4a4961bb68c3a1ce15f9d393d9c03ecb2466cc29) , ROM_GROUPWORD | ROM_SKIP(6) )    // == s92-6m.8a\nROMX_LOAD( \"s92_08.10a\", 0x200006, 0x80000, CRC(befc47df) SHA1(520390420da3a0271ba90b0a933e65143265e5cf) , ROM_GROUPWORD | ROM_SKIP(6) )    // == s92-8m.10a\nROMX_LOAD( \"s2t_10.3c\",  0x400000, 0x80000, CRC(3c042686) SHA1(307e1ca8ad0b11f3265b7e5467ba4c90f90ec97f) , ROM_GROUPWORD | ROM_SKIP(6) )\nROMX_LOAD( \"s2t_11.4c\",  0x400002, 0x80000, CRC(8b7e7183) SHA1(c8eaedfbddbf0b83311d2dbb9e19a1efef0dffa9) , ROM_GROUPWORD | ROM_SKIP(6) )\nROMX_LOAD( \"s2t_12.5c\",  0x400004, 0x80000, CRC(293c888c) SHA1(5992ea9aa90fdd8b9dacca9d2a1fdaf25ac2cb65) , ROM_GROUPWORD | ROM_SKIP(6) )\nROMX_LOAD( \"s2t_13.6c\",  0x400006, 0x80000, CRC(842b35a4) SHA1(35864a140a0c8d76501e69b2e01bc4ad76f27909) , ROM_GROUPWORD | ROM_SKIP(6) )\n\n```\nSo the data on disk is not in the same format as the data in memory as accessed by the game at runtime. It would be handy to be able to save the final memory region to disk, and load back in from disk.\n. Thanks for the quick response.\n\nAnd yes we suck at documentation maintenance :)\n\nDoes this mean that the existing docs are still valid, or is there anything I should be aware of? (or any steps that can be skipped?)\n. If any VS users could give me a quick ABC of how to generate a solution file that can be used to build mame.exe I'd be extremely grateful.\n. I've fallen at the first hurdle. I already had Git (for Desktop) installed. So installed msys64-2016-01-07.exe. Opened c:\\msys64\\win32env.bat and entered git config --global core.autocrlf true which returns error: could not lock config file /home/Howard/.gitconfig: No such file or directory\nMy existing .gitconfig file resides at C:\\Users\\Howard\\.gitconfig Is there some msys specific git setup required?\n. c:\\msys64\\home\\Howard doesn't exist. In fact there is no home directory at all. Do I need to create this manually, or add a new user somehow?\nEDIT: I just manually created c:\\msys64\\home\\Howard and git is happy.\n. I'm now debugging MAME with Visual Studio 2015. Many thanks for the help.\nDo you want me to update the pages at:\nhttp://wiki.mamedev.org/index.php/Building_MAME_using_Microsoft_Visual_Studio_compilers\nhttp://mamedev.org/tools/\nor should I leave that to the core team?\n. I just installed the tools on another machine. However this time when I ran win32env.bat for the first time the console said\n```\nCopying skeleton files.\nThese files are for the users to personalise their msys2 experience.\nThey will never be overwritten nor automatically updated.\n'./.bashrc' -> '/home/Howard//.bashrc'\n'./.bash_logout' -> '/home/Howard//.bash_logout'\n'./.bash_profile' -> '/home/Howard//.bash_profile'\n'./.inputrc' -> '/home/Howard//.inputrc'\n'./.profile' -> '/home/Howard//.profile'\n'./.vimrc' -> '/home/Howard//.vimrc'\n[MINGW64] C:\\msys64\\src>\n```\nThis didn't happen the first time round which complicated the process because there was no home directory which meant that git config failed.\n. > And if you want to build an executable with only a single driver, use (substitute drivername with the name of the driver)\n\nmake vs2015 SUBTARGET=drivername SOURCES=src\\mame\\drivers\\drivername.cpp PYTHON_EXECUTABLE=c:/buildtools/usr/bin/python.exe\n\nThat's a great tip. Thanks.\n. ",
    "ocornut": "May I suggest updating the Wiki page above?\nI got stuck on this for a while following the Wiki instruction, only to stumble on this issue now :)\n. Thanks a lot! Yeah it's my fault for just relying on Google \"mame visual studio\" and for some reason it didn't occur to me to read the main github readme. \n(I am amazed that you are managing to keep such a big project building at all !)\n. Watching this now so I'll apply it upstream once solution is known, but please mind the comments there\nhttps://github.com/mamedev/mame/commit/a1f9b62dd0a491d6b26291837d43181c0e9e66fa#commitcomment-18173328\nWhere @jmallach suggest it isn't fixed.\n. ",
    "Agijnnuwy": "Don't know. the system is Debian the desktop environment is mate. the browser is iceweasel\n. @cuavas Does it block Chinese address?\n. ... I see. no luck for me then...\n. ",
    "lotharsm": "Great to hear that you are aware of this issue. I hope someone will fix this in the future :)\n. @etabeta78, any plans regarding this for the nearer future? :)\n. Thanks again @etabeta78 for the implementation!\n. A perfect experience of the 1st/2nd Pokemon generation games (and 3rd gen with the help of gba.cpp) in MAME would be really awesome. @wilbertpol, I'm really looking forward to your changes!\n. @mizapf, you can send me your suggestions via PM or e-Mail - I'll include them in this Pull request immediatly.\n. I finished the translation of the latest strings.po revision. The file is now up-to-date as of commit 08d84121d4c666e6db0e7f7791f80674626babc3.\n@RafTacker, @mizapf, please do some kind of final review before someone hopefully merges this PR into the main branch. \n. Ich habe die in der Diskussion angesprochenen Punkte weitgehend umgesetzt. \"Autofeuer\" habe ich auch durch \"Dauerfeuer\" ersetzt, da mir dieser Begriff gel\u00e4ufiger erscheint.\nDie \"Lichtpistole\" habe ich einfach mal belassen - wir sollten wirklich erst einmal schauen, dass wir die \u00dcbersetzung einmal einigerma\u00dfen vollst\u00e4ndig in Branch drin haben, bevor wir ans \"Feintuning\" gehen.\n@u-man74, mit den HLSL-Schiebereglern habe ich \u00fcberhaupt keine Erfahrung, zumindest ich werde dann bei Gelegenheit auf dein Angebot zur\u00fcckkommen.\n. So, in case @RafTacker hasn't any objections, this PR can be merged in the main branch.\n. Die Vorschl\u00e4ge klingen alle nicht schlecht, die werde ich so \u00fcbernehmen, nachdem ich den aktuell bestehenden Konflikt behoben habe.\n. If there are no further objections, I think this translation round can be merged.\n. I will update the PR with a fixed commit to get rid of the noise.\n. The noise is gone. Please apology for the inconvenience.\n. First, you have to fork the mame repository, commit your changes to your fork and then open a pull request to get the code from your fork merged to the upstream repository.\nAfter forking (use the \"Fork\" button at the top of this page, you have to clone your own repository (and not the mamedev/mame.git one), edit, add and commit the files you want to. Then, you have to push the changes to your own repository and open a pull request.\nYou cannot push directly to the mamedev/mame repository, because you are not a member of the team and you don't have the appropriate rights.\n. You have to push the changes to your repository using a git client.\ngit clone https://github.com/MASHinfo/mame.git\nedit the files you want to change in your working directory\ngit add files\ngit commit -m \"Useful commit message\"\ngit push\nand then open the pull request to get the changes you did in your own branch merged into the upstream repository.\nI highly recommend https://guides.github.com/.\n. Sounds great, and I see that your PR is already merged.\nFor the future, I recommend that you try to become familiar with the concepts git follows, e.g. branching, adding upstream repositories and such.\n. @cuavas, thanks for your feedback. I think this is the case for every language you don't speak, isn't it? To determine which is the \"best\" translation, we do this discussions and try to find a consensus about this.\nHowever, at the current point, I'm just waiting for feedback to one string before I can make the final update to this PR, which will make it ready for merging.\n. Okay, we'll do that in the future.\n. I updated the translation file as we discussed in this thread. If nobody has any objections, we are ready to get this merged in my opinion.\n. Maybe we can translate \"Gfx\" with \"Grafik\" or something else? For me, it's pretty unclear what this option does...\n. Da fehlt mir der Kontext f\u00fcr eine \u00dcbersetzung: Wo taucht dieser String auf?\n. \"Tippen Sie OK\" would be a better translation. I will include this\nsuggestions in my PR later today.\n. u-man74, bez\u00fcglich Konsistenz, das zweite \"Tippen Sie\" ist mir irgendwie verloren gegangen,  war keine Absicht. Wird mit dem n\u00e4chsten Commit korrigiert, danke f\u00fcr den Hinweis.\n. \"Geben Sie \"OK\" ein\" scheint mir auch am elegantesten zu sein, werde ich so \u00fcbernehmen... wobei ich \"tippen\" jetzt auch nicht so dramatisch schlimm f\u00e4nde. :)\n. \"Zur\u00fcck zum vorherigen Men\u00fc\" w\u00e4re besser.\n. Gibt es \"Softwares\" im Deutschen wirklich? W\u00e4re da nicht eventuell \"Programme\" besser?\n. Mein Vorschlag: \"Keine Maschinen gefunden. Bitte \u00fcberpr\u00fcfen Sie den in der ini-Datei %1$s.ini angegebenen Pfad zu den ROM-Dateien. \\n\\n Wenn Sie %2$s zum ersten Mal verwenden, konsultieren Sie bitte die Datei config.txt im Verzeichnis \"docs\" zur Konfiguration von %2$s.\"\nIst aber (wie so oft bei \u00dcbersetzungen) eine Geschmacksfrage.\n. Einfach in den gleichen branch pushen aus dem du den Pull Request erstellt hast, die commits werden dann automatisch angeh\u00e4ngt.\n. Thanks, I added the missing information.\n. Der Quellcode, der diesen String referenziert, enth\u00e4lt als Beschreibung \n\n\"automatically adjusts the speed of gameplay to keep the refresh rate lower than the screen\"\n\nW\u00e4re hier \"Bildwiederholrate\" ausreichend oder sollen wir da lieber etwas genauer beschreibendes nehmen?\n. Wird \u00fcbernommen.\n. Okay, Flip X wird zu \"Horizontal spiegeln\", Flip Y wird \"Vertikal spiegeln\". Danke!\n. Wird \u00fcbernommen, danke\n. Okay.\n. Ja, wirklich schwierig, mir ist da absolut nichts passendes eingefallen. \"Leuchtreklame\" klingt da vielleicht noch am \"wenigsten falsch\".... oder einfach \"Beleuchtung\"?\n. Gibt es das Wort \"Einbrennungen\" wirklich? Da w\u00fcrde ich lieber \"Bildschirm eingebrannt\" oder so bevorzugen...\n. Nein, eher \"mehrere Tastaturen\". Siehe Quellcode-Beschreibung: \n\nenable separate input from each keyboard device (if present)\n. Quellcode-Beschreibung ist hier \nenable user interface on top of emulated keyboard (if present),\n\nweshalb ich meine Variante passender finde.\n. \"Dreifache Zwischenspeicherung\" finde ich nicht so sch\u00f6n, bei \"dreifacher Pufferung\" schl\u00e4gt mir Google automatisch \"Dreifachpufferung\" vor, was auch als Begriff in der Wikipedia steht, demnach vielleicht die \u00fcbliche \u00dcbersetzung von Triple Buffering?\n. Ger\u00e4te-Zuordnung \u00fcbernommen.\n. Okay.\n. Ich denke ich werde mal \"Marquee\" nehmen, der Begriff ist ja auch im Deutschen g\u00e4ngig. Wenn uns irgendwann mal was besseres einf\u00e4llt, ist das ja schnell ge\u00e4ndert.\n. Bei genauerer Betrachtung der Optionsbeschreibung im Quellcode w\u00e4re \"Spielgeschwindigkeit anpassen\" meiner Meinung nach die beste \u00dcbersetzung, da nicht die Bildwiederholrate begrenzt wird, sondern die Spielgeschwindigkeit selbst.\n. ",
    "BPzeBanshee": "Great stuff @etabeta78 ! That just leaves the distorted graphics when stats are raised/lowered in battle and Pokemon fans can find it fully working in MAME!\n. This leads to a compile error due to a duplicate update_dready(), compiles fine if it's deleted. ",
    "wilbertpol": "The distorted graphics might be fixed when I'm done with some changes that I'm working on for the gameboy drivers.\n. FWIW, I started working on the gameboy sound core last night. Not sure when and if it will be finished.\n. Perhaps add a comment here about apple using a different version with xcode 7 to prevent confusion in the future.\n. No, I don't. I will fix those. Thanks, fixed.. ",
    "RafTacker": "No Objections from my side right now.\nAnything debatable can be sorted out after we have this merged to baseline.\n2016-02-27 17:24 GMT+01:00 Lothar Serra Mari notifications@github.com:\n\nSo, in case @RafTacker https://github.com/RafTacker hasn't any\nobjections, this PR can be merged in the main branch.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/643#issuecomment-189678367.\n. Sounds good to me.\n. Bitte nicht \"Tippen\". Wir sind hier nicht beim Lotto :)\n\"Geben Sie \\\"OK\\\" ein\" f\u00e4nde ich hier deutlich besser, denn zugegeben\n\"Dr\u00fccken\" trifft es nicht 100%.\n\nAm 27. Februar 2016 um 12:47 schrieb u-man notifications@github.com:\n\nIn language/German/strings.po\nhttps://github.com/mamedev/mame/pull/643#discussion_r54332384:\n\n@@ -1188,8 +1164,7 @@ msgid \"\"\n msgstr \"\"\n \"\\n\"\n \"\\n\"\n-\"Dr\u00fccken Sie OK oder bewegen Sie den Joystick nach links und dann nach rechts \"\n-\"um fortzufahren\"\n+\"Dr\u00fccken Sie OK oder bewegen Sie den Joystick nach links und dann nach rechts, um fortzufahren\"\n\n\"Tippen Sie OK oder bewegen Sie den Joystick nach links und dann nach\nrechts, um fortzufahren\"\nEs gibt nichts (keine Taste), wo man OK dr\u00fccken kann.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/643/files#r54332384.\n. Laut Duden ist der Plural von Software, Softwares (war auch \u00fcberrascht)\n. You got a point, there... :)\n. Auf die Idee war ich soooo stolz...\n\nFormuliere er einen Alternativvorschlag und wir werden gn\u00e4digst eine\nAnpassung in Betrachtung ziehen.\nSchwebte Dir sowas wie\n\"\nWenn dies Ihre erste Verwendung von  %2$s ist, lesen Sie bitte\nconfig.txt im docs Verzeichnis zur Konfiguration von %2$s.\"\nvor?\nK\u00f6nnte ich auch mit leben...\nAm 29. Februar 2016 um 00:50 schrieb Michael Zapf notifications@github.com\n:\n\nIn language/German/strings.po\nhttps://github.com/mamedev/mame/pull/660#discussion_r54359453:\n\n@@ -1225,40 +1208,38 @@ msgid \"\"\n \"\\n\"\n \"If this is your first time using %2$s, please see the config.txt file in the \"\n \"docs directory for information on configuring %2$s.\"\n-msgstr \"\"\n+msgstr \"Keine Maschinen gefunden. Bitte \u00fcberpr\u00fcfen Sie den Pfad f\u00fcr die ROMs in Ini-Datei %1$s.ini.\\n\\nWenn dies Ihre erste Verwendung von  %2$s ist, konsultieren Sie bitte config.txt im docs Verzeichnis zur Konfiguration von %2$s.\"\n\nAlso, ich lese gelegentlich mal in einer Datei oder schaue hinein, aber\n\"konsultieren\"? Klingt mir ein bisschen f\u00fcrnehm (nat\u00fcrlich eine\nGeschmacksfrage).\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mamedev/mame/pull/660/files#r54359453.\n. Shouldn't this be \n\"Machine ohne ROMs aus Liste der verf\u00fcgbaren Maschinen ausblenden\" ?\nAt least it is missing some information in the translation.\n. \"Aktualisierungsgeschwindigkeit\" ?\n. Rotate is translated with \"drehen\", so for consistency, we should use that here (and all other rotete options) as well.\nAdditionally there's a typo it's \"rechts\" not \"recht\"\n\"Nach rechts drehen\"\n. Isn't this \"Vertikal spiegeln\" ? (and \"Horizontal Spiegeln\" for Flip Y)\n. F\u00fcr mich w\u00e4re es OK.\n. Ich hatte da auch keine z\u00fcndende Idee.\nhttps://de.wikipedia.org/wiki/Arcade-Automat umschreibt das auch mit \n\"Marquee (rechteckiges Schild \u00fcber dem Monitor, meist hintergrundbeleuchtet)\"\nEvtl. einfach mal als \"Marquee\" lassen oder \"Beleuchtetes Titelschild\"?\n. Ja Multi-funktions-Tastatur ist definitiv falsch.\n. Ist Sie auch :-)\n. \n",
    "mizapf": "Jetzt ist man mal einen Samstagnachmittag nicht da ... aber alles OK, soweit ich das sehe. Wenn wir noch Fehler finden - wie ich sagte, es gibt immer ein n\u00e4chstes Release.\n. > device_image_interface::call_softlist_load() was a virtual function\n\nwhere every implementation was one of two copy-and-paste jobs. This\nchange consolidates all of these implementations, replacing that\nvirtual function with a mere hook that chooses which technique to perform\n// TI99 cartridge seems to be the only reason we need\nloaded_through_softlist()... why?\n\nMaybe because the gromport offers two ways of loading cartridges: by\nsoftlist or by RPK. I kept the RPK mechanism for the sake of supporting\nhomebrew and non-standard or hacked cartridges and would really\nappreciate if you don't break that. I added most cartridges to the\nsoftlist, but right now the RPK support is necessary.\nI do have plans for some alternative way to support these cartridges\nwhich is better compatible to the MAME core softlist with some kind of\nlocal softlist per cartridge, but this still needs to be finished.\nMichael\n. I already did some research to find out how a RPK replacement solution could look like, but if you're already planning some refactory work, maybe you can also spend some thoughts on that.\nCurrently the RPKs are ZIP files containing dumps and layout.xml, which is different from the softlist XML description. In future, I could imaging to allow a \"-cart homebrew.zip\" where the mentioned file contains again the dumps but another software.xml that uses the same XML description as the system-wide softlist and can be parsed by the MAME core. This \"local\" softlist only covers this cartridge; the system-wide softlist will be temporarily replaced by this stripped-down version for this slot. I can imagine that this would cause only minor additions to the core functions. Specifically, it would be required to load a softlist out of the given ZIP file. \nSimilar as with the RPK, we would still need a way to find out whether a cartridge was loaded by list or by file.\n. Totally agree with you, etabeta. I've already studied the softlist handling a bit to find out the most efficient way to replace RPK. My plan is indeed to get rid of the extra RPK and use the same functions as used in the softlist handling.\nMy idea, however, was to add the XML file into the cartridge ZIP. If you have two separate files (XML and ZIP) I'm afraid this makes things overly complicated. What if we have a software.xml inside the ZIP which is actually the same as e.g. the ti99_cart.xml, but with only one \"software\" entry that covers this cartridge? Also, one could consider a special syntax for selecting a \"part\" from this \"software\" entry.\nThe only issue is that the core would have to learn to load the softlist from the ZIP file.\n. @ajrhacker: That's great!\nAnother thing that we might consider are \"instances\" of cartridges. Some cartridges have NVRAM, and the NVRAM contents are saved by the name of the cartridge. It should be possible to select a particular instance with the associated NVRAM contents. \nWith the ZIP file loading described here, one could probably use the ZIP file name for the NVRAM contents (so you can give different names for different instances), but for the softlist loading this should also be possible - something like \"-cart minimem#1\" or \"-cart minimem#myprogs1\".\n. @ajrhacker, @npwoods: Does the idea of cartridge instances make sense to you as I described above? Also, how is the file name for NVRAM determined? Within the softlist handling is the software name - in case of loading from homebrew ZIP it could be useful to take the file name instead.\n. @etabeta78, that is, if I had two instances of MiniMemory and store one copy as minimem1.zip and the other as minimem2.zip, could I select one specific instance as \"-cart filepath/minimemN.zip\" which automatically uses the minimemN.nv? This would be sufficient (although it means you cannot use the general softlist but have to use file zip loading).\n. There is certainly demand for this feature (and if only to replace the current RPK handling). :) Please keep me informed as soon as your refactoring is ready.\n. And that tells me where all these empty images in my directories came from: misspelling the name of an existing image file. Of course, you don't notice until you start using it, and you wonder why all the expected files have vanished. I never actually used that feature because I've always been creating my disk images outside of the emulation (or copying existing blank image files). Being able to turn it off is a good thing in my opinion.\n. Done, thanks for the note. gcc still does not care about override.\n. Hmm ... you're also using gcc ... why does my 5.3.1 not complain?\n. I have a few more corrections... shall I wait until this is merged into master? Or send by PM?\n. Mag sein, aber \"ich wei\u00df nicht, was soll es bedeuten...\" - alleine schon im Englischen? \n. Also, ich lese gelegentlich mal in einer Datei oder schaue hinein, aber \"konsultieren\"? Klingt mir ein bisschen f\u00fcrnehm (nat\u00fcrlich eine Geschmacksfrage).\n. Na ja, wie gesagt, es ist ja nur eine Geschmacksfrage, und wenn die Mehrheit mit \"konsultieren\" einverstanden ist, sei es so.\nIch h\u00e4tte geschrieben \"... schauen Sie bitte in die Datei config.txt im Verzeichnis \"docs\" zur Konfiguration von %2$s.\"\noder \"... lesen Sie bitte die Datei ...\" \n('Verzeichnis \"docs\"' finde ich besser als 'docs-Verzeichnis')\nJedenfalls finde ich, dass wir hier eine deutsche \u00dcbersetzung bekommen, die sich insgesamt sehen lassen kann und nicht von behelfsm\u00e4\u00dfigen \u00dcbertragungen aus dem Englischen oder sonstigen Schreibschw\u00e4chen strotzt, wie man es h\u00e4ufig anderswo erleben muss.\n. *value = ((offset & 0x001e) == (page*4 + 2))? 1 : 0;. We're using the software address, so the \"<<1\" is already done in the CPU.. return BIT(value, (offset>>1)&7);. May be removed; ancient leftover. I think the CRU bits are mirrored.. Shouldn't we stay with the software address (without >>1)? Requires update of TMS9902.. Since we are using the software addressing, the <<1 is wrong here.. Also here, no <<1.. No <<1. No <<1. No <<1 (applies to all following lines). switch (offset >> 4). return BIT(reply, (offset >> 1)&7);. offset &= 0x1e;. switch (offset >> 4). switch (offset >> 4). return BIT(reply, (offset >> 1)&0x07);. It is OK for me to use the hardware address (will do a <<1 in the peripheral cards if required), but your changes were not consistent (see tms99xx.cpp, tms9995.cpp where you used the even-only software addresses with cruaddr +=2).. Ah ... that is, the CPU sets e.g. the 0x1100 CRU address, and due to this feature in the address map, the actual value arriving at the read/write handler is 0x0880? Sounds a bit like hidden magic that one must be aware of.\nI used the shift <<1 in the handlers to match the handling with the specifications, e.g. when the manual of the disk controller says that 1100 is the card ROM, 1102 is the motor etc. Typically, all those CRU address references are on software base (R12). . In general, I agree with your patch, as long as it is properly documented. If you want to merge your changes I'd prefer you do it during the next two weeks, since I have some free days until then.. ",
    "Ashura-X": "nt\n. OK fixed all tipos like felipesanches told me !\n. ",
    "BenjaminSiskoo": "Thank, nice catch :) fixed. \n. Can you explain to me how to do this ?\n. Thanks :)\n. I try to fix my translations right now. I know about spaces, I just made my translation in one shot. Now I'll try to fix all the things. Anyway, good to point bad things... Translation will be better...\n. thanks\n. I'll check it, thanks\n. Give me some example. I'm open minded\n. Hello, \nJe reprendrais la traduction de z\u00e9ro. Je vais essayer de reprendre point par point.\n- L'utilisation des majuscules c'est pour le c\u00f4t\u00e9 esth\u00e9tique. J'ai pris ca de plusieurs \u00e9mulateurs anglais. Et \u00e7a me plait bien, cela n'emp\u00eache pas la compr\u00e9hension.\n- J'ai eu des retours de plusieurs personnes (dont un de tes compatriotes), et j'ai modifi\u00e9 selon ce qu'ils proposaient, surtout qu'ils connaissaient bien moi que mieux MAME. \n- Pour This machine --> this game, l\u00e0 encore je me suis bas\u00e9 sur leurs propositions qui me semblaient coh\u00e9rentes. Idem pour skeleton driver. Pour moi Sample Rate, c'est le taux d\u2019\u00e9chantillonnage. Et l\u00e0 encore je me suis bas\u00e9 sur les exp\u00e9riences des uns et des autres par rapport \u00e0 MAME.\n- Concernant le dictionnaire, je l'utilise et recoupe au maximum avec d'autres dicos.\n- Je jetterais un \u0153il sur la traduction belge et voir ce que je peux prendre pour am\u00e9liorer la traduction fran\u00e7aise. Je suis ouvert \u00e0 toute suggestion qui peut m'aide \u00e0 am\u00e9liorer la traduction.\n- Apr\u00e8s en avoir discut\u00e9 avec des personnes, je ne fais pas que du litt\u00e9ral, je localise plus que je ne traduit. Artwork, etc... reste en anglais pour correspondre au dossier existant. Afin de pas perturber les utilisateurs.\nJe vais me permettre une chose, que tu trouve la traduction moins bonne que la tienne, je peux le comprendre, par contre il faut mettre un peu les formes quand tu l'exprimes. A te lire c'est compl\u00e8tement \u00e0 refaire. \nencore une fois, je serais heureux d'avoir tes conseils ou ceux d'autres, pour am\u00e9liorer ma compr\u00e9hension, la traduction, etc...\nMerci de ton retour, ca fait plaisir :)\nCourage\n. Thanks all\n. Yeah sure. I don't have much time right now. So someone can take care of that.\n. ",
    "ArnaudRinquin": "@johnparker007 You need to first clone the repository to your own account. Then create a branch, push your changes to that branch, then create a pull request (via github website) to merge your changes into official mamedev/mame repo.\nHere is a guide for you\n. ",
    "Swyter": "Updated the branch and merged some additional changes. It's a pity that the diff can't be seen locally, here in GitHub, so that other people can comment in context and review. Oh well.\n. @mmicko Sorry for those merge conflicts. I should have checked them.\nStill not used to branching with the Git command line. I'm a hg person.\n. ",
    "Ngo-The-Trung": "Oh I realized that I have Qt4 files lying around after installing some KDE packages.\n$ QT_SELECT=5 make\nsolves it\n. ",
    "elfring": "How do you think about to avoid that this software depends on undefined behaviour?\n. Do you care for standard compliance more than using such a pragma?\n. Have you got any preferences for the name pattern of safer include guards?\n. ",
    "nowhereman999": "Wow that was fast, thanks for the quick response.  I tried to figure this out looking through the code for the last 2 hours.  I see mame has changed quite a bit since I last used it about a year ago.\nNow I can go play with my Raspberry Pi or should I say CoCo Pi.  :)\nCheers,\nNowhereman999\n. ",
    "ButchDean": "And #686 doesn't work for me.\n. My word. Simply cleaning first worked! Thanks buddy!\n. ",
    "mevi01": "How could I say that  ? Please fix your translation... Most of it is a complete nonsense.\n. Well, please have a look at my french (Belgium) translation for something much more coherent...\n- In french You Don't Have To Use Capital Letters For Everything.\n- Why replacing \"This machine\" with 'This game\" ? \n- Some of your words are badly choosen or incorrect: \"sample rate\" is not \"Vitesse\", \"skeleton driver\" is not a \"Driver Fant\u00f4me\". Boo :)\n- Your sentences are mostly incorrect, especially in MAME context.\nI suggest you to start from scratch again, have a good dictionnary near you, and don't use literal translation, it should make sense.\nI'm sorry and I know you have some experience in translating emulators,  but MAME is a serious project and translations should be suitable to use.\nBonne chance :)\n. Salut,\nJe ne voulais en aucun cas me montrer agressif, il est certain que chacun a ses id\u00e9es concernant les phrases \u00e0 traduire, libre \u00e0 toi de garder les majuscules ou les termes que tu trouves ad\u00e9quats. Simplement, certaines tournures de phrase ou les mots choisis m\u00e9riteraient une traduction plus coh\u00e9rente par rapport au reste. N'h\u00e9site d'ailleurs pas \u00e0 changer certaines variables dans tes traductions pour une meilleure compr\u00e9hension de la phrase. Comme pour beaucoup d'autres \u00e9mulateurs, MAME utilise pas mal de termes techniques, je suis totalement d'accord avec toi sur le fait que certaines choses doivent rester en anglais. C'est d'ailleurs ce que j'ai fait dans ma traduction, en gardant les deux langues.\nCe qui fait la richesse des traductions, c'est leur diversit\u00e9... Mais pas au d\u00e9triment de leur compr\u00e9hension. Je me mets \u00e0 la place d'un d\u00e9butant qui lance MAME en fran\u00e7ais pour la premi\u00e8re fois, il aurait actuellement quelques difficult\u00e9s \u00e0 comprendre de quoi il retourne.\nBon travail.\n. I agree for some inconsistencies, anyway I left most of them \"as is\" at it's not relevant for french now. Translated Windows always have been inconsistent too anyway. Directories reminds me the DOS period. In some cases the translations differ or are more explicit than english, it's not a bad thing.\nHopefully you can translate things in various ways and that's OK. \"Game\" was correct when emulating arcade machines only, but not anymore. The flags have changed some time ago, facts shouldn't even be discussed :)\n. ",
    "robhawkes": "Ok, so after digging around within the mame makefile I realised that the error message was referring to the commands / targets within the makefile \u2013\u00a0specifically, that none existed under the name asmjs_x86_clang.\nI manually changed both asmjs strings here to asmjs_x86_clang and the build now proceeds.\nI doubt this is the right fix (seems like the _x86_clang suffix isn't expected for emscripten builds), but it works.\n. Can confirm that changing the above succeeded in a working build that I was then able to bundle into the browser using emularity:\n\n. Awesome stuff \u2013\u00a0looks to be fixed now. Thank you for looking at it so quickly!\n. ",
    "PeterBortas": "(I am not a part of, nor do I speak for the Mame project)\nHave you asked Debian legal if there is an actual issue with Mame? The problem with Firefox was that Mozilla refused the right for Debian to modify the Browser for the distribution and still call it Firefox.\nExample of things that are trademarked that the Debian project have no problem with: Python (both name and logo), MySQL (both name and logo).\nRegards,\n/Peter Bortas\n. ",
    "jmallach": "This is (as one of the Debian maintainers) my understanding too. Expecting a 0.172 upload to main in the next few days.\n. FWIW, https://ftp-master.debian.org/new/mame_0.172-1.html\nAs soon as it's processed by the ftp-masters, it'll appear in sid and eventually Debian 9.\n. I've tried using only USE_SYSTEM_LIB_LUA and USE_SYSTEM_LIB_SQLITE3, me adding USE_SYSTEM_SQLITE was a bit desperate after reading through the build system. With only the two I'd expect, it errors out as I said above. Why isn't it supported?\n. Thanks for your comment Julian. I'm quite sure this is going to be a prerequisite before I can upload a GPL MAME to Debian, so any hint on what needs to be done would be very useful for me in order to try patch this myself. Thanks! \n. To be clear, I haven't removed any folder from 3rdparty. ie, the build fails even if the lua sources are in 3rd party, when telling the build system to build using system lua. For now, I'll be building with the bundled lua.\nThis currently fails with lua 5.2 and 5.3 in Debian, for the record.\n. @h0tw1r3, see here: https://tracker.debian.org/pkg/lua-sql\n. OK, I guess I'm too Lua illiterate. :D\nCan the build system be made to accept Lua from system, sqlite3 from the system and lsqlite3 from 3rdparty?\n. I get a build failure with that build config, as the initial report states. That is, with Debian packages liblua5.2-dev and libsqlite3-dev and defined USE_SYSTEM_LIB_LUA and USE_SYSTEM_LIB_SQLITE3. \n. dpkg-deb: building package 'mame' in '../mame_0.172-1_amd64.deb'.\nDepends: libc6 (>= 2.14), libexpat1 (>= 2.0.1), libflac8 (>= 1.3.0), libfontconfig1 (>= 2.11), libgcc1 (>= 1:3.0), libgl1-mesa-glx | libgl1, libjpeg62-turbo (>= 1.3.1), liblua5.3-0, libportmidi0, libqt5core5a (>= 5.5.0), libqt5gui5 (>= 5.0.2), libqt5widgets5 (>= 5.0.2), libsdl2-2.0-0 (>= 2.0.4), libsdl2-ttf-2.0-0 (>= 2.0.14), libsqlite3-0 (>= 3.5.9), libstdc++6 (>= 5.2), libx11-6, zlib1g (>= 1:1.2.2), mame-data (= 0.172-1)\nThanks @h0tw1r3 for a last minute fix. This made it easy to build with system lua with no additional hacks!\nI'll open a separate issue as I don't seem to be able to get system libuv working like this though.\n. Thank you. I'll check current git to see if I can find anything else before 0.172. Any clue when that release might happen? I might want to hold my Debian upload until that release happens.\n. thanks @mmicko! See some line comments I added on one of the comments:\nhttps://github.com/mamedev/mame/commit/5965f07e9888e32ae79953f64107e846a1873fbc\n. Err, one of the commits, I mean.\n. The last questionable block I've been able to find is:\nhttps://github.com/mamedev/mame/blob/master/src/mame/drivers/system16.cpp#L3032\n```\n/*\nProgram Roms contain\nDesigned and Programmed by A.M.T. Research & Development Department 03/30/1991.\nCopying or Revising for Commercial Use Is Not Permitted.\n*/\n```\n. Thanks for the clarifications, everyone!\n. Thanks for writing this @h0tw1r3! While I was working on hacking the build system to make it do what I wanted (but actually missing some bits of how the build system is generated), I found my build also builds lzma from 3rdparty, but there seems to be no provision to use the system one.\nAs lzma is quite security-sensitive, it'd be great to include support for system lzma too.\nOther 3rd party deps that could be interesting to allow as system lib is http-parser. I'm unsure of lua-zlib and lua-filesystem: they have Debian packages available but I'm unsure if these are taken into account when system Lua is in use.\n. @mmicko actually the end result would be the same, as your gettext updating scripts will synchronise it in the next pass. I can't just rebase easily, the amount of conflict would be way too big on the po file. I can instead msgmerge with the newest po template. However I can't find it, any help?\n. It seems github didn't like my (pointless) branch rename. Adding a new pull request!\n. I knew I was risking a bit too much with that one in particular. :) Can a pull request leave out a commit in particular, or do I need to do the reversion in my branch?\n. Hi @cuavas,\nI humbly disagree wrt \"standart\" and \"assistent\".\nhttp://www.oxforddictionaries.com/spellcheck/english/?q=assistent\nhttp://www.oxforddictionaries.com/spellcheck/english/?q=standart\nBoth are common misspellings as far as I can tell, and as far as all online dictionaries I have just queried confirm. However, \"Assistent\" in MAME's occurrence is a product name and that one in particular will need to be reverted.\nRegarding the \"softwares\" commit, and as the commit message says, \"software\" is not countable, but indeed there are places where it might look a bit awkward (a translatable string similar to \"10/25 softwares\". I suggest we change that to software packages or software items or whatever, if we want to avoid a spelling mistake. The rest of the occurrences read ok to me after changing them to just \"software\".\nThanks!\n. I have force pushed the deletion of the \"assistent\" commit.\n. @cuavas, first of all, I',m a total newcomer and a newbie when it comes to MAME's codebase and internals. All the actual code changes that I've done have been as conservative as I've been able to judge, and it wasn't my intention to rename ROMs at all. If\nROM_SYSTEM_BIOS(0, \"standart\", \"Standart\")\nreferences some software/BIOS name, I'll get rid of that commit as well. Can someone clue me?\n. From what I can see, this is just a version string for a BIOS, right? The same file has a \"ver 1\" additional section. I also see a few other occurrences:\nsrc/mame/drivers/h8.cpp:    ROM_SYSTEM_BIOS(0, \"bios0\", \"Standard\")\nsrc/mame/drivers/ksys573.cpp:   ROM_SYSTEM_BIOS( 0, \"std\",        \"Standard\" ) \\\nsrc/mame/drivers/apf.cpp:   ROM_SYSTEM_BIOS( 0, \"0\", \"Standard\" )\nsrc/mame/drivers/sorcerer.cpp:  ROM_SYSTEM_BIOS(0, \"standard\", \"Standard\")\nI know little about historic ROMS or so, but I'd say this is just a typo. I don't know if this will render the BIOS non-functional, I'd like someone to help me understand that. :)\n. Can I do anything to get this merged before it bit rots a bit? Is there any change desired before it can be merged?\n. There is a variable called exename, maybe it could be used instead. In fact, it is used in the output of mame -showusage. Please let me know your thoughts about this.\n. @mmicko the additional commit is compile tested, but it should be pretty straight forward.\n. OK, not testing it was too lazy:\n```\njordi@penyagolosa:~/git/mame$ mametestname -h\nMAME v0.172\nCopyright Nicola Salmoria and the MAME team\nThis software reproduces, more or less faithfully, the behaviour of a wide range\nof machines. But hardware is useless without software, so images of the ROMs and\nother media which run on that hardware are also required.\nUsage:  mametestname [machine] [media] [software] [options]\n    mametestname -showusage    for a brief list of options\n    mametestname -showconfig   for a list of configuration options\n    mametestname -listmedia    for a full list of supported media\n    mametestname -createconfig to create a mame.ini\n\n```\n. This patch has been tested on Debian builds.\n. Hmm. I'll see if I can work with the Debian Qt maintainers for a version that does not break others. I had understood this was it.\n. @mmicko after chatting to the Qt maintainer in Debian/Ubuntu, I've learned the following:\n- apparently Qt upstream explicitly asked Debian to not ship moc-qt4 or moc-qt5 in the path, but use qtchooser instead. Debian had been shipping it like Fedora until they decided to follow what upstream was asking.\n- as there are two diverging views on how this needs to be installed and what will actually be available on Debian/RH systems, I guess we need to support both. Can we do a test for qtchooser, and do one thing or the other depending on the result?\nI suggest:\n- test for the return value of readlink -fwhich qmake| grep -i -q qtchooser.\n- If it returns 0, populate a variable with \"-qt5\" and add the variable to all qmake and moc calls like in the patch. If the variable is empty, no behaviour changes, and if the variable isn't empty, use the value as an argument to moc and qmake.\nI can try to cut a patch myself, but probably my Lua is silly enough that it'd be a magnitude easier for you to do it. :P\n. @mmicko, ugh. It seems it's worse than this.\nIn https://github.com/mamedev/mame/blob/master/scripts/src/osd/modules.lua#L296, there's a full test for \"QT_HOME\". What is this? Qt knows about this variable, or at least git grep QT_HOME in qtbase source code returns nothing.\nAlso, in order to find moc, it's path should be queried to qmake instead, with something like qmake -qt5 -query QT_INSTALL_BINS (I am unsure of the Fedora version of this command).\nAnd there are some hardcoded paths in here, like /bin/qmake.\nIn short, there's enough suspicious bits in here that I don't know how to proceed. I formally request help here. :)\n. The problem is the contents of that directory would force all of the source package in non-free in Debian, and out of Fedora entirely, etc.\nI would just post-process the import of new rapidjson versions to rm -rf jsonchecker entirely, or possibly better, switch to any of the many alternatives that were written to work around this license:\nhttps://wiki.debian.org/qa.debian.org/jsonevil\n. Sorry, I didn't realise I commented on the actual commit, not issue. No, this commit does not fix it.\n. With the fixes from #1093, and using system libuv, yes, the build succeeds, as can be seen here: https://buildd.debian.org/status/fetch.php?pkg=mame&arch=kfreebsd-amd64&ver=0.176-2&stamp=1469694187\nThis bug should have been closed a week ago.\n. These are Debian's libuv portability patches: https://sources.debian.net/src/libuv/0.10.36-3/debian/patches/ . It might be a good idea to merge a good part of these into 3rdparty.\n. TBH, if anyone deserves these $20, it's @stevenc99. But how on earth did these $20 appear out of nowhere? \n. Please ignore me, this appears to have been caused by a local problem.\n. Hi @cuavas! Yes, FreeBSD_kernel is available on regular FreeBSD:\nhttps://svnweb.freebsd.org/base/head/sys/sys/param.h?view=markup#l64\n. This, of course, would fix #1044.\n. Hi @mmicko, I can try to recompose the necessary changes into a pull request. Race against the clock though.\n. In principle, #1147 has dealt with this.\n. After discussing with @cuavas, I've duplicated this pull request with rapidjson upstream:\nhttps://github.com/miloyip/rapidjson/pull/703\n. This fix has been applied upstream. https://github.com/miloyip/rapidjson/commit/323a0dce43cd80d336e2571956f2339c9422ea3d\n. This has been merged, yes. https://github.com/mamedev/mame/commit/a8ebc114372476314a3817daa010b71f85d329e1#diff-ad70ca65ccd212456aaca0efb96cd072L253\n. @Lord-Nightmare, it is, it is. That's why I talk about the spirit and not enforcement or anything. It's just a trivial patch, and quite nice to have: the min.js versions are unusable to the naked eye, and having the source for reference and to know how/where it got generated from is good at essentially the cost of 50KB.\n. @mnaberez I will try to get that merged upstream first then. Thanks for the comment!\n. For completeness, this pull request was also sent upstream: https://github.com/snide/sphinx_rtd_theme/pull/332\n. Please be careful with a few that maybe touch labels that can't be touched. In particular, I am not sure about \"avaliable\".\n. Thanks for the comments. As discussed on IRC, I looked in the Wikipedia for the Return to Earth case and learned it's definitely not the best source for this.\n. ",
    "sl1pkn07": "EDIT3: yes, now working!\ntnx guys and sorry for the last noise\n. ",
    "Sworddragon": "So arcade games are called with their name and detachable medias with their path if I'm seeing this correct. And this could be maybe made more consistent for example if both variants would support both methods.\n. Ok, so then only the support for paths on non-detachable medias like arcadegames is missing which would also be a nice bonus (on testing this I have also noticed that starting a game with its path does show for example \"GBA: Detected (ROM) SRAM\nGBA: Emulate SRAM\" a few times and the loading needs a few seconds longer while renaming the file of the game so that it matches the name in the software list and starting it with its gamename skips these steps).\n. Ah, this does the trick, thanks for the information. But maybe MAME could also support to autodetect which system the ROM's belong, list them in the GUI and do these steps automatically.\nEdit:\n\nThrough the GUI (0.171 or later) you select the system, then if needed it will let you select a game from the softlist.\n\nThis seems to do the requested feature too in a bit different way but maybe such an autodetection would still be useful if used from the command line.\n. ",
    "ppriest": "This option was experimental when it was added - there are several bugs solely as a result from it. I'd recommend that it be removed entirely. Just do a search for \"-mt\".\n. ",
    "belegdol": "You can't build using system lua-sqlite yet, only system lua and system sqlite. Can you try defining USE_SYSTEM_LIB_LUA and USE_SYSTEM_LIB_SQLITE3 only?\nAre you deleting anything from the 3rdparty folder?\n. Building using system lua-sqlite is not supported yet as noone has sent necessary patches yet. It's on my to-do but as lua-sqlite is not packaged in fedora yet this might take a while.\nAnyway, using system sqlite and lua should work, it does in my Fedora packages. The error you posted indicates that lua headers are missing. You still need lua in 3rdparty folder to build lua-sqlite, even if you are building using system lua.\n. Thanks, it worked. Patch attached for your convenience.\nmame-0.171-gcc6.patch.zip\n. Thanks for merging! Debian package is set up to call noasm, ptr64 and bigendian manually instead of using mame autodetection which is probably why it worked without the changes similar to ones from this pull request.\n. ",
    "Mikejmoffitt": "It is possible other bootlegs share these characteristics, but without a board I can not verify it. \n. ",
    "antonioginer": "I'm just going to rework the idea, making it simpler.\n. This is fixed by https://github.com/mamedev/mame/pull/733\n. Do you mean the \"real\" master? I'd say I have no write access to do that (need to check).\nedit: indeed, \"remote: Permission to mamedev/mame.git denied to antonioginer.\"\n. ",
    "Bavarese": "Probably related: i would like to disable RESET altogether, or query the user via OSD before doing it.\nThere is an OSD configuration option for ESC / quit, but no way to inhibit RESET within the driver. \nScenario: when an inexperienced user presses F3 (wired to a vital 'Setup Mode' on a real machine) within the Rainbow-100 driver - which happens to be in partial key emu mode - the emulation performs a reset instead.  \nThere was no built-in reset button on real hardware.\nReassigning keys seems impossible for ESC, F3, ScrollLock and would also be counter-intuitive either for the MAME/MESS or the Rainbow user. \n. Thumbs up for Bochs CPU code. \"Design and Testing of a CPU Emulator\", a paper from Microsoft Research, located at http://research.microsoft.com/pubs/102035/techeport%20cpu_test%20v4.pdf suggests there are unemulated 808x quirks Bochs handles correctly (see paragraph 5.1 \"When the Specs Are Wrong\").\n. The includes were only necessary for the (now gone) keyboard workaround. They aren't referenced elsewhere. \n. Very likely the key scan logic isn't complete, or keys dont fire at startup. We dont have schematics for the 68HC05. Plus, i cant verify against live hardware.\nThe patch was intended as a general workaround, as the keyboard must be reset at startup.\nI will now close this one and wait until someone comes up with a better solution.\n. Done. ",
    "GuitarAmber": "Hey all, I was referred here by james. \nI have a solution that works quite well for FME, but it's not perfect. \nIt's best to split the problem into 2 separate things, 1) How to determine the brightness of the bulb / LED, & 2) how to display that effectively.\nPart 1 is quite straightforward, though if someone has any decent maths / physics skills, I could make the algorithm more accurate. At the moment I calculate the brightness linearly, but I am almost positive it should be logarithmic.\nPart 2, there are various solutions, I'm now using DirectX / HLSL. I'm currently developing my emulator and the more advanced lamping is on the todo list, however I already know what I need to do, and I have dimmed & super bright lamps simulated already. \nBut displaying artwork on a screen is very subjective, what looks perfect to someone may look poor to another person. But with HLSL / Directx / OpenGL there are many many solutions. If anyone is interested I am willing to discuss it at length, but it's a much bigger subject than it may first appear. It all depends on the level of realism you want, i've been toying with a raytracer and 3D model, though I must admit it's taking some time for all the relevant maths to sink in. But you can create a decent effect quite simply with a standard texture shader.\nSo, determining the brightness of the bulb...\nThe method I am describing is based on a standard 8 * 8 matrix, though the principal works just the same for a 16 * 16 matrix by changing a small amount of code.\nLet's consider a single bulb attacted to the matrix. Here is the method I use, I know it isn't correct physically, and if anyone here dabbles in physics and would like to chime in, please do. But it does work and looks pretty good.\nFor each bulb you need to know whether it currently has voltage applied, and how long the voltage has been applied for. If it doesn't have voltage applied, you need to know how long it has been since voltage was last applied. \nSo I keep 2 counters, TimeOffCycles and TimeOnCycles. I track everything in cpu cycles rather than work it out into seconds.\nThen I use 2 values. GlowCycles, and FadeCycles. GlowCycles is the number of clock cycles that elapse in the time it would take the lamp to go from completely off, to fully on if powered continuously. FadeCycles is the number of clock cycles that elapse in the time it would take to go from fully on, to fully off.\nFadeCycles is always a bigger value for an incandescent lamp. \nThe system I developed it on ran at 1.72MHz, and the values I used were; GlowCycles 21000, FadeCycles 111000; How correct this is I don't know, but it looked right to me.\nSo, using the 4 values (the counters, and the Fade/Glow)...\nIf the lamp is currently powered (strobe is on, data is on), then Offcycles should be reset to 0, and OnCycles should be incremented. Calculate the brightness by comparing the OnCycles to the GlowCycles. If OnCycles is greater than or equal to GlowCycles then the lamp is at full brightness, otherwise I find the value on a linear scale. I store the Maximum brightness value that the lamp got to while under power as we'll need it later.\nIf the lamp is currently not powered then I set the brightness on a linear scale of how long the lamp has been off for, from the maximum brightness it got to before. Once the lamp has been off power for greater than OffCycles then the lamp is completely off.\nTo save CPU cycles I keep a single variable TimeSinceDataChange, which is incremented every instruction with the number of cycles executed. And then add this value to either the OnCycles or OffCyles for each lamp as appropriate at each data write. This saves updating all the lamps every instruction cycle as in FME we deal with up to 512 lamps. I also used to update everything at each change of the MUX Lines but that just seemed to make everything more flickery. How you do this will obviously depend on the specifics of the game hardware.\nThat's pretty much it. If none of that makes sense please ask away and I'll have another go.\nThe only improvement I can see would be to calculate the correct curve for the lamp brightness going from off, getting brighter, and then saturating (I'm a bit dodgy with physics, is that the correct term?).\nI'll cover part 2 if anyone is still interested.\n. The low pass filter wont help with persistance.\nThe pdf with the graphs looks quite useful. But possibly only half the story.\nHow would that translate for a 12v 0.1W bulb being driven by 48v AC but multiplexed to give 12V rms voltage, rather than 12v DC.\nI never got to look into this properly before, I'll have a play with the maths at some point in the next few days / weeks and see what I can come up with.\n. I've been doing some thinking and reading and I think I've realized what's going on.\nOn a particular FME tech (MPU4) they dim the lamps by playing with the timings of the multiplexer. My solution works in most cases, but not all. I've finally realized why and what they are doing. They are using the multiplexer to apply a square wave rms value on top of the 48v (12v rms). It's only in reading those links that I've really clicked what they were doing with the hardware and why in some cases it didn't work. \nIts also helped to make some things clear, and to refresh my memory in this area. So 12v DC is treated the same as 12v rms, that makes sense.\nSorry if I am cluttering the thread, I'm sort of thinking out loud here as I'm now seeing things with a little more clarity.\n. > Just wondering is this flickering partly due to the rate at which MAME renders layout items when there's no \"screen\". It defaults to 60hz I think.\n\nI updated the Bally early solid state Pinball driver last year which uses multiplexed 7 segment displays that are updated at 320Hz, when I implemented the blanking signal the displays flickered like crazy. At the time I put it down to a sync issue with Mame rendering the layout display at 60Hz while the driver was updating its display digits at 320Hz. Am I off the mark? Is there some other better solution in this case I've missed?\n\nLED's and Lamps do not go off the moment the power is disconnected, there is a short period where they fade out. The time that takes varies for different LEDs, but a typical value is around 1/20 of a second. This capacitance gives time for the multiplexer to go round and set all the other lamps and get the original lamps under power again before they go out.\nIf you drive your simulated/emulated lamps directly from the digital signal your lamps will only ever be on (1 / [however many lamp selects]) of the time. The easiest and simplest method of getting round this is to have a single counter. Any time the lamp is powered reset the counter to whatever value. When the lamp is off, decrement the counter (whether you do this in seconds, frames, or clock cycles is up to you). If the counter reaches 0, your lamp is off, any other time the lamp is on.\nYou'll find the counter value easily with a little trial and error. Too low and lamps will flicker, too high and lamps will stay on as longer than they should.\nThat's by far the simplest way of doing it, and it'll work just fine, but its not the way it works for real. However it is very much tried and tested. It'll certainly remove the annoying on/off flickering.\n. Hmm, ok well I stand corrected.\nFirst of all I meant persistance, not capactiance. I accidentally a word, so forgive me.\nSecondly you are absolutely right, LEDs do go off almost instantly. I did the solutions for the lamps in my emulator and when I did the LED segments I encountered the same flickering, so I solved it the same way, which worked just fine. However having thought it through, prompted by yourself, you are right, LED's are an entirely different problem, which under the right conditions have the same (but incorrect) solution.\nSo I apologise, what I said only works for lamps, not LEDs, but please see that I am trying to contribute and not trying to spread misinformation.\nThe whole point of this thread was a discussion on multiplexed outputs and their emulation / simulation solutions. I don't know everything and I did say that in my initial post, I am here to be a part of the solution and that involves some learning. There's no need to be quite as defensive, its a friendly chat.\n. Having re-read the thread, maybe shifting the discussion to the graphical side of the simulation would be beneficial. At the end of the day you can have the most accurate mathematics possible, if you can't get that onto the screen sensibly, then it's useless.\nWhat do you want to see on the screen as the end result?\n. You may want to include values greater than 1.0 though. I am only really familiar with FME games, I was never a big video arcade fan. But I know for certain that some games in FME would alter the mux to hold the power on slightly longer resulting in a super bright flash. If it was done in FME then I bet at least a few video arcade games will have used this. An easy way to display this on screen is to oversaturate the image.\nThis was only done to Lamps, not LEDs. Maybe separate discussions of LED's and Lamps would be an idea? They are inherrently different problems to solve despite seeming similar at first glance.\nFor lamps there seems to be 2 parts of the problem to get a reliable brightness value.\nFirst you need to calculate the rms Voltage. For this you need to calculate the period of a cycle, and to keep a count of how long the data line is high for. If you have a mux that's constantly going in a loop 0,1,2,3... and so on, you can use the timings from that. For instance to keep track of strobe line 0. When the mux changes to 0, start the counter, when the mux comes round again to 0, stop the counter.\nGiven the two values you can easily calculate the rms if you know the input voltage of the system.\nThe rms value is the voltage the lamp is aiming for. By keeping track of the previous rms voltage calculation and the known time period you can then work out if the lamp can reach the current aimed for voltage in that time period. If yes, then store the rms value to be used as previous next time. If no, calculate the voltage that could be reached from the previous rms value while aiming for the current rms and store that value.\nOn hardware which changes multiplexer bits 1 at a time you will need to 'smooth' the output and only change the multiplexer value when it steps in sequence.\nTime to write some code I think.\n. Does the Minicom IV drive the segments directly or is it using a VFD driver chip?\n. I have been working on getting the values coming out of this correct. So I can get the time taken to get to a given temperature. But I need to reverse it to get the temperature after a given time. Can anyone help?\n`void GraphicsClass::SetInitialValues(void){\n```\n//The values in the data sheet for these bulbs (10mm 12v 1.2W Wedge Bulb) @ 12v (google \"CML 1112LF\" for info)\n//          Current Lumens    \n//Max       110mA   6.25\n//Nominal   100mA   5.0\n//Min       90mA    3.8\n//Filament Specifics\nF_Length = 0.0007;                                      //Filament length (Meters)\nF_Radius = 0.00005;                                     //Filament radius after winding (Meters)\nF_Surface__Area = (((F_Radius * 2) * M_PI) * F_Length); //Filament Surface Area (Meters)\nF_Density = 1.960 * pow(10, 4);                         //Filament Density (Kg/M3);\nF_Mass = (F_Density * F_Surface__Area)  ;               //Filament Mass (Kg)      \nF_Voltage = 9.0;                                        //Filament Input Voltage (Volts)\nF_Cold_Resistance = 14.2;                               //Filament Resistance at Ambient Temp (Kelvin)\nF_Cold_Temp = 294.65;                                   //Filament Ambient Temp 21.5 degrees celcius (Kelvin)\nF_Nominal_Power = 1.2;                                  //Filament Power during steady state operation(Watts)\n//Physical Values\nGas_Constant = (8.3144598 * pow(10, -5.0));             //Gas Constant (Jules/Moles Kg)\nDebeye_Constant = 400;                                  //Debeye Temperature of Tungsten(Kelvin)\n//These coefficients may need changing\nA = (4.5549 * pow(10.0, -3.0));                         //Coefficient A\nB = (5.77874 * pow(10.0, -10.0));                       //Coefficient B \nExponent = 1.2285;                                      //Exponet\n```\n}\ndouble GraphicsClass::GetTime(double TemperatureIn){\n```\ndouble ret, part1, part2, C, C1, C2;\n// Time (Seconds) as function of Temperature (Kelvin) \n//Calculate Heat Capacity (Jules/Kg Kelvin)\nC1 = (1.0 - (pow(Debeye_Constant, 2.0) / (20.0 * pow(TemperatureIn, 2.0))));\nC2 = pow(TemperatureIn, 3.0); \nC = (3 * Gas_Constant * C1) + (2.0 * A * TemperatureIn) + (4.0 * B * C2);   \n//Calculate Time Taken to Reach Given Temperature (Seconds)\npart1 = ((F_Cold_Resistance * F_Mass * C) / pow(F_Voltage, 2.0));\npart2 = pow((TemperatureIn / F_Cold_Temp), Exponent); \nret = (part1 * part2);\nreturn ret;\n```\n}`\n. ",
    "Quench0": "Just wondering is this flickering partly due to the rate at which MAME renders layout items when there's no \"screen\". It defaults to 60hz I think.\nI updated the Bally early solid state Pinball driver last year which uses multiplexed 7 segment displays that are updated at 320Hz, when I implemented the blanking signal the displays flickered like crazy. At the time I put it down to a sync issue with Mame rendering the layout display at 60Hz while the driver was updating its display digits at 320Hz. Am I off the mark? Is there some other better solution in this case I've missed?\n. Pernod70: \"(anyone want to develop 32016 core?)\"\nWe have support for the 32016 in the TMS32010 CPU core, though I'm not sure anything uses it to date.\n. Ah I see, yes it's a different beast. Sorry about that.\n. ",
    "sum2012": "Switch to Python2.7\nNow it complain mingw64.\nI try to download mingw64 but it only has header file.\nHow to solve it ? Thanks\n\n. I am running windows 7 64 bit\nMore test\nI only can complile with msys64-2016-02-16.exe\nmsys32-2016-02-16.exe cannot compile (same error as Mingw64 is not set)\nI will test again on windows xp after 20 hours\n. winxp compile ok with msys32-2016-02-16.exe\nSo remain problem \"msys32-2016-02-16.exe cannot compile with win7 64 bit\"\n. @balr0g I reinstall Python 3.4\nI confirm fixed Python issue.\n. @mmicko set  MINGW64 = C:\\msys32\\mingw32\\bin don't work\n\n. @mmicko \nmake:*** No rule to make target 'PTR64' . Stop\n. @mmicko I have an idea to solve .But I need compile finish to ensure I am not wrong\n. Test finish ok :)\n. ",
    "NULUSIOS": "This is indeed something for HBMAME.\n. Ah sorry didn't realize bgfx actually hides the whole rendering subsystem behind it, thought it was limited to effects and could be disabled.\n. Of course for shader passes the resolution should be known and actually this is what I am talking about.\nMAME settings right now are specified: Globally -> System specific -> Monitor orientation -> System type (btw shouldn't be this the other way around with system specific ini?) -> Screen type -> Parent -> Driver.\nI am talking about MAME having specific parameters that can run after checking \"resolution\" parameter of each ini or detect if resolution is auto and fullscreen or max window. Running (with auto) on different resolution screens and having a few different presets, that run when user just changes the resolution parameter, would be fantastic.\nExample. If MAME is stored on a USB disk and is run at home PC at full 4K has specific HLSL settings, taking the disk at work will work with different HLSL settings at 1080p and then plugging the disk on a laptop with 1366x768 will have yet different HLSL settings (or HLSL off) with the user doing nothing (resolution auto) or almost nothing (resolution set per case - no need to touch other settings).\nThis is a feature that will feel at home exactly with \"auto\" resolution, but this is not the only case.\nI think this feature is vital for a portable environment that MAME mostly supports already.\n. I am not over-stating, I am merely \"advertising\" the need. :)\nAnyway, note that I don't talk about settings \"rather than\", but \"in addition to\".\nSettings per-machine (I assume you mean emulated machine) = settings based on what the user wants to run.\nSettings per resolution = settings based on where the user wants to run a machine.\n. I understand what you say, but still think it's (plain and simply) useful.\nIn a few seconds someone can see why something that they think should work, doesn't (and even what replaced it -  if anything).\nDocs are for users too, right? Not just devs.\nAnyway, it is there, a tiny text file (and I could even maintain it) - if team says is not needed, so be it.\nBTW I run mame64 (without parameters) both directly from desktop and from command line, with a fake entry in mame.ini and saw no warning whatsoever. (maybe a bad entry is a minor error that needs a higher debug level)\nI guess we close this then?\n. Thanks.\nIt's just a text file though. Not sure how it would fit within Antonio's collection.\nAnyway it is clear this will not go in the release.\n. Aside from assimilating emulation related open source code, it might be useful to find and incorporate libraries that will make the whole I/O as portable as possible. Like BGFX for graphics rendering, look what's out there for audio output and generic input handling.\nAlso VLC code can be used to add videosnap feature to new GUI (see #840).\nAlso fs-uae is open source which could take Amiga (and related) emulation years ahead. That said, I've contacted the author and he is not interested to help (but that doesn't change the fact that the code is GPL-2.0).\n. fs-uae.\n. Question is, could you compile it? Because I couldn't...\nIf it cannot yet be compiled, it probably isn't ready for it.\n. This is also discussed here:\nhttp://forums.bannister.org/ubbthreads.php?ubb=showflat&Number=105425&page=all\n(for reference and completeness)\n. Your requests are even weirder than mine. hehehe\n. (will update)\n. I might need to outline actual changes a bit cleaner and hope that some dev finds them logical.\n(or SOME of them)\nCurrent parameters and defaults vs. new parameter names and defaults.\nCheck attachment (because here it messes my tab stops).\nnew-params.txt\nThis is much cleaner I believe.\nI realize this will change the setup of some. Even then, ini files can be edited.\nThe transition could be assisted by a simple console script (to make any possible renames).\nUnfortunately I cannot code this and make pull request, but even if I could I am not sure I would make it, if team doesn't believe those changes make any sense.\n. I agree with all your points actually - and stand corrected for part of my proposal.\nI prefer suffixes too, the only reason I used prefixes (same for \"snaps_\") is that this allows for easier \"shorting' of parameters and grouping. But this doesn't make any sense in a configuration file where parameters are organized at will.\nThe only thing that I am not sure I agree is to support the old style. Maybe during some adjustment period (3-5 versions), but not forever.\nWhy?\n- MAME dictates what the programs should use, not the other way around. A major change like merging of MESS also brought out incompatibility issues and whoever was active, made the appropriate fixes. Same thing with other parameters that got wiped or new added, which has happened many times since MAME 0.1. Even with latest versions with BGFX parameters and HLSL... their parameters were (and still are) highly volatile.\n- I always believe change is a way to evolve and \"clean up the dirt\". In other words if some change \"kills\" a program that is not developed any more (for years sometimes), then so be it. It's evolution. Either somebody will have to be forced to update it or someone else makes a new one. I know it sounds rough, but this is how things work anyway.\nUpdated txt.\nnew-params-v2.txt\n. Sure this is a decision for mame team.\nI don't see how path parameters will affect 3rd party software much..\nMost programs that deal with paths, just ask for them and have their own config files (like 99% of front-ends?).\nIf you can give an example of a utility that needs to read mame.ini (and new ui.ini!? - then it is very actively developed) path section, that will fail, please do.\n. Forgot about -rompath to be honest. This is a parameter that can be held for legacy I guess.\nI believe the changes proposed need to be made.\nAt least some.\n(remember I talk about three distinct things - changes in path defaults, parameter renames and a couple of new things)\n. ",
    "zjwkof": "Delete   megaduck                        // Megaduck\n ( mame0172s :  mame.lst )\nmake\nfor a MAME build\n. Example:\n// license:BSD-3-Clause\n// copyright-holders:Aaron Giles\n/************\n```\nmame.lst\nThis is automaticaly generated file, that should be manually updated when\nnew driver is added. From time to time we will auto update comments\naccording to meta-data from source files.\n```\n************/\n@source:dccons.cpp\ndc                              // 1999 Sega Dreamcast (USA)\ndcdev                           // 1998 Sega HKT-0120 Sega Dreamcast Development Box\ndceu                            // 1999 Sega Dreamcast (Europe)\ndcjp                            // 1998 Sega Dreamcast (Japan)\n@source:gb.cpp\nmegaduck                        // Megaduck\n@source:snes.cpp\nsnes                            // Nintendo Super Nintendo NTSC\nsnespal                         // Nintendo Super Nintendo PAL\n\nDelete 1.megaduck (gb.cpp)   2.snes.cpp\nmake compile\n\nDelete 1.megaduck (gb.cpp) \nmake error\n. mame 0.174 fix\n. ",
    "rfka01": "@etabeta:\nThe chips in my machine are labeled \"PC-I BIOS $DC00\" and \"CHARACTOR $164A\" ... I wasn't sure if those names are permitted in ROM loading, but the original names are preserved in the archive I posted in the thread on bannister. Feel free to change to conform to the specs. :)\n. What's the best way to do this without complicated merging? Robbert has done some formatting on my original submission (without the 286) in the meantime. Pull from git, add the 286 again and resubmit a pull request?\n. Vas, thanks for the explanation. Together with helwie44 I'm working on something more consistent.\nRobert. * The code is copied over from itt3030.cpp where it's done like this.\n optional_device_array is only used in six drivers on the former MAME side of things, so I haven't run into it until now\n after checking the example, I'm lacking the knowledge to see the benefits as \nfor (int i = 0; i < 6; ++i)\n    if (m_driver_latch[i].found())\n        m_driver_latch[i]->write_bit(offset, BIT(data, i));\n\n(from joctronic.cpp) doesn't seem to save lines.. Thanks for that detailed answer! I'll have to look up the examples you cited and see what fits best.\nMaybe this is a good time to ask what makes an optional device ... the floppy drives are physically there, wouldn't they be required? \n. Thanks for catching this ... was carrying over the labels and forgot to remove the  comments.. Hope I caught all your corrections.\n. ",
    "GiuseppeGorgoglione": "I just thought it was nice to have full screenshots with post processing effects applied. And being .PNGs you can also split them later programmatically with tools such as ImageMagic without any loss of quality.\n. Oops... I totally overlooked the fact that strconv.h functions were Windows only. My bad.\n. That's fine. If you think there is any other patch of interest in my series, I can rework the pull request to include just that.\n. Should i keep the patch \"   Remove dynamic binding for standard Windows functions\" as well? If not, I need to port those functions as well to osd_dynamic_bind.\n. Thanks for your review. I'll work on that.\n. I updated my patches according to your suggestions. I hope to have got them right.\nA couple of notes: with the new interface I don't know if it's clear enough that the handle returned by dynamic_module::open() is not just required to bind symbol pointers but must stay in scope hereafter and together with them, otherwise the dll gets unloaded. The old interface, keeping a module handle with every symbol, was taking advantage on the fact that in both Win32 and POSIX the \"load_module\" operation is reference counted, so everytime a symbol pointer went out of scope an \"unload_module\" call was sent but the module was actually unloaded only when all the pointers were gone.\nThe UNIX and Mac OS X implementations are identical so I was planning to move them into a separate posixbind.cpp file, with a winbind.cpp file keeping the Win32 implementation of course. Any suggestion about where to place them and the dynamic_module interface declaration?\n. No problem at all. Thanks for your time!\n. Yes, of course. Thanks.\n. Yes, why not. I just copied the old behavior. Actually the change should also include avi_copy_texture/surface and avi_final_texture/surface which were/are allocated unconditionally.\n. I think I already implemented what you asked for, but forgot to send a\nmessage announcing that, sorry.\nNow in d3dhlsl.cpp there is a movie_recorder class which groups together\nall the resources needed for AVI recording (avi_write and target textures).\nOne instance of this class is only allocated during AVI recording,\nbasically cutting 2/3 of video memory required by MAME during normal\noperation.\nOn Thu, Jul 7, 2016 at 4:33 AM, Vas Crabb notifications@github.com wrote:\n\nMerged #1035 https://github.com/mamedev/mame/pull/1035.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1035#event-715179350, or mute the\nthread\nhttps://github.com/notifications/unsubscribe/AQ7QfykWDgWCDpXgN_I6EDtjFInKIqQXks5qTGWWgaJpZM4JD4wZ\n.\n. Absolutely, having a background as embedded system programmer, defines are a bad habit which is difficult to defeat but I'll try to. And after that I'll give it a run with ubsan just to be sure.\nThere should be no dependencies from src/devices on src/mame and this introduces another one\n\nWhich one? With this last commit I removed the inclusion \"includes/gba.h\" from gba_lcd.cpp in favor of callbacks. Am I missing something?\nIs there any specific driver / device I can take as a reference of proper and modern MAME code to steal ideas from?\n. > Some people strongly oppose separating different functions of a single SoC into different devices.\nProbably this does not yet apply to SoCs of systems emulated by MAME, but modern SoCs are made up mostly of standard components glued up together and reused many times across different products of different brands. The only things which change are the mapping of registers, interrupt channels, clocks and power lines. Without this kind of device modularity the Linux kernel would be many times bigger in terms of LoCs just because of the ARM SoCs alone.\n\nI approve of this separation because it'll provide a useful basis for Nintendo DS\n\nThis is indeed a good reason!  :-)\n. ",
    "justindarc": "Cool, thanks! I will do that in the future.\n. ",
    "popey": "Yup. Tested and now builds successfully. Thank you!\n. Thanks for the tip. I had to set this environment variable which sorted it.\nQT_SELECT=5\n. ",
    "jmakovicka": "Thanks for clarification. I believe the other (netlist) patch is legit though.\n. ",
    "OzFalcon": "Couldn't agree more on the CTRLR CFG file per item.\nI think the reason it hasn't been done has something to do with the order of cfg loading.\nWe already have INI on a per item basis.\nSimply set your inipath and put your game.ini files in the ini directory.\ninipath                   $HOME/.mame;$HOME/.mame/ini\nhttp://docs.mamedev.org/advanced/multiconfig.html\n. They do not appear to be user controls. \nie. Going into dip switch service mode - Card 1-6, Play, Start, Yes, No & D-Up - Will Register \"PANEL OK\" - So thats all the play requires.\nI thought \"Medal\" could be referring to \"Tokens\", But credits appear to be covered with standard coin 1 & 2 inputs.\nI'm not really sure how these ports are supposed to work.\n  \"Medal In\" triggers \"DIS\" & \"CLK\" in the diagnostics screen.\n  And \"Pay Out\" causes a \"MEDAL EMPTY' message (Once > one credit is inserted).\nNeither seem to alter credits (Perhaps it's waiting for a hopper response?).\nI'd be inclined to set them as IPT_OTHER until their true nature is known.\nAny suggestions on how to investigate this further?. I have also noticed the \"Key\" button highlights \"Lockout\" in the dip switch service mode.\nThis button should probably be a \"PORT_TOGGLE\" button.\nie. The Lockout \"Key\" is turned either on or off, Not Pushed and released.. I take that back (Using IPT_OTHER) - Your suggestion sounds more sensible.\nI will change them to IPT_GAMBLE_KEYIN & IPT_GAMBLE_KEYOUT.\nHow they work - That's something else.\n. IPT_MEMORY_RESET has been assign in commit: https://github.com/mamedev/mame/commit/0bc96f38f1a2eb1e098882e474f9604ba905d972\n. albazc.cpp PR has been updated to coincide with commit: https://github.com/mamedev/mame/commit/0bc96f38f1a2eb1e098882e474f9604ba905d972\n. There is \"IPT_MEMORY_RESET\" with default key assignment \"F1\".\nIt doesn't appear to be specific to NVRAM, Though it is used as such.\nHowever,\nPrevious \"High Score Reset\" was hard coded to key \"9\" (Typically IPT_SERVICE1)\nPrevious \"Auto Up / Manual Down\" was hard coded to key \"F1\" (Typically IPT_MEMORY_RESET)\nObviously if we want to use IPT_MEMORY_RESET then previous assignments should be reversed.\nSuggested \"High Score Reset\" to be mapped to IPT_MEMORY_RESET (F1)\nSuggested \"Auto Up / Manual Down\" to be mapped to IPT_SERVICE1 (9)\nI will change to the suggested key mapping.. ",
    "anikom15": "This would be very useful for computer games without customizable controls/joystick support.\n. Ahh. I was thinking of the way Ultima disks are done, but those are probably based on what is actually written on the floppies. I've been searching for shots of the tapes all day to no avail regardless.\n. I overlooked that. I commited a change which requires swapping around the input mapping for the game macros. I think it's all consolidated properly now.\nUPDATE: I added another commit that makes things a little easier to follow. Based on the input mapping, rev. 'unknown' may have been made between rev. E and rev. F. Rev. 'unknown' has rev. E's bonus life method, but fixes the second coin input.\n. I didn't even know it was possible to change the video mode in the UI.\n. ",
    "mvdan": "Just to clarify, someone is trying to add this app to F-Droid and I just noticed this. Not sure if the app is ready to be released at all.\n. ",
    "RQWorldblender": "This effort is to get upstream MAME ready for Android users. I have not seen any builds for Android so far, so this is the first opportunity to have it done.\n. ",
    "jbaicoianu": "@felipesanches sure - on archive.org we use a virtual keyboard to provide an easy interface for people to access necessary functions which don't map to obvious keyboard keys, like \"add coin\", \"player 1 start\", \"reset\", etc.\nFor example, https://archive.org/details/arcade_outrun - after pressing the \"power\" button to boot the emulator, the virtual keyboard should load. \nThe version currently used on the website does this using synthetic DOM events and an older version of MAME, but newer versions built with SDL2 don't work with these synthetic events.  This change lets us bypass that and just inject SDL scancodes directly.\n. ",
    "fpalazzolo": "I've finished the first bullet item, but I'm have an issue with the TMS9927 device.  It has no support for overscan areas, and in fact it does a m_screen->configure() which seems to override overscans areas which are defined with screen resolution/visible area macros.  The intvkbd driver is kind of a special case, since it overlays the STIC graphics with the TMS9927 text.  I would like to set the overscan area using the STIC parameters and have the TMS9927 not mess with it, or force the TMS9927 use the same parameters.  You can see what I did in my branch temporarily, commenting out the m_screen->configure() call in tms9927.c.  But that will most likely effect other drivers...though I haven't tested.  Thoughts?  My code is here: https://github.com/palazzol/mame/tree/intvkbd\n. ",
    "symgryph": "Will check today\nThomas J Munn\n\nOn May 27, 2016, at 12:44 PM, R. Belmont notifications@github.com wrote:\nHi, can you verify if this is still happening for you? As I said, I have the mouse working fine on my Mac with El Cap and SDL 2.0.4.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. cool!\n\nThomas J Munn\n\nOn Jun 25, 2016, at 4:03 PM, Brad Hughes notifications@github.com wrote:\nI looked at this today and may have a fix. I'll work on getting it in sometime tonight.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. do you have link for fixed binary?\n\nThomas J Munn\n\nOn Jun 26, 2016, at 4:18 PM, Brad Hughes notifications@github.com wrote:\nShould be fixed. I could repro on my mac, now it works for me. Let me know if it works for you.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Tyring now\nOn Jun 28, 2016, at 9:20 PM, Brad Hughes notifications@github.com wrote:\nAny luck?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Stupid me i lost the DL link\u2026\nOn Jun 28, 2016, at 9:30 PM, Thomas Munn symgryph@gmail.com wrote:\nTyring now\n\nOn Jun 28, 2016, at 9:20 PM, Brad Hughes notifications@github.com wrote:\nAny luck?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Mouse works\n\nOn Jun 28, 2016, at 9:54 PM, Brad Hughes notifications@github.com wrote:\nhttps://1drv.ms/u/s!AohIe_qtFjndo7MjT3-tQQn3tEsVBQ https://1drv.ms/u/s!AohIe_qtFjndo7MjT3-tQQn3tEsVBQ\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub https://github.com/mamedev/mame/issues/873#issuecomment-229235623, or mute the thread https://github.com/notifications/unsubscribe/AEUibs1WPZrNWsYdjIu64sZ_MnqWFEdDks5qQdBggaJpZM4Ievco.\n. \n",
    "CRP": "On my mac, mouse works in games but not initially in the UI. For the mouse to work there, I need to start then exit a game.\n. ",
    "Superjustinbros": "This was an error I got in MAMEUI, so I'm guessing it may not be affecting normal MAME.\nPrimarily what happens is instead of the mouse cursor going into the screen and becoming invisible unless you exit out of the game or press the Windows key, it is always visible, and you can move it freely across the screen. When you press Tab to open up the menu, the system's mouse cursor is shown over the orange cursor in the MAME window.\nAttempting to fiddle with the Hide Mouse option doesn't seem to work for me.\n. Alright then.\n. Well I assume this can be closed now as I can't really check if it occurs in normal MAME.\nSince I'm here, mind if I ask if there's a way I can report this issue directly to the MAMEUI group/team?\n. ",
    "Injac": "Thank you for the quick response. You can close this issue now.\n. ",
    "Osso13": "Hi,\nthanks for working on this. Have you taken into account what the original bug poster wrote: \"Also note that the gameplay for marioo and marioe both really give bonus lives at 20K only, 30K only and 40K only, so make sure to keep these titles for the bonus life dip switches on those roms since currently they both inherit the bonus life dip switch titles from mario.\"?\nFrom a quick glance at your patch, it seems you made marioo and marioe use the same dipswitch decriptions, too.\n. Thanks for the report, fixed.\n. Isn't this pull request missing the updated mame.lst?\n. Any particular reason you're using machine().first_screen() instead of m_screen?. AFAIK it is, though someone please correct me if I'm wrong.. Are you sure this ROM isn't on the PCB? If it is, I believe the policy is to load it, even if it is unused.. Official tools complain about:\nCompiling src/mame/video/seta.cpp...\n../../../../../src/mame/video/seta.cpp: In member function 'void seta_state::set\na_layers_update(screen_device&, bitmap_ind16&, const rectangle&, int, int)':\n../../../../../src/mame/video/seta.cpp:831:20: error: array must be initialized\nwith a brace-enclosed initializer\n  int bank[2], x[2]=0, y[2]=0;\n                    ^\n../../../../../src/mame/video/seta.cpp:831:28: error: array must be initialized\nwith a brace-enclosed initializer\n  int bank[2], x[2]=0, y[2]=0;. you forgot to declare m_okibank. you forgot to declare oki_map. Compiling src/mame/video/cave.cpp...\n../../../../../src/mame/video/cave.cpp: In member function 'void cave_state::cav\ne_get_sprite_info(int)':\n../../../../../src/mame/video/cave.cpp:1568:38: error: 'optional_shared_ptr_arra\ny {aka class object_array_finder, 4>}' has no member named 'bytes'\n  int spriteram_bankmax = m_spriteram.bytes() / 0x4000;. you forgot a semicolon. you forgot to declare  vram_w. you're redeclaring stuff m_bg_tilemap[0] here, that you have declared the line above. validation error:\nSoftware List device 'cd_list': dc.xml: furfightd has an invalid year '19xx'.    Software List device 'cd_list': dc.xml: Errors parsing software list:\n   dc.xml(8160.3): Unknown tag: feature\nfeature must be before diskarea. can't use 'this' here and in the line below, you need to use the device tag\nalso 'umask' doesn't cut it, it's 'umask16' here and in the following lines. Please test that stuff compiles. This should be: gpu_map(map);. this doesn't compile: set_palette_offset only takes one argument. you're removed rect  everywhere but here, so it won't compile. this won't compile either: the <0> is wrong.. You have to declare this or it won't compile.. This doesn't compile.. this won't compile as newbank isn't declared anymore after your changes.. toffy_bankswitch_w is in the toffy_state class, not in the ddragon_state one. This breaks bg GFX in a very evident way in every game of the driver. I'd really like to help merge your PRs, but I don't have time or interest to check every single game in the bigger drivers. So please, please test your changes locally before committing PRs.. Isn't TMP68000P-12 rated for 12 MHZ?. thanks for the PR!\nShouldn't init_pbaction3 be renamed init_pbaction2, to avoid confusion?\nAlso pbactio3_prot_kludge_r ro pbaction2_prot_kludge_r.. Please note that capital letters aren't allowed in ROM names.. Thanks, but these reverts some recent changes and will cause compile to fail.. You're loading the ROM past the ROM_REGION length here. Pretty sure it will fail validation.. This is what @cuavas means when talking about expanding macros. IMHO MCFG_GENERIC_LOAD and MCFG_GENERIC_UNLOAD are better left alone until a better solution is offered.. ",
    "antdude": "Thanks Happppp. So the only way to get GUI back is to edit the INI file? :(\n. Thanks. Yeah, there is need to be a GUI way to revert from \"none\". ;)\n. Ha, what are your requests like NULUSIOS? I am always weird!\n. Thanks guys. That's a bummer. I also noticed clrmamepro doesn't do recursive directories too. :(\n. ",
    "lollo78": "Thx a lot!\n. ",
    "PeladoFeo": "That video... of course it was recorded from a real PCB.\n. ",
    "npwoods": "Regarding static inline - I (perhaps erroneously) kept it in that style because the original code in ui.cpp did that.  And yes - there are a number of things that could be done to improve ui::menu but I didn't take them on.\nOverall, the forcing factor for this change was to do what was required to support going up directories without making things worse, and making some (very incremental) improvements.  In addition to the potential improvements to space/breakable checks, the code doesn't handle RTL text, combining marks etc.  Nor did I take on undoing the patterns in calling code that were really workarounds for the complete lack of a text layout engine.  Go figure - in the long run we really should be calling an existing text engine.\nI did think of changing the code to be glyph based and not character based - I just didn't penetrate rendfont enough to get the required foundation.  But isn't that the status quo?\n. According to http://info.prelert.com/blog/cpp-stdstring-implementations, MSVC used SSO since 2010.\nEven if it didn't, is that really an issue?  SSO is clearly the future, and the file dialogs are not exactly performance sensitive.\n. Arguably, the std::string overload of utf8_from_uchar should be made inline.  Presumably it would optimize into calling the other overload directly onto the buffer of the small string optimized instance of std::string\n. I changed the int to size_t\nI've added assertions to where we were assuming that an option_resolution was provided, but held off on deeper changes.  This is because I expect to make more intense changes in the future; it isn't clear to me that the format index should be a separate parameter, for example.\n. My short term need was driven by the desire to have a selection_changed() protected virtual function, so my menu could know when the selection changed.  If you can eventually provide that hook, I can wait.\n. Sounds good.  Closing out this pull request in light of your WIP.\n. While the distinction between empty strings and non-existent strings is significant in XML (e.g. -  is distinct from ), that is not true for this specific application of XML (softlist XML).  As far as I can tell, there are no places where softlists \"legitimately\" use empty attributes.\nI'm sure that there are some scenarios where these changes alter how the code handles degenerate softlists with empty attributes, I do not believe that this is a problem.\n. Can you be more specific?  I can investigate further if you provide specific examples with off the shelf MAME softlists.\n. The addition of the hook should preserve the current semantics; it just seemed worth noting that the hook was only necessary for TI99.\nI hope to refactor softlists a bit further after this patch (though at the advise of Vas I'm changing the enum to behavior object).  All input is welcome.\n. This isn't really for outside applications, as much as separating the softlist state from runtime objects like device_image_interface and software_list_device.  As it is even after this change I am still not satisfied with the interactions between softlist_dev.cpp and diimage.cpp; there is way too much softlist specific stuff in diimage.cpp and it is weird how calling device_image_interface::load() will check for a period, and if one is not present, try to reimagine a file path as a softlist.\nAs for dependencies on core semantics and information models, the only major dependency that exists is on the rom_entry stuff.  Arguably that is in need of cleanup as well - it is the way it is because roms have always been declared as a set of macros, and other macros were developed to walk the data structure.  The old softlist code goes through a painstaking effort to construct a data structure comparable to what is set up via those macros.  This wouldn't be necessary if the rom entry stuff was really C++-ified along the lines of input ports etc.\n. I'll buy that - to me, the new location of softlist.cpp is probably the least interesting aspect of the changes I made (in fact, I asked on #mame-dev IRC where such code should go).  I agree that there is unlikely to be a need to use the softlist code in an external tool, unlike say the CHD code.\nI wouldn't mind moving it back to src/emu if the separation was kept, though I would really want to penetrate further in my cleanups of diimage.cpp before doing so.  I do agree that the distinction between util::software_rom_entry and rom_entry is crappy though - with better refactoring of rom_entry the data structures could be reunified.\n. Sounds good!\nTactically, how do you want to proceed?  This pull request is ready to pulled, and separately I'm working on some changes that pull rom_entry out, eliminating the need for a dichotomy between rom_entry and software_rom_entry.\nFWIW - It isn't so much that I believe that \"the software list device should take over software loading\", as much as the code should be a bit more cleanly factored than it is now, whatever that come to mean.\n. A more specific example of what I'm trying to avoid:\nIf it were not for the check against osd_is_valid_filename_char(), I could go to the image creation window, create a new image with a softlist name (e.g. - apple2:flop1:agentusa), and instead of creating a disk image it would load the softlist.\nIn fact, I suspect that this is the case on Linux (I believe that osd_is_valid_filename_char(':') returns true on that platform)\n. I must admit that I don't care for this (as much as I like the capability itself); while the short term goal of #1137 was to separate out the softlist code from the device, my longer term intention was to disentagle softlists from the device_image_interface class in diimage.cpp.  From the perspective of minimizing the amount of softlist business logic in diimage.[cpp|h], #1151 is a step back.\ndevice_image_interface is a base class intended to be a base class for devices like floppies, cassettes, cartridges and it should really be restricted to things common to those.  The softlist code in many ways a behavior that was grafted onto that base class.  At some level, this grafting is necessary because softlists are an opt in behavior on the part of devices (as well as owning the file handle), but my preference would be to keep that to a minimum.\nI somewhat wish that the direction that we started with software_list_loader was taken further.  Get the bulk of softlist behaviors out of diimage.cpp and put them on something on software_list_loader, so that softlists get \"plugged in\"\n. Can you be more specific?  While I agree that device_image_interface and software_list_loader are too coupled, some coupling is necessary only because devices declare their disposition to softlists, and I feel with more refactoring it can get better.\n. #1137 also has conflicts with recent work.  What I'd like to do is get consensus on whether #1137 is the right way to go; if the biggest concern is the move to src/lib/util, I can address that\n. IIRC emu.h wasn't modified at all, but it did already include diimage.h.  Are you referring to how diimage.h then includes softlist.h?  If that is the biggest issue, I suppose that could be rectified with the right forward declarations.\n. I don't see why that should be a problem.  Forward declare software_list_loader in diimage.h and declare the implementations of those classes elsewhere.\n. I'm open to the possibility that I didn't get the regex right, though my general gut feeling is that yours might be too loose\n. While it may normally be incorrect to perform case insensitive string compares this way, this is fine for this application.\ndevice_image_interface::filetype() is all about file extensions.  Every single scenario where this is used it is to compare against a specific file extension (e.g. - \"dsk\").  Arguably in the general case using anything other than 7-bit ASCII for file extensions is somewhat perverse as well.\nWhile technically speaking the case sensitivity of file extensions is up to the platform (e.g. - .c being a C file and .C being a C++ file), this doesn't happen in practice in the world of emulation.\n. Do you have any specific recommendations?  The goal is to make it so that drivers only need to check against \"dsk\", and preempt the inevitable scenarios where drivers are inconsistent with how they check strings.\nArguably, if filetype() discovers a file extension that is not 7-bit ASCII, it should reject it and return an empty string.  Would that be sufficient?\n. MASH, see pull request #1208.  I think that your fix is wrong, but I'm not 100% confident in my fix.\n. Isn't this an improvement from the status quo?\nThe way things are, the way the current code works is by trying to set m_is_readonly based on the status of the opened file.  It just does so inconsistently.  Therefore, doing the same thing it is doing today with less moving parts seems to be an improvement to me.\nIf I eliminated the public call to check the read only status of the file, and exposed that implementation detail externally to device_image_interface, I would agree with you.\n. I'll also add that if we want a more sophisticated technique to determine if an image is read only, we'll be in a better position to implement it than before.  Before, it was up to whomever was setting up the image to set m_readonly correctly.  Now such an improvement can be done by changing how is_readonly() is implemented.\n. Did you see pull request #1208?\n. I was thinking the same thing.  Pick your poison - either that or a std::string copy :-)\n. lol didn't mean to imply that!\n. Whether or not the old functionality for creating an image from the command line is desirable or not, the way that it was implemented was terrible.\nLoading images at the command line is done through device_image_interface::load().  That method should only load images, not create them, and it just so happened that it supported creating images by accident for some device types.\n. I feel that there are two distinct issues here:\n1. Whether it is desirable to automatically create images from the command line when an image does not exist\n2. Whether load() really was load_and_create()\nI'm pretty much neutral on #1, but I have a very strong opinion on #2.  Whether or not it was called load() or load_and_create(), the behavior in practice was a pretty bad design pattern.  While the cassette behavior was \"load and create\", it was done extremely inconsistently across MAME.  It shouldn't be up to devices to do something extremely arbitrary like checking checking to see if a file is zero length.\nWhat I'm trying to do is clean things up so that device code doesn't have to do sloppy things.  You can see this in pull request 1290; the cassette code did something very sloppy (and undefined according to the C++ standard) when softlists were involved.  Better to fix the problem in the core than leave it up to individual devices; I'm perfectly happy to clean up the fallout when the inevitable regressions happen.\nAgain while I'm neutral on #1, if we do want the ability to create images from the command line, it really needs to be done in a more consistent way.  It would be quite easy to do so in fact; just detect file not found in image.cpp and invoke create()\n. In the interests of full disclosure, while I have a Canyon Climber ROM (called a \"program pak\" in CoCo parlance) packed away in my basement, I did not dump the ROM.\nThe difference between the old dump and the (so-called) alt dump is that the alt one worked and the old one didn't.  Running them side by side, the old dump ran some code that jumped into never-never land and the alt one didn't.  Generally the 8k CoCo program paks were free of the funny business about protection or even things like mirroring.\nThat is why I raised this disclaimer on this pull request - truthfully I'm highly skeptical about whether the old dump was really verified from multiple sources, but someone out there made that assertion.\n. The technique that Cowering describes is exactly how these sort of dumps were traditionally done on the CoCo, so it sounds like what you did makes sense.  That said, it is hard to reconcile this with the fact that the old code seemed to be nonsense.  Here is a MAME trace from where the old dump crashes:\nC0A4: LDX   $2,U\nC0A6: LEAX  D,X\nC0A8: STX   $2,U\nC0AA: LEAU  [$15,U]\nC0AD: ORCC  #$9D\nC0AF: PSHU  PC,S,Y,X,A,CC\nC0B1: ADDD  $11\nC0B3: SUBA  $DD\nC0B5: CMPA  $8E\nC0B7: STU   $E2\nC0B9: STX   $010D\nC0BC: ANDCC #$EF\n010C: JMP   $0307\n0307: NEG   $00\n0309: NEG   $00\n030B: NEG   $00\n030D: NEG   $00\nThe ORCC and the PSHU are fishy; #$9D is a weird value to OR to the CC register, and the user stack is rarely used.\nHere is a dump from the \"alt\" dump (which doesn't crash):\nC0AA: LEAU  $15,U\nC0AD: DEC   $8D\nC0AF: BNE   $C0A4\nC0A4: LDX   $2,U\nC0A6: LEAX  D,X\nC0A8: STX   $2,U\nC0AA: LEAU  $15,U\nC0AD: DEC   $8D\nC0AF: BNE   $C0A4\n(loops for 90 instructions)\nC0B1: ADDD  #$0180\nC0B4: STD   $91\nC0B6: LDX   #$DFE2\nC0B9: STX   $010D\nC0BC: ANDCC #$EF\n010C: JMP   $DFE2\nDFE2: JSR   $C411\nC411: PSHS  U,B\nC413: LDD   $99\nC415: ADDD  #$0015\nThe only difference is that the LEAU $15,U is no longer indirect.\nWhile I don't doubt Cowering, everything points to the old dump being bad.\n. Reopening pull request with alternate proposal.\n. Yes.  The argument immediately preceding is the minimum argument count.  In both cases that number is '1'\n. Updated the string sinks to be std::ostream\nUpdating the actual disasm_disassemble() calls to use std::ostream would be straight forward; that can easily be done as a follow up provided that this patch passes muster.\n. are there any outstanding concerns about this change?\n. I believe that there are still a lot of 'char[]' arrays in the disassemblers, but not many 'static char[]' array anymore.\nAlso a note - in a separate branch, I've prepared changes that merge the 6809/6309/Konami disassemblers into a single module.  I'm keeping that separate from this branch because I don't want to increase the footprint of this changeset, and on top of that I want to keep the Konami changes (which actually alter the behavior of the disassembler with some bug fixes) distinct.\n. I agree that making this dialog scrollable is the ideal solution, but that is more of a drastic change.\nBesides, the entire assumption around draw_text_box() is that it is a simple operation that doesn't require interaction.  I cannot think of any scenario where it would be better for draw_text_box() to push text off screen than it would be to shrink the text.\n. > What's the reason for removing the validation loop here?\nReplacing 'const char *' with 'std::string' eliminates the relevance of null checks\n\nDon't use function statics where you can avoid it - they aren't thread-safe.\n\nIf this was mutable, I'd agree - but that isn't the case.  If you wish, I can pull this out of function scope but that wouldn't change anything from a thread safety perspective.\n\nIs this reserve really the best idea? It's going to reserve a lot more space than it needs for a guide with lots of enumeration entries.\n\nIt probably will (and it certainly wouldn't scale to something with 1000's of enumerations), but its probably better than starting from zero.\n\nThis really needs to be made localisable\n\nI agree, though as far as I can tell MAME doesn't really have a provision for making tools (where this is used) localizable.  Some further work needs to be done here.\n\nThe idea of assuming these iterators will remain valid for the lifetime of this object is really scary. It just doesn't seem right to write code like this.\nSo make a custom proxy iterator class or something - don't do it in a half-arsed way\n\nWhat I really want is a collection where the collection itself was const but the members are mutable.  Keeping iterators seems like the least worst approach, but I'm open to better ideas.\nI don't understand the proposal regarding \"custom proxy iterator\".  To me, the problem is not how the iterators work, but the fact that STL collections don't have a distinct way to express that a collection is immutable but the members are.  I strongly suspect that I am missing something.\n\nThis thing is not POD because of the vector...\n\nIs that a problem right now?  This is used nowhere as extensively as the ROM_LOAD stuff was\n\nset_specification is only used on setup...\n\nTrue for now, but that won't be the case in the future.  I have some rough UI for image creation that calls set_specification() when the user changes image formats.\n\nfinish previously allowed a runtime check that the structure was valid. You're now relying on asserts which are only compiled in debug builds. This strikes me as rather dangerous\n\nSimilar to above, I'm changing the underlying assumptions about how option_resolution works.  Previously there was a whole notion of specified versus unspecified arguments, and the unspecified arguments would get populated when finish() was called.  I'm erasing that distinction - now unspecified arguments behave similarly to specified ones, and the need for finish() goes away.\n. > You'll need to make it into a kind of abstract base and and implementation templated on the number of items using std::array for storage, then have a variadic creator function that makes one with the right number of elements depending on number of arguments.\nCan you point me to an example of this technique?\n. The discussion about whether or not it is desirable to automatically create images is very similar to what was on the pull request for the original change.  Regardless of one's position on that discussion, the way it was implemented before was terrible (hence mizapf's zero byte files)\nI feel neutrally on whether to support the capability to do so (though it is indisputably required for serial and printer ports).  I just want to make whatever we do not do so insanely.\n. Second startaq's comment - this is likely easy to fix we could get a specific test case\n. Looking into this, just a note - DISK.DSK and DISK.VDK seem to be identical.\n\nIt was your recent changes to the 6883 that got some people excited about this again.\n\nWow, I'm amazed that anybody noticed :-)\n. Took a quick look at this, it isn't obvious to me what is happening, but I'm less familiar with the Dragon and its been a while since I've looked at the FDC code.  I'll keep people posted.\n. Hey quick question - has this ever worked?  I went and tried this on a bunch of MESS versions, all of the way back to 0.101.  Also, is this issue on Mametesters?\n. Also, I'm assuming that nobody out there has disassembled the Dragon ROMs, in the spirt of the \"CoCo Unravelled\" series?\n. Noticed that the INTRQ and DRQ callbacks are null on the FDC.  I'm guessing this can't be right.\n. So my findings:\n- In MAME 0.153, a non-maskable interrupt is fired in response to one of the FDC interrupts (INTRQ I believe).  This doesn't happen in the TIP\n- Between MAME 0.153 and MAME 0.154, the CoCo/Dragon FDC code got updated (src/emu/bus/coco/coco_fdc.c), and configuration that was shared between the Dragon and the CoCo got made CoCo only\n. I tried changing the dragon_fdc declaration to the below\nstatic MACHINE_CONFIG_FRAGMENT(dragon_fdc)\nMCFG_WD2797_ADD(WD2797_TAG, XTAL_1MHz)\nMCFG_WD_FDC_INTRQ_CALLBACK(WRITELINE(coco_fdc_device, fdc_intrq_w))\nMCFG_WD_FDC_DRQ_CALLBACK(WRITELINE(coco_fdc_device, fdc_drq_w))\nWhile this seems to get closer - the NMI interrupt kicks in - I now get an ?RT ERROR.  I'm not even sure what that error is.\nNext step is to reverse engineer the working Dragon emulation in MAME 0.153, so I can later compare it with the present to see what went wrong.\n. Here is what I've been able to figure out so far, and hack around.\n- At PC=$C2DF, the Dragon ROM invokes FDC command $88.  $8x is read sector, and the device was not registering as ready.  I hacked around this problem by making wd_fdc_t::is_ready() always return 'true'.\n- At PC=$C2E1, the Dragon ROM gets into a loop where it is querying the PIA, which ultimately seems to be hooked up to the DRQ line on the FDC.\n- The FDC seems to go through some state transitions (SPINUP_DONE ==> SETTLE_DONE ==> SCAN_ID), but seems to get hung up on wd_fdc_t::live_run(), in a clause where floppy->time_next_index() returns attotime::never.  According to the comments, this happens when there is no disk loaded, but that isn't the case.\nI'm not quite sure what is going on - this seems related to the FDC rewrite (hence the hack and what I saw in live_run), but I have not figured everything out yet.\n. Ok I've figured it out.  Pernod70 was right - the motor was not being properly turned on, whereas it was for the CoCo FDC.  I came up with a quick and dirty hack to turn on the motor and got the DIR command to work (yay!)\nCalling it a night for now - as far as I am concerned, the hard part is done and I want to spend a little bit more time cleaning up this code.\n. Still looking at this - one of the things that I've concluded after some effort of disentangling the code is that the codebases for the CoCo and Dragon FDCs should really be separated out from each other.\n. #1413\n. I think I've addressed all of these concerns, with the exception of implementing rbegin() and rend().  What is the best way to do so?  I strongly suspect that creating another reverse_iterator and const_reverse_iterator objects are not the way to go.\n. Good catch - I've removed the m_ptr checks\nThe thought that the filename was too long occurred to me; I couldn't think of a \"good\" way to make it smaller.  If anyone has any ideas, just let me know.\n. Does this conflict with #1388?\n. I've made an attempt to address the concerns that have been outlined.  To a certain extent, this is putting lipstick on a pig - selgame/selmenu really abuses the menu system.  But failing the adoption of a widgetting system this seems reasonable.\n. I guess my overall concern is that unlike traditional C code (in which if you call malloc(), strdup() etc, you check for null), things that can throw std::bad_alloc is pervasive once you start making extensive use of the C++ library.  Anything that concatenates two strings, formats a string, resizes a vector can potentially throw std::bad_alloc.\nLooking at the current state (focusing at src/lib/util), we seem inconsistent.  Quite a few things in corefile.cpp that use return codes can implicitly throw std::bad_alloc by virtue of string manipulation and/or vector resizing.  chdcodec.cpp, on the other hand, throws everything.\nExcept for a few specific places, nothing in Imgtool catches std::bad_alloc.  Then again, that is true for MAME too.  And in both cases, the only reason to do so would be to fail catastrophically with a slightly prettier error message.\nIf you feel that strongly about the subject, I'll change the resize in this specific pull request to catch std::bad_alloc for the purposes of returning IMGTOOLERR_OUTOFMEMORY, but I would fear what this is going to look like in the long run.\n. I've pushed what is (IMHO) a better implementation that sidesteps the concerns about writing NUL into the NUL terminator byte, and consolidates much of the logic.\n. Is std::function really considered to be that great a thing?\nUsing Compiler Explorer (https://gcc.godbolt.org/), I was surprised at the amount of overhead std::function seemed to entail.  I would have thought that the program below would have optimized down to a mere function pointer invocation.\n```\ntypedef void (foo_ptr)(int a, char b, bool c);\nextern foo_ptr get_foo_ptr();\nint main(int argc, char *argv[])\n{\n    std::function my_foo_ptr = get_foo_ptr();\n    my_foo_ptr(argc, argv[0], argc == 3);\n    return 0;\n}\n``\n. Fair enough - I can submit a follow up patch to address this once #1500 is merged.\n. @startaq is correct; see the implementation ofimgtool::image::list_partitions()`; there is an explicit check for when it isn't implemented.\nIt is hard for me to understand what is happening without an example of one of these images.  This actually ties back into another side project of mine; I want to introduce an imgtool test suite, sort of like the old 'messtest' from a decade back, but LUA based.\n. Good catch; this was my fault.  I'm working on a fix.\n. Pull request submitted #1660\n. Added a move constructor and got rid of the char * overload.  Tons of call sites expected nullptr to work, so I've had to do a ton of changes to \"\".  I almost certainly missed some.\n. Unlike menu_rgb_ui (where it looks like there was a specific fixed length), as far as I can tell there is nothing to suggest in barcode.cpp that 20 was anything more than an arbitrary size.\n. Sorry I'm stumped.\nI'm assuming you're not referring to how in the old code, the template parameter was the size of the buffer (including the trailing null), whereas the size limitation in the new code is the size of the string not including the trailing null?  That would be why I'm passing 3 for the size in the new code, whereas the template parameter was 4 in the old code (because it took the size of the buffer)\n. 'astring' in this context has absolutely nothing to do with MAME's old 'astring'.  In this context, 'astring' is an \"ANSI Code Page\" string, using the so-called Win32 ANSI code page.\nThere is an argument to be made in 2016, supporting this is pointless, but we should arguably dismantle everything TCHAR-related if that is the case.\n. I have not been able to find an \"official\" declaration, but I'm 99.99% sure that it is.  If you look at the Microsoft CRT source code, wchar_t and WCHAR are used interchangeably, whether within code or implicitly in calls to Win32.\n. No its not; this was an oversight - I'll make this change.\n. Ok, I can remove it.  But this will necessitate reverting a bunch of 'tstring' declarations to 'auto', either that or stop using TCHAR (as per above)\n. No, there isn't - I agree that it is desirable to do so, my concern is about \"doubling down\" on the intrusiveness of this particular change.  This is the same reason that I transitioned imgtool::image and imgtool::partition separately.\nIn addition to better adoption of references, there other things I'd like to do in follow up patches - change to std::function, change char buffers to std::string, make functions return unique_ptr etc.\n. I don't believe that I'm doing this twice.  I do have another comparison roughly similar, but that scenario the second parameter is 'const char32_t &', not 'const std::pair'. Never mind; saw your follow up. I'm actually surprised that you didn't bring up the fact that time_t is 32 bit on some platforms.\nYour point about GMT versus local time is well taken.  Perhaps I should create my own type that can encapsulate these concerns, perhaps using std::chrono?. Nope - fixed. Won't this need to be 'virtual void device_clock_changed() override;'?. You're right.  The only reason that this wasn't an issue for me was because:\n1. In CoCo-land, both numbers are '1'\n2. In my test scenario, the SAM was written to forcing a change that corrected the issue. No reason; this was an oversight.  The copy constructor will be deleted.. Existing usages of emu_options::system_name() expect an empty string.  An example: cli_frontend::execute_commands(). Another case of preserving existing logic; I thought that this was weird too.\nIn the current code (and MAME 0.184 and 0.185), I can do something like \"mame64 pacman.foo\", and it will load pacman.  This logic enables that behavior; if you want I can remove it.. Thanks for the information.  I will add comments to the source code to document this.. Good call; removing that line. Won't forwarding all arguments cause problems for the overload that takes just std::string &&message?\nI'm open to the argument that I shouldn't have a ctor that forwards to util::string_format. I had problems with some of the logic that tries to assert(!m_entry);\nGot some sleep; changing this to assert(!m_entry.lock());. coco_gmc.cpp :-). Use C++ style comments. Symbols starting with underscores are bad; make this MAME_DEVICES_BUS_COCO_COCO_GMC_H. Eh?  This is what the code looks like... I'm not sure what the problem is?\n// seek to the beginning\nfile.seek(skip_bytes, SEEK_SET);\nuint64_t position = skip_bytes;\n\n// keep on reading hashes\nwhile(position < size)\n{\n\n. cococart_slot_device will never be subclassed.  device_cococart_interface gets subclassed.. Done. Done.  I created wrappers for utf8proc in unicode.[h|cpp]. Dumb question - isn't that what fork_entry(fork_entry &&that) = default; does?. It is my understanding that having briefinstance name conflicts is an illegal condition.  If this isn't caught by the validity checks, it should be.  Moreover, this issue (while important) is orthogonal to the options overhaul.. Furthermore, if you had promchip/prom and promimage/prom and you didn't want this to fail a validity check, wouldn't the right thing to do be to drop the briefinstance name?  Do you really want one of the above to be arbitrarily assigned prom1-4 and another be assigned to prom5-8?. Make sense, though the first thing that I ask myself when I see your proposed change is \"Is the LHS or the RHS of the assignment evaluated first?  If the RHS is evaluated first, then symentry->name() might fail\"\nI trust your C++ expertise so I am going to assume that your proposal is safe. I actually don't understand the nature of the bug.  The existence of the overload that takes an std::function as an rvalue reference seems to trigger compilation errors.  I've tried to reproduce the problem in a simpler context, but my attempts have failed.. ",
    "Dagarman": "it is sober now\nOn Thu, Jun 16, 2016 at 10:33 AM, Olivier Galibert <notifications@github.com\n\nwrote:\nYour commit message is drunk, can you fix it?\nOG.\nOn Thu, Jun 16, 2016 at 4:49 PM, Dagarman notifications@github.com\nwrote:\n\nclarify comment\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/mamedev/mame/pull/956\nCommit Summary\n- Add files via upload\nFile Changes\n- M src/emu/dioutput.h\n  https://github.com/mamedev/mame/pull/956/files#diff-0 (2)\nPatch Links:\n- https://github.com/mamedev/mame/pull/956.patch\n- https://github.com/mamedev/mame/pull/956.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/956, or mute the thread\n<\nhttps://github.com/notifications/unsubscribe/AI0i8VHsZJqxQjrrvBrcetw6W8mdTtiyks5qMWJugaJpZM4I3d3R\n.\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/956#issuecomment-226556805, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/AK5gIZy9F_eruU9ctD5UNMNMptLkpp-Zks5qMYjhgaJpZM4I3d3R\n.\n. I figured out how to change the message. Maybe this will do it??\n. Here is screenshot of our conversation from the applefritter forum.\n\nThe first part is where he provided a copy of BASIC (but it still has the\nsame subtle error as the existing copy in the softlist).\nI didn't ask him for any more detail beyond what we discussed in the thread.\nOn Sun, Oct 2, 2016 at 12:18 PM, R. Belmont notifications@github.com\nwrote:\n\nCan you direct me to the details of how Lunar Lander has sound?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/1475#issuecomment-250989528, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AK5gIcEw0iZs6zYKOcWl3Vt8XDeUZcP5ks5qwAOLgaJpZM4KMAbV\n.\n\n. \n",
    "andysarcade": "i'm afraid you have left/right swapped...\nAndrew Welburn\nhttp://www.andys-arcade.com\nOn 16/06/2016 14:20, system11b wrote:\n\nI found the MT bugs and they were pulled from youtube videos and other\npublically posted photos, in particular the one identifying the area on\nthe left as correct was a mistake due to the way most screens crush the\nedges of many Konami games due to width, appearing to make them brighter\nand/or solid.\nThis is based on new screens taken with the monitor specifically\nadjusted to move the far left and right of the screen into clear view:\nLeft:\nhttp://www.andysarcade.net/pix/DSC_8727.JPG\nRight:\nhttp://www.andysarcade.net/pix/DSC_8726(1).JPG\nAs you can see the grid pattern before this pull request is drawing 8\npixels on the left which the PCB doesn't.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mamedev/mame/pull/957#issuecomment-226617386, or\nmute the thread\nhttps://github.com/notifications/unsubscribe/ALZWpZTEt1jmD8QL86KU44DrCGSMlOnKks5qMb40gaJpZM4I3q1D.\n. \n",
    "tlosm": "Linux Ubuntu Mate 16.10\n. Both and the same issue.\nThe strange mouse pointer work in the gui and i can search a rom from the search form there keyboard work... but keyboard dont work when a rom is loaded.\n. Tafoid, used on screen keyboard nothing change.\ncleaned my ini files nothing changed \nBradhugh ... why not , i will build it if help\n. Bradhugh here is \nmame1.txt loaded rom from gui\nmame2.txt loaded rom from tty\nsame issue\n. hi Bradhug, yes it is on 32 bit , brecause ubutus are only 32bit os on powerpc,fedora and suse are 64bit . when i will have spare time will install and check mame there too if can help the developing .\n. Yes Bradhugh i will clone last git and build it no problem. did you will need the verbose log after  ?\n. you dont need use\nqemu-system-ppc ;-) \nim using a beta machine with last freescale P5020 e5500 core not on market for now ... hope soon\n. Bradhugh i been buil the official git and nothing change i have build your repo?\n. hi bradhugh, \ni will build it again time is relative with -j2 it will need 2 h for building  and isnt a problem.\nIf we find is an sdl issue i will ask the sdl2 ppc  manteiners to check it  , in case i will need your help for explain where the issue can be present. I know on Amigaos FE, the devs fixed something about input device on sdl2 becasue on dosbox there was wrong input signals.\nI hope finally we will have mame 0.174 run becasue i will notice the ubuntu ppc maintainers for include it in main ppa.\n. edit mame 0.174 is on mainstream https://launchpad.net/ubuntu/+source/mame/0.174-0ubuntu1 \ni will test it too.. and report if something differ  about sefl build\n. the proposed ubuntu mame have the bug ... start building your repo\n. great news.\nyes im using mate here.\nnote kernel is 64bit os is 32bit on g5 too... ubuntu and debian are really slow to become full ppc64\nnano makefile\nset bigendian=1\ntargetos linux \nPs:build and tested your last mouse input work but keyboard not. lets hope :-)\ntomorrow will send the verbose ... is late here tomorrow work :-P\n. Great!,\nBradhugh was more an endianess in mame code or something missing/wrong in sdl2 ? in case i will ask to fix sdl2 code to the manteiners\n. Thanks Brad, i will wait your ok for start the download the git and check it :+1: \n. Confirmed  mame 0.174 working on AmigaOne X5000 :+1: \nthanks for you help! \n. ",
    "pullmoll": "I'd suggest to accept prefix 0 for octal if address_space::is_octal() for the memory region in question (code, data, io) returns true, as @ajrhacker suggested. 0o prefix could be used to work in any case.\nIt's quite irritating if addresses printed before e.g. the dasm output are octal, and even without leading zeroes, and you have to enter decimal or 0x prefixed breakpoint adresses.\n. FWIW the problem persists with gcc-4.9.4\n. My intention to replace the (obviously) critical use of std::min in regards to constexpr limitations with a very well compatible and simple conditional operator was just  to keep compatibility.\nSure, Void Linux will sooner or later support gcc-5.x, but I don't see the benefit of keeping the level of C++X?? conformance high when there's really no surplus?\nThe resulting code won't be in any kind slower or worse, it's just trying to keep constraints to a minimum.\n.  @happppp Yeah, we're upgrading to 5.x sooner or later.. or rather later, because ~30-40 packages of Void Linux fail to build with gcc-5.x out of the box. Maintaining an entire hiearchy of compiler and library dependencies may seem to be fun to some people, while it really isn't ;-)\n. @cuavas I'm pretty happy with patching around to have mame compile in my work environment.\nI didn't know that templates would be evaluated twice, as macros did in ancient times.\nI'll close this PR because it really doesn't matter to me if I have to patch around gcc shortcomings or not.\n. ",
    "enikland": "The changes have been committed by etabeta78. Thanks!\n. ",
    "lcrjeff": "hi\uff0cgit clone\uff0chow to run android-project \n. make success .\nhow to run android-projert\n\n. ",
    "cgwg": "\nNo changes are needed, since make shaders compiles all of the shaders that it finds.\nI don't have a Windows machine; these were compiled by u-man. He produced the standard five different versions: dx11, dx9, gles, glsl, and metal. I've only tested the glsl one.\n. \n",
    "stevenc99": "Hi @cuavas: stock FreeBSD already defines FreeBSD_kernel, but I did not test building on a FreeBSD machine with these changes (I don't have any suitable build environment to do it myself).\n. Sent a pull request to bx upstream https://github.com/bkaradzic/bx/pull/119\n. @balr0g: the bx parts are merged upstream.  Commit https://github.com/mamedev/mame/pull/1093/commits/ef8816ae18f9d607e0542f3ebe9789ae57fa04a5 pulled the relevant parts (but not all upstream changes) into this merge request.  Thanks.\n. ",
    "Enverex": "You probably want to title your issues with something relevant to your request. Currently the titles are rather useless to anyone reading.\n. ",
    "Catarax": "Yes Read-only is the only good tip but it will definitively lock the possibilty to use the panel.\nThe JOY keys should not become N/A if the pad is unplugged after next boot.\n. Can't say much more, but probably because if they are also labelled as JOY.\n. For wireless controller this is a huge problem because they aren't always connected to PC and they absolutely have to be connected before Mame is launched, else nothing is recognized and reset.\nDon't know if something could be done for that.\n. Thanks for the tip!\n. Thanks a lot for the details, I overclocked the driver, all is fine!\n. ",
    "seascape": "Sounds like a good idea. \nWould it be possible to take it further and specifically note which files are missing? MAME has a bit of a reputation for being tricky to troubleshoot when it comes to getting all required files for a complicated game in the correct places.\n. ",
    "tomyun": "It sounds like we can then safely assume the change was intended as a release process handled by @mmicko. Thanks for the answers!\n. So this is a problem only from the built-in cheat engine. Confirmed Lua cheat plugin works fine.\n. It's not about prioritizing Homebrew-like SDL over the official framework version. There's no interference if you use 'native' SDL framework. This patch fixes issues when you chose USE_LIBSDL=1 to use non-framework version of the library. I wonder if there's any specific reason for static link in such case. If you look at a few lines below, MAME already does dynamic linking for SDL on other UNIX systems. In addition to that, sed command is outdated and needs attention anyways.\nBy the way, Homebrew port of SDL has no dependency on X11 at all if this was something you concerned. It is of course 'native' library just in a different style of package: dylib vs framework.\n. @rb6502 any chance to reopen this PR to keep discussion? Would it be better to open a new PR instead?\n. ",
    "legluondunet": "Hello,\nI just tested with the 0.177 version, the bug is still here.\n. I feel less alone, someone somewhere has the same bug as me.\nThank you Tafoid.\n. Hello,\nI just tested with the 0.179 version, the bug is still here (0.178 too).\n. I just compiled mame after changed the line:\nif (exclusive_input_pressed(iptkey, IPT_UI_DOWN, 6)) // Around line 846 in selmenu.cpp\nNow, If I press the up key, it jumps two games up (+2), buggy way\nIf I press the down key, it jumps to the next game down (+1), normal way\n. it seems to be related to PIE and file manager:\nhttps://bugzilla.gnome.org/show_bug.cgi?id=737849\nhttps://bugs.launchpad.net/ubuntu/+source/gcc-defaults/+bug/1639531\nhttps://glandium.org/blog/?p=3310\nhttps://ubuntuforums.org/showthread.php?t=2341593\nSame bug with Thunar.\nDolphin-emu is the only executable I compiled I can launch from Nautlus (not see as a shared library), I don't know how they did that.\n. ",
    "Pitou1": "Thanks very much R. Belmont! :)\nLe 2016-08-02 \u00e0 14:06, R. Belmont a \u00e9crit :\n\nMerged #1179 https://github.com/mamedev/mame/pull/1179.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub \nhttps://github.com/mamedev/mame/pull/1179#event-742782095, or mute \nthe thread \nhttps://github.com/notifications/unsubscribe-auth/AT0nVDdNQ5totR7ek72iOzihl2yEMysSks5qb4c3gaJpZM4JaOp1.\n. Hello,\n\nI did not reverse the 68k code completely. It takes a value from 0 to 255 and calculate the hit/explosion directly on the screen graphic. I would have to access the machine's memory to get the calculated number and again I'm not sure it would have been possible as it's probably too late, since the hit actually happened. I would have to get somewhere in between and that might require even much more code.\nWhat I did, is built a table of offsets by looking at the hits/explosions on every part of the screen compared to the crosshait position (0 - 255) and found out that it follows a linear function. The linear function differs depending on the screen region vs player number. That's the reason for the extra code.\nI know, I don't have much experience yet in the mame system, so this is my 2 cents opinion. :)\nThank you.\nPitou!\n. @mamehaze, right, that's what I also understand. The guns are placed at the edges for Player 1 and 3, Player 2 is centered and is fine.\nAlso, I'm changing the value mame sends to the game. The game code is untouched.\nIf its better to redraw the crosshair to the right location, could you guide me a bit?\nAlso, redrawing isn't probably enough as it is only graphic, I probably need to set the actual real value somewhere in the emulator then the crosshair will redraw to the right location and that value will actually be the one returned to the game. Am I right?\nI also thought of creating a 3D array offsets table for P1 and P3 and do something like this. Or have a function that fills the table on startup based on the linear functions. That would reduce the lines of code.\nstatic const INT8 offset_P1[] =\n{\n      { {x,y}, {x,y}..... },\n      { {x,y}, {x,y}..... },\n      ....\n};\nIn the function:\npos_value_x = ioport(\"GUNX1\")->read();\npos_value_y = 255 - ioport(\"GUNY1\")->read();\n// For X axis\nm_lghost_value = pos_value_x + offset_P1[pos_value_x][pos_value_y][0];\n// For Y axis\nm_lghost_value = pos_value_x + offset_P1[pos_value_x][pos_value_y][1];\nIt's just that the table would be huge,\neither (255x255x2) = 128k, probably the most accurate, but lots of repetitive datas and 128k of memory.\nor if I just take regions, that would be about (51x51x2) = 5202. The screen is divided in 5x5 squares. Again the table would be very big in the c++ code. That would eliminate all the if statements but still change the actual value returned to the game.\nOr maybe it is best to leave it behaves the way it is suppose to, by design, and not apply anything, to keep the game as original as possible like it is right now. I know mame's goal is to keep everything as original as possible and to also document and I agree with that.\nTell me what you think.\nThanks.\nPitou!\n. ok I understand what you mean now about the original guns hook in the original positions.\nThanks for the explanation. As you said, even if I fully reverse the 68k code, that would anyway change the value that is sent to the game, which again breaks the original behavior.\nI wasn't sure at first if that was the right way and that's why I asked on Mametesters if that would be acceptable and got a somewhat positive answer from a developer (Osso).\nSo, that being said...\nIs there another way? Can the cheat system be used? LUA plugin?\nThat way, we keep everything original as expected, but users could apply something temporary that makes the game playable.\nPitou!\n. I tried that using the in-game calibration system, but could not get good results.\nActually, the game only asks for top-left and bottom-right corners.\n. > I guess a gun type input that can compensate either way (either in the cross hair drawing, or the input port reading depending on user preference) could be an option, but I'm in no way familiar enough with any of the code to give you guidance there.\nThat's a good idea. I'm ready and willing to help coding any solution that would do the job the right way.\nWho's in charge of the input system these days?\nLet's decide the proper way of doing it and let's code, if there is any interest! :)\nThank you.\nPitou!\n. Yes that's a bit sad this game doesn't offer flexible calibration.\nI understand and agree with you Mamehaze.\nAgain, thanks very much for the explanations and clarifications.\nAlthough I've put a lot of work and many hours in this patch, let's reject this pull request and think of something else. :)\nFor the future, can I ask someone before starting coding? Just to make sure I'm on the right path.\nWhat's the best way to interact with you guys?\nPitou!\n. Right. I also learned a lot through the process.\n. I'm really happy this has been merged,\nThis encourages me a lot and my next step will be to fully reverse the m68k code.\nThank you very much everyone!\nPitou!\n. ok. I thought that would give a starting point to figure out how it's done. I do give some pointers in some places.\nAgain, the gun position itself is not modified in the game. It takes the coordinates and calculate a screen explosion position. I'm wondering how can we interact with the actual game code to inject calculated values (it also uses the values from the in-game calibration menu). From the driver, can we modify the screen position hit?\n. ",
    "mdoege": "@cuavas Thanks, your fix has resolved this issue for me. I will file a bug report with the package maintainer.\n@startaq Maybe the latest git master has some other fix for this then? I have added the fix by cuavas to the 0.176-2 PKGBUILD but have not tried the latest git version.\n. @startaq Also, is your system 32 bit or 64 bit?\n. ",
    "stengun": "Maybe the right fix for this should be done in the other way, keeping relative paths and reverting to plugin base path only if we can't find/write correctly .hi files.\n. Well, I'm thinking about giving the user a way to choose plugin paths himself without touching the lua script. I can make the plugin look for a configuration file inside inipath, and if it exists then it will use the paths defined in there, otherwise it will fall back to the plugin base folder.\n. > I can buy this as long as the default path remains ./hi\nso you mean that is relative to sdlmame executable and not the plugin one. You think it should be the same for hiscore.dat?\n\nA function called lfs.env_replace is added in boot.lua which works on Windows and *NIX that you can use.\n\nThanks, I'll give it a try.\n. > Because if we don't we'll have a ton of bug reports about why hiscore files have disappeared.\nOh, right! I forgot about the existing users, I'm totally with you with that.\n. ",
    "FluBBaOfWard": "I guess the most important part is that it's documented in the code.\nThe biggest difference seems to be the background tile priority (GreenBeret) vs more tiles (JailBreak).\n. ",
    "kspencer72": "Hi all, as John mentioned ealier, I've been having a look at the ccTalk hopper comms on sc4dnd and the following commands are sent unencrypted immediately prior to when it stops with 'pay unit - error 17'.\nF4 - Request Product code is sent with four retries, followed by F6 - Request Manufacturer ID then F1 - Request SW revision (breaks with wpset 80b4ba, 80b4a6 & 80b4a0).\nI have no prior MAME dev experience and my attempts at trying to create a ccHopper serial device have so far come to nought. I've tried using m_duart->rx_b_w(hopper_response); followed by m_duart->read(space, 0x0b); to try and force the 68681 to read the rx register but run into problems with the data not going into the fifo buffer due to the rx clock not enabling due to the data not being framed correctly with start/stop bits.\nAnyway, having all but given up with serial comms I've attached the debug output below for the ROM ccTalk transmission in the hope that this info may be of use to someone with the necessary dev skills. (I had to enable loopback with m_duart->write(space,0x08,0x0080); to get the complete messages, otherwise it just repeatedly Txs 03).\ncc_comms.txt\n. ",
    "Keith-S72": "Thanks RB for the esqpanel suggestion, I now have a working serial hopper communicating with the sc4. Just need to sort the protocol responses out now.\nThat's the great thing about MAME. Who'd have thought that a synthesizer display interface could be re-purposed as a fm hopper.\n. ",
    "ChoccyHobNob": "It didn't fix the problem but is has had a positive effect in some of the erratic behavior from the mouse. There are a whole bunch of mouse issues with the SDL build, I've noticed on both OS X and Raspberry Pi. \nSometimes when starting MAME there will be no mouse pointer at all (80%~), sometimes the orange pointer will appear but wont move at all (15%~), sometimes you will get the system mouse pointer over the orange pointer and it will be frozen (4%~), sometimes it will start up with the system mouse pointer over the orange pointer and it will move ok (1%~). The times the orange pointer appears but is frozen, the system mouse pointer is on screen at the same coords before MAME initializes, sometimes it disappears, sometimes not. When returning from a menu or a game the orange pointer is always in the bottom right corner and then works ok.\nWhen you select a game that uses the mouse as a controller, sometimes you will get the system mouse on top of the display moving in sync with the game cursor (10%~), sometimes it wont appear at all (90%~). On the Raspberry Pi you can't use the menu it takes forever to appear and is too slow to use but when running a game directly from the command line sometimes the system mouse pointer will appear in the top left corner, and will move with the mouse when running a game, even though there is no window manager running.\nChange a2b99f8 seems to have fixed the problem on OS X with the system pointer appearing over the orange pointer so it is now at least consistent. With the change now, 100% of the time when starting there is no orange pointer and no system pointer. After running a game and returning, or entering a configuration menu and returning, 100% of the time now the orange pointer appears and there is no system pointer. 100% of the time in a game there is no system pointer in sync with the game cursor. I haven't tried this on the Raspberry Pi.\nSo... this fixed a whole lot of odd mouse behavior but didn't fix the problem I reported!\n. Full screen. If I use a window it works consistently.\nOS X 10.11.6\nClang 703.0.31 (XCode 7.3.1)\nI just did this...\ncd ~/my/mame/path\n./mame -verbose >verbose.txt\n- screen opens with \"initializing\" in the middle\n- ui screen opens, no pointer \n- select pacman\n- info screen comes up, hit esc\n- screen opens with \"initializing\" in the middle\n- ui screen opens, pointer is off the sceen at 0,0 (bottom right hand corner) and moves correctly\n- hit esc to quit\nHere's the verbose.txt it generated\nverbose.txt\nHappens like this 100% of the time now, change a2b99f8 seems to have fixed all the weird inconsistencies. \n. Hi Brad, yes of course I can do that, I'm grabbing it now, I'll let you know when I've run it. Thanks for all your effort on this btw!\n. OK here's the new verbose output\nverbose2.txt\n. I have hiscore enabled in plugin.ini, I just tried disabling it and it made no difference to the mouse behavior. Running -verbose for both states does cause an extra \"Starting No Driver Loaded\" to be output. \nWhat version of SDL2 are you using?\n. On a hunch I just tried running ./mame arkanoid and it runs but only responds to cursor keys, the mouse doesn't work. \nIf I run the ui and select arkanoid, it runs and the mouse controls the vaus as expected. \nI wonder if the mouse pointer is being drawn correctly at position 0,0 when the menu is first run but it isn't being polled at all so it never moves. Then it's not until MAME is reinitialized by either running a game or changing the settings and returning to the menu that the mouse is being read and responds to movement. \n. That's now almost right! When started without a game, the mouse appears in the top left. This is consistent and works every time. Running a mouse controlled game, everything works as expected!\nSmall bug still left when running without the menu (./mame opwolf). Where-ever the system pointer is at the time you run the command becomes the top left. you cant move the mouse up'er or left'er than that point. Try putting the mouse pointer in the middle of the screen and then typing ./mame opwolf you will only be able to move the crosshairs in the bottom quarter of the screen.\n. I've also just built an SDL2.framework (and a standard .dmg from that, which I've attached so we can all be on the same code) but I'm still having issues. I'm just doing some testing so I'll come back in a while but it looks like the new SDL2 won't fix the problem.\nBrad, the mouse being stuck in the bottom quarter of the screen is a bit of a red herring. It's stuck there regardless of where the mouse pointer is when it's run, but the area does expand to where the mouse pointer is. Wow this is complicated to describe! Let me do some more testing with both versions of SDL2 and both versions of MAME and I'll report back.\nSDL2.dmg.zip\n. With or without @cuavas change a2b99f8?\n. OK I've done 3 versions of mame with 2 versions of SDL2 with 3 runs for each\n./mame\n./mame -> pick opwolf -> exit\n`./mame opwolf\nYou're right, SDL2 fixes it as long as I'm not using the version where you tried to fix it. \nInteresting to note is that @cuavas fix appears to still be an improvement. Without it the system pointer is on top of the ui pointer and sometimes it's there over the game crosshair as well. With it all that inconsistency goes away.\nSo I'm saying that change a2b99f8 and a new version of SDL2 fixes the problem.\n. There are similar issues with linux builds too. I shall try a new version of SDL2 on there too.\n. I think that's 2.0.2, it is for Debian Jessie. It's probably just the Raspberry Pi people who will be using 2.0.4 (it includes hardware support for the Pi's GPU), Retropie definitely rolls out a version.\n. I've uploaded the SDL-2.0.4-10216.dmg to here ready for 0.177's release. I've let r0ni know so that he can do the same.\n. Yes this one was built yesterday from the mercurial. The one on sdl.org dates back to January\n. Yep that works for me with the current stable version of SDL2-2.0.4 and is still fine with the new version we created yesterday. \nI still want to try this on a Raspberry Pi. My dev one is busy right now but as soon as I can I'll try it on there too and see if it fixes the odd problems with mice that I have there.\n. I would suggest that either \n1. The current directory ( '.' ) should be the first location in the inipath by default\n2. That mame should create the ini files in whatever the default first location is instead of the current dir\nOption 1 would be my choice.\n. ",
    "Headrush69": "This patch greatly improved my mouse issues also, but problems remain.\nFixed: System mouse appearing on screen and trackball movements restricted by screen bounds.\nIssue: For mouse to work, I either have to start NEWUI and select game, or when directly starting a game from command line, than go into the in game menu and select the game again.\n. ",
    "jloco": "Is this 2.0.4 build newer than the released one on sdl.org?  (Just checking in to verify things before updating mame next week) I will post the package if it is, so users can install it at the same time as the next release. And post some kind of notice on the site as well to alert users. \nJay (r0ni)\n. ",
    "shinra358": "Hotplugging seems to work. It's just Afterplugging it needs.\n. Shweet. Looking forward to the finalization!\n. http://www.emucr.com/2016/08/mame-git-20160827.html\nJust downloaded a new version and it is still happening. What's the deal? Renders the emu unusuable.\n. where to get builds like these already compiled? I've already deleted the tools necessary to do so a long time ago because never could get anything to compile right and I just gave up lol.\n. Great! Which site would that be? My OS is 64-bit :)\n. Appreciate it! That did the trick.\n. Whelp, most is fixed. But it is still a problem with 'Input General' > and everything below 'User Interface' is still broken.\n. extracted the data from the windows version from that site you linked into a fresh folder. Put 1 MameUI64.exe into said folder. Put one rom into the roms section in that folder. Audited that rom. Did nothing else but turn the game on and press tab. Goes into the above stated settings and it's still offscreen.\n. MameUI is just that. A UI. Why would a UI have anything to do with the new mame build in regards to this? It's just a frontend and SHOULD have nothing to do with how the program mame acts internally right?\nUsed the mameui exe only from this site: http://www.mameui.info/\nwith the new update and same thing happens. MameUI64.exe and mame.exe are different things that sit in the same folder.\n. Ok. Opened it with a bat file and it works correctly.\nedit: haha, didn't even know I could just double click the normal mame exe to start it. Thought it was still pure cmdline xD\n. ok, cool. hadn't noticed the ui controls were separated. thanks.\n. ",
    "kazblox": "Superctr is the holder of the code, yes.\n. Can you be more consistent with the spacing on the comments?. Awful spacing.. More awful spacing.. Yikes, more awful spacing.. Old devcb is legacy. Use devcb3 and replace this line with \"ARM1176JZF_S(config, m_maincpu, XTAL(412'000'000))\".. ",
    "Risugami": "I have found the I/O port and am quickly debugging it now. Will have update soon.\n. Ok, had a strange commit, but it seems to actually be working better on the port.\n. This port also seems to control the motion outputs and volume for some reason. It also has a sort of error check write by wrapping every output with FFXX where XX is the second byte of the actual output between the two FF writes. Not sure if this needs to be emulated nor do I know the proper way to handle the errors so I'll leave it at that. the motion and volume controls don't share the same structure as the lamps and wheel, and are apparently a stream of single bytes with a header byte FD to say this. Again, not sure if this should be emulated. Watching for expected values seems to be working as intended, but might be worth checking in the future.\n. I'm currently walking through the unknown stuff so another commit is likely coming soon. I'll add comments on what I find.\n. here's the payload. doesn't seem that useful for emulation:\nJG 90000,90000,90000;BG;TL 0.6,0.6,1.8\nTL 0.55,0.55,1.7;WT 1000\nTL 0.50,0.50,1.6;WT 1000\nTL 0.45,0.45,1.5;WT 1000\nTL 0.40,0.40,1.4;WT 1000\nTL 0.35,0.35,1.3;WT 1000\nTL 0.30,0.30,1.2;WT 1000\nTL 0.25,0.25,1.1;WT 1000\nTL 0.20,0.20,1.0;WT 1000\nTL 0.15,0.15,0.9;WT 1000\nTL 0.10,0.10,0.8;WT 1000\nTL 0.05,0.05,0.7;WT 1000\nST XYZ;MO\nYes it's in ASCII and the carriage returns are the end of each sequence.\n. If you turn on the motion dipswitch after boot, bypassing the testing, you can get some more of the commands sent. Here's the one that is repeatedly sent while in game:\nIBO;IBO=_SCX|_SCY|_SCZ;MG \"V\" IBO {$2.0}\nLooked up some of the sample code for Galil, and that is a definite match for it.\n. Here's what the output looks like http://pastebin.com/dFdKg8ZQ\n. Turns out the four Status inputs form 9 different status messages and are not directly connected to any one of them.\n00 - All systems OK\n10 - Mat not plugged in\n20 - Mat stepped on\n30 - Opto path broken\n40 - Opto detector not receiving\n50 - Opto LED not emitting\n60 - Fail safe switch engaged\n70 - Fail safe switch not connected correctly\n80 - Board not plugged in or PAL not inserted\nThe four Device bits are connected to 4 devices indicated as above so they might be preferred as 1,2,3,4 instead of bits.\nNot sure about the best way to handle these inputs considering they are not even useful for emulation, only documentation. Could make custom inputs to handle the bits but there is no reason to ever do so.. ",
    "gabrielklein": "This function seams to be problematic.\nstatic void devmap_register(device_map_t *devmap, int physical_idx, const std::string &name)\nIn this file: https://github.com/mamedev/mame/blob/master/src/osd/modules/input/input_sdl.cpp\nI fixed it by adding a break\n\nfor (i = 0; i < MAX_DEVMAP_ENTRIES; i++)\n  {\n      osd_printf_verbose(\"Joystick: Found %s / %s /  %d\\n\", name.c_str(), devmap->map[i].name.c_str(), i);\n      if (strcmp(name.c_str(), devmap->map[i].name.c_str()) == 0 && devmap->map[i].physical < 0)\n      {\n          devmap->map[i].physical = physical_idx;\n          found = 1;\n          devmap->logical[physical_idx] = i;\n          // >>>>>>>>>>>> here\n          break;\n                        // <<<<<<<<<<<<\n      }\n  }\n\nIt works with my joysticks.\nI haven't comited any code (and don't expect to commit any).\n. ",
    "enikland2": "I tried the regular method before posting this patch as an issue. The procedure doesn't seem difficult, but I noticed it would take more than 900MB just to clone the repository, what is impracticable with my limited connection. The bz2 file I downloaded from the git web interface had 85MB. Sorry if contribute to MAME requires high end PCs and internet connection, but my situation at least prevents that I waste my time with something else like modern PC games.\n. Hi MetalliC!\nThank you for having pushed my patches!\nCould you make a little adjustment for me?\nIn this last patch, I used \"set_output_gain(0, ...\" but would be better if had used \"set_output_gain(ALL_OUTPUTS, ...\".\nI did the former based on an example found in Mameworld Programming forum, but the latter would be more appropriate for\u00a0 my patch.\nThe function is used in files src/mame/machine/sms.cpp and src/devices/bus/sg1000_exp/fm_unit.cpp.\nI want to avoid open another issue just for this adjustment. I would be glad if you or someone else could do this change for me!\n\nEnik\nSent:\u00a0Monday, October 10, 2016 at 10:58 PM\nFrom:\u00a0MetalliC notifications@github.com\nTo:\u00a0mamedev/mame mame@noreply.github.com\nCc:\u00a0enikland2 enikland@gmx.com, Author author@noreply.github.com\nSubject:\u00a0Re: [mamedev/mame] New patch for sms.cpp: fix Out Run sound in FM mode (#1496)\npushed, thanks.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. I think so, the 4 occurrences of each file. It's really necessary for the YM2413, because has two audio outputs, Melody (MO) and Rhythm (RO), that are joined together in the circuit line that can be switched on and off, according to FM Unit and SMSJ schematics. About the SN6489 chip, it have only one audio output line, so the change at least will match what is declared by the MCFG_SOUND_ROUTE macro in machine config. In the case of the FM Unit, the chip doesn't have internal connection to it, because the unit connects with the audio out line of the Mark III, that hypothetically could be merged output of more than one line.\n. ",
    "oddi5593": "Hello, gba_ereader.xml - update part 3 it's not validated have few errors:\nsee next fragments :  line 1539\nalso missing \"publisher\"\nline 3300 , double \">>\"\nline 3369 - missing \"name\"\nGood luck :)\n. Tnx, have new tiny bug : 2 sets with same name : \nline 3339 and 3369 : software name=\"acr4tnk\"\nTnx :)\n. ok, now ready for merge :)\n. validated ok, but think may u forgot one set from \"domo kuh\" series\nThi set missing :\nDomo-kun no Card-e - Promotional Cards - A-001 (Japan)\nDomo-kun no Card-e - Promotional Cards - A-001 (Japan) (Strip 1).raw [CRC32: b6ef6e8f]\nDomo-kun no Card-e - Promotional Cards - A-001 (Japan) (Strip 2).raw [CRC32: 829a72c3]\n. Validation - OK \n2 tiny errors\n1.  have \"double description \"\nline 5220 and 5230 \n1. btw - again note about forget set:\n.Domo-kun no Card-e - Promotional Cards - A-001 (Japan).zip\n.Domo-kun no Card-e - Promotional Cards - A-001 (Japan) (Strip 1).raw - b6ef6e8f\n.Domo-kun no Card-e - Promotional Cards - A-001 (Japan) (Strip 2).raw - 829a72c3\nTnx :)\n. not validation \nmany errors\n. why:\n double names \n<software name=\"surgical\">\n    <description>Surgical Strike (Bra, 32X)</description>\n    <year>1996</year>\n    <publisher>Sega</publisher>\n    <info name=\"serial\" value=\"157036\"/>\n    <info name=\"release\" value=\"199601xx\" />\n    <part name=\"cdrom\" interface=\"scd_cdrom\">\n        <diskarea name=\"cdrom\">\n            <disk name=\"surgical strike (bra, 32x)\" status=\"nodump\" />\n        </diskarea>\n    </part>\n</software>\nthis set have tag \"nodump\" , wh not have comment tag\n. Explain how convert sets to chds. Me test few  sets from redump and trurip  it still produces a different SHA1, try with chdman  and chdman x64 but not luck.\nchdman createcd -i \"blahblah.cue\" -o \"blahblah.chd\"\nwhere i mistake ?\n. Found where is problem with SHA1 , see first chd for example\n13:50:55.311: Info: stdout: Input file:   C:/1/3 Ninjas Kick Back (USA)/3 Ninjas Kick Back (USA).chd\n13:50:55.312: Info: stdout: File Version: 5\n13:50:55.312: Info: stdout: Logical size: 366,583,104 bytes\n13:50:55.312: Info: stdout: Hunk Size:    19,584 bytes\n13:50:55.312: Info: stdout: Total Hunks:  18,719\n13:50:55.312: Info: stdout: Unit Size:    2,448 bytes\n13:50:55.312: Info: stdout: Total Units:  149,748\n13:50:55.313: Info: stdout: Compression:  cdlz (CD LZMA), cdzl (CD Deflate), cdfl (CD FLAC)\n13:50:55.313: Info: stdout: CHD size:     177,334,887 bytes\n13:50:55.313: Info: stdout: Ratio:        48.4%\n13:50:55.313: Info: stdout: SHA1:         7dfca4e3bfad7b8e6f98b24651970409fd0d7d6f\n13:50:55.313: Info: stdout: Data SHA1:    6ebb602efa04127f905b39fafa6aa37ef69d1c7c\nNeed SHA1 , this hashesh it's internal and correct , not DATA SHA1.\nU must replace all hasesh with correct. \nTnx :)\n[PS] Tested with chdman/x64 from mamedev and chdman/x64 from git, same SHA1:\nSHA1:         7dfca4e3bfad7b8e6f98b24651970409fd0d7d6f\n. @LnmVolbo  : I open bin with isobuster , this track 02 is missing , have only track 1 . If used isobuster for generate cue file, file it's same with Tafoid's cue.\nBtw - isobuster generate 96% correct bin and 4 % bad sectors without track 02. \nIf extract 96% correct sectors to new bin or iso , new SHA1 is very different.\nMy opinion  - this dump add with comments tag because we dont know which convert is right .\nNow with my tests i have 4-5 different hashes !!!\n. ",
    "tabbycat12": "That's perfect, MooglyGuy, many thanks for committing the change.\n. ",
    "UED-Wayder": "I'm sorry to trouble you. label name is changed.(assigned just as it.) thank you.\n. ",
    "tverona1": "Thanks for the feedback, guys! Let me address them one by one:\n1. [@cuavas] Have you built with OSD=sdl and tested?\n[tomer] Yes, it works as expected. I'm providing the output below, which demonstrates remapping controllers in sdl mode:\n```\nKeyboard: Start initialization\nInput: Adding Kbd #0: System keyboard\nKeyboard: Registered System keyboard\nKeyboard: End initialization\nMouse: Start initialization\nInput: Adding Mouse #0: System mouse\nMouse: Registered System mouse\nMouse: End initialization\nJoystick: Start initialization\nInput: Adding Joy #0: XInputController#1\nJoystick: XInput Controller #1\nJoystick:   ...  6 axes, 11 buttons 1 hats 0 balls\nJoystick:   ...  Physical id 0 mapped to logical id 1\nInput: Adding Joy #1: XInputController#2\nJoystick: XInput Controller #2\nJoystick:   ...  6 axes, 11 buttons 1 hats 0 balls\nJoystick:   ...  Physical id 1 mapped to logical id 2\nInput: Adding Joy #2: ATRAKDevice#2\nJoystick: ATRAK Device #2\nJoystick:   ...  2 axes, 8 buttons 0 hats 0 balls\nJoystick:   ...  Physical id 2 mapped to logical id 3\nInput: Adding Joy #3: ATRAKDevice#1\nJoystick: ATRAK Device #1\nJoystick:   ...  2 axes, 8 buttons 0 hats 0 balls\nJoystick:   ...  Physical id 3 mapped to logical id 4\nJoystick: End initialization\nRegion ':user1' created\nStarting No Driver Loaded ':'\n  (missing dependencies; rescheduling)\nStarting Video Screen ':screen'\nOptional device ':screen:finder_dummy_tag' not found\nStarting No Driver Loaded ':'\nInput: Remapped Joy #0: ATRAKDevice#1\nInput: Remapped Joy #1: ATRAKDevice#2\nInput: Remapped Joy #2: XInputController#1\nInput: Remapped Joy #3: XInputController#2\n```\n1. [@cuavas]  Does the configuration persist properly when MAME writes out the the cfg file?\n   [tomer] Yes, I verified changing control mappings within MAME and that it is persisted properly.\n2. [@MooglyGuy] A dev tried it on his arch linux system. doesn't seem to work with sdl\n   [tomer] I'm not sure what is the issue or if it related to my changes. I've verified on Windows - see the output above. My changes should agnostic of platform. Is that the entire output (it looks like it did not proceed far enough to hit the remapping code)? Does it work w/o the changes?\n3. [@bradhugh] The SDL OSD has its own name-based mapping for joysticks. How is this different from that? Ultimately, we need to decide if this needs to be handled at the OSD layer or core input system.\n   [tomer] With SDL OSD, when name-based mapping is provided, I agree this is probably not required. This is more to support non-SDL, where MAME does its own enumeration of devices w/o the ability to specify named-based mappings. Even with SDL, this change allows you to remap when you do not explicitly specify named devices in command line (see output above to example of SDL mode). (As a side note, one option is to expose these mappings as command-line options [similar to what is possible in SDL mode] but it seems more consistent / easier to specify the mappings alongside control configs in the config file. Let me know your thoughts.)\nCheers!\n. Hey guys, any other questions / feedback before we merge this in?\n. No need for dead bodies chief, not my intention to break Linux. The change is very low risk and should not be platform specific, so I'd like to try to repro to understand what's breaking. Can you provide: distro you tried it on, verbose output, whether you specific devicemap settings? \n. Thanks @startaq for confirming that Linux works. I have now also verified on Ubuntu. SDL doesn't support raw input which is what my example had - to test it, you'd have to use whatever devices are recognized in SDL mode.\nNote the change itself is super simple: It just allows the user to specify device index based on a device name to support consistent mapping. It doesn't change how or what devices are recognized. I've verified with Windows & Linux and with / without SDL. The inputs I verified include two lightguns, two xbox 360 gamepads and xarcade tank.\n@bradhugh what's your take on whether this should be supported by core input system or at OSD layer? As the change is now (at core input system), it is agnostic to / works with any OSD implementation (both SDL & Windows native). I'm fine with either decision but it would be nice to address this issue which is painful & seems prevalent (at least on windows).\n. Hi @rb6502 thanks for the feedback. I've also verified on Linux (and Windows and with multiple input devices - see above). The change is working 100% on Linux.\n@rb6502, did you actually try this change and run into any issues?\n. @bradhugh thank you very much for catching these issues! I've submitted the fix for both, please take a look.\nChanges are:\n1) I missed a null check when mapping to a null controller index.\n2) I'm now restricting devicemap setting to controller config file (I missed this earlier because I was only verifying with controller config file). I experimented with allowing devicemap to be specified in default.cfg & game configs and with saving the configuration, but the behavior was not ideal (default.cfg would always get populated with devicemap settings upon exit). I then realized that it actually makes more sense to restrict this option to controller config file since these are a controller-specific settings and this is also consistent with controller \"remap\" option which has the same restriction.\n. @bradhugh, that sounds fine to me and I agree that supporting unique controller identifiers is the right evolution. \n@cuavas, what Brad is suggesting is I think a bit more longer term and not something that is blocking current functionality. I think we would need to figure out how to generate unique controller IDs for each device type (for example I'm not sure how to come up with a unique ID for raw input other than (maybe some part of) the raw input name itself) - unless we just wanted to add a property and plumb through the current name. Let me know Brad if you want me to do that, but it doesn't sound like a blocking change. \n. Hey guys, I have a change that adds id() to input_device (and device_info) and plumbs it through OSD to input layer per Brad's feedback. For raw input, it is using raw input name as the id (and we are now preserving friendly name for device name as was done before). For all other devices, the device id is falling back to device name which we can evolve over time (note this change does not enforce uniqueness but for the non-raw-input devices I have tested the name does seem to be unique).\n@bradhugh let me know if you'd like me to add this change to this pull request.\n. @bradhugh cool, just pushed the change. Please take a look.\n. Awesome, thank you!\n. ",
    "aeternal606": "Oops, just noticed that I should have used short region names in the  tag ('Euro' instead of 'Europe', 'Ita' instead of 'Italy' and so on). Sorry, I'm going to fix that in the next commit!\n. Oh, okay. Fortunately I only just started :D I'm glad to hear you've already gotten so far. Looking forward to your list!\n. ",
    "Bad-A-Billy": "I've tried everything I can find to get rid of all the junk but nothing is getting rid of it. Any ideas would be appreciated. If nothing else I will close this out later today & submit a diff the old way.\n. Tears are dry. OK, thanks for the time OG.\n. Tried a few more things. \n. ",
    "FakeShemp": "That's what i get for forgetting to check the validation. Should be without syntax errors now hopefully.\n. The duplicate name is a copy-paste error on my part. Will fix ASAP. \nRegarding nodump tag; why not? The nodump status indicates a dump is missing, which it is right. That's as far as my thought process went. If this is an incorrect usage, let me know please. \n. Seems I made a million mistakes eh? :)\nI'll do a thorough look-through of all the set names when I'm in front of a larger screen tomorrow. Thank you all for your reports.\n. That's how I did it too. Not really sure what went wrong there, or if you or I are correct.\nCould you post a sha1 hash for one of your converts?\n. I know there are several versions that I used to convert. I'm on Linux mostly, so usually I'm always at the latest version thanks to apt. These are all at most made with a couple of months old binaries though.\nAll the TruRip dumps I believe I converted on Windows though, with the latest binaries from mame.net (0.178).\n. They absolutely could have. I'll check it out.\n. Okay, I thought for sure it was the data sha1. Thanks for notifying me.\nWell, that's an easy fix at least. Expect a new pull request soon.\n. Seems I've lost some files since I started this update. I don't have access to them any more unfortunately.\nIf anyone could help with the sha1 values for these redump.org dumps\n- Adventures of Willy Beamish, The (USA)\n- Amazing Spider-Man vs. The Kingpin, The (USA)\n- A-X-101 (USA) (RE)\n- After Burner III (USA)\n- Batman Returns (USA)\n- Blackhole Assault (USA)\n- Bouncers (USA)\n- Bram Stoker's Dracula (USA) (Rev A)\n- Chuck Rock (USA)\n- Chuck Rock II - Son of Chuck (USA)\n- Compton's Interactive Encyclopedia (USA) (2.01R)\nthat would help a lot.\nThanks!\n. @Flupper Thank you very much! I think all of the faulty hashes are fixed now :)\n. I can, but I'm away from my computer for about a week on business. Will do so when I can.\n. Great research. Thank you.\nI still don't have the cue I used here with me right now, but I'm fairly sure I didn't just cut the second track out. If I did, I did so by mistake.\n. That works too. :)\n. I'm back at my computer and checked the cue I used. It looked like this:\nCATALOG 0000000000000\nFILE \"Road Rash CD (Beta 3 - Feb 11, 1995) (hidden-palace.org).bin\" BINARY\n  TRACK 01 MODE1/2352\n    INDEX 01 00:00:00\n  TRACK 02 AUDIO\n    PREGAP 00:02:00\n    INDEX 01 12:01:71\nI can't for the life of me remember where I got the 12:01:71 from. :confused: \n. The reason I didn't list them is because TruRip didn't list them in their dat. That's the simple reason.\nIt wouldn't be hard to add them in if wanted.\n. @cuavas Unfortunately, it wont validate AFAIK. It won't show up as erroneous either though, it's simply ignored.\nI guess there should be no problem actually hooking them up. Just looking at the carts, the Motion carts fit in the V.Smile console (though I'm uncertain about their cross-functionality) so adding them is sane. \nThe Baby uses entirely different carts though, and they cannot be inserted in the V.Smile console. It doesn't make sense to me to have them in the same list then, other than for testing purposes.\n. All right. Yeah, that would probably make all of them unnecessary. My build threw validation errors on these, only reason I fixed. Sorry if it is unneeded. I'll remember from now.\nIs the >8-letter set name restriction a new thing? Can't remember that being the case before at all.\nIs small case rom labels still recommended or are you moving toward always using mixed case?\nThank you!\n. I thought I was using latest git, but an old build was throwing me off. I'm sorry :bowing_woman: \nWith actual latest git, everything checks out fine as it should.\nThank you very much for the info. I'm sure to take it to heart.\n. Yeah, it is allowed now, but apparently wasn't before. I'm sorry for any confusion.\n. I get that this is not a typo. Usually though the parent doesn't have any language or version indicator in it's name. Basically, if you type sf2 you probably expect to get the parent version of Street Fighter 2, not caring that it is the \"World 910522\" version.. http://datomatic.no-intro.org/index.php?page=show_record&s=46&n=1604\nIt's not really that I don't have any input, it's more that the boards don't have any markings. You can see this same style being used in other softlists like snes.xml.\nWhen the board makers are pedantic like Nintendo, you get all kinds of long, meaningful board markings like U3 16K SRAM, other times just a U3 marking. Sachen isn't exactly doing that. Other than a PCB name, not much is printed on the board. But still, it has two slots, one with a ROM and one with an MMC. Isn't that useful information to document?. Oh yeah, you remind me of a thing I forgot to ask. These carts obviously have an EEPROM on the board, but no documentation of any nvram in the dataarea. Should I add that? The carts seem to have different size nvram per game, so it makes sense to me.\nThis tells you that the cart has a FAB-300-10028-02 board with two IC slots on it. U1 for some reason has been left out in manufacture on this cart's board. There are two other slots on the board, marked U2 and U3. U2 has a 2K EEPROM while U3 has the ROM, in COB epoxy form. I'm basically just doing what many other software lists are doing.. Thank you @MdGheist <3\nWork filled up my time so I couldn't get around to uploading anything until today, but I see you've taken care of that already.\nI'm on Linux, so the latest DTC version I have is 2.60. That's what I use to convert.\n@DopefishJustin \nI actually wrote these software additions so long ago I can't remember what was bad. Probably it was either that DTC threw some error, or that I couldn't get them to start in DOSBox. Eitherway, it's probably not an accurate thing to say that it's a bad dump with so little research, so I'll remove the tag until it can be said more definite that they are bad.. ",
    "Flupper": "Input file:   adventures of willy beamish, the (usa).chd\nFile Version: 5\nLogical size: 340,448,256 bytes\nHunk Size:    19,584 bytes\nTotal Hunks:  17,384\nUnit Size:    2,448 bytes\nTotal Units:  139,072\nCompression:  cdlz (CD LZMA), cdzl (CD Deflate), cdfl (CD FLAC)\nCHD size:     120,893,683 bytes\nRatio:        35.5%\nSHA1:         694476e5e82d7317ec6943d5d749764592045f37\nData SHA1:    c1516b30726c0335ca732e9595eba12b9dd62deb\nInput file:   after burner iii (usa).chd\nFile Version: 5\nLogical size: 336,374,784 bytes\nHunk Size:    19,584 bytes\nTotal Hunks:  17,176\nUnit Size:    2,448 bytes\nTotal Units:  137,408\nCompression:  cdlz (CD LZMA), cdzl (CD Deflate), cdfl (CD FLAC)\nCHD size:     210,638,096 bytes\nRatio:        62.6%\nSHA1:         5387cce37990836db962ce82ec217edbe2c1fd0d\nData SHA1:    95697301e1a81136a635f9dc93db9645cd31d3f8\nInput file:   amazing spider-man vs. the kingpin, the (usa).chd\nFile Version: 5\nLogical size: 578,922,624 bytes\nHunk Size:    19,584 bytes\nTotal Hunks:  29,561\nUnit Size:    2,448 bytes\nTotal Units:  236,488\nCompression:  cdlz (CD LZMA), cdzl (CD Deflate), cdfl (CD FLAC)\nCHD size:     310,359,536 bytes\nRatio:        53.6%\nSHA1:         4102f007184635832ca13ab770ccadcde32242da\nData SHA1:    f0b2ef9e37fb5f3f10129e438a1a98d7c36f10fd\nInput file:   a-x-101 (usa) (re).chd\nFile Version: 5\nLogical size: 656,534,016 bytes\nHunk Size:    19,584 bytes\nTotal Hunks:  33,524\nUnit Size:    2,448 bytes\nTotal Units:  268,192\nCompression:  cdlz (CD LZMA), cdzl (CD Deflate), cdfl (CD FLAC)\nCHD size:     253,841,826 bytes\nRatio:        38.7%\nSHA1:         4a0200c4b1d6b7f486d1946b6ce886d35872aae7\nData SHA1:    e0a323a38305dc8cbb4d9c778d8256dd0fcd4dc5\nInput file:   batman returns (usa).chd\nFile Version: 5\nLogical size: 548,733,888 bytes\nHunk Size:    19,584 bytes\nTotal Hunks:  28,020\nUnit Size:    2,448 bytes\nTotal Units:  224,156\nCompression:  cdlz (CD LZMA), cdzl (CD Deflate), cdfl (CD FLAC)\nCHD size:     311,068,890 bytes\nRatio:        56.7%\nSHA1:         fcef5b725f01b928a29a60a5e3d4c493908b209f\nData SHA1:    49dc8d5f2760123f8babc57837c3818b90c546c8\nInput file:   blackhole assault (usa).chd\nFile Version: 5\nLogical size: 555,970,176 bytes\nHunk Size:    19,584 bytes\nTotal Hunks:  28,389\nUnit Size:    2,448 bytes\nTotal Units:  227,112\nCompression:  cdlz (CD LZMA), cdzl (CD Deflate), cdfl (CD FLAC)\nCHD size:     331,164,850 bytes\nRatio:        59.6%\nSHA1:         e7533c9de5cea95b3d3ddbcc19d0002aa4fabb2b\nData SHA1:    028afbfd19ac39d3573725fb0caa5c05e3288fa5\nInput file:   bouncers (usa).chd\nFile Version: 5\nLogical size: 456,933,888 bytes\nHunk Size:    19,584 bytes\nTotal Hunks:  23,332\nUnit Size:    2,448 bytes\nTotal Units:  186,656\nCompression:  cdlz (CD LZMA), cdzl (CD Deflate), cdfl (CD FLAC)\nCHD size:     164,592,845 bytes\nRatio:        36.0%\nSHA1:         ec21e095b7670989495095f6a6cb9a94ba24a405\nData SHA1:    278c615b7d3411f7cc760e0147988c64b848cfdf\nInput file:   bram stoker's dracula (usa) (rev a).chd\nFile Version: 5\nLogical size: 465,619,392 bytes\nHunk Size:    19,584 bytes\nTotal Hunks:  23,776\nUnit Size:    2,448 bytes\nTotal Units:  190,204\nCompression:  cdlz (CD LZMA), cdzl (CD Deflate), cdfl (CD FLAC)\nCHD size:     278,156,219 bytes\nRatio:        59.7%\nSHA1:         ff8b30072085ed157c94859371e6a8f087ebd132\nData SHA1:    ae70b55e7e614b3cb98e03e207103fec0bc31873\nInput file:   chuck rock (usa).chd\nFile Version: 5\nLogical size: 339,508,224 bytes\nHunk Size:    19,584 bytes\nTotal Hunks:  17,336\nUnit Size:    2,448 bytes\nTotal Units:  138,688\nCompression:  cdlz (CD LZMA), cdzl (CD Deflate), cdfl (CD FLAC)\nCHD size:     184,226,594 bytes\nRatio:        54.3%\nSHA1:         2a0ca620f253992e92af5655c7ed4203a1537b0e\nData SHA1:    409746c3e505b9d5dade6cf4b5b01165930ade86\nInput file:   chuck rock ii - son of chuck (usa).chd\nFile Version: 5\nLogical size: 492,459,264 bytes\nHunk Size:    19,584 bytes\nTotal Hunks:  25,146\nUnit Size:    2,448 bytes\nTotal Units:  201,168\nCompression:  cdlz (CD LZMA), cdzl (CD Deflate), cdfl (CD FLAC)\nCHD size:     241,242,457 bytes\nRatio:        49.0%\nSHA1:         d47e53ee53653ee9b5623f276060e7a5f4f28c9e\nData SHA1:    b8445f6352fed1242b6dbf40807a0b1913a3cdad\nInput file:   compton's interactive encyclopedia (usa) (2.01r).chd\nFile Version: 5\nLogical size: 398,671,488 bytes\nHunk Size:    19,584 bytes\nTotal Hunks:  20,357\nUnit Size:    2,448 bytes\nTotal Units:  162,856\nCompression:  cdlz (CD LZMA), cdzl (CD Deflate), cdfl (CD FLAC)\nCHD size:     183,460,550 bytes\nRatio:        46.0%\nSHA1:         2df62d0e0a8f37e7b52c549ce7605d8c55fadf00\nData SHA1:    14ee396c5d4d02059527d9894fbf1d4ae17e2f0a\n. You're welcome, glad to be of service. :)\n. @FakeShemp Suppose you could share the fixed cuesheet for Road Rash (USA, Prototype, Beta 3 - 19950211) ?\nThe one at Hidden Palace is broken unfortunately.\n. No problem and thank you.\n. ",
    "CharlesJS": "Wow, that was fast.\n. Hey, I just realized that while I typed my description into the pull request, I forgot to put it in the description for the commit in my own repository. This is what I get for doing this late at night. Would it be possible to change the description of the commit from the default \"Update 8530scc.cpp\" to something like \"Fix typo in driver, allowing System 7 to boot\" so there's more clarity in the change log? Thanks!\n. ",
    "RalfVB": "Yes, I'm inclined to agree. Defining the port names in an external file would be the optimal solution.\nIf somebody more experienced with MAME's source is willing to provide some help in how to cleanly implement this, I'd be happy to build the construct the file the names are read from.\n. fixed. ",
    "cbrunschen": "websocketpp includes light-weight HTTP serving, and I'm using it to serve the HTTP & Javascript.\nA more general-purpose solution would definitely be better in the long run, but right now this would make these particular keyboards a lot more useful and actually playable, which can make debugging the remaining issues with them a lot easier. \n. Thank you!\nWebsocketpp already works nicely with standalone ASIO, which made it very easy to use.\nFor my use case I basically need a way for the panel to be able to register handlers to serve its HTML and Javascript, as well as accept incoming websocket connections and send & receive messages on them. Currently, this is all within the esqpanel_device class itself, but I can also take a stab at putting the websocket & HTTP server into a module instead, and have the panel use that.\n. Websocketpp's HTTP handling is described a bit here: https://www.zaphoyd.com/websocketpp/manual/reference/handler-list/httphandler\n. I've just sent https://github.com/mamedev/mame/pull/1625 that creates a separate webserver module, including both a no-op implementation and one based on websocketpp ; and with the external-panel support based on that. If nothing else, it can serve as a point for discussion around how this might be done better, giving a particular use case.\n. The web server can be used for a lot of things - it can serve arbitrary HTTP requests and handle arbitrary Websocket connections.\nBut my particular use case is specifically to allow a much richer UI than seems easily achievable using layouts, and that can also optionally run on a separate device from the one that runs the emulator, in part to allow things like multi-touch \u2013\u00a0in this case, being able to activate multiple buttons at the same time, which has a few important use cases on these keyboards. Using websockets means that things like browser-based UIs become possible and that in turn makes it easy to turn an arbitrary tablet into a touchable control device.\nI'm fairly agnostic towards where the HTML & Javascript files or anything else etc are served from, but I do quite like the option of having them compiled in, so they don't have to be separately installed. \nI know ROMs etc already have to live elsewhere so there's precedent for it, but those are distributed separately, whereas the HTML & Javascript files here are included as part of the emulator in part because they need to agree on the protocol they speak, so it makes sense they're relatively tightly coupled.\nOf course, the web server itself doesn't care: any client could register HTTP handlers that read from the filesystem, and it would be fairly straightforward to add something to the web server where it could directly resolve paths against a directory specified as a webserver_root option or similar. \nI noticed that I must have gotten something wrong about the module instantiation / selection process; if I specify \"-webserver none\" as an option, the webserver_none module is instantiated but the osd_common_t::m_webserver still ends up as null, which then is passed to the esqpanel_device which crashes trying to dereference it. I'm trying to track down my mistake, but any advice would of course be appreciated.\n. Crash found & fixed: I had forgotten to mark the inheritance of webserver_none's webserver_module superclass as 'public'.\n. I've moved the HTML and Javascript to be served from the filesystem rather than being compiled in. This includes minimalistic template evaluation so I can put the keyboard type and protocol version in the HTML being served.\nIs this getting closer to being usable?\n. I had been rebasing against upstream/master, but apparently not with the desired result. I created a patch of my latest changes against the latest master, deleted and recreated the branch, applied the patch, and force-pushed that here; there should now be just a single patch here.\n. Alas, I don't have access to a Wndows machine, so I can't try to find out and resolve the Windows compilation issues; especially as they seem to be occurring where the websocketpp library should auto-detect the presence of C++11 standard libraries, etc.\nThis particular error does appear to be due to an incompatibility in mingw:s libstdc++ though:\nhttp://stackoverflow.com/questions/33662788/undefined-reference-to-stderrcoperation-canceled-when-compiling-websocketp\n... with a pull request for websocketpp:\nhttps://github.com/zaphoyd/websocketpp/pull/479/files\nAny advice, assistance, suggestions would be hugely welcome.\n. I've applied the patch at https://github.com/zaphoyd/websocketpp/pull/479 that makes everything appear to compile on mingw again. \nTo run this and see & use it in action, I connect a USB MIDI keyboard (a Korg microKEY 37) and run:\nmake -j6 SUBTARGET=mess SOURCES=src/mame/drivers/esq5505.cpp\n./mess64 -w -rp ~/mame/roms sd132 -midiin \"microKEY KEYBOARD\"\nI also open a web browser (Chrome or Safari, on a computer or tablet) and point it at http://_hostname_:55555/esqpanel/FrontPanel.html \nThe browser should be able to load the HTML and Javascript already at this point.\nI then type 'OK' into the MAME window to confirm that I want to run the machine even though it's marked as \"not working\", and things start to work; the Javascript code should auto-connect to the esqpanel instance in the running keyboard and it should start show the same contents on its emulated display, as in the MAME window.\nFor the SD-1/32, initially the keyboard itself reports an \"Error 137\", but pushing a few buttons makes it reboot itself and then it works, for playing music - and with an emulated front panel that is quite close to the real one, including multi-touch for being able to press multiple buttons and move sliders, etc.\n. Any thoughts? \n. I didn't really create any of the files here \u2013\u00a0I split a couple of existing files into interface+inplementation, but I left the copyright and license information as-is. It would probably be best to ask the copyright-holders (Ole Christian Eidheim, Miodrag Milanovic) to make that change.. Done.. Made it static (and moved it into esqpanel.cpp, so that I can use the logmacro.h macros for logging).\nSuch utilities would be good in a common place, and are also part of C++17 in std::filesystem::path. For now, just having this here locally is probably sufficient for the immediate term, and is then also easy to refactor once this kind of functionality is used elsewhere.\n. Done.. Done!. Done.. I'm not following? \nwhen trying to verify a filename, we need to check for anything that navigates upwards among the filesystem path to try to escape the web server root. Filenames of course have to be given with the path separators that the platform on which the program is running uses; on Unix-esque systems, the path separator is a slash ('/') , so we can't exclude '/' form being searched for as a path separator.\n. ",
    "Asayuki-K": "Whoops. Yes, line 36 is supposed to be front porch, not back porch.. ",
    "darq-": "For the first point, I actually prefer the gnu style... I can change them, but is it really so important, considering that is 'functionally' not essential?\nFor the rest, you are absolutely right; stupid mistakes.\nI'm going to make these changes.\n. ",
    "mgarlanger": "It seems really common for the headers in this project to use double underscores. And many of the ones that have a single underscore are followed by a capital letter, which is also reserved. . These files started as a clone of kb3600.cpp/kb3600.h. Most of these comments apply equally to that file.. Looks like that was globally removed just a few days ago, I'll remove it.\n. According to the top answer here - http://stackoverflow.com/questions/228783/what-are-the-rules-about-using-an-underscore-in-a-c-identifier, single underscore followed by a capital letter is reserved at all levels, I'll change this to mm5740. I'm not sure what you mean by this, is there existing code, you can point me to?. ",
    "tlindner": "Shouldn't this be:\nclock = device.m_owner->m_configured_clock * device.m_derived_clock_dividend / device.m_derived_clock_divisor;. I apologize.. ",
    "PugsyMAME": "I'll redo this again. I did it in a way that meant that I don't have to check 5188 occurrences of the .o in the cheat collection to see which ones are valid and which ones worked because it was treating .o the same as .m or .r.\nDon't think I'm going to get out of doing all the work on the cheat collection unfortunately...so I best knuckle down before I do another commit to get the cheat collection ready.. ",
    "DavidHaywood": "I'm trying to keep it as close to the NES code as possible without giving it a full NES bus etc. which it doesn't have.. I could, but this isn't really my code, it's based on the code that's already there.  The new function is a duplicate of the old one with different port handling.. again I could, but isn't this the exact reason srcclean exists? requesting I make changes that we have an automated tool to make before release just seems overly pedantic for no gain.. because it's not plain ram.\nhow it gets accessed depends on registers in the system that control all sorts of mirroring and redirect.  this is here so that I have the handlers I need to add support for all of that.\nwith the regular nes, those registers are always in the carts as part of the mappers, but with vt, some of them are system registers (the hardware also seems to have undocumented mirrors to write them at addresses often used by commercial nes games, probably to make bootlegging nes games easier)\nby having handlers, I can experiment with interpretations of the registers in my own code, with RAM, I can do nothing.. this is straight from the other nvram devices, you should probably clean them up if you don't want people copying them.  It seems an awful lot of your complaints about things I submit are actually complaints about code that already exists.. that seems overkill for the use-case here, especially as the goal is to reduce clutter and copy+paste in the driver.  I went with your first suggestion of just passing the tag instead of hardcoding it instead.. I actually find the BIT macro makes a lot of code much harder to read as you're having to convert back and forth between what the game writes and the hex values in your head every time, and in multi-bit situations they're even worse.  I think this one should be up to whoever is writing the code.. CARTSEL might be straight from schematics or something? in that case I'd argue it was better documentation the way it is?. schematics call it subcpu. right, it's a consistency fix.  it might be worth merging the drivers, although due to changes made by the bootleggers missb2 is going to end up with it's own implementations of most things.  nobody ever did check for me if the PCBs use the bubble bobble prom either which the existing rendering code depends on.. I dislike how you're micromanaging the implementation here.  I'm simply closing this, somebody else can do it.\n. might make more sense to use the macro, or just remove them now I know it's working as intended. let's give that a shot then, bit surprised it wasn't already done if it was likely to make a huge difference. and indeed, it is almost as fast. ahh, didn't know there was a better way :-). I think the more verbose filenames help in this case, that's why I'm using them\nthey're based on megadrive hardware, they're for the arcades, and not official sega hardware.\nmegadriv_ is because that's the standard identifier for megadrive, and arcade_clones because frankly arclone or similar just looks weird.\n. it serves as an example of how you can still add them / load them with the softlist if you want, which I think is useful.. I'd prefer to put them in a megadriv folder, if that's an option, but that seems to be a non-standard approach.. as ajr said configured banking tends to be preferred these days when possible, rather than the ->set_base type\nsearch the source for uses of\n->configure_entries\n->configure_entry\nand\n->set_entry\nif you're unfamiliar with it\ndon't know if it's appropriate here tho, some cases it doesn't really fit as well.\n. not my code, copied from the spectrum port stuff, please fix it there if you don't want people copy+pasting it.\nsrc\\devices\\bus\\spectrum\\exp.cpp\nis the template I used for this.. not my code, copied from the spectrum port stuff, please fix it there if you don't want people copy+pasting it.\nsrc\\devices\\bus\\spectrum\\exp.cpp\nis the template I used for this.. well they're only temporary names while I figure out what each table is anyway, but yeah, I should probably add them for the hell of it. I think it might just be some side-effect of them hooking it up to the ADC, it's kinda ridiculous, but the code looks valid.  Again I've left the comment so that if we find the bits in different order than expected vs the simulation on other games we'll know that it's something we've already encountered. it seems more likely that it's like this to me based on what I can see, but yeah, it seems a bit redundant for all bits to be the same, hence the comment so that if it is revisited later should something disagree the reason for it being this way is known. c-chip must at least happen after the vbl irq has processed the inputs, otherwise it ends up reading it 'mid-state' and causing things to go badly wrong, but yeah, the values used were just for testing.\n. this is the emupal.h style, which I was trying to stick to as closely as possible, as per comment.\nemupal.cpp / emupal.h consistently do this\n// data-inverted generic raw-to-RGB conversion helpers\n    template<int _RedBits, int _GreenBits, int _BlueBits, int _RedShift, int _GreenShift, int _BlueShift>\n    static rgb_t inverted_rgb_decoder(u32 raw)\n. well I'm using the other palette_device functions, and wanted, from a driver code perspective, for it to act just like any other palette device.\nI'm not actually convinced that emupal.cpp / emupal.h is good code, but I wanted to maintain compatibility with it.. the internal ROM isn't confirmed, the external roms for everything else on the prototype did 100% match final tho, as per the comment change, so it's very likely these match for this game.  the only change here is moving the comment higher up.. it's just a custom programmed FPGA, like most of these non-brand boards, it could be anything, I kept it this way for the sake of making it easier to reuse if another board turns up that's a bit different.. the memory isn't in the fpga, it's on the board, the fpga accesses the memory on the board, so generally I prefer to do it that way, unless the MAME architecture makes that not work, in which case, yes, I tend to allocate the memory in the device.. beyond that, I don't know what you mean, I used the model I could find in 30+ other drivers. I'd rather not pretend the internal ROM was external, IMHO that's an uglier workaround.\nI could see no way to have a different internal map depending on the configuration however.  It's fixed configuration afaik (you can't change the pin state after boot) so this seemed the most logical way.. the only other workaround seem to actually just be exploiting bugs in MAME with regards external ROMs mapping over internal ROMs and I'd really rather not do that. so yes, for the time being I think this is the cleanest solution by far. unless I install ROM in the device, but that seems to be frowned upon these days?  would resolve your issue tho.. well I've done that, not sure I'm actually happier with that solution, but it still works without breaking everything elsewhere or relying on weird side-effects.. yes, I changed how that worked in that PR, I thought the 'resolve conversation' was just for the conversation, not the issue.  The issue is resolved in the update, and by that it now shows 'outdated' next to these comments.  I wouldn't have even seen this reply had I not been pointed at it.  I've followed all guidelines for all of this, and while there are indeed about 20 different ways in which it could be done I don't really see any major advantages of the alternative approaches.. studying the code I'm not convinced it's this register tho, as it seems to write this every frame (unless it has to keep writing it to maintain the mapping)  It's the only address Fancy World doesn't write tho, so could still be significant.  I've played the game start to end without issue using the current setup however.\nit does look like its should boot with 0x000 - 0x7ff as ROM tho, then probably switch it to RAM, because the initial RAM test bypasses that area, before it then writes the interrupt vectors.. studying the code there really doesn't seem to be any write connected to changing between RAM and ROM, the writes to the vector table happen early on, almost immediately after the RAM test, with no register writes between so this seems unrelated. done, this is another one of those cases where the majority of the examples I could find were still done this way.\nbtw, once this is merged is there any chance you could try to work out why \"mame64 popira dc0005\" won't reload the cartridge seeprom.  If you look at the data it saves it looks valid, first 2 bytes are checksum, other bytes in the are the % you've completed certain songs.  problem is, best I can see, when it tries to read the data again at the start it latches the value, but then only reads the sda line for 7 of the 8 bits before doing some other stuff, meaning it never reads all 8 bits for each byte, meaning it thinks the data is invalid (checkum fails) and just erases it all agian..  I suspect this is a similar problem to what's causing issues with the other seeprom cases.  I'd expect the read count to be controlled by the 6502 tho so I'm at a loss.\nhttps://pastebin.com/DehtrN26. ",
    "pmackinlay": "No, they can be constants associated with the classes instead.. I don't have any answer for that. Doing it using a dumb array would be problematic from the storage size required. The device itself possibly optimises this by computing hashes and storing those instead of the raw addresses. Open to suggestions?. I must confess I don't understand what that qualifier does. The underlying data returned by the function can change during emulation, if that's the question? If not, I need to learn what the qualifier does.. Only to make it a bit easier to see the different byte/bit accesses line up, not required.. Have now corrected the header's dependency on this, and this #define can be relocated below the include - its use is entirely within the .cpp file now.. Ok. Thanks for the feedback. I will make the suggested changes tomorrow.. For what it's worth, there's a spelling mistake - \"canonical\" should not have a double 'n'.. For lack of any other specific guidelines, I've been using the name/title printed on the datasheets. Of course abbreviating these is possible, but a bit arbitrary. No problem to do it though - I'll also do so with the other one.. The statement doesn't match only because there's no fid local - the effect should be identical, unless I'm missing something obvious?\nRegarding the motor control, @cracyc is right - this chip only has one motor output line and the drive select lines are multiplexed, so selecting a different drive will stop the motor on the previously selected one (unless there's external latching of the state, which means the internal motor control can't really do its job). I can't really test this, not having hardware, but the InterPro uses a single floppy drive with id 3, and likes to \"stop\" it by doing \"motor off drive 0\", for whatever reason, so this was the conclusion I reached; otherwise drive 3 just keeps spinning indefinitely.\nIn reality, the i8272/i82072 were a mistake, however maybe another system which used them will turn up one day and we can verify the behaviour.. Yes, you're right. I will correct this. For what it's worth, I'm also trying to convert as much as possible of InterPro to devcb3; hopefully I can finish wrangling with the bus/slots today or tomorrow.. ",
    "aviloria": "Non-capitalized \"internet\" is a common name for Wide Area Networks (WANs), in fact it's more used than \"global network\" (\"Red global\")...\nBut, as you've said, it's commonly confused with \"public Internet\" connections.. Fixed! Thanks!. I was not sure about \"Laserdisc\" as a trademark or a technology... Reverted! Thanks!. Fixed!. Fixed!. My bad... I missed the second part on each entry. Fixed! Thanks!. Fixed! Thanks!. ",
    "kadireksi": "added the colon. i guess this is used for info and not for choice and means that driver/machine/system has no sound.\n\"Hi\u00e7biri\" is used when choosing something from multiple things and represent 'none of them'.\ni hope i understood right and i told it right. added two more spaces. deleted the stray character. ",
    "pmos69": "Sure.. Yes, sorry about that.\nFixed.. You're right, \"Original\" is not really adequate.\nNot an easy translation to do in this context. The more direct translations, such as \"Pai\" would have a meaning closer to \"Father\", and are not really the best either.\nAfter some consideration, decided to go with \"Principal\" (something like \"Main\" in English).. No reason, just fat fingers.\nFixed.. Fixed.. Fixed.. Indeed.\nFixed.. ",
    "theheroGAC": "ok thank you fix now. fixed 2 strings. ",
    "phulshof": "Ok, that's easily fixed. :). My apologies; I will fix that.. Question: should fallback artwork be loaded if:\n- parent artwork is found?\n- bios artwork is found?\n- internal layout is found?. None whatsoever, but since the original (current) code used the same construction I figured I'd follow that coding style. If you prefer I can change that throughout this function.. It was intentional to make both available to the user (with the specific as default), but if you prefer I can add the else. :). ",
    "vadosnaprimer": "How should I call the command? html should be mentioned somewhere, it's the file type I output. Probably later on, I'll come up with a way to output a wiki doc file, but the amount of file types will be very narrow.. They are strings to allow easy length measuring. Is the fact that they are static the only problem?. I need it to be a string to use string methods, as well as strreplace(). Will it be enough if I make the buffer local to my functions?. But fprintf doesn't throw C++ exceptions. Should I trow my own, or just close the file and return the regular C way?. ",
    "helwie44": "Ok, I'm going to release the F11 key and the typewriter mode function on e.g. the PC key NUMLOCK to put. Similar to the original P3 / P30 keyboard.. ",
    "weetmuts": "Thanks cuavas, I think I understand. The keyboard is external and is electrically interchangeable, but it behaves as an internal one since the keyboard layout is tied to the driver/machine. Ie the swedish keyboard only works for stepone, the australian for jb3000, and the japanese for myb3k.\nThus I should change myb3k driver to initiate the  myb3k_keyboard_device accordingly. Drop the CONFNAME that can be manually changed and somehow configure the keyboard programmatically. \nShould I still use PORT_CONDITION for this, or is there a different way?\nHave I understood correctly?. ok, i'll fix. ",
    "Firehawke": "I'm going to start commenting here to keep track of progress and to address questions:\nGot this fixed on my side.. Working on this still-- I just need to do a final pass to make sure I got all the stuff from all three commandline lists.. Fixed on my side.. Fixed on my side.. Confirmed to work with wildcards. We discussed this on IRC. I'm going to leave it for the moment-- it may have some weird effects if misused, but it does work and there are use cases for it.. Like previous, does work with wildcards, leaving in.. Fixed on my side.. Fixed on my side.. Confirmed no longer present, removed on my side.. Fixed on my side.. Fixed on my side.. Fixed on my side.. Wasn't aware OpenGL was included on Windows now, but outside of BGFX shaders the preferred shader on the Windows side would be HLSL.\nI'll need to rework the video subsection to get that corrected.. Fixed on my side.. Fixed this on my side.. Also fixed this on my side.. Fixed on my side.. Fixed on my side.. Probably. These are generally functions end users aren't expected to play with, but it's good to have them properly documented.\nFixed on my side.. Fixed on my side.. Fixed on my side.. Fixed on my side.. Fixed on my side.. Fixed on my side.. I did initially hesitate on capitalizing in the command structure section, but decided that making CPU look even across all instances was probably correct. If you decide otherwise, I'll be more than glad to change that back.\nAs for ASCII, I apparently missed that. I'll fix that. Consistency is important.. Making a note that I should probably actually expand this to show both ways.. I'm going to put this one down as \"Probably doesn't need explaining at all.\"\nI'd had some misgivings on the bilinear performance thing-- that'd be true 20 years ago, but not so much now. I'll put forward my suggested change and we can talk from there on this one.. Corrected.. Corrected, though we can discuss phrasing if it's not to your liking.. I'm going to leave this alone for the moment. Let me know what you find and we'll go from there.. We'll probably end up talking about my proposed changes on this one. I'm not expecting this one to be acceptable on the second pass.. Noted and fixed.. Done.. Think I have this worked out.. Okay. We'll see if you like the new version of this.. Done.. This is stuff I've never used, so I clearly need to research this before cleaning it up.. Yep, knew I'd miss at least one.. Done.. Done.. Done.. Done.. Done.. Done.. This one's escaping me at the moment because it's difficult to find a phrasing that won't go too deep into technical terms. I'll come back to this one after I have a chance to talk to you.. Should be good now, I think.. Are you sure that's Windows specific? There's SDL-referencing text in the original documentation here. Maybe that should be removed if so.... Some adjustments made; Personally I'd remove the speed reference entirely-- unless you have a really old or unoptimized machine, prescale should generally be very very minimal hit.. Changed.. Adjusted.. The docs suggest \"400-800px\" specifically. I'll try it with 100% and we'll see how it looks.. ",
    "katananja": "\"Condi\u00e7\u00e3o\" was used to reflect the ROM state, BOA or RUIM. Don't know if a literal translation here will help because in Brazilian Portuguese we don't audit objects, we audit individual's or organization's accounts, process, etc, etc. For ROM's a better word would be \"to check\", \"to inspect\", \"to verify\", \"to analise\", \"to probe\", etc.\nIn our language, \"condi\u00e7\u00e3o\" reflects better what the software is doing, my opinion.. Maybe, \"Erro ao acessar %s\".. If the space allow it, please use preposition.\nsalvar os nomes. If the space allow it, please use preposition.\nSalvar os nomes. Maybe \"Arquivo com o nome das portas de entrada foi salvo em %s\". Without a context, this is complicated. Is this a substantive? A verb?\nIf it is a substantive, the correct term would be rebobinar (to rewound something).. It can be \"teclado\" also. But looking on different books, the best word to classify it is in reality \"teclado num\u00e9rico\" even if isn't numeric.\nThe term is correct in our language.\nThank you.. The -- looks like is lost in the middle of the text, that is why I removed. If you look at the mamedev documentation home page the -- is there with no real function. Unless the original author wanted to do something like - this - or use any other format style that I didn't understand.. ",
    "cam900": "I don't know what it actually does, It's just cut 'n paste error.. Sounds are actually work after remove this hack, too.\nI removed this hack for this aren't helpful for playing sound, And main CPU isn't seems like halting when writing latch.. 0x00-0xff area is Internal palette, 0x100 area is Background color. For making slightly shorter Gals Panic 3 framebuffer pixel draw routine.. On manual, not have a recommended DIP switch settings on this.\nbut it's doesn't effect on software(it seems like only related on hardware), I reverted this.. It's for future use when MCU ROM has dumped.. Some driver has converted VBlank interrupt in screen_vblank callbacks; so I converted VBlank interrupt in here to.. It just mistake, I fixed now.. V100 03/14/05 20:04:08 is M68K code revision shown at operator setting menu in svgtw, 06/20/05 11:36:15 V100 is ARM code revision shown at warning screen in same game. ex: svgtw and svgpcb shares same 68K data, and revision is same on operator setting menu.\nmost of games are similar; theglad, killbldp, happy6 - these games are shown M68K and Internal ARM code version info is shown at bottom of operator setting menu(sometimes blinking), and Build date of ARM external code is shown at warning screen.\nwhen ARM external ROM hasn't needed/implemented or games released on kov-era to kov2-era, it's only shown M68K version at same case.. Both ram_r and ctrl_r are 16 bit read handlers, They working without data parameters in above.. ",
    "zx70": "ok, I can totally get rid of the sp variable everywhere. I see, I'm re-revising it all soon. ",
    "Wintermute0110": "You are absolutely right. Correct name must be BBC Bridge Companion. Will change ASAP.. This and the previous two should be Acorn 32016 Co-Processor discs, Acorn 6502 2nd Processor discs and Acorn 65C102 Co-Processor discs?. Yeah, I agree with you about conciseness. I think these changes will allow people to easily identify these boards as Acorn computer accessories and when listed alphabetically will show next to the other Acorn computers. Also, from about 400 SL only about 20 don't follow the \"policy\" of having the company name at the beginning and I think it would be nice to bring coherence to all SL names for a nicer browsing in the UI and other front-ends.. I have fixed that and also bbc_flop_torch.xml. I believe now all SL names match the names found in the source here.\nBy the way, to keep coherence with bbc_flop_torch.xml, bbc_flop_68000.xml should be renamed to bbc_flop_casper_68000.xml (I won't do it).. I'm sorry. I read you previous comment about the Casper 68k board and have already reverted this change.. OK, I agree. Thanks for the clarification :). Fixed. Thanks for spotting this mistake.. ",
    "mourix": "I've used this video and photo as a reference for the pink shade. The original trackball is red as shown in the kit and flyer. When lit up, it will turn to a lighter shade of red, which will probably be interpretet as either bright orange or pink depending on the camera. . Actually, the incandescents are white as shown here, here and here. The marquee is rather hard to summarize as a single colored square, but as the Irritating Maze logo is pink, I made it the same color as the trackball.. ",
    "vjavs": "Fixed.. ",
    "jzatarski": "Could you elaborate a bit more on what exactly has wrong spacing? Is it the space between ( and \" in line 537? That occurs in other places in the file, in code I didn't write, so I'm not sure if that's the issue or not.. ",
    "MdGheist": "i just try to help/solve that thingy with missing img\nmastering borland c plus plus 3.1\nhttps://www45.zippyshare.com/v/kBKp1K2W/file.html\ndrafix windows cad (demo)\nhttps://www45.zippyshare.com/v/Pct7ioCL/file.html\ntango printed circuit design evaluation\nhttps://www45.zippyshare.com/v/PqzdWmEt/file.html\ntango schematic capture evaluation\nhttps://www45.zippyshare.com/v/r7TF2LpG/file.html\nthese ones with default settings converted back to img\nbut the other ones gave with default settings different crc`s. the first converted was using default settings and the rest was using 360rpm. 2630 Fourier Analyzer\nhttps://www54.zippyshare.com/v/Hj0Xw1N4/file.html\nMitt f\u00f6rsta ordbehandlingsprogram\nhttps://www54.zippyshare.com/v/0cZnqZx4/file.html\nEasy PC Demonstrator For Printed Circuit Boards And Schematics\nhttps://www54.zippyshare.com/v/vf3a7v4U/file.html\nThe Great International Paper Airplane Construction Kit\nhttps://www54.zippyshare.com/v/NDr6IYL1/file.html\nlast dump Ranger 1 is really weird ,2 can be converted but one file dont want to be converted it show everytime the wrong crc,used rpm was 300 and 360 both are not working for that one file\n. last one converted by kryoflux version 2.51 -360rpm\nranger1\nhttps://www19.zippyshare.com/v/Ryoj3N3H/file.html\n. ",
    "clawgrip": "Mainly because I'm assuming that, like on the other sets, there is an unpopulated area. I'm not really sure, so I have not added a comment, but sized the area as if it's like that.. Yes, I forgot about those, sorry. I'll correct it on a few hours.. Updated, thanks and sorry.. I've fixed it with a second commit. Thanks.. ",
    "yukaritamura": "These fixes are correct even for T.T Mahjong.\nThis just changes T.T Mahjong's input detection timing, from key release timing, to key press timing.\nWithout this fix, Jongputer can not draw title screen, and can not detect any input. When I say the Z80 assembly, it internally detects the first unassigned bit due to the wrong polarity, and stops scanning other meaningful bits.. Yep.\nSo, since the jongpute is the original and ttmahjng is the one that should be marked as a clone, do you think I should rename existing ttmahjng_ methods and members to jongpute_?. Fixed!. The second commit fixes it and does the renaming.. Should this be in the dict order? I replaced this to the right place in the second commit.. ",
    "kunikunijp": "Thank you for your advice.\nI modified to use copybitmap_trans.. ",
    "svenschnelle": "It's not - if you look at the file it looks like a repeating pattern. It's definitely not a valid firmware.. ",
    "algestam": "Thanks for finding this! I've included this fix in a new commit :). Same goes for this one, I missed that the filesize was specified two times per file. Thanks for finding it!. ",
    "fenugrec": "A sample calibration ? Perhaps, yes. The CAL stores an offset and gain (simple linear a + bx form) for all modes and ranges, so I guess a \"perfect\" device would just have 0 everywhere. I'd  have to test if a 0-filled dump would pass the CAL checksum check.. ",
    "Celelibi": "That's true, I didn't see this coming. \nBut in case the code would introduce such a bug in the future, I still think it's better to have a deterministic bug than an non-deterministic one. It wouldn't stand out in valgrind, but it would be easily reproducible, which IMO, makes it easier to debug.. ",
    "classilla": "No. I can do so, but how often do you pull these changes? Do you do this automatically?. Near as I can determine the use of 128-bit long double is optional, not mandatory, and libc is designed to swing both ways. See, for example, https://gcc.gnu.org/ml/gcc-patches/2006-01/msg01958.html. (I should say, on ppc64/ppc64le, which is the only place this patch would do anything.). How do I get that to occur? I could try to do it myself with another PR when I get it done upstream, I guess, or I could file an issue when it's ready to be integrated. The reason I'm a little concerned about the timing here is that the compile will still be broken on ppc64le until that happens.. Okay. This has been done and is awaiting review: https://github.com/bkaradzic/bx/pull/199. I'm not sure what you're implying: that MAME on ppc64 doesn't work with 64-bit long doubles? I can definitely assure you that it does, I was playing Alien Syndrome in it earlier and using the Tomy Tutor emulator.\nIf there are portions in mame that you are concerned may break with this change, I couldn't find any personally, but I'm willing to fix any suspect areas on ppc64 if you point me in the right direction (with the clear understanding they're not going to occur anywhere else but ppc64). If you're implying that the compiler should be fixed in lieu of this change, however, given how long the gcc PR has rotted I don't see that happening anytime soon and that would definitely be beyond my personal capability. . ",
    "MathisRosenhauer": "As I read the datasheet, bits are shifted out at half the system clock rate. If we agree on that then you have to invert CB1 every clock cycle which is what the patch does.. "
}