{
    "yyx990803": "Looks cool, thanks! Let me play around with it a bit to see if the API feels consistent with Vue core.\n. I've added you to the owners group, let me know if this helps.\n. I'm not the maintainer of this plugin - @kazupon is. He doesn't speak Chinese so please use English.\n. I think it's a bit awkward and non-obvious to make users do new RegExp() if their regex pattern contains a pipe, so maybe it easier to make the pattern validator accept strings also:\nhtml\n<input type=\"text\" v-model=\"zip\" v-validate=\"pattern: 'a|b|c'\">\n. Should minLength and maxLength be min-length and max-length instead? Since HTML attributes are case-insensitive.\nI think we are moving towards a convention where everything is dash-cased as HTML attributes and camelCased in JavaScript / expressions.\n. BTW I like the new syntax using attributes :+1: \n. ",
    "kazupon": "Thank you for having interest in my PullRequest.\nMaybe, I am not enough to understand about Vue core.\n. @yyx990803 \nthanks !!\n. Implemented in 2.0.0-alpha.1\nhttps://github.com/vuejs/vue-validator#validation-result-structure\n. I'm going to support at next version.\n. related #217\nsee more:\nhttps://github.com/vuejs/vue-validator/issues/217#issuecomment-218099304\nHowever, I found the other bug that cannot change the validation message. \ud83d\ude07 \nhttps://jsfiddle.net/kazupon/04nso4nm/1/\nI'll fix try to it. \n. @erguotou520 \nNo.\nI checked your reporting issue again.\nvalidation rule and message did not become reactive.\nThis is bug.\nI registered this issue.\nhttps://github.com/vuejs/vue-validator/issues/284\n. Fixed\nhttps://github.com/vuejs/vue-validator/releases/tag/v2.1.5\n. @danielchou \nThank you for your issue report. :)\nIn the next release, I will fix this typo.\n. Sorry, Not support the Promise in vue-validator.\nI would like to think whether become able to use the Promise in vue-validator.\n. I published v1.4.0 release.\nPlease try it !!\n. @yyx990803 \nThank you for your follow. :)\n. @xdliuyong \nThank you for reporting.\nIn jsfiddle, I tried your the above code.\nI understood the issue.\nI will fix from now. \n. I fixed this issue.\nPlease try to use vue-validator latest version. :)\n. Thank you for reporting.\nYou're right...\nI will fix from now.\n. I fixed this issue.\nhttps://github.com/vuejs/vue-validator/blob/master/HISTORY.md#v104--2015-05-08\nPlease try to use vue-validator latest version. :)\n. Can you please provide example code in jsfiddle ?\n. Sorry for the late relpy.\nI think that this issue can resolve you use v-component directive.\nlike this:\nhttps://jsfiddle.net/kazupon/xkkcrzn7/5/\n. How about this ?\nhttps://jsfiddle.net/kazupon/9t4Lk7e8/8/\n. @benediktvaldez \nThunk you for your usecase.\nOK !!\nI understood.\nLGTM.\n. @yyx990803 \nThanks for your support comment !\n. @davidkhess \nThanks for your issue report.\nYou're right...\nI'm going to fix this issue.\n. Fixed\n. Thanks for your report.\nI'll try to fix it.\n. Fixed\n. Thanks !!\n. Sorry for the late relpy.\nWe cannot disable validation in vue-validator.\nif you want to use validation properties (dirty, valid and invalid) after you set the data with JS codes, you should use Vue.nextTick.\nfor more detail see:\nhttp://vuejs.org/guide/best-practices.html#Understanding_Async_Updates\n. Hmm, I understood your issue. :)\nThe vue-validator should probably supportwait-for like of Vue.js component system.\nhttp://vuejs.org/guide/components.html#wait-for\nI'll try out whether become able to delay validation.\n. I implemented delay initialization of validation.\nhttps://github.com/vuejs/vue-validator#wait-for\nYou can try. :)\n. Thanks for some your comments and bug.\nI'll fix that bug.\nCertainly, in vue-validator should change $emit only works for v-validate model fields, because current implementation can set the other model fields.\nI think that a single $emit calling\nwill support the v2.0 later, because current implementation of vue-validator is bad design.\nsorry poor my english :)\n. @JoshZA \nSorry, i don't implement yet.\nI'll implement.\n. Thanks !!\nI'll try to consider the your advise. :smiley_cat: \n. Thanks for your report. :)\n. Fixed\n. Can you please provide example code in jsfiddle ?\n. same #29 issues ?\n. Thanks for your report.\nI checked your jsfiddle.\nBut I could not understand that issue. \nWould you provide the issue code ?\n. vue-validator don't work if you set  the new value to this.$data.\nBecause vue-validator keep the validation result to this.$data, and also define valid, invalid and dirty property. for that reason, we should  set the value vm.$set('prop', val) or vm.prop = val.\nI think that is no good plugin design.\nIn next version 2.0, I'll try to  implement full-scratch (see #24).\n. Thanks !!\n. Sorry for the late relpy.\nNot support the array-able model.\nI'm going to support at next version (v2.0). :)\n. @lvismer \nAs soon as possible, I think that want to release v2.0 version. :)\nBut I cannot be too secure my private time recently.\nThe reason need to keep the my family time and busy with work.\nPlease wait a little more. :pray: \n. @shuogawa \nThanks !!\n. I published 2.0.0-alpha.1\n. Thanks for your bug report.\nSorry my mistake. :bow: \nI fixed now.\nYou can try it !!\n. Hmm..., you\u2019re right.\nIn next version 2.0, I'll plan to full-scratch implementation (see #24).\nI'll improve the this issue. :smiley: \n. @cheapsteak \nYes, is there.\nI think so too.\n. I published 2.0.0-alpha.1\n. I tried the your issues on the jsfiddle.\nhttps://jsfiddle.net/kazupon/q7xcbuxd/6/\nIt seems to work normally.\nCan you give me your issue code on the jsfiddle ?\n. I updated sample.\nhttps://jsfiddle.net/kazupon/q7xcbuxd/8/\n. I think that there are not problem in your setup code.\nThis is small problem of vue-validator.\nSee http://vuejs.org/guide/best-practices.html#Data_Initialization\nBut it does not effect in application behavior.\nThat's OK. :smile: \nIn the v2.0, I'm going to resolve it !\n. Sorry, I cannot find a solution to this issue yet.\nThis issue is difficult.\nI'm asking the advise about related issue at below forum.\nhttp://forum.vuejs.org/topic/957/how-to-avoid-evaluating-expression-warning-for-plugin-author\nThis issue is occuring when we using development version of vue.js\nIn development of app, we can avoid this issue by setting the Vue.config.warnExpressionErrors = false.\nI'll try to write the README.md later. :smile_cat: \n. Thanks for your issue.\nI think that the behavior of dirty is bug.\nI'll try fix.\n. I fixed.\nPlease try !!\n. I fixed and release v1.3.2.\nPlease try it.\n. Thanks for your issue report.\nI understand the cause.\nThis problem is caused by plugin bad design.\nI'll fix by temporary way for now.\nIn next version 2.0, I'll try to implement full-scratch by new design (see #24)\n. I fixed and release v1.3.3.\nPlease try it. :smiley: \n. Sorry for the late relpy.\nHmm ..., Currently , v-validate directive is required of something validator.\nif you want to only use dirty property in vue-validator, you said as follow ways:\n- write a custom validator that always returns true\n- use something like v-validate=\"minLength: 0\"\nI think you can satisfy your desire for the time being.\nin v2.0 of vue-valdiator, I think that want to consider this feature. :smile_cat: \n. @FourStacks \nThank you for your feedback !!\nI understood your usecase. :smiley: \nCurrently, vue-validator does not support function or inline expression like v-on.\nhttp://vuejs.org/guide/events.html\nhttp://vuejs.org/api/directives.html#v-on\nIt's very convenient !!\nI will try to support.\n. I published v1.4.0 release.\nExample:\nhttps://jsfiddle.net/kazupon/76q3Lxu2/7/\nPlease try it !!\n. @yyx990803 \n\nI think we are moving towards a convention where everything is dash-cased as HTML attributes and camelCased in JavaScript / expressions.\n\nYeah !! That's right.\nWe should move towards the Vue convention to keep the consistency.\nBut i think that some attributes which defined as a HTML5 Form specification should conform to the those standards.\nBecause it is easy to understand for users.\nHTML5 Form specification - W3C\nhttp://www.w3.org/TR/html5/forms.html#the-maxlength-and-minlength-attributes\nHowever, I think that user defined HTML attributes (custom validators) is dash-cased as attributes and camelCased in JavaScript / expressions.\n. @swift1 \nThank you for using and your feedback until now.\nI'll try to adopt your request. :smile_cat: \n. @fergaldoyle \nThank you for your feedback.\nI'll try to consider about hook of v-validate. :smiley: \n. @nkovacs \nThank you for your comment.\nYes, you are right !! :)\n. @swift1 \nYes,  That's right !! :smile_cat: \nI feel bad that my English made you confused.\n. @aristidesfl \nThank you for your feedbacks !!\nLooks pretty good about class attribute insertion.\nI'll try to consider your feedback including as new feature.\n. @aristidesfl @trippo80 \nIn currently version, vue-validator don't support lazy validation with the various events triggering,  like blur, keyup, submit, etc.\nI'll try to consider your  feedback including as improvement point.\n. @shinygang \nSorry, I don't understand chinese.\nCould you tell me with english ?\n. @shinygang \nThank you for your comment with english :smile_cat: \n\nHow long will the v2.0 release?\n\nAs written here,  I'm hard to work because I'm translating for japanese users now.\nI may not be guaranteed to your desired schedule.\n\nThere's a bug in v1.4.4, I think. \"validation.book.username.required\" was not working when I use 'v-model=\"book.username\" v-validate=\"required\" '\n\nSorry, I didn't understood.\nI hope you will provide issue code with jsfiddle or codepen, and please open the new issue. :smiley_cat: \n. Release v2.0.0\nhttps://github.com/vuejs/vue-validator/releases/tag/v2.0.0\n. One of solutions, I think that you  can resolve by specifying  computed property to custom validator.\nexample:\nhttps://jsfiddle.net/kazupon/kdvdvdze/7/\n. @swift1\nThank you for always your reporting !! :smile_cat: \nThis strange behavior caused by v-model.\nCurrently, input[type='radio'] specified by v-model do return string value.\nI think that v-model should support numeric value at  input[type='radio'] too.\n- Casting Value as Number\n  http://vuejs.org/guide/forms.html#Casting_Value_as_Number\n@yyx990803 \nHow about you ?\nIf you think you have a good about this idea, I think that will try to add number option on v-model. :)\n. @yyx990803 \n\nIf you think you have a good about this idea, I think that will try to add number option on v-model.\n\nsorry my mention ... orz :bow:\nIn v0.12.10, This was supported.\n@swift1 \nDid you check to using v0.12.10 ?\n. @swift1 \nI checked this issue.\nI will try to fix. :smiley_cat: \n. I fixed and release v1.4.2.\nPlease try it. :smiley:\n. This is specification.\nCurrently, vue-validator don't have dirty property for each object hierarchy, because can not consider use-case. \n. I published 2.0.0-alpha.1\n. I published 2.0.0-alpha.1\n. Hi @lynzz !!\nThank you for your reporting.\nIf anything, this issue is a topic of vuejs/discussion.\nMaybe, you will probably helpful the following v-model setup issues.\n- Dynamic v-model directive\n  https://github.com/yyx990803/vue/issues/1056\n- Dynamically associate form elements to models\n  https://github.com/vuejs/Discussion/issues/19\nBut v-validator cannot support dynamic validator setup.\nIn Currently, you need to implement validation with the $compile or element directive.\nI think that will support the v2.0 later.\n. Sorry, In current version (2.0-alpha.9), We don't support the dynamic validator (dynamic component).\nI'll plan to support.\nplease wait. :smile_cat: \n. Please see #131 \n. Hi @ablipan !!\nThank you for your reporting !\nYou can use user custome validation. :wink: \nhttps://github.com/vuejs/vue-validator#user-custom-validator\n. Hi @ablipan !!\nCurrently, vue-validator can't initialize at your own will.\nI'm going to support at next version. :)\n. I think be dependent on custom directive implementation.\nvue-validator is required v-model specifying, and watching the property that specified with v-model.\nhttps://github.com/vuejs/vue-validator#v-validate\nMaybe, if custom directive set the property (e.g, twoWay option), vue-valiator works.\n. Hi @Razi91 !!\nThank you for your reporting.\nCan you provide the issue code on the jsfiddle ?\n. ah, :sweat: \nI see. \n. I'll try to consider this feature at #41 \n. Published v2.0.0-alpha.9\nhttps://github.com/vuejs/vue-validator/releases/tag/v2.0.0-alpha.9\n. Thank you for your reporting !!\nSorry, this is bug.\nI'll try to fix.\n. Fixed 2.0.0-alpha.1\n. I fixed now. :smile: \nPlease try it.\n. Thx !!\n. Hi @tuelsch !!\nThank you for your reporting !!\nI checked your demonstrate code.\nI think it's issue of Vue.\n@yyx990803 \nDoes v-repeat pass the vm.$options to child vm instance ?\nhttps://github.com/vuejs/vue-validator/blob/master/index.js#L48\n. I'm implementing from scrach for v2.0 now.\nI'll plan to implement the validator asset system.\nhttps://github.com/vuejs/vue-validator/issues/41\nI realized that this issue can solve with validator asset feature.\nMaybe I adopt validator asset feature of v2.0 to latest of v1 (VueValidator.assets)\n. I fixed this issue, and readied for the release of v1 latest version.\nYou can check behavior in the following jsfiddle.\nhttp://jsfiddle.net/kazupon/xzhkd75c/6/\nIn the above jsfiddle code, I changed your demonstrate code, because it does not work at the v-repeat.\n(see the https://github.com/vuejs/vue-validator/issues/31)\nIn order to release, we need to wait release of vue.js 0.12 latest version.\nPlease wait. :)\n. I published vue-validator latest version.\nPlease check it! :smiley: \n. Sorry for late reply.\nI checked your stackoverflow code.\nSorry, I cannot understand this essential issue.\nWould you provide a your reporting code with jsfiddle ?\nThat time, I would appreciate if you provide a reproducible to me.\n. Thank you for your jsfiddle code !!\nI tried to  reproduce you have a problem.\nhttps://jsfiddle.net/kazupon/gqLdjL3d/5/\nIs this right ?\n. Close\n. this issue is related with https://github.com/vuejs/vue-validator/issues/55\n. I fixed this issue, and readied for the release of v1 latest version.\nYou can check behavior in  the following jsfiddle.\nhttps://jsfiddle.net/kazupon/kdye3gv5/3/\nIn order to release, we need to wait release of vue.js 0.12 latest version.\nPlease wait. :)\n. I published vue-validator latest version.\nPlease check it! :smiley: \n. Sorry for late reply.\nOne solution, You can achieve your asynchronous validator by using debounce param.\nhttp://vuejs.org/guide/forms.html#Input_Debounce\nThe following example:\nhttp://jsfiddle.net/kazupon/cm6uzjbb/2/\nHowever, this solution is based with user input event, this solution may not be what you want.\nI think that consider this issue as the development candidate of V2.\n. Thank you for your comment !!\nI want to understand more about your above comment. \nI hope that you provide the example codes. :smiley_cat: \n. Thank you for your details example code.\nThat's sounds good !!\nI'll try to consider this feature at #41.\n. I implemented in 2.0.0-alpha.1\n. Thank you for your comment !!\nI want to understand more about your above comment. \nI hope that you provide the example codes.\n. Thank you for your explain jsfiddle code !!\nI understood your posted issues.\nI'm developing the vue-validator v2.0 now.\nI'll improve the this issue at the next version.\n. Thank you for your comment !!\nThere is not way to get the current element in a custom validation.\nIn async validation, I think it is important to we provide any user interaction to user.\nI'll try to consider your request as new feature for v2.0 (#41).\n. Hm,\nAs an alternative way, There is way manually validation result setting.\n``` js\nmodule.exports = {\n  data: function() {\n    email: null\n  },\n  validator: {\n    validates: {\n      // define dummy custom validator\n      async: function (val) {\n        return true\n      }\n    }\n  },\n  watch: {\n    'email': function(val, oldVal) {\n      // one way of validating the email is to watch the model for changes\n      if( ! apiValidateEmail(val) ) {\n        // email didn't validate so we need to trigger an error on vue-validator\n    // set the manually validation result\n    this.$set('validation.email.async', false)\n  }\n}\n\n},\n  ready: function() {\n    var self = this\n// another way of validating is to watch the input itself for change events\nthis.$el.querySelectorAll('input.email').on('change', function(e) { \n  if( ! apiValidateEmail( this.val() ) ) {\n    // email didn't validate so we need to trigger an error on vue-validator\n\n    // set the manually validation result\n    self.$set('validation.email.async', false)\n  }\n});\n\n}\n}\n``\n. Please remain the open. after i finished v2.0 development, l close the issue.\n. Yes.\nBut current implementation ofvue-validator` does not work.\nI'm developing from full-scratch as v2.0 for vue 1.x\nMaybe, I think that vue-validator v2.0 can not publish until vue 1.0 release.\n. Until recently, I had been develop from full-scratch as v2.0 for Vue beta.\nBut I'm translating Vue 1.0 documents as high priority task for japanese users now because Vue 1.0 release be expected the end of October or later.\nSee the tweet of vue.js twitter account:\nhttps://twitter.com/vuejs/status/652593449636634625\nWhen I finished document translation, I resume the development vue-validator.\nSorry, please wait :wink: \n. thanks!\n. @shredmaster \nsorry, dev branch not compatible.\n. I published 2.0.0-alpha.1\nhttps://github.com/vuejs/vue-validator/releases\n. Sorry for the late reply.\nI checked your jsfiddle code.\nIn current vue-validation version for Vue 1.x, it does not work.\nI'm developing vue-validator 2.0 now, however it's late because I translate vuejs.org website for japanese users.\nPlease wait :bow: \n. Fixed in 2.0.0-alpha.1\n. Hi !!\nThank you for your report.\nI recognize this issue as bug (similar #52).\nThis bug has occurring because of the bad design of vue-validator implementation.\nThis bug occurs when we use the v-if direcitve.\nFor this reason, To avoid this problem, you need to use the v-show directive.\nIn v2.0, I also reference the design of angluar. it may be similar. :wink: \n. Fixed in 2.0.0-alpha.1\n. Sorry for the late reply.\nThere is not way to tell the server-side validation errors in vue-validator.\nI'll try to consider this feature in v2. :smiley_cat: \n. That error is occurred in Vue.js 1.0 ?\n. Sorry, it is not support yet.\nI'm developing v2.0 now.\nPlease wait a little more. :smile_cat: \n. Okay, I update README.md\nhttps://github.com/vuejs/vue-validator#requirements\n. sorry... everyone.\nI'm busy with the work.\nI'm developing the v2.0 in incremental steps though. (Please see  https://github.com/vuejs/vue-validator/commits/dev/latest)\nWhen I finished basic validation feature implemetation, I'll publish as 2.0-alpha.1\nPlease wait.\n. Thank you for your report!\nThis is bug.\nI'll try to fix :smile_cat: \n. Hi :smile_cat: \nThe above codes doesn't work 1.4.4.\nYou can upgrade to 2.0.0-alpha latest version.\nPlease try it :smile_cat: \n. sorry, v-model can not support yet.\nI'll try to implement.\n. Thanks !!\n. sorry, currently, vue-validator cannot validate with v-validate for user custom input.\nI want to see the example codes because I don't understand this use case.\n. Thanks for your example code :)\n\nBut the input is hidden, can trigger touched property ?\n\nUnfortunately I cannot do it at current vie-validator alpha version.\nI'll try to support user custom element select2-like.\nhttps://github.com/vuejs/vue-validator/issues/50\n. Close (exist #186)\n. Thanks \ud83d\ude3a\n. Thank you for your reporting !!\nI've checked your issue code in jsfiddle. However that issue did not occur the error in my environment.\nWould you tell me the Vue.js version ?\n. Thanks !!\nThis is the bug.\nI'll try to fix this issue until release v2.0\n. Fixed in v2.0-alpha.6\njsfiddle:\nhttps://jsfiddle.net/kazupon/7og9hds9/3/\n. related #35 #103 \n. Sorry, I cannot find a solution to this issue yet.\nThis issue is difficult.\nI'm asking the advise about related issue at below forum.\nhttp://forum.vuejs.org/topic/957/how-to-avoid-evaluating-expression-warning-for-plugin-author\nThis issue is occuring when we using development version of vue.js\nIn development of app, we can avoid this issue by setting the Vue.config.warnExpressionErrors = false.\nI'll try to write the README.md later. :smile_cat: \n. Sorry for the late reply.\nIn v2.0, I decided that don't support the nested property, because application design become complex. Vue is the component oriented. I think that you can implement like the comment of @bradstewart, also use the component.\n. Thanks !!\n. Thank you for your feedback.\nI'll try to support Vue-like automatically conversion.\n. Sorry, I cannot find a solution to this issue yet.\nThis issue is difficult.\nI'm asking the advise about related issue at below forum.\nhttp://forum.vuejs.org/topic/957/how-to-avoid-evaluating-expression-warning-for-plugin-author\nThis issue is occuring when we using development version of vue.js\nIn development of app, we can avoid this issue by setting the Vue.config.warnExpressionErrors = false.\nI'll try to write the README.md later. :smile_cat: \n. fixed\nhttps://github.com/vuejs/vue-validator/releases/tag/v2.0.0-alpha.12\n. ah, sorry ... :bow: \nI published now. :cat: \n. Sorry, vue-validator 1.x don't support.\nThe vue-validator 1.x cannot run the in 1.0.x because it use deprecated API of Vue.\nI hope to you will upgrade vue-validator 2.0.0-alpha. :cat: \n. Thank you for reporting !!\n\nThis module doesnt work with 1.0.11.\n\nPlease provide the reproduction code by jsfiddle, codepen, etc.\n\nThe exemples are totaly out of date and the documentation is really light\n\nSorry. :smile_cat: \nEvery time I publish vue-validator, I'll improve the documentation.\n. inactive\n. oops, this is the bug.\nI'll try to fix at next version. :smile_cat: \n. Thank you for your reporting :smile_cat: \nCan you comment with English ?\n. Thanks !!\nI understood.\nSorry. \nI'll try to fix now. :smile_cat: \n. Related #35 #103 \n. Sorry, I cannot find a solution to this issue yet.\nThis issue is difficult.\nI'm asking the advise about related issue at below forum.\nhttp://forum.vuejs.org/topic/957/how-to-avoid-evaluating-expression-warning-for-plugin-author\nThis issue is occuring when we using development version of vue.js\nIn development of app, we can avoid this issue by setting the Vue.config.warnExpressionErrors = false.\nI'll try to write the README.md later. :smile_cat: \n. Yes, me too.\nI agree with you.\nThis solution is not good solution.\nI will ask @yyx990803 to an opinion later. :smile_cat: \n. fixed\nhttps://github.com/vuejs/vue-validator/releases/tag/v2.0.0-alpha.12\n. Please provide more stack trace info.\n. Thanks !!\nSorry, I did not comment enough to you. \nUncaught TypeError: Vue.parsers.directive.parse is not a function\nI want to know call stack info at the your browser. :smile_cat: \n. Thank you for your call stack reporting !!\nI checked your reporting.\nThis problem has occurred because vue-validator 1.x takes advantage of the incompatible internal API.\nI recommend you will use the vue-validator 2.0-alpha later. :smile_cat: \n. Thanks for your reporting !!\nI'm updated example code. :smile_cat: \n. Thank you for your feedback!\nI'll try to support recently. :smile_cat: \nplease wait.\n. Published v2.0.0-alpha.9\nhttps://github.com/vuejs/vue-validator/releases/tag/v2.0.0-alpha.9\n. Thank you for your feedback :smile_cat: \nCan you provide the sample codes (with jsfiddle or codepen or etc)?\n. @lmnsg \nThank you for your codes :smile_cat: \nI checked your code.\nI guess that occurred the following error.\nUncaught TypeError: value.toString is not a function\nCan you provide me the your stack trace when occured error at your enviroment ? \n. close inactive\n. You should be specified validator element directive in template of mobile.vue :smile_cat: \nhtml\n<template>\n  <validator name=\"validation\">\n    <form>\n      <input class=\"phone_username\" v-validate:username=\"['mobile']\">                                \n      <span class=\"text-danger\" v-show=\"$validation.username.mobile\">* Need correct mobile number! </span>\n    </form>\n  </validator>\n</template>\n. > the name can't use the \"-\" to link the word such as \"signup-validation\".\nThis is the specification.\nSorry, I did not write about the name attribute detail spec.\nI'm going to write the API document later.\nAs well as the vue.js component, the name attribute also might support the kebab-case.\nPerhaps, I'll try to support it. :smile_cat: \n. Thanks !! :smile_cat: \n. Thank you for your feedback! :smile_cat: \nI checked your code.\nhttps://jsfiddle.net/kazupon/zqs5xgmn/1/\nthe above code, I think that there is no problem.\nCan you provide the code to us ?\n. Thank you for your reporting!!\nI guess that this issue related #35 #103 #111 \nThis issue occur the error when you are using development build of vue.js.\nThis issue does not occur the error in the standalone minified build of vue.js.\nwe can avoid this issue by setting the Vue.config.warnExpressionErrors = false.\n. This warning error is difficult to avoid perfectly in vue-validator.\nThis warning error is occuring to access the validation property that not initialize.\nThis warning error is difficult to avoid perfectly.\nWe can avoid to use computed property.\nexample:\njs\ncomputed: {\n  userValid: function () {\n    return this.$validation.user && this.$validation.user.valid ? '' : 'error'\n  }\n}\n. Many thanks !!\nI'm glad to your feedback. :smile_cat: \n. Thank you for your feedback. :smile_cat: \nThe $activateValidator() meta method is destroyed when once called.\nThe Lazy initialization of validator  with $activateValidator() is expected in once only initialization usecase (ex: ajax data fetching, after that these data setting vue instance).\n\nIn my page ,I used one component to load create/update page.\n\nHowever, there is something we a little curious about your usecase.\nWould you tell us about it ?\n. Thank you for your feedback.\nI want to understand about your use-case more.\nCould you provide the minimum example codes ?\n. I'll try to implement at v3.0.\n. Sorry, :bow: \nvue-validator 1.x syntax is not compatible for 2.0-alpha or later, because vue-validator 1.x don't work for vue 1.0\nYou need to re-implement with new 2.0 syntax. :smile_cat: \n. Thank you for your feedback.\nCould you provide the call stack of Uncaught TypeError: Vue.parsers.directive.parse is not a function, and JavaScript code ?\n. Thank you for your reporting.\nI checked the your jsfiddle.\nI found the mistake the vue-validator.min.js setting at external resource.\nCould you check the your jsfiddle once again ? :smile_cat: \n. @IntellectProductions \nCould you please provide the version info (vue, vue-validator) ?\n. Close (Inactivity)\n. In 2.0-alpha.9, I don't implement  the local custom validatior registration yet.\nI have the plan that support the local custom validators. \nPlease wait. :smile_cat: \n. > When adding a validator for a list, is it possible to name the v-validator with $index as suffix, say, v-validator:username-0, v-validator:username-1, ...?\n\nOtherwise, if name all the validators with uinque name, maybe the validators can be treated as an array?\n\nSo far, vue-validator cannot name your desired, and validators cannot be treated as array.\nCurrently, I think that you can avoid this issue by using wrapped validator with component.\nHowever, vue-validator might be support the convenient syntax for list.\nCould you provide the pseudo code ?\n\nCurrently, the validator for list rendering behaves weird. Seems that the validator gets lost when the list rerendered.\n\nThank you for your reporting.\nI checked your jsfiddle.\nAs you say, vie-validator is running the strange behavior.\nI'll try to fix. :smile_cat: \n. Related #173\nMaybe, you need to wrap the $index with method.\n. released v3.0.0-alpha.1\nhttps://github.com/vuejs/vue-validator/releases/tag/v3.0.0-alpha.1\nsee the example\n. related #94 \n. published v2.0.0-alpha.10\nhttps://github.com/vuejs/vue-validator/releases/tag/v2.0.0-alpha.10\n. Thank you for pull request.\nI've published the now.\nhttps://github.com/vuejs/vue-validator/releases/tag/v2.0.0-alpha.11\nPlease try it. :smile_cat: \n. Related #35 #103 #111 \n. No problem :smiley_cat: \nEnjoy vue.js. :smile_cat: \n. @tylersnyder\nThank you for your reporting!!\nCan you provide the reproduction codes with jsfiddle or etc please ?\n. @tylersnyder \nThank you for your jsfiddle code.\nI hope that your project goes well. :smiley_cat: \n. You can use 'Vue.use' at the entry point.\n. Thank you for your feedback.\n\nAre there any reasonable ways how to pass validator to child component? \n\nI recommend that you should wrap the validator element directive (<validator>) to your component (<child-component>) that has validatable element (e.g, input, checkbox), because validator element directive will check validatable elements of internal, and dynamically set the validation result to validator scope (prefixed with $).\n. Close (in-activity)\n. Thank you for your advise \ud83d\ude09\n. Thanks !!\n. v-if directive  is terminal directive , and it is higher than v-validate directive. for this reason, when you specify v-if directive on the input tag which was specified v-validate directive, it does not work.\nI came up with solution this issue.\nhttps://jsfiddle.net/kazupon/yoobf7zd/1/\nI hope my solution is useful for you. :smile_cat: \n. I'll try to implement at v3.0.\n. released v3.0.0-alpha.1\nhttps://github.com/vuejs/vue-validator/releases/tag/v3.0.0-alpha.1\n. > it looks like the field part of the directive is optional:\nSorry poor documentation.\nIf you want to use the field part of the directive is optional, you need to use field attribute.\nhttps://github.com/vuejs/vue-validator#attribute\n\nIs this a change from 1.4.4 to 2.0.0? Just started using this great vue module so I'm not familiar much with the history.\n\n2.0.0-alpha (or later) is developed with full-scratch. for this reason, not compatible with 1.4.4\nHowever, that\u2019s what do not matters to you. also because 1.4.4 don't work on the vue.js 1.0\n\nAlso, while I'm asking questions, is there every a possibility of validator name conflicts?\n\nif you use validator scope per vue instance, no problem. \n. See the https://github.com/vuejs/vue-validator#top-level-validation-properties\n\nmodified: if modified field exist even one in validate fields, return true, else false.\n\nYou can reset the modified of top level, when you reset all fields value.\nDo you want to reset with API  ?\n. Thanks for your example codes!\nI understood your request.\nI'll try to add reset API. :smile_cat: \n. Yes.\nYou can use the validation with v-validate inside v-for directive.\nExample: \nhttps://github.com/vuejs/vue-validator/blob/dev/test/specs/directives/validate.js#L49\n. Thank you for your providing codes :smile_cat: \nI tried to reproduction 'Uncaught TypeError: Cannot read property 'price' of undefined' error, However, I could not reproduction.\nCan you provide the the following   info to me please ?\n- vue.js version\n- vue-validator version\n. Thanks for your explain :smile_cat: \n\nCan we work with v-if to add and remove a field from the $validation object?\n\nYes, when we used the v-if, we can remove / add (toggle like) from $validation scope.\nI checked the your providing code, and I found the your mistake.\n\n\n\nThe value of radio button is not boolean value but string value.\nYou should use the checkbox (single).\nexample:\nhttps://jsfiddle.net/kazupon/ok2vaj3g/3/\nHowever, in the above example, I found the bug. :scream: \nI'll try to fixed.\n. Sorry, I made a mistake.\nPlease use v2.0.0-alpha.15 :arrow_up: \nhttps://github.com/vuejs/vue-validator/releases/tag/v2.0.0-alpha.15\n. Close (in-activity)\n. /ref #138 \n. Thanks for your reporting!\nI'll try to check your jsfiddle.\n\nHow can I have the previous behaviour, which validated each keystroke?\n\nSorry, I could not understood.\nI hope that you would provide the about the concrete use-case. :smile_cat: \n. Thanks for your concrete feedback!\nI'll try to consider it. :smiley_cat: \n. I'm tracing the source of the problem now.\nI feel that this issue (v-for and v-model using case) is difficult. in this reason, it takes a little time to fix.\n:bow: \nIf you want to resolve this issue right now, i hope that you will resolve the other way.\n. Thank you very much !! :smiley_cat: \nI found the strange behavior.\nhttps://jsfiddle.net/kazupon/0evyqncj/7/\nIn the above jsfiddle example codes, I don't use the vue-validator.\nv-validate is implemented with terminal directive.\nI have a spec of terminal directive that I don't know about the behavior of terminal directive.\nI'll try to ask the evan.\n. Thanks for your reporting!\nCan you provide the minimum reproduction codes (jsffidle, codepen, etc ...) please ?\n. related #142 \n. Thanks for your reporting ...\nOh ... :scream: \nSorry.\nI'll try to fix.\n. release v2.0.0-alpha.16 :arrow_up: \nhttps://github.com/vuejs/vue-validator/releases/tag/v2.0.0-alpha.16\nplease try it. :smiley_cat: \n. related #124 \nvue-valudator 1.x is not working with VueJS 1.x. Use vue-validator 2.x.\nhttps://github.com/vuejs/vue-validator/releases\nYou can use the below installation\nhttps://github.com/vuejs/vue-validator#development-version\n. Hmm,  in currently, I have a no idea.\nThis behavior is occured, because vue-validator is defining the validation scope of vue-validator dynamically at the compilation.\nAlso, The watch option is configured at vue instancing before than the compilation of vuejs.\nvue-validator maybe support special option like watch option.\n. @kzima @lazabogdan \nThanks !!\nThese both approches seems like a good idea. :+1: \n\nalternatively we can have some prop on the  tag, maybe something like <validator :result.sync=\"syncedProp\">.\n\nI think that this approche user-friendly declarative interface like prop binding of component.\n\nBut it could be solved with events only if the validator itself would emit a valid/invalid event for the entire instance. \n\nI think that this approch can program with javascript freedom.\nI'll try to consider these. :smiley_cat: \n. Sorry ...\nThanks your reporting!!\n. related #141 #142 \nPlease use v2.0.0-alpha.16 :arrow_up: \nhttps://github.com/vuejs/vue-validator/releases/tag/v2.0.0-alpha.16\n. Thank you for your reporting!\nCan you provide the reproduction code (e.g. jsfiddle) please?\n. Thanks for your reproduction code.\nI changed the your vue-validator specified with standalone js file to latest version.\nhttps://jsfiddle.net/kazupon/yma52y42/1/\nCan you update reproduction setting please ? \n. Thanks\n. You should not use minLength but minlength.  :smiley_cat: \n. oh, sorry\nI didn't find the mistake document.\nCan you tell me the about it ? \n. > My expectation is if the validation failed, the corresponding value should not be written to the vm.\n\nI think it may be difficult if we don't change v-model code.\n\nYeah, \nI think so, too.\nIf we need to support it, maybe I think it develop the v2.0 release later, but we will need to help from @yyx990803 \n. I'll try to implement at v3.0.\n. Currently, vue-validator cannot the re-evaluate for single input manually.\nI'll try to consider it. :smiley_cat: \n. Sorry.\nIt was not over yet. \nTo resolve this issue, We need to improve the vue.js\nI push the PullRequest to vuejs/vue repositry, I'm waiting the it.\nhttps://github.com/vuejs/vue/pull/2272\n. Sorry, poor documentation.\nYour custom validator function, first argument is passed the field value, second argument is passed the rule value has been  specified with v-validate.\n. In this case, The v-el not related.\nv-validate directive not support the input[type=\"file\"] form element yet.\nI'll try to support in v2.0\n. I recommend that you should use the state management architecture as flux / reduex, because if you use validation result from outside component or outside vm, your application become complex.\nthe following the vuex example code:\nhtml\n<input v-validate:msg @valid=\"updateValidMessage\">\njavascript\n// ...\nmethods: {\n  updateValidMessage: function () {\n    store.actions.updateValidMessage('msg', true)\n  }\n}\nReferences:\n- State Management\n- Form Handling\n- Event\n. Close (inactivity)\n. Thanks !! \n. Sorry, I don't implement the async validation yet in 2.0.0.alpha, because I'm developing from full scratch.\nI'll plan to develop the async validation soon. :smiley_cat: \n. I'll support to the Promise and like v1.4* function(resolve, reject). :smiley_cat: \n. @tylersnyder \nPlease wait  :smiley_cat: \n. Yes!\nYou can reset the validator on form submission :smiley_cat: \nhttps://jsfiddle.net/kazupon/Lbcgvym2/7/\n. Please install 2.0.0-alpha.20\n. Thank you for reporting!!\nCan you provide the minimum reproduction code with jsfiddle please ?\n. Thank you for your jsfiddle code providing !!\nI checked your code.\n\nthe fiddle is setup to simply add errors via the this.$setValidationErrors(); call, but strangly jsfiddle is reporting that function is undefined???\n\nHmm ...\nJsdeliver is strange ...\nhttps://cdn.jsdelivr.net/vue.validator/2.0.0-alpha.21/vue-validator.min.js\njsdelivr is delivering the v2.0.0-alpha.20 as it should be v2.0.0-alpha.21 ...\nI forked your jsfiddle, and I fixed.\nhttps://jsfiddle.net/kazupon/rv83j7Lt/7/\n\nonly problem is this isnt updating the view with the errors?\n\nI also confirmed the your reporting issues at the above forked jsfiddle code.\nI think that the behavior of matrial.js is affecting the vue-validator.\nBy the inspect element of brower debugging tools using, You can check the error message that is rendered with v-for.\n(When you remove the mdl-textfield__error, You can confirm it)\nTo avoid this issues, I found the error message is rendered correctly by using validator-errors component.\nhttps://github.com/vuejs/vue-validator#error-message-enumeration-component\nI recommend the it use.\n. related #96 \n. Sorry, In currently version, vue-validator can't use the validator was  defined at parent vm instance. \n. Close (exist #96)\n. Sorry, I don't have IE10 browser.\nCan you provide the stack trace please ?\n. @itopizarro \nThank you for your hint.\nI'll try to fix. \n. @sintario \nThanks !!\n. I fixed this issue.\nPlease build the development latest version, and try it.\n$ git clone https://github.com/vuejs/vue-validator.git node_modules/vue-validator\n$ cd node_modules/vue-validator\n$ npm install\n$ npm run build\n. I'll plan to release the v2.0.0.beta.1 version.\nAt that moment, I'll release with these changes/fixes.\n. @arasharg \nCan you check the vxe-vadalitor version please ?\nI think that you use still the old version.\n- your screen stack trace capture image\nObject.getPrototypeOf(SelectValidation)\n- v2.0.0-beta.1\n  https://github.com/vuejs/vue-validator/blob/dev/dist/vue-validator.js#L1246\n. Thanks !!\n. Sorry, I could not understand.\nCan you provide the minimum example codes please ?\n. Close in-activity\n. Thanks !! :+1: \n. @codylandry \nThank you for your reporting !!\nSorry for the late response. \nI checked the this issues.\nhttp://jsfiddle.net/kazupon/po0zsgxr/5/\nI'll try to fix. :smile_cat: \n. > http://jsfiddle.net/cobby4h3/1/\nI think that jsdelivr is strange ...\nhttps://cdn.jsdelivr.net/vue.validator/2.0.0-beta.2/vue-validator.min.js\nI hosted 2.0.0.beta.2 with dropbox.\nhttp://jsfiddle.net/kazupon/xkvs4gnv/3/\nIn the above jsfiddle, it works.\n. You need to set <option value=\"\">--- select --></option>.\n. > I think the validator should know that nothing is selected by seeing that there are no selected options?\nI want to know that use-cases.\nCan you provide with the example code please ?\n\nCould you point me to the bit of code that looks for this, maybe I can issue a PR?\n\nYes, You can push the PR. I'll be anytime waiting for your PR. :)\n. Close (in-activity)\n. ah, sorry ...\nYou can use the exposed vue instance.\nhttps://github.com/vuejs/vue-validator#vm-property\n. In the beta version later,  validation function context is not vue instance, but validation instance.\nI think that this breaking change is not problem, because it's possible with vm property and el property exposed by vue-validator.\n. @trevorgehman \nHi !\nI could not confirm this issue at the below jsfiddle, in IE10/11.\nhttp://jsfiddle.net/kazupon/bbv0bmtw/3/\nCan you provide the reproduction code with jsfiddle (or other) please?\n. Can you provide the reproduction codes with jsfiddle(or other) please ?\n. You need to change field to :field, and wrap the n value with method.\nSee\nhttp://jsfiddle.net/kazupon/v0gk43m4/2/\n. Sorry, The documentation is bad example ... :disappointed: \nI'll try to fix. :smiley_cat: \nhttps://github.com/vuejs/vue-validator#attribute\n. Related #173 \nSorry, README.md is bad documentation ...  :disappointed: \nMaybe, you need to change field to :field, and wrap the $index with method.\nSee:\nhttp://jsfiddle.net/kazupon/v0gk43m4/2/\n. Close (non-activity)\n. Hi !!\nThank you for your reporting!!\nCan you provide the repro code with jsfiddle or webpackbin or etc please ?\n. Close (in-activity)\n. You can fork the jsfiddle template, and add the vue-validator.js at external resouces.\nhttp://jsfiddle.net/5sH6A/\n. Thank !!\n. Please upgrade the vue.js version to 1.0.20\nSee details:\nhttps://github.com/vuejs/vue/issues/2563\n. I'll try to implement at v3.0.\n. I support this feature at v2.1.0\nhttps://github.com/vuejs/vue-validator/releases/tag/v2.1.0\ndocs:\nhttp://vuejs.github.io/vue-validator/en/classes.html\n. I'll try to implement at v3.0.\n. Yeah, In v3, I'll plan to implement.\n. released v3.0.0-alpha.1\nhttps://github.com/vuejs/vue-validator/releases/tag/v3.0.0-alpha.1\nIn 3.0 later, validation is default manually.\nwe can use validation with event handling (blur/focusout, focus/focusin, etc) and any timing.\n. @nblackburn Yes, I'm fixing now.\n. Sorry, In currently version, vue-validator can't use the validator was defined at parent vm instance.\nMaybe, I'll try to plan at next major version releasing.\n. @xjchengo \nThat's look good. \ud83d\udc4d \nIf you will try to challenge this feature, I'm waiting for your PR. \ud83d\ude3a \n. It look good to me. \ud83d\ude3a \n. @incraigulous \nI'll plan to develop vue-validator v3.0 with full-scratch while maintaining as much as possible the compatibility, because the rendering architecture (virtual dom) of vue 2.0 is different from vue 1.x.\nHowever, In vue 1.x,  I think that support for child-component.\n. @incraigulous \nNo, I don't merge $dispatch commuication. In v3.0, I have a idea that will plan to validator element by using the component of vue.js\n. I'll try to implement at v3.0.\n. Thank you for your feedback!!\n\nUseful when trying to display a single message at a time.\n\nSorry, I could understand.\nCan you provide the minimum example code please ?\n. Sorry, I cannot understand chinese...\nCan you use the english please?\n. Thank you for your feedback \ud83d\ude3a \n\nWhen use vue-validator work with vue-router, vue-router has to been loaded after vue-validator, otherwise will report error.\n\nCan you provide the reproduction codes with jsfiddle (or other) please?\n. Thank you for your great reporting!!\nHmm, In my environment (commonjs), I could not confirm this issue...\n. Related https://github.com/kazupon/vue-i18n/issues/28\n. In my enviroment, I reproduced this issue.\nThis issue occured when execute router#start method in advance of installation with Vue.use when we use vue-router plugin.\nWe must install with Vue.use in advance of router#start.\n. I checked your reproduction codes.\njs\nimport router from './router'\nrouter#map had been run inside router.js in advance of vue-validator installing.\nI have found that the component is evaluated with vue-router when I confirmed it.\nWe must install it with Vue.use in advance of initializing vue-router.\n. @sqal  If you could resolve this issue, please tell me.\nI'll try to update the documentation. \ud83d\ude3a \n. In this case, validator name event is conflicted with scope name\nI recommend that you are to be named other validator name (e.g. validator1).\n. Thanks!!\n. Thank you for your PR!!\nSorry, I updated just now. \ud83d\ude47 \nPlease solve the conflict. \n. Yeah!! I hope the PR \ud83d\ude3a \n. chinese translation starting \nhttps://github.com/vuejs/vue-validator/pull/196\n. Thank you very much!!\nIt's a okay \ud83d\ude3a \n. @hypermkt \nThank you for your japanese translation PR \ud83d\udc4d \nI'm waiting until it is finished. \ud83d\ude3a \n. Thank you for your reporting!!\nI could not confirm this issue.\nCan you provide the reproduction with jsfiddle or other please ?\n. Oh!! Great!!  \ud83d\udc4d \n. recently, in v2.1, I added the new feature and documentation.\nhttps://github.com/vuejs/vue-validator/blob/dev/docs/en/classes.md\n. Thanks \ud83d\udcaf \n. Thanks!!\n. Thanks!!\n. I think that you can use the below code:\nhtml\n<ul>\n  <li v-for=\"item in items\">\n    <validator name=\"validation{{$index}}\">\n    ...\n    </validator>\n  </li>\n</ul>\n. I think that you can use the below code:\nhtml\n<div v-for=\"error in getValidationErrors($index)\">\n    <small class=\"text-danger\" style=\"display: block;\">@{{error.message}}</small>\n</div>\njs\nnew Vue({\n  ...\n  methods: {\n    getValidationErrors: function (index) {\n      return this['$validation' + index].errors\n    }\n  },\n  ...\n})\njsfiddle:\nhttp://jsfiddle.net/kazupon/9zp56d8h/1/\n. I seem that your example code is incorrect.\n- bad\nhtml\n<validator name=\"validation@{{itum.id}}\">\n- good\nhtml\n<validator name=\"validation{{itum.id}}\">\n. hmm...\nCan you provide the minimum reproduction codes with jsfiddle (or jsbin, etc) please ?\n. Thank you for reproduction code providing !!\nI think that you can avoid with the below code\nhttps://jsfiddle.net/kazupon/z2t2ztq2/1/\n. Enjoy vue.js \ud83d\ude3a\n. sorry, i could not understand your code ...\ncan you provide the minimum reproduction code please?\n. You can avoid with the below\nhttps://jsfiddle.net/kazupon/1zLpwbju/1/\n. You can avoid this issue with the the below:\nhtml\n<p v-if=\"$form['name' + $index] && $form['name' + $index].required\">Please enter a number.</p>\nThe validation results is added the dynamically, also is removed.\nThis issue is occuring because v-if have priority over other directives.\nI recommend use the validator-errors.\nhttp://vuejs.github.io/vue-validator/en/errors.html\n. Thanks!!\n. Thanks!!\n. thanks !!\n. thanks!!\n. \ud83d\udc4d \nThanks!!\n. thanks!!\n. thanks !!\n. This is the spec.\nI'll try to improve.\n. I'll try to implement at v3.0.\n. released v3.0.0-alpha.1\nhttps://github.com/vuejs/vue-validator/releases/tag/v3.0.0-alpha.1\nIn 3.0 later, validator-errors component is deprecated.\nWe can implement with using errors validation properties and component.\n. Thank you for your PR!\nCan you push the unit tests to repo please ?\n. Good job! \ud83d\udc4d \nThanks!!\n. > Should validator be visible in VueDevtools or not? It's not now.\nvalidator don't integrate vue-devtools.\n\nI tried to put v-validate but after having no success and v-if=\"$eventVal.valid\" is totally not working,\nI removed everything to just check if anything is working with vue-validator.\n\nCan you provide the minimum codes please?\n. Sorry, In my enviroment, I tried to   reproduce, but I could not confirmed.\nI hope that you provide the reproduction info (minimum codes, error call stacks,etc ...) to me.\n. > I can even send you whole project if you want? Any email ?\nI hope that provide web code sharing tool (jsfiddle, webpackbin, etc)\n. That's okay \ud83d\ude3a \n. Thanks!!\n. @frangeris \nYou need to specify the error message of reuiqred with v-validate directive\nhttps://jsfiddle.net/kazupon/qLvb2ob3/1/\n. You can avoid this issue with initial attribute and setValidationErrors meta method.\nhttp://jsfiddle.net/kazupon/3yLk0drr/4/\nreference:\n- initial attribute\n  http://vuejs.github.io/vue-validator/en/timing.html\n- setValidationErrors meta method\n  http://vuejs.github.io/vue-validator/en/api.html\n. Hmm, we need to improve the manually validation. I'll try to improve it.\n. I'll try to implement at v3.0.\n. released v3.0.0-alpha.1\nhttps://github.com/vuejs/vue-validator/releases/tag/v3.0.0-alpha.1\nIn 3.0 later, validation is default manually.\nwe can avoid  with using validate and reset methods.\n. /ping @hypermkt \nI fixed en docs.\nhttps://github.com/vuejs/vue-validator/commit/b48759ed2e38309983d63205d17ce9b98d76953b\n. Oh, You're almost there!  \ud83d\ude3a \n. Oh great!!\nLGTM \ud83d\udc4d \n. published japanese translation docs\nhttp://vuejs.github.io/vue-validator/ja/index.html\n. Thank you for your feedback.\nThis is the spec.\nrequired don't need rule.\nSee:\nhttp://vuejs.github.io/vue-validator/en/syntax.html\n. if you set the false to reuiqred rule, it is the same as behavior when set the true.\nif you need to  expect the behavior when set the false, I recommend that you don't use the required validator.\n. vue 2.0 is still pre-alpha.\nvue-validator cannot support as well as other plugin (vue-router,  etc ...)\nplease use the vue 1.x\n. Thank you feedback!!\nYeah!! You're right \ud83d\ude03 \nWe need to support these methods ($resetValidation(), $validate(), etc,).\n. > npm run dev\nI use the to develop feature driven  (prototype browser base) development. I recommend that you develop with using the npm run dev-test or npm run unit.\n\nWhen I run npm run dev-test in Windows 8 and open the test page in browser, console shows:\n\nI have not been able to confirm whether it is possible development at windows yet.\nif you want to develop soon, I recommend that you develop with using vagrant or docker at the OS like the UNIX environment.\n\nand some esline errors:\nC:\\Users\\Xujian\\Projects\\xjchengo-vue-validator\\test\\specs\\validators.js\n  171:38  error  Unnecessary escape character: \\'  no-useless-escape\n  177:38  error  Unnecessary escape character: \\\"  no-useless-escape\n\nand \n\nBut all top level event related tests failed with:.\nError: timeout of 2000ms exceeded. Ensure the done() callback is being called in this test.\n    at eval (eval at  (specs.js:8427:9), :4190:19)\nI found that handler.apply at https://github.com/vuejs/vue-validator/blob/dev/src/validator.js#L384 just return the event handler. Handler must be applied twice to make it executed.\n\nI'll try to check the later.\nThanks!!\n. I'll try to implement at v3.0.\n. released v3.0.0-alpha.1\nhttps://github.com/vuejs/vue-validator/releases/tag/v3.0.0-alpha.1\nIn 3.0 later, valuable method (validate, reset, etc...) is scoped with validity component.\n. You need to implement custom validation that return a promise. \nhttp://vuejs.github.io/vue-validator/en/async.html\nIn the above partials code, You don't return a promise.\nIn real code, You return a promise, don't you?\n. Thank you for your feedback!!\n\nWhy the `Vue.http return different result between validators and methods.\n\nHmm, These difference is context.\n- fucntion of validators: validator context\n- function of methods: Vue instance context\nHowever, I think that these difference don't effect to async validation.\nI change async example with using vue-resource, and tried to reproduce, but I could confirmed this issues.\nCan you reproduce the minimum codes (not real application codes)?\nIf it is possible, I hope that you provide the it with gist.\n. Thank you for your feedback.\nI'll try to consider improvement of validator context.\nAlso, I'll try to update async validation section of the documentation.\n. Thanks!!\n. Thank you for your feedback!\nI'll try to plan improvement about validation timing or behave. \ud83d\ude3a \n. I'll try to improve at 3.0\n. released v3.0.0-alpha.1\nhttps://github.com/vuejs/vue-validator/releases/tag/v3.0.0-alpha.1\nIn 3.0 later, validation is default manually.\nwe can use validation with event handling (blur/focusout, focus/focusin, etc) and any timing.\n. ref #217 \nThe required validate whether is input field of form.\nThe required is not toggle of validation.\n. release v2.1.2\nplease try it!\nhttps://github.com/vuejs/vue-validator/releases/tag/v2.1.2\n. Thank you for your reporting!!\nI tried confirmed, however I could not  reproduce the your reporting behavior.\nhttps://jsfiddle.net/kazupon/gcq3dugq/6/\nCan you provided the minimum reproduction codes with jsfiddle or jsbin please ?\n. In-activity\n. > 1.\n\nI have a div with EDIT FORM. It has v-if=\"elementInEdit\".\nThere is only one validator for standard text field - required.\nWhen I first time open it - it is working. Next time when conditions will change and it will be gone and \n\nFixed.\n\n\n$validator is not available outside\n\n\nIn currently, when we disabled validator with v-if, and enable, it does not work at outside validator because limited of 2.x architecture.\nI'll try to improve this issue for 3.x (Vue 2.0 compatible)\n. released v3.0.0-alpha.1\nhttps://github.com/vuejs/vue-validator/releases/tag/v3.0.0-alpha.1\n. Thank you for your reporting!!\nI found your mistake.\njs\nsetTimeout(function() {\n  this.foo = '2'; // `this` context is \"function\"\n }, 500);\n. one more thing, I found the your mistake about validation rule.\nplease, see the below:\nhttps://jsfiddle.net/kazupon/0qbxysyh/3/\n. Thank you for your reporting!!\nYou can avoid this issue with detect-blur=\"off\".\n. The vue-validator should not disable the touched because occur runtime error when is re-rendering if use the touched in the template.\nThe other is the same.\n. yeah!\nthe $validation.touched become always false\n. Why do you think incorrect about it ?\nPlease tell me detail explanation.\n. Thank you for your feedback! \ud83d\ude3a \nI checked your code.\nWhy do you use v-validate as duplication fields ?\nSorry, I could not understand your comment.\n. release v2.1.2\nplease try it!\nhttps://github.com/vuejs/vue-validator/releases/tag/v2.1.2\n. This is works properly.\n```\n$ node\n\nvar arr = ['foo is required', 'bar is required']\nundefined\narr.sort()\n[ 'bar is required', 'foo is required' ]\n```\n. Thanks your explanation!\n\nIn current verison,\nThe top-level validation errors properties ($validation.errors) can not expect validation based on user input order.\nIf you need to expect it, use the each field errors. e.g.\nhtml\n<!-- username -->\n<span>{{ $validation.username.invalid && $validation.username.errors[0].message}}</span>\n<!-- password -->\n<span>{{ $validation.password.invalid && $validation.password.errors[0].message}}</span>\n. I seems it's okay as well.\n. Thank you for your feedback!\nCan you provide the minimum reproduction code with jsfiddle (or jsbin, codepen...) please?\n. In-activity\n. Thank you for your feedback.\nSorry, I could understand your explanation.\nIf you can reproduce this issue, Can you provide the reproduction code please?\n. thank you for your feedback.\nI'll try to add explain.\n. Thank you for your reporting!\nI tried to reproduce this issue, but I could not.\nCan you provide the minimum reproduction example code with jsfiddle(or jsbin, codepen...etc) please?\n. Sorry for late response.\nI checked the your jsfiddle code.\nThis is the expectable behavior of vue-validator.\n.>BTW, is there a way to add default message for those rules already in vue-validator(required, maxlength, etc.)?\nYou can the set the below.\njs\nVue.validator('required', {\n  message: function (field) { // string or function\n     return 'required \"' + field + '\"' \n  },\n  check: Vue.validator('required')\n})\n. You can use the binding syntax. (e.g. :field=\"field.name\")\n. related #232 \n. I'll try to add the docs build-in validator.\n. You can use $validate the below.\nhtml\n<validator name=\"validation\" @submit=\"onSubmit\">\n  <input type=\"text\" detect-change=\"off\" detect-blur=\"off\" v-validate:username=\"{ required: { rule: true, initial: 'off' }, minlength: { rule: 8, initial: 'off' }}\">\n  <input type=\"submit\" value=\"submit\">\n</validator>\njs\nnew Vue({\n  methods: {\n    onSubmit: function (e) {\n      this.$validate('username', true, function () {\n        console.log('validate done !!')\n      })\n      if (this.$validation.invalid) {\n        e.preventDefault()\n      }\n    }\n  }\n})\nsee the docs \nhttp://vuejs.github.io/vue-validator/en/api.html\nhttp://vuejs.github.io/vue-validator/en/timing.html\n. @webcrazy \nThank you for your question.\nThe answer of is as above\n@Nandiin \nThanks!!\n. This is intended feature.\nThe v-validate-class only allowed on ancestor node of validated DOM element.\n. Thank you for your reporting!\nI'll try to fix it.\n. sorry, I can not see the light at this issue. \ud83d\ude47 \nbecause I'm developing the vue-validator v3 for vue 2.0\n. released v3.0.0-alpha.1\nhttps://github.com/vuejs/vue-validator/releases/tag/v3.0.0-alpha.1\nIn 3.0 later, we can use the classes props of validity component.\nsee the example\n. In current version, The $validate don't  return the promise. However, You can use the cb argument.\nSee the document.\nhttp://vuejs.github.io/vue-validator/en/api.html#validate-field-touched-cb-\n(sorry, bad sample ...)\nthe below demo (fork the your demo and updated):\nhttps://jsfiddle.net/kazupon/7pxyayqj/2/\n. released v3.0.0-alpha.1\nhttps://github.com/vuejs/vue-validator/releases/tag/v3.0.0-alpha.1\nWe can use the 'Vue.config.validator.classes'.\nSee the example\n. updated description.\n. update description.\n. update description\n. no, I'm still working.\nplease wait :bow:\n. updated description.\nI'll try to write example codes and ready for pre-alpha version releasing.\n. released v3.0.0-alpha.1\nhttps://github.com/vuejs/vue-validator/releases/tag/v3.0.0-alpha.1\n. @joe434200 \nsorry, no docs.\nhowever, there are some example codes. see the here\n. related issues\nhttps://github.com/vuejs/vue-validator/issues/217\n. Sorry for my late reply.\nThanks for your reporting!\nI'll try to fix in v3.\nIn v2, You can avoid with the custom validator.\nSee the below documentation URL\nhttp://vuejs.github.io/vue-validator/en/custom.html\n. Yeah, Yor're right.\nhttps://jsfiddle.net/kazupon/8m1d2847/2/\n. Hi! \ud83d\ude3a \nCannot use the all validators with array syntax.\nYou need to object syntax in multiple validators.\nhtml\n...\n<input type=\"text\" v-validate:field1=\"{ required: true, minlength: { rule: 10 }, maxlength: { rule: 29 } ... }\">\n...\nsee the validator syntax\n. If you don't use the second argment of check, you should use the dummy rule.\nIn the above your example, you can use the dummy rule due to check function of numericandurl` are defined the static rule.\n. Thank you for your reporting!!\nCan you provide the minimum reproduction code with jsfiddle or other please?\n. Close (in-activity)\n. Thanks!! \ud83d\ude3a \nI fixed the https://github.com/vuejs/vue-validator/commit/0d87d51e6cc972f59363a506d62427f775ebcb2b\n. related issue\nhttps://github.com/vuejs/vue-validator/issues/220\nSorry, The $validate API doesn't support the multiple validation.\nI'll try to support in v3\n. You can use the $setValidationErrors.\nSee the detail: \nhttp://vuejs.github.io/vue-validator/en/api.html#setvalidationerrors-errors-\n. Close (in-activity)\n. Thank you for your feed backing!!\nIn v3, I'll try to consider your feedback. \ud83d\ude09 \nI think that the above complex custom validation code can avoid the splited custom validations.\nthe below code:\nThe below example code:\nhtml\n<input type=\"text\" v-validate:field1=\"{\n  required: true,\n  custom1: { rule: ... },\n  custom2: { rule: ... },\n  ...\n}\">\njs\nnew Vue({\n  validators: {\n    custom1: {\n      message: 'validation error1',\n      check: function (val) {\n        // something simple validation \n      }\n    },\n    custom2: {\n      message: 'validation error2',\n      check: function (val) {\n        // something simple validation \n      }\n    },\n    ...\n  }\n})\n. Thank you for your PR!\nIt seems that you define the validate method for multiple only.\nI hope that implementation of  multiple validate method.\n. released v3.0.0-alpha.1\nhttps://github.com/vuejs/vue-validator/releases/tag/v3.0.0-alpha.1\nWe can use the 'valdity' component.\n. related https://github.com/vuejs/vue-validator/issues/130\n. Close (in-activity)\n. Thank you for your PR.\nCan you push the dev branch ?\nSee the contribution guideline.\nhttps://github.com/vuejs/vue-validator#contributing\n. Sorry, In v2, vue-validator cannot validate select2 plugin.\nIn v3, I'll support component validation, so you can validate wrapped select2 plugin.\nPlease wait \ud83d\ude09 \n. You can use the pattern validator.\nsee the below url\nhttp://jsfiddle.net/kazupon/5um0mjta/1/\n. sorry for my late reply.\nI can not see the light at this issue, because I'm developing the vue-validator v3 for vue 2.0.\nI checked your jsfiddle code again.\nI could not understand your codes that to use as index value of arr.\nvue-validator don't expect dynamically index.\nCould you tell me the use-cases ?\n. close (in-activity)\n. fixed v2.1.4\nhttps://github.com/vuejs/vue-validator/releases/tag/v2.1.4\n. You can wrap the computed property with custom validator.\nsee the below example:\nhttps://jsfiddle.net/oqpmwdx1/1/\n. related #130\n. Thanks!!\n. Thanks!!\n. You can use the kebab-case in directive of HTML template. (This is HTML specification.)\nSee the detail:\nhttp://vuejs.github.io/vue-validator/en/syntax.html#camelcase-property\n. Yes!\nSorry, poor documentation.\nYou can put the novalidate at form tag.\n. Fixed\nhttps://github.com/vuejs/vue-validator/releases/tag/v2.1.5\n. Please push the master branch.\nThis branch will replace the dev branch (v3 development).\n. vue-validator don't support field like object path. (e.g. v-validate:user.name)\nyou need to use simple field name or kebab-case (e.g. user-name)\n. Thanks PR.\nI picked this issue at 6ae8be2.\n. Sorry for my late reply.\n\nThe html file is in this repository pathed examples/checkbox/index.html\n\nI tried to reproduce examples/checkbox/index.html. however, I could not confirm your reporting error.\nCan you tell me the vue.js version?\nOr Can you provide the reproduction code please?\n. For the $resetValidation , it is another issue, and so sorry to cause you inconvenience, please register as new issue with reproduction codes.\n. Close (inactivity)\n. Thank you for your reproduction codes!!\nI guess that the issue.\nI'll try to fix.\n. released v2.1.6\n. You need to use the caml-case naming.\nsee\nhttp://vuejs.github.io/vue-validator/en/syntax.html#camelcase-property\n. This is not bug.\nThis is the submit specification.\nPlease see the below URL.\nhttp://www.w3.org/TR/html5/forms.html#implicit-submission\n. Thank you for your feedback.\nYeah, you\u2019re right.\nvue-validator v2 have some issues around the validation.\nI'll try to improve the vue-validator v3, and it support the vue 2.0\nplease waiting. :)\n. Can you share the reproduction codes please?\n. Can you share the reproduction codes with jsfiddle (or codepen ... etc) please?\n. Close (inactivity)\n. Thank you for your feedback.\nCan you share the reproduction codes with jsfiddle (or codepen ... etc) please?\n. Close (inactivity)\n. Thanks !!\nI picked your fix.\n. related #307 \n. fixed v2.1.7\nhttps://github.com/vuejs/vue-validator/releases/tag/v2.1.7\n. Fixed\n. Can you share the minimum reproduction code please?\n. thanks!\nmaybe, I'll confirm it and fixed later due to busy too. sorry... \n. related #186 \nIn progress v3.0 for vue.js 2.0\n. thanks!\n. thanks for your reporting!\ndev is work in progress.\nI'll try fix.\n. Sorry for the late response.\nI checked your reproduction code.\nI'll try to improve this issue at 2.2\n. fixed v2.1.7\nhttps://github.com/vuejs/vue-validator/releases/tag/v2.1.7\n. Sorry poor documentation...\n\nHi, I can't find any example of how to use this function when I want to validate one field. Could anyone show how I need to write field argument?\n\nMaybe, this test codes might be to help for you.\nhttps://github.com/vuejs/vue-validator/blob/2.x/test/specs/validate.js\n\ncould this function target one form object? I have two forms in single page, and when I use this function, the last one gets validated only. Could there be one more argument for form validator name to target only it?\n\nRelated #220 \nI'll support at v3.0\n. Thank you for your feedback\nIn stable version (2.1.7), input[type=\"color\"] is not supported.\nI'll try to support in 3.0.\n. Sorry for the late response.\nMaybe, In dynamic validation code generating with v-for,  you need to use the field attribute.\nhttp://vuejs.github.io/vue-validator/en/syntax.html#attribute\n. Sorry, my poor english.\nThank you for your part of reproduction codes.\nHowever,  I don't understand your meaning too.\nCan you provide the minimum reproduction codes with jsfiddle (or codepen, etc) please ?\nI belive that we can talk with code.  \ud83d\ude09 \n. sorry, can you report with english please?\n. related #220 \nI'll try to improve this problem at v3.\n. sorry, our poor documentation. \nhttp://vuejs.github.io/vue-validator/en/installation.html\nvue-validator is providing same as the vue.js installation.\n. thanks!\n. sorry, for the late response.\ncan you share the minimum reproduction code please?\n. Thanks \n. ref #257 \nYes, You can use the validation on custom component.\n. thanks!\n. sorry, can you speak english please?\n. Close (in-activity)\n. Yes, you can do.\nAs far as I understand your comment, the following.\nhtml\n<div id=\"app\">\n  <validator name=\"validation1\">\n    <input type=\"text\" :value=\"msg\" v-validate:comment=\"['required']\"/>\n  </validator>\n</div>\n. validator custom element is deprecated for 3.0\nYou need to use validity wrap component.\nSee the example:\nhttps://github.com/vuejs/vue-validator/blob/dev/examples/started/index.html\nIf you want to manage the validation results of validity wrap component, you need to use the validationwrap component.\nSee the example:\nhttps://github.com/vuejs/vue-validator/blob/dev/examples/validation/index.html\n. Thank you of your feedback!!\nI think you can avoid the it with the flowing:\n``` js\nconst { extend } = Vue.util\nconst computed = {\n  submitDisabled () {\n      return this.sending // || this.$form.invalid\n    }\n}\nextend(computed, VueValidator.mapValidation({\n    valid: '$validation.validation1.valid',\n    usernameInvalid: '$validation.validation1.form.subject.invalid',\n    passwordInvalid: '$validation.validation1.form.body.invalid'\n})\nnew Vue({\n  computed,\n  ...\n})\n```\nHowever, This is not very useful.\nI'll consider the API of convenience. \ud83d\ude09 \n. Yep, you can use object spread operator.\n. You can access with event args of input event handler.\ne.g.\njs\nhandleValidate (e) {\n  const value = e.target.value\n  ...\n}\n. Thank you for your feedback!\nI'll try to fix next release.\n. sorry, this is alpha version yet.\nI'll try to fix the v-model integration.\n. Thanks for your feedback.\nI'll try to fix until official release, at the latest.\n. Thank you for your feedback.\nI seem that is bug ...\nI'll try to fix next release.\nSorry, I'm busy hard to work ...\nPlease wait :bow:\n. sorry, I'm busy to hard to work ...\nPlease wait \ud83d\ude47 \n. sorry, please waiting ... :bow:. sorry, please waiting ... :bow:. Thanks feedback!\nI fixed dead links.. Thank you for your feedback.\nyes, validate method have some issues.\nI'll improvement validate method.. Thank you for your filling!\nIt's exactly as you said, vue-validator is using Vue.util.\nThe most problematic one to be resolveAsset of Vue.util. \nTo achieve this same thing, maybe, it will take time.\nAlso, I'm sorry indeed, I might not be able to promise official release.\nIf you want to use the other validation library, I recommend vuelidate.\nThis library is model based and already many users using it, and it's superior than vue-validator in some ways.\nThank you for taking time for vue-validator. :bow:. You need to install the gitbook plugins.\nhttps://github.com/vuejs/vue-validator/blob/dev/docs/book.json\n. What's gitbook version ?\nIf 3.0.0-pre, maybe it might be due not to correspond to the latest version.\n. @xjchengo \nThank you for your feedback!!\nI fixed english docs.\nhttps://github.com/vuejs/vue-validator/commit/b48759ed2e38309983d63205d17ce9b98d76953b\n. LGTM\n. Thank you!\n. Be my guest \ud83d\ude3a \n. sorry, my poor english ... orz\n\u65e5\u672c\u8a9e\u3067\u3044\u3046\u3068\u4e0b\u8a18\u3067\u3059\u306d\u3002\n\u3053\u308c\u306f\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u306e\u3088\u3046\u306b\u975e\u540c\u671f\u306b\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306f\u4fbf\u5229\u3067\u3059\u3002\n. ",
    "davidkhess": "It would also be nice to have a way you can mark all fields as touched. So, when the VM takes a submit action of some sort, it can call that to ensure that all invalid conditions are properly displayed regardless of whether the field was visited or dirty.\nEDIT - actually, I think this could just be handled by binding to a value in the VM's data model indicating whether the submit action has been taken yet or not. So maybe a \"touch all\" is not needed.\n. Note, this is closely related to: #6 \n. Thanks!\n. Thanks!\n. I understand. Thanks for your hard work on that and vue-validator!\n. ",
    "karol-f": "+1 for $touched\n. @kazupon Thank you for explanation. Regards!\n. @kazupon nice!\n. Great!\n. @miljan-aleksic I'm using it and have right version. Probably you are using something like this:\n\"vue-validator\": \"^2.0.0\"\ninstead of this:\n\"vue-validator\": \"^2.0.0-beta.6\"\nOr the problem is different? Regards.\n. @yuhangbest0317 vue-valudator 1.x is not working with VueJS 1.x. Use vue-validator 2.x.\nhttps://github.com/vuejs/vue-validator/releases\n. Thank you! \n. ",
    "fivetwelve": "I agree. It would be nice to pass in an expression to the directive so the validate parameter may be dynamic. It would go a long way to allowing an input field to be more generic and re-usable.\n. ",
    "erguotou520": "Is this resolved? Here is a test\nhttps://jsfiddle.net/jLcjzf08/\nThe rules.required.rule is dynamic, but the error message always show when empty input.\nVueValidator version\n2.1.4\nVue version\n1.0.26\n. It means that I should define a custom validator to make it reactive?\n. I means that I have to custom a validator to realize dynamic required?\n. Nice job!\n. Sorry for mistake, updated.\nhttps://jsfiddle.net/nkccqdy7/1/\n. Yes, I know it, so in the demo #238 fixed.\n. Ok, got it.\n. It will also disable the touched state if add the detect-blur attr, this is not good. I still need the dirty, modified, touched check.\n. So when set detect-blur=\"off\" the $validation.touched will be always false?\n. It's not well I think.\n. If the error text dom wrote like this <span v-show=\"$validation.foo.touched&&$validation.foo.exist\">It is existed, please try another one.</span>, and exist validation is a async check function which check the field's value is existed.\nSo when users focus on the input, typed something and then blur, then focus then blue which nothing typed, you will find there are two duplicated exist check. This is not I want. The better way is when input field value is valid then do async check. And duplicated value again? No check again.\n. Fixed\nhttps://jsfiddle.net/jv6cos00/2/\n. Seems still order by character, not index or configurable\uff1f \n. Yes, updated. But still shows bar is required.\nhttps://jsfiddle.net/erguotou525/jv6cos00/3/\n. Think about this scene. A login form with username and password input, both are required. The error message shows when users click the submit button. And the error message dom just show one of the first error message, like this:\nhtml\n<span>{{$validation.errors&&$validation.errors[0].message}}</span>\nSo when users clicked submit button with no username or password typed, the message The password is required. shows. While I think the message The username is required. need to be shown first.\nI know there is someway to implement this requirement, but just for the order function, I think this is not good. I don't know if you understand my explanation.\n. If I just want to show one message, the structure may be\nhtml\n<span>{{ $validation.username.invalid && $validation.username.errors[0].message}}</span>\n<span>{{ $validation.username.valid $validation.password.invalid && $validation.password.errors[0].message}}</span>\n. Ok, got it. The cb did the same. I didn't see this argument before....\n. ",
    "coveralls": "\nCoverage remained the same at 100.0% when pulling 21c77d17b7c847292420ede14cad83ee2adec899 on kazupon:vuejs/dev into 4aa5e3ec1573f4705f794682b3eef167da8e2b60 on vuejs:master.\n. \nCoverage remained the same at 100.0% when pulling 14c293935a423f5fdfbece9dd41d60bc03acc641 on kazupon:vuejs/dev into 4aa5e3ec1573f4705f794682b3eef167da8e2b60 on vuejs:master.\n. \nCoverage remained the same at 100.0% when pulling 32f8d2f25ebdecdf70ccb8e4dd8647d535a03120 on kazupon:vuejs/dev into 4aa5e3ec1573f4705f794682b3eef167da8e2b60 on vuejs:master.\n. \nCoverage remained the same at 100.0% when pulling bf414c32b2dea6e782459f85b01fc797d12ff131 on kazupon:vuejs/dev into 4aa5e3ec1573f4705f794682b3eef167da8e2b60 on vuejs:master.\n. \nCoverage remained the same at 100.0% when pulling 65c7b1dab93b4278844c38ff465c75c52d20eafc on kazupon:vuejs/dev into 4aa5e3ec1573f4705f794682b3eef167da8e2b60 on vuejs:master.\n. ",
    "drewhamlett": "Thank you!\n. ",
    "BelinChung": "I am so sorry, I have been using dirty to check the model, but I think it is useless because of app cache.\nTo solve this problem\n<span class=\"error-tip\" v-if=\"validation.loginName.dirty && validation.loginName.email\">error meaasge</span>\n. ",
    "xdliuyong": "ok  thank you.\n. ",
    "Stolz": "Thanks @kazupon.\nIt's working now. \n. ",
    "silasrm": "I need validate a items on one dynamic list (http://jsfiddle.net/0bsn9pdL/1/), but I don't get success on this validation.\nTests failed:\n<span class=\"help-inline\" v-if=\"validation.itens.$index.farmaco_id.required\">My error message</span>\nor\n<span class=\"help-inline\" v-if=\"validation.itens[$index].farmaco_id.required\">My error message</span>\n. No problem dude.\nv-component is amazing! This solve my problem.\nFinal version of my test: https://jsfiddle.net/cwjtta99/7/\n. ~~One question:~~\n~~Why the default value of quantidade property of the data v-component element, is not setted on input with model quantidade?~~\nSorry! I set value=\"\" on elements and not \"see\" this wrong before. :(\nTest fixed https://jsfiddle.net/cwjtta99/8/\n. @kazupon thank you to for your lib, this is awesome.\n. @kazupon Thank's!\n. ",
    "benediktvaldez": "@kazupon \nOne example is using a select box with multiple select, and the value returned is an array, and an empty array won't return falsy even if it is empty. So it will always register as 'not empty' when the only checking being done is !val ? false : true, hence the 'required' not serving it's purpose. Put in the check for an object for good measure, in case the value would ever be an object.\nThis makes sure that whatever value is given to the required validator, it will return correctly.\n. ",
    "JoshZA": "```\n update: function () {\n                var resource = this.$resource('/client/client/:id');\n                resource.get({id: this.params.clientEditId}, function (item, status, request) {\n                    this.client = item\n                    this.dirty = false\n                    console.log('Dirty: ' + this.dirty)\n                this.$nextTick(function () {\n                    console.log('Dirty: ' +this.dirty)\n                })\n            }.bind(this))\n        }\n\n```\nThanks! Sadly, this isn't working for me, I'm still getting dirty == true, any way to reset it?\n. Arigato Kazupon\nI would have preferred wait-for on the  element, and just a single $emit() call rather than 1 per field.\nIt might be worth mentioning in the docs, that $emit() only works for v-validate fields, and not the entire model (So non validated fields can't be set using this method).\nAlso I noticed \nHTML\n<form id=\"user-profile\">\n    name: <input type=\"text\" v-model=\"name\" wait-for=\"name-loaded\" v-validate=\"\"><br />\n    email: <input type=\"text\" v-model=\"email\" wait-for=\"email-loaded\" v-validate=\"\"><br />\n    <input type=\"submit\" value=\"send\" v-if=\"valid && dirty\">\n</form>\nIf you make v-validate blank, the new code fails after the first item.\n. @kazupon Is this working in 2.x ? I'm trying to use http://vuejs.org/guide/components.html#activate_Hook is this the correct way of doing it?\n. Think it's this one? https://github.com/vuejs/vue-validator/blob/dev/v2.0-spec.md#lazy-initialization-cahnge\n.  :smiley_cat:\nMight be worth looking at this too\nhttp://vuejs.github.io/vue-router/en/pipeline/activate.html\n. Oh that's great, looking forward to a release :smile: \n. Ah ok, makes sense, thanks guys =)\n. Have you tried outputting the state of the validator?\n<pre> {{ $validation1 | json }} </pre> - Add this to your html, what does it show?\n. ```\n\n\n\n\nRequired your name.\n\n\n\n\n\n    module.exports = {\n        data: function () {\n            return {\n                username: ''\n            }\n        },\n    }\n\n```\nThis component/validation works perfectly in my large vue app running the following:\n\u251c\u2500\u2500 vue@1.0.10\n\u251c\u2500\u2500 vue-router@0.7.7\n\u251c\u2500\u2500 vue-validator@2.0.0-alpha.5 (git://github.com/vuejs/vue-validator.git#45288170f51c38038d1bb6976ce6ca1c49265f59)\n\u251c\u2500\u2500 vueify@2.0.1\nHowever, I do get the following in the console [Vue warn]: Error when evaluating expression \"$userValidator.username.required\". Turn on debug mode to see stack trace.\nI'm running \"vuejs/vue-validator#dev\" (latest commit), perhaps that's why it's working?\n. ",
    "swift1": "The wait-for parameter works, even when the element is not a component. In Vue.js, the wait-for parameter only works when the element is a component.\nHowever, sometimes it's neccessary to reset the dirty flag during the lifespan of the application, for example when fetching new data asynchronously from the server. Currently, there's no easy way to reset the dirty flag after everything has been initialized.\n. I figured out a way to reset the dirty flags (which I need to do after having fetched new async data during the application lifespan, which can happen many times).\njavascript\nresetDirtyFlags: function(){\n    for (var property in this.validation) {\n        if (this.validation.hasOwnProperty(property)) {\n            var keypath = property;\n            this.$validator._setInitialValue(property, this.$data[keypath]);\n            this.$validator._updateDirtyProperty(keypath, this.$validator.$get(keypath));\n        }\n    }\n}\nThough I don't know if this is best practice or not. A native function to reset the dirty flags would have been great.\n. I solved the first part: the 'name' property cannot be used, since it is a reserved word. When changing the property from 'name' to 'namee', the dirty checking works on that property. However, the dirty checking for the whole form is still bugged:\nhttps://jsfiddle.net/q7xcbuxd/11/\nThe form is only considered to be dirty when all of its properties are dirty (and it should consider the form dirty if one or more of its properties are dirty).\n_EDIT: I patched it!_\nWith this function, the dirty function works as expected (dirty form = one or more properties are dirty):\njavascript\ncomputed: { \n    formIsDirty: function() {\n        for (var property in this.validation) {\n            if (this.validation.hasOwnProperty(property)) {\n                if (this.validation[property].dirty)\n                    return true;\n            }\n        }\n        return false;\n    }\n}\nhttps://jsfiddle.net/q7xcbuxd/12/\n. Thanks, it works fine now. :+1: \n. :+1: \n. Thanks!\n. It works now. Thanks! :)\n. Thanks for the reply! :smile: :smile_cat: \n. @kazupon M8, you've fixed all the bugs I've reported, so I don't really care if you release 2.0 or not; I'm happy with the current version. :blush: That being said, I do support your efforts and I will definitely continue to use your library, even though there are other Vue.js validation libraries out there.\nHowever, if I were to pick and choose what I'd like to see implemented in 2.0, it would be:\n1) a function to reset the dirty property (which can be relevant when the program is receiving async data multiple times), as discussed in:\nhttps://github.com/vuejs/vue-validator/issues/25\nMy proposed solution is:\njavascript\nresetDirtyFlags: function(){\n    for (var property in this.validation) {\n        if (this.validation.hasOwnProperty(property)) {\n            var keypath = property;\n            this.$validator._setInitialValue(property, this.$data[keypath]);\n            this.$validator._updateDirtyProperty(keypath, this.$validator.$get(keypath));\n        }\n    }\n}\n(This function works for the current version of the validator, but will probably be totally different in 2.0, if you decide to implement it.)\n2) a way to track the dirty property of a form without having to designate a validator to every property\nAnd by the way, there's no need to excuse your English, mate. I think you're doing a great job for the Vue.js community! :+1: Keep up the good work!\n. If one or more properties are dirty, the form is dirty.\nIf none of the properties are dirty, the form is pristine.\nSo what's the point in having a pristine attribute? Pristine is just the same as !dirty (the opposite of dirty), right? :smile_cat: \n. @kazupon gg! :smiley_cat: \n. @kazupon Thanks for your reply. :smile_cat:\nI've tried to cast the value as a number, but it's the same bug: https://jsfiddle.net/q7xcbuxd/38/\n. @kazupon I just tested it with v0.12.10 now and it still doesn't work. And if I add number at the end (with v0.12.10), the data will always be dirty. :bow: \nhttps://jsfiddle.net/q7xcbuxd/40/\n. Thanks! :smile: :smile_cat: \n. It works now: https://jsfiddle.net/q7xcbuxd/41/\nThanks man, I appreciate your work! :smile_cat: :+1: \n. ",
    "orestisioakeimidis": "Yes, seems to be the same! Great!\n. ",
    "lvismer": "@kazupon Apologies, I pointed you to the original fiddle, I updated version 2 to be the base.\nIt shows what I was trying todo. However, seems Evan updated to 0.12.4. I cannot even get a valid validation option to work with that.\n. @kazupon thanks for response. In the end I did change my code to use vm.$set(...)\n. @kazupon Thanks for the reply, that is great. Is there a roadmap regarding version 2. Just a guess from your part. Weeks, months or years away.\n. @kazupon Thanks for all the efforts\n. ",
    "shuogawa": "@kazupon \nThank you for great library!\n\u7d20\u6674\u3089\u3057\u3044\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059!\nI am waiting that vue-validator will support v-repeat too.\n. ",
    "cheapsteak": "It works! \nThank you for the quick fix :smiley: \n. Thank you :)\nIs there any way an interim property could be added to accommodate this use-case prior to v2's release?\nPerhaps just adding the implementation for pristine?\n. ",
    "danielchou": "@kazupon \nHi, in your sample, VueJS file been blocked since it request by http resouce, jsfiddle now has supported https.\n. @kazupon  It's a great sample for vue-validator. :+1:\nI fork one for adding an error effect to make it clear. https://jsfiddle.net/vz5rLzny/\n. ",
    "levelel": "I see, I didn't get this line in my code.\njavascript\nVue.use(window['vue-validator'])\n. ",
    "dwightjack": "Ok thanks for the explanation!\n. ",
    "PeakTai": "I met the same problem.If the level is too much,it's not convenient to initialize data like this instead of an empty object.I do this now:\nvalidation&&validation.form.name.invalid\n. ",
    "oliverzy": "I found if I turned on Vue.config.debug, Vue will throw exception, the app will stop working.\n. I think the replacement is npm.\n. I think it may be difficult if we don't change v-model code. the v-model must not update the model if the validation failed\n. @cgarnier the workaround does work, but not perfect. \nThe touched, prisitine status cannot be synced with hidden input\n. ",
    "EHackettTriCore": "+1\n. ",
    "seanwash": "I can also verify this. My application was breaking until I set Vue.config.debug to false. I get the same warning, although that app now behaves as expected.\n. ",
    "fourstacks": "Hi @kazupon \nThanks for the quick reply!  Yeah - if that's something that could be included it would be very handy indeed and would allow for more complex custom validators.  Thanks for offering to look into it!\n. Excellent!  Thanks very much for the speedy work in getting this implemented - very much appreciated!\n. Seems to work like a charm by the way, judging from the fiddle.  I'll integrate it into my code later today and let you know if I spot any issues but it's looking great!\n. ",
    "gitteri": "I can't get something like this working with v2.0 alpha. Any ideas?\n. ",
    "fergaldoyle": "How about support for \"custom form elements\"? \ne.g. If I write a component or directive to work with TinyMCE inline editor (which uses a div with contenteditable=true), I'd like to be able to utilize the same kind of validation as a normal textarea. From within my component / directive, if I could somehow hook into v-validate and set the valid, invalid, dirty etc properties so I can display validation messages for those states. Is this something already possible or something you'd consider for 2.0?\n. ",
    "Pandahisham": "@kazupon Wonderfull work , like the syntax\n. btw vue has a lot of follower in the laravel community , built in validations that match laravel 's would be charming , but that can be debounced for later i guess\n. ",
    "nkovacs": "Shouldn't the top-level pristine be true only if all the attributes are pristine?\n. ",
    "franciscolourenco": "Can we support automatic class names for each validation property like in https://github.com/xrado/vue-validator/ ?\nThat would spare the use of  v-class=\"error: ...\" and make the code more concise while allowing all the styling to be done in css.\nTo avoid collision with existing classes a prefix could be used like:\n- v-valid\n- v-invalid\n- v-modified\n- v-dirty\n- v-pristine\n. More built-in validators would be nice as well, for example: numeric, email\n. A blur attribute would be useful as well. \nHow can you achieve lazy validation during the first attempt, and after the element has been blurred, start validating on every keystroke?\n. @trippo80 That is the point, we want to disable the lazy directive after the first blur, so that the validation is on keystroke after the first blur.\n. If I understood detect-change and detect-blur correctly. The difference is that we want detect-change=\"off\" initially, but detect-change=\"on\" after the first detect-blur validation is executed.\n. @wangwenjie1314 thanks you for the example code, however if I'm not mistaken it just implements validation on blur. For that purpose a simple lazy attribute would be sufficient no? JSbin: http://jsbin.com/zezovejoxe/1/edit?html,css,js,console,output\nI was talking about validation on-change to be activated, after the first validation on-blur occurred.\n. With the implementation of automatic classes this can be easily achieved now, right?\nhttp://jsbin.com/dokuzicopa/edit?html,css,output\n. What exactly do you plan to implement? Did you have a look at the jsbin?\n. Should we close this and maybe add the example to the docs?\n. I would suggest a way to globally customise classes further. For example:\nVueValidator.defaults.classes.invalid = 'error'\nVueValidator.defaults.classes.valid = 'good'\n. ",
    "trippo80": "@aristidesfl For validating on blur you can use the directive lazy which would perform model update on change event instead of keystroke. However - this would affect all validation on that element so you can't (for example) do keystroke validation on length and then custom validation on blur/change.\n. @aristidesfl Yeah I understod that. I thought you were asking two separate things. First how you could validate on blur, and then how you could do that a bit more advanced. Sorry for not reading well enough :)\n. @kazupon Hm maybe I don't understand you correctly - but I'm using lazy validation now with vue-validator and it works fine. I achieved this by using the lazy directive which seems to work fine. \nHowever - it won't fully facilitate the request from @aristidesfl .\n. @kazupon Is there a way to trigger an error from the controller it self? If so I could add a blur/change event and do the validation and then trigger the vue-validator error from that event method.\nPseudocode:\nmodule.exports = {\n  data: function() {\n    email: null\n  },\n  watch: {\n    'email': function(val, oldVal) {\n      // one way of validating the email is to watch the model for changes\n      if( ! apiValidateEmail(val) ) {\n        // email didn't validate so we need to trigger an error on vue-validator\n        SOMETHING SOMETHING;\n      }\n    }\n  }\n  ready: function() {\n    // another way of validating is to watch the input itself for change events\n    this.$el.querySelectorAll('input.email').on('change', function(e) { \n      if( ! apiValidateEmail( this.val() ) ) {\n        // email didn't validate so we need to trigger an error on vue-validator\n        SOMETHING SOMETHING;\n      }\n    });\n  }\n}\n. @kazupon this.$set() was exactly what I needed. Thanks! \nThis might not be the best solution in the world but it's ok as a workaround until (hopefully) vue-validator facilitates this need :)\nThanks again!\nBtw - do you want this issue closed or open for the future ?\n. Nevermind this issue - I was trying to solve this the wrong way. The solution in my case is of course to have separate components per step. Makes sense.\n. ",
    "shinygang": "\u597d\u4e45\u53d1\u5e032.0\u554a\uff1f\u73b0\u5728\u6211\u75281.4.4\u7684\u65f6\u5019\u6709bug.\u5f53\u6211v-model=\"book.username\" v-validate=\"required\"\u7684\u65f6\u5019\uff0c\u6211validation.book.username.required\u5c31\u4e0d\u8d77\u4f5c\u7528\uff0c\n. @kazupon\nHow long will the v2.0 release? There's a bug in v1.4.4, I think.   \"validation.book.username.required\" was not working when I use 'v-model=\"book.username\" v-validate=\"required\" '\n. I also has the error:'Uncaught TypeError: Vue.parsers.directive.parse is not a function';\n\"vue\": \"^1.0.12\",\n\"vue-validator\": \"^2.0.0-alpha.9\"\n. @kazupon \nhttp://jsfiddle.net/sozLnm4L/.it not work.\n. the other question:\n1\u3001hao to activate the validation1 validate in my js code. which method?\n2\u3001when will the V3\u2018s document be released?\n. ",
    "endaaman": "Oh, I didn't realize to use computed at all. This resolves my problem. Thank you very much.\n. ",
    "zschuessler": "For anyone else finding this in Google, there is a stock validator \"confirmed\" you can use. The docs are a little sparse on how it behaves, so I wrote up a CodePen demo you can find here:\nhttp://zaclee.net/vue/password-confirmation-validation-with-vue-and-vee-validate\nThis way your code will stay clean!. ",
    "lynzz": "Thanks! :smile: \n. ",
    "amanpatel": "@kazupon So are dynamic directives supported in Vue 1.x ?\nI'd love to use vue-validator, but if I can't apply or register directives programmatically within a component, it wouldn't fit my needs.\n. ",
    "revati": "Are there any updates on this?\n```\nv-validate:{{ id }}=\"{{ rules }}\"\n// throws error\nUncaught InvalidCharacterError: Failed to execute 'setAttribute' on 'Element': '}}' is not a valid attribute name.\n``\n. My bad, while refactoring lost` wrapper.\n. ",
    "lazabogdan": "@lynzz @kazupon How about this? http://jsfiddle.net/6f9g2a5p/4/\nProbably not the ideal way, but I can't think of another workaround.\nLet me know what you think.\n. @kazupon thanks! Looking good. I can finally get rid of those many validator instances and use fields.\n. @ccqgithub Have you found a better way by any chance? Have you sticked to the hidden input, or what's your current approach?\n@kazupon Any news on this subject?\n. @kazupon I've just hit a wall on this as well. \nFor a simple use case example, just imagine two validators attached to the same vm, one lazy validator and one not lazy and the 2nd validator is inside a v-if directive which only activates after you've loaded the data for the lazy validator and called $activateValidator. \nAlso there are more possible scenarios for which you might need to activate a validator more than once in the same vm.\nSo basically it's an issue when you need more than one validator on the same vm.\nAnother example is having multiple modals on the same vm and each having it's own validator.\nLet me know if you need more details.\n. In v2.0.0-alpha.9 for example the validator was updating on every keystroke. \nNow, in v2.0.0-alpha.15 the validator is only updating after input \"blur\".\nI would like to be able to configure the event on which to trigger the validation so for example it can validate the input in real-time or simply configure a small delay using the vue.js debounce property http://vuejs.org/guide/forms.html#debounce directly on the input.\nI really think that this should be considered a configurable preference, rather than imposing the \"blur\" behaviour on everyone.\nI hope you understand what I mean.\n. @kazupon Thank you! How about the model issues? Have you had the chance to look at my fiddle yet?\n. Thanks for the update! It's good to know the issue is confirmed and that you're working on it. That was all I wanted to know. For now, I'll just use v2.0.0-alpha.9 until the bug is fixed.\n. Apparently it's working just fine when NOT using the \"field\" attribute. Also, the validator updates in real time, not on \"blur\" so it seems my 2nd request is also linked to the main issue. See:\nWorking\nhttps://jsfiddle.net/lazabogdan/og3dvq5s/\nNot working (using \"field\")\nhttps://jsfiddle.net/lazabogdan/87seoL35/\n. @kzima You can use events https://github.com/vuejs/vue-validator#event\n. Right. But it could be solved with events only if the validator itself would emit a valid/invalid event for the entire instance. @kazupon what do you think?\n. @kazupon In v2.0.0-alpha.16 you forgot somewhere a console.log which is rather annoying and since I'm using webpack-dev-server with hot reloading I'm getting a lot of these logs ..  vue-validator.common.js:588 BaseValidation#manageElement $watch (3).\n. ",
    "ablipan": "I update the vue-router to 0.5.1. It's ok now!!\n. ",
    "dmarko484": "Same question here. We have customize select2 based on http://vuejs.org/examples/select2.html and don't know how to use validator with\n. ",
    "Razi91": "It's more like feature proposition.\n. Sorry, I wrote it fast and incomprehensibly.\nFor example, currently v-validate creates vm.validation.[model-name] object. What I mean is create directive v-validate-group (for example: v-validate-group=\"groupName\") which createsvm.validationGroups.[groupName]` with listed all validations.\nExample:\nhtml\n<h1 \n    v-class=\"has-error: validationGroup.personalData.dirty && validationGroup.personalData.invalid\">\nPersonal data</h1><!-- this could be also a fixed-placed menu on side of the page-->\n<input type=\"text\" \n    v-model=\"form.personalData.name\" \n    v-validate=\"minLength: 3\"\n    v-validation-group=\"personalData\"></input>\n<input type=\"text\" \n    v-model=\"form.personalData.pesel\" \n    v-validate=\"required, pesel\"\n    v-validation-group=\"personalData\"></input>\n(pesel is a type of ID which I have to validate with date of birth, sex and calculate the check digit)\nIf any of those 2 fields is invalid, header has class has-error.\nIt would be nice if it would be implemented natively.\n. ",
    "Shiak1": "Hi,\n@kazupon I just stumbled upon this issue. Help much appreciated. \n. Thanks much!!!!\n. ",
    "zbartl": "@kazupon This may be a 2.0 fix, but I noticed with the fiddle you posted above that, although the validation rules are applied correctly to the v-ifs, when checking {{ valid }} for any kind of submission purposes, it ignores the child rules in the components:\nhttp://jsfiddle.net/mgnp93k0/\n. I'm still having this issue, specifically when used in the following:\n<input type=\"text\" class=\"form-control\" placeholder=\"address\"\n                               v-model=\"addr\"\n                               v-validate:addr=\"['required']\"\n                               v-bind:class=\"$validation.addr.valid ? 'validation_success' : 'validation_failed'\"\n                        />\nIf not binding on the same element as the validate, I don't see this happen.\n. ",
    "opheliadesign": "I'd really appreciate some thoughts on this. Please let me know if further information is required. Thanks!\n. I honestly don't know how else to explain it. If a condition (observerEntry) is true, two fields (shiftEntry.observerFirstName, shiftEntry.observerLastName) need to be required while a third field (shiftEntry.member) is not required. If observerEntry is false, shiftEntry.observerFirstName and shiftEntry.observerLastName are NOT required and shiftEntry.member IS required. So. all three fields need to be required_if based on the boolean observerShiftEntry.\nI was able to solve this not using the validation library but I'd like to see if it's possible using vuejs-validator. Here is a jsfiddle with the code NOT using your library to show the desired result - https://jsfiddle.net/6gpryhep/\nIf the  Role is anything but blank or \"Observer,\" the form will validate when a \"Member\" is selected. If it is set to \"Observer,\" the form will validate after First Name and Last Name have been entered. This is based on the computed boolean of observerShift. So, again, First Name and Last Name are \"required if\" observerShift is true.\n. The desired result is shown in the jsfiddle I provided. If the role is anything but empty or \"Observer\" and a Member is selected, the form validates successfully. If \"Observer\" is set but the First Name and Last Name fields are not entered, the form is invalid. \nIn your example, the form is only valid if the Member is selected (so Role anything other than empty or Observer) AND the First Name and Last Name fields are not empty. The First Name and Last Name fields should only be required if Observer is not set. Likewise, Member should only be required if Role is not set to Observer.\nAlso, your fiddle is displaying the same behavior I noticed previously - when the page loads, the Member field is blank and highlighted in red indicating the error. If showObserver is set to true and then back to false, validation on the member field seems to break and the validation object becomes empty { }\n. ",
    "viktorivanov": "Hi,\nI've made a jsfiddle to explain myself.\n. That's great. Thank you @kazupon .\n. ",
    "shabushabu": "Any news on this? It was kinda tripping me up just now. Validation rules should only be triggered if the field in question is required or if it's not empty.\nIt's very common to have more than 1 validation rule per field and currently the built-in rules are not usable because of this issue.\nMaybe I've got this wrong, but shouldn't it be as easy as only validating if there actually is something to validate, so e.g.:\n```\nVue.validator('rule', function(val) {\n  if(isEmpty(val)) {\n    return true; // No value, so bail\n  }\nreturn /.../.test(val); // There's a value, so run whatever test we need\n});\n```\n. ",
    "heavymery": "Vue version of my project was 0.12.10. But this problem was fixed 0.12.16.\nSo, I just updated vue version and solved :smile: \n(refer to: https://github.com/yyx990803/vue/pull/1355, https://github.com/yyx990803/vue/commit/aef6aeb8fbf76fba97843802ff49dc57acb5ddd7)\n. ",
    "shredmaster": "I understand 2.0 is still under development. Is there a dev branch compatible with vue 1.0 right now?\n. ",
    "prYmea": "@kazupon do you have an eta on when we can have access to the 2.0 dev?\n. Thanks @kazupon \nThat will be really useful as I am populating the form by doing an AJAX call to fetch data, but the validations are out of sync with the data.\n. ",
    "scoutkirkolson": "I'm using 2.0.0.-alpha.22 but still experiencing this issue\n. ",
    "andrewdang17": "I'm still having this issue too. \n. ",
    "diskman": "Is there any workaround to repopulate errors in validator on 400 response when I am getting form server http status with well described validation errors? Can I somehow access field and manualy add validation errrors for field?\n{\"confirmPassword\":[{\"memberNames\":[\"ConfirmPassword\"],\"errorMessage\":\"Field 'Confirm Password' can't be empty.\"}],\"acceptTerms\":[{\"memberNames\":[\"AcceptTerms\"],\"errorMessage\":\"Must be checked 'Accept Terms'.\"}]}\n. ok thanks\n. ",
    "intositeme": "Yes v1.0. Is it not supported?\n. oh awesome! thanks. No worries, just that i didn't find documentation stating it does not work it v1.0, so i thought i was doing something wrong. Looking forward to v2.0. \nMaybe you could update the documentation to state that it does not work with 1.0.\n. ",
    "calebporzio": "+1\n. ",
    "blueshed": "+1\n. ",
    "voxtobox": "Have you tried Vue migration? I'm using it with Vue-strap until new version release. There are many warnings but it works.\n. ",
    "abbymrs": "Hi,\ni have the same issue with vue@2.1.1, vue-validator@3.0.0-alpha.2\n. @steven-klein \nHi, \nI use vue-router and tried your way, but still not work....\nPS: \nvue@2.1.8\nvue-router@2.1.1\nvue-validator@3.0.0-alpha.2\n. @woshi82\nthanks, i resolved this problem.\nI have another problem, when i add vue-validator to my project for form validate, the browser is crashed, i have tried in company also home, all with the same result.... do you have this issue?. @hq5544 hi, i have the same issue, and i use vue 2.1.8, and i did not mount the app to body, but div element. below is my code:\n\nmain.js\n\n```\nimport Vue from 'vue';\nimport App from './App';\nnew Vue({\n    el: '.container',\n    render: h=>h(App)\n});\n```\n\nApp.vue\n\n```\n\n\nhello world\n\n\n\n\n\n    import Home from './components/Home';\n    import Login from './components/Login'</p>\n<pre><code>export default {\n    components: {\n        Home,\n        Login\n    }\n}\n</code></pre>\n<p>\n```. ",
    "ferry77": "+1 :)\n. ",
    "arasharg": "+1\n. error occurred when using selectbox at line 1106:\n_this._multiple = _this._el.hasAttribute('multiple');\n. another problem with selectbox :\nSCRIPT5007: Unable to get value of the property 'required': object is null or undefined\nin Internet explorer inside setValidation ,  this._validators  is undefined :\n```\n{\n      key: 'setValidation',\n      value: function setValidation(name, arg, msg) {\n       console.log(this._validators); // return \"undefined\"\n        var validator = this._validators[name];\n        if (!validator) {\n          validator = this._validators[name] = {};\n          validator.name = name;\n        }\n    validator.arg = arg;\n    if (msg) {\n      validator.msg = msg;\n    }\n  }\n}\n\n```\n. I'm still getting the same error (version v2.0.0.beta.1):\nSCRIPT5007: Unable to get value of the property 'hasAttribute': object is null or undefined\nhttp://oi64.tinypic.com/2v3jywh.jpg\n. It works now, thanks!\n. ",
    "ccqgithub": "@kazupon e.g. I custom a select elements my-select, i want do like this :\n<validator name=\"loginValidator\">\n<form>\n    <my-select :options=\"options\" :value.sync=\"value\" v-validate:age.required></my-select>\n    <div v-if=\"$loginValidator.age.invalid && $loginValidator.age.touched\">required</div>\n</form>\n</validator>\nIt does not work, so I can do ti like this:\n<validator name=\"loginValidator\">\n<form>\n    <my-select :options=\"options\" :value.sync=\"value\"></my-select>\n    <input :value=\"value\" hidden v-validate:age.required></input>\n    <div v-if=\"$loginValidator.age.invalid && $loginValidator.age.touched\">required</div>\n</form>\n</validator>\nBut the input is hidden, can trigger touched property ?\n. Glad to hear that \u2026\u2026\n. @lazabogdan now, i use v-model with hidden input.\n. ooo,  very tks  for your work, let our work more comfortable\u2026\u2026^_^\nbut i think this is not a good solution\uff0cbecause if i do that, i will lose sight of many other  'mistakes'\u3002if it is just a warning, there's no problem, but it let app not working \u2026\u2026\ni think, (just like u have done)the question should be thrown open to public discussion, maybe someone know how to fix it\u2026\u2026\n. ",
    "CFDylan": "This issue is same to #96 , so I close it.\n. ",
    "qt911025": "It's v1.0.10.\nHere's my demo.\nhttps://github.com/qt911025/vue-validator-demo\nIn JSFiddle, there's another problem:\nhttps://jsfiddle.net/freugaz2/3/\n. Hi, kazupon.\nYour example works well but I think the problem is not resolved.\nThe error will not be thrown because of the use of minified Vue, from which the debug or error tracking tools(something like that) are removed. The example is still not work in development environment.\nhttps://jsfiddle.net/7og9hds9/18/\nI just replaced the minified vue with the raw one. Plz have a check.\n. ",
    "bradstewart": "You can do something like:\nhtml\n<validator name=\"clientValidator\">\n  <input v-model=\"client.description\" v-validate:description.required />\n</validator>\nAnd then in your Vue instance, this.$clientValidator.description will contain the value of the input field and all the relevant validation data for the field.\n. ",
    "martinlindhe": "Seems to me like vue validates the template before vue-validate is ready in the second case. \nDue to the error happening, vue cant render <pre> {{ $validation1 | json }} </pre> \nThe \"broken code\" is running fine stand-alone: http://codepen.io/martinlindhe/pen/LGPvzo\nBut I can also reproduce this issue if i put the \"broken code\" inside my already somewhat big vue app (first sample works, second gives the same error). Vue 1.0.10, vue-validator 2.0.0-alpha.5\nOnly obvious difference I can see is that the codepen loads the cdn javascripts, while my bigger vue app registers the plugin using Vue.use(VueValidator)\n. ",
    "FWSimon": "Same setup aas @martinlindhe and errors :D \n. oh cool, thanks @kazupon good job!\n. Thanks @kazupon Good job!\n. ",
    "angelbotto": "make sure window.Vue exists.\nthis solve my problem.  \nthanks @davidpelaez for helping :D\n. ",
    "davidpelaez": "This looks very weird. If the problem's solved by exposing Vue to the window\nobject this most likely means that somewhere the code has wrong dependency\nresolution. If Vue is needed it should be imported in every file or passed\nas an argument.  \nDavid Pel\u00e1ez Tamayo | Designer & Entrepreneur\n\nOn Feb 2 2016, at 5:10 pm, Angel Celis Botto\n<notifications@github.com> wrote:  \nmake sure window.Vue exists.\nthis solve my problem.\nthanks @davidpelaez for helping :D\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "miljan-aleksic": "This seems wasn't addressed? I'm getting the 1.4.4 version.\n. Actually I just did npm install vue-validator --save expecting it would get the latest version, but maybe only does that for stable ones. Will use your suggestion, tks.\n. ",
    "KyLeoHC": "I have met a problem as the same with you.I also want to know how to figure out this problem.\n. ",
    "jsiebach": "+1!\n. ",
    "aaronjpitts": "Is there any support for this yet?\n. Hello, that's great! I've noticed one problem though, v-model causes the code to break if it's used on a field inside the view-directive with the for items name. For example, the below breaks the code:\n<validator name=\"validator\">\n  <div v-for=\"room in property.rooms\">\n    <input type=\"text\" v-model=\"room.price\" :field=\"'field' + $index\" v-validate=\"{ minlength: 4 }\">\n    <span v-if=\"$validator['field' + $index].valid\"> valid !!</span>\n  </div>\n</validator>\nIt will give an error saying 'Uncaught TypeError: Cannot read property 'price' of undefined'\nThanks for your time so far. This is a great module.\n. Hi,\nI'm using the latest of both:\nvue.js: 1.0.14\nvue-validator version: 2.0.0-alpha.12\n. Thank you very much for the prompt bug fix! :-) Great work!\n. Hi, I've updated to your latest version (2.0.0-alpha.14) but if I toggle a field shown and then hidden within an v-if statement I get the below error:\nvue-validator.common.js:1294 Uncaught TypeError: Cannot read property 'field' of null\n. I also have this issue.\n. If it helps, the problem may be between this commit https://github.com/vuejs/vue/commit/a821faf2948d20746197c239200b614072cfca6a and vue 1.0.22 as we have been using the development version of vue 1.0.21 with this commit and it was still working up until this commit at least.\n. Any update on this? We cannot provide a repo but with the reop by szkrd and our example above it should be clear enough to reproduce this issue.\nThank you\n. Any update?\n. ",
    "VincentGarreau": "+1 :+1: \n. ",
    "tsnuer": "I was able to get something working by doing something like this. I had to add the field attribute and the rule and message things:\n<input v-model=\"user.firstName\" field=\"user.firstName\" v-validate=\"{required: { rule: true, message: 'First Name is required!'}}\" name=\"firstName\" placeholder=\"First Name\" type=\"text\" class=\"form-control\"/>\nDoing so I was able to get errors inside of my validator object.\n. @helmi77 \nIn my template I wrapped my form with a validator named signupValidation.\nAnd this is how I get back the errors in my component (I use lodash, to map through the errors).\n```\n      if (this.$signupValidation.errors && this.$signupValidation.errors.length > 0) {\n        const errors = _.map(this.$signupValidation.errors, (error) => {\n          return error.message;\n        });\n    this.$broadcast('error-messages', errors);\n  }\n\n```\n. ",
    "helmi77": "\nI was able to get something working by doing something like this. I had to add the field attribute and the rule and message things\n\nHow did you access the various error messages? $validation.user.firstName.required does not work for me.\n. @tsnuer Thanks for the explanation! An official solution would be great though.\n. My mistake, should have read the docs more carefully. There's a section about integrating vue-validator with v-model (v-model-integration)\n``` html\n\n\n\n    <p v-if=\"$validation.email.required\">Email required</p>\n</form>\n\n\n```\n. ",
    "cgarnier": "I dont think codepen will be usefull because you already fixed it on the dev.\nI have some forms to validate. \nIf i find something i willl tell you. \n. Hey,\nI have the same issue for validating custom input components.\nBut i think it s better to put the v-validate on the component then inside its template.\nThat way, we should be able to customize the validation rules as we wish.\n. Possible workarround:\njade\ngrecaptcha(:response.sync=\"response\")\ninput(type=\"hidden\" v-model=\"response\", v-validate:captcha=\"['required']\")\n.error(v-if!=\"$validation.captcha.required && $validation.captcha.dirty\", v-html=\"'required'\")\n. ",
    "lazyhero": "e my english so poor\u2026\u2026\nI found a question that there a change in API ,but it don't  make correct in document.\nThe question is that  'Vue.validate' be changed Vue.validator.\nif you use Vue.validate the console show 'undefined'\nif you use Vue.validator all will be work\nI feel sad for my english teacher\u2026\u2026\n. ",
    "phamquick": "@kazupon \nIm sorry for my poor English.\nim using webpack to run my code, and got this error:\nerror\nUncaught TypeError: Vue.parsers.directive.parse is not a function\n\nBelow is my files structure\nwebpack.config.js\n``` javascript\nvar webpack = require('webpack')\nmodule.exports = {\n  entry: './src/main.js',\n  output: {\n    path: './dist',\n    publicPath: 'dist/',\n    filename: 'build.js'\n  },\n  module: {\n    loaders: [\n    {\n      test: /.vue$/,\n      loader: 'vue'\n    },\n    {\n      test: /.js$/,\n      loader: 'babel',\n      exclude: /node_modules/\n    },\n    {\n        // edit this for additional asset file types\n        test: /.(png|jpg|gif)$/,\n        loader: 'file?name=[name].[ext]?[hash]'\n      }\n      ]\n    },\n  // example: if you wish to apply custom babel options\n  // instead of using vue-loader's default:\n  babel: {\n    presets: ['es2015', 'stage-0'],\n    plugins: ['transform-runtime']\n  }\n}\nif (process.env.NODE_ENV === 'production') {\n  module.exports.plugins = [\n  new webpack.DefinePlugin({\n    'process.env': {\n      NODE_ENV: '\"production\"'\n    }\n  }),\n  new webpack.optimize.UglifyJsPlugin({\n    compress: {\n      warnings: false\n    }\n  }),\n  new webpack.optimize.OccurenceOrderPlugin()\n  ]\n} else {\n  module.exports.devtool = '#source-map'\n}\n```\nMain.js\n``` javascript\nimport Vue from 'vue'\nimport Home from './Home.vue'\nimport VueRouter from 'vue-router'\nimport VueResource from 'vue-resource'\nimport VueValidator from 'vue-validator'\nVue.use(VueValidator)\nVue.use(VueResource)\nVue.use(VueRouter);\nexport var router = new VueRouter({\n    linkActiveClass: 'active'\n});\nrouter.map({\n    '/home': {\n        component: Home,\n        name: 'home'\n    }\n});\n// Redirect to the home route if any routes are unmatched\nrouter.redirect({\n    '*': '/home'\n})\nvar App = Vue.extend({});\nrouter.start(App, 'body')\n```\nHome.vue\n``` html\n  \nHome\n\n\n\n\n\nRequired your name.\nYour comment is too long.\n\n\n\n\n\n\n    export default {\n        data(){\n            return {</p>\n<pre><code>        }\n    }\n}\n</code></pre>\n\n```\n. @kazupon \nThank for your response^^\nSorry, my bad. Here is my Call stack.\nYou also check it here:\nhttp://ashiba.parseapp.com\n```\nVue.directive._parseModelAttribute (index.js:159)\nVue.directive.bind (index.js:88)\nDirective._bind (vue.common.js:7668)\nlinkAndCapture (vue.common.js:6367)\ncompositeLinkFn (vue.common.js:6345)\nVue._compile (vue.common.js:7946)\nVue.$mount (vue.common.js:8910)\nVue._init (vue.common.js:2398)\nVue._init (vue-router.common.js:1696)\nVueComponent (VM1168:2)\nbuild (vue.common.js:5915)\nactivate (vue-router.common.js:1164)\n(anonymous function) (vue-router.common.js:1457)\nstep (vue-router.common.js:1480)\n(anonymous function) (vue-router.common.js:1483)\ndeactivate (vue-router.common.js:1094)\nstep (vue-router.common.js:1482)\nrunQueue (vue-router.common.js:1477)\n(anonymous function) (vue-router.common.js:1441)\nstep (vue-router.common.js:1480)\n(anonymous function) (vue-router.common.js:1483)\n(anonymous function) (vue-router.common.js:1073)\n(anonymous function) (vue-router.common.js:821)\nVue._resolveComponent (vue.common.js:8208)\nresolveAsyncComponent (vue-router.common.js:819)\ncanActivate (vue-router.common.js:1065)\nstep (vue-router.common.js:1482)\nrunQueue (vue-router.common.js:1477)\n(anonymous function) (vue-router.common.js:1440)\nstep (vue-router.common.js:1480)\n(anonymous function) (vue-router.common.js:1483)\ncanDeactivate (vue-router.common.js:1048)\nstep (vue-router.common.js:1482)\nrunQueue (vue-router.common.js:1477)\nstart (vue-router.common.js:1439)\nstartTransition (vue-router.common.js:2370)\n_match (vue-router.common.js:2384)\nonChange (vue-router.common.js:2029)\nlistener (vue-router.common.js:954)\nstart (vue-router.common.js:957)\nstart (vue-router.common.js:2184)\n(anonymous function) (main.js:30)\nwebpack_require (bootstrap 78ac1\u20268c7d3a6495:520)\nfn (bootstrap 78ac1\u202658c7d3a6495:75)\n(anonymous function) (bootstrap 78ac1\u20268c7d3a6495:543)\nwebpack_require (bootstrap 78ac1\u20268c7d3a6495:520)\n(anonymous function) (bootstrap 78ac1\u20268c7d3a6495:543)\n(anonymous function) (bootstrap 78ac1\u20268c7d3a6495:543)\n```\nThank you!\n. ",
    "rmagnum2002": "For those who might get the same issue:\nYou'll need browserify plugin https://github.com/browserify-rails/browserify-rails in order to load validator as described in docs with:\njavascript\nvar VueValidator = require('vue-validator')\nVue.use(VueValidator)\nalso pay attention to broserify gem configs: config.browserify_rails.paths << /vendor\\/assets\\/javascripts\\/module\\.js/ if you add vue plugins using bower install they will probably be added to vendor folder and that's where you need the config above, like telling broserify gem to include a js from another folder then app/assets/javascripts.\n. ",
    "lmnsg": "@kazupon right, I add the simple codes on jsfiddle, just show you my need. \nif you can read.......\n. ",
    "zchking": "thanks\uff0cyes I have.\nAnd the problem is that \n``` javascript\n \n```\nthe name can't use the \"-\" to link the word such as \"signup-validation\".\nIs that bug or I lost some document?\n. thanks :+1: \n. ",
    "hldgaofeng": "html\n<!-- demo root element -->\n<div id=\"demo3\">\n    <validator name=\"validation1\">\n    <form id=\"search\" novalidate>\n        <!-- BUG? \u5728 v-bind:class \u4e2d\u65e0\u6cd5\u4f7f\u7528\u4e0b\u9762\u7684\u8868\u8fbe\u5f0f -->\n        <div class=\"form-group \"\n            v-bind:class=\"$validation1.mywords.valid ? 'has-success' : 'has-error'\"\n            >\n            <label class=\"control-label\">\u5173\u952e\u5b57</label> <input name=\"query\" \n            class=\"form-control\"\n            v-validate:mywords=\"{ maxlength: 2, required:true }\"\n            v-model=\"searchQuery\">\n        </div>\n    </form>\n    <div class=\"alert alert-danger\" v-show=\"!$validation1.mywords.valid\">\n        <span v-show=\"$validation1.mywords.required\">\u5173\u952e\u5b57\u5fc5\u987b\u586b\u5199\uff01</span>\n        <span v-show=\"$validation1.mywords.maxlength\">\u5173\u952e\u5b57\u6700\u5927\u957f\u5ea6\u4e3a 2 \u4e2a\u5b57\u7b26\uff01</span>\n    </div>\n    <pre> {{ $validation1 | json }} </pre>\n    </validator>\n    <table-ctl\n        test-prop=\"asdf\"\n    :data=\"gridData\"\n    :columns=\"gridColumns\"\n    :filter-key=\"searchQuery\">\n    </table-ctl>\n</div>\nUncaught TypeError: Cannot read property 'valid' of undefined(anonymous function) @ VM1470:3Watcher.get @ vue.js:3112Watcher @ vue.js:3080Directive._bind @ vue.js:7716linkAndCapture @ vue.js:6404compositeLinkFn @ vue.js:6382Fragment @ vue.js:4409FragmentFactory.create @ vue.js:4611insert @ vue.js:4653insert @ vue-validator.js:764render @ vue-validator.js:759(anonymous function) @ vue-validator.js:748(anonymous function) @ vue.js:216_dir.vm.(anonymous function) @ vue-validator.js:598bind @ vue-validator.js:753Directive._bind @ vue.js:7696linkAndCapture @ vue.js:6404compositeLinkFn @ vue.js:6382Vue._compile @ vue.js:7980Vue.$mount @ vue.js:8945Vue._init @ vue.js:2408Override.Vue._init @ vue-validator.js:317Vue @ vue.js:9004(anonymous function) @ test_ctl.html:249h.execCb @ require.js:30Z.check @ require.js:18(anonymous function) @ require.js:23(anonymous function) @ require.js:8(anonymous function) @ require.js:24v @ require.js:7Z.emit @ require.js:24Z.check @ require.js:19(anonymous function) @ require.js:23(anonymous function) @ require.js:8(anonymous function) @ require.js:24v @ require.js:7Z.emit @ require.js:24Z.check @ require.js:19(anonymous function) @ require.js:23(anonymous function) @ require.js:8(anonymous function) @ require.js:24v @ require.js:7Z.emit @ require.js:24Z.check @ require.js:19Z.enable @ require.js:23Z.init @ require.js:17E @ require.js:14h.completeLoad @ require.js:28h.onScriptLoad @ require.js:30\n. ``` html\n<!DOCTYPE html>\n\n\n\n\n\n\n\n\n\n BUG? v-bind:class can not access $validation1.mywords  ? \n\nPlease Enter:\n\n\n\n\nmust not empty!\nmaxlength = 2!\n\n\n\n\n        Vue.config.debug = true;\n        var vm = new Vue({\n            el: '#demo3',\n            data: {\n            }\n        })\n    \n\n\n```\nDownload the Vue Devtools for a better development experience:\nhttps://github.com/vuejs/vue-devtools\nvue.js:974 [Vue warn]: Error when evaluating expression \"{'asdf':$validation1.mywords.valid}\". \nvue.js:978 Uncaught TypeError: Cannot read property 'valid' of undefined(anonymous function) @ VM197:3Watcher.get @ vue.js:3112Watcher @ vue.js:3080Directive._bind @ vue.js:7716linkAndCapture @ vue.js:6404compositeLinkFn @ vue.js:6382Fragment @ vue.js:4409FragmentFactory.create @ vue.js:4611insert @ vue.js:4653insert @ vue-validator.js:1211render @ vue-validator.js:1206(anonymous function) @ vue-validator.js:1195(anonymous function) @ vue.js:216_dir.vm.(anonymous function) @ vue-validator.js:1027bind @ vue-validator.js:1200Directive._bind @ vue.js:7696linkAndCapture @ vue.js:6404compositeLinkFn @ vue.js:6382Vue._compile @ vue.js:7980Vue.$mount @ vue.js:8945Vue._init @ vue.js:2408Override.Vue._init @ vue-validator.js:365Vue @ vue.js:9004(anonymous function) @ index.html:29\n. Thanks a lot  for your response!\n. Thanks for your response!\nYes, I want a API to reset form validator's modified state.\nExample:\n``` javascript\n// modify form field values.\nform.field1 = value1;\nform.field2 = value2;\n...\nform.fieldn = valuen;\n// reset validator's modified flag to \"false\".\nform.$validator1.reset(); // will reset all field's modified state to \"false\"!!\n. javascript\n      key: 'manageElement',\n      value: function manageElement(el) {\n        var _this = this;\n    var _ = exports$1.Vue.util;\n\n    var scope = this._getScope();\n    var model = attr(el, 'v-model');\n    if (model) {\n      el.value = scope.$get(model) || '';\n      this._unwatch = scope.$watch(model, _.bind(function (val, old) {\n        if (val !== old) {\n          //el.value = val; // press \"delete\" key in a <input type=\"text /> will cause the caret jump to the end\n          _this.handleValidate(el);\n        }    \n      }, this));\n    }    \n  }\n\n. javascript\n          this.unwatch = scope.$watch(model, .bind(function (val, old) {\n            if (val !== old) {\n              //el.value = val; // el.value is already equal to val, why this code doing? thanks!\n              _this.handleValidate(el);\n            }  \n          }, this));\n        }  \n      }  \n```\n. ",
    "SimonJ": "But if you set Vue.config.warnExpressionErrors = false  it will not show warnings on other things, right?\nIs it not just a \"hack\"?\n. ",
    "tapaheh": "I confirm, the issue still persists\n```\n<input type=\"text\"\n  v-model=\"surname_user\"\n  v-validate:surname_user=\"['required']\"\n  v-bind:class=\"$validation.surname_user.valid ? '' : 'error'\"\n\n```\n\ntriggers vue.common.js?e881:987 [Vue warn]: Error when evaluating expression \"$validation.surname_user.valid ? '' : 'error'\": TypeError: Cannot read property 'valid' of undefined (found in component: <app>)\nIs there any way this can be fixed without having to set Vue.config.warnExpressionErrors = false?\n. ",
    "jxiaox": "Think's for your answer.\nIn my case,I use one page to show create and update.First,I show create page to create new page;And then I have a list to enter update page,and in update page user can modify it.Because those tow page has same form input,so I think I can use one page to show it.\n. ",
    "ikristher": "I also have a similar use case where in I need this feature. Hopefully this feature will be added soon\n. ",
    "IntellectProductions": "I'm getting this error too. I have a new installation and everything. My app.js file:\n``` js\nvar Vue = require('vue');\nvar VueValidator = require('vue-validator');\nVue.use(VueValidator);\nnew Vue({\n    el: '#main_content',\ncomponents: {\n    'register-page': require('./views/auth/register')\n}\n\n});\n```\nMy register.js file that is being referenced from the component:\njs\nmodule.exports = {\n    data: function() {\n        return {\n            account: null\n        };\n    }\n};\nJust a blank component, but I'm getting this error without even really doing anything, just by including it into my project.\nMy form that uses it:\n``` html\n\n\n        @include('partial.messages')\n    <validator name=\"reg_validation\">\n        <form action=\"{{ url('auth/register') }}\" method=\"post\">\n            @include('forms.register')\n            <button type=\"submit\" class=\"btn btn-primary\">Register</button>\n        </form>\n    </validator>\n</section>\n\n\n```\nMy register form that is being included:\nhtml\n<div class=\"row\">\n    <div class=\"col-sm-6\">\n        <div class=\"form-group\">\n            <label for=\"username\">Username</label>\n            <input type=\"text\" class=\"form-control\" id=\"username\" placeholder=\"Username\" v-validate:username=\"{ required: 'required', 'maxLength': 45, 'minLength': 4 }\" />\n            <div>\n                <span v-show=\"$reg_validation.username.required\">Username is required.</span>\n                <span v-show=\"$reg_validation.username.maxLength\">Username can only be 45 characters long!</span>\n                <span v-show=\"$reg_validation.username.minLength\">Username must be at least 4 characters long!</span>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-sm-6\">\n        <div class=\"form-group\">\n            <label for=\"name\">Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Name\" />\n        </div>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-sm-6\">\n        <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"************\" />\n        </div>\n    </div>\n    <div class=\"col-sm-6\">\n        <div class=\"form-group\">\n            <label for=\"password_confirmation\">Confirm Password</label>\n            <input type=\"password\" class=\"form-control\" id=\"password_confirmation\" placeholder=\"***********\" />\n        </div>\n    </div>\n</div>\n. ",
    "yuhangbest0317": "i also have this issues,\nand my Version:\n\"vue\": \"^1.0.14\", \"vue-validator\": \"^1.4.4\";\n. ",
    "luqingxuan": "i have this problem too\uff0cso i am waiting\uff0cplease can u give me the time when will resolve this problem\uff1f\n. ",
    "chestnutchen": "+1\n. ",
    "marcotaubmann": "Thank you for the hint.\nThe related issues say that the code\njavascript\nVue.config.warnExpressionErrors = false\nVue.config.debug = false\nshould avoid this problem at least for development and that it will be fixed in the future. \nBut if I apply that two settings I still get the error. In my console I don't get the [Vue warn]: Error when evaluating expression like in the related issues.\n. Found the problem. I'm sure it's related to my project setup and not a vue-validator bug. Sorry for the false alarm.\nIf you are interested here are my related files boiled down.\nindex.js\n``` javascript\nimport Vue from 'vue'\nimport router from './router'\nimport VueValidator from 'vue-validator'\nimport App from './App.vue'\nVue.use(VueValidator)\nrouter.start(App, '#app')\n```\nrouter.js\n``` javascript\nimport Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport Home from './Home.vue'\nimport SomeComponentThatUsesValidator from './SomeComponent.vue'\nVue.use(VueRouter)\nvar router = new VueRouter()\nrouter.map({\n    '/home': {component: Home, name: 'home'},\n    '/validatestuff': {component: SomeComponentThatUsesValidator}\n})\nexport default router\n```\nI think the Problem is that the Vue.use(VueValidator) from index.js is executed after the router.js and after the components using the validator are loaded. This would also explain why there were no problems after updating the component with hot module reload, because then the Vue.use(VueValidator) would have already been applied.\nWhen I import and use the vue-validator in the beginning of router.js it works. It maybe would be an even better application setup to let router.js export a router factory function which accepts the Vue or so. Or simply integrate the setup from router.js into index.js. But that is really not related to this issue anymore. :)\n. ",
    "tylersnyder": "@kazupon I'm having this issue as well, using v2.0.0-alpha.18 with vue@1.0.16. This error is thrown and prevents my app from rendering, even if I set Vue.config.debug and Vue.config.warnExpressionErrors to false.\nUncaught TypeError: Cannot read property 'minlength' of undefined\nresolveAsset    @   vue.common.js?e881:1914\n_resolveValidator   @   vue-validator.common.js?d93a:777\n(anonymous function)    @   vue-validator.common.js?d93a:690\neach    @   vue-validator.common.js?d93a:135\nvalidate    @   vue-validator.common.js?d93a:689\n(anonymous function)    @   vue-validator.common.js?d93a:1450\neach    @   vue-validator.common.js?d93a:135\nvalidate    @   vue-validator.common.js?d93a:1449\nupdate  @   vue-validator.common.js?d93a:443\nDirective._bind @   vue.common.js?e881:7858\nlinkAndCapture  @   vue.common.js?e881:6508\ncompositeLinkFn @   vue.common.js?e881:6477\nFragment    @   vue.common.js?e881:4462\nFragmentFactory.create  @   vue.common.js?e881:4679\ninsert  @   vue.common.js?e881:4721\n(anonymous function)    @   vue-validator.common.js?d93a:1722\n_dir.vm.(anonymous function)    @   vue-validator.common.js?d93a:1511\nsetupFragment   @   vue-validator.common.js?d93a:1728\nbind    @   vue-validator.common.js?d93a:1680\nDirective._bind @   vue.common.js?e881:7823\nlinkAndCapture  @   vue.common.js?e881:6508\ncompositeLinkFn @   vue.common.js?e881:6477\nFragment    @   vue.common.js?e881:4462\nFragmentFactory.create  @   vue.common.js?e881:4679\ninsert  @   vue.common.js?e881:4721\nupdate  @   vue.common.js?e881:4709\nDirective._bind @   vue.common.js?e881:7858\nlinkAndCapture  @   vue.common.js?e881:6508\ncompositeLinkFn @   vue.common.js?e881:6477\nVue._compile    @   vue.common.js?e881:8107\nVue.$mount  @   vue.common.js?e881:9098\nVue._init   @   vue.common.js?e881:2439\nOverride.Vue._init  @   vue-validator.common.js?d93a:386\nVue._init   @   vue-router.js?e71f:1724\nEditVehicleComponent    @   VM26619:2\nbuild   @   vue.common.js?e881:6047\nactivate    @   vue-router.js?e71f:1162\nbind    @   vue-router.js?e71f:1822\nDirective._bind @   vue.common.js?e881:7823\nlinkAndCapture  @   vue.common.js?e881:6508\ncompositeLinkFn @   vue.common.js?e881:6477\nFragment    @   vue.common.js?e881:4462\nFragmentFactory.create  @   vue.common.js?e881:4679\nremove  @   vue.common.js?e881:4731\nupdate  @   vue.common.js?e881:4712\n_update @   vue.common.js?e881:7835\nWatcher.run @   vue.common.js?e881:3286\nrunBatcherQueue @   vue.common.js?e881:3019\nflushBatcherQueue   @   vue.common.js?e881:2995\nnextTickHandler @   vue.common.js?e881:432\n. @kazupon\nI was unable to reproduce the issue using jsfiddle. http://jsfiddle.net/9x3mxvj0/13/\nThis helped me realize I was probably misunderstanding something. My project is using webpack and I have many components broken up into separate files. It didn't occur to me that each component may need to import or require VueValidator.\nI had only added the dependency to my main entry file, similar to how VueRouter is used. After adding the following to each component file, my project seems to be working as expected.\nimport Vue from 'vue'\nimport Validator from 'vue-validator'\nVue.use(Validator)\nI believe others who are attempting to use your project are running into similar issues - caused by confusion, rather than bugs. Improving documentation may help with this.\nThank you for your reply, and your work on this project.\n. @wklc2014, I was able to load VueValidator in only one spot by putting it in my top level component, App.vue, which is then passed into the router. It looks something like this:\nApp.vue:\n```\nimport Vue from 'vue' \nimport VueValidator from 'vue-validator'\nVue.use(VueValidator)\n...define and export App component\n```\nrouter:\nrouter.start(App, 'app')\nVueValidator is then passed into all of my child components which are loaded inside of App. I hope this helps!\n. @kazupon any updates as to when you think async validation may be implemented in 2.0?\n. Sure @kazupon, here is the stack trace from IE10:\n```\nt, app.12bda903e2e777abd6f8.js, line 14\nvalue, app.12bda903e2e777abd6f8.js, line 14\nvalue, app.12bda903e2e777abd6f8.js, line 14\nsetupValidate, app.12bda903e2e777abd6f8.js, line 14\nbind, app.12bda903e2e777abd6f8.js, line 14\n_bind, app.12bda903e2e777abd6f8.js, line 9\nSt, app.12bda903e2e777abd6f8.js, line 7\nAnonymous function, app.12bda903e2e777abd6f8.js, line 7\nst, app.12bda903e2e777abd6f8.js, line 7\ncreate, app.12bda903e2e777abd6f8.js, line 8\ninsert, app.12bda903e2e777abd6f8.js, line 8\nAnonymous function, app.12bda903e2e777abd6f8.js, line 14\nAnonymous function, app.12bda903e2e777abd6f8.js, line 14\nsetupFragment, app.12bda903e2e777abd6f8.js, line 14\nbind, app.12bda903e2e777abd6f8.js, line 14\n_bind, app.12bda903e2e777abd6f8.js, line 9\nSt, app.12bda903e2e777abd6f8.js, line 7\nAnonymous function, app.12bda903e2e777abd6f8.js, line 7\n_compile, app.12bda903e2e777abd6f8.js, line 7\n$mount, app.12bda903e2e777abd6f8.js, line 8\n_init, app.12bda903e2e777abd6f8.js, line 7\n_init, app.12bda903e2e777abd6f8.js, line 14\n_init, app.12bda903e2e777abd6f8.js, line 42\nEditVehicleComponent, Function code (6), line 2\nbuild, app.12bda903e2e777abd6f8.js, line 9\nE, app.12bda903e2e777abd6f8.js, line 42\nAnonymous function, app.12bda903e2e777abd6f8.js, line 42\ni, app.12bda903e2e777abd6f8.js, line 42\n\nAnonymous function, app.12bda903e2e777abd6f8.js, line 42\nS, app.12bda903e2e777abd6f8.js, line 42\ni, app.12bda903e2e777abd6f8.js, line 42\nrunQueue, app.12bda903e2e777abd6f8.js, line 42\nAnonymous function, app.12bda903e2e777abd6f8.js, line 42\ni, app.12bda903e2e777abd6f8.js, line 42\nAnonymous function, app.12bda903e2e777abd6f8.js, line 42\nAnonymous function, app.12bda903e2e777abd6f8.js, line 42\nAnonymous function, app.12bda903e2e777abd6f8.js, line 42\nresolveComponent, app.12bda903e2e777abd6f8.js, line 7\nL, app.12bda903e2e777abd6f8.js, line 42\nD, app.12bda903e2e777abd6f8.js, line 42\ni, app.12bda903e2e777abd6f8.js, line 42\nrunQueue, app.12bda903e2e777abd6f8.js, line 42\nAnonymous function, app.12bda903e2e777abd6f8.js, line 42\ni, app.12bda903e2e777abd6f8.js, line 42\nAnonymous function, app.12bda903e2e777abd6f8.js, line 42\nY, app.12bda903e2e777abd6f8.js, line 42\ni, app.12bda903e2e777abd6f8.js, line 42\nrunQueue, app.12bda903e2e777abd6f8.js, line 42\nstart, app.12bda903e2e777abd6f8.js, line 42\nc, app.12bda903e2e777abd6f8.js, line 42\ni, app.12bda903e2e777abd6f8.js, line 42\nAnonymous function, app.12bda903e2e777abd6f8.js, line 42\nm, app.12bda903e2e777abd6f8.js, line 42\n, app.12bda903e2e777abd6f8.js, line 42\ncallHook, app.12bda903e2e777abd6f8.js, line 42\nAnonymous function, app.12bda903e2e777abd6f8.js, line 42\ni, app.12bda903e2e777abd6f8.js, line 42\nrunQueue, app.12bda903e2e777abd6f8.js, line 42\n_match, app.12bda903e2e777abd6f8.js, line 42\nonChange, app.12bda903e2e777abd6f8.js, line 42\ngo, app.12bda903e2e777abd6f8.js, line 42\ngo, app.12bda903e2e777abd6f8.js, line 42\ngoToVehicleDetails, app.12bda903e2e777abd6f8.js, line 27\nAnonymous function, app.12bda903e2e777abd6f8.js, line 7\nsave, app.12bda903e2e777abd6f8.js, line 27\nAnonymous function, app.12bda903e2e777abd6f8.js, line 7\n```\n. @kazupon I've tested your fix in the development build. Seems to work in IE9 and IE10. Thanks!\n. \n",
    "devinchen": "@tylersnyder \nThank you, that snippet really save my life !\n@kazupon \nBTW, is there any way to register vue-validator plugin only once?\n. ",
    "murbanowicz": "I have it like that in my entry point:\n// vue-validator\nvar VueValidator = require('vue-validator');\nVue.use(VueValidator);\nbefore vue-router etc. \nand I am getting Cannot get minLength/required/maxLength' of underfined\nAny help?\n. > Can you provide the minimum codes please?\n@kazupon what you want exactly? I've provided all relavant code. What else you need? I am really confused why it is still not working.\n. I can even send you whole project if you want? Any email ?\n2016-05-05 16:28 GMT+01:00 kazuya kawaguchi notifications@github.com:\n\nSorry, In my enviroment, I tried to reproduce, but I could not confirmed.\nI hope that you provide the reproduction info (minimum codes, error call\nstacks,etc ...) to me.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/vuejs/vue-validator/issues/212#issuecomment-217186189\n. It is my duty to clarify it: I had attached vue.js inside my html template when I already have it compiled within my webpack built file and it was causing this issue. sorry!\n. \n",
    "wklc2014": "@mariaczi   hello, do you solve this problem for install vue-validator before route.map method?\nI has write as that, but I still report which mistakes\n. @tylersnyder hello, the problem that the plugin users have to install vue-validator plugin for each form component is resolve?\nin my project, At first, I install the plugin at my entry point that route.js or main.js for example (route.js is my project for define app route and main.js is webpack entry file), But there was problem like \nUncaught TypeError: Cannot read property 'required' of undefined\nAnd then, I import and install it in my form component, it work.\nSo probably solve the problem of the use of this plugin, But I think it so trouble, is there any thing for it?\nthank you\n. @tylersnyder Thank you very much for your help, it work.\nbefore this, somebody tell me that I should install vue-validator plugin before route.map as some reason if I use vue-router, so I do that in route.js file.\nAs you said, install this plugin in app.js is good idea.\nThank you again for your help\n. ",
    "Nandiin": "Working solution:\n\nI was able to load VueValidator in only one spot by putting it in my top level component, App.vue, which is then passed into the router. It looks something like this:\nApp.vue:\nimport Vue from 'vue' \nimport VueValidator from 'vue-validator'\nVue.use(VueValidator)\n...define and export App component\nrouter:\nrouter.start(App, 'app')\nVueValidator is then passed into all of my child components which are loaded inside of App. I hope this helps!\n\nBefore this, I've tried the trick in #188 ,which is now added in documentation\n\nif you are using vue-router, you must install with Vue.use() in advance of instance methods (router#map, router#start, ...etc).\n\nTHIS DOESN'T WORK, AT LEAST IN MY SITUATION.\nThere is my setup file ( webpack entry file ) looked like:\n``` javascript\nimport Vue from 'vue'\nimport Validator from 'vue-validator'\nVue.use(Validator)\nimport Router from 'vue-router'\nimport App from './components/App.vue'\n//import other components\nVue.use(Router)\nVue.use(Resource)\n```\nthe vue-validator was installed before the vue-router, but the exception was still there\n@kazupon So, I think this \"bug\" may not only related to the installation sequence, and the documentation probably write this solution down. \n. A workaround, but not neat. jsfiddle\n. @jackPanyj \nYeah, I don't know why, but the solution is assigning different validator field name to each branch, like updated jsfiddle. Note that the first validator's field name is input1 while the second one is input2\n. ## Update\nI've updated your jsfiddle and it works now, look at here\nThe main idea is: keep using single validator scope but set the validator field name dynamically, reference here\nOriginal\nhow about using Grouping\n. @kazupon Then is there a work around ?\n. I come up with a work around:\nAssume that the DOM tree looks like this\n---- div.wrapper ------ input.validated\n                  |---- div.expected\nthen I can put the v-validate-class directive on div.wrapper, which is an ancestor node of validated input field, and write the stylesheet as:\n.invalid.touched .expected {\n    border: 1px red solid;\n    /* whatever you want */\n}\n. I took a glance at commit0859cd and it seems that validation happens on input event and my problem here may need a validation on change event. Haven't dug deep enough to the source code though.\n. Hello @kazupon , is there any update on this problem?\n. NP, just asking. :)\nGood luck\n. changeing :field=\"getField($index) to :field=\"getField(n)\" magically works, though don't know why yet\n. Haha, solved it updated jsfiddle. I think the problem is related to reusability feature of v-for directive. I added a track-by=\"$index\" to the v-for directive's element and the code runs correctly now.\n. It seems that when the validatorForUserName variable is changed to ['theBacon'] from ['theCheese'], the former validator is not removed, i.e. there are actually two validators ['theCheese', 'theBacon'] on that input field after that change. This can be observed by adding a line of html <pre> {{ $validation1 | json }} </pre> to @szkrd 's jsfiddle.\n@kazupon , I know you're busy developing the 3.0 version, but this may can be solved by adding a few lines of cleaning up code in proper place if my guess is right.\n. I found a similar issue #188, the exception stack is extremly identical\nI've tried to import and install validator before router, but it's still not working\n. Solved, watch my comment on issue 130\n. maybe a reproduction link will motivate people to look into your problem\n. [note for future visitors] refer to this issue for solution #280, similar #249\n. similar #249 \nThe use-case is mostly identical, so you can refer to my comment on this issue.\nThe point is you are rendering a list of inputs using v-for directive but assigning a static validation field name ( in your demo, 'amount'), so the last item of the list overrides the former ones.  Dynamic field names are needed in this case. \nThere is my modification on your codepen\n. This issue can be closed I think @kazupon \n. ",
    "kenberkeley": "@tylersnyder I love you man, you saved my life...\nBTW, I do try putting Vue.use(VueValidator) in App.vue or main.js\nBut still not working for Webpack Code-Splitting SPA.\nSo I have a single initialization file named initValidator.js:  \nimport Vue from 'vue'\nimport VueValidator from 'vue-validator'\nVue.use(VueValidator)\nIf I need form validation in a component, just do it:\nimport 'path/to/initValidator'\nexport default { ......Component...... }\nP.S: No need to do this in entry file before use vue-router.\n. ",
    "losadaem": "Besides the Firefox bug it is worth considering if a disabled input needs to be validated.\n. Done. Let me know if any changes need to be made.\n. ",
    "neekychan": "Have anyother best solution?Have anyother best solution?\n. ",
    "kwzm": "The link https://github.com/vuejs/vue-validator/blob/dev/test/specs/directives/validate.js#L49 is 404.\n. Sorry,I just see the reply.\nEn,actually I don't understand your meaning.\nIn fact,my example before already had the field attribute.\n <div class=\"category-box\" v-for=\"item in allAlbumCategories\"> <input type=\"checkbox\" :id=\"'category_'+item.id\" :value=\"item.id\" v-model=\"postData.category_ids\" initial=\"off\" v-validate:category=\"['required']\"> <label :for=\"'category_'+item.id\">{{item.name}}</label> </div> <span class=\"error\" v-if=\"$validation.category.required\">\u8bf7\u9009\u62e9\u66f2\u96c6\u7c7b\u578b</span>\nYou can see the field is catrgory,so I can't understand your meaing.\nI think if you want me to use dynamic field attribute,but I don't know how to use.\nOr you refer to the other meaing.\nLooking forward to your reply.\nPS:If you can provide a example I will be very grateful to that.\n. You are very clever! Use jsfiddle is a good idea!\nso this is the link\nhttps://jsfiddle.net/8cwsopq0/2/\nThe surprising part is the example is success!\nHowever,use the same code my project exports error.\nLike this:\n\n[Vue warn]: Error when evaluating expression \"$validation.category.required\": TypeError: Cannot read property 'required' of undefined\n\nSo I think there must has some differents between them.\nFinally, I find variable categoryList in my project is dynamic getted,I guess it maybe the reason.\nSo I use v-if to judge when categoryList has value.\nlike this:\n<template v-if=\"allAlbumCategories.length>0\">\n                                        <div class=\"m-radioOrCheckbox-box\" v-for=\"item in allAlbumCategories\">\n                                            <input type=\"checkbox\" :id=\"'category_'+item.id\" :value=\"item.id\" v-model=\"postData.category_ids\" initial=\"off\" v-validate:category=\"['required']\">\n                                            <label :for=\"'category_'+item.id\">{{item.name}}</label>\n                                        </div>\n                                        <span v-if=\"$validation.category.required\" class=\"error category-error\">\u8bf7\u9009\u62e9\u66f2\u96c6\u7c7b\u578b</span>\n                                    </template>\nFinally it confirms my guess is right.\nThank you for your guidance\uff01\uff01\nPs: Please forgive my poor English!\n. ",
    "zhoucumt": "hello ,I want to see this example: https://github.com/vuejs/vue-validator/blob/dev/test/specs/directives/validate.js#L49, but it is 404.Thank you!\n. ",
    "nacr": "Can any one help me????\n. tks will give it a go :+1: \n. Tks @kazupon, all is well sorry for the noob question.\n. Will check tks :)\n. tks for the info. <3 your work.\n. ok tks, I hope it is supported :)\n. Tks for your feed back :) :+1: \n. ",
    "nicolasbeauvais": "npm install --save vuejs/vue-validator#v2.0.0-alpha.20 solved it for me, and it avoid installing all the dev dependencies if you don't need them.\n. ",
    "steven-klein": "If you are using vue-router, I found that using vue-validator before the router fixed the issue.\n```\nvar VueValidator = require(\"vue-validator\");\nvar VueRouter = require(\"vue-router\");\nVue.use( VueValidator );\nVue.use( VueRouter );\n```\n. ",
    "carychenyan": "thanks\n. ",
    "woshi82": "i am using  vue-validator v2.1.3  vue  v1.0.16 ,\n. I'm also got this error, i am using vue-validator v2.1.3 vue v1.0.16 , i have try the ways upfloor,but useless.\n[Vue warn]: Unknown custom element: <validator> - did you register the component correctly? For recursive components, make sure to provide the \"name\" option.\n. @abbymrs hi,the problem went  too long,\nthe validator component deprecated\uff0c https://github.com/kazupon/vue-validator/issues/257. hi~ @kazupon  the same issue still appeared in v3.0.0-alpha.2, i have try the example in https://github.com/kazupon/vue-validator/commit/b5d5487  , but it not work. @kazupon  the way you show to get value is not elastic\uff0c\n1\u3001must i bind input event to every form input to get its value?\n2\u3001it seem like  only bind @input | @change event can activate the validators\uff1f\n. I have meet this problem too , \u2026\u2026\n.  otherwise, how to get the validity s  in validation quickly ,except  this.$refs.validityName. @karaoak  any update?   i like this frame because of the elegant coding in my project. ",
    "liuyanghe19910609": "what can I say?\nI 'm f*cking by this Qusetion and I don't know what can I do\u2026\u2026\nSo I search on the Bing and find this page^\nhehehe^^^^\nI don't know what you say\u2026\u2026. \u554a\u2026\u2026\u8fd9\u4e48\u8bf4\u597d\u8d39\u52b2\uff0c\u800c\u4e14\u6211\u672c\u6765\u82f1\u8bed\u5c31\u6bd4\u8f83\u6e23\u6e23\n\u76f4\u63a5\u8bf4\u95ee\u9898\nvalidator\u7684\u5305\u6216\u8005\u8bf4\u7ec4\u4ef6\u6211\u5df2\u7ecf\u5b89\u88c5\u597d\u4e86\nnpm install validator --save-dev\n\u5b89\u88c5\u597d\u4e86\uff0c\u4f46\u662f\u5e76\u6ca1\u6709\u4ec0\u4e48\u5375\u7528\u2026\u2026\n\u91cd\u65b0\u542f\u52a8\u670d\u52a1\u7136\u540e\u9875\u9762\u4f9d\u7136\u62a5\u9519\n\u8bf4\u8d77\u6765\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u6ca1\u6cd5\u8d34\u56fe\uff1f. ",
    "zhifuliu": "@liuyanghe19910609 \u4f69\u670d\u4f69\u670d\u3002\n. Thank you. \ud83d\udcaf \n\n. ",
    "QinFeiFei": "3.0\u7248\u672c\u7528 . validation. \u4e0d\u662f validator. vue-validator 3.0.0-alpha.2. ",
    "water-li": "use  instead of . ",
    "cheaprYang": "\u6211\u64e6 . \u5e0c\u671b\u5404\u4f4d\u770b\u7684\u61c2\u4e2d\u6587. ",
    "kzima": "alternatively we can have some prop on the <validator> tag, maybe something like \n<validator :result.sync=\"syncedProp\">.\nThis way we can watch syncedProp in the vue instance.\n. @lazabogdan thanks for suggestion, but this only works on the input level. I need to know when all my inputs within validator tag are valid. \n. ",
    "szkrd": "Is this working? I have problems setting it up:\nhttps://jsfiddle.net/szabi/7t8g31je/1/\n. @stefan-neuser How did you programmatically change the 'required' property? I delete it from my rules, but it doesn't seem to be working.\nI even tried it with mutated/flushed array with 'required'\nhttps://jsfiddle.net/szabi/hv77xjus/\n@kazupon is it possible to change required dynamically?\n. I do know about the v-if workaround, but with 10+ fields this is  a no go (especially if the ui needs to show a \"readonlyish\" fake field). I could \"fix\" it with async/promise validators, but that's another terrible hack. At least I can get away with no fake inputs or if switchers.\n. I'm pretty new to Vue, but I think this watch-update bug happens here:\nhttps://jsfiddle.net/szabi/v0jm4xgy/\nA manual focus and blur fixes the value, but not the value change in the watcher.\n. I could \"make it work\" with async, but it kinda feels like a hack.\nhttps://jsfiddle.net/szabi/Lk9nmfed/2/\n. ",
    "ardoramor": "Yes, thanks! It works!\n. ",
    "codylandry": "I'm having issues with getting vue-validator working at all in the jsfiddle, but here is what I'm trying to do.  I can't reproduce the error in the fiddle, because I can't get Vue to recognize vue-validator.  \nhttps://jsfiddle.net/codylandry/y7ywo72n/11/\nI've had the best luck with using the hidden checkbox with the validator 'definition' setup there.  This is how I got the results above.\n. Actually, now it\u2019s behaving exactly as in my application.  \nSteps:\n1. Check 1 box and valid stays false. I would expect valid to become true at this point.\n2. Check a second box and valid becomes true.\n3. Uncheck both boxes and valid remains true.\nLet me know if this still doesn\u2019t make sense.  Ideally, you wouldn\u2019t have to have a hidden checkbox to define the validator options, but if you set the options in any of the dynamic checkboxes, it doesn\u2019t work at all.\n\nOn Feb 2, 2016, at 10:34 AM, kazuya kawaguchi notifications@github.com wrote:\nThanks for your reproduction code.\nI changed the your vue-validator specified with standalone js file to latest version.\nhttps://jsfiddle.net/kazupon/yma52y42/1/ https://jsfiddle.net/kazupon/yma52y42/1/\nCan you update reproduction setting please ?\n\u2014\nReply to this email directly or view it on GitHub https://github.com/vuejs/vue-validator/issues/146#issuecomment-178639384.\n. This issue seems to have been fixed in the latest release.\n\nhttps://jsfiddle.net/c5014yhf/\n. I tried to test the fix by replacing vue-validator in the jsfiddle and it still behaves the same.  After toggling the v-if back on, nothing is displayed in the textbox.\nhttp://jsfiddle.net/cobby4h3/1/\n. Awesome. Thanks for the fast response!\n. thats backwards actually.  you need to use:\nv-validate:first-name=\"['required']\"\nand reference it with $yourValidatorName.firstName\n. ",
    "Almis90": "Okay please update documentation :)\n. Sorry my bad... I was looking at 1.4.4 :/\n. Hey can you explain me please how I can now manually re-evaluate with your latest code change now? \n. ",
    "jbrooksuk": "NPM is the replacement.\n. ",
    "yugasun": "No I use v2.1.7\uff0cbut when I add v-validate to input[type=\"file\"] element, file has been selected, it doesn't update validate status, then if I click some other place, validate status updated. Has anybody get the same issue?. ",
    "danjac": "I did find an example here https://github.com/vuejs/vue-validator/wiki/Usage-for-v0.12-later#async-validation but it appears to be out of date with the current release.\n. No problem, glad you're working on it.\nWhat do you expect async-validation in 2.0 to look like? The 1.4* returned a plain function with (resolve, reject) arguments, but perhaps a straightforward Promise would be a more \"natural\" way of handling async.\n. ",
    "leemason": "Ive created a fiddle, however its not quite behaving the same as my actual code, as im getting errors even before the problem im having.\nthe fiddle is setup to simply add errors via the this.$setValidationErrors(); call, but strangly jsfiddle is reporting that function is undefined???\nalso the \"pre\" response validator errors arent even showing up in the dom, which IS working on my project.\nI can tell the validation is happening as the login button is disabled until a valid email and min 6 char password is added, and the errors can be seen using {{ $login | json }}.\nim more of a php guy so cant be sure if the jsfiddle problems are because of me, or what.\nIt shows what im trying to do but could be confusing.\nin jsfiddle = $setValidationErrors is failing (works on my project)\nin my project $setValidationErrors is not failing, but the new error messages arent being reported to the dom.\ndoes that make sense?\nhttps://jsfiddle.net/2p2tyjLd/26/\n. appologies, yes it was some stylign within the css hiding the errors, thanks for your help.\n. ",
    "itopizarro": "I'm having a (possibly related) issue with IE9. And it looks like IE9 is choking on the Object.getPrototypeOf( SelectValidation ) on line 1180. As far as I can tell so far, changing that to (the much less safe) SelectValidation.__proto__ seems to work. But. I haven't done rigorous testing yet.\nI made a test scenario (roughly) mirroring the conditions in which the SelectValidation fails in IE9. In the actual library, it looks like that Object.getPrototypeOf( SelectValidation ) isn't returning the expected instance of BaseValidation(field, model, vm, el, scope, validator, detectBlur, detectChange)\u2026. \nFiddle\n. ",
    "pkat": "I'm having the same issue with v-validate on select elements with the hasAttribute error\n. Yep. I believe this solves the IE10 issue on select elements. Can we get a release with these changes/fix?\n. ",
    "sintario": "FYI, https://babeljs.algolia.com/docs/advanced/caveats/#internet-explorer\n. ",
    "jakejscott": "I'm having the same issue, when I tab from the first field in the form touched changes to true, but when I tab from subsequent fields the touched property doesn't change.\n. ",
    "lensgolda": "+1\nor it would be nice to pass field as argument to validator check function, or somehow to get access to current field.\n. ",
    "blocka": "I'm currently trying to implement a validator with intlTelInput. I'm running into an issue whereas the this.el is not what it should be. I'm setting up intlTelInput using a custom directive. With the default priority (with my directive running first), this.el is the containing div created by the plugin. If I set the priority so that it runs after the validator directive, this.el is the the input itself, but not the same exact object. It is lacking the data() from intlTelInput\n. Have you gotten this to work with a required validator? Since this.el is not an input, the required validator fails, as there's no value.\n. @kazupon is there a reason you pass this.frag.node here instead of this.el?\n. I have this working with some less than ideal code.\nMy directive has priorty 2002 set, so that it runs after the validator.\nMy validator looks like this:\n```\nvalidPhone(val) {\n    const el = this.vm._directives.find(d=>d.name == 'validate' && d.field == this.field).el;\nel.value = val;\n\nreturn $(el).intlTelInput(\"isValidNumber\")\n\n}\n```\nI'm essentially locating the original this.el (which is still hanging out on the directive), however it doesn't have the value set, so I do that manually here. Now isValidNumber works, and the required validator is happy to, because it has an element.\n. By the way, you don't need the element at all for this. You can do it all using the intlTelInputUtils library.\nFor example intlTelInputUtils.isValidNumber(\"+15555555555\",\"\") \nIf you pass \"\" as the country code, combined with a + at the beginning, it will parse the country code for you. \n. What happens if you have a field A that depends on the value of B? If field B gets updated, I would want the validation to rerun on field A.\n. Ran into this today as well. For some reason, it was being evaluated as a statement expression, so I had to do @valid=\"onValid()\"\n. I think it was fixed here #243 \n. Perhaps its worth it to add this attribute to the form automatically? This is what jquery validate does, and I can't see a reason why you wouldn't want it.\n. Looking forward to being able to validate custom components.\n. Bolderdash....there are very compelling reasons to use vue2 and its been\nrecommended for greenfield projects since the rcs....that said it's not\ndifficult to implement basic validation yourself.\nOn Oct 20, 2016 4:24 PM, \"Nathaniel Blackburn\" notifications@github.com\nwrote:\n\n@miedzinski https://github.com/miedzinski I understand that but you\nshouldn't have upgraded to Vue 2.0 until everything is compatible.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/vuejs/vue-validator/issues/257#issuecomment-255104652,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AACoulBwz1u5paeolegIT3RpOthcIHsVks5q12ukgaJpZM4I1OJA\n.\n. It's only one small piece of a puzzle....not having vue-validate should not\nbreak a project\n\nOn Oct 20, 2016 4:37 PM, \"Nathaniel Blackburn\" notifications@github.com\nwrote:\n@blocka https://github.com/blocka Which would be fine but they are\ndepending on this project which is not currently compatible with Vue 2.0,\nhopefully you can appreciate why that is a bad move.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/vuejs/vue-validator/issues/257#issuecomment-255107795,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AACouo2gz_ayZ3mhBwcJVf0eCpVdbGvRks5q126PgaJpZM4I1OJA\n.\n. ",
    "pavgra": "I use intlTelInput in the following way:\nHTML:\n<input type=\"text\" placeholder=\"Phone number\" v-model=\"phone\" v-validate:phone=\"['intlTelInput']\" v-intl-tel-input=\"{country: 'ru'}\" required>\nDirective:\n```\nVue.directive('intl-tel-input', {\n    bind: function() {\n        var paramsGetter = new Function('return ' + this.expression + ';'),\n            params = paramsGetter.apply(this.vm),\n            $el = $(this.el);\n    $el.intlTelInput({\n        nationalMode: false,\n        preferredCountries: [params.country.toLowerCase()],\n        utilsScript: '/js/utils.js'\n    });\n\n    $el.intlTelInput('setCountry', params.country.toLowerCase());\n}\n\n});\n```\nValidator:\nVue.validator('intlTelInput', function(val) {\n    var $input = $(this.el).find('input');\n    if ($input.intlTelInput('getNumber')) {\n        this.dirty = true;\n    }\n    return $input.intlTelInput('isValidNumber');\n});\n. No. I've tried, but with no success. However isValidNumber returns false (not valid) when it is called on empty string, that's why I feel satisfied with the solution.\n. ",
    "chrisbarry": "Ah, ye old kebab to camelcase conversion. Noted.\n. ",
    "thatandyrose": "@kazupon hmm but sometimes we don't want an empty value? I think the validator should know that nothing is selected by seeing that there are no selected options?\nThis sounds like a bug to me no @kazupon? Could you point me to the bit of code that looks for this, maybe I can issue a PR?\n. ",
    "taoche": "I know this solution,  but I want to the future will solve this problem it ?\n. Thank you for your answer\n. ",
    "kenchan0130": "Hi, @kazupon \nIt works now, thanks!\n. ",
    "trevorgehman": "@kazupon Has this issue come back in 2.0.2? I had to revert to 2.0.0 because textareas in IE10/11 were messing up again with placeholders.\n. ",
    "littleyan-xu": "https://jsfiddle.net/xxyzjb/p4j95xhc/\n\n[Vue warn]: v-show=\"$validation[itemval{{n}}].touched && $validation[itemval{{n}}].required\": attribute interpolation is not allowed in Vue.js directives and special attributes.\n\nwhen running this code,the console shows the warning above, so I want to know how to show error message correctly in this situation ?\n. Thank you very much~! \n. ",
    "vnctaing": "I have the same problem whenever I try to use more than one <validator>\nI am using vue-validator@2.0.0-beta.3 and vue@1.0.18\n. ",
    "GuillaumeLeclerc": "Sorry for the inactivity but I'm not able to reproduce in a fiddle since I don't know how to use vue-validator, one of my cowerkers did this. I just ran npm update and everything stopped working. I don't have more insights.\n. ",
    "kating": "I have same problem, and made a repro code. \nhttp://jsfiddle.net/fvkux5dq/\nusing vue-validator@2.0.0 and vue@1.0.20\nI noticed:\n- This happen when using custom component and more than one validator element.\n- vue-validator pass not HTMLElement but DocumentFragment to FragmentFactory constructor\n- FragmentFactory set linker from cache, using key generated from HTMLElement. DocumentFragment instead of HTMLElement can't create proper cache key. (@vuejs)\n. ",
    "hq5544": "@kazupon Thanks!\n. ",
    "lewiscutey": "Uncaught RangeError: Maximum call stack size exceeded\n    at RegExp.exec ()\n    at RegExp.[Symbol.match] ()\n    at String.match (native)\n    at compileToFunctions (http://127.0.0.1:8080/node_modules/vue/dist/vue.js:9021:28)\n    at VueComponent.Vue$3.$mount (http://127.0.0.1:8080/node_modules/vue/dist/vue.js:9282:19)\n    at init (http://127.0.0.1:8080/node_modules/vue/dist/vue.js:2934:15)\n    at createComponent (http://127.0.0.1:8080/node_modules/vue/dist/vue.js:4653:11)\n    at createElm (http://127.0.0.1:8080/node_modules/vue/dist/vue.js:4596:11)\n    at VueComponent.patch [as patch] (http://127.0.0.1:8080/node_modules/vue/dist/vue.js:5052:9)\n    at VueComponent.Vue._update (http://127.0.0.1:8080/node_modules/vue/dist/vue.js:2042:21). ",
    "geraldbiggs": "Hi, very quick comment here. \nI use a computed property for this inside the component which wraps around all my inputs. If you weren't wrapping it inside a component, your usage will vary.\nerrors () {\n        return this.errors.touched ? this.errors.invalid && Object.keys(this.errors).length : false\n      }\nThen I use errors as the truthy test to show errors, or switch on an error class to highlight invalid entries.\nSo, basic example: \nThe form starts off with no errors. \nA user clicks a required field, enters nothing. \nThen clicks another field, an error shows.\nIf a user deletes everything in a required field the first time, it shows the error and red highlight AFTER they blur (preventing a premature error message). Subsequent edits, will flash the error message\n. @aristidesfl How does detect-change=\"off\" differ from you are discussing?\nhttp://vuejs.github.io/vue-validator/timing.html\n. ",
    "wangwenjie1314": "Please Test\uff1a\nhtml\n<div class=\"hi-form-group\" :class=\"{'hi-form-error': $vform.phone.required || $vform.phone.phone || $vform.phone.phoneExist }\">\n    <input type=\"number\" class=\"hi-form-field\" v-model=\"user.phone\" pattern=\"[0-9]*\" autocapitalize=\"off\" autocorrect=\"off\" initial=\"off\" detect-change=\"off\" v-validate:phone=\"{required: true,phone: true, phoneExist: true }\" placeholder=\"\u8bf7\u8f93\u5165\u624b\u673a\u53f7\">\n</div>\nthe most important config is:\ninitial=\"off\" detect-change=\"off\"\n\nread more:\nhtml\n<!-- 'inital' attribute is applied the all validators of target element (e.g. required, exist) -->\n<input id=\"username\" type=\"text\" initial=\"off\" v-validate:username=\"['required', 'exist']\">\n\u8bbe\u7f6e\u6807\u7b7e\u4e0a initial=\"off\" \u8be5\u6807\u7b7e\u4e0a\u6240\u6709\u9a8c\u8bc1\u521d\u59cb\u5316\u5747\u4e0d\u9a8c\u8bc1\n\nhtml\n<!-- 'initial' optional is applied with `v-validate` validator (e.g. required only) -->\n<input id=\"password\" type=\"password\" v-validate:passowrd=\"{ required: { rule: true, initial: 'off' }, minlength: 8 }\">\n\u8bbe\u7f6e\u6807\u7b7e\u4e0a \u9a8c\u8bc1\u4e2d\u7684\u5355\u4e2a\u4e2d initial=\"off\"\uff0c\u5219\u521d\u59cb\u5316\u4e0d\u9a8c\u8bc1\u8be5\u5355\u4e2a\u9879\n\ndetect-blur\u00a0and\u00a0detect-change\nvue-validator validate automatically when detect DOM event (input,\u00a0blur,\u00a0change) \nin formalable elements (input, checkbox, select, etc). In the case, use the\u00a0detect-change,\u00a0detect-blur\u00a0attributes:\nhtml\n<input id=\"username\" type=\"text\" \n          detect-change=\"off\" detect-blur=\"off\" v-validate:username=\"{\n          required: { rule: true, message: 'required you name !!' }\n        }\" />\ndetect-change=\"off\"  \u5173\u95ed\u503c\u6539\u53d8\u9a6c\u4e0a\u9a8c\u8bc1\ndetect-blur=\"off\" \u5173\u95ed\u8f93\u5165\u6846\u5931\u53bb\u7126\u70b9\u9a8c\u8bc1\n. ",
    "bennettrogers": "@aristidesfl Thanks for the jsbin and for solving your own problem. This is exactly what I was looking for! \ud83d\udc4d \n. ",
    "nblackburn": "Seems as though it could be related to #177.\n. @kazupon Great, thanks for the prompt response.\n. @kazupon My pleasure!\n. Got the same issue, hopefully this can be resolved soon.\n. @astroanu The latest 1.x release\n. Getting close now, good job @kazupon.\n. @joe434200 not yet, but we are getting close.\n. @miedzinski You can't, it's not ready for Vue 2.0 yet.\n. @xereda When it's done, there isn't really a timeframe on this from what i can see.\n. @miedzinski I would wait until we have an update, shouldn't be long now.\n. @miedzinski I understand that but you shouldn't have upgraded to Vue 2.0 until everything is compatible, it's only sensible not to.\n. @blocka Which would be fine but they are depending on this project which is not currently compatible with Vue 2.0, nor can they blame it for being the reason their app doesn't ship in time.\n. @ryandeussing This is the only official one that is lagging behind but i fully agree with you especially being an official plugin.\n. @blocka Why wouldn't it if you upgrade everything else knowing there are breaking changes as it's a MAJOR release. It was irresponsible and they should have waited waited for it to become compatible before doing anything.\n@kazupon Is working on it, please be patient.\n. @jrenton Last update to the code was 11 hours ago.. The first alpha is available now: https://github.com/vuejs/vue-validator/issues/257#issuecomment-255720218, fancy closing this?\n. @liujinyang1994 It's not released yet, it is not advised you do until it is.. ",
    "jorisnoo": "this would be a great feature!\n. ",
    "xjchengo": "I did a try to support child components validation at feature-support-child-components.\n. @kazupon Okay, I will have a try to finish the feature.\n. @crossjs Hi, I have read your PR. Why need to use current component's vm as fallback?\n. @perkola I will send a PR soon and post my questions. Any advise is welcome.\n. @crossjs Thanks.\n. @kazupon Currently validator and v-validate are hard coupled. How about using events to communicate between them? Following is my thought:\n- lazy attribute of validator\n  - false: directly $broadcast a VALIDATOR_ACTIVE event to all the children \n  - true: after manually activating validator, $broadcast a VALIDATOR_ACTIVE event to all the children directly\n  - When children components receive VALIDATOR_ACTIVE event, activate all the validation scoped to them.\n- Top level validation event\n  - v-validate $dispatch field event to fire top level validation event\n- And so on\nIn this way, validator and v-validate are decouple and can use separately.\n. Done! Has any plan for Chinese translation?\n. The Chinese translation is almost complete. Translation of some sentences is not accurate. Later, I will take some time to refine them.\n. Okay, I will translate it today and refine other trans this weekend.\n. @kazupon I have translated the doc of new feature and refined other docs. And i modified build config in https://github.com/vuejs/vue-validator/pull/196/commits/482167204eb7efe3baf5997a5d12117a66db4a7f to support multi language docs. Do I need to squash these commits into one or two commits before merging into dev?\n. @kazupon I have written some code to improve these methods. But I am stuck with debug and unit test. How to debug the plugin during development? \nnpm run dev throws:\nERROR in multi main\nModule not found: Error: Cannot resolve 'file' or 'directory' ./index.js in /home/vagrant/Projects/vuejs-vue-validator\n @ multi main\nWhen I run npm run dev-test in Windows 8 and open the test page in browser, console shows:\n.*$:31 Uncaught Error: Cannot find module './sinon/util/core'.\nand some esline errors:\nC:\\Users\\Xujian\\Projects\\xjchengo-vue-validator\\test\\specs\\validators.js\n  171:38  error  Unnecessary escape character: \\'  no-useless-escape\n  177:38  error  Unnecessary escape character: \\\"  no-useless-escape\nIn ubuntu, sinon works fine. But all top level event related tests failed with:.\nError: timeout of 2000ms exceeded. Ensure the done() callback is being called in this test.\n    at eval (eval at <anonymous> (specs.js:8427:9), <anonymous>:4190:19)\nI found that handler.apply at https://github.com/vuejs/vue-validator/blob/dev/src/validator.js#L384 just return the event handler. Handler must be applied twice to make it executed.\nCan you give me some tips to solve these problem? Thanks.\n. In Mac OS X, there is no eslint error and all test are passed.\n. @kazupon Can you check if the explain for top level touched and untouched is correct? According to the source code, top level touched is true if there is any field that touch is true.\n. ",
    "perkola": "@xjchengo any status on the child component support? I would be happy to try to contribute if you need it.\n. ",
    "crossjs": "@perkola see this PR:\nhttps://github.com/xjchengo/vue-validator/pull/1\nworks fine for me, but i have NOT enough time to add some tests\n. @xjchengo \n\nWhy need to use current component's vm as fallback?\n\nensuring _evalModel get the model defined in child\nhttps://github.com/crossjs/vue-validator/blob/feature-support-child-components/src/validations/base.js#L260 \nfor example:\n``` vue\n// app.vue\n\n\n\n\n\n\n\n\nexport default {\n  data () {\n    return {\n      value: 'xyz'\n    }\n  }\n}\n\n// text.vue\n\n\n\n\nexport default {\n  props: {\n    field: {\n      type: String,\n      default: ''\n    },\n    value: {\n    },\n    validate: {\n    }\n}\n\n```\nwithout fallback to child vm,\nvalidator will try to get the model value in the root, \nand the REAL model value could NOT be reached.\nat last, here is my practice:\nhttps://github.com/crossjs/plat/blob/master/src/components/c-form.vue\n. Here is my simplex implementation, take a look at it?\nhttps://github.com/crossjs/plato/blob/mobile/src/plugins/validator/index.js\n. ",
    "incraigulous": "+1 on this. I use field components as well. I built my own validator that works across child components, but I'm looking forward to being able to switch to vue-validator as soon as this is merged in.\nAre we just waiting on tests? I could help write some if someone could provide me with some direction on where I could be most useful.\n@kazupon The big problem with using events is that Evan is dropping $broadcast and $dispatch support in Vue 2.0. We'll be limited to using $emit after 2.0.\n. Hey @crossjs! What am I looking at here? \n@xjchengo, anything I can do to help get you closer to a pull request?\n. Hey @kazupon, are you thinking that you will will end up merging child component support in using $dispatch for communication then?\n. ",
    "joeyzone": "I am waiting in hope for v3.0. \n.  what's the estimate for a 2.0-compatible release? thank you for your good plugin.\n. ",
    "Pixelime": "Hey guys, I am not sure if this is related but I got this error when I try to call the this.$validate method from a parent component (and the validator is defined in the children one)\nUncaught TypeError: this.$validate is not a function\nAny idea?\nthanks\n. ",
    "JsonSong89": "i find a very strange way:\nin my custom rule, i can access the \"current vm\"(maybe is a component).\nlike this:this.el.__vue__.propName , then return the value we want to check.\n. ",
    "luxueyan": "mark\n. This is my template & data model\nhtml\n                <div v-if=\"field.type === 'checkboxs'\">\n                  <div class=\"clfix mt-40\">\n                    <div class=\"checkbox-label\" v-for=\"cb in field.options\">\n                      <input autocomplete=\"off\" v-model=\"filter[field.key]\" :id=\"field.key + '_' + cb.key\" :value=\"cb.value\" :field=\"field.key\" v-validate=\"field.validate\" type=\"checkbox\">\n                      <label :for=\"field.key + '_' + cb.key\">{{cb.value}}</label>\n                    </div>\n                    <div class=\"check-all\" v-if=\"field.hasCheckAll\" @click=\"checkAll(field)\">\u5168\u9009</div>\n                  </div>\n                </div>\njavascript\n   data() {\n     return {\n       filter: Object.assign({\n        content: 'search_am',\n        asset_type: '\u8d44\u7ba1\u7c7b',\n        // inquiry_type: '\u8d44\u7ba1\u7c7b',\n        credit_manager_type: '\u91d1\u878d\u673a\u6784\u4e3b\u52a8\u7ba1\u7406',\n        product_invest: [],\n        asset_amount: '',\n        asset_life: []\n      }, lastSaved),\n      fields: [{\n        name: '*\u4ea7\u54c1\u6295\u5411',\n        group: 'group2',\n        key: 'product_invest',\n        type: 'checkboxs',\n        validate: {\n          required: {\n            rule: true,\n            message: '\u8bf7\u9009\u62e9\u4ea7\u54c1\u6295\u5411'\n          }\n        },\n        options: [{\n          key: '1',\n          value: '\u503a\u5238\u7c7b'\n        }, {\n          key: '2',\n          value: '\u80a1\u7968\u7c7b'\n        }, {\n          key: '3',\n          value: '\u975e\u6807\u503a\u6743\u7c7b'\n        }, {\n          key: 'other',\n          value: '\u5176\u5b83'\n        }]\n      }]\n     }\n   }\n. html\n              <!-- select\u7c7b\u578b -->\n                <div v-if=\"field.type === 'select'\" v-cloak>\n                  <select class=\"weui_select\" v-model=\"filter[field.key]\" @change=\"updateView(field.key)\" :class=\"{'empty': !filter[field.key]}\" :field=\"field.key\" :name=\"field.key\" v-validate=\"field.validate\">\n                    <option value=\"\">\u8bf7\u9009\u62e9</option>\n                    <option v-for=\"o in field.options\" :value=\"o.value\" v-cloak>{{o.value}}</option>\n                  </select>\n                </div>\njavascript\n    // model\n     {\n        name: '*\u8bc4\u7ea7\u60c5\u51b5',\n        group: 'group2',\n        key: 'rating_level',\n        type: 'select',\n        validate: {\n          maxlength: 120,\n          required: {\n            rule: true,\n            message: '\u8bf7\u9009\u62e9\u8bc4\u7ea7\u60c5\u51b5'\n          }\n        },\n        options: [{\n          key: '0',\n          value: 'AA\u53ca\u4ee5\u4e0a'\n        }, {\n          key: '1',\n          value: 'AA\u4ee5\u4e0b'\n        }, {\n          key: '2',\n          value: '\u65e0'\n        }]\n      }\n// .....\n// methods\n    onSubmit() {\n      this.$validate(true, () => {\n        // do something\n      })\n    }\n.  Thanks for your fixed too! \n. ",
    "xingangsun": "I have two forms, for example, if the first check is not passed, only to return to the first error information, the second form doesn't need to check again until the first check passed\n. ",
    "BrainOverfloW": "I've ran into the same need. My use case was a field that is required and needs to be a number. When left empty I want just the required message displayed. If the field is filled out but not a number I want to display a error that a number needs to be entered. \n. Thanks for the quick fix.\n. ",
    "webcrazy": "Yes I have the same use-case like this.\n\nI don't want to show two error messages at the same time.\n. Thanks you so much @Nandiin and @kazupon.\n. ",
    "emondora": "I've ran into the same need too!\n. ",
    "NiltiakSivad": "Echoing everything everyone else has already said on this thread. This would be a nice feature if it's not already supported.\nThis could be easily solved if Vue.js had a better way of doing \"else-if\". Unfortunately, Evan recommended this method which is pretty ugly and not maintainable if you have a lot of validations: https://forum.vuejs.org/topic/1107/%E8%AF%B7%E9%97%AE%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0-elseif-%E7%9A%84%E6%95%88%E6%9E%9C/2 \n. ",
    "wuyiw": "a workaround:\n<span v-text=\"$validatorName.fieldName.errors ? $validatorName.fieldName.errors[0].message : ''\"></span>\nhope the single-error-msg feature to be added.\n. https://jsfiddle.net/v0jm4xgy/1/\nwith initial=\"off\", is it the right behavior that first tap changes 'modified' state and second tap changes 'valid' state ?\n. ",
    "robertmylne": "Second this feature.\n. ",
    "sandwich99": "When use vue-validator work with vue-router, vue-router has to been loaded after vue-validator, otherwise will report error.\nI am not sure if there is the bug of vue or vue-validator, if not, please note in readme, vue-validator and vue-router have loading order dependency\n. It's hard to reproduction in jsbin\ncause in browser env, router and validator will be auto installed.\n``` javascript\nVue.use(VueValidator)\nVue.use(CustomValidatorsPlugin)\nVue.use(Router)\n//\u521d\u59cb\u5316router\nconst router = new Router({history: false })\nsetupRoute(router) //success\n```\n``` javascript\nVue.use(Router)\nVue.use(VueValidator)\nVue.use(CustomValidatorsPlugin)\n//\u521d\u59cb\u5316router\nconst router = new Router({history: false })\nsetupRoute(router) //success\n```\n``` javascript\nVue.use(Router)\n//\u521d\u59cb\u5316router\nconst router = new Router({history: false })\nsetupRoute(router)\nVue.use(VueValidator) //error\n```\n\n. ",
    "sqal": "\nWhen use vue-validator work with vue-router, vue-router has to been loaded after vue-validator, otherwise will report error.\n\nActually i found that importing router instance from one file and installing vue-validator in another is causing error for me: Here's my setup:\nindex.js - entry point\n```\nimport Vue from 'vue';\nimport VueValidator from 'vue-validator';\nVue.use(VueValidator);\nVue.config.debug = true\nimport router from './router';\n...\n```\nrouter.js\n```\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport routes from './routes';\nVue.use(VueRouter);\nconst router = new VueRouter({\n  hashbang: false,\n  history: true,\n});\nrouter.map(routes);\nexport default router;\n```\nAnd with this setup i am getting error - Uncaught TypeError: Cannot read property 'minlength' of undefined\n(whole console log http://prntscr.com/axiijm)\neven if try to use vue-validator after router import (in any place inside index.js really). But when i move vue-validator to router.js, everything works as expected\n```\nimport Vue from 'vue';\nimport VueValidator from 'vue-validator';\nimport VueRouter from 'vue-router';\nimport routes from './routes';\nVue.use(VueValidator);\nVue.use(VueRouter);\nconst router = new VueRouter({\n  hashbang: false,\n  history: true,\n});\nrouter.map(routes);\nexport default router;\n```\nAny idea why is this happening?\n. Hi @kazupon I updated vue-validator to 2.1.0 and.. previous minlength bug is gone but unfortunately, I am still having some issues with vue-validator & vue-router working together, check this example: http://www.webpackbin.com/E1sjGml-W\nConsole throws error when you try to open foo route:\nUncaught TypeError: Cannot read property 'required' of undefined\nBut when you install vue-validator inside router.js then error is gone. What is going on here?\nThe docs says now:\n\nif you are using vue-router, you must install with Vue.use() in advance of router#start.\n\nbut i start my app router.start() after vue-validator installation, or perhaps I don't understand it properly?\n. All right. Understood. Thank you.\n. Thank you for fixing the issue quickly @kazupon. Btw now i realized that i forgot about proper rule syntax required: { rule: true, message: 'smth' } that's way validator  didn't show any errors :D sorry for that, I'll be more careful next time. Have a nice day.\n. @kazupon your solution doesn't work as I expect. After submitting the form I want to clear input model, but when i do that, the errors are back again - http://jsfiddle.net/3yLk0drr/6/ Maybe there should built-in function to do such a thing? $clearErrors() ?\n. It installs itself automatically, you don't need to do Vue.use(validator) https://github.com/vuejs/vue-validator/blob/dev/src/index.js#L18\n. @lavezzi1 Why dont' you simply add the class when model's value is not empty:\n<input v-model=\"msg\" :class=\"{ 'show-label': msg !== '' }\" type=\"text\" />\nI don't think your problem is related to vue-validator.\n. Did you installed the plugin?\n```\nimport Vue from 'vue';\nimport VueValidator from 'vue-validator';\nVue.use(VueValidator);\n```\n. ",
    "hypermkt": "@kazupon \nI'm interested in translating vue-validator document to Japanese. So I just started a PR here. https://github.com/vuejs/vue-validator/pull/216 Actually It's first time for me to translate OSS library and new to Vue.js but I thought that It's good to learn about this library and be translated together.I might be slow to work on but I'll do my best.\n. Thanks for letting me know the update!\n. Just reached half of docs. Let's keep going! \ud83d\ude04 \n. \ud83d\ude04  Let's keep going!\n. Glad to back to stable. Why did it failed suddenly? hmm.\n. @kazupon \nI have finished translating! Could you review?\n. Ohhhh! It's released finally! Thank you!\n. When I check on my localhost, I can't see the warning icon. Why...\ncurrent on my localhost\n\nexpected\n\n. Thanks for the comment. I installed the gitbook plugins as follows.\nsh\n$ cd vue-validator/docs\n$ gitbook install\n$ gitbook build\nRun to check on localhost.\nsh\n$ gitbook serve\n:warning: was converted into image tag. But I couldn't still see it.\n\nThe advanced-emoji plugin seems installed successlly on my PC. But the file path on image tag seems different. hmm.\nsh\n$ ll  _book/gitbook/plugins/gitbook-plugin-advanced-emoji/emojis/ | grep warning\n-rw-r--r--  1 hypermkt  staff  3173  5  5 21:52 warning.png\n. I checked the README of this plugin and have no idea... hmm.. Let's move forward the translation first! \nhttps://plugins.gitbook.com/plugin/advanced-emoji\n. I was using 2.1.3. (node v6.0.0 installed by nodebrew) At least I can work on translation even if I can't see the icon on localhost. Thanks for helping!\n. I see the errors by textlink for ;. \n``` sh\n$ textlint structure.md\n/Users/hypermkt/work/vue-validator/docs/ja/structure.md\n  67:24  error  \u539f\u5247\u3068\u3057\u3066\u548c\u6587\u3067\u306f\u30bb\u30df\u30b3\u30ed\u30f3(;)\u3092\u4f7f\u7528\u3057\u307e\u305b\u3093\u3002  preset-jtf-style/4.2.8.\u30bb\u30df\u30b3\u30ed\u30f3(;)\n  71:31  error  \u539f\u5247\u3068\u3057\u3066\u548c\u6587\u3067\u306f\u30bb\u30df\u30b3\u30ed\u30f3(;)\u3092\u4f7f\u7528\u3057\u307e\u305b\u3093\u3002  preset-jtf-style/4.2.8.\u30bb\u30df\u30b3\u30ed\u30f3(;)\n  72:36  error  \u539f\u5247\u3068\u3057\u3066\u548c\u6587\u3067\u306f\u30bb\u30df\u30b3\u30ed\u30f3(;)\u3092\u4f7f\u7528\u3057\u307e\u305b\u3093\u3002  preset-jtf-style/4.2.8.\u30bb\u30df\u30b3\u30ed\u30f3(;)\n  77:31  error  \u539f\u5247\u3068\u3057\u3066\u548c\u6587\u3067\u306f\u30bb\u30df\u30b3\u30ed\u30f3(;)\u3092\u4f7f\u7528\u3057\u307e\u305b\u3093\u3002  preset-jtf-style/4.2.8.\u30bb\u30df\u30b3\u30ed\u30f3(;)\n```\n\n\u305f\u3060\u3057\u3001\u6587\u306e\u9014\u4e2d\u306b\u30cf\u30a4\u30d5\u30f3- \u3084 \u30bb\u30df\u30b3\u30f3; \u304c\u3042\u308b\u5834\u5408\u306f\u3001\u305d\u306e\u8a18\u53f7\u304c\u3042\u308b\u3068\u7406\u89e3\u3057\u3065\u3089\u3044\u8a33\u306b\u306a\u308b\u5834\u5408\u306f\u3001\u4f8b\u5916\u3068\u3057\u3066\u524a\u9664\u3066\u3082\u3088\u3044\u3067\u3059\u3002\n\nMaybe I should delete ; this time. It doesn't look natural.\n. I should probably translate the comments, too.\n. At first, I couldn't understand the meaning of dummy rule in this part. But I could understand when I write a sample code like this ID: <input type=\"text\" v-validate:id=\"{ required: we_can_set_here_anything_because_it_is_dummy , minlength: 3, maxlength: 16 }\">.  It works anyway.\n. I'll translate! I got it!\n. I got it!\n. I'm worried about this translation a little bit. Is this accurate? hmm...\noriginal\n\nThis is useful, when you need to suppress the validation (like the server-side validation) with async validation feature (explain later).\n. oh, It sounds natural! Thanks for the comment! \n. \n",
    "kazaff": "i think the reason is that i ues the wrong version. download the latest version, everything go well\n. sorry, i know y!\nwhen i add \"lazy\", and my component do not call this.$activateValidator() method, this message will show~\nso, if i create a normal component( not dynamic),  it only have \"ready\" hook, do not have \"activate\" callback, then this.$activateValidator() method do not be call. \nthanks ~~\n. ",
    "dennyshu": "thank you for your response !\nbut, what if i want that $index in my validation[number] variable ? \nfor example :\n<div v-for=\"error in $validation1**(< this one)**.errors\">\n    <small class=\"text-danger\" style=\"display: block;\">@{{error.message}}</small>\n</div>\n. hello, thanks again for the response !\ni got this error : \n[Vue warn]: Error when evaluating expression \"getValidationErrors(itum.id)\". Turn on debug mode to see stack trace.\nseems like the $validation[index] variables are still 'empty', when i do {{$validation1|json}}, nothing appearred.\nhere is my modified code..\nview :\n<validator name=\"validation@{{itum.id}}\">\n     <div class=\"todo-list-edit-form hide\" >\n       <form novalidate>\n             <div class=\"row \">\n                  <div v-for=\"error in getValidationErrors(itum.id)\">\n                       <small class=\"text-danger\" style=\"display: block;\">@{{error.message}}</small>\n                   </div>\n               </div>\n      </form>\n      </div>\n</validator>\nvue :\ngetValidationErrors: function (index) {\n      return this['$validation' + index].errors;\n}\n. i think that is not the problem, because i have tested in my script like this :\ndiv class=\"todo-list-edit-form hide@{{itum.id}}\" >\nand then, i do inspect element and shows me this :\n<div class=\"todo-list-edit-form hide1\" >\nsame as the actual value of @{{itum.id}}\n. here's the jsfiddle:\nhttps://jsfiddle.net/haisenberg/z2t2ztq2/\nnote: in laravel blade template, we use @ to indicate the javascript variables\nfor example :\n\nis equally as :\n\n. thanks, it's working now !\narigatou gozaimasu !\n. i am sorry @kazupon, but i have another problem now, XD\nafter i clicked 'save button' of the form, the validator doesn't work again and when i run {{$validation1|json}} it says 'null' on the view.\nhere is my code when button clicked :\n```\nupdateTodoList:function(tlid,e){\n            e.preventDefault();\n            this.form_data.tlid = tlid;\n            this.form_data.name = $('#name'+tlid).val();\n            this.form_data.due_date = $('#datetimepicker'+tlid).val();\n            this.form_data.note = $('#note'+tlid).val();\n        this.$http.post(settings.base_url+'/user/api/updateTodoList',this.form_data, function(data){\n\n            this.todo_list_months = data.user_event_due_date_months;\n\n            this.$nextTick(function () {\n                      // can this do anything ?\n                });\n            })\n        }).error(function(response){\n\n        });\n    },\n\n```\n. i'm sorry, i was sleepy last night lol.\nhere is my jsfiddle, edited from last time :\nhttps://jsfiddle.net/haisenberg/u3z4ocgo/\nso, i want to update the todo list data and re-load the data after the update, but the validator seems not working again.\n. i have got that worked, this is another issue. \nafter i press the Save to-do list button (updateTodoList event), and reload the data :\nthis.this_months_todo_lists = data.this_months_todo_lists;\nthe validation seems not working anymore, is there any way to update and reload the data afterward in vue.js ?\n. ",
    "morganzysman": "Hello,\nI seem to have the same problem, I always get\n[Vue warn]: Error when evaluating expression \"getValidationErrors($index).errors\": TypeError: Cannot read property 'errors' of undefined\nI'm using a similar code as the one you gave in the jsfiddle.\nThank you\n. ",
    "frangeris": "I'm trying to use it too but is not rendering the list of errors, it should output the list of errors, using:\n\"vue\": \"^1.0.21\",\n\"vue-validator\": \"^2.1.1\"\nReproduction link....\nhttps://jsfiddle.net/8eg5c0sm/1/\n. ",
    "ryanwangtian": "@kazupon \nsetValidationErrors can only clear the error message but not the 'invalid' class on the element. is there another way to solve this? \n. ",
    "StefanNeuser": "Hi thanks for your reply. \nOk, but what happens when i want to switch the required within a config from true to false. Required or not Required?\n. ok, thx :)\n. ",
    "Saymon-biz": "Also looking for this! I also need toggle required dynamically.\n. ",
    "jackPanyj": "@Nandiin \ni find that when i use v-if not v-else it doesn't work\njsfiddle\n. @Nandiin\n. @Nandiin thank you  i closed it \n. ",
    "nekman": "Any updates here? Vue 2.0 is now v2.0.0-rc.6.\n. ",
    "dfk7677": "Uncaught TypeError: Vue.elementDirective is not a function\nVue 2.0.1\n. ",
    "asolopovas": "same here\n. ",
    "vladimirpetuhov": "@asolopovas @dfk7677 Guys, vue-validator ver.2 doesn't support Vue 2.0. If you your project uses Vue-Validator, you can't upgrade Vue to the second version, until @kazupon will not release vue-validator ver.3\n. @rubyisapm please, read issue #257 . Vue-validator doesn't support vue 2.0.1 yet. \n. ",
    "astroanu": "what's the max vue version that works with vue-validator ?\n. ",
    "Jamiek94": "@kazupon Is there a workaround to manually validate a specific validator?\n. ",
    "jonas8": "@kazupon Thanks\nIn real code like following, it really works well\njavascript\n  validators: {\n    smsVerify (val) {\n      return this.vm.$http.post(API_CONTEXT.SMS_VALIDATE.resource,..)\n          .then((response) => Promise.resolve(response))\n          .catch((error) => Promise.reject(error))\n    }\n  }\nAt the beginning, my code is just \njavascript\n  validators: {\n    smsVerify (val) {\n      return this.vm.$http.post(API_CONTEXT.SMS_VALIDATE.resource,..)\n    }\n  }\nFrom my understanding,\njavascript\nthis.vm.$http.post\nshould return a promise with status 'resolved' when response.status >= 200 && response.status < 300, otherwise should be rejected. But It can't work, after some debug, i found this.vm.$http.post(API_CONTEXT.SMS_VALIDATE.resource,...) always return a resolved promise whatever the response.status is.\nAfter this i wrote a testing snippet\njavascript\n  methods: {\n    smsVerifyInMethods () {\n      let promise = this.$http.post(API_CONTEXT.SMS_VALIDATE.resource,...)\n      console.log(promise) \n      // the promise here returns the expectation resolved or rejected\n    }\n  }\nIn the above code, it printed the expected promise status 'resolved' or 'rejected'.\nMy questions is:\nWhy the `Vue.http return different result between validators and methods.\nThanks again.\n. @kazupon Thanks a lot\nAfter further reading the code of vue-resource (Promise adapter), things are clear, it's really not a bug of Vue-validator, and sorry for interruption. Details are:\nthis.$http.post  doesn't return an ES6 style promise, the thenable chain  always return the first promise, not return a new one as ES6 does. i think the purpose is to bind the Vue component context.\nSuch as the following code:\njavascript\n validators: {\n    smsVerify (val) {\n      let promise = this.$http.post(API_CONTEXT.SMS_VALIDATE.resource,...)\n      // promise.promise is the really ES6 style promise \n      // and with the expected status 'pending'\n      ...\n    }\n  }\nAnd meanwhile, my testing method is unreliable, as above comment  said, promise.promise will execute the thenable chain in right way.\n. ",
    "imrefazekas": "Jesus, sorry wrong repository ... I should have opened this in vue repository. Sorry guys!\n. ",
    "priithansen": "Awesome!\n. ",
    "Tinoooo": "any news on this?\n. Could you include the bugfix in v2, too? v3 is alpha and not usable in production.\n. ",
    "kharysharpe": "Thank you.\n. ",
    "marktinsley": "Good point. It's an HTML5 attribute.\nFrom MDN.\nThis Boolean attribute indicates that the form is not to be validated when submitted. If this attribute is not specified (and therefore the form is validated), this default setting can be overridden by a formnovalidate attribute on a  or  element belonging to the form.\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/form\n. ",
    "taoeffect": "Hah! You beat me to it. I was reading a bunch of docs on it (including that one) while waiting for a response. I found this article with a bit more info on it and an example. Very curious, had never heard of this feature before.\nI would still recommend adding something about it to the docs, just to explain why it's there and that no, in fact it doesn't have much to do with this plugin (perhaps giving readers this link and/or the MDN one).\n. > Perhaps its worth it to add this attribute to the form automatically? This is what jquery validate does, and I can't see a reason why you wouldn't want it.\n+1\n. ",
    "felixpy": "Sorry for the late response.\nHere is the example: jsfiddle\nI think \"errors\" array should list all errors even without specified message.\nBTW, is there a way to add default message for those rules already in vue-validator(required, maxlength, etc.)?\n. Thx, I'll try it.\n. ",
    "guoweiTang": "The build-in validators contains required,pattern,minlength,maxlength,min,max\n. ",
    "postgetme": "@guoweiTang thanks for your reply, but where can I find the usage informatons of them? \n. @kazupon thank you very much!\n. ",
    "giohappy": "I can see that v-validate-class replaces its child with a new fragment which, I suppose, doesn't compile expressions.\nI've solved setting the class by hand:\n<div v-if=\"isVisible(relfield)\" class=\"form-group has-feedback\" :class=\"[$validation[relfield.name].invalid ? 'invalid': '']\">\n  <label :for=\"relfield.name\" class=\"col-sm-4 control-label\">{{ relfield.label }}<span v-if=\"relfield.validate && relfield.validate.required\">*</span></label>\n  <div class=\"col-sm-8\">\n    <input :field=\"relfield.name\" v-validate=\"relfield.validate\" v-disabled=\"!isEditable(relfield)\" class=\"form-control\" v-model=\"relfield.value\" :id=\"relfield.name\" :placeholder=\"relfield.input.label\">\n  </div>\n</div>\n. ",
    "marceloch2": "@giohappy Thanks a lot, saved me.\n. ",
    "xMort": "Sorry, I posted the issue under wrong project :(\n. ",
    "Ellacf": "good job\n. ",
    "PrimozRome": "Hope it will allow us to validate custom component forms where form elements are written as sub components...\n. ",
    "JWBrownie": "I would like to make some testing with this, is there any pointers to use the validity class? Regards.\n. ",
    "jxlarrea": "Is the version for Vue.js 2.0 in NPM? \n. vee-validate actually looks quite good!\n. ",
    "IniZio": "really like this project, hope v3 will be out soon :pray: \n. ",
    "mandado": "has someway of keep compatibility vue-validator 1 for use in vue 2.0 while vue-validate v3 don't released ?\n. ",
    "Cyber-host": "when we will be able install validator for vue 2?\n. ",
    "yibbay": "Validator has supported the 'vue2.0'?\n. ",
    "xalexec": "thanks good job\n. ",
    "joe434200": "I want to know , can we use vue.2 now? vue-validator-3.0 can bse used now? \n. @kazupon v3.0 Docs  is the same as v2.0?\n. A week?\n. ",
    "miedzinski": "I want to start using vue-validator right now from dev branch. I did npm install --save https://github.com/vuejs/vue-validator.git\\#12f8754311f779a29bb06770770096d2bdc043b2. Are there any breaking API changes from 2.0 version? Can I use these docs? https://vuejs.github.io/vue-validator/en/\n. @nblackburn, as I said, I'm planning on using builds from dev branch. Are you saying that there isn't any Vue 2.0 compability code there? :)\nAt @Booksy we need something for validation in our soon-to-be-finished Vue 2.0 project and we've decided that dev-branch of vue-validator will be the best. We can always submit some fixes, but right now we need some help how to start using this library.\n. @nblackburn, unfortunately, we need to ship our app soon and doing validation is a must. As fair as I know, there aren't any alternatives to this library. Besides that, we could help with development, but we need some kind of intro to usage of vue-validator. :)\n. We have started new project with Vue 2.0 from scratch. Choosing no longer maintained library at the beginning would be a lot worse than waiting for one plugin. It's not like lack of validation stopped us from developing app, but we need it for release and we're getting closer to it.\n@psi-4ward, vee-validate looks good, going to try that. Thanks!\n. Soon. #257 \n. ",
    "xereda": "What is the deadline for official release !?\n. ",
    "016": "I am here too, waiting for vue-validator v3 release, good work guys.\n. ",
    "psi-4ward": "there is vee-validate which works for vue 2\nOn 20.10.2016 15:28, blocka wrote:\n\nBolderdash....there are very compelling reasons to use vue2 and its been\nrecommended for greenfield projects since the rcs....that said it's not\ndifficult to implement basic validation yourself.\nOn Oct 20, 2016 4:24 PM, \"Nathaniel Blackburn\" notifications@github.com\nwrote:\n\n@miedzinski https://github.com/miedzinski I understand that but you\nshouldn't have upgraded to Vue 2.0 until everything is compatible.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/vuejs/vue-validator/issues/257#issuecomment-255104652,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AACoulBwz1u5paeolegIT3RpOthcIHsVks5q12ukgaJpZM4I1OJA\n.\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub \nhttps://github.com/vuejs/vue-validator/issues/257#issuecomment-255105510, \nor mute the thread \nhttps://github.com/notifications/unsubscribe-auth/ABIulBfI4okXvvlQMwIA5UMkgfs9hwfbks5q12x_gaJpZM4I1OJA.\n. \n",
    "ryandeussing": "Right now the biggest weakness in the Vue ecosystem is the confusion and slow progress regarding plugin upgrades to Vue 2.0. \nWith major upgrades there ought to be a \"target date\" for plugin migration (it's been almost 90 days since the first 2.0 RC), after which plugins are listed as out-of-date/unsupported on official resources like https://github.com/vuejs/awesome-vue \nOther frameworks have been here before, and the 'everyone figure it our for yourself' approach doesn't work.\n/rant\n. ",
    "LinusBorg": "Have you looked into alternatives like https://github.com/logaretm/vee-validate ?\nIt's not a law to use your lib :)\n. ",
    "lavezzi1": "Hello guys, where I can an example of how to use this plugin with custom components?\nAnd how validate on blur?\n. Thanks. Where I can see some examples? I curios how to pass the directive like v-validate:name\n. @kazupon I'll try to explain deeply. I want to implement floated label, so when you click on input and enter some value the label should appear on the top left corner. I can do this:\n:class={'show-label': $validation.modified}\nBut problem comes when input has some value initially. So how to determine that input already modified or something? And apply the show-label initially in this case. \n. ",
    "jrenton": "What is the status on 3.0? No activity in a few weeks and now Vue 2.1 is out. How can we help out? There seem to be no stable alternatives either that I have found.. @nblackburn That is true. And my comment is from 12 hours ago \u263a\ufe0f. ",
    "xpepermint": "@jrenton In the meantime I encourage you to check the vue-contextable validator.. ",
    "yunchuanyang": "\u6709\u6ca1\u6709\u53d1\u5e03\u7248\u672c\uff1f. ",
    "suweiwua": "I think it's not a bug.\nYou should try\nv-validate:verify=\"{required:true,pattern:'/^\\\\d{4}$/'}\n. ",
    "reverland": "but, maybe the doc for v2 should be updated to address this problems?\nthe example still use \\d instead of \\\\d.\nhttps://github.com/vuejs/vue-validator/blame/dev/docs/en/api.md#L93\nhttps://github.com/vuejs/vue-validator/blame/dev/docs/en/api.md#L517\n. ",
    "aflext": "@kazupon Thanks a lot for reply! You are saying that i could use a dummy rule for custom validator like numeric with maxlength when specify the field name to field params attribute like below ? \nnew Vue({\n  el: '#app',\nvalidators: {\n         // `numeric` and `url` custom validator is local registration\n        numeric: {\n            message: 'xxx',\n            check: function (val) {\n                return (/^[-+]?[0-9]+$/).test(val);\n            }\n        },\n        url: {\n            message: 'xxx',\n            check: function (val) {\n                return (/^(http\\:\\/\\/|https\\:\\/\\/)(.{4,})$/).test(val);\n            }\n        }\n    },\n  data: {\n    fields: [{\n      id: 'username',\n      label: 'username',\n      name: 'username',\n      placeholder: 'input your username',\n      validate: { required: true, maxlength: 16 , numeric: true, email: true}\n    }, {\n      id: 'message',\n      label: 'message',\n      name: 'message',\n      placeholder: 'input your message',\n      validate: { required: true, minlength: 8 , numeric: true, email: true}\n    }]\n  }\n})\n. ",
    "ajarti": "@kazupon Many thanks for the feedback, and that is just what I have done :)\nThanks for a fantastic tool .. excellent work!\n. ",
    "suguangwen": "I'm sorry\uff0cSubmit code missing part of yesterday\u3002\n. ",
    "MSidabras": "@kazupon hi, is this implemented in master branch? I need this functionality\n. ",
    "serega270": "Sorry, but the pattern validates only the letter 's', \u0430nd do not miss anything else.\nIn your example, it is also seen http://jsfiddle.net/kazupon/5um0mjta/1/\nMaybe there is a different pattern, but I can not find the right\n. No. Sorry if I incorrectly asked the question.\nI need to see if the user entered only whitespace and no other characters then valid = false\n. Yes, this pattern works as I need. Thank you\n. ",
    "vip30": "http://jsfiddle.net/5um0mjta/2/\nNow if the input is whitespace, it will be valid.\nIs that what you need?\n. http://jsfiddle.net/5um0mjta/3/\npattern: '/\\\\S/' }\"\nActually I think the main point is the pattern validator is working as expected.\n. But I am afraid that this settings will make the computed properties not reactive.\nhttps://jsfiddle.net/kdvdvdze/9/\nIn your beginning example, (https://jsfiddle.net/kdvdvdze/8)\nthe error message will show either the password field is changed or the confirm password field is changed.\nBut if we wrap the computed property with the validator,\nthe validation will be triggered by confirm password field only\nDo you have any other idea about that?\nThanks alot!\n. http://jsfiddle.net/5um0mjta/5/\nI can match number and underline.\nIs there any misunderstanding ?\n. I think this library can only be used in 2.2 before as the readme said that (2.2 later, not works)\nBecause this plugin depends on vue.util which is not opened to external plugin anymore. Here is the possible related issue #357 . ",
    "Jokcy": "@kazupon so when will you fix this bug?\n. ",
    "LiPinghai": "\"\\w\",I wrote as \"\\w\",thanks a lot @vip30 \n. ",
    "jaredreich": "thank you, sorry never saw this in the docs.\n. ",
    "spurdow": "Is it possible if i put it inside 'method' 'signin'?\n. ",
    "vrbvillor": "Vue.js is 1.0.26, validator is 2.1.5, \n``` html\n<!DOCTYPE html>\n\n\n\n\nExamples\n\n\n\n\n\n\n\n\nSurvey\n\nWhich do you like fruit ?\n\nApple\n\nOrage\n\nGrape\n\nBanana\n\n\n{{msg.message}}\n\n\n\n\n\n\n\n\n\n\n\n\nnew Vue({\n  el: '#app',\n  computed: {\n    requiredErrorMsg: function () {\n      return 'Required fruit !!'\n    },\n    minlengthErrorMsg: function () {\n      return 'Please chose at least 1 fruit !!'\n    },\n    maxlengthErrorMsg: function () {\n      return 'Please chose at most 2 fruits !!'\n    }\n  }\n})\n\n```\n. Is the detect-blur=\"off\" and detect-change=\"off\" the switch to turn off the validation before submit? But it validate when inputing. It works as thought before clicking the submit. Means before clicking the submit, the password doesn't check the equality between password and confirmpassword.\n. ",
    "masterzhang": "change this\nVue.use(VueResource)\nVue.use(VueValidator)\nnew Vue({\n  el: 'body',\n  components: { App },\n  http: {\n    header: {\n      'Content-Type': 'application/json'\n    }\n  }\n})\n. ",
    "hootlex": "Sure, no problem. :)\nConsider adding an errorDisplay helper in v3.\nAlso, a showAllErrors method would be a nice to have.\nGood job with vue-validator so far. \n. ",
    "Chalkin": "Yes, adding such a functionality comes in really handy. I got the same problem. If you add this to v3 would be great - but please also add it to v2 as well. At my current project I'm using laravel spark which uses vuejs 1.x and I'm bind to that - unless Taylor Otwell updates Spark to use vuejs 2 I'm stuck to vuejs 1.x and so are many others (for various reasons)\n. ",
    "uptownhr": "will provide\n. i will try and get one up this week.\n. ",
    "SteveEdson": "Also getting the same issue, replicated here:\nhttps://jsbin.com/fofeborivu/edit?html,output\nThe dynamic field gets added to the last <validator> component on the page. So if you swap the order, the new field is added to the correct location. Similarly, if there is only one section on the page, it is added in the correct place.. ",
    "lsbardel": "always thanks people for reporting issues!\n. ",
    "duellsy": "Adding my support for this.\n. ",
    "cpinto": "updated the ticket with a better reproduction\n. ",
    "dai-siki": "I'm sorry, my english is poor, so I started with chinese, ok, I try.\nhello, kazupon! Thank you very much for you support this so beautiful validation tools, I\u2018m using it on my current projects.\nAnd now, I encountered a problem, when a page exist multiple forms need to validate, global method  of vue-validator plugin such as '$validate' and '$resetValidation' only be effective in the last form, I would like to ask, have a way to validate multiple forms? or, I can specify a form. \nthis is my question, thanks! \n. ",
    "demianh": "I found a workaround for this problem. I need to call\ndocument.activeElement.blur();\nbefore the <validator> element is hidden. This fires the blur event before the DOM elements are removed.\nEDIT: fiddle with the workaround: https://jsfiddle.net/demianh/zv238v6w/2/\n. ",
    "valeriob": "Oh thanks, then i must be doing something wrong : \nusing vuejs v1.0.22 and vue.validator 1.4.4 i get this error message with this html\n\nvue.js:1018 [Vue warn]: Failed to resolve directive: validatewarn @ vue.js:1018resolveAsset @ vue.js:1936compileDirectives @ vue.js:7483compileElement @ vue.js:7095compileNode @ vue.js:7051compileNodeList @ vue.js:7234compileNodeList @ vue.js:7235compileNodeList @ vue.js:7235compileNodeList @ vue.js:7235compile @ vue.js:6837FragmentFactory @ vue.js:3931bind @ vue.js:4010Directive._bind @ vue.js:8277linkAndCapture @ vue.js:6880compositeLinkFn @ vue.js:6856Vue._compile @ vue.js:8563Vue.$mount @ vue.js:9398Vue._init @ vue.js:2460Vue @ vue.js:9462(anonymous function) @ 257:361\nIs there some rule to use some validator version with vue version ?\nThanks,\n. ",
    "z1haze": "Inside the route object data function calling this.$resetValidation() sorry I'm on my phone but I believe that's was the gist of it\nSent from my iPhone, sorry about the typos.\n\nOn Sep 22, 2016, at 1:39 PM, kazuya kawaguchi notifications@github.com wrote:\nsorry, for the late response.\ncan you share the minimum reproduction code please?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. \n",
    "woodygithub": "\u6211\u4e5f\u9047\u5230\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u5f39\u51fa\u6846\u7b2c\u4e8c\u6b21\u8fdb\u5165\u7684\u65f6\u5019\u6211\u5c06\u6570\u636e\u6e05\u7a7a\uff0c\u4f46\u662f\u9519\u8bef\u63d0\u793a\u4f9d\u7136\u663e\u793a\n.   BaseValidation.prototype.reset = function reset() {\n    this.resetValidationNoopable();\n    this.resetFlags();\n    this._init = this._getValue(this._el);\n  };\n\u67e5\u770b\u6e90\u7801\u53d1\u73b0BaseValidation\u7684reset\u65b9\u6cd5\u53ea\u91cd\u7f6e\u4e86\u901a\u7528\u7684flag\uff0c\u6ca1\u6709\u91cd\u7f6e\u5404\u4e2a\u6821\u9a8c\u5668\u7684\u6821\u9a8c\u7ed3\u679cflag\u6240\u4ee5\u7528\u6765\u663e\u793aerror\u7684\u5e03\u5c14\u503c\u4f9d\u7136\u662f\u4e0a\u6b21\u6821\u9a8c\u7684\u7ed3\u679c\u6216\u8005\u4fee\u6539\u8868\u5355\u503c\u89e6\u53d1\u6821\u9a8c\u7684\u7ed3\u679c\uff0c\u73b0\u5728\u6211\u53ea\u80fd\u624b\u52a8\u5c06\u6240\u6709\u503c\u91cd\u7f6e\u6765\u6062\u590d\u72b6\u6001\u975e\u5e38\u9ebb\u70e6\uff0c\u5e0c\u671b\u80fd\u89e3\u51b3\n`\n. ",
    "romain-web": "Same problem without vue-router with the version 2.1.4 . this error was observed in vue.js but called by vue-validator when resolving the Validator (line 1289).\njs\nBaseValidation.prototype._resolveValidator = function _resolveValidator(name) {\n  var resolveAsset = exports$1.Vue.util.resolveAsset;\n  return resolveAsset(this._vm.$options, 'validators', name);\n};\nno 'validators' attribute found in the options of the vm.\njs\nthis._vm.$options['validators'] === Undefined\nBut I don't have the problem with custom validator, only with the defaults.\n. ",
    "wugengsong": "I met the same problem,\n  <input type=\"text\" v-model=\"vText\" v-validate:vText=\"{ minlength:3, maxlength: 15}\" initial=\"off\">\nCannot read property 'minlength' of undefined\nRelated #130\n. the same problem, vue 2.1.6. ",
    "gianlucacandiotti": "Hey thanks, I'm glad to help ! \n. ",
    "rubyisapm": "ok. Thanks.\n. ",
    "jsodeman": "This occurs when the error message isn't set on the validators\n\"{ required: { rule: true, message: 'Foo is required' } }\"\n. ",
    "xiyangjun": "@sqal yes, I did this\u3002\n. I think the wrong code here\njavascript\nMultiElement.prototype._getCheckedValue = function _getCheckedValue () {\n  var value = [];\n  this._eachItems(function (item) {\n    if (!item.disabled && item.checked) {\n      value.push(item.value);\n    }\n  });\n  return value\n};. ",
    "chaegumi": "no 3.0 document. \u597d\u96be\u7528\u3002\n. You can use vee-validate.It can used for vuejs2.0.3.\n. ",
    "heygambo": "Hey I've tried that with the current alpha.1 version but I always get this:\n[Vue warn]: Unknown custom element: <validity> - did you register the component correctly? For recursive components, make sure to provide the \"name\" option.\nEven though I've installed the plugin as described:\njavascript\nimport Vue from 'vue'\nimport VueValidator from 'vue-validator'\nVue.use(VueValidator)\n. But I can also use vue-validator soon I hope\n. hm I've found out that for some odd reason the index.js isn't the one that is tagged as alpha.1 in github. I don't know exactly why.\nThis is what I get from a yarn install\n``` javascript\n/ @flow /\nimport { warn } from './util'\nimport Config from './config'\nimport Asset from './asset'\nfunction plugin (Vue: GlobalAPI, options: Object = {}) {\n  if (plugin.installed) {\n    warn('already installed.')\n    return\n  }\nConfig(Vue)\n  Asset(Vue)\n}\nplugin.version = '3.0.0-alpha.1'\nexport default plugin\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(plugin)\n}\n```\nThe components won't get installed with this script.\nUPDATE:\nnpm install will solve the issue. yarn has probably cached a version that I have downloaded from github directly.\n. I've just done it that way now:\n```\ncomputed: {\n  valid () {\n    return this.$validation.validation.valid\n  },\nsubjectInvalid () {\n    return this.$validation.validation.form.subject.invalid\n  },\nbodyInvalid () {\n    return this.$validation.validation.form.body.invalid\n  }\n}\n```\nI feel like it's easier to read. I just didn't realize I could just do that back when I've asked.\nThank you for helping, though!\n. But I cannot combine that with v-model, right?\nI've tried that but then the browser crashed and I had to kill it the hard way.\n. ",
    "jjjachyty": "sorry I dont see this: \u26a0\ufe0f NOTE: official release for Vue.js 2.0 not yet \ud83d\udea7\n. ",
    "tywei90": "can anybody answer this question?\n. ",
    "aplr": "Hello,\nmaybe the object spread operator (which is a stage-3 ECMASCript proposal) will help? I'm using it with the vuex map functions and it works great.\n. ",
    "yuanzm": "@kazupon +1 \n. ",
    "chengchengcs": "\u6211\u4e5f\u9047\u5230\u4e86\uff0c\u600e\u4e48\u7834 @kazupon \n. ",
    "chuangker": "+1, \u6709\u6ca1\u6709\u4e34\u65f6\u89e3\u51b3\u65b9\u6848\u3002\u5207\u6362\u8def\u7531\u5c31\u62a5\u9519 @kazupon . ",
    "DearVikki": "+1, \u6211\u4e5f\u662f\u5207\u6362\u8def\u7531\u540e\u5c31\u62a5\u4e00\u6837\u7684\u9519\u4e86!!\u4f46\u662f\u82e5\u5237\u65b0\u4e00\u904d\u5c31\u5b8c\u597d\u65e0\u8bef\u3002. ",
    "haussjonas": "As far as I know, they're going to remove the validator element.\nHave a look at the 3.0 release examples.\nThe validation and validity components are your new validation components.\n. ",
    "jiayaoaaa": "i have the somme problem... ",
    "yang5664": "You may try this sample code\n```ruby\n\n\n\n\n\n\n\n\u8acb\u4f7f\u7528\u4e0b\u5217\u65b9\u5f0f\u767b\u5165\u5e33\u865f:\n\nE-mail\u5e33\u865f\n\n\n\n\n\n\u5bc6\u78bc\n\n\n\n\n\u767b\u5165\n\n{{error.message}}\n\n\n\n\n\n\n\n\n\n  import { mapValidation } from 'vue-validator'\n  import { mapActions, mapGetters } from 'vuex'\n  export default{\n    data () {\n      return {\n        message: 'hello vue',\n        validated: false\n      }\n    },\n    computed: {\n      ...mapGetters({\n      }),\n      ...mapValidation({\n        valid: '$validation.login.valid',\n        errors: '$validation.login.errors'\n      })\n    },\n    validators: {\n      confirm: function (val) {\n        return val === this.$refs.password.$el.value\n      }\n    },\n    methods: {\n      ...mapActions({\n      }),\n      handleSubmit: function (e) {\n        if (!this.validated || !this.valid) {\n          e.preventDefault()\n        }\n      },\n      handleValidate: function (e) {\n        var self = this\n        e.target.$validity.validate(function () {\n          self.validated = true\n        })\n      }\n    }\n  }\n\n```. ",
    "laubd": "it can't insert components in the  ..... ",
    "farrance": "I'm having the same issue.\n. ",
    "mesis": "I'm having the same issue here.. +1. ",
    "maxKimoby": "The bug makes the plugin unusable when there are more than a single validity tag, so generally unusable. It seems that only the first validity element is processed. I know that because I put a watch on $validation.myValidator and when it changes from undefined to something, it only contains the first validity element.\nReally needs documentation and a quick and functional release for 2.0, this is really annoying for people upgrading from 1.x that were using the previous VueValidator release (which was marvelous).\nEdit : The plugin seems to be functional even though the error still persists. But something throwing an error is never functional for a good programmer. . ",
    "hxd520love": "\n\n\u4e00\u5f00\u59cb\u4f1a\u6709\u4e09\u4e2aundefined\uff0c\u7136\u540e\u624d\u662f\u5bf9\u7684\u3002\u800c\u4e14\u6309\u7167\u6587\u6863\u5199\u7684\uff0c\u8bf7\u5927\u5927\u67e5\u770b. ",
    "cezarpretto": "Me too :). ",
    "chanlito": "ng2 comes out, meh. vue2 comes out, all go crazy. ;D. ",
    "imuller": "Any timeline on this?. ",
    "oleynikd": "Ah, was migrating my project to vue v2 and.........\ud83d\udca5. ",
    "iambigd": "I have the same issue Q_Q. But I like this awesome plugin. Keep it up.. ",
    "huhk-sysu": "I came across the same error. It seems that the example is for vue-validator v2. And in v3 the directive \"validator\" was abandoned and they use \"validation\" instead.\nCheck this example.\n. ",
    "alicePan": "@huhk-sysu Thank you very much.It works.. ",
    "ra100": "I'm getting same error, when trying to hide/remove component that has validator. I'm using v-if to show/hide form.\nAnd related to #338 . ",
    "rosemalejohn": "I encountered same problem after @kazupon latest commits. How bad I already implemented it in our system which is running with Vue 2.0. I hope this will be fixed soon.. ",
    "philina": "the same problem,vue 2.1.0 . ",
    "atomicmm": "examples \u4e0b\u5199\u7684\u5199\u5f97\u975e\u5e38\u6e05\u695a\uff0c\u4e0d\u7528\u770b\u6587\u6863\u4e86. ",
    "likyh": "maybe you should add && typeof value == 'undefined' in util.js line 114\ni dont know why this.$validation is not complete at first. ",
    "zodman": "+1 too!. ",
    "ddtramp": "+1. do not work . ",
    "gavrashenko": "This demo can helps a little: vue-validator/examples/timing/index.html\nBut: demo have some issue. If one of the fields is a valid - submit button will become active. \nMaybe you should add array to the data with all your validity fields, and mark them as valid/invalid durings validation (inside handleInput method), and unlock your submit button after all fields will become isValid: true. ",
    "baiyunchen": "@gavrashenko  I think vue-validator need provider an API that can be invoked before submit it to obtain the validation results,this is be best practice.. ",
    "karaoak": "As per 3.x documentation you should use: validity\ne.g.\n<validity field=\"field\" :validators=\"rules\" ref=\"field\"></validity>. Hi Kazuya,\nThanks for your swift reply!\nBummer, I really your vue-validator. We use it in our project (not live yet) extensively. \nThanks for your vuelidate tip. I might look into this.\nThanks agains, regards, Frank. ",
    "fairysd": "where is 3.0 docs?. ",
    "towry": "@kazupon Hi, it seems isPlainObject not work too. Vue.utils doesn't have a isPlainObject method.\nI think I have to switch to another validation library, can't wait.. ",
    "bimohxh": "I meet the same issue. ",
    "WLyKan": "use <validity> instead of <validator>. ",
    "Fish-Fan": "try vue/1.0.24 + vue-validator/2.1.3. use vue/1.0.24 + vue-validator/2.1.3. ",
    "zhangchao1": "\u8fd9\u4e5f\u662f\u6211\u7684\u7591\u95ee\uff0c\u6211\u662f\u7528\u7684\u662f2.4\u7684vue\u7684\u7248\u672c\uff0c\u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u505a\u517c\u5bb9. ",
    "ringrid": "\u540c\u6837\u7684\u95ee\u9898\uff0c\u8bf7\u95ee\u4e00\u4e0b\u6709\u65f6\u95f4\u8ba1\u5212\u5417\uff1f. ",
    "Jame0527": "I use vue-2.3.3 and vue-validator@3.0.0-alpha.2, have the same question, why?  who tell me ?. ",
    "minguman": "me too ;\ni think ... may be the issue of vue version\uff0c my vue --version 2.9.1  . oh, Just now, I saw the description, does not support 2.2 or later versions. ",
    "kitkimwong": "\u5077\u61f6\uff1f\u4f60\u6709\u4ed8\u8cbb\uff1f. ",
    "youyouliangshao": "\u5403\u74dc\u7fa4\u4f17\u8def\u8fc7. "
}