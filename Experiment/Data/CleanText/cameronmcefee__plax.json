{
    "cameronmcefee": "Looks pretty good. I'll test it out soon and will see to it that it gets merged\n. Part of this pull conflicts with a pull request I just merged, but I like some of the stuff you've got in here so I'll be merging a portion of it.\n. I'll admit, you have a valid argument. However, it goes against my core goal for Plax. My original intention was to provide the quickest, most math-less way for both coders and non-coders to do realistic parallaxing. The invert parameter takes out the mathematical guesswork that a non-coder would have to do to come up with inverting the directions. Granted, it seems like a small issue, but if you think about the idea of a negative range from a non-mathematical perspective, it doesn't really make sense, especially with how Plax calculates.\nPlax assumes that the start position of the item is the center point of that range, so by saying 50 px you are actually saying 25 px in either direction. This is a relatively natural thing to assume or at least accept while it's a positive value, but when specifying -50 px, my first inclination would be to assume that it would travel -50 px backward from it's start point, rather than invert the direction in which it travels.\nFor this reason, as well as avoiding breaking current implementations, I prefer to retain the invert parameter. You did, however, raise a good point about limiting what the user thinks they can do with the script. For that reason, I'll update the docs to indicate that negative values will have the same/customizable effects. I'd rather provide the user the quickest means to an end on the surface, and provide the customizability only if they need it.\n. What do you think would be a good strategy for that? Save coordinates on mousemove and only update element position ever n milliseconds?\n. Oops, forgot to close this. It's already been fixed.\n. Plax is still an independent plugin from both jQuery and Ender. To use it you'll have to link it like any normal piece of javascript. You can find more info in the readme.\n. This is more an issue for Ender, rather than Plax. I am not involved with the Ender project or the list mentioned above.\n. Yeah, that's a good point. I'll build that into Plax at some point. I'd also like to make it have some kind of default range calculator so you wouldn't even have to put values in. You could just run plax on a collection of elements and it would give them some kind of precalculated range.\n. Cool, I think someone was asking for this a while ago\n. Good stuff. I'll test it out when I have a chance and merge it in.\n. Sorry I haven't merged this in yet. It's been a busy week. I'll give it a test and get it in there soon.\n. Hi huwrowlands,\nSorry it's not working for you. That sounds like a bug that was fixed a while ago. Where did you download it from? It's possible I forgot to update a download link somewhere.\n. I see what you're talking about. I'll see if I can get it sorted out today.\n. Should work now\n. Hi Guys,\nThere's no regex. It's specifically targeting the top and left properties. I'm hesitant to support margins as a positioning method. top and left are css properties specifically designed for coordinate positioning, whereas using margins is technically a workaround.\n@arush Can you provide specific examples of why it would be better to support margin-based positioning.\n. I'll give this some thought. You're more than welcome to submit a pull request for what you suggest in the meantime.\n. @replete can you explain in detail? I'm not entirely sure from the video what the issue your running into is.\n. @ded this might be more your ballgame.\n. Hi @cibgraphics,\nAt this point plax doesn't support percentages. However, what you want is possible with a little work on your end. You can dynamically change the range by calling plaxify() again. You could set up a window resize event that does the percentage calculation for you and feeds those values into a new plaxify() call.\n. Hi @seanjacob,\nYou're not doing anything wrong per se. Plax simply doesn't support what you want to do at this point. It only supports one activity target and one event stream, so any objects you call plaxify() all get assigned to that single instance. It would be cool to support the notion of encapsulated plax zones, each having it's own set of objects, but that's beyond my knowledge at the moment. I'll ask around and see if I can come up with a solid way to implement it.\n. Plax is a bit of a back-burner project at the moment, so unfortunately no work has been made on this front yet. I happily accept pull requests though, if you're interested in implementing it.\n. Are you getting any kind of errors in the console?\n. Firefox's accelerometer support is pretty weird. It fires off all kinds of events even when the device is sitting still. The current setup is design to try to mute most of that, but some still get through on the initial page load. I think the future of Plax will be to drop support for accelerometers (laptops) and switch more to gyroscopes (mobile devices), since the usefulness of motion based events on laptops is pretty minimal.\n. Can you cite some examples? Many of the recent updates have been directed at fixing bottom and right values.\n. Ah, yeah. That would make sense.\n. Hi @sevenaces,\nThis is intentional so that Plax operates based on the browser window rather than the size of the entire document.\n. What would be the usecase for something like this?\nDoing something like this would create some weird visual effects. Currently plax is set up so that the start location of each object is assumed to be at the 50% point of it's range. This means that there is an even movement velocity as the mouse travels from 0% to 100% across the browser. If you were to specify uneven ranges via the suggested method, the object would inherit one velocity for the left side of the range, and get a different velocity for the right side.\n. I don't set deadlines on these kind of projects, so there is no specific timeline for this. If you're interested in trying to implement it, you're welcome to submit a pull request.\n. Closing since this is irrelevant to the latest version\n. This will probably be fixed with #27. Testing now.\n. Yeah, that's what I've found too. About to commit a filter of .05 which kills most of the jitter.\n. This currently isn't supported in plax. It's doable, but you'd need to hack up plax and add the easing yourself. The real trick is how you do it. Since plax is based on mouse position, to actually ever see the ease, you'd have to wait for the mouse to come to a complete stop, an event that I don't think happens all that often.\n. Yeah, the latest build is kind of weird. It fires off a bunch of motion events even if the computer is stationary. It appears that the events are really strong when the page first loads, then tapers off. The motion limiter suppresses the majority of the motion, but the first spike is usually intense enough to trigger the plax effects\n. As usual, Firefox is :trollface:ing. Firefox fires both DeviceMotionEvent and DeviceOrientationEvent.\nClosed in favor of #33\n. Nice. I've got another huge pull that I need to review before I merge this. I'll come back to that once it's tested and out.\n. Merged and resolved in #35\n. Hi @AgustinVignoli,\nMy guess is that since an iframe is considered an entirely different website, it has its own set of mousemove events. Essentially, when you move the mouse over the iframe, the context of capturing mouse events switches to the web page within the iframe, which \u2014 for security reasons \u2014 has no concept of connection to the outside page. It's possible you could prove me wrong, but as far as I know, it's impossible to avoid. If you don't actually need to interact with the content of the iframe, you could presumably put an empty div over the top of it to effectively \"hide\" the iframe from window. The browser would again be able to catch mousemove events in that area, but obviously, you won't be able to interact with the content of the iframe.\n. That may actually work if you modify plax a little. Looks like you can reference the parent of an iframe: http://stackoverflow.com/questions/5477324/iframe-calling-parent-javascript\nThe only hurdle I see is that while you could potentially capture mouse position, it will be within the context of the iframe, not the main window. You'd have to work out some kind of math to convert that number to correspond to it's location in the main window.\n. Hi @hjujah,\nSince you're removing the plaxed elements from the DOM entirely, they're removed from Plax too. My guess is you'll want to do $('.plax').plaxify(); again (or on whatever your new content is) to be sure you add the new content before you call $.plax.enable again.\n. Thanks! I'm glad you find it useful.\n. Hi @Lawless55,\nWhat you want to do definitely possible. There are two avenues you can choose, depending on the desired result\n1. I want to reposition the plax illustration, but the ranges and element position can stay the same\nIf you're not rescaling the ranges, simply trying to move the whole plaxed illustration around, all it takes is a wrapper div. All of plax's elements are absolutely positioned, so all you would need to do is put them in a div is position:relative or position:absolute. Then in your mediaquery specific code, you just move the wrapper div around and plax will follow.\n2. You want to change the ranges\nIf you need to actually change the distance elements travel or where they travel from this is possible, but a little more work.\nFirst, because of the amount of calculation that happens, I'd avoid changing plax directly on resize(), since this event continually fires until you stop resizing. You could try it out on resize(), but I'm not sure what to expect. Stuff may jump around or your browser may burst into flames.\nEssentially all you need to do is replaxify your element. Check out this example from the docs:\n``` Javascript\n$('#plax-octocat').plaxify({\"xRange\":40,\"yRange\":40})\n$('#plax-earth').plaxify({\"xRange\":20,\"yRange\":20,\"invert\":true})\n$('#plax-bg').plaxify({\"xRange\":10,\"yRange\":10,\"invert\":true})\n$.plax.enable()\n$('#my-btn').click(function(){\n  // bigger range\n  $('#plax-octocat').plaxify({\"xRange\":200,\"yRange\":200})\n})\n```\nOn the click, it just specifies the range for #plax-octocat again. Plax will just drop the old range and use the new one.\nSince you're doing responsive stuff (something plax technically wasn't designed for) and the xy coordinates for where your elements need to start from are likely to change, you may need to have something in there that works like this pseudo code\non resize complete do:\n  disable plax\n  clear all plax element inline css\n  reposition plax elements to their new base positions\n  replaxify your elements with new preferred ranges\n  enable plax again\nThis may seem like a lot of work to do for something simple like resizing, but keep in mind, mediaqueries are mostly intended for different device sizes, and not so much browser resizing (which doesn't happen all that often). Chances are, this won't happen more than once on a page.\n. There isn't a built in resizestop event, so you'd have to write something on your own or grab a plugin. Since you're using jQuery, this looks like it might do the trick. https://github.com/misteroneill/resize-stop\nJust be sure it loads after jQuery and before Plax.\n. Nice, I dig this. If you don't mind updating the one part in the documentation, I'm down to merge this.\n. I originally accepted the Ender support without really considering what that would mean (I was very new to open-source at the time) as far as supporting it myself. Having never used Ender before or since then, it's more of a hurdle for maintaining the code on my end. If the Ender support is actually broken, my vote would be to just remove it and not sweat it.\n\nAnother thing that I started to wonder a bit about today, is why both the $(this).position() and this.offset[Left[Top] are used in the initialization of the non-background layers, and if possibly the layer.origin variables should be set to the $(this).position values instead.\n\nIt's entirely possible this was done arbitrarily. When I originally wrote plax I was pretty green as far as my javascript chops. It may have just been a terrible decision on my part. One of these days I may just rewrite the things, but for now I've been letting stuff sit as is until I or someone else can really focus on it.\n. :fire: thanks.\n. :zap: Thanks. This is totally necessary.\n\n\nMerge as is, considering the expanded ranges introduced with gyro changes as a bug.\n\n\nThis is my vote. My guess is that there are very few people that keep plax up-to date. Considering the motion support is passible at best as it stands, I'm down to just merge this and deal with any flak as it comes.\n\nThe main question I guess is how many users are aware of the behavior when using gyro. Looking at the 404 and 500 page of github it's apparent that it's been tested quite thoroughly on desktop, but load it up on a phone and you see quite a few artifacts/unexpected edges when you are tilting a bit (not necessarily that much, considering the starting position).\n\nPlax was originally a quick plugin I wrote as part of my contract-to-hire agreement to get my job at GitHub. Since then it's fallen to the back burner, so the poor gyro support is really just a result of it being a low priority project. It's a shame and I'd like to build it out to be more robust. I just haven't had the time to make it happen.\n. Sounds like a plan to me. I'll kill the support mention from the docs for now.\n. Sorry for dragging my feet on this. My email seems to have increased by an order of magnitude in the last month. \nThis looks awesome, particularly the tilt limit.\n\nAlso, while fixing this I noticed that the activity target was actually being set upon every mousemove event.\n\nLol, yeah that's a good call.\n. Nice! Thanks for your contributions. They're much appreciated.\n. Aside from the one comment in the code, I'm :+1: on this.\n. :zap: \n. Merged and registered\n. :metal: Nice, I missed that one. Thanks!\n. :metal:\n. :+1: \n. :metal: Thanks for this. I like the smoothness that the 3d provides. I imagine this will actually yield better performance.\nIt seems like there are some tab/space issues that are messing with the alignment of things. Would you be willing to clean those up before this merges?\n. :+1: Once that's ready I'll get this merged.\n. > I've also implemented an option, allowing for use of this, on plax layers contained within fixed elements. Currently if the plax layer is a fixed element, and following scroll it would be calculated as outside the viewport, movement is stopped even though it is still visible. I've added an option to declare that the plax is fixed - and continue it's movement.\nSorry, I forgot to ask about this. I haven't had a chance to test out the case you've mentioned this resolves, but from your description this sounds like it's a bug, more than something that needs a feature toggle. Should the fixed position be something that is detected rather than flagged with a setting, or can you see situations where you'd actually want the erratic behavior?\n. :cool: Thanks. I appreciate the improvements!\n. Hi @Acccent, thanks for the info. I'll have to look into that. If this is currently causing you issues, this is the code from the commit right before this change, which still uses the non-3d method.\n. Sorry for dropping this. Had a sudden trip to India come up.\nThat does seem to be the case, as I understand it. @fishenal Did you test it in a way that proves otherwise? Top/Left/0% should work as valid values.\n. :+1: \n. Closing this, since it looks like you resolved it in #58\n. You're right, it looks like the activity target is broken. As far as I can tell, this should work fine. Testing it out, it works ok so I'll call this good. Thanks!\n. I'm happy you find plax useful! You may find this to be related: https://github.com/cameronmcefee/plax/pull/54#issuecomment-45605215\nFWIW, this project is more or less unmaintained at the moment. I keep an eye on pull requests that come in, but am not actively working on it. If you submit something I'm happy to have a look but won't be making fixes myself.\n. Hi @bronzehedwick,\nPlax is a backburner project for me at this point, so I don't currently have any such plans. I haven't touched Plax in a few years so it's entirely likely someone's written a better, vanilla js parallax plugin since then.\n. :+1: \n. Hi @energyuser,\nPlax has been on the backburner for the last few years, so I won't likely be able to make updates any time soon. If you'd like to submit a pull request fixing the issue, I'm happy to review it.\n. Sorry, I can't be of more help at the moment :(. To be honest, Plax is pretty old. I'm willing to bet there are better plugins out there. http://markdalgleish.com/projects/stellar.js/ looks interesting.\n. Ha, looks as though it is. Guess I should prioritize this after all. Thanks @dmethvin I'll have a look at your suggestion.\n. @energyuser for your info, I may not be able to get to this for a few days (things are pretty busy on my end). If you're in a time crunch, I'd suggest looking at alternative plugins or trying to fix it yourself based on @dmethvin's suggestion.\n. Should be fixed as of https://github.com/cameronmcefee/plax/commit/624c5ef8320293bc59582a3faf997d4fdc44cb75\n. > in plax.js itself, which might be even better\nI'll have to take a look to get my head around it (haven't looked at the code in a year), but having it in the JS itself seems like a good way to go.\n. Hi @WGRAY01!\nYou're probably right that there are better ways (something using css transforms comes to mind). As mentioned in the README, this hasn't been under active development for a few years, so it has very much fallen behind. If you're looking for a responsive option, you're better off looking at alternative libraries.\n. Hi @sweettimes,\nPlax wasn't desiged to support multiple activity targets. I've seen people hack a solution together by including the file twice, but there are plenty of reasons why that's a bad idea. Plax hasn't been actively maintained for years, so you're probably better off finding a more current library that can do what you need it to do.\n. \u2764\ufe0f  thanks.. \ud83d\udc4d . This project is no longer actively maintained (thus the demo is gone) but you can find the demo on Archive.org. What's the point of this? I haven't done much encapsulation before so I'm not entirely sure what the purpose of the return is.\n. Thanks for the cleanup. I didn't notice that I forgot to switch this over.\n. http://www.turnjs.com/ doesn't use plax, which is a little confusing. I think we could get away with something simpler like:\nBoolean: (optional) resets all previously defined layers to their original positions when plax is deactivated.\n. > absolutely: positioned;\nIt's a little weird to format it this way since this would actually be incorrect css.\n. Curios question: Wouldn't this test be redundant? I imagine if el.style[t] !== undefined then the property is supported, no?\n. Ah nice. Thanks for the explanation.\n. @dzuelke I believe you were the one that added the regexp. Was there a specific reason for including it? From looking at this it does seem like receiving a value of top or left would throw things off.\n. ",
    "ded": "Awesome bro. Glad you haven't let this one go :)\n. The support for Ender that Plax includes is based on including of the Jeesh bundle, and not necessarily an installable package. If I were Cameron, I would close this.\n. @djbender It could most definitely be built as an ender module. I mostly just don't think its in Cameron's interest since everything is working fine as-is. You could nonetheless fork this, create a package out of it, and then push it to NPM. But otherwise, it's paired quite nicely with the Jeesh thus far.\n. the point is to iterate over every node passed in the selector. the point of returning is to continue the jQuery chain (it's the responsible plugin thing to do)\n. np\n. it's noted here: http://docs.jquery.com/Plugins/Authoring\n. ",
    "partheseas": "Glad I could help regardless. :)\n. Alright. Some people with less experience working with numbers then me might not see how that would work, so it'd be very nice to have that in the docs.\nRather then look at it as negative 50 pixels, I prefer to look at it as 50 pixels inverted, which isn't really correct, but it makes more sense in the circumstance and I think it's just a little more elegant. I guess it's nice to leave invert there anyway, for someone who finds that the more elegant solution.\nIn the end, what matters is making it easy for every one, and as long as both inversion methods can be implemented together, they might as well be. Your plugin inspired me to make my own for the library I use, and I opted to exclude any sort of direct invert parameter, so I just thought I'd bring it up, see what you think.\n. ",
    "acetous": "See 1318dca0d6cad3b45d85 for the changes I would consider. But it helps just a bit.\n. Pull request in #5.\n. ",
    "eric": "Nice.\n. ",
    "netlesh": "So,is it possible in android?\n. ",
    "magebarf": "@netlesh I do believe it should work fine, with the \"default\" Android Browser at least. Chrome for Android seems to have had the support added quite recently (looking at their discussion).\nA good reference for this kind of questions (the link is specifically for the Orientation/Motion events): http://caniuse.com/deviceorientation\n. Yup, it should be a quite straight forward option, not needing too much of an explanation.\nMy ambiguous description was intended to convey the message that it was useful when you were using a combination of Plax and Turn.js, as you might want to enable parallax scrolling for elements only on the page you are currently watching, and disabling it in between.\nAnother thing that I started to wonder a bit about today, is why both the $(this).position() and this.offset[Left[Top] are used in the initialization of the non-background layers, and if possibly the layer.origin variables should be set to the $(this).position values instead.\nAs far as I can tell though, after refreshing my memory of the jQuery documentation is that they should be the same values. Reading up a bit on the jQuery code, the only potential difference I can see is that the .position() values deducts the margin, which I'm unsure if the offset values handles?\nAlso, I'm unsure if Ender differs in this aspect?\nPlease pitch your thoughts on this... It works just fine in my use cases with these commits in place, but I might be missing something outside of my scenario...\n. And to fill in after a bit more research on Ender, and more specifically Jeesh/Bonzo (which I assume is the parts of Ender meant):\nIt does actually not have any .position() function, and thus I believe that commit 918b527c6984e4e97ecbeb36d111dc341a273298 broke ender/Jeesh compatibility (modifying the examples att current head to load Jeesh instead of jQuery logs \"Uncaught TypeError: Object [object Array] has no method 'position'\" to the console).\n. I'll make sure to put it up as a separate issue, as its not really related to this pull request.\nI can prepare a small patch to remove the usage of .position instead of the offset properties, and it'll be back on track again, as that as far as I can tell is the only part incompatible with the default Ender package (Jeesh).\n. Sorry, slippery keyboard, will write up a proper pull request with only the interesting commits... :)\n. I'll do my best to do a a follow up to this once the tickets over at the Bonzo repository (https://github.com/ded/bonzo/issues/119 & https://github.com/ded/bonzo/issues/120) has been closed in some way or another.\n. Thought I'd sent the last of my findings over. :)\nThis will most probably be the last pull request from my end for a while.\n. Thanks for an awesome plugin to start off with! It's just the right level of complexity and features, and the execution and experience is great! :+1:\n. My experience of different browsers has been quite similar when it comes to the performance...\nAny example/snippet you could share, so one could see what exactly is going on?\nWith that size of pictures though, I guess the browsers' own rendering engines might affect things quite a bit as well, so maybe its not javascript related?\n. I can definitely repeat what you've found, I see clearly better performance using IE, FF and Opera, compared to Chrome (do not have Safari at hand for the moment).\nI did a profiling run using Chrome's Developer tools though, and aside from a bit of idle time (had to move my mouse between the developer tools and the page) there is not really much time spent either in jQuery or plax itself... Almost all of it, according to the profiler, is spent within internal browser code (the \"(program)\" item).\n\nThe question is if the issue is within WebKit or with Safari/Chrome's stuffing... Seeing as Opera is working fine, and I believe them to have switched over to WebKit already, I would rather believe it is something specific to Safari or Chrome...\nMaybe this is a good test case to provide to Chromium?\n. Not able to reproduce on iPhone, iOS 7.0.4... I've tried enabling/disabling about 20 times without it stopping to work...\nHow frequent does this happen on your end? Every second time? Every 50th time?\nTwo differences in how I use it compared to the sample you give;\n- I do not use a activityTarget for enable.\n- Each img element has data-xrange, data-yrange, and data-invert attributes and a specific class for \"tagging\". Then I simply do $('.PlaxLayer', '#SlideOne').plaxify() to apply to all elements at the same time, instead of calling .plaxify once for each element.\nOtherwise I use it pretty much identical to your approach.\n. ",
    "dawnerd": "I managed to fix it by doing something like this:\njavascript\ntry{\n      var x      = moveable() ? e.rotationRate.beta/3  : e.pageX,\n          y      = moveable() ? e.rotationRate.alpha/3 : e.pageY,\n          hRatio = x/(moveable() ? 360 : docWidth),\n          vRatio = y/(moveable() ? 360 : docHeight),\n          layer, i\n    } catch(err) {\n      var x      = e.pageX/4,\n          y      = e.pageY/4,\n          hRatio = x/(moveable() ? 360 : docWidth),\n          vRatio = y/(moveable() ? 360 : docHeight),\n          layer, i\n    }\n. ",
    "pastjean": "pull request in #9\n. Hratio and vratio could be changed also\n. ",
    "djbender": "Maybe I'm just confused, but isn't plax listed as a canonical module for ender and therefore should be able to be installed via ender build plax? I'll close the issue if I've just understood all this incorrectly.\n. I understand that Plax will work fine when included manually. \nMy main question is why, then, is it listed as a module here: http://enderjs.com/topic/8-canonical-list-of-ender-modules/ stating that it can be built via ender. Can either of you comment on that? \n. @cameronmcefee yessir! I do concur with that. I'd be happy to discuss this elsewhere...\n. ",
    "ghost": "If you are wondering what this is for, it's so you can do\nender add plax\n. ",
    "dzuelke": "Found one issue already, doing another push soon... I'm actually trying to get background images to move too, just a bit of an issue with percentages as positioning, probably can't do that...\n. 16d0a96 makes sure that if the position is declared using right or bottom instead of left or top, those properties are used for positioning just in case the parent ever resizes and the positioning relative to the right or bottom of the parent should be maintained.\n3f02a4a was the original point of my fiddling: moving stuff around via background-position :)\n. No worries, take your time :)\n. My original code matches a px value, or alternatively, \"0%\", or \"left\"/\"top\" (those are useful during window resizes IIRC) and treats those as 0 px.\nWith @fishenal's change, using \"left\" or \"top\" or a value of \"0%\" will jump into the if(!x || !y) { block because instead of an array with values (which evaluates to true), they'll contain null (which evaluates to false).\n@cameronmcefee Does that make sense?\n. Yup.\nCan be closed then, @cameronmcefee :)\n. ",
    "huwrowlands": "Hi,\nThanks for the quick response.\nI downloaded it from here, earlier today.\n. Works great.\nThanks for the fix.\n. ",
    "arush": "I'm not great with regex stuff sorry!\nSent from my iPhone\nOn 20 Mar 2012, at 10:37, Phil Ricketts\nreply@reply.github.com\nwrote:\n\nThe reason it affects margin-left (I think), is because it does a regexp match on 'left' and 'top' - so values associated with 'margin-left' and 'margin-top' will get picked up by this.\nNot too hard to fix it if you want to look into it, arush?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/cameronmcefee/plax/issues/16#issuecomment-4592542\n. Margins provide a completely different positioning functionality which\nis impossible to achieve through the use of top and left for an\nabsolutely positioned element when it is surrounded by a relatively\npositioned element. I'm sorry I don't really know how else to explain\nit without an example and I have since redesigned my example!\n\nSent from my iPhone\nOn 23 Mar 2012, at 16:42, Cameron McEfee\nreply@reply.github.com\nwrote:\n\nHi Guys,\nThere's no regex. It's specifically targeting the top and left properties. I'm hesitant to support margins as a positioning method. top and left are css properties are specifically designed for coordinate positioning, whereas using margins is technically a workaround.\n@arush Can you provide specific examples of why it would be better to support margin-based positioning.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/cameronmcefee/plax/issues/16#issuecomment-4662900\n. \n",
    "replete": "Sorry, I've confused matters here by misunderstanding @arush's problem. I've removed my posts, and will open a new thread.\n. @arush you could add an intermediate element with {position:relative}, that's how I'd achieve it.\n. http://screencast.com/t/eQqbKFhOnk5\n. ",
    "seanjacob": "Cool thanks for clearing that up.\nFor a work around I've just copied the file and did some renaming so I am calling plax2 on my second zone.\n. ",
    "Sam-Hoult": "This this be implemented?\n. ",
    "graemeblackwood": "I'm finding something similar\u00a0\u2013\u00a0sluggish to load in FF, rather than sluggish once loaded.\nThe page loads, and the objects jiggle slightly on their own (no mouse present) for about 5 seconds, then Plax starts to work.\nI am using some fairly large graphics (dimensionally \u2013\u00a01500x1000px), so maybe this has an impact \u2013 your demo works fine. When I get my use of the plugin live, I can post a link.\n. ",
    "sumerokr": "OSX 10.9.2\nFF 28.0\nDoesn't work at all\nhttp://rebranch.ru/#section-works\n. ",
    "fletom": "Sure, but the easiest way I can think of showing you is on our staging server. Can you add me on jabber/Skype? (fletcher@nomulous.com / fletcher.tomalty)\n. Never mind about this. After playing around with it some more, I've figured out that it does seem to work, except that since for bottom: and right: a calculation has to be made, if PLAX is enabled before less.js finishes rendering our CSS, it calculates the wrong values. Still not sure how to fix it, but it isn't actually a problem with PLAX.\n. ",
    "sevenaces": "Cool :)\n. ",
    "zpao": "This is causing a bad behavior with Firefox 14+ on desktop where motion detection is triggered because window.DeviceMotionEvent exists if we can use the accelerometer (may need MBP, my MBA didn't trigger). The result is a \"Tatooine earthquake\" on Github's 404 pages (see https://bugzilla.mozilla.org/show_bug.cgi?id=768634)\n. ",
    "dougt": "I'd hate to see that you can not depend on the existing of .DeviceMotionEvent.  You can instead just use a low pass filter to filter out the noise.\n. Something like:  https://dl.dropbox.com/u/8727858/plax_low_pass_filter.diff\n. fwiw, i created a pull request for that patch. \n. ",
    "Mviner04": "Cool, I tried that patch in both the sites we are developing that use Plax and it fixed them both. Thanks for your work on this!\nUpdate: Actually just noticed there is still some jitter happening, may just need to adjust the filter tolerance level settings though, also worth noting I'm not looking in mobile at all as we have separate mobile versions without the Parallax effect.\n. Looks good! Thanks!\n. ",
    "Skoua": "Ok sorry I made the moveable() function to always return false and it solves the problem.\n. Hey.\nIt's been a while but I think you can change line 110 to return false; and it will do the trick but you'll lose mobile support as I understand the comments.\n. ",
    "jaredrethman": "Skoua, i know its a long time ago. but which lines of code did you change. I seam to be having the same issue.\nIt works with an older version of Plax. But the movement is a lot better with the newer version, before it stops.\nIt works perfect on a desktop, the error only occurs when viewing it on my Galaxy tab.\nAny ideas?\n. Hey @cameronmcefee \nThanks a mill for getting back to me.\nAlmost exactly \"point for point\" how you described it above is how i tried to tackle this. But i kept running into issues, for instance i was attaching the invert, x, yRange(s) to the elements like on the 404 github page, i didn't know how to (Cause i'm such a noob) update the elements when resized. So i eventually had success doing it the way you mentioned step for step, in the above two functions and then running this resize() function below, so it didn't set my computer alight :)\n$(window).resize(function() {\n    disablePlax();\n    if (plaxDisabled)\n        clearTimeout(plaxDisabled);\n    plaxDisabled = setTimeout(function() {\n        enablePlax();\n    }, 20);\n});\nAnd it seamed to do the trick, it shudders a bit - but it works. Thanks again for Plax and your help mate.\nThe support for accelerometer is what sold it for me, so with a couple of hacks, it can also be responsive :) . Also i did try using the update from - https://github.com/cameronmcefee/plax/pull/36, but it through an error and froze every time on my Galaxy note 10.1 - but i think that has something to do with another plugin i'm using...  not sure, maybe if its cool i could send you the finished product and you could let me know what you think about how I've implemented your code?\n. The reason i needed to use the resize event like this is that i needed to run disablePlax(); while/during the resize event and then once complete then start Plax up again - enablePlax();. Not sure, as i said, i'm still learning :)\n. Hey VBK,\nWhat I did was create two sets of data objects on each div, like so.\n\"<\"div class=\"js-plaxify\" data-xrangesml=\"25\" data-yrangesml=\"35\" data-xrangelrg=\"50\" data-yrangelrg=\"70\" id=\"parallax_ele\">\"\nThen I created three separate functions, one for each data object size (Small and large) and one to disable and clear all Plax'd elements.\nFor Desktop:\nfunction enableDeskPlax(){\n     var layers = $('.js-plaxify')\n        var plaxDesk = $.each(layers, function(index, layer){\n        $(layer).plaxify({\n            xRange: $(layer).data('xrangelrg') || 0,\n            yRange: $(layer).data('yrangelrg') || 0,\n            invert: $(layer).data('invert') || false\n        })\n    })\n    $.plax.enable();\n}\nFor Mobile:\nfunction enableMobiPlax(){\n     var layers = $('.js-plaxify')\n        var plaxMobi = $.each(layers, function(index, layer){\n        $(layer).plaxify({\n            xRange: $(layer).data('xrangesml') || 0,\n            yRange: $(layer).data('yrangesml') || 0,\n            invert: $(layer).data('invert') || false\n        })\n    })\n    $.plax.enable();\n}\nClearing function:\nfunction disablePlax(){\n    $.plax.disable({ \"clearLayers\": true })\n    $('div.js-plaxify[style]').css('top', ''); //use jQuery to clear all inline styles generated by Plax\n    $('div.js-plaxify[style]').css('left', ''); //use jQuery to clear all inline styles generated by Plax\n}\nThen I setup a function that gets run through on load and on resize();\nfunction resizeShit() {\n    disablePlax(); //Start by clearing Plax, especially for resize()\n    var windowSize = $(window).width();\n    if (windowSize < 769){\n        enableMobiPlax();\n    } else {\n        enableDeskPlax();\n        }\n}\nI would suggest using something like the debounce resize method, or Camerons above mentioned plugin to do your resizing, otherwise each of those calls gets fired a gizilian times and your \"browser might burst into flames\".\nAlso you will need to use Media Queries to swap out the background images, in conjunction with something like \nrespond.js for cross browser support And you will need to size down the wrapper on each iteration too.\nLastly, I haven't had good luck with the later versions of plax the earlier versions have worked better for me.\nHope this helps.\n. Sorry mate, its my portfolio... and i have put it on hold until i get some more free time :)\nYou need to make sure you run either enableDeskPlax() or enableMobiPlax() onResize. I would suggest putting in a console.log(\"Plax Enabled\"); into both functions and check the console to see if they get called.\nCould you post your code to have a look.\n. ",
    "iblamefish": "+1\n. ",
    "yury": "thanks \n. ",
    "AgustinVignoli": "Thanks for you reply!\nI was thinking that may would work if I call the function from the  tag of the iframe web too, I mean, call it as a parent function, to keep executing the plugin, I\u00b4m going to try that and\u00b4ll let you know.\npd: sorry for my bad english, I speak spanish so I\u00b4m trying to comunicate as well as I can ;)\n. ",
    "hjujah": "Thanks a lot for the tip! Great plugin, btw... I love it\n. ",
    "vbk": "@Lawless55 \nCould you tell me if you are able to responsify? Please let me know how you achieved it and provide me the code if possible.  \nThanks!\n. Thank you!\n. ",
    "Dwtbc": "Hello Lawless55\nI tried your code but I can't seem to get it working.\nWhen I use your code, the PLAX effect gets turned off.\nHave you got a demo of what you've made?\nDaniel\n. ",
    "xaolas": "Its work on resize:\n``` javascript\n    $('.forest__man, .forest__lens').plaxify();\n    $.plax.enable();\n$(window).resize(function() {\n    $('.forest__man, .forest__lens').removeAttr('style');\n});\n\n```\n. ",
    "danferth": "My bad, you are correct. fixed the \"absolutely positioned\" comment.\n. ",
    "senerdude": "here is the link : http://pureservice.me/PlaxTest.html\nI'm looking at 1920x1080px. IE(7+), firefox and opera fine. Chrome and Safari working slow in full screen (but if you resize to browser smaller size they will fine too..)\nI think its not javascript related. but just asking for sure and let you know the issue=)\nthank you\n. I agree..\nI did more test:\niphone 4 ios6 -Safari -Landscape: fine\niphone 4 ios6 -Safari -Portrait: fine\niphone 5 ios7 -Safari -Landscape: fine\niphone 5 ios7 -Safari -Portrait: fine\niphone 5 ios7 -Chrome -Landscape: fine\niphone 5 ios7 -Chrome -Portrait: fine\nipad Mini ios6 -Safari -Landscape: fine\nipad Mini  ios6 -Safari -Portrait: fine\nipad Mini  ios6 -Chrome -Landscape: fine (first time load it did little frame jump thats all.. I think its not important)\nipad Mini  ios6 -Chrome -Portrait: fine\nipad 2 ios6 -Safari -Landscape: fine\nipad 2 ios6 -Safari -Portrait: fine\nSamsung Note3 Android 4.3 -Chrome -Portrait: Slow\nSamsung Note3 Android 4.3 -Chrome -Landscape: Very Slow\nSamsung Note3 Android 4.3 -Firefox -Portrait: fine\nSamsung Note3 Android 4.3 -Firefox -Landscape: fine (axis working wrong direction)\nSamsung Note3 Android 4.3 -Default Browser -Portrait: fine\nSamsung Note3 Android 4.3 -Default Browser -Landscape: fine (axis working wrong direction)\nSamsung Note3 Android 4.3 -Opera -Portrait: fine\nSamsung Note3 Android 4.3 -Opera -Landscape: fine (axis working wrong direction)\nSamsung Note3 Android 4.3 -Opera Mini -Portrait: not working\nSamsung Note3 Android 4.3 -Opera Mini -Landscape: not working\nSamsung Note3 Android 4.3 -Dolphin -Portrait: Slow\nSamsung Note3 Android 4.3 -Dolphin -Landscape: Slow\n. you can test from : http://pureservice.me/PlaxTest.html\nI noticed (iphone5-ios7) plax working first load and rotation. I just touched screen and it stops working. tryed again continue to work.. after I clicked emty links on the page (it return false) stop worked again. something intturped code but I'm not sure what it is.\nI'm optimizing my codes, I will send you when I finis it.. you can see oter screens.\nthank you\n. its only stop in IOS. in android we tryed everyting still continue to work. \n. ",
    "craigblagg": "No problem, will clean up over the next day or 2 and update the pull request when done.\n. Very good point.\nI\u2019ll remove that from being a flag, and just be expected behaviour.\nOn 27 Mar 2014, at 17:36, Cameron McEfee notifications@github.com wrote:\n\nI've also implemented an option, allowing for use of this, on plax layers contained within fixed elements. Currently if the plax layer is a fixed element, and following scroll it would be calculated as outside the viewport, movement is stopped even though it is still visible. I've added an option to declare that the plax is fixed - and continue it's movement.\nSorry, I forgot to ask about this. I haven't had a chance to test out the case you've mentioned this resolves, but from your description this sounds like it's a bug, more than something that needs a feature toggle. Should the fixed position be something that is detected rather than flagged with a setting, or can you see situations where you'd actually want the erratic behavior?\n\u2014\nReply to this email directly or view it on GitHub.\n. That should now be looking tidier.\n\nAnd handling of fixed position elements is no longer behind a flag, and simply default behaviour.\n. el.style[t] !== undefined when the browser supports 2d transforms aswell as 3d transforms.\nSo checks back on compatibility, it's to cover FF3.5 - <10; IE9; Safari 3.1- <4; Opera 10.5 - <15 . Where 2d transforms were supported but not 3d. Without the further check, we would attempt to translate3d( on these, but be left with no movement.\nI've been using it as a snippet for a while, and was lifted pretty much straight from the post at: http://tiffanybbrown.com/2012/09/04/testing-for-css-3d-transforms-support/\n. ",
    "Acccent": "Note: apparently using translate3d, while it does increase performance significantly, messes up with the stack order... more info here:\nhttp://philipwalton.com/articles/what-no-one-told-you-about-z-index/\nhttp://stackoverflow.com/questions/5472802/css-z-index-lost-after-webkit-transform-translate3d (using the solution suggested in that link didn't fix anything for me)\nAlso for some reason no more than 9/10 layers can be displayed without going back to the top/left method.\nedit: well I changed all of the instances of translate3D to use only translate itself, which takes no z value, and it works: http://pastebin.com/hV3ZXRFj I don't know how to commit a change on GitHub, and also I removed the browser support check because I didn't know how to adapt it to the new method (so now if the browser doesn't support translate but it's set on in the plugin's options, the parallaxing just won't work instead of reverting back to top/left)\n. ",
    "fishenal": "@cameronmcefee @dzuelke thank you for replying. forgive me my poor English, after some test I understand finally.\nx = '0%'.match(/^((-?\\d+)\\s*px|0+\\s*%|left)$/);\n//return ['0%','0%',undefined]\nx = '0%'.match(/^((-?\\d+)\\s*px)$/);\n//return null\nif '%' and 'left' match,  'x' return null rather than an array , that makes code return unexpection.\nthank you, I think I learn a lot.\n. ",
    "pakman198": "hey thanks, just saved my life :D\n. ",
    "classicemi": "I guess it's because the inViewport function returns false. The parent Element's offsetHeight is 0 when the element contains only one child element and the child element's position is absolute.\nI think the only way to solve this problem is giving the absolute positioned element a wrapper to expand the parent element's offsetHeight if we don't change the inViewport function.\n. ",
    "bronzehedwick": "Gotcha, thanks!\n. ",
    "energyuser": "Sorry, I'm not that good in javascript. I hoped that you could update it but oh well...\n. Thanks guys! I hope you come up with something and @dmethvin yes: https://github.com/404 Also, when I replaced that code it worked! @cameronmcefee but to make it work I had to defer=\"defer\" my script and the other one that activates plax.\n. Yes, that worked as I commented above, perhaps you can change that in the code of the official plugin?\n. ",
    "dmethvin": "It's possible this can be fixed by changing plaxActivityTarget = $(window) to plaxActivityTarget = $(document.body) but I'm not familiar enough with the code to test that hypothesis. \nIs this code still being used at GitHub? If so we'd want to be sure we didn't break it with a jQuery update. :smiling_imp: \n. "
}